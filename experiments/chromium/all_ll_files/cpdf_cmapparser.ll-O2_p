; ModuleID = '../../third_party/pdfium/core/fpdfapi/font/cpdf_cmapparser.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/font/cpdf_cmapparser.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_CMapParser = type { i32, i32, %"class.fxcrt::UnownedPtr", %"class.std::__1::vector.1", %"class.std::__1::vector.1", %"class.std::__1::vector.12", %"class.fxcrt::ByteString", [4 x i32] }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_CMap* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"*, %"class.std::__1::__compressed_pair.2" }
%"struct.CPDF_CMap::CodeRange" = type { i64, [4 x i8], [4 x i8] }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.CPDF_CMap::CodeRange"* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"*, %"class.std::__1::__compressed_pair.14" }
%"struct.CPDF_CMap::CIDRange" = type { i32, i32, i16 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.CPDF_CMap::CIDRange"* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CPDF_CMap = type { %"class.fxcrt::Retainable", i8, i8, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector.7", %"class.std::__1::vector.12", %"class.fxcrt::UnownedPtr.19" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { i64*, i64, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i16*, i16*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i16* }
%"class.fxcrt::UnownedPtr.19" = type { %struct.FXCMAP_CMap* }
%struct.FXCMAP_CMap = type { i8*, i16*, %struct.FXCMAP_DWordCIDMap*, i16, i16, i8, i8 }
%struct.FXCMAP_DWordCIDMap = type { i16, i16, i16, i16 }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.23", i64 }
%"class.fxcrt::UnownedPtr.23" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.1"* }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"struct.CPDF_CMap::CodeRange" }

$_ZNSt3__120back_insert_iteratorINS_6vectorIN9CPDF_CMap9CodeRangeENS_9allocatorIS3_EEEEEaSEOS3_ = comdat any

@.str.11 = private unnamed_addr constant [4 x i8] c"GB1\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"CNS1\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"Japan1\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"Korea1\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"UCS\00", align 1

@_ZN15CPDF_CMapParserC1EP9CPDF_CMap = hidden unnamed_addr alias void (%class.CPDF_CMapParser*, %class.CPDF_CMap*), void (%class.CPDF_CMapParser*, %class.CPDF_CMap*)* @_ZN15CPDF_CMapParserC2EP9CPDF_CMap
@_ZN15CPDF_CMapParserD1Ev = hidden unnamed_addr alias void (%class.CPDF_CMapParser*), void (%class.CPDF_CMapParser*)* @_ZN15CPDF_CMapParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_CMapParserC2EP9CPDF_CMap(%class.CPDF_CMapParser*, %class.CPDF_CMap*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 2, i32 0
  store %class.CPDF_CMap* %1, %class.CPDF_CMap** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 3
  %7 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 6
  %8 = bitcast %"class.std::__1::vector.1"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  tail call void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"* %7) #11
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_CMapParserD2Ev(%class.CPDF_CMapParser*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.12", align 16
  %3 = alloca %"class.std::__1::vector.1", align 16
  %4 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 2, i32 0
  %5 = load %class.CPDF_CMap*, %class.CPDF_CMap** %4, align 8
  %6 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 5
  %7 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 5, i32 0, i32 1
  %8 = bitcast %"struct.CPDF_CMap::CIDRange"** %7 to i64*
  %9 = bitcast %"class.std::__1::vector.12"* %6 to <2 x i64>*
  %10 = load <2 x i64>, <2 x i64>* %9, align 8
  %11 = bitcast %"class.std::__1::vector.12"* %2 to <2 x i64>*
  store <2 x i64> %10, <2 x i64>* %11, align 16
  %12 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.CPDF_CMap::CIDRange"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.CPDF_CMap::CIDRange"** %15 to i64*
  store i64 %14, i64* %16, align 16
  %17 = bitcast %"class.std::__1::vector.12"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  call void @_ZN9CPDF_CMap21SetAdditionalMappingsENSt3__16vectorINS_8CIDRangeENS0_9allocatorIS2_EEEE(%class.CPDF_CMap* %5, %"class.std::__1::vector.12"* nonnull %2) #11
  %18 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %2, i64 0, i32 0, i32 0
  %19 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %18, align 16
  %20 = icmp eq %"struct.CPDF_CMap::CIDRange"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %2, i64 0, i32 0, i32 1
  %23 = bitcast %"struct.CPDF_CMap::CIDRange"** %22 to i64*
  %24 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %19 to i64
  store i64 %24, i64* %23, align 8
  %25 = bitcast %"struct.CPDF_CMap::CIDRange"* %19 to i8*
  call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %1, %21
  %27 = load %class.CPDF_CMap*, %class.CPDF_CMap** %4, align 8
  %28 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 3
  %29 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 3, i32 0, i32 1
  %30 = bitcast %"struct.CPDF_CMap::CodeRange"** %29 to i64*
  %31 = bitcast %"class.std::__1::vector.1"* %28 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  %33 = bitcast %"class.std::__1::vector.1"* %3 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %33, align 16
  %34 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"struct.CPDF_CMap::CodeRange"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.CPDF_CMap::CodeRange"** %37 to i64*
  store i64 %36, i64* %38, align 16
  %39 = bitcast %"class.std::__1::vector.1"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #11
  call void @_ZN9CPDF_CMap29SetMixedFourByteLeadingRangesENSt3__16vectorINS_9CodeRangeENS0_9allocatorIS2_EEEE(%class.CPDF_CMap* %27, %"class.std::__1::vector.1"* nonnull %3) #11
  %40 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 0
  %41 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %40, align 16
  %42 = icmp eq %"struct.CPDF_CMap::CodeRange"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %26
  %44 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %3, i64 0, i32 0, i32 1
  %45 = bitcast %"struct.CPDF_CMap::CodeRange"** %44 to i64*
  %46 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %41 to i64
  store i64 %46, i64* %45, align 8
  %47 = bitcast %"struct.CPDF_CMap::CodeRange"* %41 to i8*
  call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %26, %43
  %49 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 6
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %49) #11
  %50 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %6, i64 0, i32 0, i32 0
  %51 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %50, align 8
  %52 = icmp eq %"struct.CPDF_CMap::CIDRange"* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %51 to i64
  store i64 %54, i64* %8, align 8
  %55 = bitcast %"struct.CPDF_CMap::CIDRange"* %51 to i8*
  call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %48, %53
  %57 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 4, i32 0, i32 0
  %58 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %57, align 8
  %59 = icmp eq %"struct.CPDF_CMap::CodeRange"* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %58 to i64
  %62 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 4, i32 0, i32 1
  %63 = bitcast %"struct.CPDF_CMap::CodeRange"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast %"struct.CPDF_CMap::CodeRange"* %58 to i8*
  call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %56, %60
  %66 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %28, i64 0, i32 0, i32 0
  %67 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %66, align 8
  %68 = icmp eq %"struct.CPDF_CMap::CodeRange"* %67, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %65
  %70 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %67 to i64
  store i64 %70, i64* %30, align 8
  %71 = bitcast %"struct.CPDF_CMap::CodeRange"* %67 to i8*
  call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %65, %69
  ret void
}

declare void @_ZN9CPDF_CMap21SetAdditionalMappingsENSt3__16vectorINS_8CIDRangeENS0_9allocatorIS2_EEEE(%class.CPDF_CMap*, %"class.std::__1::vector.12"*) local_unnamed_addr #1

declare void @_ZN9CPDF_CMap29SetMixedFourByteLeadingRangesENSt3__16vectorINS_9CodeRangeENS0_9allocatorIS2_EEEE(%class.CPDF_CMap*, %"class.std::__1::vector.1"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_CMapParser9ParseWordEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMapParser*, %"class.fxcrt::StringViewTemplate"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %9 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %106 [
    i64 12, label %19
    i64 13, label %26
    i64 11, label %33
    i64 10, label %40
    i64 6, label %49
    i64 9, label %17
    i64 19, label %15
    i64 7, label %13
  ]

13:                                               ; preds = %2
  %14 = load i8, i8* %10, align 1
  br label %99

15:                                               ; preds = %2
  %16 = load i8, i8* %10, align 1
  br label %90

17:                                               ; preds = %2
  %18 = load i8, i8* %10, align 1
  br label %61

19:                                               ; preds = %2
  %20 = load i8, i8* %10, align 1
  %21 = icmp eq i8 %20, 98
  br i1 %21, label %22, label %106

22:                                               ; preds = %19
  %23 = getelementptr inbounds i8, i8* %10, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 101
  br i1 %25, label %474, label %106

26:                                               ; preds = %2
  %27 = load i8, i8* %10, align 1
  %28 = icmp eq i8 %27, 98
  br i1 %28, label %29, label %106

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %10, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 101
  br i1 %32, label %427, label %106

33:                                               ; preds = %2
  %34 = load i8, i8* %10, align 1
  %35 = icmp eq i8 %34, 101
  br i1 %35, label %36, label %80

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* %10, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 110
  br i1 %39, label %391, label %106

40:                                               ; preds = %2
  %41 = load i8, i8* %10, align 1
  %42 = icmp eq i8 %41, 101
  br i1 %42, label %43, label %106

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %10, i64 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 110
  br i1 %46, label %359, label %106

47:                                               ; preds = %423, %387
  %48 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  store i32 0, i32* %48, align 8
  br label %147

49:                                               ; preds = %2
  %50 = load i8, i8* %10, align 1
  %51 = icmp eq i8 %50, 47
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = getelementptr inbounds i8, i8* %10, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 87
  br i1 %55, label %341, label %56

56:                                               ; preds = %353, %349, %345, %341, %52, %49
  %57 = add nuw nsw i64 %12, -7
  %58 = lshr i64 %57, 1
  %59 = shl i64 %57, 63
  %60 = or i64 %58, %59
  switch i64 %60, label %106 [
    i64 1, label %61
    i64 2, label %80
    i64 6, label %90
    i64 0, label %99
  ]

61:                                               ; preds = %17, %56
  %62 = phi i8 [ %18, %17 ], [ %50, %56 ]
  %63 = icmp eq i8 %62, 47
  br i1 %63, label %64, label %68

64:                                               ; preds = %61
  %65 = getelementptr inbounds i8, i8* %10, i64 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 82
  br i1 %67, label %311, label %68

68:                                               ; preds = %335, %331, %327, %323, %319, %315, %311, %64, %61
  %69 = add nsw i64 %12, -7
  %70 = lshr i64 %69, 1
  %71 = shl i64 %69, 63
  %72 = or i64 %70, %71
  switch i64 %72, label %106 [
    i64 1, label %73
    i64 2, label %80
    i64 6, label %90
    i64 0, label %99
  ]

73:                                               ; preds = %68
  br i1 %63, label %74, label %78

74:                                               ; preds = %73
  %75 = getelementptr inbounds i8, i8* %10, i64 1
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 79
  br i1 %77, label %281, label %78

78:                                               ; preds = %305, %301, %297, %293, %289, %285, %281, %74, %73
  %79 = icmp eq i64 %12, 7
  br i1 %79, label %99, label %106

80:                                               ; preds = %33, %56, %68
  %81 = phi i8 [ %50, %56 ], [ %62, %68 ], [ %34, %33 ]
  %82 = icmp eq i8 %81, 47
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = getelementptr inbounds i8, i8* %10, i64 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, 83
  br i1 %86, label %243, label %87

87:                                               ; preds = %275, %271, %267, %263, %259, %255, %251, %247, %243, %83, %80
  %88 = phi i8 [ 47, %275 ], [ 47, %271 ], [ 47, %267 ], [ 47, %263 ], [ 47, %259 ], [ 47, %255 ], [ 47, %251 ], [ 47, %247 ], [ 47, %243 ], [ 47, %83 ], [ %81, %80 ]
  %89 = icmp eq i64 %12, 7
  br i1 %89, label %99, label %106

90:                                               ; preds = %15, %56, %68
  %91 = phi i8 [ %16, %15 ], [ %50, %56 ], [ %62, %68 ]
  %92 = icmp eq i8 %91, 98
  br i1 %92, label %93, label %97

93:                                               ; preds = %90
  %94 = getelementptr inbounds i8, i8* %10, i64 1
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 101
  br i1 %96, label %172, label %97

97:                                               ; preds = %236, %232, %228, %224, %220, %216, %212, %208, %204, %200, %196, %192, %188, %184, %180, %176, %172, %93, %90
  %98 = icmp eq i64 %12, 7
  br i1 %98, label %99, label %106

99:                                               ; preds = %78, %87, %13, %56, %68, %97
  %100 = phi i8 [ %14, %13 ], [ %50, %56 ], [ %62, %68 ], [ %62, %78 ], [ %88, %87 ], [ %91, %97 ]
  %101 = icmp eq i8 %100, 117
  br i1 %101, label %102, label %106

102:                                              ; preds = %99
  %103 = getelementptr inbounds i8, i8* %10, i64 1
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, 115
  br i1 %105, label %152, label %106

106:                                              ; preds = %78, %87, %423, %419, %415, %411, %407, %403, %399, %395, %391, %36, %99, %102, %152, %156, %160, %164, %168, %40, %43, %359, %363, %367, %371, %375, %379, %383, %387, %26, %29, %427, %431, %435, %439, %443, %447, %451, %455, %459, %463, %467, %19, %22, %474, %478, %482, %486, %490, %494, %498, %502, %506, %510, %2, %56, %68, %97
  %107 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  switch i32 %108, label %147 [
    i32 1, label %109
    i32 2, label %112
    i32 3, label %115
    i32 4, label %116
    i32 5, label %134
    i32 6, label %135
    i32 7, label %144
  ]

109:                                              ; preds = %106
  %110 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  %111 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* align 8 %111, i64 16, i1 false)
  call void @_ZN15CPDF_CMapParser9HandleCidEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMapParser* %0, %"class.fxcrt::StringViewTemplate"* nonnull %3)
  br label %147

112:                                              ; preds = %106
  %113 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  %114 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %113, i8* align 8 %114, i64 16, i1 false)
  call void @_ZN15CPDF_CMapParser9HandleCidEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMapParser* %0, %"class.fxcrt::StringViewTemplate"* nonnull %4)
  br label %147

115:                                              ; preds = %106
  store i32 0, i32* %107, align 8
  br label %147

116:                                              ; preds = %106
  %117 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 2, i32 0
  %118 = load %class.CPDF_CMap*, %class.CPDF_CMap** %117, align 8
  %119 = icmp ult i64 %12, 3
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 0, i64 16, i1 false) #11, !alias.scope !2
  br label %131

122:                                              ; preds = %116
  %123 = icmp eq i8* %10, null
  br i1 %123, label %124, label %126

124:                                              ; preds = %122
  %125 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 16, i1 false) #11, !alias.scope !5
  br label %131

126:                                              ; preds = %122
  %127 = add i64 %12, -2
  %128 = getelementptr inbounds i8, i8* %10, i64 2
  %129 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %128, i8** %129, align 8, !alias.scope !5
  %130 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %127, i64* %130, align 8, !alias.scope !5
  br label %131

131:                                              ; preds = %120, %124, %126
  %132 = call zeroext i8 @_ZN15CPDF_CMapParser19CharsetFromOrderingEN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate"* nonnull %5)
  %133 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %118, i64 0, i32 3
  store i8 %132, i8* %133, align 2
  store i32 0, i32* %107, align 8
  br label %147

134:                                              ; preds = %106
  store i32 0, i32* %107, align 8
  br label %147

135:                                              ; preds = %106
  %136 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 2, i32 0
  %137 = load %class.CPDF_CMap*, %class.CPDF_CMap** %136, align 8
  %138 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %139 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %138, i8* align 8 %139, i64 16, i1 false)
  %140 = call i32 @_ZN15CPDF_CMapParser7GetCodeEN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate"* nonnull %6)
  %141 = icmp ne i32 %140, 0
  %142 = zext i1 %141 to i8
  %143 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %137, i64 0, i32 2
  store i8 %142, i8* %143, align 1
  store i32 0, i32* %107, align 8
  br label %147

144:                                              ; preds = %106
  %145 = bitcast %"class.fxcrt::StringViewTemplate"* %7 to i8*
  %146 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %145, i8* align 8 %146, i64 16, i1 false)
  call void @_ZN15CPDF_CMapParser20HandleCodeSpaceRangeEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMapParser* %0, %"class.fxcrt::StringViewTemplate"* nonnull %7)
  br label %147

147:                                              ; preds = %168, %106, %471, %357, %309, %240, %109, %115, %134, %144, %135, %131, %112, %279, %339, %47, %514
  %148 = bitcast %"class.fxcrt::StringViewTemplate"* %8 to i8*
  %149 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %148, i8* align 8 %149, i64 16, i1 false)
  %150 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 6
  %151 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* %150, %"class.fxcrt::StringViewTemplate"* nonnull %8) #11
  ret void

152:                                              ; preds = %102
  %153 = getelementptr inbounds i8, i8* %10, i64 2
  %154 = load i8, i8* %153, align 1
  %155 = icmp eq i8 %154, 101
  br i1 %155, label %156, label %106

156:                                              ; preds = %152
  %157 = getelementptr inbounds i8, i8* %10, i64 3
  %158 = load i8, i8* %157, align 1
  %159 = icmp eq i8 %158, 99
  br i1 %159, label %160, label %106

160:                                              ; preds = %156
  %161 = getelementptr inbounds i8, i8* %10, i64 4
  %162 = load i8, i8* %161, align 1
  %163 = icmp eq i8 %162, 109
  br i1 %163, label %164, label %106

164:                                              ; preds = %160
  %165 = getelementptr inbounds i8, i8* %10, i64 5
  %166 = load i8, i8* %165, align 1
  %167 = icmp eq i8 %166, 97
  br i1 %167, label %168, label %106

168:                                              ; preds = %164
  %169 = getelementptr inbounds i8, i8* %10, i64 6
  %170 = load i8, i8* %169, align 1
  %171 = icmp eq i8 %170, 112
  br i1 %171, label %147, label %106

172:                                              ; preds = %93
  %173 = getelementptr inbounds i8, i8* %10, i64 2
  %174 = load i8, i8* %173, align 1
  %175 = icmp eq i8 %174, 103
  br i1 %175, label %176, label %97

176:                                              ; preds = %172
  %177 = getelementptr inbounds i8, i8* %10, i64 3
  %178 = load i8, i8* %177, align 1
  %179 = icmp eq i8 %178, 105
  br i1 %179, label %180, label %97

180:                                              ; preds = %176
  %181 = getelementptr inbounds i8, i8* %10, i64 4
  %182 = load i8, i8* %181, align 1
  %183 = icmp eq i8 %182, 110
  br i1 %183, label %184, label %97

184:                                              ; preds = %180
  %185 = getelementptr inbounds i8, i8* %10, i64 5
  %186 = load i8, i8* %185, align 1
  %187 = icmp eq i8 %186, 99
  br i1 %187, label %188, label %97

188:                                              ; preds = %184
  %189 = getelementptr inbounds i8, i8* %10, i64 6
  %190 = load i8, i8* %189, align 1
  %191 = icmp eq i8 %190, 111
  br i1 %191, label %192, label %97

192:                                              ; preds = %188
  %193 = getelementptr inbounds i8, i8* %10, i64 7
  %194 = load i8, i8* %193, align 1
  %195 = icmp eq i8 %194, 100
  br i1 %195, label %196, label %97

196:                                              ; preds = %192
  %197 = getelementptr inbounds i8, i8* %10, i64 8
  %198 = load i8, i8* %197, align 1
  %199 = icmp eq i8 %198, 101
  br i1 %199, label %200, label %97

200:                                              ; preds = %196
  %201 = getelementptr inbounds i8, i8* %10, i64 9
  %202 = load i8, i8* %201, align 1
  %203 = icmp eq i8 %202, 115
  br i1 %203, label %204, label %97

204:                                              ; preds = %200
  %205 = getelementptr inbounds i8, i8* %10, i64 10
  %206 = load i8, i8* %205, align 1
  %207 = icmp eq i8 %206, 112
  br i1 %207, label %208, label %97

208:                                              ; preds = %204
  %209 = getelementptr inbounds i8, i8* %10, i64 11
  %210 = load i8, i8* %209, align 1
  %211 = icmp eq i8 %210, 97
  br i1 %211, label %212, label %97

212:                                              ; preds = %208
  %213 = getelementptr inbounds i8, i8* %10, i64 12
  %214 = load i8, i8* %213, align 1
  %215 = icmp eq i8 %214, 99
  br i1 %215, label %216, label %97

216:                                              ; preds = %212
  %217 = getelementptr inbounds i8, i8* %10, i64 13
  %218 = load i8, i8* %217, align 1
  %219 = icmp eq i8 %218, 101
  br i1 %219, label %220, label %97

220:                                              ; preds = %216
  %221 = getelementptr inbounds i8, i8* %10, i64 14
  %222 = load i8, i8* %221, align 1
  %223 = icmp eq i8 %222, 114
  br i1 %223, label %224, label %97

224:                                              ; preds = %220
  %225 = getelementptr inbounds i8, i8* %10, i64 15
  %226 = load i8, i8* %225, align 1
  %227 = icmp eq i8 %226, 97
  br i1 %227, label %228, label %97

228:                                              ; preds = %224
  %229 = getelementptr inbounds i8, i8* %10, i64 16
  %230 = load i8, i8* %229, align 1
  %231 = icmp eq i8 %230, 110
  br i1 %231, label %232, label %97

232:                                              ; preds = %228
  %233 = getelementptr inbounds i8, i8* %10, i64 17
  %234 = load i8, i8* %233, align 1
  %235 = icmp eq i8 %234, 103
  br i1 %235, label %236, label %97

236:                                              ; preds = %232
  %237 = getelementptr inbounds i8, i8* %10, i64 18
  %238 = load i8, i8* %237, align 1
  %239 = icmp eq i8 %238, 101
  br i1 %239, label %240, label %97

240:                                              ; preds = %236
  %241 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  store i32 7, i32* %241, align 8
  %242 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 1
  store i32 0, i32* %242, align 4
  br label %147

243:                                              ; preds = %83
  %244 = getelementptr inbounds i8, i8* %10, i64 2
  %245 = load i8, i8* %244, align 1
  %246 = icmp eq i8 %245, 117
  br i1 %246, label %247, label %87

247:                                              ; preds = %243
  %248 = getelementptr inbounds i8, i8* %10, i64 3
  %249 = load i8, i8* %248, align 1
  %250 = icmp eq i8 %249, 112
  br i1 %250, label %251, label %87

251:                                              ; preds = %247
  %252 = getelementptr inbounds i8, i8* %10, i64 4
  %253 = load i8, i8* %252, align 1
  %254 = icmp eq i8 %253, 112
  br i1 %254, label %255, label %87

255:                                              ; preds = %251
  %256 = getelementptr inbounds i8, i8* %10, i64 5
  %257 = load i8, i8* %256, align 1
  %258 = icmp eq i8 %257, 108
  br i1 %258, label %259, label %87

259:                                              ; preds = %255
  %260 = getelementptr inbounds i8, i8* %10, i64 6
  %261 = load i8, i8* %260, align 1
  %262 = icmp eq i8 %261, 101
  br i1 %262, label %263, label %87

263:                                              ; preds = %259
  %264 = getelementptr inbounds i8, i8* %10, i64 7
  %265 = load i8, i8* %264, align 1
  %266 = icmp eq i8 %265, 109
  br i1 %266, label %267, label %87

267:                                              ; preds = %263
  %268 = getelementptr inbounds i8, i8* %10, i64 8
  %269 = load i8, i8* %268, align 1
  %270 = icmp eq i8 %269, 101
  br i1 %270, label %271, label %87

271:                                              ; preds = %267
  %272 = getelementptr inbounds i8, i8* %10, i64 9
  %273 = load i8, i8* %272, align 1
  %274 = icmp eq i8 %273, 110
  br i1 %274, label %275, label %87

275:                                              ; preds = %271
  %276 = getelementptr inbounds i8, i8* %10, i64 10
  %277 = load i8, i8* %276, align 1
  %278 = icmp eq i8 %277, 116
  br i1 %278, label %279, label %87

279:                                              ; preds = %275
  %280 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  store i32 5, i32* %280, align 8
  br label %147

281:                                              ; preds = %74
  %282 = getelementptr inbounds i8, i8* %10, i64 2
  %283 = load i8, i8* %282, align 1
  %284 = icmp eq i8 %283, 114
  br i1 %284, label %285, label %78

285:                                              ; preds = %281
  %286 = getelementptr inbounds i8, i8* %10, i64 3
  %287 = load i8, i8* %286, align 1
  %288 = icmp eq i8 %287, 100
  br i1 %288, label %289, label %78

289:                                              ; preds = %285
  %290 = getelementptr inbounds i8, i8* %10, i64 4
  %291 = load i8, i8* %290, align 1
  %292 = icmp eq i8 %291, 101
  br i1 %292, label %293, label %78

293:                                              ; preds = %289
  %294 = getelementptr inbounds i8, i8* %10, i64 5
  %295 = load i8, i8* %294, align 1
  %296 = icmp eq i8 %295, 114
  br i1 %296, label %297, label %78

297:                                              ; preds = %293
  %298 = getelementptr inbounds i8, i8* %10, i64 6
  %299 = load i8, i8* %298, align 1
  %300 = icmp eq i8 %299, 105
  br i1 %300, label %301, label %78

301:                                              ; preds = %297
  %302 = getelementptr inbounds i8, i8* %10, i64 7
  %303 = load i8, i8* %302, align 1
  %304 = icmp eq i8 %303, 110
  br i1 %304, label %305, label %78

305:                                              ; preds = %301
  %306 = getelementptr inbounds i8, i8* %10, i64 8
  %307 = load i8, i8* %306, align 1
  %308 = icmp eq i8 %307, 103
  br i1 %308, label %309, label %78

309:                                              ; preds = %305
  %310 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  store i32 4, i32* %310, align 8
  br label %147

311:                                              ; preds = %64
  %312 = getelementptr inbounds i8, i8* %10, i64 2
  %313 = load i8, i8* %312, align 1
  %314 = icmp eq i8 %313, 101
  br i1 %314, label %315, label %68

315:                                              ; preds = %311
  %316 = getelementptr inbounds i8, i8* %10, i64 3
  %317 = load i8, i8* %316, align 1
  %318 = icmp eq i8 %317, 103
  br i1 %318, label %319, label %68

319:                                              ; preds = %315
  %320 = getelementptr inbounds i8, i8* %10, i64 4
  %321 = load i8, i8* %320, align 1
  %322 = icmp eq i8 %321, 105
  br i1 %322, label %323, label %68

323:                                              ; preds = %319
  %324 = getelementptr inbounds i8, i8* %10, i64 5
  %325 = load i8, i8* %324, align 1
  %326 = icmp eq i8 %325, 115
  br i1 %326, label %327, label %68

327:                                              ; preds = %323
  %328 = getelementptr inbounds i8, i8* %10, i64 6
  %329 = load i8, i8* %328, align 1
  %330 = icmp eq i8 %329, 116
  br i1 %330, label %331, label %68

331:                                              ; preds = %327
  %332 = getelementptr inbounds i8, i8* %10, i64 7
  %333 = load i8, i8* %332, align 1
  %334 = icmp eq i8 %333, 114
  br i1 %334, label %335, label %68

335:                                              ; preds = %331
  %336 = getelementptr inbounds i8, i8* %10, i64 8
  %337 = load i8, i8* %336, align 1
  %338 = icmp eq i8 %337, 121
  br i1 %338, label %339, label %68

339:                                              ; preds = %335
  %340 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  store i32 3, i32* %340, align 8
  br label %147

341:                                              ; preds = %52
  %342 = getelementptr inbounds i8, i8* %10, i64 2
  %343 = load i8, i8* %342, align 1
  %344 = icmp eq i8 %343, 77
  br i1 %344, label %345, label %56

345:                                              ; preds = %341
  %346 = getelementptr inbounds i8, i8* %10, i64 3
  %347 = load i8, i8* %346, align 1
  %348 = icmp eq i8 %347, 111
  br i1 %348, label %349, label %56

349:                                              ; preds = %345
  %350 = getelementptr inbounds i8, i8* %10, i64 4
  %351 = load i8, i8* %350, align 1
  %352 = icmp eq i8 %351, 100
  br i1 %352, label %353, label %56

353:                                              ; preds = %349
  %354 = getelementptr inbounds i8, i8* %10, i64 5
  %355 = load i8, i8* %354, align 1
  %356 = icmp eq i8 %355, 101
  br i1 %356, label %357, label %56

357:                                              ; preds = %353
  %358 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  store i32 6, i32* %358, align 8
  br label %147

359:                                              ; preds = %43
  %360 = getelementptr inbounds i8, i8* %10, i64 2
  %361 = load i8, i8* %360, align 1
  %362 = icmp eq i8 %361, 100
  br i1 %362, label %363, label %106

363:                                              ; preds = %359
  %364 = getelementptr inbounds i8, i8* %10, i64 3
  %365 = load i8, i8* %364, align 1
  %366 = icmp eq i8 %365, 99
  br i1 %366, label %367, label %106

367:                                              ; preds = %363
  %368 = getelementptr inbounds i8, i8* %10, i64 4
  %369 = load i8, i8* %368, align 1
  %370 = icmp eq i8 %369, 105
  br i1 %370, label %371, label %106

371:                                              ; preds = %367
  %372 = getelementptr inbounds i8, i8* %10, i64 5
  %373 = load i8, i8* %372, align 1
  %374 = icmp eq i8 %373, 100
  br i1 %374, label %375, label %106

375:                                              ; preds = %371
  %376 = getelementptr inbounds i8, i8* %10, i64 6
  %377 = load i8, i8* %376, align 1
  %378 = icmp eq i8 %377, 99
  br i1 %378, label %379, label %106

379:                                              ; preds = %375
  %380 = getelementptr inbounds i8, i8* %10, i64 7
  %381 = load i8, i8* %380, align 1
  %382 = icmp eq i8 %381, 104
  br i1 %382, label %383, label %106

383:                                              ; preds = %379
  %384 = getelementptr inbounds i8, i8* %10, i64 8
  %385 = load i8, i8* %384, align 1
  %386 = icmp eq i8 %385, 97
  br i1 %386, label %387, label %106

387:                                              ; preds = %383
  %388 = getelementptr inbounds i8, i8* %10, i64 9
  %389 = load i8, i8* %388, align 1
  %390 = icmp eq i8 %389, 114
  br i1 %390, label %47, label %106

391:                                              ; preds = %36
  %392 = getelementptr inbounds i8, i8* %10, i64 2
  %393 = load i8, i8* %392, align 1
  %394 = icmp eq i8 %393, 100
  br i1 %394, label %395, label %106

395:                                              ; preds = %391
  %396 = getelementptr inbounds i8, i8* %10, i64 3
  %397 = load i8, i8* %396, align 1
  %398 = icmp eq i8 %397, 99
  br i1 %398, label %399, label %106

399:                                              ; preds = %395
  %400 = getelementptr inbounds i8, i8* %10, i64 4
  %401 = load i8, i8* %400, align 1
  %402 = icmp eq i8 %401, 105
  br i1 %402, label %403, label %106

403:                                              ; preds = %399
  %404 = getelementptr inbounds i8, i8* %10, i64 5
  %405 = load i8, i8* %404, align 1
  %406 = icmp eq i8 %405, 100
  br i1 %406, label %407, label %106

407:                                              ; preds = %403
  %408 = getelementptr inbounds i8, i8* %10, i64 6
  %409 = load i8, i8* %408, align 1
  %410 = icmp eq i8 %409, 114
  br i1 %410, label %411, label %106

411:                                              ; preds = %407
  %412 = getelementptr inbounds i8, i8* %10, i64 7
  %413 = load i8, i8* %412, align 1
  %414 = icmp eq i8 %413, 97
  br i1 %414, label %415, label %106

415:                                              ; preds = %411
  %416 = getelementptr inbounds i8, i8* %10, i64 8
  %417 = load i8, i8* %416, align 1
  %418 = icmp eq i8 %417, 110
  br i1 %418, label %419, label %106

419:                                              ; preds = %415
  %420 = getelementptr inbounds i8, i8* %10, i64 9
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 103
  br i1 %422, label %423, label %106

423:                                              ; preds = %419
  %424 = getelementptr inbounds i8, i8* %10, i64 10
  %425 = load i8, i8* %424, align 1
  %426 = icmp eq i8 %425, 101
  br i1 %426, label %47, label %106

427:                                              ; preds = %29
  %428 = getelementptr inbounds i8, i8* %10, i64 2
  %429 = load i8, i8* %428, align 1
  %430 = icmp eq i8 %429, 103
  br i1 %430, label %431, label %106

431:                                              ; preds = %427
  %432 = getelementptr inbounds i8, i8* %10, i64 3
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 105
  br i1 %434, label %435, label %106

435:                                              ; preds = %431
  %436 = getelementptr inbounds i8, i8* %10, i64 4
  %437 = load i8, i8* %436, align 1
  %438 = icmp eq i8 %437, 110
  br i1 %438, label %439, label %106

439:                                              ; preds = %435
  %440 = getelementptr inbounds i8, i8* %10, i64 5
  %441 = load i8, i8* %440, align 1
  %442 = icmp eq i8 %441, 99
  br i1 %442, label %443, label %106

443:                                              ; preds = %439
  %444 = getelementptr inbounds i8, i8* %10, i64 6
  %445 = load i8, i8* %444, align 1
  %446 = icmp eq i8 %445, 105
  br i1 %446, label %447, label %106

447:                                              ; preds = %443
  %448 = getelementptr inbounds i8, i8* %10, i64 7
  %449 = load i8, i8* %448, align 1
  %450 = icmp eq i8 %449, 100
  br i1 %450, label %451, label %106

451:                                              ; preds = %447
  %452 = getelementptr inbounds i8, i8* %10, i64 8
  %453 = load i8, i8* %452, align 1
  %454 = icmp eq i8 %453, 114
  br i1 %454, label %455, label %106

455:                                              ; preds = %451
  %456 = getelementptr inbounds i8, i8* %10, i64 9
  %457 = load i8, i8* %456, align 1
  %458 = icmp eq i8 %457, 97
  br i1 %458, label %459, label %106

459:                                              ; preds = %455
  %460 = getelementptr inbounds i8, i8* %10, i64 10
  %461 = load i8, i8* %460, align 1
  %462 = icmp eq i8 %461, 110
  br i1 %462, label %463, label %106

463:                                              ; preds = %459
  %464 = getelementptr inbounds i8, i8* %10, i64 11
  %465 = load i8, i8* %464, align 1
  %466 = icmp eq i8 %465, 103
  br i1 %466, label %467, label %106

467:                                              ; preds = %463
  %468 = getelementptr inbounds i8, i8* %10, i64 12
  %469 = load i8, i8* %468, align 1
  %470 = icmp eq i8 %469, 101
  br i1 %470, label %471, label %106

471:                                              ; preds = %467
  %472 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  store i32 2, i32* %472, align 8
  %473 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 1
  store i32 0, i32* %473, align 4
  br label %147

474:                                              ; preds = %22
  %475 = getelementptr inbounds i8, i8* %10, i64 2
  %476 = load i8, i8* %475, align 1
  %477 = icmp eq i8 %476, 103
  br i1 %477, label %478, label %106

478:                                              ; preds = %474
  %479 = getelementptr inbounds i8, i8* %10, i64 3
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 105
  br i1 %481, label %482, label %106

482:                                              ; preds = %478
  %483 = getelementptr inbounds i8, i8* %10, i64 4
  %484 = load i8, i8* %483, align 1
  %485 = icmp eq i8 %484, 110
  br i1 %485, label %486, label %106

486:                                              ; preds = %482
  %487 = getelementptr inbounds i8, i8* %10, i64 5
  %488 = load i8, i8* %487, align 1
  %489 = icmp eq i8 %488, 99
  br i1 %489, label %490, label %106

490:                                              ; preds = %486
  %491 = getelementptr inbounds i8, i8* %10, i64 6
  %492 = load i8, i8* %491, align 1
  %493 = icmp eq i8 %492, 105
  br i1 %493, label %494, label %106

494:                                              ; preds = %490
  %495 = getelementptr inbounds i8, i8* %10, i64 7
  %496 = load i8, i8* %495, align 1
  %497 = icmp eq i8 %496, 100
  br i1 %497, label %498, label %106

498:                                              ; preds = %494
  %499 = getelementptr inbounds i8, i8* %10, i64 8
  %500 = load i8, i8* %499, align 1
  %501 = icmp eq i8 %500, 99
  br i1 %501, label %502, label %106

502:                                              ; preds = %498
  %503 = getelementptr inbounds i8, i8* %10, i64 9
  %504 = load i8, i8* %503, align 1
  %505 = icmp eq i8 %504, 104
  br i1 %505, label %506, label %106

506:                                              ; preds = %502
  %507 = getelementptr inbounds i8, i8* %10, i64 10
  %508 = load i8, i8* %507, align 1
  %509 = icmp eq i8 %508, 97
  br i1 %509, label %510, label %106

510:                                              ; preds = %506
  %511 = getelementptr inbounds i8, i8* %10, i64 11
  %512 = load i8, i8* %511, align 1
  %513 = icmp eq i8 %512, 114
  br i1 %513, label %514, label %106

514:                                              ; preds = %510
  %515 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  store i32 1, i32* %515, align 8
  %516 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 1
  store i32 0, i32* %516, align 4
  br label %147
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_CMapParser9HandleCidEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMapParser*, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  %7 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  %8 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = call i32 @_ZN15CPDF_CMapParser7GetCodeEN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate"* nonnull %3)
  %10 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 7, i64 %12
  store i32 %9, i32* %13, align 4
  %14 = load i32, i32* %10, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %10, align 4
  %16 = select i1 %6, i32 2, i32 3
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %118, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 7, i64 0
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 7, i64 1
  br i1 %6, label %25, label %22

22:                                               ; preds = %18
  %23 = load i32, i32* %21, align 4
  %24 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 7, i64 2
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi i32 [ %23, %22 ], [ %20, %18 ]
  %27 = phi i32* [ %24, %22 ], [ %21, %18 ]
  %28 = load i32, i32* %27, align 4
  %29 = icmp ult i32 %26, 65536
  br i1 %29, label %30, label %46

30:                                               ; preds = %25
  %31 = icmp ugt i32 %20, %26
  br i1 %31, label %117, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 2, i32 0
  %34 = sub i32 %28, %20
  br label %35

35:                                               ; preds = %32, %35
  %36 = phi i32 [ %20, %32 ], [ %44, %35 ]
  %37 = load %class.CPDF_CMap*, %class.CPDF_CMap** %33, align 8
  %38 = zext i32 %36 to i64
  %39 = add i32 %34, %36
  %40 = trunc i32 %39 to i16
  %41 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %37, i64 0, i32 8, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = getelementptr inbounds i16, i16* %42, i64 %38
  store i16 %40, i16* %43, align 2
  %44 = add i32 %36, 1
  %45 = icmp ugt i32 %44, %26
  br i1 %45, label %117, label %35

46:                                               ; preds = %25
  %47 = trunc i32 %28 to i16
  %48 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 5
  %49 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 5, i32 0, i32 1
  %50 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %49, align 8
  %51 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %52 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %51, align 8
  %53 = icmp ult %"struct.CPDF_CMap::CIDRange"* %50, %52
  %54 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %52 to i64
  br i1 %53, label %55, label %62

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %50, i64 0, i32 0
  store i32 %20, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %50, i64 0, i32 1
  store i32 %26, i32* %57, align 4
  %58 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %50, i64 0, i32 2
  store i16 %47, i16* %58, align 4
  %59 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %50, i64 1
  %60 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %59 to i64
  %61 = bitcast %"struct.CPDF_CMap::CIDRange"** %49 to i64*
  store i64 %60, i64* %61, align 8
  br label %117

62:                                               ; preds = %46
  %63 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %50 to i64
  %64 = bitcast %"struct.CPDF_CMap::CIDRange"** %49 to i64*
  %65 = bitcast %"class.std::__1::vector.12"* %48 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %63, %66
  %68 = sdiv exact i64 %67, 12
  %69 = add nsw i64 %68, 1
  %70 = icmp ugt i64 %69, 1537228672809129301
  br i1 %70, label %71, label %73

71:                                               ; preds = %62
  %72 = bitcast %"class.std::__1::vector.12"* %48 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %72) #13
  unreachable

73:                                               ; preds = %62
  %74 = bitcast %"struct.CPDF_CMap::CIDRange"** %51 to i64*
  %75 = sub i64 %54, %66
  %76 = sdiv exact i64 %75, 12
  %77 = icmp ult i64 %76, 768614336404564650
  br i1 %77, label %78, label %83

78:                                               ; preds = %73
  %79 = shl nsw i64 %76, 1
  %80 = icmp ult i64 %79, %69
  %81 = select i1 %80, i64 %69, i64 %79
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %88, label %83

83:                                               ; preds = %78, %73
  %84 = phi i64 [ %81, %78 ], [ 1537228672809129301, %73 ]
  %85 = mul i64 %84, 12
  %86 = tail call i8* @_Znwm(i64 %85) #12
  %87 = bitcast i8* %86 to %"struct.CPDF_CMap::CIDRange"*
  br label %88

88:                                               ; preds = %83, %78
  %89 = phi i64 [ %84, %83 ], [ 0, %78 ]
  %90 = phi %"struct.CPDF_CMap::CIDRange"* [ %87, %83 ], [ null, %78 ]
  %91 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %90, i64 %68
  %92 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %90, i64 %89
  %93 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %92 to i64
  %94 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %91, i64 0, i32 0
  store i32 %20, i32* %94, align 4
  %95 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %90, i64 %68, i32 1
  store i32 %26, i32* %95, align 4
  %96 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %90, i64 %68, i32 2
  store i16 %47, i16* %96, align 4
  %97 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %91, i64 1
  %98 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %97 to i64
  %99 = getelementptr inbounds %"class.std::__1::vector.12", %"class.std::__1::vector.12"* %48, i64 0, i32 0, i32 0
  %100 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %99, align 8
  %101 = load i64, i64* %64, align 8
  %102 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %100 to i64
  %103 = sub i64 %101, %102
  %104 = sdiv exact i64 %103, -12
  %105 = getelementptr inbounds %"struct.CPDF_CMap::CIDRange", %"struct.CPDF_CMap::CIDRange"* %91, i64 %104
  %106 = ptrtoint %"struct.CPDF_CMap::CIDRange"* %105 to i64
  %107 = icmp sgt i64 %103, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %88
  %109 = bitcast %"struct.CPDF_CMap::CIDRange"* %105 to i8*
  %110 = bitcast %"struct.CPDF_CMap::CIDRange"* %100 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %110, i64 %103, i1 false) #11
  %111 = load %"struct.CPDF_CMap::CIDRange"*, %"struct.CPDF_CMap::CIDRange"** %99, align 8
  br label %112

112:                                              ; preds = %108, %88
  %113 = phi %"struct.CPDF_CMap::CIDRange"* [ %100, %88 ], [ %111, %108 ]
  store i64 %106, i64* %65, align 8
  store i64 %98, i64* %64, align 8
  store i64 %93, i64* %74, align 8
  %114 = icmp eq %"struct.CPDF_CMap::CIDRange"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112
  %116 = bitcast %"struct.CPDF_CMap::CIDRange"* %113 to i8*
  tail call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %35, %30, %115, %112, %55
  store i32 0, i32* %10, align 4
  br label %118

118:                                              ; preds = %2, %117
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZN15CPDF_CMapParser19CharsetFromOrderingEN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  switch i64 %5, label %18 [
    i64 3, label %6
    i64 4, label %21
    i64 6, label %34
  ]

6:                                                ; preds = %1
  %7 = getelementptr inbounds i8, i8* %3, i64 %5
  br label %8

8:                                                ; preds = %6, %14
  %9 = phi i8* [ %16, %14 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), %6 ]
  %10 = phi i8* [ %15, %14 ], [ %3, %6 ]
  %11 = load i8, i8* %10, align 1
  %12 = load i8, i8* %9, align 1
  %13 = icmp eq i8 %11, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %10, i64 1
  %16 = getelementptr inbounds i8, i8* %9, i64 1
  %17 = icmp eq i8* %15, %7
  br i1 %17, label %18, label %8

18:                                               ; preds = %14, %29, %42, %55, %63, %69, %1, %20, %33, %46, %59
  %19 = phi i8 [ 0, %59 ], [ 0, %46 ], [ 0, %33 ], [ 0, %20 ], [ 0, %1 ], [ 0, %63 ], [ 5, %69 ], [ 4, %55 ], [ 3, %42 ], [ 2, %29 ], [ 1, %14 ]
  ret i8 %19

20:                                               ; preds = %8
  switch i64 %5, label %18 [
    i64 4, label %21
    i64 6, label %34
    i64 3, label %61
  ]

21:                                               ; preds = %1, %20
  %22 = getelementptr inbounds i8, i8* %3, i64 %5
  br label %23

23:                                               ; preds = %29, %21
  %24 = phi i8* [ %31, %29 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), %21 ]
  %25 = phi i8* [ %30, %29 ], [ %3, %21 ]
  %26 = load i8, i8* %25, align 1
  %27 = load i8, i8* %24, align 1
  %28 = icmp eq i8 %26, %27
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = getelementptr inbounds i8, i8* %25, i64 1
  %31 = getelementptr inbounds i8, i8* %24, i64 1
  %32 = icmp eq i8* %30, %22
  br i1 %32, label %18, label %23

33:                                               ; preds = %23
  switch i64 %5, label %18 [
    i64 6, label %34
    i64 3, label %61
  ]

34:                                               ; preds = %1, %20, %33
  %35 = getelementptr inbounds i8, i8* %3, i64 %5
  br label %36

36:                                               ; preds = %42, %34
  %37 = phi i8* [ %44, %42 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), %34 ]
  %38 = phi i8* [ %43, %42 ], [ %3, %34 ]
  %39 = load i8, i8* %38, align 1
  %40 = load i8, i8* %37, align 1
  %41 = icmp eq i8 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %36
  %43 = getelementptr inbounds i8, i8* %38, i64 1
  %44 = getelementptr inbounds i8, i8* %37, i64 1
  %45 = icmp eq i8* %43, %35
  br i1 %45, label %18, label %36

46:                                               ; preds = %36
  switch i64 %5, label %18 [
    i64 6, label %47
    i64 3, label %61
  ]

47:                                               ; preds = %46
  %48 = getelementptr inbounds i8, i8* %3, i64 %5
  br label %49

49:                                               ; preds = %55, %47
  %50 = phi i8* [ %57, %55 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), %47 ]
  %51 = phi i8* [ %56, %55 ], [ %3, %47 ]
  %52 = load i8, i8* %51, align 1
  %53 = load i8, i8* %50, align 1
  %54 = icmp eq i8 %52, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  %57 = getelementptr inbounds i8, i8* %50, i64 1
  %58 = icmp eq i8* %56, %48
  br i1 %58, label %18, label %49

59:                                               ; preds = %49
  %60 = icmp eq i64 %5, 3
  br i1 %60, label %61, label %18

61:                                               ; preds = %20, %33, %46, %59
  %62 = getelementptr inbounds i8, i8* %3, i64 %5
  br label %63

63:                                               ; preds = %69, %61
  %64 = phi i8* [ %71, %69 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), %61 ]
  %65 = phi i8* [ %70, %69 ], [ %3, %61 ]
  %66 = load i8, i8* %65, align 1
  %67 = load i8, i8* %64, align 1
  %68 = icmp eq i8 %66, %67
  br i1 %68, label %69, label %18

69:                                               ; preds = %63
  %70 = getelementptr inbounds i8, i8* %65, i64 1
  %71 = getelementptr inbounds i8, i8* %64, i64 1
  %72 = icmp eq i8* %70, %62
  br i1 %72, label %18, label %63
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN15CPDF_CMapParser7GetCodeEN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %112, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 60
  br i1 %9, label %14, label %10

10:                                               ; preds = %5
  %11 = zext i8 %8 to i32
  %12 = add nsw i32 %11, -48
  %13 = icmp ult i32 %12, 10
  br i1 %13, label %64, label %112

14:                                               ; preds = %5
  %15 = icmp ugt i64 %3, 1
  br i1 %15, label %16, label %112

16:                                               ; preds = %14
  %17 = tail call i16** @__ctype_b_loc() #14
  %18 = load i16*, i16** %17, align 8
  br label %22

19:                                               ; preds = %55
  %20 = trunc i33 %60 to i32
  %21 = icmp eq i64 %63, %3
  br i1 %21, label %106, label %22

22:                                               ; preds = %19, %16
  %23 = phi i64 [ 1, %16 ], [ %63, %19 ]
  %24 = phi i32 [ 0, %16 ], [ %20, %19 ]
  %25 = getelementptr inbounds i8, i8* %7, i64 %23
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds i16, i16* %18, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = and i16 %29, 4096
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %112, label %32

32:                                               ; preds = %22
  %33 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %24, i32 16) #11
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = icmp slt i8 %26, 0
  br i1 %36, label %53, label %37

37:                                               ; preds = %32
  %38 = sext i8 %26 to i64
  %39 = getelementptr inbounds i16, i16* %18, i64 %38
  %40 = load i16, i16* %39, align 2
  %41 = and i16 %40, 4096
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %37
  %44 = sext i8 %26 to i32
  %45 = add nsw i32 %44, -97
  %46 = icmp ult i32 %45, 26
  %47 = add nsw i8 %26, -32
  %48 = select i1 %46, i8 %47, i8 %26
  %49 = sext i8 %48 to i32
  %50 = icmp sgt i8 %48, 57
  %51 = select i1 %50, i32 -55, i32 -48
  %52 = add nsw i32 %51, %49
  br label %53

53:                                               ; preds = %32, %37, %43
  %54 = phi i32 [ %52, %43 ], [ 0, %37 ], [ 0, %32 ]
  br i1 %34, label %112, label %55

55:                                               ; preds = %53
  %56 = zext i32 %35 to i33
  %57 = sext i32 %54 to i33
  %58 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 %57) #11
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  %63 = add nuw i64 %23, 1
  br i1 %62, label %112, label %19

64:                                               ; preds = %10, %98
  %65 = phi i32 [ %104, %98 ], [ %12, %10 ]
  %66 = phi i32 [ %103, %98 ], [ %11, %10 ]
  %67 = phi i64 [ %99, %98 ], [ 1, %10 ]
  %68 = phi i32 [ %97, %98 ], [ 0, %10 ]
  %69 = phi i64 [ %94, %98 ], [ 0, %10 ]
  %70 = trunc i64 %67 to i8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %64
  %73 = tail call i32 @iswdigit(i32 %66) #11
  br label %112

74:                                               ; preds = %64
  %75 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %68, i32 10) #11
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = tail call i32 @iswdigit(i32 %66) #11
  br i1 %76, label %112, label %78

78:                                               ; preds = %74
  %79 = extractvalue { i32, i1 } %75, 0
  %80 = icmp eq i32 %77, 0
  %81 = select i1 %80, i32 0, i32 %65
  %82 = zext i32 %79 to i33
  %83 = sext i32 %81 to i33
  %84 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 %83) #11
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  %89 = xor i1 %88, true
  %90 = zext i33 %86 to i64
  %91 = shl i64 %90, 32
  %92 = zext i1 %89 to i64
  br i1 %88, label %112, label %93

93:                                               ; preds = %78
  %94 = add nuw i64 %69, 1
  %95 = load i64, i64* %2, align 8
  %96 = icmp ult i64 %94, %95
  %97 = trunc i33 %86 to i32
  br i1 %96, label %98, label %108

98:                                               ; preds = %93
  %99 = or i64 %91, %92
  %100 = load i8*, i8** %6, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 %94
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = add nsw i32 %103, -48
  %105 = icmp ult i32 %104, 10
  br i1 %105, label %64, label %110

106:                                              ; preds = %19
  %107 = trunc i33 %60 to i32
  br label %112

108:                                              ; preds = %93
  %109 = trunc i33 %86 to i32
  br label %112

110:                                              ; preds = %98
  %111 = trunc i33 %86 to i32
  br label %112

112:                                              ; preds = %108, %110, %78, %74, %22, %55, %53, %10, %106, %72, %14, %1
  %113 = phi i32 [ 0, %1 ], [ 0, %14 ], [ 0, %72 ], [ %107, %106 ], [ 0, %10 ], [ %24, %22 ], [ 0, %55 ], [ 0, %53 ], [ %109, %108 ], [ %111, %110 ], [ 0, %78 ], [ 0, %74 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_CMapParser20HandleCodeSpaceRangeEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_CMapParser*, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.pdfium::Optional", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  switch i64 %10, label %11 [
    i64 17, label %13
    i64 0, label %188
  ]

11:                                               ; preds = %2
  %12 = load i8, i8* %8, align 1
  br label %20

13:                                               ; preds = %2
  %14 = load i8, i8* %8, align 1
  %15 = icmp eq i8 %14, 101
  br i1 %15, label %16, label %20

16:                                               ; preds = %13
  %17 = getelementptr inbounds i8, i8* %8, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 110
  br i1 %19, label %189, label %188

20:                                               ; preds = %13, %11
  %21 = phi i8 [ %12, %11 ], [ %14, %13 ]
  %22 = icmp eq i8 %21, 60
  br i1 %22, label %23, label %188

23:                                               ; preds = %20
  %24 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %121, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  %30 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %30, align 8, !noalias !10
  %32 = icmp eq %"class.fxcrt::StringDataTemplate"* %31, null
  %33 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %31, i64 0, i32 3, i64 0
  %34 = select i1 %32, i8* null, i8* %33
  br i1 %32, label %38, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %31, i64 0, i32 1
  %37 = load i64, i64* %36, align 8, !noalias !10
  br label %38

38:                                               ; preds = %28, %35
  %39 = phi i64 [ %37, %35 ], [ 0, %28 ]
  %40 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %34, i8** %40, align 8, !alias.scope !10
  %41 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %39, i64* %41, align 8, !alias.scope !10
  %42 = bitcast %"class.fxcrt::StringViewTemplate"* %6 to i8*
  %43 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* align 8 %43, i64 16, i1 false)
  call void @_ZN15CPDF_CMapParser12GetCodeRangeEN5fxcrt18StringViewTemplateIcEES2_(%"class.pdfium::Optional"* nonnull sret %4, %"class.fxcrt::StringViewTemplate"* nonnull %5, %"class.fxcrt::StringViewTemplate"* nonnull %6)
  %44 = load i8, i8* %29, align 8, !range !13
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %119, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 4
  %48 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 4, i32 0, i32 1
  %50 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %49, align 8
  %51 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %52 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %51, align 8
  %53 = icmp eq %"struct.CPDF_CMap::CodeRange"* %50, %52
  %54 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %52 to i64
  br i1 %53, label %61, label %55

55:                                               ; preds = %46
  %56 = bitcast %"struct.CPDF_CMap::CodeRange"* %50 to i8*
  %57 = bitcast %"struct.CPDF_CMap::CodeRange"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #11
  %58 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %50, i64 1
  %59 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %58 to i64
  %60 = bitcast %"struct.CPDF_CMap::CodeRange"** %49 to i64*
  store i64 %59, i64* %60, align 8
  br label %119

61:                                               ; preds = %46
  %62 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %50 to i64
  %63 = bitcast %"struct.CPDF_CMap::CodeRange"** %49 to i64*
  %64 = bitcast %"class.std::__1::vector.1"* %47 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %62, %65
  %67 = ashr exact i64 %66, 4
  %68 = add nsw i64 %67, 1
  %69 = icmp ugt i64 %68, 1152921504606846975
  br i1 %69, label %70, label %72

70:                                               ; preds = %61
  %71 = bitcast %"class.std::__1::vector.1"* %47 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %71) #13
  unreachable

72:                                               ; preds = %61
  %73 = bitcast %"struct.CPDF_CMap::CodeRange"** %51 to i64*
  %74 = sub i64 %54, %65
  %75 = ashr exact i64 %74, 4
  %76 = icmp ult i64 %75, 576460752303423487
  br i1 %76, label %77, label %85

77:                                               ; preds = %72
  %78 = ashr exact i64 %74, 3
  %79 = icmp ult i64 %78, %68
  %80 = select i1 %79, i64 %68, i64 %78
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %77
  %83 = icmp ugt i64 %80, 1152921504606846975
  br i1 %83, label %84, label %85

84:                                               ; preds = %82
  tail call void @abort() #13
  unreachable

85:                                               ; preds = %82, %72
  %86 = phi i64 [ %80, %82 ], [ 1152921504606846975, %72 ]
  %87 = shl i64 %86, 4
  %88 = tail call i8* @_Znwm(i64 %87) #12
  %89 = bitcast i8* %88 to %"struct.CPDF_CMap::CodeRange"*
  br label %90

90:                                               ; preds = %85, %77
  %91 = phi i64 [ %86, %85 ], [ 0, %77 ]
  %92 = phi %"struct.CPDF_CMap::CodeRange"* [ %89, %85 ], [ null, %77 ]
  %93 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %92, i64 %67
  %94 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %92, i64 %91
  %95 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %94 to i64
  %96 = bitcast %"struct.CPDF_CMap::CodeRange"* %93 to i8*
  %97 = bitcast %"struct.CPDF_CMap::CodeRange"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 16, i1 false) #11
  %98 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %93, i64 1
  %99 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %98 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %47, i64 0, i32 0, i32 0
  %101 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %100, align 8
  %102 = load i64, i64* %63, align 8
  %103 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %101 to i64
  %104 = sub i64 %102, %103
  %105 = ashr exact i64 %104, 4
  %106 = sub nsw i64 0, %105
  %107 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %93, i64 %106
  %108 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %107 to i64
  %109 = icmp sgt i64 %104, 0
  br i1 %109, label %110, label %114

110:                                              ; preds = %90
  %111 = bitcast %"struct.CPDF_CMap::CodeRange"* %107 to i8*
  %112 = bitcast %"struct.CPDF_CMap::CodeRange"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 %104, i1 false) #11
  %113 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %100, align 8
  br label %114

114:                                              ; preds = %110, %90
  %115 = phi %"struct.CPDF_CMap::CodeRange"* [ %101, %90 ], [ %113, %110 ]
  store i64 %108, i64* %64, align 8
  store i64 %99, i64* %63, align 8
  store i64 %95, i64* %73, align 8
  %116 = icmp eq %"struct.CPDF_CMap::CodeRange"* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %114
  %118 = bitcast %"struct.CPDF_CMap::CodeRange"* %115 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %38, %117, %114, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  %120 = load i32, i32* %24, align 4
  br label %121

121:                                              ; preds = %23, %119
  %122 = phi i32 [ %25, %23 ], [ %120, %119 ]
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %24, align 4
  br label %188

124:                                              ; preds = %249
  %125 = inttoptr i64 %263 to %"struct.CPDF_CMap::CodeRange"*
  %126 = inttoptr i64 %253 to %"struct.CPDF_CMap::CodeRange"*
  %127 = icmp eq %"struct.CPDF_CMap::CodeRange"* %267, %126
  %128 = select i1 %127, %"struct.CPDF_CMap::CodeRange"* %125, %"struct.CPDF_CMap::CodeRange"* %267
  %129 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 2, i32 0
  %130 = load %class.CPDF_CMap*, %class.CPDF_CMap** %129, align 8
  %131 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %128, i64 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = icmp eq i64 %132, 2
  %134 = zext i1 %133 to i8
  %135 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %130, i64 0, i32 4
  store i8 %134, i8* %135, align 1
  br label %186

136:                                              ; preds = %249
  %137 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 2, i32 0
  %138 = load %class.CPDF_CMap*, %class.CPDF_CMap** %137, align 8
  %139 = getelementptr inbounds %class.CPDF_CMap, %class.CPDF_CMap* %138, i64 0, i32 4
  store i8 3, i8* %139, align 1
  %140 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %141 = bitcast %"struct.CPDF_CMap::CodeRange"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = load i64, i64* %254, align 8
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 4
  %146 = icmp ult i64 %145, %266
  br i1 %146, label %147, label %169

147:                                              ; preds = %136
  %148 = icmp ugt i64 %266, 1152921504606846975
  br i1 %148, label %149, label %150

149:                                              ; preds = %147
  tail call void @abort() #13
  unreachable

150:                                              ; preds = %147
  %151 = load i64, i64* %252, align 8
  %152 = sub i64 %151, %143
  %153 = ashr exact i64 %152, 4
  %154 = shl i64 %266, 4
  %155 = tail call i8* @_Znwm(i64 %154) #12
  %156 = bitcast i8* %155 to %"struct.CPDF_CMap::CodeRange"*
  %157 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %156, i64 %153
  %158 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %157 to i64
  %159 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %156, i64 %266
  %160 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %159 to i64
  %161 = ptrtoint i8* %155 to i64
  %162 = icmp sgt i64 %152, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %150
  %164 = inttoptr i64 %143 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %155, i8* align 8 %164, i64 %152, i1 false) #11
  br label %165

165:                                              ; preds = %163, %150
  store i64 %161, i64* %254, align 8
  store i64 %158, i64* %252, align 8
  store i64 %160, i64* %141, align 8
  %166 = icmp eq i64 %143, 0
  br i1 %166, label %169, label %167

167:                                              ; preds = %165
  %168 = inttoptr i64 %143 to i8*
  tail call void @_ZdlPv(i8* %168) #12
  br label %169

169:                                              ; preds = %136, %165, %167
  %170 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %258, i64 0, i32 0, i32 0
  %171 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %170, align 8
  %172 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %259, align 8
  %173 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #11
  %174 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.1"* %250, %"class.std::__1::vector.1"** %174, align 8
  %175 = icmp eq %"struct.CPDF_CMap::CodeRange"* %171, %172
  %176 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %171 to i64
  br i1 %175, label %184, label %177

177:                                              ; preds = %169, %177
  %178 = phi %"struct.CPDF_CMap::CodeRange"* [ %180, %177 ], [ %171, %169 ]
  %179 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIN9CPDF_CMap9CodeRangeENS_9allocatorIS3_EEEEEaSEOS3_(%"class.std::__1::back_insert_iterator"* nonnull %3, %"struct.CPDF_CMap::CodeRange"* dereferenceable(16) %178) #11
  %180 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %178, i64 1
  %181 = icmp eq %"struct.CPDF_CMap::CodeRange"* %180, %172
  br i1 %181, label %182, label %177

182:                                              ; preds = %177
  %183 = load i64, i64* %262, align 8
  br label %184

184:                                              ; preds = %182, %169
  %185 = phi i64 [ %183, %182 ], [ %176, %169 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #11
  store i64 %185, i64* %260, align 8
  br label %186

186:                                              ; preds = %249, %184, %124
  %187 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 0
  store i32 0, i32* %187, align 8
  br label %188

188:                                              ; preds = %16, %189, %193, %197, %201, %205, %209, %213, %217, %221, %225, %229, %233, %237, %241, %245, %2, %20, %186, %121
  ret void

189:                                              ; preds = %16
  %190 = getelementptr inbounds i8, i8* %8, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = icmp eq i8 %191, 100
  br i1 %192, label %193, label %188

193:                                              ; preds = %189
  %194 = getelementptr inbounds i8, i8* %8, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = icmp eq i8 %195, 99
  br i1 %196, label %197, label %188

197:                                              ; preds = %193
  %198 = getelementptr inbounds i8, i8* %8, i64 4
  %199 = load i8, i8* %198, align 1
  %200 = icmp eq i8 %199, 111
  br i1 %200, label %201, label %188

201:                                              ; preds = %197
  %202 = getelementptr inbounds i8, i8* %8, i64 5
  %203 = load i8, i8* %202, align 1
  %204 = icmp eq i8 %203, 100
  br i1 %204, label %205, label %188

205:                                              ; preds = %201
  %206 = getelementptr inbounds i8, i8* %8, i64 6
  %207 = load i8, i8* %206, align 1
  %208 = icmp eq i8 %207, 101
  br i1 %208, label %209, label %188

209:                                              ; preds = %205
  %210 = getelementptr inbounds i8, i8* %8, i64 7
  %211 = load i8, i8* %210, align 1
  %212 = icmp eq i8 %211, 115
  br i1 %212, label %213, label %188

213:                                              ; preds = %209
  %214 = getelementptr inbounds i8, i8* %8, i64 8
  %215 = load i8, i8* %214, align 1
  %216 = icmp eq i8 %215, 112
  br i1 %216, label %217, label %188

217:                                              ; preds = %213
  %218 = getelementptr inbounds i8, i8* %8, i64 9
  %219 = load i8, i8* %218, align 1
  %220 = icmp eq i8 %219, 97
  br i1 %220, label %221, label %188

221:                                              ; preds = %217
  %222 = getelementptr inbounds i8, i8* %8, i64 10
  %223 = load i8, i8* %222, align 1
  %224 = icmp eq i8 %223, 99
  br i1 %224, label %225, label %188

225:                                              ; preds = %221
  %226 = getelementptr inbounds i8, i8* %8, i64 11
  %227 = load i8, i8* %226, align 1
  %228 = icmp eq i8 %227, 101
  br i1 %228, label %229, label %188

229:                                              ; preds = %225
  %230 = getelementptr inbounds i8, i8* %8, i64 12
  %231 = load i8, i8* %230, align 1
  %232 = icmp eq i8 %231, 114
  br i1 %232, label %233, label %188

233:                                              ; preds = %229
  %234 = getelementptr inbounds i8, i8* %8, i64 13
  %235 = load i8, i8* %234, align 1
  %236 = icmp eq i8 %235, 97
  br i1 %236, label %237, label %188

237:                                              ; preds = %233
  %238 = getelementptr inbounds i8, i8* %8, i64 14
  %239 = load i8, i8* %238, align 1
  %240 = icmp eq i8 %239, 110
  br i1 %240, label %241, label %188

241:                                              ; preds = %237
  %242 = getelementptr inbounds i8, i8* %8, i64 15
  %243 = load i8, i8* %242, align 1
  %244 = icmp eq i8 %243, 103
  br i1 %244, label %245, label %188

245:                                              ; preds = %241
  %246 = getelementptr inbounds i8, i8* %8, i64 16
  %247 = load i8, i8* %246, align 1
  %248 = icmp eq i8 %247, 101
  br i1 %248, label %249, label %188

249:                                              ; preds = %245
  %250 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 3
  %251 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 3, i32 0, i32 1
  %252 = bitcast %"struct.CPDF_CMap::CodeRange"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %"class.std::__1::vector.1"* %250 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = sub i64 %253, %255
  %257 = ashr exact i64 %256, 4
  %258 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 4
  %259 = getelementptr inbounds %class.CPDF_CMapParser, %class.CPDF_CMapParser* %0, i64 0, i32 4, i32 0, i32 1
  %260 = bitcast %"struct.CPDF_CMap::CodeRange"** %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = bitcast %"class.std::__1::vector.1"* %258 to i64*
  %263 = load i64, i64* %262, align 8
  %264 = sub i64 %261, %263
  %265 = ashr exact i64 %264, 4
  %266 = add nsw i64 %265, %257
  %267 = inttoptr i64 %255 to %"struct.CPDF_CMap::CodeRange"*
  switch i64 %266, label %136 [
    i64 1, label %124
    i64 0, label %186
  ]
}

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringaSENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_CMapParser12GetCodeRangeEN5fxcrt18StringViewTemplateIcEES2_(%"class.pdfium::Optional"* noalias nocapture sret, %"class.fxcrt::StringViewTemplate"* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.CPDF_CMap::CodeRange", align 8
  %5 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 60
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = icmp ugt i64 %6, 1
  br i1 %14, label %17, label %31

15:                                               ; preds = %8, %3
  %16 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  br label %175

17:                                               ; preds = %13, %22
  %18 = phi i64 [ %23, %22 ], [ 1, %13 ]
  %19 = getelementptr inbounds i8, i8* %10, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 62
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = add nuw i64 %18, 1
  %24 = icmp eq i64 %23, %6
  br i1 %24, label %25, label %17

25:                                               ; preds = %17, %22
  %26 = phi i64 [ %6, %22 ], [ %18, %17 ]
  %27 = add i64 %26, -1
  %28 = icmp ugt i64 %27, 9
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 8
  br label %175

31:                                               ; preds = %13, %25
  %32 = phi i64 [ %27, %25 ], [ 0, %13 ]
  %33 = lshr i64 %32, 1
  %34 = bitcast %"struct.CPDF_CMap::CodeRange"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %4, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %4, i64 0, i32 1, i64 0
  %37 = bitcast i8* %36 to i64*
  store i64 -6148914691236517206, i64* %37, align 8
  store i64 %33, i64* %35, align 8
  %38 = icmp eq i64 %33, 0
  br i1 %38, label %171, label %39

39:                                               ; preds = %31, %93
  %40 = phi i64 [ %97, %93 ], [ 0, %31 ]
  %41 = shl i64 %40, 1
  %42 = or i64 %41, 1
  %43 = icmp ugt i64 %6, %42
  br i1 %43, label %45, label %44, !prof !14

44:                                               ; preds = %39
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !15
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !16
  unreachable

45:                                               ; preds = %39
  %46 = getelementptr inbounds i8, i8* %10, i64 %42
  %47 = load i8, i8* %46, align 1
  %48 = add i64 %41, 2
  %49 = icmp ugt i64 %6, %48
  br i1 %49, label %51, label %50, !prof !14

50:                                               ; preds = %45
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !15
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !16
  unreachable

51:                                               ; preds = %45
  %52 = getelementptr inbounds i8, i8* %10, i64 %48
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %47, 0
  br i1 %54, label %72, label %55

55:                                               ; preds = %51
  %56 = tail call i16** @__ctype_b_loc() #14
  %57 = load i16*, i16** %56, align 8
  %58 = sext i8 %47 to i64
  %59 = getelementptr inbounds i16, i16* %57, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = and i16 %60, 4096
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %55
  %64 = sext i8 %47 to i32
  %65 = add nsw i32 %64, -97
  %66 = icmp ult i32 %65, 26
  %67 = add nsw i8 %47, -32
  %68 = select i1 %66, i8 %67, i8 %47
  %69 = icmp sgt i8 %68, 57
  %70 = select i1 %69, i8 -55, i8 -48
  %71 = add nsw i8 %70, %68
  br label %72

72:                                               ; preds = %51, %55, %63
  %73 = phi i8 [ %71, %63 ], [ 0, %55 ], [ 0, %51 ]
  %74 = shl i8 %73, 4
  %75 = icmp slt i8 %53, 0
  br i1 %75, label %93, label %76

76:                                               ; preds = %72
  %77 = tail call i16** @__ctype_b_loc() #14
  %78 = load i16*, i16** %77, align 8
  %79 = sext i8 %53 to i64
  %80 = getelementptr inbounds i16, i16* %78, i64 %79
  %81 = load i16, i16* %80, align 2
  %82 = and i16 %81, 4096
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %93, label %84

84:                                               ; preds = %76
  %85 = sext i8 %53 to i32
  %86 = add nsw i32 %85, -97
  %87 = icmp ult i32 %86, 26
  %88 = add nsw i8 %53, -32
  %89 = select i1 %87, i8 %88, i8 %53
  %90 = icmp sgt i8 %89, 57
  %91 = select i1 %90, i8 -55, i8 -48
  %92 = add nsw i8 %91, %89
  br label %93

93:                                               ; preds = %72, %76, %84
  %94 = phi i8 [ %92, %84 ], [ 0, %76 ], [ 0, %72 ]
  %95 = add i8 %94, %74
  %96 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %4, i64 0, i32 1, i64 %40
  store i8 %95, i8* %96, align 1
  %97 = add nuw i64 %40, 1
  %98 = load i64, i64* %35, align 8
  %99 = icmp ult i64 %97, %98
  br i1 %99, label %39, label %100

100:                                              ; preds = %93
  %101 = icmp eq i64 %98, 0
  %102 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  br i1 %101, label %171, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %2, i64 0, i32 0, i32 0, i32 0
  br label %106

106:                                              ; preds = %104, %164
  %107 = phi i64 [ 0, %104 ], [ %168, %164 ]
  %108 = shl i64 %107, 1
  %109 = or i64 %108, 1
  %110 = add i64 %109, 1
  %111 = icmp ult i64 %109, %103
  br i1 %111, label %112, label %116

112:                                              ; preds = %106
  %113 = load i8*, i8** %105, align 8
  %114 = getelementptr inbounds i8, i8* %113, i64 %109
  %115 = load i8, i8* %114, align 1
  br label %116

116:                                              ; preds = %106, %112
  %117 = phi i8 [ %115, %112 ], [ 48, %106 ]
  %118 = icmp ult i64 %110, %103
  br i1 %118, label %119, label %123

119:                                              ; preds = %116
  %120 = load i8*, i8** %105, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 %110
  %122 = load i8, i8* %121, align 1
  br label %123

123:                                              ; preds = %116, %119
  %124 = phi i8 [ %122, %119 ], [ 48, %116 ]
  %125 = icmp slt i8 %117, 0
  br i1 %125, label %143, label %126

126:                                              ; preds = %123
  %127 = tail call i16** @__ctype_b_loc() #14
  %128 = load i16*, i16** %127, align 8
  %129 = sext i8 %117 to i64
  %130 = getelementptr inbounds i16, i16* %128, i64 %129
  %131 = load i16, i16* %130, align 2
  %132 = and i16 %131, 4096
  %133 = icmp eq i16 %132, 0
  br i1 %133, label %143, label %134

134:                                              ; preds = %126
  %135 = sext i8 %117 to i32
  %136 = add nsw i32 %135, -97
  %137 = icmp ult i32 %136, 26
  %138 = add nsw i8 %117, -32
  %139 = select i1 %137, i8 %138, i8 %117
  %140 = icmp sgt i8 %139, 57
  %141 = select i1 %140, i8 -55, i8 -48
  %142 = add nsw i8 %141, %139
  br label %143

143:                                              ; preds = %123, %126, %134
  %144 = phi i8 [ %142, %134 ], [ 0, %126 ], [ 0, %123 ]
  %145 = shl i8 %144, 4
  %146 = icmp slt i8 %124, 0
  br i1 %146, label %164, label %147

147:                                              ; preds = %143
  %148 = tail call i16** @__ctype_b_loc() #14
  %149 = load i16*, i16** %148, align 8
  %150 = sext i8 %124 to i64
  %151 = getelementptr inbounds i16, i16* %149, i64 %150
  %152 = load i16, i16* %151, align 2
  %153 = and i16 %152, 4096
  %154 = icmp eq i16 %153, 0
  br i1 %154, label %164, label %155

155:                                              ; preds = %147
  %156 = sext i8 %124 to i32
  %157 = add nsw i32 %156, -97
  %158 = icmp ult i32 %157, 26
  %159 = add nsw i8 %124, -32
  %160 = select i1 %158, i8 %159, i8 %124
  %161 = icmp sgt i8 %160, 57
  %162 = select i1 %161, i8 -55, i8 -48
  %163 = add nsw i8 %162, %160
  br label %164

164:                                              ; preds = %143, %147, %155
  %165 = phi i8 [ %163, %155 ], [ 0, %147 ], [ 0, %143 ]
  %166 = add i8 %165, %145
  %167 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %4, i64 0, i32 2, i64 %107
  store i8 %166, i8* %167, align 1
  %168 = add nuw i64 %107, 1
  %169 = load i64, i64* %35, align 8
  %170 = icmp ult i64 %168, %169
  br i1 %170, label %106, label %171

171:                                              ; preds = %164, %31, %100
  %172 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %172, align 8
  %173 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %174 = bitcast %"struct.CPDF_CMap::CodeRange"* %173 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* nonnull align 8 %34, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  br label %175

175:                                              ; preds = %29, %171, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind
declare i32 @iswdigit(i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIN9CPDF_CMap9CodeRangeENS_9allocatorIS3_EEEEEaSEOS3_(%"class.std::__1::back_insert_iterator"*, %"struct.CPDF_CMap::CodeRange"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 1
  %6 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %7, align 8
  %9 = icmp ult %"struct.CPDF_CMap::CodeRange"* %6, %8
  %10 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %8 to i64
  br i1 %9, label %11, label %17

11:                                               ; preds = %2
  %12 = bitcast %"struct.CPDF_CMap::CodeRange"* %6 to i8*
  %13 = bitcast %"struct.CPDF_CMap::CodeRange"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false) #11
  %14 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %6, i64 1
  %15 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %14 to i64
  %16 = bitcast %"struct.CPDF_CMap::CodeRange"** %5 to i64*
  store i64 %15, i64* %16, align 8
  br label %75

17:                                               ; preds = %2
  %18 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %6 to i64
  %19 = bitcast %"struct.CPDF_CMap::CodeRange"** %5 to i64*
  %20 = bitcast %"class.std::__1::vector.1"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = ashr exact i64 %22, 4
  %24 = add nsw i64 %23, 1
  %25 = icmp ugt i64 %24, 1152921504606846975
  br i1 %25, label %26, label %28

26:                                               ; preds = %17
  %27 = bitcast %"class.std::__1::vector.1"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %27) #13
  unreachable

28:                                               ; preds = %17
  %29 = bitcast %"struct.CPDF_CMap::CodeRange"** %7 to i64*
  %30 = sub i64 %10, %21
  %31 = ashr exact i64 %30, 4
  %32 = icmp ult i64 %31, 576460752303423487
  br i1 %32, label %33, label %41

33:                                               ; preds = %28
  %34 = ashr exact i64 %30, 3
  %35 = icmp ult i64 %34, %24
  %36 = select i1 %35, i64 %24, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = icmp ugt i64 %36, 1152921504606846975
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

41:                                               ; preds = %38, %28
  %42 = phi i64 [ %36, %38 ], [ 1152921504606846975, %28 ]
  %43 = shl i64 %42, 4
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"struct.CPDF_CMap::CodeRange"*
  br label %46

46:                                               ; preds = %41, %33
  %47 = phi i64 [ %42, %41 ], [ 0, %33 ]
  %48 = phi %"struct.CPDF_CMap::CodeRange"* [ %45, %41 ], [ null, %33 ]
  %49 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %48, i64 %23
  %50 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %48, i64 %47
  %51 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %50 to i64
  %52 = bitcast %"struct.CPDF_CMap::CodeRange"* %49 to i8*
  %53 = bitcast %"struct.CPDF_CMap::CodeRange"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 16, i1 false) #11
  %54 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %49, i64 1
  %55 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %57 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %56, align 8
  %58 = load i64, i64* %19, align 8
  %59 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 4
  %62 = sub nsw i64 0, %61
  %63 = getelementptr inbounds %"struct.CPDF_CMap::CodeRange", %"struct.CPDF_CMap::CodeRange"* %49, i64 %62
  %64 = ptrtoint %"struct.CPDF_CMap::CodeRange"* %63 to i64
  %65 = icmp sgt i64 %60, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %46
  %67 = bitcast %"struct.CPDF_CMap::CodeRange"* %63 to i8*
  %68 = bitcast %"struct.CPDF_CMap::CodeRange"* %57 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %68, i64 %60, i1 false) #11
  %69 = load %"struct.CPDF_CMap::CodeRange"*, %"struct.CPDF_CMap::CodeRange"** %56, align 8
  br label %70

70:                                               ; preds = %66, %46
  %71 = phi %"struct.CPDF_CMap::CodeRange"* [ %57, %46 ], [ %69, %66 ]
  store i64 %64, i64* %20, align 8
  store i64 %55, i64* %19, align 8
  store i64 %51, i64* %29, align 8
  %72 = icmp eq %"struct.CPDF_CMap::CodeRange"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = bitcast %"struct.CPDF_CMap::CodeRange"* %71 to i8*
  tail call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %11, %70, %73
  ret %"class.std::__1::back_insert_iterator"* %0
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_114CMap_GetStringEN5fxcrt18StringViewTemplateIcEE: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_114CMap_GetStringEN5fxcrt18StringViewTemplateIcEE"}
!5 = !{!6, !8, !3}
!6 = distinct !{!6, !7, !"_ZNK5fxcrt18StringViewTemplateIcE6SubstrEmm: argument 0"}
!7 = distinct !{!7, !"_ZNK5fxcrt18StringViewTemplateIcE6SubstrEmm"}
!8 = distinct !{!8, !9, !"_ZNK5fxcrt18StringViewTemplateIcE4LastEm: argument 0"}
!9 = distinct !{!9, !"_ZNK5fxcrt18StringViewTemplateIcE4LastEm"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!12 = distinct !{!12, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!13 = !{i8 0, i8 2}
!14 = !{!"branch_weights", i32 2000, i32 1}
!15 = !{i32 -2143433040}
!16 = !{i32 -2143433019}
