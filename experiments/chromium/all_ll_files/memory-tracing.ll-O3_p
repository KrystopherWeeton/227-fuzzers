; ModuleID = '../../v8/src/wasm/memory-tracing.cc'
source_filename = "../../v8/src/wasm/memory-tracing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.v8::internal::wasm::MemoryTracingInfo" = type <{ i64, i8, i8, [6 x i8] }>
%"class.v8::internal::EmbeddedVector" = type <{ %"class.v8::internal::Vector", [91 x i8], [5 x i8] }>
%"class.v8::internal::Vector" = type { i8*, i64 }

@.str = private unnamed_addr constant [14 x i8] c" i8:%d / %02x\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"i16:%d / %04x\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"i32:%d / %08x\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"i64:%ld / %016lx\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"f32:%f / %08x\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"f64:%f / %016lx\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"s128:%d %d %d %d / %08x %08x %08x %08x\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"???\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c"%-11s func:%6d:0x%-6x%s %016lu val: %s\0A\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c" store to\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"load from\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"turbofan\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"liftoff\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"storage_.is_populated_\00", align 1
@switch.table._ZN2v88internal4wasm20TraceMemoryOperationENS_4base8OptionalINS1_13ExecutionTierEEEPKNS1_17MemoryTracingInfoEiiPh = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0)], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm20TraceMemoryOperationENS_4base8OptionalINS1_13ExecutionTierEEEPKNS1_17MemoryTracingInfoEiiPh(i16, %"struct.v8::internal::wasm::MemoryTracingInfo"* nocapture readonly, i32, i32, i8*) local_unnamed_addr #0 {
  %6 = alloca %"class.v8::internal::EmbeddedVector", align 8
  %7 = trunc i16 %0 to i8
  %8 = lshr i16 %0, 8
  %9 = zext i16 %8 to i64
  %10 = bitcast %"class.v8::internal::EmbeddedVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %6, i64 0, i32 1, i64 0
  %12 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %6, i64 0, i32 0, i32 0
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::EmbeddedVector", %"class.v8::internal::EmbeddedVector"* %6, i64 0, i32 0, i32 1
  store i64 91, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.v8::internal::wasm::MemoryTracingInfo", %"struct.v8::internal::wasm::MemoryTracingInfo"* %1, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = ptrtoint i8* %4 to i64
  %17 = getelementptr inbounds %"struct.v8::internal::wasm::MemoryTracingInfo", %"struct.v8::internal::wasm::MemoryTracingInfo"* %1, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %16
  switch i8 %15, label %64 [
    i8 2, label %20
    i8 3, label %25
    i8 4, label %30
    i8 5, label %34
    i8 12, label %38
    i8 13, label %45
    i8 14, label %51
  ]

20:                                               ; preds = %5
  %21 = inttoptr i64 %19 to i8*
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  %24 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %11, i64 91, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %23, i32 %23) #5
  br label %66

25:                                               ; preds = %5
  %26 = inttoptr i64 %19 to i16*
  %27 = load i16, i16* %26, align 1
  %28 = zext i16 %27 to i32
  %29 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %11, i64 91, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 %28, i32 %28) #5
  br label %66

30:                                               ; preds = %5
  %31 = inttoptr i64 %19 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %11, i64 91, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 %32, i32 %32) #5
  br label %66

34:                                               ; preds = %5
  %35 = inttoptr i64 %19 to i64*
  %36 = load i64, i64* %35, align 1
  %37 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %11, i64 91, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i64 %36, i64 %36) #5
  br label %66

38:                                               ; preds = %5
  %39 = inttoptr i64 %19 to float*
  %40 = load float, float* %39, align 1
  %41 = fpext float %40 to double
  %42 = inttoptr i64 %19 to i32*
  %43 = load i32, i32* %42, align 1
  %44 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %11, i64 91, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), double %41, i32 %43) #5
  br label %66

45:                                               ; preds = %5
  %46 = inttoptr i64 %19 to double*
  %47 = load double, double* %46, align 1
  %48 = inttoptr i64 %19 to i64*
  %49 = load i64, i64* %48, align 1
  %50 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %11, i64 91, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), double %47, i64 %49) #5
  br label %66

51:                                               ; preds = %5
  %52 = inttoptr i64 %19 to i32*
  %53 = load i32, i32* %52, align 1
  %54 = add i64 %19, 4
  %55 = inttoptr i64 %54 to i32*
  %56 = load i32, i32* %55, align 1
  %57 = add i64 %19, 8
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 1
  %60 = add i64 %19, 12
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 1
  %63 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %11, i64 91, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i32 %53, i32 %56, i32 %59, i32 %62, i32 %53, i32 %56, i32 %59, i32 %62) #5
  br label %66

64:                                               ; preds = %5
  %65 = call i32 (i8*, i64, i8*, ...) @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8* %11, i64 91, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0)) #5
  br label %66

66:                                               ; preds = %64, %51, %45, %38, %34, %30, %25, %20
  switch i8 %7, label %67 [
    i8 0, label %73
    i8 1, label %68
  ], !prof !2

67:                                               ; preds = %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0)) #6
  unreachable

68:                                               ; preds = %66
  %69 = shl nuw i64 %9, 56
  %70 = ashr exact i64 %69, 56
  %71 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN2v88internal4wasm20TraceMemoryOperationENS_4base8OptionalINS1_13ExecutionTierEEEPKNS1_17MemoryTracingInfoEiiPh, i64 0, i64 %70
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %68, %66
  %74 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), %66 ], [ %72, %68 ]
  %75 = getelementptr inbounds %"struct.v8::internal::wasm::MemoryTracingInfo", %"struct.v8::internal::wasm::MemoryTracingInfo"* %1, i64 0, i32 1
  %76 = load i8, i8* %75, align 8
  %77 = icmp eq i8 %76, 0
  %78 = select i1 %77, [10 x i8]* @.str.11, [10 x i8]* @.str.10
  %79 = getelementptr inbounds [10 x i8], [10 x i8]* %78, i64 0, i64 0
  %80 = load i64, i64* %17, align 8
  %81 = load i8*, i8** %12, align 8
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0), i8* nonnull %74, i32 %2, i32 %3, i8* nonnull %79, i64 %80, i8* %81)
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN2v88internal8SNPrintFENS0_6VectorIcEEPKcz(i8*, i64, i8*, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
