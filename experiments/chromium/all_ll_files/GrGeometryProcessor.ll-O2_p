; ModuleID = '../../third_party/skia/src/gpu/GrGeometryProcessor.cpp'
source_filename = "../../third_party/skia/src/gpu/GrGeometryProcessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon, i32, [4 x i8] }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrSwizzle = type { i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>

$_ZN11GrProcessorD2Ev = comdat any

$_ZN19GrGeometryProcessorD0Ev = comdat any

$_ZNK19GrGeometryProcessor16onTextureSamplerEi = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZTV19GrGeometryProcessor = comdat any

@_ZTV19GrGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGeometryProcessor*)* @_ZN19GrGeometryProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/include/private/GrTypesPriv.h\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"Unexpected texture type\00", align 1
@.str.3 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrGeometryProcessor.h\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"Illegal texture sampler index\00", align 1

@_ZN19GrGeometryProcessor14TextureSamplerC1E14GrSamplerStateRK15GrBackendFormatRK9GrSwizzle = hidden unnamed_addr alias void (%"class.GrGeometryProcessor::TextureSampler"*, i64, i32, %class.GrBackendFormat*, %class.GrSwizzle*), void (%"class.GrGeometryProcessor::TextureSampler"*, i64, i32, %class.GrBackendFormat*, %class.GrSwizzle*)* @_ZN19GrGeometryProcessor14TextureSamplerC2E14GrSamplerStateRK15GrBackendFormatRK9GrSwizzle

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGeometryProcessorC2EN11GrProcessor7ClassIDE(%class.GrGeometryProcessor* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 0, i32 1
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 1, i32 0
  store i32 1, i32* %6, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV19GrGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 2
  store i32 17, i32* %7, align 4
  %8 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %0, i64 0, i32 3
  %9 = bitcast %"class.GrGeometryProcessor::AttributeSet"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 52, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrGeometryProcessor* %0 to %"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)***
  %4 = load %"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)**, %"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)*** %3, align 8
  %5 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)*, %"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)** %4, i64 5
  %6 = load %"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)*, %"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)** %5, align 8
  %7 = tail call dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* %6(%class.GrGeometryProcessor* %0, i32 %1) #7
  ret %"class.GrGeometryProcessor::TextureSampler"* %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN19GrGeometryProcessor25ComputeCoordTransformsKeyERK19GrFragmentProcessor(%class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = lshr i32 %3, 5
  %5 = and i32 %4, 1
  %6 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 4, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  %9 = or i32 %5, 2
  %10 = select i1 %8, i32 %9, i32 %5
  %11 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 4, i32 1
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = or i32 %10, 4
  %15 = select i1 %13, i32 %10, i32 %14
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGeometryProcessor14TextureSamplerC2E14GrSamplerStateRK15GrBackendFormatRK9GrSwizzle(%"class.GrGeometryProcessor::TextureSampler"*, i64, i32, %class.GrBackendFormat* dereferenceable(72), %class.GrSwizzle* nocapture readonly dereferenceable(2)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 0, i32 0, i64 0
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 0, i32 0, i64 1
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %10, i64 0, i32 0
  store i32 5, i32* %11, align 8
  %12 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 2, i32 3
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 3
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #7
  %15 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 4
  store i8 0, i8* %15, align 2
  %16 = lshr i64 %1, 32
  %17 = trunc i64 %16 to i32
  %18 = bitcast %"class.GrGeometryProcessor::TextureSampler"* %0 to i64*
  store i64 %1, i64* %18, align 8
  store i32 %2, i32* %9, align 8
  %19 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %3, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %21 [
    i32 1, label %25
    i32 2, label %22
    i32 3, label %22
  ]

21:                                               ; preds = %5
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 589, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #8
  unreachable

22:                                               ; preds = %5, %5
  %23 = icmp slt i32 %17, 1
  %24 = select i1 %23, i32 %17, i32 1
  br label %25

25:                                               ; preds = %5, %22
  %26 = phi i32 [ %24, %22 ], [ %17, %5 ]
  store i32 %26, i32* %8, align 4
  %27 = tail call dereferenceable(72) %class.GrBackendFormat* @_ZN15GrBackendFormataSERKS_(%class.GrBackendFormat* %10, %class.GrBackendFormat* dereferenceable(72) %3) #7
  %28 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %4, i64 0, i32 0
  %29 = load i16, i16* %28, align 2
  %30 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 3, i32 0
  store i16 %29, i16* %30, align 2
  store i8 1, i8* %15, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19GrGeometryProcessor14TextureSampler5resetE14GrSamplerStateRK15GrBackendFormatRK9GrSwizzle(%"class.GrGeometryProcessor::TextureSampler"*, i64, i32, %class.GrBackendFormat* dereferenceable(72), %class.GrSwizzle* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %6 = lshr i64 %1, 32
  %7 = trunc i64 %6 to i32
  %8 = bitcast %"class.GrGeometryProcessor::TextureSampler"* %0 to i64*
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrBackendFormat, %class.GrBackendFormat* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %12 [
    i32 1, label %16
    i32 2, label %13
    i32 3, label %13
  ]

12:                                               ; preds = %5
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 589, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #8
  unreachable

13:                                               ; preds = %5, %5
  %14 = icmp slt i32 %7, 1
  %15 = select i1 %14, i32 %7, i32 1
  br label %16

16:                                               ; preds = %5, %13
  %17 = phi i32 [ %15, %13 ], [ %7, %5 ]
  %18 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 0, i32 1
  store i32 %17, i32* %18, align 4
  %19 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 2
  %20 = tail call dereferenceable(72) %class.GrBackendFormat* @_ZN15GrBackendFormataSERKS_(%class.GrBackendFormat* %19, %class.GrBackendFormat* dereferenceable(72) %3) #7
  %21 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %4, i64 0, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 3, i32 0
  store i16 %22, i16* %23, align 2
  %24 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %0, i64 0, i32 4
  store i8 1, i8* %24, align 2
  ret void
}

declare dereferenceable(72) %class.GrBackendFormat* @_ZN15GrBackendFormataSERKS_(%class.GrBackendFormat*, %class.GrBackendFormat* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrProcessorD2Ev(%class.GrProcessor*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGeometryProcessorD0Ev(%class.GrGeometryProcessor*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor16onTextureSamplerEi(%class.GrGeometryProcessor*, i32) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0), i32 304, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0)) #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #7
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #7
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #7
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
