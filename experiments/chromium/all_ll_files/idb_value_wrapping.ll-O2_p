; ModuleID = '../../third_party/blink/renderer/modules/indexeddb/idb_value_wrapping.cc'
source_filename = "../../third_party/blink/renderer/modules/indexeddb/idb_value_wrapping.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::IDBValueWrapper" = type { %class.scoped_refptr, %"class.WTF::Vector.64", %"class.WTF::Vector.69", %"class.WTF::Vector.79", %"class.base::span", i64 }
%class.scoped_refptr = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr", i64, %"class.WTF::Vector", %"class.WTF::Vector.2", %"class.WTF::Vector.8", %"class.WTF::Vector.24", %class.scoped_refptr.33, %"class.WTF::HashMap", %"class.WTF::Vector.47", %"class.WTF::Vector", %"class.WTF::Vector.53", %"class.WTF::HashMap.59", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4", [8 x i8] }
%"class.WTF::VectorBufferBase.4" = type { %class.scoped_refptr.5*, i32, i32 }
%class.scoped_refptr.5 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.8" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10" }
%"class.WTF::VectorBufferBase.10" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.16" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.27", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.27" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.33 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.41 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.35" }
%"struct.std::__1::atomic.35" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__cxx_atomic_impl.38" }
%"struct.std::__1::__cxx_atomic_impl.38" = type { %"struct.std::__1::__cxx_atomic_base_impl.39" }
%"struct.std::__1::__cxx_atomic_base_impl.39" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.41 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %class.scoped_refptr.44 }
%class.scoped_refptr.44 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.45", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.45" = type { %"class.base::RefCountedThreadSafe.46" }
%"class.base::RefCountedThreadSafe.46" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::Vector.47" = type { %"class.WTF::VectorBuffer.48" }
%"class.WTF::VectorBuffer.48" = type { %"class.WTF::VectorBufferBase.49" }
%"class.WTF::VectorBufferBase.49" = type { %"class.mojo::ScopedHandleBase.50"*, i32, i32 }
%"class.mojo::ScopedHandleBase.50" = type { %"class.mojo::Handle" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.53" = type { %"class.WTF::VectorBuffer.54" }
%"class.WTF::VectorBuffer.54" = type { %"class.WTF::VectorBufferBase.55" }
%"class.WTF::VectorBufferBase.55" = type { %"class.mojo::PendingRemote.56"*, i32, i32 }
%"class.mojo::PendingRemote.56" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.59" = type { %"class.WTF::HashTable.60" }
%"class.WTF::HashTable.60" = type <{ %"struct.WTF::KeyValuePair.63"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.63" = type { i8**, %"class.std::__1::unique_ptr.416" }
%"class.std::__1::unique_ptr.416" = type { %"class.std::__1::__compressed_pair.417" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.418" }
%"struct.std::__1::__compressed_pair_elem.418" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %class.scoped_refptr.44*, i32, i32 }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.blink::WebBlobInfo"*, i32, i32 }
%"class.blink::WebBlobInfo" = type { i8, %"class.blink::WebString", %"class.blink::WebString", i64, %"class.blink::WebPrivatePtr", %"class.blink::WebString", %"class.absl::optional.72" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr.34 }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { i8*, i32, i32 }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::IDBValueUnwrapper" = type { i8*, i8*, i32, %class.scoped_refptr.44 }
%"struct.blink::SerializedScriptValue::SerializeOptions" = type { %"class.blink::Transferables"*, %"class.WTF::Vector.69"*, i32, i32 }
%"class.blink::Transferables" = type { %"class.blink::HeapVector", %"class.blink::HeapVector.93", %"class.blink::HeapVector.101", %"class.blink::HeapVector.109", %"class.blink::HeapVector.117", %"class.blink::HeapVector.125", %"class.blink::HeapVector.133", %"class.blink::HeapVector.141", %"class.blink::HeapHashMap" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.84" }
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86" }
%"class.WTF::VectorBufferBase.86" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.89" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.89" = type { %"class.v8::TracedReference.90" }
%"class.v8::TracedReference.90" = type { %"class.v8::BasicTracedReference.91" }
%"class.v8::BasicTracedReference.91" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapVector.93" = type { %"class.WTF::Vector.96" }
%"class.WTF::Vector.96" = type { %"class.WTF::VectorBuffer.97" }
%"class.WTF::VectorBuffer.97" = type { %"class.WTF::VectorBufferBase.98" }
%"class.WTF::VectorBufferBase.98" = type { %"class.blink::Member.99"*, i32, i32 }
%"class.blink::Member.99" = type opaque
%"class.blink::HeapVector.101" = type { %"class.WTF::Vector.104" }
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"class.blink::Member.107"*, i32, i32 }
%"class.blink::Member.107" = type opaque
%"class.blink::HeapVector.109" = type { %"class.WTF::Vector.112" }
%"class.WTF::Vector.112" = type { %"class.WTF::VectorBuffer.113" }
%"class.WTF::VectorBuffer.113" = type { %"class.WTF::VectorBufferBase.114" }
%"class.WTF::VectorBufferBase.114" = type { %"class.blink::Member.115"*, i32, i32 }
%"class.blink::Member.115" = type opaque
%"class.blink::HeapVector.117" = type { %"class.WTF::Vector.120" }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.121" }
%"class.WTF::VectorBuffer.121" = type { %"class.WTF::VectorBufferBase.122" }
%"class.WTF::VectorBufferBase.122" = type { %"class.blink::Member.123"*, i32, i32 }
%"class.blink::Member.123" = type opaque
%"class.blink::HeapVector.125" = type { %"class.WTF::Vector.128" }
%"class.WTF::Vector.128" = type { %"class.WTF::VectorBuffer.129" }
%"class.WTF::VectorBuffer.129" = type { %"class.WTF::VectorBufferBase.130" }
%"class.WTF::VectorBufferBase.130" = type { %"class.blink::Member.131"*, i32, i32 }
%"class.blink::Member.131" = type opaque
%"class.blink::HeapVector.133" = type { %"class.WTF::Vector.136" }
%"class.WTF::Vector.136" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"class.blink::Member.139"*, i32, i32 }
%"class.blink::Member.139" = type opaque
%"class.blink::HeapVector.141" = type { %"class.WTF::Vector.144" }
%"class.WTF::Vector.144" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.146" }
%"class.WTF::VectorBufferBase.146" = type { %"class.blink::Member.147"*, i32, i32 }
%"class.blink::Member.147" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.151" }
%"class.WTF::HashMap.151" = type { %"class.WTF::HashTable.152" }
%"class.WTF::HashTable.152" = type <{ %"struct.WTF::KeyValuePair.154"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.154" = type opaque
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.157, %"class.blink::Member.354", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.157 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.158", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.158" = type { %"class.base::RefCounted.159" }
%"class.base::RefCounted.159" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.162" }
%"class.blink::HeapHashMap.162" = type { %"class.WTF::HashMap.165" }
%"class.WTF::HashMap.165" = type { %"class.WTF::HashTable.166" }
%"class.WTF::HashTable.166" = type <{ %"struct.WTF::KeyValuePair.168"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.168" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.89" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.169" }
%"class.blink::MemberBase.169" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.170", i32, [4 x i8], %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.308", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.342", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.349", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.235", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.288", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.206" = type { %"struct.std::__1::__atomic_base.207" }
%"struct.std::__1::__atomic_base.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__cxx_atomic_impl.209" }
%"struct.std::__1::__cxx_atomic_impl.209" = type { %"struct.std::__1::__cxx_atomic_base_impl.210" }
%"struct.std::__1::__cxx_atomic_base_impl.210" = type { i64 }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::Worklist.217"* }
%"class.blink::Worklist.217" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::Worklist.224"* }
%"class.blink::Worklist.224" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::Worklist.231"* }
%"class.blink::Worklist.231" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::Worklist.238"* }
%"class.blink::Worklist.238" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist.245"* }
%"class.blink::Worklist.245" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::Worklist.252"* }
%"class.blink::Worklist.252" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::Worklist.259"* }
%"class.blink::Worklist.259" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.206" }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.282", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { i64 }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { float }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.291", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.300" }
%"class.WTF::Vector.300" = type { %"class.WTF::VectorBuffer.301" }
%"class.WTF::VectorBuffer.301" = type { %"class.WTF::VectorBufferBase.302" }
%"class.WTF::VectorBufferBase.302" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.316" }
%"class.WTF::VectorBuffer.316" = type { %"class.WTF::VectorBufferBase.317" }
%"class.WTF::VectorBufferBase.317" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.330" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.217"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.224"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.231"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.238"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.245"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.358" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.348 }
%class.scoped_refptr.348 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.349" = type { %"struct.std::__1::__atomic_base.350" }
%"struct.std::__1::__atomic_base.350" = type { %"struct.std::__1::__cxx_atomic_impl.351" }
%"struct.std::__1::__cxx_atomic_impl.351" = type { %"struct.std::__1::__cxx_atomic_base_impl.352" }
%"struct.std::__1::__cxx_atomic_base_impl.352" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.353" }
%"class.base::time_internal::TimeBase.353" = type { i64 }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.356" }
%"class.blink::Persistent.356" = type { %"class.blink::PersistentBase.357" }
%"class.blink::PersistentBase.357" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference", %class.scoped_refptr.363 }
%class.scoped_refptr.363 = type { %"class.blink::DOMWrapperWorld"* }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { i8*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::BlobData" = type { %"class.WTF::String", i32, %"class.WTF::Vector.372", i64, %"class.blink::BlobBytesProvider"* }
%"class.WTF::Vector.372" = type { %"class.WTF::VectorBuffer.373" }
%"class.WTF::VectorBuffer.373" = type { %"class.WTF::VectorBufferBase.374" }
%"class.WTF::VectorBufferBase.374" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type opaque
%"class.blink::BlobBytesProvider" = type opaque
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.381", i64, %"class.WTF::Vector.79", %"class.WTF::Vector.383" }
%"class.WTF::RefCounted.381" = type { %"class.base::RefCounted.382" }
%"class.base::RefCounted.382" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.383" = type { %"class.WTF::VectorBuffer.384" }
%"class.WTF::VectorBuffer.384" = type { %"class.WTF::VectorBufferBase.385" }
%"class.WTF::VectorBufferBase.385" = type { %"class.std::__1::unique_ptr.386"*, i32, i32 }
%"class.std::__1::unique_ptr.386" = type opaque
%"class.blink::IDBValue" = type { %class.scoped_refptr.380, %"class.WTF::Vector.69", %"class.WTF::Vector.53", %"class.std::__1::unique_ptr.389", %"class.blink::IDBKeyPath", %"class.v8::Isolate"*, i64 }
%class.scoped_refptr.380 = type { %"class.WTF::SharedBuffer"* }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.blink::IDBKey"* }
%"class.blink::IDBKey" = type { i32, %"class.WTF::Vector.392", %class.scoped_refptr.380, %"class.WTF::String", double, i64 }
%"class.WTF::Vector.392" = type { %"class.WTF::VectorBuffer.393" }
%"class.WTF::VectorBuffer.393" = type { %"class.WTF::VectorBufferBase.394" }
%"class.WTF::VectorBufferBase.394" = type { %"class.std::__1::unique_ptr.389"*, i32, i32 }
%"class.blink::IDBKeyPath" = type { i32, %"class.WTF::String", %"class.WTF::Vector.400" }
%"class.WTF::Vector.400" = type { %"class.WTF::VectorBuffer.401" }
%"class.WTF::VectorBuffer.401" = type { %"class.WTF::VectorBufferBase.402" }
%"class.WTF::VectorBufferBase.402" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.405" = type { %"class.WTF::VectorBuffer.406" }
%"class.WTF::VectorBuffer.406" = type { %"class.WTF::VectorBufferBase.407" }
%"class.WTF::VectorBufferBase.407" = type { %"class.std::__1::unique_ptr.408"*, i32, i32 }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::IDBValue"* }

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIKS4_EEvOT_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14BlobDataHandleEEEEmm = comdat any

$_ZN3WTF6VectorIN5blink11WebBlobInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11WebBlobInfoEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIN5blink16SerializationTagEEEvOT_ = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKhEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink11WebBlobInfoELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [40 x i8] c"application/vnd.blink-idb-value-wrapper\00", align 1
@_ZN5blink12_GLOBAL__N_135kRequiresProcessingSSVPseudoVersionE = internal constant i8 17, align 1
@_ZN5blink12_GLOBAL__N_116kReplaceWithBlobE = internal constant i8 1, align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.2 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14BlobDataHandleEEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::BlobDataHandle>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11WebBlobInfoEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::WebBlobInfo]\00", align 1

@_ZN5blink15IDBValueWrapperC1EPN2v87IsolateENS1_5LocalINS1_5ValueEEENS_21SerializedScriptValue16SerializeOptions23WasmSerializationPolicyERNS_14ExceptionStateE = hidden unnamed_addr alias void (%"class.blink::IDBValueWrapper"*, %"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"*), void (%"class.blink::IDBValueWrapper"*, %"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"*)* @_ZN5blink15IDBValueWrapperC2EPN2v87IsolateENS1_5LocalINS1_5ValueEEENS_21SerializedScriptValue16SerializeOptions23WasmSerializationPolicyERNS_14ExceptionStateE
@_ZN5blink15IDBValueWrapperD1Ev = hidden unnamed_addr alias void (%"class.blink::IDBValueWrapper"*), void (%"class.blink::IDBValueWrapper"*)* @_ZN5blink15IDBValueWrapperD2Ev
@_ZN5blink17IDBValueUnwrapperC1Ev = hidden unnamed_addr alias void (%"class.blink::IDBValueUnwrapper"*), void (%"class.blink::IDBValueUnwrapper"*)* @_ZN5blink17IDBValueUnwrapperC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15IDBValueWrapperC2EPN2v87IsolateENS1_5LocalINS1_5ValueEEENS_21SerializedScriptValue16SerializeOptions23WasmSerializationPolicyERNS_14ExceptionStateE(%"class.blink::IDBValueWrapper"*, %"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %6 = alloca %"struct.blink::SerializedScriptValue::SerializeOptions", align 8
  %7 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 5
  %10 = bitcast %"struct.blink::SerializedScriptValue::SerializeOptions"* %6 to i8*
  %11 = bitcast %"class.blink::IDBValueWrapper"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 80, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %12 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %6, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %6, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.blink::SerializedScriptValue::SerializeOptions", %"struct.blink::SerializedScriptValue::SerializeOptions"* %6, i64 0, i32 3
  %15 = bitcast %"struct.blink::SerializedScriptValue::SerializeOptions"* %6 to i64*
  store i64 0, i64* %15, align 8
  store %"class.WTF::Vector.69"* %8, %"class.WTF::Vector.69"** %12, align 8
  store i32 1, i32* %14, align 4
  store i32 %3, i32* %13, align 8
  %16 = call %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9SerializeEPN2v87IsolateENS1_5LocalINS1_5ValueEEERKNS0_16SerializeOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"struct.blink::SerializedScriptValue::SerializeOptions"* nonnull dereferenceable(24) %6, %"class.blink::ExceptionState"* dereferenceable(72) %4) #10
  %17 = ptrtoint %"class.blink::SerializedScriptValue"* %16 to i64
  %18 = bitcast %"class.blink::IDBValueWrapper"* %0 to i64*
  %19 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %7, align 8
  store i64 %17, i64* %18, align 8
  %20 = icmp eq %"class.blink::SerializedScriptValue"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %19) #10
  %26 = bitcast %"class.blink::SerializedScriptValue"* %19 to i8*
  call void @free(i8* %26) #10
  br label %27

27:                                               ; preds = %25, %21
  %28 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %7, align 8
  br label %29

29:                                               ; preds = %27, %5
  %30 = phi %"class.blink::SerializedScriptValue"* [ %28, %27 ], [ %16, %5 ]
  %31 = icmp eq %"class.blink::SerializedScriptValue"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %30, i64 0, i32 3
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %9, align 8
  br label %35

35:                                               ; preds = %29, %32
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::SerializedScriptValue"* @_ZN5blink21SerializedScriptValue9SerializeEPN2v87IsolateENS1_5LocalINS1_5ValueEEERKNS0_16SerializeOptionsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"struct.blink::SerializedScriptValue::SerializeOptions"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15IDBValueWrapperD2Ev(%"class.blink::IDBValueWrapper"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %11, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %5
  store i32 0, i32* %6, align 4
  br label %10

10:                                               ; preds = %9, %5
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %3) #10
  store i8* null, i8** %2, align 8
  br label %11

11:                                               ; preds = %1, %10
  %12 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %12, align 8
  %14 = icmp eq %"class.blink::WebBlobInfo"* %13, null
  br i1 %14, label %31, label %15, !prof !2

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %28, label %19, !prof !3

19:                                               ; preds = %15
  %20 = zext i32 %17 to i64
  %21 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %13, i64 %20
  br label %22

22:                                               ; preds = %22, %19
  %23 = phi %"class.blink::WebBlobInfo"* [ %24, %22 ], [ %13, %19 ]
  tail call void @_ZN5blink11WebBlobInfoD1Ev(%"class.blink::WebBlobInfo"* %23) #10
  %24 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %23, i64 1
  %25 = icmp eq %"class.blink::WebBlobInfo"* %24, %21
  br i1 %25, label %26, label %22

26:                                               ; preds = %22
  store i32 0, i32* %16, align 4
  %27 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %12, align 8
  br label %28

28:                                               ; preds = %26, %15
  %29 = phi %"class.blink::WebBlobInfo"* [ %13, %15 ], [ %27, %26 ]
  %30 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %29, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %30) #10
  store %"class.blink::WebBlobInfo"* null, %"class.blink::WebBlobInfo"** %12, align 8
  br label %31

31:                                               ; preds = %11, %28
  %32 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %33, align 8
  %35 = icmp eq %class.scoped_refptr.44* %34, null
  br i1 %35, label %63, label %36, !prof !2

36:                                               ; preds = %31
  %37 = bitcast %class.scoped_refptr.44* %34 to i8*
  %38 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %61, label %41, !prof !3

41:                                               ; preds = %36
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %34, i64 %42
  br label %44

44:                                               ; preds = %55, %41
  %45 = phi %class.scoped_refptr.44* [ %56, %55 ], [ %34, %41 ]
  %46 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %45, i64 0, i32 0
  %47 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %46, align 8
  %48 = icmp eq %"class.blink::BlobDataHandle"* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %47) #10
  %54 = bitcast %"class.blink::BlobDataHandle"* %47 to i8*
  tail call void @free(i8* %54) #10
  br label %55

55:                                               ; preds = %53, %49, %44
  %56 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %45, i64 1
  %57 = icmp eq %class.scoped_refptr.44* %56, %43
  br i1 %57, label %58, label %44

58:                                               ; preds = %55
  store i32 0, i32* %38, align 4
  %59 = bitcast %"class.WTF::Vector.64"* %32 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %58, %36
  %62 = phi i8* [ %60, %58 ], [ %37, %36 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %62) #10
  store %class.scoped_refptr.44* null, %class.scoped_refptr.44** %33, align 8
  br label %63

63:                                               ; preds = %31, %61
  %64 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 0, i32 0
  %65 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %64, align 8
  %66 = icmp eq %"class.blink::SerializedScriptValue"* %65, null
  br i1 %66, label %73, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw sub i32* %68, i32 1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %65) #10
  %72 = bitcast %"class.blink::SerializedScriptValue"* %65 to i8*
  tail call void @free(i8* %72) #10
  br label %73

73:                                               ; preds = %63, %67, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15IDBValueWrapper5CloneEPNS_11ScriptStateEPNS_11ScriptValueE(%"class.blink::IDBValueWrapper"*, %"class.blink::ScriptState"*, %"class.blink::ScriptValue"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 2
  call void @_ZN5blink22DeserializeScriptValueEPNS_11ScriptStateEPNS_21SerializedScriptValueEPKN3WTF6VectorINS_11WebBlobInfoELj0ENS4_18PartitionAllocatorEEE(%"class.blink::ScriptValue"* nonnull sret %4, %"class.blink::ScriptState"* %1, %"class.blink::SerializedScriptValue"* %7, %"class.WTF::Vector.69"* %8) #10
  %9 = bitcast %"class.blink::ScriptValue"* %4 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::ScriptValue"* %2 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  %14 = call dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"* %12, %"class.blink::WorldSafeV8Reference"* dereferenceable(16) %13) #10
  %15 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  %16 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %15, align 8
  %17 = icmp eq %"class.blink::DOMWrapperWorld"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %16, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #10
  %20 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %16) #10
  %24 = bitcast %"class.blink::DOMWrapperWorld"* %16 to i8*
  call void @free(i8* %24) #10
  br label %25

25:                                               ; preds = %3, %18, %23
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

declare void @_ZN5blink22DeserializeScriptValueEPNS_11ScriptStateEPNS_21SerializedScriptValueEPKN3WTF6VectorINS_11WebBlobInfoELj0ENS4_18PartitionAllocatorEEE(%"class.blink::ScriptValue"* sret, %"class.blink::ScriptState"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::Vector.69"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15IDBValueWrapper11WriteVarIntEjRN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEE(i32, %"class.WTF::Vector.79"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %1, i64 0, i32 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %23, %2
  %9 = phi i32 [ %0, %2 ], [ %24, %23 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #10
  %10 = and i32 %9, 127
  %11 = or i32 %10, 128
  store i32 %11, i32* %3, align 4
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* %6, align 8
  %14 = icmp eq i32 %12, %13
  br i1 %14, label %22, label %15, !prof !3

15:                                               ; preds = %8
  %16 = load i8*, i8** %7, align 8
  %17 = zext i32 %12 to i64
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = trunc i32 %11 to i8
  store i8 %19, i8* %18, align 1
  %20 = load i32, i32* %5, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %5, align 4
  br label %23

22:                                               ; preds = %8
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.79"* %1, i32* nonnull dereferenceable(4) %3) #10
  br label %23

23:                                               ; preds = %15, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #10
  %24 = lshr i32 %9, 7
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %8

26:                                               ; preds = %23
  %27 = load i32, i32* %5, align 4
  %28 = add i32 %27, -1
  %29 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.79"* %1, i32 %28) #10
  %30 = load i8, i8* %29, align 1
  %31 = and i8 %30, 127
  store i8 %31, i8* %29, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15IDBValueWrapper10WriteBytesERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERNS2_IcLj0ES3_EE(%"class.WTF::Vector.364"* nocapture readonly dereferenceable(16), %"class.WTF::Vector.79"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = bitcast i32* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %1, i64 0, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %25, %2
  %11 = phi i32 [ %5, %2 ], [ %26, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #10
  %12 = and i32 %11, 127
  %13 = or i32 %12, 128
  store i32 %13, i32* %3, align 4
  %14 = load i32, i32* %7, align 4
  %15 = load i32, i32* %8, align 8
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %24, label %17, !prof !3

17:                                               ; preds = %10
  %18 = load i8*, i8** %9, align 8
  %19 = zext i32 %14 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = trunc i32 %13 to i8
  store i8 %21, i8* %20, align 1
  %22 = load i32, i32* %7, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %7, align 4
  br label %25

24:                                               ; preds = %10
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.79"* %1, i32* nonnull dereferenceable(4) %3) #10
  br label %25

25:                                               ; preds = %24, %17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #10
  %26 = lshr i32 %11, 7
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %10

28:                                               ; preds = %25
  %29 = load i32, i32* %7, align 4
  %30 = add i32 %29, -1
  %31 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.79"* %1, i32 %30) #10
  %32 = load i8, i8* %31, align 1
  %33 = and i8 %32, 127
  store i8 %33, i8* %31, align 1
  %34 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = load i32, i32* %4, align 4
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.79"* %1, i8* %35, i32 %36)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.79"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %46

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %46, !prof !2

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %27) #10
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %22
  %31 = bitcast %"class.WTF::Vector.79"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %10, align 8
  br label %46

33:                                               ; preds = %22
  %34 = load i8*, i8** %23, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !2

38:                                               ; preds = %33
  %39 = load i32, i32* %7, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #10
  %41 = load i8*, i8** %23, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #10
  %44 = bitcast %"class.WTF::Vector.79"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %10, align 8
  br label %46

46:                                               ; preds = %42, %30, %13, %3
  %47 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %48, align 8
  %49 = load i32, i32* %7, align 4
  %50 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = icmp ult i32 %9, %49
  br i1 %51, label %53, label %52

52:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  store i8* null, i8** %48, align 8
  br label %62

53:                                               ; preds = %46
  %54 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %55 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %49) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %54, i8* %55) #10
  %56 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  store i8* %57, i8** %48, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  br label %62

62:                                               ; preds = %52, %53, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  %63 = zext i32 %2 to i64
  %64 = getelementptr inbounds i8, i8* %1, i64 %63
  %65 = icmp eq i32 %2, 0
  br i1 %65, label %170, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = load i32, i32* %7, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  %72 = icmp ult i32 %2, 32
  br i1 %72, label %160, label %73

73:                                               ; preds = %66
  %74 = add nuw nsw i64 %70, %63
  %75 = getelementptr i8, i8* %68, i64 %74
  %76 = icmp ult i8* %71, %64
  %77 = icmp ugt i8* %75, %1
  %78 = and i1 %76, %77
  br i1 %78, label %160, label %79

79:                                               ; preds = %73
  %80 = and i64 %63, 4294967264
  %81 = getelementptr i8, i8* %71, i64 %80
  %82 = getelementptr i8, i8* %1, i64 %80
  %83 = add nsw i64 %80, -32
  %84 = lshr exact i64 %83, 5
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 3
  %87 = icmp ult i64 %83, 96
  br i1 %87, label %139, label %88

88:                                               ; preds = %79
  %89 = sub nsw i64 %85, %86
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi i64 [ 0, %88 ], [ %136, %90 ]
  %92 = phi i64 [ %89, %88 ], [ %137, %90 ]
  %93 = getelementptr i8, i8* %71, i64 %91
  %94 = getelementptr i8, i8* %1, i64 %91
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1, !alias.scope !4
  %97 = getelementptr i8, i8* %94, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1, !alias.scope !4
  %100 = bitcast i8* %93 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1, !alias.scope !7, !noalias !4
  %101 = getelementptr i8, i8* %93, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1, !alias.scope !7, !noalias !4
  %103 = or i64 %91, 32
  %104 = getelementptr i8, i8* %71, i64 %103
  %105 = getelementptr i8, i8* %1, i64 %103
  %106 = bitcast i8* %105 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1, !alias.scope !4
  %108 = getelementptr i8, i8* %105, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1, !alias.scope !4
  %111 = bitcast i8* %104 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1, !alias.scope !7, !noalias !4
  %112 = getelementptr i8, i8* %104, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1, !alias.scope !7, !noalias !4
  %114 = or i64 %91, 64
  %115 = getelementptr i8, i8* %71, i64 %114
  %116 = getelementptr i8, i8* %1, i64 %114
  %117 = bitcast i8* %116 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1, !alias.scope !4
  %119 = getelementptr i8, i8* %116, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1, !alias.scope !4
  %122 = bitcast i8* %115 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1, !alias.scope !7, !noalias !4
  %123 = getelementptr i8, i8* %115, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1, !alias.scope !7, !noalias !4
  %125 = or i64 %91, 96
  %126 = getelementptr i8, i8* %71, i64 %125
  %127 = getelementptr i8, i8* %1, i64 %125
  %128 = bitcast i8* %127 to <16 x i8>*
  %129 = load <16 x i8>, <16 x i8>* %128, align 1, !alias.scope !4
  %130 = getelementptr i8, i8* %127, i64 16
  %131 = bitcast i8* %130 to <16 x i8>*
  %132 = load <16 x i8>, <16 x i8>* %131, align 1, !alias.scope !4
  %133 = bitcast i8* %126 to <16 x i8>*
  store <16 x i8> %129, <16 x i8>* %133, align 1, !alias.scope !7, !noalias !4
  %134 = getelementptr i8, i8* %126, i64 16
  %135 = bitcast i8* %134 to <16 x i8>*
  store <16 x i8> %132, <16 x i8>* %135, align 1, !alias.scope !7, !noalias !4
  %136 = add i64 %91, 128
  %137 = add i64 %92, -4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %90, !llvm.loop !9

139:                                              ; preds = %90, %79
  %140 = phi i64 [ 0, %79 ], [ %136, %90 ]
  %141 = icmp eq i64 %86, 0
  br i1 %141, label %158, label %142

142:                                              ; preds = %139, %142
  %143 = phi i64 [ %155, %142 ], [ %140, %139 ]
  %144 = phi i64 [ %156, %142 ], [ %86, %139 ]
  %145 = getelementptr i8, i8* %71, i64 %143
  %146 = getelementptr i8, i8* %1, i64 %143
  %147 = bitcast i8* %146 to <16 x i8>*
  %148 = load <16 x i8>, <16 x i8>* %147, align 1, !alias.scope !4
  %149 = getelementptr i8, i8* %146, i64 16
  %150 = bitcast i8* %149 to <16 x i8>*
  %151 = load <16 x i8>, <16 x i8>* %150, align 1, !alias.scope !4
  %152 = bitcast i8* %145 to <16 x i8>*
  store <16 x i8> %148, <16 x i8>* %152, align 1, !alias.scope !7, !noalias !4
  %153 = getelementptr i8, i8* %145, i64 16
  %154 = bitcast i8* %153 to <16 x i8>*
  store <16 x i8> %151, <16 x i8>* %154, align 1, !alias.scope !7, !noalias !4
  %155 = add i64 %143, 32
  %156 = add i64 %144, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %142, !llvm.loop !11

158:                                              ; preds = %142, %139
  %159 = icmp eq i64 %80, %63
  br i1 %159, label %170, label %160

160:                                              ; preds = %158, %73, %66
  %161 = phi i8* [ %71, %73 ], [ %71, %66 ], [ %81, %158 ]
  %162 = phi i8* [ %1, %73 ], [ %1, %66 ], [ %82, %158 ]
  br label %163

163:                                              ; preds = %160, %163
  %164 = phi i8* [ %167, %163 ], [ %161, %160 ]
  %165 = phi i8* [ %168, %163 ], [ %162, %160 ]
  %166 = load i8, i8* %165, align 1
  store i8 %166, i8* %164, align 1
  %167 = getelementptr inbounds i8, i8* %164, i64 1
  %168 = getelementptr inbounds i8, i8* %165, i64 1
  %169 = icmp eq i8* %168, %64
  br i1 %169, label %170, label %163, !llvm.loop !13

170:                                              ; preds = %163, %158, %62
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15IDBValueWrapper11DoneCloningEv(%"class.blink::IDBValueWrapper"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = bitcast i8** %5 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = shufflevector <2 x i64> %7, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %9 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %10, align 8
  %11 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %4, i64 0, i32 9, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %4, i64 0, i32 9, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %4, i64 0, i32 9, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %18
  br i1 %13, label %38, label %20

20:                                               ; preds = %1
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %20, %26
  %23 = phi %"struct.WTF::KeyValuePair"* [ %27, %26 ], [ %15, %20 ]
  %24 = bitcast %"struct.WTF::KeyValuePair"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  switch i64 %25, label %29 [
    i64 -1, label %26
    i64 0, label %26
  ]

26:                                               ; preds = %22, %22
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 1
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %27, %19
  br i1 %28, label %38, label %22

29:                                               ; preds = %22, %20
  %30 = phi %"struct.WTF::KeyValuePair"* [ %15, %20 ], [ %23, %22 ]
  %31 = icmp eq %"struct.WTF::KeyValuePair"* %30, %19
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 1
  %34 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %35 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %33, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.logging::CheckError"* %2 to i8*
  br label %39

38:                                               ; preds = %26, %62, %72, %69, %1, %29
  ret void

39:                                               ; preds = %32, %72
  %40 = phi %"struct.WTF::KeyValuePair"* [ %30, %32 ], [ %66, %72 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 1
  %42 = load i32, i32* %34, align 4
  %43 = load i32, i32* %35, align 8
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %61, label %45, !prof !3

45:                                               ; preds = %39
  %46 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %36, align 8
  %47 = zext i32 %42 to i64
  %48 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %41, i64 0, i32 0
  %49 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %48, align 8
  %50 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %46, i64 %47, i32 0
  store %"class.blink::BlobDataHandle"* %49, %"class.blink::BlobDataHandle"** %50, align 8
  %51 = icmp eq %"class.blink::BlobDataHandle"* %49, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw add i32* %53, i32 1 monotonic
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  br label %58

58:                                               ; preds = %56, %52, %45
  %59 = load i32, i32* %34, align 4
  %60 = add i32 %59, 1
  store i32 %60, i32* %34, align 4
  br label %62

61:                                               ; preds = %39
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIKS4_EEvOT_(%"class.WTF::Vector.64"* %33, %class.scoped_refptr.44* dereferenceable(8) %41) #10
  br label %62

62:                                               ; preds = %58, %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 1
  %64 = icmp eq %"struct.WTF::KeyValuePair"* %63, %19
  br i1 %64, label %38, label %65

65:                                               ; preds = %62, %69
  %66 = phi %"struct.WTF::KeyValuePair"* [ %70, %69 ], [ %63, %62 ]
  %67 = bitcast %"struct.WTF::KeyValuePair"* %66 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %72 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %65, %65
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 1
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %70, %19
  br i1 %71, label %38, label %65

72:                                               ; preds = %65
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %66, %19
  br i1 %73, label %38, label %39
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15IDBValueWrapper16WrapIfBiggerThanEj(%"class.blink::IDBValueWrapper"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %class.scoped_refptr.44, align 8
  %9 = alloca i32, align 4
  %10 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = zext i32 %1 to i64
  %13 = icmp ugt i64 %11, %12
  br i1 %13, label %14, label %253

14:                                               ; preds = %2
  %15 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i64 39) #10
  %17 = call noalias i8* @malloc(i64 48) #10
  %18 = bitcast i8* %17 to %"class.blink::BlobData"*
  call void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"* %18, i32 1) #10
  %19 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i64 39) #10
  call void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"* %18, %"class.WTF::String"* nonnull dereferenceable(8) %7) #10
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #10
  br label %36

36:                                               ; preds = %14, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %37 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 4, i32 1
  %38 = load i8*, i8** %37, align 8
  call void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"* %18, i8* %38, i64 %11) #10
  %39 = bitcast %class.scoped_refptr.44* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %8, i64 0, i32 0
  store %"class.blink::BlobDataHandle"* inttoptr (i64 -6148914691236517206 to %"class.blink::BlobDataHandle"*), %"class.blink::BlobDataHandle"** %40, align 8
  %41 = call noalias i8* @malloc(i64 88) #10
  %42 = bitcast i8* %41 to %"class.blink::BlobDataHandle"*
  call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %42, %"class.blink::BlobData"* %18, i64 %11) #10
  %43 = bitcast %class.scoped_refptr.44* %8 to i8**
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 2
  %45 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %72, !prof !3

50:                                               ; preds = %36
  %51 = add i32 %46, 1
  %52 = lshr i32 %46, 2
  %53 = add i32 %51, %52
  %54 = icmp ugt i32 %53, 4
  %55 = select i1 %54, i32 %53, i32 4
  %56 = icmp ugt i32 %55, %51
  %57 = select i1 %56, i32 %55, i32 %51
  %58 = icmp ult i32 %46, %57
  br i1 %58, label %59, label %72, !prof !2

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %44, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %60, align 8
  %62 = icmp eq %"class.blink::WebBlobInfo"* %61, null
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = zext i32 %57 to i64
  %65 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11WebBlobInfoEEEmm(i64 %64) #10
  %66 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %65, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11WebBlobInfoEEEPKcv, i64 0, i64 0)) #10
  %67 = ptrtoint i8* %66 to i64
  %68 = bitcast %"class.WTF::Vector.69"* %44 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = lshr i64 %65, 6
  %70 = trunc i64 %69 to i32
  store i32 %70, i32* %47, align 8
  br label %72

71:                                               ; preds = %59
  call void @_ZN3WTF6VectorIN5blink11WebBlobInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.69"* %44, i32 %57) #10
  br label %72

72:                                               ; preds = %71, %63, %50, %36
  %73 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %44, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %73, align 8
  %75 = load i32, i32* %45, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %74, i64 %76, i32 0
  %78 = bitcast i8* %77 to %"class.blink::WebBlobInfo"*
  %79 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %40, align 8
  %80 = icmp eq %"class.blink::BlobDataHandle"* %79, null
  br i1 %80, label %88, label %81

81:                                               ; preds = %72
  %82 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 1 monotonic
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #10
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #10
  br label %88

88:                                               ; preds = %72, %81, %85
  call void @_ZN5blink11WebBlobInfoC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::WebBlobInfo"* %78, %"class.blink::BlobDataHandle"* %79) #10
  %89 = load i32, i32* %45, align 4
  %90 = add i32 %89, 1
  store i32 %90, i32* %45, align 4
  %91 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 1
  %92 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %93, %95
  br i1 %96, label %107, label %97, !prof !3

97:                                               ; preds = %88
  %98 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %91, i64 0, i32 0, i32 0, i32 0
  %99 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %98, align 8
  %100 = zext i32 %93 to i64
  %101 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %99, i64 %100
  %102 = bitcast %class.scoped_refptr.44* %8 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.scoped_refptr.44* %101 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %40, align 8
  %105 = load i32, i32* %92, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %92, align 4
  br label %108

107:                                              ; preds = %88
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.64"* %91, %class.scoped_refptr.44* nonnull dereferenceable(8) %8) #10
  br label %108

108:                                              ; preds = %97, %107
  %109 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 3
  %110 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %123, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %118, label %117

117:                                              ; preds = %113
  store i32 0, i32* %114, align 4
  br label %118

118:                                              ; preds = %117, %113
  %119 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %109, i64 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = bitcast %"class.WTF::Vector.79"* %109 to i64*
  store atomic i64 0, i64* %121 monotonic, align 8
  store i32 0, i32* %110, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %120) #10
  %122 = load i32, i32* %110, align 8
  br label %123

123:                                              ; preds = %108, %118
  %124 = phi i32 [ 0, %108 ], [ %122, %118 ]
  %125 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125) #10
  store i32 255, i32* %9, align 4
  %126 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, %124
  br i1 %128, label %136, label %129, !prof !3

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %109, i64 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = zext i32 %127 to i64
  %133 = getelementptr inbounds i8, i8* %131, i64 %132
  store i8 -1, i8* %133, align 1
  %134 = load i32, i32* %126, align 4
  %135 = add i32 %134, 1
  store i32 %135, i32* %126, align 4
  br label %138

136:                                              ; preds = %123
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIN5blink16SerializationTagEEEvOT_(%"class.WTF::Vector.79"* %109, i32* nonnull dereferenceable(4) %9) #10
  %137 = load i32, i32* %126, align 4
  br label %138

138:                                              ; preds = %129, %136
  %139 = phi i32 [ %135, %129 ], [ %137, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %125) #10
  %140 = load i32, i32* %110, align 8
  %141 = icmp eq i32 %139, %140
  br i1 %141, label %149, label %142, !prof !3

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %109, i64 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = zext i32 %139 to i64
  %146 = getelementptr inbounds i8, i8* %144, i64 %145
  store i8 17, i8* %146, align 1
  %147 = load i32, i32* %126, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %126, align 4
  br label %151

149:                                              ; preds = %138
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKhEEvOT_(%"class.WTF::Vector.79"* %109, i8* nonnull dereferenceable(1) @_ZN5blink12_GLOBAL__N_135kRequiresProcessingSSVPseudoVersionE) #10
  %150 = load i32, i32* %126, align 4
  br label %151

151:                                              ; preds = %142, %149
  %152 = phi i32 [ %148, %142 ], [ %150, %149 ]
  %153 = load i32, i32* %110, align 8
  %154 = icmp eq i32 %152, %153
  br i1 %154, label %162, label %155, !prof !3

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %109, i64 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = zext i32 %152 to i64
  %159 = getelementptr inbounds i8, i8* %157, i64 %158
  store i8 1, i8* %159, align 1
  %160 = load i32, i32* %126, align 4
  %161 = add i32 %160, 1
  store i32 %161, i32* %126, align 4
  br label %163

162:                                              ; preds = %151
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKhEEvOT_(%"class.WTF::Vector.79"* %109, i8* nonnull dereferenceable(1) @_ZN5blink12_GLOBAL__N_116kReplaceWithBlobE) #10
  br label %163

163:                                              ; preds = %155, %162
  %164 = icmp ult i64 %11, 4294967296
  br i1 %164, label %166, label %165, !prof !2

165:                                              ; preds = %163
  call void @llvm.trap() #10
  unreachable

166:                                              ; preds = %163
  %167 = trunc i64 %11 to i32
  %168 = bitcast i32* %4 to i8*
  %169 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %109, i64 0, i32 0, i32 0, i32 0
  br label %170

170:                                              ; preds = %185, %166
  %171 = phi i32 [ %167, %166 ], [ %186, %185 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %168) #10
  %172 = and i32 %171, 127
  %173 = or i32 %172, 128
  store i32 %173, i32* %4, align 4
  %174 = load i32, i32* %126, align 4
  %175 = load i32, i32* %110, align 8
  %176 = icmp eq i32 %174, %175
  br i1 %176, label %184, label %177, !prof !3

177:                                              ; preds = %170
  %178 = load i8*, i8** %169, align 8
  %179 = zext i32 %174 to i64
  %180 = getelementptr inbounds i8, i8* %178, i64 %179
  %181 = trunc i32 %173 to i8
  store i8 %181, i8* %180, align 1
  %182 = load i32, i32* %126, align 4
  %183 = add i32 %182, 1
  store i32 %183, i32* %126, align 4
  br label %185

184:                                              ; preds = %170
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.79"* %109, i32* nonnull dereferenceable(4) %4) #10
  br label %185

185:                                              ; preds = %184, %177
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %168) #10
  %186 = lshr i32 %171, 7
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %170

188:                                              ; preds = %185
  %189 = load i32, i32* %126, align 4
  %190 = add i32 %189, -1
  %191 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.79"* %109, i32 %190) #10
  %192 = load i8, i8* %191, align 1
  %193 = and i8 %192, 127
  store i8 %193, i8* %191, align 1
  %194 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 0, i32 0
  %195 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %195, i64 0, i32 9, i32 0, i32 2
  %197 = load i32, i32* %196, align 4
  %198 = bitcast i32* %3 to i8*
  br label %199

199:                                              ; preds = %214, %188
  %200 = phi i32 [ %197, %188 ], [ %215, %214 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %198) #10
  %201 = and i32 %200, 127
  %202 = or i32 %201, 128
  store i32 %202, i32* %3, align 4
  %203 = load i32, i32* %126, align 4
  %204 = load i32, i32* %110, align 8
  %205 = icmp eq i32 %203, %204
  br i1 %205, label %213, label %206, !prof !3

206:                                              ; preds = %199
  %207 = load i8*, i8** %169, align 8
  %208 = zext i32 %203 to i64
  %209 = getelementptr inbounds i8, i8* %207, i64 %208
  %210 = trunc i32 %202 to i8
  store i8 %210, i8* %209, align 1
  %211 = load i32, i32* %126, align 4
  %212 = add i32 %211, 1
  store i32 %212, i32* %126, align 4
  br label %214

213:                                              ; preds = %199
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.79"* %109, i32* nonnull dereferenceable(4) %3) #10
  br label %214

214:                                              ; preds = %213, %206
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %198) #10
  %215 = lshr i32 %200, 7
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %199

217:                                              ; preds = %214
  %218 = load i32, i32* %126, align 4
  %219 = add i32 %218, -1
  %220 = call dereferenceable(1) i8* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.79"* %109, i32 %219) #10
  %221 = load i8, i8* %220, align 1
  %222 = and i8 %221, 127
  store i8 %222, i8* %220, align 1
  %223 = bitcast %"class.WTF::Vector.79"* %109 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = load i32, i32* %126, align 4
  %226 = zext i32 %225 to i64
  store i64 %226, i64* %10, align 8
  %227 = bitcast i8** %37 to i64*
  store i64 %224, i64* %227, align 8
  %228 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %40, align 8
  %229 = icmp eq %"class.blink::BlobDataHandle"* %228, null
  br i1 %229, label %236, label %230

230:                                              ; preds = %217
  %231 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %228, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = atomicrmw sub i32* %231, i32 1 acq_rel
  %233 = icmp eq i32 %232, 1
  br i1 %233, label %234, label %236

234:                                              ; preds = %230
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %228) #10
  %235 = bitcast %"class.blink::BlobDataHandle"* %228 to i8*
  call void @free(i8* %235) #10
  br label %236

236:                                              ; preds = %234, %230, %217
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  %237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %238 = icmp eq %"class.WTF::StringImpl"* %237, null
  br i1 %238, label %252, label %239

239:                                              ; preds = %236
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %241 = load atomic i32, i32* %240 monotonic, align 4
  %242 = and i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %237, i64 0, i32 0
  %245 = load i32, i32* %244, align 4
  br i1 %243, label %246, label %248

246:                                              ; preds = %239
  %247 = add i32 %245, -1
  store i32 %247, i32* %244, align 4
  br label %248

248:                                              ; preds = %246, %239
  %249 = phi i32 [ %247, %246 ], [ %245, %239 ]
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %252

251:                                              ; preds = %248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %237) #10
  br label %252

252:                                              ; preds = %236, %248, %251
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  br label %253

253:                                              ; preds = %2, %252
  %254 = phi i1 [ true, %252 ], [ false, %2 ]
  ret i1 %254
}

declare void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::SharedBuffer"* @_ZN5blink15IDBValueWrapper13TakeWireBytesEv(%"class.blink::IDBValueWrapper"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 4, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = tail call noalias i8* @malloc(i64 48) #10
  %11 = bitcast i8* %10 to %"class.WTF::SharedBuffer"*
  %12 = icmp ult i64 %9, 4294967296
  br i1 %12, label %14, label %13, !prof !2

13:                                               ; preds = %5
  tail call void @llvm.trap() #10
  unreachable

14:                                               ; preds = %5
  %15 = trunc i64 %9 to i32
  tail call void @_ZN3WTF12SharedBufferC1EPKhj(%"class.WTF::SharedBuffer"* %11, i8* %7, i32 %15) #10
  br label %19

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::IDBValueWrapper", %"class.blink::IDBValueWrapper"* %0, i64 0, i32 3
  %18 = tail call %"class.WTF::SharedBuffer"* @_ZN3WTF12SharedBuffer11AdoptVectorERNS_6VectorIcLj0ENS_18PartitionAllocatorEEE(%"class.WTF::Vector.79"* dereferenceable(16) %17) #10
  br label %19

19:                                               ; preds = %16, %14
  %20 = phi %"class.WTF::SharedBuffer"* [ %11, %14 ], [ %18, %16 ]
  ret %"class.WTF::SharedBuffer"* %20
}

declare %"class.WTF::SharedBuffer"* @_ZN3WTF12SharedBuffer11AdoptVectorERNS_6VectorIcLj0ENS_18PartitionAllocatorEEE(%"class.WTF::Vector.79"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17IDBValueUnwrapperC2Ev(%"class.blink::IDBValueUnwrapper"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBValueUnwrapper", %"class.blink::IDBValueUnwrapper"* %0, i64 0, i32 3, i32 0
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink17IDBValueUnwrapper5ResetEv(%"class.blink::IDBValueUnwrapper"* nocapture readnone) local_unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17IDBValueUnwrapper9IsWrappedEPNS_8IDBValueE(%"class.blink::IDBValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca [3 x i8], align 1
  %3 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %3) #10
  store i8 -86, i8* %3, align 1
  %4 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 1
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 2
  store i8 -86, i8* %5, align 1
  %6 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %6, align 8
  %8 = icmp eq %"class.WTF::SharedBuffer"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %1
  %10 = call zeroext i1 @_ZNK3WTF12SharedBuffer16GetBytesInternalEPvm(%"class.WTF::SharedBuffer"* nonnull %7, i8* nonnull %3, i64 3) #10
  br i1 %10, label %11, label %20

11:                                               ; preds = %9
  %12 = load i8, i8* %3, align 1
  %13 = icmp eq i8 %12, -1
  %14 = load i8, i8* %4, align 1
  %15 = icmp eq i8 %14, 17
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = load i8, i8* %5, align 1
  %19 = icmp eq i8 %18, 1
  br label %20

20:                                               ; preds = %1, %11, %17, %9
  %21 = phi i1 [ false, %9 ], [ false, %1 ], [ false, %11 ], [ %19, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %3) #10
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17IDBValueUnwrapper9IsWrappedERKN3WTF6VectorINSt3__110unique_ptrINS_8IDBValueENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.405"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = alloca [3 x i8], align 1
  %3 = getelementptr inbounds %"class.WTF::Vector.405", %"class.WTF::Vector.405"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.408"*, %"class.std::__1::unique_ptr.408"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.405", %"class.WTF::Vector.405"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.408"* %4, i64 %7
  %9 = icmp eq i32 %6, 0
  br i1 %9, label %36, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 0
  %12 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 1
  %13 = getelementptr inbounds [3 x i8], [3 x i8]* %2, i64 0, i64 2
  br label %14

14:                                               ; preds = %10, %33
  %15 = phi %"class.std::__1::unique_ptr.408"* [ %4, %10 ], [ %34, %33 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.408"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::IDBValue"*, %"class.blink::IDBValue"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %11) #10
  store i8 -86, i8* %11, align 1
  store i8 -86, i8* %12, align 1
  store i8 -86, i8* %13, align 1
  %18 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %18, align 8
  %20 = icmp eq %"class.WTF::SharedBuffer"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %14
  %22 = call zeroext i1 @_ZNK3WTF12SharedBuffer16GetBytesInternalEPvm(%"class.WTF::SharedBuffer"* nonnull %19, i8* nonnull %11, i64 3) #10
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = load i8, i8* %11, align 1
  %25 = icmp eq i8 %24, -1
  %26 = load i8, i8* %12, align 1
  %27 = icmp eq i8 %26, 17
  %28 = and i1 %25, %27
  br i1 %28, label %30, label %29

29:                                               ; preds = %21, %14, %23
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %11) #10
  br label %33

30:                                               ; preds = %23
  %31 = load i8, i8* %13, align 1
  %32 = icmp eq i8 %31, 1
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %11) #10
  br i1 %32, label %36, label %33

33:                                               ; preds = %30, %29
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.408"* %15, i64 1
  %35 = icmp eq %"class.std::__1::unique_ptr.408"* %34, %8
  br i1 %35, label %36, label %14

36:                                               ; preds = %30, %33, %1
  %37 = phi i1 [ false, %1 ], [ false, %33 ], [ true, %30 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17IDBValueUnwrapper6UnwrapEO13scoped_refptrIN3WTF12SharedBufferEEPNS_8IDBValueE(%class.scoped_refptr.380* nocapture readonly dereferenceable(8), %"class.blink::IDBValue"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.scoped_refptr.380, %class.scoped_refptr.380* %0, i64 0, i32 0
  %4 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %3, align 8
  %5 = icmp eq %"class.WTF::SharedBuffer"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #10
  br label %8

8:                                                ; preds = %2, %6
  tail call void @_ZN5blink8IDBValue7SetDataE13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::IDBValue"* %1, %"class.WTF::SharedBuffer"* %4) #10
  %9 = tail call %"class.blink::BlobDataHandle"* @_ZN5blink8IDBValue12TakeLastBlobEv(%"class.blink::IDBValue"* %1) #10
  %10 = icmp eq %"class.blink::BlobDataHandle"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 acq_rel
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %9) #10
  %16 = bitcast %"class.blink::BlobDataHandle"* %9 to i8*
  tail call void @free(i8* %16) #10
  br label %17

17:                                               ; preds = %8, %11, %15
  ret void
}

declare void @_ZN5blink8IDBValue7SetDataE13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::IDBValue"*, %"class.WTF::SharedBuffer"*) local_unnamed_addr #2

declare %"class.blink::BlobDataHandle"* @_ZN5blink8IDBValue12TakeLastBlobEv(%"class.blink::IDBValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17IDBValueUnwrapper5ParseEPNS_8IDBValueE(%"class.blink::IDBValueUnwrapper"* nocapture, %"class.blink::IDBValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca [3 x i8], align 1
  %4 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %4) #10
  store i8 -86, i8* %4, align 1
  %5 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 1
  store i8 -86, i8* %5, align 1
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2
  store i8 -86, i8* %6, align 1
  %7 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %7, align 8
  %9 = icmp eq %"class.WTF::SharedBuffer"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = call zeroext i1 @_ZNK3WTF12SharedBuffer16GetBytesInternalEPvm(%"class.WTF::SharedBuffer"* nonnull %8, i8* nonnull %4, i64 3) #10
  br i1 %11, label %12, label %18

12:                                               ; preds = %10
  %13 = load i8, i8* %4, align 1
  %14 = icmp eq i8 %13, -1
  %15 = load i8, i8* %5, align 1
  %16 = icmp eq i8 %15, 17
  %17 = and i1 %14, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %10, %2, %12
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %4) #10
  br label %83

19:                                               ; preds = %12
  %20 = load i8, i8* %6, align 1
  %21 = icmp eq i8 %20, 1
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %4) #10
  br i1 %21, label %22, label %83

22:                                               ; preds = %19
  %23 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %7, align 8
  %24 = call i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"* %23) #10
  %25 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %7, align 8
  %26 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %25, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 %27
  %29 = getelementptr inbounds %"class.blink::IDBValueUnwrapper", %"class.blink::IDBValueUnwrapper"* %0, i64 0, i32 1
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 3
  %31 = getelementptr inbounds %"class.blink::IDBValueUnwrapper", %"class.blink::IDBValueUnwrapper"* %0, i64 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %"class.blink::IDBValueUnwrapper", %"class.blink::IDBValueUnwrapper"* %0, i64 0, i32 2
  store i32 0, i32* %32, align 4
  %33 = icmp slt i64 %27, 4
  br i1 %33, label %83, label %34

34:                                               ; preds = %22
  %35 = load i8, i8* %30, align 1
  %36 = getelementptr inbounds i8, i8* %24, i64 4
  store i8* %36, i8** %31, align 8
  %37 = and i8 %35, 127
  %38 = zext i8 %37 to i32
  store i32 %38, i32* %32, align 4
  %39 = icmp slt i8 %35, 0
  br i1 %39, label %123, label %40

40:                                               ; preds = %34, %125, %135, %145, %155
  %41 = phi i8* [ %36, %34 ], [ %127, %125 ], [ %137, %135 ], [ %147, %145 ], [ %157, %155 ]
  %42 = icmp ult i8* %41, %28
  br i1 %42, label %43, label %83

43:                                               ; preds = %40
  %44 = load i8, i8* %41, align 1
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  store i8* %45, i8** %31, align 8
  %46 = and i8 %44, 127
  %47 = zext i8 %46 to i32
  %48 = icmp slt i8 %44, 0
  br i1 %48, label %84, label %49

49:                                               ; preds = %116, %106, %96, %86, %43
  %50 = phi i32 [ %47, %43 ], [ %92, %86 ], [ %102, %96 ], [ %112, %106 ], [ %121, %116 ]
  %51 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %"class.blink::IDBValue", %"class.blink::IDBValue"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %83, label %55

55:                                               ; preds = %49
  %56 = zext i32 %53 to i64
  %57 = zext i32 %50 to i64
  %58 = add nsw i64 %56, -1
  %59 = icmp eq i64 %58, %57
  br i1 %59, label %60, label %83

60:                                               ; preds = %55
  %61 = add i32 %53, -1
  %62 = call dereferenceable(64) %"class.blink::WebBlobInfo"* @_ZN3WTF6VectorIN5blink11WebBlobInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.69"* %51, i32 %61) #10
  %63 = call %"class.blink::BlobDataHandle"* @_ZNK5blink11WebBlobInfo13GetBlobHandleEv(%"class.blink::WebBlobInfo"* %62) #10
  %64 = getelementptr inbounds %"class.blink::IDBValueUnwrapper", %"class.blink::IDBValueUnwrapper"* %0, i64 0, i32 3
  %65 = ptrtoint %"class.blink::BlobDataHandle"* %63 to i64
  %66 = bitcast %class.scoped_refptr.44* %64 to i64*
  %67 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %64, i64 0, i32 0
  %68 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.blink::BlobDataHandle"* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = atomicrmw sub i32* %71, i32 1 acq_rel
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %68) #10
  %75 = bitcast %"class.blink::BlobDataHandle"* %68 to i8*
  call void @free(i8* %75) #10
  br label %76

76:                                               ; preds = %60, %70, %74
  %77 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %67, align 8
  %78 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %77, i64 0, i32 3
  %79 = load i64, i64* %78, align 8
  %80 = load i32, i32* %32, align 8
  %81 = zext i32 %80 to i64
  %82 = icmp eq i64 %79, %81
  ret i1 %82

83:                                               ; preds = %155, %116, %22, %123, %133, %143, %153, %40, %84, %94, %104, %114, %55, %49, %18, %19
  ret i1 false

84:                                               ; preds = %43
  %85 = icmp ult i8* %45, %28
  br i1 %85, label %86, label %83

86:                                               ; preds = %84
  %87 = load i8, i8* %45, align 1
  %88 = getelementptr inbounds i8, i8* %41, i64 2
  store i8* %88, i8** %31, align 8
  %89 = and i8 %87, 127
  %90 = zext i8 %89 to i32
  %91 = shl nuw nsw i32 %90, 7
  %92 = or i32 %91, %47
  %93 = icmp slt i8 %87, 0
  br i1 %93, label %94, label %49

94:                                               ; preds = %86
  %95 = icmp ult i8* %88, %28
  br i1 %95, label %96, label %83

96:                                               ; preds = %94
  %97 = load i8, i8* %88, align 1
  %98 = getelementptr inbounds i8, i8* %41, i64 3
  store i8* %98, i8** %31, align 8
  %99 = and i8 %97, 127
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 14
  %102 = or i32 %101, %92
  %103 = icmp slt i8 %97, 0
  br i1 %103, label %104, label %49

104:                                              ; preds = %96
  %105 = icmp ult i8* %98, %28
  br i1 %105, label %106, label %83

106:                                              ; preds = %104
  %107 = load i8, i8* %98, align 1
  %108 = getelementptr inbounds i8, i8* %41, i64 4
  store i8* %108, i8** %31, align 8
  %109 = and i8 %107, 127
  %110 = zext i8 %109 to i32
  %111 = shl nuw nsw i32 %110, 21
  %112 = or i32 %111, %102
  %113 = icmp slt i8 %107, 0
  br i1 %113, label %114, label %49

114:                                              ; preds = %106
  %115 = icmp ult i8* %108, %28
  br i1 %115, label %116, label %83

116:                                              ; preds = %114
  %117 = load i8, i8* %108, align 1
  %118 = getelementptr inbounds i8, i8* %41, i64 5
  store i8* %118, i8** %31, align 8
  %119 = zext i8 %117 to i32
  %120 = shl i32 %119, 28
  %121 = or i32 %120, %112
  %122 = icmp slt i8 %117, 0
  br i1 %122, label %83, label %49

123:                                              ; preds = %34
  %124 = icmp slt i64 %27, 5
  br i1 %124, label %83, label %125

125:                                              ; preds = %123
  %126 = load i8, i8* %36, align 1
  %127 = getelementptr inbounds i8, i8* %24, i64 5
  store i8* %127, i8** %31, align 8
  %128 = and i8 %126, 127
  %129 = zext i8 %128 to i32
  %130 = shl nuw nsw i32 %129, 7
  %131 = or i32 %130, %38
  store i32 %131, i32* %32, align 4
  %132 = icmp slt i8 %126, 0
  br i1 %132, label %133, label %40

133:                                              ; preds = %125
  %134 = icmp slt i64 %27, 6
  br i1 %134, label %83, label %135

135:                                              ; preds = %133
  %136 = load i8, i8* %127, align 1
  %137 = getelementptr inbounds i8, i8* %24, i64 6
  store i8* %137, i8** %31, align 8
  %138 = and i8 %136, 127
  %139 = zext i8 %138 to i32
  %140 = shl nuw nsw i32 %139, 14
  %141 = or i32 %140, %131
  store i32 %141, i32* %32, align 4
  %142 = icmp slt i8 %136, 0
  br i1 %142, label %143, label %40

143:                                              ; preds = %135
  %144 = icmp slt i64 %27, 7
  br i1 %144, label %83, label %145

145:                                              ; preds = %143
  %146 = load i8, i8* %137, align 1
  %147 = getelementptr inbounds i8, i8* %24, i64 7
  store i8* %147, i8** %31, align 8
  %148 = and i8 %146, 127
  %149 = zext i8 %148 to i32
  %150 = shl nuw nsw i32 %149, 21
  %151 = or i32 %150, %141
  store i32 %151, i32* %32, align 4
  %152 = icmp slt i8 %146, 0
  br i1 %152, label %153, label %40

153:                                              ; preds = %145
  %154 = icmp slt i64 %27, 8
  br i1 %154, label %83, label %155

155:                                              ; preds = %153
  %156 = load i8, i8* %147, align 1
  %157 = getelementptr inbounds i8, i8* %24, i64 8
  store i8* %157, i8** %31, align 8
  %158 = zext i8 %156 to i32
  %159 = shl i32 %158, 28
  %160 = or i32 %159, %151
  store i32 %160, i32* %32, align 4
  %161 = icmp slt i8 %156, 0
  br i1 %161, label %83, label %40
}

declare i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17IDBValueUnwrapper10ReadVarIntERj(%"class.blink::IDBValueUnwrapper"* nocapture, i32* nocapture dereferenceable(4)) local_unnamed_addr #5 align 2 {
  store i32 0, i32* %1, align 4
  %3 = getelementptr inbounds %"class.blink::IDBValueUnwrapper", %"class.blink::IDBValueUnwrapper"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::IDBValueUnwrapper", %"class.blink::IDBValueUnwrapper"* %0, i64 0, i32 1
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = icmp ult i8* %5, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = load i8, i8* %5, align 1
  %10 = getelementptr inbounds i8, i8* %5, i64 1
  store i8* %10, i8** %3, align 8
  %11 = and i8 %9, 127
  %12 = zext i8 %11 to i32
  %13 = load i32, i32* %1, align 4
  %14 = or i32 %13, %12
  store i32 %14, i32* %1, align 4
  %15 = icmp slt i8 %9, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %57, %44, %31, %18, %2, %48, %35, %22, %8
  %17 = phi i1 [ false, %2 ], [ true, %8 ], [ false, %18 ], [ true, %22 ], [ false, %31 ], [ true, %35 ], [ false, %44 ], [ true, %48 ], [ false, %57 ]
  ret i1 %17

18:                                               ; preds = %8
  %19 = load i8*, i8** %3, align 8
  %20 = load i8*, i8** %4, align 8
  %21 = icmp ult i8* %19, %20
  br i1 %21, label %22, label %16

22:                                               ; preds = %18
  %23 = load i8, i8* %19, align 1
  %24 = getelementptr inbounds i8, i8* %19, i64 1
  store i8* %24, i8** %3, align 8
  %25 = and i8 %23, 127
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 7
  %28 = load i32, i32* %1, align 4
  %29 = or i32 %27, %28
  store i32 %29, i32* %1, align 4
  %30 = icmp slt i8 %23, 0
  br i1 %30, label %31, label %16

31:                                               ; preds = %22
  %32 = load i8*, i8** %3, align 8
  %33 = load i8*, i8** %4, align 8
  %34 = icmp ult i8* %32, %33
  br i1 %34, label %35, label %16

35:                                               ; preds = %31
  %36 = load i8, i8* %32, align 1
  %37 = getelementptr inbounds i8, i8* %32, i64 1
  store i8* %37, i8** %3, align 8
  %38 = and i8 %36, 127
  %39 = zext i8 %38 to i32
  %40 = shl nuw nsw i32 %39, 14
  %41 = load i32, i32* %1, align 4
  %42 = or i32 %40, %41
  store i32 %42, i32* %1, align 4
  %43 = icmp slt i8 %36, 0
  br i1 %43, label %44, label %16

44:                                               ; preds = %35
  %45 = load i8*, i8** %3, align 8
  %46 = load i8*, i8** %4, align 8
  %47 = icmp ult i8* %45, %46
  br i1 %47, label %48, label %16

48:                                               ; preds = %44
  %49 = load i8, i8* %45, align 1
  %50 = getelementptr inbounds i8, i8* %45, i64 1
  store i8* %50, i8** %3, align 8
  %51 = and i8 %49, 127
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 21
  %54 = load i32, i32* %1, align 4
  %55 = or i32 %53, %54
  store i32 %55, i32* %1, align 4
  %56 = icmp slt i8 %49, 0
  br i1 %56, label %57, label %16

57:                                               ; preds = %48
  %58 = load i8*, i8** %3, align 8
  %59 = load i8*, i8** %4, align 8
  %60 = icmp ult i8* %58, %59
  br i1 %60, label %61, label %16

61:                                               ; preds = %57
  %62 = load i8, i8* %58, align 1
  %63 = getelementptr inbounds i8, i8* %58, i64 1
  store i8* %63, i8** %3, align 8
  %64 = zext i8 %62 to i32
  %65 = shl i32 %64, 28
  %66 = load i32, i32* %1, align 4
  %67 = or i32 %65, %66
  store i32 %67, i32* %1, align 4
  %68 = icmp slt i8 %62, 0
  %69 = select i1 %68, i1 false, i1 true
  ret i1 %69
}

declare %"class.blink::BlobDataHandle"* @_ZNK5blink11WebBlobInfo13GetBlobHandleEv(%"class.blink::WebBlobInfo"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::BlobDataHandle"* @_ZN5blink17IDBValueUnwrapper17WrapperBlobHandleEv(%"class.blink::IDBValueUnwrapper"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBValueUnwrapper", %"class.blink::IDBValueUnwrapper"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %2, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %2, align 8
  ret %"class.blink::BlobDataHandle"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17IDBValueUnwrapper9ReadBytesERN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEE(%"class.blink::IDBValueUnwrapper"* nocapture, %"class.WTF::Vector.364"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.364", align 8
  %4 = getelementptr inbounds %"class.blink::IDBValueUnwrapper", %"class.blink::IDBValueUnwrapper"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::IDBValueUnwrapper", %"class.blink::IDBValueUnwrapper"* %0, i64 0, i32 1
  %6 = load i8*, i8** %4, align 8
  %7 = load i8*, i8** %5, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = icmp ult i8* %6, %7
  br i1 %9, label %10, label %59

10:                                               ; preds = %2
  %11 = load i8, i8* %6, align 1
  %12 = getelementptr inbounds i8, i8* %6, i64 1
  store i8* %12, i8** %4, align 8
  %13 = and i8 %11, 127
  %14 = zext i8 %13 to i32
  %15 = icmp slt i8 %11, 0
  br i1 %15, label %61, label %16

16:                                               ; preds = %93, %83, %73, %63, %10
  %17 = phi i8* [ %12, %10 ], [ %65, %63 ], [ %75, %73 ], [ %85, %83 ], [ %95, %93 ]
  %18 = phi i32 [ %14, %10 ], [ %69, %63 ], [ %79, %73 ], [ %89, %83 ], [ %98, %93 ]
  %19 = ptrtoint i8* %17 to i64
  %20 = sub i64 %8, %19
  %21 = zext i32 %18 to i64
  %22 = icmp slt i64 %20, %21
  br i1 %22, label %59, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.WTF::Vector.364"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %3, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %3, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 16, i1 false) #10
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = bitcast %"class.WTF::Vector.364"* %3 to i64*
  br label %38

31:                                               ; preds = %23
  %32 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %21) #10
  %33 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %32, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %34 = ptrtoint i8* %33 to i64
  %35 = bitcast %"class.WTF::Vector.364"* %3 to i64*
  store atomic i64 %34, i64* %35 monotonic, align 8
  %36 = trunc i64 %32 to i32
  store i32 %36, i32* %26, align 8
  %37 = load i8*, i8** %4, align 8
  br label %38

38:                                               ; preds = %29, %31
  %39 = phi i64* [ %30, %29 ], [ %35, %31 ]
  %40 = phi i8* [ %17, %29 ], [ %37, %31 ]
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.364"* nonnull %3, i8* %40, i32 %18)
  %41 = load i64, i64* %39, align 8
  %42 = bitcast %"class.WTF::Vector.364"* %1 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %43, i64* %39 monotonic, align 8
  store atomic i64 %41, i64* %42 monotonic, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %1, i64 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %26, align 8
  store i32 %46, i32* %44, align 4
  store i32 %45, i32* %26, align 8
  %47 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %1, i64 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = load i32, i32* %27, align 4
  store i32 %49, i32* %47, align 4
  store i32 %48, i32* %27, align 4
  %50 = load i8*, i8** %4, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %21
  store i8* %51, i8** %4, align 8
  %52 = inttoptr i64 %43 to i8*
  %53 = icmp eq i64 %43, 0
  br i1 %53, label %58, label %54, !prof !2

54:                                               ; preds = %38
  %55 = icmp eq i32 %48, 0
  br i1 %55, label %57, label %56, !prof !3

56:                                               ; preds = %54
  store i32 0, i32* %27, align 4
  br label %57

57:                                               ; preds = %56, %54
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #10
  store i8* null, i8** %25, align 8
  br label %58

58:                                               ; preds = %38, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #10
  br label %59

59:                                               ; preds = %93, %2, %61, %71, %81, %91, %16, %58
  %60 = phi i1 [ true, %58 ], [ false, %16 ], [ false, %91 ], [ false, %81 ], [ false, %71 ], [ false, %61 ], [ false, %2 ], [ false, %93 ]
  ret i1 %60

61:                                               ; preds = %10
  %62 = icmp ult i8* %12, %7
  br i1 %62, label %63, label %59

63:                                               ; preds = %61
  %64 = load i8, i8* %12, align 1
  %65 = getelementptr inbounds i8, i8* %6, i64 2
  store i8* %65, i8** %4, align 8
  %66 = and i8 %64, 127
  %67 = zext i8 %66 to i32
  %68 = shl nuw nsw i32 %67, 7
  %69 = or i32 %68, %14
  %70 = icmp slt i8 %64, 0
  br i1 %70, label %71, label %16

71:                                               ; preds = %63
  %72 = icmp ult i8* %65, %7
  br i1 %72, label %73, label %59

73:                                               ; preds = %71
  %74 = load i8, i8* %65, align 1
  %75 = getelementptr inbounds i8, i8* %6, i64 3
  store i8* %75, i8** %4, align 8
  %76 = and i8 %74, 127
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 14
  %79 = or i32 %78, %69
  %80 = icmp slt i8 %74, 0
  br i1 %80, label %81, label %16

81:                                               ; preds = %73
  %82 = icmp ult i8* %75, %7
  br i1 %82, label %83, label %59

83:                                               ; preds = %81
  %84 = load i8, i8* %75, align 1
  %85 = getelementptr inbounds i8, i8* %6, i64 4
  store i8* %85, i8** %4, align 8
  %86 = and i8 %84, 127
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 21
  %89 = or i32 %88, %79
  %90 = icmp slt i8 %84, 0
  br i1 %90, label %91, label %16

91:                                               ; preds = %83
  %92 = icmp ult i8* %85, %7
  br i1 %92, label %93, label %59

93:                                               ; preds = %91
  %94 = load i8, i8* %85, align 1
  %95 = getelementptr inbounds i8, i8* %6, i64 5
  store i8* %95, i8** %4, align 8
  %96 = zext i8 %94 to i32
  %97 = shl i32 %96, 28
  %98 = or i32 %97, %89
  %99 = icmp slt i8 %94, 0
  br i1 %99, label %59, label %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.364"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !2

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %32) #10
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !2

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #10
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #10
  %50 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !2

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %66) #10
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %67, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #10
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !2

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #10
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #10
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.364"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #10
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %96, i8* %97) #10
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #10
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #10
  %105 = getelementptr inbounds %"class.WTF::Vector.364", %"class.WTF::Vector.364"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !2

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #10
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink11WebBlobInfoD1Ev(%"class.blink::WebBlobInfo"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::WorldSafeV8Reference"* @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEaSERKS3_(%"class.blink::WorldSafeV8Reference"*, %"class.blink::WorldSafeV8Reference"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::WorldSafeV8Reference"* %0, %1
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = icmp eq i64* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  tail call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %7) #10
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = icmp eq i64* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %12, i64** %6) #10
  br label %16

16:                                               ; preds = %2, %11, %15
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %3) #10
  %17 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %18 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %1, i64 0, i32 1, i32 0
  %19 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %18, align 8
  %20 = icmp eq %"class.blink::DOMWrapperWorld"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #10
  br label %23

23:                                               ; preds = %16, %21
  %24 = ptrtoint %"class.blink::DOMWrapperWorld"* %19 to i64
  %25 = bitcast %class.scoped_refptr.363* %17 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.363, %class.scoped_refptr.363* %17, i64 0, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #10
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #10
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #10
  br label %36

36:                                               ; preds = %23, %29, %34
  ret %"class.blink::WorldSafeV8Reference"* %0
}

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"*, %"class.blink::BlobData"*, i64) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #6

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.79"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  br i1 %15, label %18, label %38, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq i8* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %21) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %35, label %24

24:                                               ; preds = %18
  %25 = load i8*, i8** %16, align 8
  %26 = icmp ne i8* %22, null
  %27 = icmp ne i8* %25, null
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %33, !prof !2

29:                                               ; preds = %24
  %30 = load i32, i32* %3, align 4
  %31 = zext i32 %30 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 1 %25, i64 %31, i1 false) #10
  %32 = load i8*, i8** %16, align 8
  br label %33

33:                                               ; preds = %29, %24
  %34 = phi i8* [ %25, %24 ], [ %32, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %34) #10
  br label %35

35:                                               ; preds = %18, %33
  %36 = bitcast %"class.WTF::Vector.79"* %0 to i64*
  store atomic i64 %23, i64* %36 monotonic, align 8
  %37 = trunc i64 %21 to i32
  store i32 %37, i32* %6, align 8
  br label %38

38:                                               ; preds = %35, %2
  %39 = phi i8* [ %17, %2 ], [ %22, %35 ]
  %40 = load i32, i32* %3, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  %43 = load i32, i32* %1, align 4
  %44 = trunc i32 %43 to i8
  store i8 %44, i8* %42, align 1
  %45 = load i32, i32* %3, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %3, align 4
  ret void
}

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.79"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  ret i8* %26
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIKS4_EEvOT_(%"class.WTF::Vector.64"*, %class.scoped_refptr.44* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, 1
  %7 = tail call %class.scoped_refptr.44* @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS4_(%"class.WTF::Vector.64"* %0, i32 %6, %class.scoped_refptr.44* %1) #10
  %8 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %8, align 8
  %10 = load i32, i32* %4, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %7, i64 0, i32 0
  %13 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %12, align 8
  %14 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %9, i64 %11, i32 0
  store %"class.blink::BlobDataHandle"* %13, %"class.blink::BlobDataHandle"** %14, align 8
  %15 = icmp eq %"class.blink::BlobDataHandle"* %13, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %2, %16, %20
  %24 = load i32, i32* %4, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.scoped_refptr.44* @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS4_(%"class.WTF::Vector.64"*, i32, %class.scoped_refptr.44*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %4, align 8
  %6 = icmp ugt %class.scoped_refptr.44* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %5, i64 %10
  %12 = icmp ugt %class.scoped_refptr.44* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %class.scoped_refptr.44* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14BlobDataHandleEEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14BlobDataHandleEEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.64"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 3
  %36 = ptrtoint i8* %28 to i64
  %37 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %class.scoped_refptr.44* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %class.scoped_refptr.44* %37 to i8*
  br i1 %40, label %42, label %49, !prof !2

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.64"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.64"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %class.scoped_refptr.44* %2 to i64
  %55 = ptrtoint %class.scoped_refptr.44* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !2

68:                                               ; preds = %53
  %69 = icmp eq %class.scoped_refptr.44* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14BlobDataHandleEEEEmm(i64 %70) #10
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink14BlobDataHandleEEEEPKcv, i64 0, i64 0)) #10
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.64"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %class.scoped_refptr.44* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %class.scoped_refptr.44* %77 to i8*
  br i1 %80, label %82, label %88, !prof !2

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #10
  %86 = bitcast %"class.WTF::Vector.64"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #10
  %90 = bitcast %"class.WTF::Vector.64"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 3
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %class.scoped_refptr.44*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %class.scoped_refptr.44* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %class.scoped_refptr.44* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %class.scoped_refptr.44* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink14BlobDataHandleEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink11WebBlobInfoELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.69"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.69"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.blink::WebBlobInfo"* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %"class.blink::WebBlobInfo"* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN5blink11WebBlobInfoC1ERKS0_(%"class.blink::WebBlobInfo"* %16, %"class.blink::WebBlobInfo"* dereferenceable(64) %15) #10
  tail call void @_ZN5blink11WebBlobInfoD1Ev(%"class.blink::WebBlobInfo"* %15) #10
  %17 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %16, i64 1
  %18 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %15, i64 1
  %19 = icmp eq %"class.blink::WebBlobInfo"* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %6, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #10
  br label %51

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11WebBlobInfoEEEmm(i64 %23) #10
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11WebBlobInfoEEEPKcv, i64 0, i64 0)) #10
  %26 = lshr i64 %24, 6
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %22
  %36 = bitcast i8* %25 to %"class.blink::WebBlobInfo"*
  br label %37

37:                                               ; preds = %35, %37
  %38 = phi %"class.blink::WebBlobInfo"* [ %41, %37 ], [ %29, %35 ]
  %39 = phi %"class.blink::WebBlobInfo"* [ %40, %37 ], [ %36, %35 ]
  tail call void @_ZN5blink11WebBlobInfoC1ERKS0_(%"class.blink::WebBlobInfo"* %39, %"class.blink::WebBlobInfo"* dereferenceable(64) %38) #10
  tail call void @_ZN5blink11WebBlobInfoD1Ev(%"class.blink::WebBlobInfo"* %38) #10
  %40 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %39, i64 1
  %41 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %38, i64 1
  %42 = icmp eq %"class.blink::WebBlobInfo"* %41, %33
  br i1 %42, label %43, label %37

43:                                               ; preds = %37
  %44 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %28, align 8
  br label %45

45:                                               ; preds = %43, %22
  %46 = phi %"class.blink::WebBlobInfo"* [ %44, %43 ], [ %29, %22 ]
  %47 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %46, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %47) #10
  %48 = bitcast %"class.WTF::Vector.69"* %0 to i64*
  store atomic i64 %27, i64* %48 monotonic, align 8
  %49 = trunc i64 %26 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %45, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink11WebBlobInfoEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 33521664
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 33521664) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.2, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 6
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN5blink11WebBlobInfoC1ERKS0_(%"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"* dereferenceable(64)) unnamed_addr #2

declare void @_ZN5blink11WebBlobInfoC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::WebBlobInfo"*, %"class.blink::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS4_EEvOT_(%"class.WTF::Vector.64"*, %class.scoped_refptr.44* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %class.scoped_refptr.44* @_ZN3WTF6VectorI13scoped_refptrIN5blink14BlobDataHandleEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS4_(%"class.WTF::Vector.64"* %0, i32 %5, %class.scoped_refptr.44* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.64", %"class.WTF::Vector.64"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %class.scoped_refptr.44*, %class.scoped_refptr.44** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %8, i64 %10
  %12 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %6, i64 0, i32 0
  %13 = bitcast %class.scoped_refptr.44* %6 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %class.scoped_refptr.44* %11 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.blink::BlobDataHandle"* null, %"class.blink::BlobDataHandle"** %12, align 8
  %16 = load i32, i32* %3, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIN5blink16SerializationTagEEEvOT_(%"class.WTF::Vector.79"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  br i1 %15, label %18, label %38, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq i8* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %21) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %35, label %24

24:                                               ; preds = %18
  %25 = load i8*, i8** %16, align 8
  %26 = icmp ne i8* %22, null
  %27 = icmp ne i8* %25, null
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %33, !prof !2

29:                                               ; preds = %24
  %30 = load i32, i32* %3, align 4
  %31 = zext i32 %30 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 1 %25, i64 %31, i1 false) #10
  %32 = load i8*, i8** %16, align 8
  br label %33

33:                                               ; preds = %29, %24
  %34 = phi i8* [ %25, %24 ], [ %32, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %34) #10
  br label %35

35:                                               ; preds = %18, %33
  %36 = bitcast %"class.WTF::Vector.79"* %0 to i64*
  store atomic i64 %23, i64* %36 monotonic, align 8
  %37 = trunc i64 %21 to i32
  store i32 %37, i32* %6, align 8
  br label %38

38:                                               ; preds = %35, %2
  %39 = phi i8* [ %17, %2 ], [ %22, %35 ]
  %40 = load i32, i32* %3, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  %43 = load i32, i32* %1, align 4
  %44 = trunc i32 %43 to i8
  store i8 %44, i8* %42, align 1
  %45 = load i32, i32* %3, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKhEEvOT_(%"class.WTF::Vector.79"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.79", %"class.WTF::Vector.79"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  br i1 %15, label %18, label %38, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq i8* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %21) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %35, label %24

24:                                               ; preds = %18
  %25 = load i8*, i8** %16, align 8
  %26 = icmp ne i8* %22, null
  %27 = icmp ne i8* %25, null
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %33, !prof !2

29:                                               ; preds = %24
  %30 = load i32, i32* %3, align 4
  %31 = zext i32 %30 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 1 %25, i64 %31, i1 false) #10
  %32 = load i8*, i8** %16, align 8
  br label %33

33:                                               ; preds = %29, %24
  %34 = phi i8* [ %25, %24 ], [ %32, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %34) #10
  br label %35

35:                                               ; preds = %18, %33
  %36 = bitcast %"class.WTF::Vector.79"* %0 to i64*
  store atomic i64 %23, i64* %36 monotonic, align 8
  %37 = trunc i64 %21 to i32
  store i32 %37, i32* %6, align 8
  br label %38

38:                                               ; preds = %35, %2
  %39 = phi i8* [ %17, %2 ], [ %22, %35 ]
  %40 = load i32, i32* %3, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  %43 = load i8, i8* %1, align 1
  store i8 %43, i8* %42, align 1
  %44 = load i32, i32* %3, align 4
  %45 = add i32 %44, 1
  store i32 %45, i32* %3, align 4
  ret void
}

declare void @_ZN3WTF12SharedBufferC1EPKhj(%"class.WTF::SharedBuffer"*, i8*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK3WTF12SharedBuffer16GetBytesInternalEPvm(%"class.WTF::SharedBuffer"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"class.blink::WebBlobInfo"* @_ZN3WTF6VectorIN5blink11WebBlobInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.69"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.69", %"class.WTF::Vector.69"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::WebBlobInfo"*, %"class.blink::WebBlobInfo"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::WebBlobInfo", %"class.blink::WebBlobInfo"* %24, i64 %25
  ret %"class.blink::WebBlobInfo"* %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !10}
