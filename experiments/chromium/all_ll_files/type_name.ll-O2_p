; ModuleID = '../../third_party/dawn/third_party/tint/src/ast/type_name.cc'
source_filename = "../../third_party/dawn/third_party/tint/src/ast/type_name.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.tint::TypeInfo" = type { %"struct.tint::TypeInfo"*, i8* }
%"class.tint::ast::TypeName" = type { %"class.tint::Castable", %"class.tint::Symbol", %"class.std::__1::basic_string" }
%"class.tint::Castable" = type { %"class.tint::ast::Type" }
%"class.tint::ast::Type" = type { %"class.tint::Castable.0" }
%"class.tint::Castable.0" = type { %"class.tint::ast::Node" }
%"class.tint::ast::Node" = type { %"class.tint::Castable.1", %"class.tint::ProgramID", %"class.tint::Source" }
%"class.tint::Castable.1" = type { %"class.tint::Cloneable" }
%"class.tint::Cloneable" = type { %"class.tint::Castable.2" }
%"class.tint::Castable.2" = type { %"class.tint::CastableBase" }
%"class.tint::CastableBase" = type { i32 (...)** }
%"class.tint::ProgramID" = type { i32 }
%"class.tint::Source" = type { %"class.tint::Source::Range", %"class.std::__1::basic_string", %"class.tint::Source::FileContent"* }
%"class.tint::Source::Range" = type { %"class.tint::Source::Location", %"class.tint::Source::Location" }
%"class.tint::Source::Location" = type { i64, i64 }
%"class.tint::Source::FileContent" = type { %"class.std::__1::basic_string", %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::basic_string"* }
%"class.tint::Symbol" = type { i32, %"class.tint::ProgramID" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.tint::SymbolTable" = type { i32, [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.27", %"class.tint::ProgramID", [4 x i8] }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.22", %"class.std::__1::__compressed_pair.24", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { float }
%"class.std::__1::unordered_map.27" = type { %"class.std::__1::__hash_table.28" }
%"class.std::__1::__hash_table.28" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.47", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base.32"** }
%"struct.std::__1::__hash_node_base.32" = type { %"struct.std::__1::__hash_node_base.32"* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__bucket_list_deallocator.34" }
%"class.std::__1::__bucket_list_deallocator.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::__hash_node_base.32" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.tint::CloneContext" = type { %"class.tint::ProgramBuilder"*, %"class.tint::Program"*, %"class.std::__1::unordered_map.188", %"class.std::__1::unordered_map.216", %"class.std::__1::vector.240", %"class.std::__1::unordered_map.248", %"class.std::__1::function.276" }
%"class.tint::ProgramBuilder" = type <{ i32 (...)**, %"class.tint::ProgramBuilder::TypesBuilder", %"class.tint::ProgramID", [4 x i8], %"class.tint::sem::Manager", %"class.tint::BlockAllocator.85", %"class.tint::BlockAllocator.94", %"class.tint::ast::Module"*, %"class.tint::sem::Info", %"class.tint::SymbolTable", %"class.tint::diag::List", %"class.tint::Source", i8, i8, [6 x i8] }>
%"class.tint::ProgramBuilder::TypesBuilder" = type { %"class.tint::ProgramBuilder"* }
%"class.tint::sem::Manager" = type { %"class.std::__1::unordered_map.53", %"class.tint::BlockAllocator" }
%"class.std::__1::unordered_map.53" = type { %"class.std::__1::__hash_table.54" }
%"class.std::__1::__hash_table.54" = type <{ %"class.std::__1::unique_ptr.55", %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.73", [4 x i8] }>
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57", %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.58"** }
%"struct.std::__1::__hash_node_base.58" = type { %"struct.std::__1::__hash_node_base.58"* }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__bucket_list_deallocator.60" }
%"class.std::__1::__bucket_list_deallocator.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::__hash_node_base.58" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.tint::BlockAllocator" = type { %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"class.std::__1::unique_ptr.79"*, %"class.std::__1::unique_ptr.79"*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::unique_ptr.79" = type opaque
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::unique_ptr.79"* }
%"class.tint::BlockAllocator.85" = type { %"class.std::__1::vector.86" }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"class.std::__1::unique_ptr.88"*, %"class.std::__1::unique_ptr.88"*, %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.tint::ast::Node"* }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.std::__1::unique_ptr.88"* }
%"class.tint::BlockAllocator.94" = type { %"class.std::__1::vector.95" }
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %"class.std::__1::unique_ptr.97"*, %"class.std::__1::unique_ptr.97"*, %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::unique_ptr.97" = type opaque
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::unique_ptr.97"* }
%"class.tint::ast::Module" = type { %"class.tint::Castable.103", %"class.std::__1::vector.104", %"class.std::__1::vector.111", %"class.tint::ast::FunctionList", %"class.std::__1::vector.122" }
%"class.tint::Castable.103" = type { %"class.tint::ast::Node" }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"class.tint::ast::Node"**, %"class.tint::ast::Node"**, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.tint::ast::Node"** }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %"class.tint::ast::NamedType"**, %"class.tint::ast::NamedType"**, %"class.std::__1::__compressed_pair.114" }
%"class.tint::ast::NamedType" = type { %"class.tint::Castable.113", %"class.tint::Symbol" }
%"class.tint::Castable.113" = type { %"class.tint::ast::Type" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.tint::ast::NamedType"** }
%"class.tint::ast::FunctionList" = type { %"class.std::__1::vector.119" }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"class.tint::ast::Function"**, %"class.tint::ast::Function"**, %"class.std::__1::__compressed_pair.148" }
%"class.tint::ast::Function" = type { %"class.tint::Castable.121", %"class.tint::Symbol", %"class.std::__1::vector.122", %"class.tint::ast::Type"*, %"class.tint::ast::BlockStatement"*, %"class.std::__1::vector.126", %"class.std::__1::vector.126" }
%"class.tint::Castable.121" = type { %"class.tint::ast::Node" }
%"class.tint::ast::BlockStatement" = type { %"class.tint::Castable.139", %"class.std::__1::vector.141" }
%"class.tint::Castable.139" = type { %"class.tint::ast::Statement" }
%"class.tint::ast::Statement" = type { %"class.tint::Castable.140" }
%"class.tint::Castable.140" = type { %"class.tint::ast::Node" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.tint::ast::Statement"**, %"class.tint::ast::Statement"**, %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.tint::ast::Statement"** }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"class.tint::ast::Decoration"**, %"class.tint::ast::Decoration"**, %"class.std::__1::__compressed_pair.129" }
%"class.tint::ast::Decoration" = type { %"class.tint::Castable.128" }
%"class.tint::Castable.128" = type { %"class.tint::ast::Node" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.tint::ast::Decoration"** }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.tint::ast::Function"** }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"class.tint::ast::Variable"**, %"class.tint::ast::Variable"**, %"class.std::__1::__compressed_pair.134" }
%"class.tint::ast::Variable" = type <{ %"class.tint::Castable.124", %"class.tint::Symbol", %"class.tint::ast::Type"*, i8, [7 x i8], %"class.tint::ast::Expression"*, %"class.std::__1::vector.126", i32, [4 x i8] }>
%"class.tint::Castable.124" = type { %"class.tint::ast::Node" }
%"class.tint::ast::Expression" = type { %"class.tint::Castable.125" }
%"class.tint::Castable.125" = type { %"class.tint::ast::Node" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.tint::ast::Variable"** }
%"class.tint::sem::Info" = type { %"class.std::__1::unordered_map.153" }
%"class.std::__1::unordered_map.153" = type { %"class.std::__1::__hash_table.154" }
%"class.std::__1::__hash_table.154" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.165", %"class.std::__1::__compressed_pair.170", %"class.std::__1::__compressed_pair.175", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base.158"** }
%"struct.std::__1::__hash_node_base.158" = type { %"struct.std::__1::__hash_node_base.158"* }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.std::__1::__bucket_list_deallocator.160" }
%"class.std::__1::__bucket_list_deallocator.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base.158" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.tint::diag::List" = type { %"class.std::__1::vector.181", i64 }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"class.tint::diag::Diagnostic"*, %"class.tint::diag::Diagnostic"*, %"class.std::__1::__compressed_pair.183" }
%"class.tint::diag::Diagnostic" = type { i32, %"class.tint::Source", %"class.std::__1::basic_string", i8* }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.tint::diag::Diagnostic"* }
%"class.tint::Program" = type <{ %"class.tint::ProgramID", [4 x i8], %"class.tint::sem::Manager", %"class.tint::BlockAllocator.85", %"class.tint::BlockAllocator.94", %"class.tint::ast::Module"*, %"class.tint::sem::Info", %"class.tint::SymbolTable", %"class.tint::diag::List", i8, i8, [6 x i8] }>
%"class.std::__1::unordered_map.188" = type { %"class.std::__1::__hash_table.189" }
%"class.std::__1::__hash_table.189" = type <{ %"class.std::__1::unique_ptr.190", %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.210", [4 x i8] }>
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192", %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"struct.std::__1::__hash_node_base.193"** }
%"struct.std::__1::__hash_node_base.193" = type { %"struct.std::__1::__hash_node_base.193"* }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::__bucket_list_deallocator.195" }
%"class.std::__1::__bucket_list_deallocator.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.std::__1::__hash_node_base.193" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::unordered_map.216" = type { %"class.std::__1::__hash_table.217" }
%"class.std::__1::__hash_table.217" = type <{ %"class.std::__1::unique_ptr.218", %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.233", %"class.std::__1::__compressed_pair.236", [4 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220", %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::__hash_node_base.221"** }
%"struct.std::__1::__hash_node_base.221" = type { %"struct.std::__1::__hash_node_base.221"* }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.std::__1::__bucket_list_deallocator.223" }
%"class.std::__1::__bucket_list_deallocator.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.221" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { %"struct.tint::CloneContext::CloneableTransform"*, %"struct.tint::CloneContext::CloneableTransform"*, %"class.std::__1::__compressed_pair.243" }
%"struct.tint::CloneContext::CloneableTransform" = type { %"struct.tint::TypeInfo"*, %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { %"class.tint::Cloneable"* (%"union.std::__1::__function::__policy_storage"*, %"class.tint::Cloneable"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.tint::CloneContext::CloneableTransform"* }
%"class.std::__1::unordered_map.248" = type { %"class.std::__1::__hash_table.249" }
%"class.std::__1::__hash_table.249" = type <{ %"class.std::__1::unique_ptr.250", %"class.std::__1::__compressed_pair.260", %"class.std::__1::__compressed_pair.265", %"class.std::__1::__compressed_pair.270", [4 x i8] }>
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252", %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base.253"** }
%"struct.std::__1::__hash_node_base.253" = type { %"struct.std::__1::__hash_node_base.253"* }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.std::__1::__bucket_list_deallocator.255" }
%"class.std::__1::__bucket_list_deallocator.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"struct.std::__1::__hash_node_base.253" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::function.276" = type { %"class.std::__1::__function::__policy_func.280" }
%"class.std::__1::__function::__policy_func.280" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.281", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.281" = type { void (%"class.tint::Symbol"*, %"union.std::__1::__function::__policy_storage"*, %"class.tint::Symbol"*)* }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.tint::ast::TypeName"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK4tint8CastableINS_3ast8TypeNameENS1_4TypeEE8TypeInfoEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4tint3ast4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_8TypeNameENS5_ISC_EEEEEEEvDpOT_ = comdat any

@_ZN4tint6detail10TypeInfoOfINS_3ast4TypeEE4infoE = external global %"struct.tint::TypeInfo", align 8
@.str = private unnamed_addr constant [20 x i8] c"tint::ast::TypeName\00", align 1
@_ZN4tint6detail10TypeInfoOfINS_3ast8TypeNameEE4infoE = hidden constant %"struct.tint::TypeInfo" { %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3ast4TypeEE4infoE, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i32 0, i32 0) }, align 8
@_ZTVN4tint3ast8TypeNameE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tint::ast::TypeName"*)* @_ZN4tint3ast8TypeNameD2Ev to i8*), i8* bitcast (void (%"class.tint::ast::TypeName"*)* @_ZN4tint3ast8TypeNameD0Ev to i8*), i8* bitcast (%"struct.tint::TypeInfo"* (%"class.tint::Castable"*)* @_ZNK4tint8CastableINS_3ast8TypeNameENS1_4TypeEE8TypeInfoEv to i8*), i8* bitcast (%"class.tint::ast::TypeName"* (%"class.tint::ast::TypeName"*, %"class.tint::CloneContext"*)* @_ZNK4tint3ast8TypeName5CloneEPNS_12CloneContextE to i8*), i8* bitcast (void (%"class.tint::ast::Type"*, %"class.tint::sem::Info"*, %"class.std::__1::basic_ostream"*, i64)* @_ZNK4tint3ast4Type6to_strERKNS_3sem4InfoERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEm to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.tint::ast::TypeName"*)* @_ZNK4tint3ast8TypeName9type_nameEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.tint::ast::TypeName"*, %"class.tint::SymbolTable"*)* @_ZNK4tint3ast8TypeName12FriendlyNameERKNS_11SymbolTableE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [13 x i8] c"__type_name_\00", align 1

@_ZN4tint3ast8TypeNameC1ENS_9ProgramIDERKNS_6SourceENS_6SymbolE = hidden unnamed_addr alias void (%"class.tint::ast::TypeName"*, i32, %"class.tint::Source"*, %"class.tint::Symbol"*), void (%"class.tint::ast::TypeName"*, i32, %"class.tint::Source"*, %"class.tint::Symbol"*)* @_ZN4tint3ast8TypeNameC2ENS_9ProgramIDERKNS_6SourceENS_6SymbolE
@_ZN4tint3ast8TypeNameD1Ev = hidden unnamed_addr alias void (%"class.tint::ast::TypeName"*), void (%"class.tint::ast::TypeName"*)* @_ZN4tint3ast8TypeNameD2Ev
@_ZN4tint3ast8TypeNameC1EOS1_ = hidden unnamed_addr alias void (%"class.tint::ast::TypeName"*, %"class.tint::ast::TypeName"*), void (%"class.tint::ast::TypeName"*, %"class.tint::ast::TypeName"*)* @_ZN4tint3ast8TypeNameC2EOS1_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3ast8TypeNameC2ENS_9ProgramIDERKNS_6SourceENS_6SymbolE(%"class.tint::ast::TypeName"*, i32, %"class.tint::Source"* dereferenceable(64), %"class.tint::Symbol"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3ast4TypeC2ENS_9ProgramIDERKNS_6SourceE(%"class.tint::ast::Type"* %6, i32 %1, %"class.tint::Source"* dereferenceable(64) %2) #9
  %7 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4tint3ast8TypeNameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 1
  tail call void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"* %8, %"class.tint::Symbol"* dereferenceable(8) %3) #9
  %9 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #9
  call void @_ZNK4tint6Symbol6to_strEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.tint::Symbol"* %3) #9
  %11 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %5, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #9, !noalias !2
  %12 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #9, !noalias !2
  %14 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %4, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"*, %"class.tint::Symbol"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK4tint6Symbol6to_strEv(%"class.std::__1::basic_string"* sret, %"class.tint::Symbol"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3ast8TypeNameD2Ev(%"class.tint::ast::TypeName"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4tint3ast8TypeNameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 1
  tail call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* %12) #9
  %13 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3ast4TypeD2Ev(%"class.tint::ast::Type"* %13) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3ast8TypeNameD0Ev(%"class.tint::ast::TypeName"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4tint3ast8TypeNameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 1
  tail call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* %12) #9
  %13 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3ast4TypeD2Ev(%"class.tint::ast::Type"* %13) #9
  %14 = bitcast %"class.tint::ast::TypeName"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3ast8TypeNameC2EOS1_(%"class.tint::ast::TypeName"*, %"class.tint::ast::TypeName"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3ast4TypeC2EOS1_(%"class.tint::ast::Type"* %3, %"class.tint::ast::Type"* dereferenceable(80) %4) #9
  %5 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4tint3ast8TypeNameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %1, i64 0, i32 1
  tail call void @_ZN4tint6SymbolC1EOS0_(%"class.tint::Symbol"* %6, %"class.tint::Symbol"* dereferenceable(8) %7) #9
  %8 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %1, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #9
  br label %22

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %8, i8* %19, i64 %21) #9
  br label %22

22:                                               ; preds = %14, %17
  ret void
}

declare void @_ZN4tint6SymbolC1EOS0_(%"class.tint::Symbol"*, %"class.tint::Symbol"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4tint3ast8TypeName9type_nameEv(%"class.std::__1::basic_string"* noalias sret, %"class.tint::ast::TypeName"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %1, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #9
  br label %16

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %13, i64 %15) #9
  br label %16

16:                                               ; preds = %8, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4tint3ast8TypeName12FriendlyNameERKNS_11SymbolTableE(%"class.std::__1::basic_string"* noalias sret, %"class.tint::ast::TypeName"*, %"class.tint::SymbolTable"* dereferenceable(96)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.tint::Symbol", align 4
  %5 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %1, i64 0, i32 1
  call void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"* nonnull %4, %"class.tint::Symbol"* dereferenceable(8) %5) #9
  call void @_ZNK4tint11SymbolTable7NameForENS_6SymbolE(%"class.std::__1::basic_string"* sret %0, %"class.tint::SymbolTable"* %2, %"class.tint::Symbol"* nonnull %4) #9
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %4) #9
  ret void
}

declare void @_ZNK4tint11SymbolTable7NameForENS_6SymbolE(%"class.std::__1::basic_string"* sret, %"class.tint::SymbolTable"*, %"class.tint::Symbol"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.tint::ast::TypeName"* @_ZNK4tint3ast8TypeName5CloneEPNS_12CloneContextE(%"class.tint::ast::TypeName"*, %"class.tint::CloneContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.tint::Symbol", align 4
  %5 = alloca %"class.std::__1::unique_ptr.285", align 8
  %6 = alloca %"class.tint::Source", align 8
  %7 = alloca %"class.tint::Symbol", align 4
  %8 = alloca %"class.tint::Symbol", align 4
  %9 = bitcast %"class.tint::Source"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %11 = bitcast %"class.tint::Source"* %10 to i8*
  %12 = getelementptr inbounds %"class.tint::Source", %"class.tint::Source"* %6, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %11, i64 32, i1 false) #9
  %14 = getelementptr inbounds %"class.tint::Source", %"class.tint::Source"* %6, i64 0, i32 1
  %15 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !noalias !5
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #9
  br label %28

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8, !noalias !5
  %26 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !5
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %14, i8* %25, i64 %27) #9
  br label %28

28:                                               ; preds = %20, %23
  %29 = getelementptr inbounds %"class.tint::Source", %"class.tint::Source"* %6, i64 0, i32 2
  %30 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2
  %31 = bitcast %"class.tint::Source::FileContent"** %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !5
  %33 = bitcast %"class.tint::Source::FileContent"** %29 to i64*
  store i64 %32, i64* %33, align 8, !alias.scope !5
  %34 = bitcast %"class.tint::Symbol"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  %35 = getelementptr inbounds %"class.tint::Symbol", %"class.tint::Symbol"* %7, i64 0, i32 0
  store i32 -1431655766, i32* %35, align 4
  %36 = getelementptr inbounds %"class.tint::Symbol", %"class.tint::Symbol"* %7, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %36, align 4
  %37 = getelementptr inbounds %"class.tint::ast::TypeName", %"class.tint::ast::TypeName"* %0, i64 0, i32 1
  call void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"* nonnull %8, %"class.tint::Symbol"* dereferenceable(8) %37) #9
  call void @_ZN4tint12CloneContext5CloneENS_6SymbolE(%"class.tint::Symbol"* nonnull sret %7, %"class.tint::CloneContext"* %1, %"class.tint::Symbol"* nonnull %8) #9
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %8) #9
  %38 = getelementptr inbounds %"class.tint::CloneContext", %"class.tint::CloneContext"* %1, i64 0, i32 0
  %39 = load %"class.tint::ProgramBuilder"*, %"class.tint::ProgramBuilder"** %38, align 8
  call void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"* %39) #9
  %40 = bitcast %"class.std::__1::unique_ptr.285"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.285"* %5, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.tint::Symbol"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = call i8* @_Znwm(i64 112) #10
  %44 = bitcast i8* %43 to %"class.tint::ast::TypeName"*
  %45 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %39, i64 0, i32 2, i32 0
  %46 = load i32, i32* %45, align 4
  call void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"* nonnull %4, %"class.tint::Symbol"* nonnull dereferenceable(8) %7) #9
  %47 = bitcast i8* %43 to %"class.tint::ast::Type"*
  call void @_ZN4tint3ast4TypeC2ENS_9ProgramIDERKNS_6SourceE(%"class.tint::ast::Type"* nonnull %47, i32 %46, %"class.tint::Source"* nonnull dereferenceable(64) %6) #9
  %48 = bitcast i8* %43 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4tint3ast8TypeNameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 80
  %50 = bitcast i8* %49 to %"class.tint::Symbol"*
  call void @_ZN4tint6SymbolC1ERKS0_(%"class.tint::Symbol"* %50, %"class.tint::Symbol"* nonnull dereferenceable(8) %4) #9
  %51 = getelementptr inbounds i8, i8* %43, i64 88
  %52 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #9
  call void @_ZNK4tint6Symbol6to_strEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.tint::Symbol"* nonnull %4) #9
  %53 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"* nonnull %3, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #9, !noalias !8
  %54 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %54, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 24, i1 false) #9, !noalias !8
  %55 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %28
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %28, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #9
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  %63 = bitcast %"class.std::__1::unique_ptr.285"* %5 to i8**
  store i8* %43, i8** %63, align 8
  %64 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %39, i64 0, i32 5, i32 0, i32 0, i32 1
  %65 = load %"class.std::__1::unique_ptr.88"*, %"class.std::__1::unique_ptr.88"** %64, align 8
  %66 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %39, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %67 = load %"class.std::__1::unique_ptr.88"*, %"class.std::__1::unique_ptr.88"** %66, align 8
  %68 = icmp ult %"class.std::__1::unique_ptr.88"* %65, %67
  br i1 %68, label %69, label %75

69:                                               ; preds = %62
  %70 = ptrtoint i8* %43 to i64
  store %"class.tint::ast::TypeName"* null, %"class.tint::ast::TypeName"** %41, align 8
  %71 = bitcast %"class.std::__1::unique_ptr.88"* %65 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %65, i64 1
  %73 = ptrtoint %"class.std::__1::unique_ptr.88"* %72 to i64
  %74 = bitcast %"class.std::__1::unique_ptr.88"** %64 to i64*
  store i64 %73, i64* %74, align 8
  br label %77

75:                                               ; preds = %62
  %76 = getelementptr inbounds %"class.tint::ProgramBuilder", %"class.tint::ProgramBuilder"* %39, i64 0, i32 5, i32 0
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4tint3ast4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_8TypeNameENS5_ISC_EEEEEEEvDpOT_(%"class.std::__1::vector.86"* %76, %"class.std::__1::unique_ptr.285"* nonnull dereferenceable(8) %5) #9
  br label %77

77:                                               ; preds = %75, %69
  %78 = load %"class.tint::ast::TypeName"*, %"class.tint::ast::TypeName"** %41, align 8
  store %"class.tint::ast::TypeName"* null, %"class.tint::ast::TypeName"** %41, align 8
  %79 = icmp eq %"class.tint::ast::TypeName"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %77
  %81 = bitcast %"class.tint::ast::TypeName"* %78 to void (%"class.tint::ast::TypeName"*)***
  %82 = load void (%"class.tint::ast::TypeName"*)**, void (%"class.tint::ast::TypeName"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.tint::ast::TypeName"*)*, void (%"class.tint::ast::TypeName"*)** %82, i64 1
  %84 = load void (%"class.tint::ast::TypeName"*)*, void (%"class.tint::ast::TypeName"*)** %83, align 8
  call void %84(%"class.tint::ast::TypeName"* nonnull %78) #9
  br label %85

85:                                               ; preds = %77, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN4tint6SymbolD1Ev(%"class.tint::Symbol"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  %86 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #10
  br label %93

93:                                               ; preds = %85, %90
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #9
  ret %"class.tint::ast::TypeName"* %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4tint12CloneContext5CloneENS_6SymbolE(%"class.tint::Symbol"* sret, %"class.tint::CloneContext"*, %"class.tint::Symbol"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.tint::TypeInfo"* @_ZNK4tint8CastableINS_3ast8TypeNameENS1_4TypeEE8TypeInfoEv(%"class.tint::Castable"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3ast8TypeNameEE4infoE
}

declare void @_ZNK4tint3ast4Type6to_strERKNS_3sem4InfoERNSt3__113basic_ostreamIcNS6_11char_traitsIcEEEEm(%"class.tint::ast::Type"*, %"class.tint::sem::Info"* dereferenceable(40), %"class.std::__1::basic_ostream"* dereferenceable(160), i64) unnamed_addr #2

declare void @_ZN4tint3ast4TypeC2ENS_9ProgramIDERKNS_6SourceE(%"class.tint::ast::Type"*, i32, %"class.tint::Source"* dereferenceable(64)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4tint3ast4TypeD2Ev(%"class.tint::ast::Type"*) unnamed_addr #3

declare void @_ZN4tint3ast4TypeC2EOS1_(%"class.tint::ast::Type"*, %"class.tint::ast::Type"* dereferenceable(80)) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKc(%"class.std::__1::basic_string"*, i64, i8*) local_unnamed_addr #2

declare void @_ZNK4tint14ProgramBuilder14AssertNotMovedEv(%"class.tint::ProgramBuilder"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4tint3ast4NodeENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJNS1_INS3_8TypeNameENS5_ISC_EEEEEEEvDpOT_(%"class.std::__1::vector.86"*, %"class.std::__1::unique_ptr.285"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.88"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.86"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.86"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.88"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.88"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.88"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.88"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.285"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.285"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.tint::ast::TypeName"* null, %"class.tint::ast::TypeName"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.88"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.88"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.88"*, %"class.std::__1::unique_ptr.88"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.88"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.88"*, %"class.std::__1::unique_ptr.88"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.88"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.tint::ast::Node"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.88"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.88"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.88"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.88"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !11

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.88"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.88"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.88"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.88"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.88"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.88"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.88"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.88"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.88"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.88"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.88"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.88"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.88"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.88"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.88"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.88"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.88"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.88"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.88"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.88"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.88"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.88"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.88"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.88"*, %"class.std::__1::unique_ptr.88"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.88"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.88"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.88"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.88"*
  %138 = icmp eq %"class.std::__1::unique_ptr.88"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.88"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.tint::ast::Node"*, %"class.tint::ast::Node"** %142, align 8
  store %"class.tint::ast::Node"* null, %"class.tint::ast::Node"** %142, align 8
  %144 = icmp eq %"class.tint::ast::Node"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.tint::ast::Node"* %143 to void (%"class.tint::ast::Node"*)***
  %147 = load void (%"class.tint::ast::Node"*)**, void (%"class.tint::ast::Node"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.tint::ast::Node"*)*, void (%"class.tint::ast::Node"*)** %147, i64 1
  %149 = load void (%"class.tint::ast::Node"*)*, void (%"class.tint::ast::Node"*)** %148, align 8
  tail call void %149(%"class.tint::ast::Node"* nonnull %143) #9
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.88"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK4tint12CloneContext5CloneERKNS_6SourceE: argument 0"}
!7 = distinct !{!7, !"_ZNK4tint12CloneContext5CloneERKNS_6SourceE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_OS9_"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
