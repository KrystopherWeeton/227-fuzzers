; ModuleID = '../../media/formats/webm/webm_webvtt_parser.cc'
source_filename = "../../media/formats/webm/webm_webvtt_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.media::WebMWebVTTParser" = type { i8*, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN5media16WebMWebVTTParserC1EPKhi = hidden unnamed_addr alias void (%"class.media::WebMWebVTTParser"*, i8*, i32), void (%"class.media::WebMWebVTTParser"*, i8*, i32)* @_ZN5media16WebMWebVTTParserC2EPKhi

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16WebMWebVTTParser5ParseEPKhiPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESA_SA_(i8*, i32, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.media::WebMWebVTTParser", align 8
  %7 = bitcast %"class.media::WebMWebVTTParser"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %6, i64 0, i32 1
  store i8* %0, i8** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i8, i8* %0, i64 %10
  store i8* %11, i8** %9, align 8
  call void @_ZN5media16WebMWebVTTParser5ParseEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_S8_(%"class.media::WebMWebVTTParser"* nonnull %6, %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* %4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16WebMWebVTTParser5ParseEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES8_S8_(%"class.media::WebMWebVTTParser"* nocapture, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %12, align 8
  br label %15

13:                                               ; preds = %4
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %14, align 1
  store i8 0, i8* %6, align 1
  br label %15

15:                                               ; preds = %13, %9
  %16 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %0, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %0, i64 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = icmp ult i8* %17, %19
  br i1 %20, label %21, label %38

21:                                               ; preds = %15, %34
  %22 = phi i8* [ %36, %34 ], [ %19, %15 ]
  %23 = phi i8* [ %35, %34 ], [ %17, %15 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 1
  store i8* %24, i8** %16, align 8
  %25 = load i8, i8* %23, align 1
  switch i8 %25, label %34 [
    i8 10, label %38
    i8 13, label %26
  ]

26:                                               ; preds = %21
  %27 = getelementptr inbounds i8, i8* %23, i64 1
  %28 = icmp ult i8* %27, %22
  br i1 %28, label %29, label %38

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %23, i64 2
  store i8* %30, i8** %16, align 8
  %31 = load i8, i8* %27, align 1
  %32 = icmp eq i8 %31, 10
  %33 = select i1 %32, i8* %30, i8* %27
  store i8* %33, i8** %16, align 8
  br label %38

34:                                               ; preds = %21
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %1, i8 signext %25) #5
  %35 = load i8*, i8** %16, align 8
  %36 = load i8*, i8** %18, align 8
  %37 = icmp ult i8* %35, %36
  br i1 %37, label %21, label %38

38:                                               ; preds = %21, %34, %29, %15, %26
  %39 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  store i8 0, i8* %45, align 1
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %46, align 8
  br label %49

47:                                               ; preds = %38
  %48 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  store i8 0, i8* %48, align 1
  store i8 0, i8* %40, align 1
  br label %49

49:                                               ; preds = %47, %43
  %50 = load i8*, i8** %16, align 8
  %51 = load i8*, i8** %18, align 8
  %52 = icmp ult i8* %50, %51
  br i1 %52, label %53, label %72

53:                                               ; preds = %49, %66
  %54 = phi i8* [ %68, %66 ], [ %51, %49 ]
  %55 = phi i8* [ %67, %66 ], [ %50, %49 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 1
  store i8* %56, i8** %16, align 8
  %57 = load i8, i8* %55, align 1
  switch i8 %57, label %66 [
    i8 10, label %70
    i8 13, label %58
  ]

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %55, i64 1
  %60 = icmp ult i8* %59, %54
  br i1 %60, label %61, label %72

61:                                               ; preds = %58
  %62 = getelementptr inbounds i8, i8* %55, i64 2
  store i8* %62, i8** %16, align 8
  %63 = load i8, i8* %59, align 1
  %64 = icmp eq i8 %63, 10
  %65 = select i1 %64, i8* %62, i8* %59
  store i8* %65, i8** %16, align 8
  br label %72

66:                                               ; preds = %53
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %2, i8 signext %57) #5
  %67 = load i8*, i8** %16, align 8
  %68 = load i8*, i8** %18, align 8
  %69 = icmp ult i8* %67, %68
  br i1 %69, label %53, label %72

70:                                               ; preds = %53
  %71 = getelementptr inbounds i8, i8* %55, i64 1
  br label %72

72:                                               ; preds = %66, %70, %61, %49, %58
  %73 = phi i8* [ %54, %61 ], [ %51, %49 ], [ %54, %58 ], [ %54, %70 ], [ %68, %66 ]
  %74 = phi i8* [ %65, %61 ], [ %50, %49 ], [ %59, %58 ], [ %71, %70 ], [ %67, %66 ]
  %75 = ptrtoint i8* %74 to i64
  %76 = ptrtoint i8* %73 to i64
  %77 = sub i64 %76, %75
  %78 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %87

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 9223372036854775807
  %86 = add nsw i64 %85, -1
  br label %87

87:                                               ; preds = %82, %72
  %88 = phi i64 [ %86, %82 ], [ 22, %72 ]
  %89 = icmp ugt i64 %77, %88
  br i1 %89, label %90, label %100

90:                                               ; preds = %87
  br i1 %81, label %91, label %94

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  br label %96

94:                                               ; preds = %90
  %95 = zext i8 %80 to i64
  br label %96

96:                                               ; preds = %94, %91
  %97 = phi i64 [ %93, %91 ], [ %95, %94 ]
  %98 = sub i64 %77, %88
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %3, i64 %88, i64 %98, i64 %97, i64 0, i64 %97, i64 0) #5
  %99 = load i8, i8* %79, align 1
  br label %100

100:                                              ; preds = %96, %87
  %101 = phi i8 [ %80, %87 ], [ %99, %96 ]
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  br label %108

106:                                              ; preds = %100
  %107 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  br label %108

108:                                              ; preds = %106, %103
  %109 = phi i8* [ %105, %103 ], [ %107, %106 ]
  %110 = icmp eq i8* %74, %73
  br i1 %110, label %215, label %111

111:                                              ; preds = %108
  %112 = sub i64 0, %75
  %113 = getelementptr i8, i8* %73, i64 %112
  %114 = ptrtoint i8* %113 to i64
  %115 = icmp ult i8* %113, inttoptr (i64 32 to i8*)
  br i1 %115, label %205, label %116

116:                                              ; preds = %111
  %117 = sub i64 0, %75
  %118 = getelementptr i8, i8* %109, i64 %117
  %119 = ptrtoint i8* %118 to i64
  %120 = getelementptr i8, i8* %73, i64 %119
  %121 = icmp ult i8* %109, %73
  %122 = icmp ult i8* %74, %120
  %123 = and i1 %121, %122
  br i1 %123, label %205, label %124

124:                                              ; preds = %116
  %125 = and i64 %114, -32
  %126 = getelementptr i8, i8* %109, i64 %125
  %127 = getelementptr i8, i8* %74, i64 %125
  %128 = add i64 %125, -32
  %129 = lshr exact i64 %128, 5
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 3
  %132 = icmp ult i64 %128, 96
  br i1 %132, label %184, label %133

133:                                              ; preds = %124
  %134 = sub nsw i64 %130, %131
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %181, %135 ]
  %137 = phi i64 [ %134, %133 ], [ %182, %135 ]
  %138 = getelementptr i8, i8* %109, i64 %136
  %139 = getelementptr i8, i8* %74, i64 %136
  %140 = bitcast i8* %139 to <16 x i8>*
  %141 = load <16 x i8>, <16 x i8>* %140, align 1, !alias.scope !2
  %142 = getelementptr i8, i8* %139, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  %144 = load <16 x i8>, <16 x i8>* %143, align 1, !alias.scope !2
  %145 = bitcast i8* %138 to <16 x i8>*
  store <16 x i8> %141, <16 x i8>* %145, align 1, !alias.scope !5, !noalias !2
  %146 = getelementptr i8, i8* %138, i64 16
  %147 = bitcast i8* %146 to <16 x i8>*
  store <16 x i8> %144, <16 x i8>* %147, align 1, !alias.scope !5, !noalias !2
  %148 = or i64 %136, 32
  %149 = getelementptr i8, i8* %109, i64 %148
  %150 = getelementptr i8, i8* %74, i64 %148
  %151 = bitcast i8* %150 to <16 x i8>*
  %152 = load <16 x i8>, <16 x i8>* %151, align 1, !alias.scope !2
  %153 = getelementptr i8, i8* %150, i64 16
  %154 = bitcast i8* %153 to <16 x i8>*
  %155 = load <16 x i8>, <16 x i8>* %154, align 1, !alias.scope !2
  %156 = bitcast i8* %149 to <16 x i8>*
  store <16 x i8> %152, <16 x i8>* %156, align 1, !alias.scope !5, !noalias !2
  %157 = getelementptr i8, i8* %149, i64 16
  %158 = bitcast i8* %157 to <16 x i8>*
  store <16 x i8> %155, <16 x i8>* %158, align 1, !alias.scope !5, !noalias !2
  %159 = or i64 %136, 64
  %160 = getelementptr i8, i8* %109, i64 %159
  %161 = getelementptr i8, i8* %74, i64 %159
  %162 = bitcast i8* %161 to <16 x i8>*
  %163 = load <16 x i8>, <16 x i8>* %162, align 1, !alias.scope !2
  %164 = getelementptr i8, i8* %161, i64 16
  %165 = bitcast i8* %164 to <16 x i8>*
  %166 = load <16 x i8>, <16 x i8>* %165, align 1, !alias.scope !2
  %167 = bitcast i8* %160 to <16 x i8>*
  store <16 x i8> %163, <16 x i8>* %167, align 1, !alias.scope !5, !noalias !2
  %168 = getelementptr i8, i8* %160, i64 16
  %169 = bitcast i8* %168 to <16 x i8>*
  store <16 x i8> %166, <16 x i8>* %169, align 1, !alias.scope !5, !noalias !2
  %170 = or i64 %136, 96
  %171 = getelementptr i8, i8* %109, i64 %170
  %172 = getelementptr i8, i8* %74, i64 %170
  %173 = bitcast i8* %172 to <16 x i8>*
  %174 = load <16 x i8>, <16 x i8>* %173, align 1, !alias.scope !2
  %175 = getelementptr i8, i8* %172, i64 16
  %176 = bitcast i8* %175 to <16 x i8>*
  %177 = load <16 x i8>, <16 x i8>* %176, align 1, !alias.scope !2
  %178 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %174, <16 x i8>* %178, align 1, !alias.scope !5, !noalias !2
  %179 = getelementptr i8, i8* %171, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %177, <16 x i8>* %180, align 1, !alias.scope !5, !noalias !2
  %181 = add i64 %136, 128
  %182 = add i64 %137, -4
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %135, !llvm.loop !7

184:                                              ; preds = %135, %124
  %185 = phi i64 [ 0, %124 ], [ %181, %135 ]
  %186 = icmp eq i64 %131, 0
  br i1 %186, label %203, label %187

187:                                              ; preds = %184, %187
  %188 = phi i64 [ %200, %187 ], [ %185, %184 ]
  %189 = phi i64 [ %201, %187 ], [ %131, %184 ]
  %190 = getelementptr i8, i8* %109, i64 %188
  %191 = getelementptr i8, i8* %74, i64 %188
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !2
  %194 = getelementptr i8, i8* %191, i64 16
  %195 = bitcast i8* %194 to <16 x i8>*
  %196 = load <16 x i8>, <16 x i8>* %195, align 1, !alias.scope !2
  %197 = bitcast i8* %190 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %197, align 1, !alias.scope !5, !noalias !2
  %198 = getelementptr i8, i8* %190, i64 16
  %199 = bitcast i8* %198 to <16 x i8>*
  store <16 x i8> %196, <16 x i8>* %199, align 1, !alias.scope !5, !noalias !2
  %200 = add i64 %188, 32
  %201 = add i64 %189, -1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %187, !llvm.loop !9

203:                                              ; preds = %187, %184
  %204 = icmp eq i64 %125, %114
  br i1 %204, label %215, label %205

205:                                              ; preds = %203, %116, %111
  %206 = phi i8* [ %109, %116 ], [ %109, %111 ], [ %126, %203 ]
  %207 = phi i8* [ %74, %116 ], [ %74, %111 ], [ %127, %203 ]
  br label %208

208:                                              ; preds = %205, %208
  %209 = phi i8* [ %213, %208 ], [ %206, %205 ]
  %210 = phi i8* [ %212, %208 ], [ %207, %205 ]
  %211 = load i8, i8* %210, align 1
  store i8 %211, i8* %209, align 1
  %212 = getelementptr inbounds i8, i8* %210, i64 1
  %213 = getelementptr inbounds i8, i8* %209, i64 1
  %214 = icmp eq i8* %212, %73
  br i1 %214, label %215, label %208, !llvm.loop !11

215:                                              ; preds = %208, %203, %108
  %216 = phi i8* [ %109, %108 ], [ %126, %203 ], [ %213, %208 ]
  store i8 0, i8* %216, align 1
  %217 = load i8, i8* %79, align 1
  %218 = icmp slt i8 %217, 0
  br i1 %218, label %219, label %221

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %77, i64* %220, align 8
  br label %223

221:                                              ; preds = %215
  %222 = trunc i64 %77 to i8
  store i8 %222, i8* %79, align 1
  br label %223

223:                                              ; preds = %219, %221
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media16WebMWebVTTParserC2EPKhi(%"class.media::WebMWebVTTParser"* nocapture, i8*, i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %0, i64 0, i32 1
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds i8, i8* %1, i64 %6
  store i8* %7, i8** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16WebMWebVTTParser9ParseLineEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.media::WebMWebVTTParser"* nocapture, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %10, align 8
  br label %13

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  store i8 0, i8* %12, align 1
  store i8 0, i8* %4, align 1
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %0, i64 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %0, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = icmp ult i8* %15, %17
  br i1 %18, label %19, label %37

19:                                               ; preds = %13, %33
  %20 = phi i8* [ %35, %33 ], [ %17, %13 ]
  %21 = phi i8* [ %34, %33 ], [ %15, %13 ]
  %22 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %22, i8** %14, align 8
  %23 = load i8, i8* %21, align 1
  switch i8 %23, label %33 [
    i8 10, label %37
    i8 13, label %24
  ]

24:                                               ; preds = %19
  %25 = getelementptr inbounds i8, i8* %21, i64 1
  %26 = icmp ult i8* %25, %20
  br i1 %26, label %27, label %37

27:                                               ; preds = %24
  %28 = getelementptr inbounds i8, i8* %21, i64 2
  store i8* %28, i8** %14, align 8
  %29 = load i8, i8* %25, align 1
  %30 = icmp eq i8 %29, 10
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds i8, i8* %21, i64 1
  store i8* %32, i8** %14, align 8
  br label %37

33:                                               ; preds = %19
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* %1, i8 signext %23) #5
  %34 = load i8*, i8** %14, align 8
  %35 = load i8*, i8** %16, align 8
  %36 = icmp ult i8* %34, %35
  br i1 %36, label %19, label %37

37:                                               ; preds = %19, %33, %13, %24, %31, %27
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media16WebMWebVTTParser7GetByteEPh(%"class.media::WebMWebVTTParser"* nocapture, i8* nocapture) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %9, i8** %3, align 8
  %10 = load i8, i8* %4, align 1
  store i8 %10, i8* %1, align 1
  br label %11

11:                                               ; preds = %2, %8
  %12 = phi i1 [ true, %8 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media16WebMWebVTTParser9UngetByteEv(%"class.media::WebMWebVTTParser"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.media::WebMWebVTTParser", %"class.media::WebMWebVTTParser"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds i8, i8* %3, i64 -1
  store i8* %4, i8** %2, align 8
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !8}
