; ModuleID = '../../media/filters/video_cadence_estimator.cc'
source_filename = "../../media/filters/video_cadence_estimator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.media::VideoCadenceEstimator" = type { %"class.std::__1::vector", %"class.std::__1::vector", i32, %"class.base::TimeDelta", i8, i32, %"class.base::TimeDelta", i8, %struct.anon }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.base::TimeDelta" = type { i64 }
%struct.anon = type { i8, i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { double }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.9", [4 x i8] }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.4 }
%struct.anon.4 = type { i8 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNK4base9TimeDeltadvES0_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN5media17kBresenhamCadenceE = external global %"struct.base::Feature", align 8
@.str.1 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"Media.VideoRenderer.CadenceChanges\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [4 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN5mediaL27HistogramCadenceChangeCountEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5media21VideoCadenceEstimatorC1EN4base9TimeDeltaE = hidden unnamed_addr alias void (%"class.media::VideoCadenceEstimator"*, i64), void (%"class.media::VideoCadenceEstimator"*, i64)* @_ZN5media21VideoCadenceEstimatorC2EN4base9TimeDeltaE
@_ZN5media21VideoCadenceEstimatorD1Ev = hidden unnamed_addr alias void (%"class.media::VideoCadenceEstimator"*), void (%"class.media::VideoCadenceEstimator"*)* @_ZN5media21VideoCadenceEstimatorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16ConstructCadenceEii(%"class.std::__1::vector"* noalias sret, i32, i32) local_unnamed_addr #0 {
  %4 = sdiv i32 %1, %2
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = sext i32 %2 to i64
  %9 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #9
  %10 = icmp eq i32 %2, 0
  br i1 %10, label %52, label %11

11:                                               ; preds = %3
  %12 = icmp slt i32 %2, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #10
  unreachable

15:                                               ; preds = %11
  %16 = shl nsw i64 %8, 2
  %17 = tail call i8* @_Znwm(i64 %16) #11
  %18 = bitcast i8* %17 to i32*
  %19 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i32, i32* %18, i64 %8
  store i32* %20, i32** %7, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 0, i64 %16, i1 false)
  %21 = bitcast i32** %6 to i64*
  %22 = ptrtoint i32* %20 to i64
  store i64 %22, i64* %21, align 8
  %23 = icmp slt i32 %1, %2
  %24 = shl nsw i32 %4, 1
  %25 = or i32 %24, 1
  %26 = mul nsw i32 %25, %2
  %27 = add nsw i32 %4, 1
  %28 = zext i32 %2 to i64
  br label %29

29:                                               ; preds = %42, %15
  %30 = phi i32* [ %18, %15 ], [ %45, %42 ]
  %31 = phi i64 [ 0, %15 ], [ %50, %42 ]
  %32 = phi i32 [ 0, %15 ], [ %49, %42 ]
  %33 = phi i32 [ 0, %15 ], [ %34, %42 ]
  %34 = add nsw i32 %33, %1
  %35 = icmp eq i64 %31, 0
  %36 = and i1 %23, %35
  br i1 %36, label %42, label %37

37:                                               ; preds = %29
  %38 = sub nsw i32 %34, %32
  %39 = shl nsw i32 %38, 1
  %40 = icmp slt i32 %39, %26
  %41 = select i1 %40, i32 %4, i32 %27
  br label %42

42:                                               ; preds = %37, %29
  %43 = phi i32 [ %27, %29 ], [ %41, %37 ]
  %44 = getelementptr inbounds i32, i32* %30, i64 %31
  store i32 %43, i32* %44, align 4
  %45 = load i32*, i32** %5, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 %31
  %47 = load i32, i32* %46, align 4
  %48 = mul nsw i32 %47, %2
  %49 = add nsw i32 %48, %32
  %50 = add nuw nsw i64 %31, 1
  %51 = icmp eq i64 %50, %28
  br i1 %51, label %52, label %29

52:                                               ; preds = %42, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21VideoCadenceEstimatorC2EN4base9TimeDeltaE(%"class.media::VideoCadenceEstimator"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 3, i32 0
  %4 = bitcast %"class.media::VideoCadenceEstimator"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 48, i1 false)
  store i64 100000, i64* %3, align 8
  %5 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 6, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 7
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 1
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i32** %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 2
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 5
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 4
  store i8 1, i8* %16, align 8
  %17 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5media17kBresenhamCadenceE) #9
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %7, align 8
  store i8 0, i8* %9, align 8
  store i32 0, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21VideoCadenceEstimator5ResetEv(%"class.media::VideoCadenceEstimator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.media::VideoCadenceEstimator"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  store i64 %3, i64* %5, align 8
  %6 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 2
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 5
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 4
  store i8 1, i8* %13, align 8
  %14 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5media17kBresenhamCadenceE) #9
  %15 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 0
  %16 = zext i1 %14 to i8
  store i8 %16, i8* %15, align 8
  %17 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 1
  store i32 0, i32* %18, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media21VideoCadenceEstimatorD2Ev(%"class.media::VideoCadenceEstimator"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media21VideoCadenceEstimator21UpdateCadenceEstimateEN4base9TimeDeltaES2_S2_S2_(%"class.media::VideoCadenceEstimator"* nocapture, i64, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = sitofp i64 %1 to double
  %9 = fmul double %8, 5.500000e-01
  %10 = fcmp oge double %9, 0xC3E0000000000000
  %11 = fcmp ole double %9, 0x43DFFFFFFFFFFFFF
  %12 = and i1 %11, %10
  %13 = fptosi double %9 to i64
  %14 = icmp sgt i64 %1, -1
  %15 = select i1 %14, i64 9223372036854775807, i64 -9223372036854775808
  %16 = select i1 %12, i64 %13, i64 %15
  %17 = icmp slt i64 %16, %3
  br i1 %17, label %26, label %18

18:                                               ; preds = %5
  %19 = fmul double %8, 4.500000e-01
  %20 = fcmp oge double %19, 0xC3E0000000000000
  %21 = fcmp ole double %19, 0x43DFFFFFFFFFFFFF
  %22 = and i1 %21, %20
  %23 = fptosi double %19 to i64
  %24 = select i1 %22, i64 %23, i64 %15
  %25 = icmp sgt i64 %24, %3
  br i1 %25, label %26, label %29

26:                                               ; preds = %18, %5
  %27 = phi i8 [ 1, %5 ], [ 0, %18 ]
  %28 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 7
  store i8 %27, i8* %28, align 8
  br label %29

29:                                               ; preds = %26, %18
  %30 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 0
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = tail call zeroext i1 @_ZN5media21VideoCadenceEstimator30UpdateBresenhamCadenceEstimateEN4base9TimeDeltaES2_(%"class.media::VideoCadenceEstimator"* %0, i64 %1, i64 %2)
  br label %188

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 7
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %49, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 2
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %44 = load i32*, i32** %43, align 8
  %45 = icmp eq i32* %42, %44
  br i1 %45, label %188, label %46

46:                                               ; preds = %39
  %47 = ptrtoint i32* %42 to i64
  %48 = bitcast i32** %43 to i64*
  store i64 %47, i64* %48, align 8
  br label %188

49:                                               ; preds = %35
  %50 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #9
  %51 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  store i64 0, i64* %51, align 8
  %52 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #9
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 24, i1 false)
  call void @_ZNK5media21VideoCadenceEstimator16CalculateCadenceEN4base9TimeDeltaES2_S2_PS2_(%"class.std::__1::vector"* nonnull sret %7, %"class.media::VideoCadenceEstimator"* %0, i64 %1, i64 %2, i64 %4, %"class.base::TimeDelta"* nonnull %6)
  %57 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 4
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %49
  store i8 0, i8* %57, align 8
  %61 = load atomic i64, i64* @_ZZN5mediaL27HistogramCadenceChangeCountEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %62 = inttoptr i64 %61 to %"class.base::HistogramBase"*
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 10, i32 10, i32 1) #9
  %66 = ptrtoint %"class.base::HistogramBase"* %65 to i64
  store atomic i64 %66, i64* @_ZZN5mediaL27HistogramCadenceChangeCountEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %67

67:                                               ; preds = %60, %64
  %68 = phi %"class.base::HistogramBase"* [ %62, %60 ], [ %65, %64 ]
  %69 = bitcast %"class.base::HistogramBase"* %68 to void (%"class.base::HistogramBase"*, i32)***
  %70 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %70, i64 6
  %72 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %71, align 8
  tail call void %72(%"class.base::HistogramBase"* %68, i32 0) #9
  br label %73

73:                                               ; preds = %49, %67
  %74 = bitcast i32** %54 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.std::__1::vector"* %7 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %80 = bitcast i32** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.media::VideoCadenceEstimator"* %0 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %81, %83
  %85 = icmp eq i64 %78, %84
  %86 = inttoptr i64 %77 to i32*
  %87 = inttoptr i64 %75 to i32*
  br i1 %85, label %88, label %104

88:                                               ; preds = %73
  %89 = icmp eq i32* %86, %87
  br i1 %89, label %102, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %83 to i32*
  br label %92

92:                                               ; preds = %90, %98
  %93 = phi i32* [ %100, %98 ], [ %91, %90 ]
  %94 = phi i32* [ %99, %98 ], [ %86, %90 ]
  %95 = load i32, i32* %94, align 4
  %96 = load i32, i32* %93, align 4
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = getelementptr inbounds i32, i32* %94, i64 1
  %100 = getelementptr inbounds i32, i32* %93, i64 1
  %101 = icmp eq i32* %99, %87
  br i1 %101, label %102, label %92

102:                                              ; preds = %98, %88
  %103 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 2
  store i32 0, i32* %103, align 8
  br label %180

104:                                              ; preds = %92, %73
  %105 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 1
  %106 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 1, i32 0, i32 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.std::__1::vector"* %105 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %108, %110
  %112 = icmp eq i64 %78, %111
  br i1 %112, label %113, label %127

113:                                              ; preds = %104
  %114 = icmp eq i32* %86, %87
  br i1 %114, label %131, label %115

115:                                              ; preds = %113
  %116 = inttoptr i64 %110 to i32*
  br label %117

117:                                              ; preds = %115, %123
  %118 = phi i32* [ %125, %123 ], [ %116, %115 ]
  %119 = phi i32* [ %124, %123 ], [ %86, %115 ]
  %120 = load i32, i32* %119, align 4
  %121 = load i32, i32* %118, align 4
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %123, label %127

123:                                              ; preds = %117
  %124 = getelementptr inbounds i32, i32* %119, i64 1
  %125 = getelementptr inbounds i32, i32* %118, i64 1
  %126 = icmp eq i32* %124, %87
  br i1 %126, label %131, label %117

127:                                              ; preds = %117, %104
  %128 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 3, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp sgt i64 %129, %1
  br i1 %130, label %172, label %131

131:                                              ; preds = %123, %127, %113
  %132 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 2
  %133 = load i32, i32* %132, align 8
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %132, align 8
  %135 = sext i32 %134 to i64
  %136 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %1, i64 %135) #9
  %137 = extractvalue { i64, i1 } %136, 1
  %138 = extractvalue { i64, i1 } %136, 0
  br i1 %137, label %139, label %145

139:                                              ; preds = %131
  %140 = lshr i64 %1, 63
  %141 = trunc i64 %140 to i32
  %142 = lshr i32 %134, 31
  %143 = icmp eq i32 %142, %141
  %144 = select i1 %143, i64 9223372036854775807, i64 -9223372036854775808
  br label %145

145:                                              ; preds = %131, %139
  %146 = phi i64 [ %138, %131 ], [ %144, %139 ]
  %147 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 3, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = icmp slt i64 %146, %148
  br i1 %149, label %180, label %150

150:                                              ; preds = %145
  store i64 %77, i64* %82, align 8
  store i64 %83, i64* %76, align 8
  store i64 %75, i64* %80, align 8
  store i64 %81, i64* %74, align 8
  %151 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast i32** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast i32** %55 to i64*
  %155 = load i64, i64* %154, align 8
  store i64 %155, i64* %152, align 8
  store i64 %153, i64* %154, align 8
  %156 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 5
  %157 = load i32, i32* %156, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %156, align 4
  %159 = load atomic i64, i64* @_ZZN5mediaL27HistogramCadenceChangeCountEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %160 = inttoptr i64 %159 to %"class.base::HistogramBase"*
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %162, label %165

162:                                              ; preds = %150
  %163 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 10, i32 10, i32 1) #9
  %164 = ptrtoint %"class.base::HistogramBase"* %163 to i64
  store atomic i64 %164, i64* @_ZZN5mediaL27HistogramCadenceChangeCountEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %165

165:                                              ; preds = %150, %162
  %166 = phi %"class.base::HistogramBase"* [ %160, %150 ], [ %163, %162 ]
  %167 = bitcast %"class.base::HistogramBase"* %166 to void (%"class.base::HistogramBase"*, i32)***
  %168 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %168, i64 6
  %170 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %169, align 8
  tail call void %170(%"class.base::HistogramBase"* %166, i32 %158) #9
  %171 = load i32*, i32** %53, align 8
  br label %180

172:                                              ; preds = %127
  store i64 %77, i64* %109, align 8
  store i64 %110, i64* %76, align 8
  store i64 %75, i64* %107, align 8
  store i64 %108, i64* %74, align 8
  %173 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %174 = bitcast i32** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast i32** %55 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %174, align 8
  store i64 %175, i64* %176, align 8
  %178 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 2
  store i32 1, i32* %178, align 8
  %179 = inttoptr i64 %110 to i32*
  br label %180

180:                                              ; preds = %145, %165, %172, %102
  %181 = phi i32* [ %86, %102 ], [ %171, %165 ], [ %86, %145 ], [ %179, %172 ]
  %182 = phi i1 [ false, %102 ], [ true, %165 ], [ false, %145 ], [ false, %172 ]
  %183 = icmp eq i32* %181, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %180
  %185 = ptrtoint i32* %181 to i64
  store i64 %185, i64* %74, align 8
  %186 = bitcast i32* %181 to i8*
  tail call void @_ZdlPv(i8* %186) #11
  br label %187

187:                                              ; preds = %180, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #9
  br label %188

188:                                              ; preds = %39, %187, %46, %33
  %189 = phi i1 [ %34, %33 ], [ true, %46 ], [ %182, %187 ], [ false, %39 ]
  ret i1 %189
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media21VideoCadenceEstimator30UpdateBresenhamCadenceEstimateEN4base9TimeDeltaES2_(%"class.media::VideoCadenceEstimator"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca double, align 8
  %6 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 7
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %59, label %14

14:                                               ; preds = %10
  store i8 0, i8* %11, align 8
  br label %59

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = sext i32 %18 to i64
  %20 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %1, i64 %19) #9
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  br i1 %21, label %23, label %29

23:                                               ; preds = %15
  %24 = lshr i64 %1, 63
  %25 = trunc i64 %24 to i32
  %26 = lshr i32 %18, 31
  %27 = icmp eq i32 %26, %25
  %28 = select i1 %27, i64 9223372036854775807, i64 -9223372036854775808
  br label %29

29:                                               ; preds = %15, %23
  %30 = phi i64 [ %22, %15 ], [ %28, %23 ]
  %31 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 3, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %30, %32
  br i1 %33, label %59, label %34

34:                                               ; preds = %29
  %35 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  store double 0.000000e+00, double* %5, align 8
  %36 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = select i1 %38, double* %5, double* %39
  %41 = load double, double* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %42 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %4, i64 %1)
  %43 = fsub double %41, %42
  %44 = call double @llvm.fabs.f64(double %43) #9
  %45 = fcmp olt double %41, %42
  %46 = select i1 %45, double %42, double %41
  %47 = fdiv double %44, %46
  %48 = fcmp ugt double %47, 8.000000e-03
  br i1 %48, label %49, label %59

49:                                               ; preds = %34
  store i8 1, i8* %36, align 8
  store double %42, double* %39, align 8
  %50 = load i64, i64* %6, align 8
  %51 = icmp slt i64 %50, %1
  br i1 %51, label %52, label %56

52:                                               ; preds = %49
  %53 = add nsw i64 %1, -1
  %54 = sdiv i64 %53, %50
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %49, %52
  %57 = phi i32 [ %55, %52 ], [ 1, %49 ]
  %58 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 1
  store i32 %57, i32* %58, align 4
  store i32 0, i32* %16, align 8
  br label %59

59:                                               ; preds = %10, %56, %34, %29, %14
  %60 = phi i1 [ true, %14 ], [ false, %10 ], [ false, %29 ], [ true, %56 ], [ false, %34 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5media21VideoCadenceEstimator16CalculateCadenceEN4base9TimeDeltaES2_S2_PS2_(%"class.std::__1::vector"* noalias nocapture sret, %"class.media::VideoCadenceEstimator"* nocapture readonly, i64, i64, i64, %"class.base::TimeDelta"* nocapture) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = alloca %"class.base::TimeDelta", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %8, i64 0, i32 0
  store i64 %4, i64* %11, align 8
  %12 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %7, i64 %2)
  %13 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %1, i64 0, i32 6, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %4
  br i1 %15, label %56, label %16

16:                                               ; preds = %6
  %17 = call double @llvm.round.f64(double %12)
  %18 = fptosi double %17 to i32
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #9
  br label %160

22:                                               ; preds = %16
  %23 = icmp eq i32 %18, 0
  %24 = select i1 %23, i32 1, i32 %18
  %25 = call i8* @_Znwm(i64 4) #11
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds i8, i8* %25, i64 4
  store i32 0, i32* %26, align 4
  %28 = icmp slt i32 %24, 1
  %29 = shl nsw i32 %24, 1
  %30 = or i32 %29, 1
  %31 = icmp sge i32 %29, %30
  %32 = or i1 %31, %28
  %33 = zext i1 %32 to i32
  %34 = add nuw nsw i32 %24, %33
  store i32 %34, i32* %26, align 4
  %35 = ptrtoint i8* %25 to i64
  %36 = ptrtoint i8* %27 to i64
  %37 = sitofp i32 %24 to double
  %38 = fdiv double %12, %37
  %39 = fsub double 1.000000e+00, %38
  %40 = call double @llvm.fabs.f64(double %39)
  %41 = sitofp i64 %4 to double
  %42 = fdiv double %41, %40
  %43 = fcmp oge double %42, 0xC3E0000000000000
  %44 = fcmp ole double %42, 0x43DFFFFFFFFFFFFF
  %45 = and i1 %44, %43
  %46 = fptosi double %42 to i64
  %47 = icmp sgt i64 %4, -1
  %48 = select i1 %47, i64 9223372036854775807, i64 -9223372036854775808
  %49 = select i1 %45, i64 %46, i64 %48
  %50 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %49, i64* %50, align 8
  %51 = bitcast %"class.std::__1::vector"* %0 to i64*
  store i64 %35, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %36, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast i32** %54 to i64*
  store i64 %36, i64* %55, align 8
  br label %160

56:                                               ; preds = %6
  %57 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %8, i64 %14)
  %58 = insertelement <2 x double> undef, double %57, i32 0
  %59 = shufflevector <2 x double> %58, <2 x double> undef, <2 x i32> zeroinitializer
  %60 = fadd <2 x double> %59, <double 1.000000e+00, double undef>
  %61 = fsub <2 x double> <double undef, double 1.000000e+00>, %59
  %62 = shufflevector <2 x double> %60, <2 x double> %61, <2 x i32> <i32 0, i32 3>
  %63 = insertelement <2 x double> undef, double %12, i32 0
  %64 = shufflevector <2 x double> %63, <2 x double> undef, <2 x i32> zeroinitializer
  %65 = fdiv <2 x double> %64, %62
  %66 = extractelement <2 x double> %65, i32 0
  %67 = call double @llvm.floor.f64(double %66)
  %68 = extractelement <2 x double> %65, i32 1
  %69 = call double @llvm.floor.f64(double %68)
  %70 = fcmp olt double %67, %69
  br i1 %70, label %71, label %78

71:                                               ; preds = %56
  %72 = call double @llvm.round.f64(double %12)
  %73 = fptosi double %72 to i32
  %74 = sitofp i32 %73 to double
  %75 = fdiv double %12, %74
  %76 = fsub double 1.000000e+00, %75
  %77 = call double @llvm.fabs.f64(double %76)
  br label %78

78:                                               ; preds = %71, %56
  %79 = phi double [ 0.000000e+00, %56 ], [ %77, %71 ]
  %80 = phi i32 [ 0, %56 ], [ 1, %71 ]
  %81 = phi i32 [ 0, %56 ], [ %73, %71 ]
  %82 = fmul double %66, 2.000000e+00
  %83 = call double @llvm.floor.f64(double %82)
  %84 = fmul double %68, 2.000000e+00
  %85 = call double @llvm.floor.f64(double %84)
  %86 = fcmp olt double %83, %85
  br i1 %86, label %161, label %176

87:                                               ; preds = %248
  %88 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #9
  br label %160

89:                                               ; preds = %233, %248
  %90 = phi i32 [ %227, %248 ], [ %245, %233 ]
  %91 = phi i32 [ %226, %248 ], [ %246, %233 ]
  %92 = phi double [ %225, %248 ], [ %247, %233 ]
  %93 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #9
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %96 = sdiv i32 %90, %91
  %97 = sext i32 %91 to i64
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %99 = shl nsw i64 %97, 2
  %100 = call i8* @_Znwm(i64 %99) #11
  %101 = bitcast i8* %100 to i32*
  %102 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %100, i8** %102, align 8, !alias.scope !3
  %103 = getelementptr inbounds i32, i32* %101, i64 %97
  store i32* %103, i32** %95, align 8, !alias.scope !3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %100, i8 0, i64 %99, i1 false) #9, !noalias !3
  %104 = bitcast i32** %98 to i64*
  %105 = ptrtoint i32* %103 to i64
  store i64 %105, i64* %104, align 8, !alias.scope !3
  %106 = icmp slt i32 %90, %91
  %107 = shl nsw i32 %96, 1
  %108 = or i32 %107, 1
  %109 = mul nsw i32 %108, %91
  %110 = add nsw i32 %96, 1
  %111 = zext i32 %91 to i64
  %112 = load i32*, i32** %94, align 8, !alias.scope !3
  br i1 %106, label %117, label %113

113:                                              ; preds = %89
  %114 = shl nsw i32 %90, 1
  %115 = icmp slt i32 %114, %109
  %116 = select i1 %115, i32 %96, i32 %110
  br label %117

117:                                              ; preds = %113, %89
  %118 = phi i32 [ %110, %89 ], [ %116, %113 ]
  store i32 %118, i32* %101, align 4
  %119 = load i32, i32* %112, align 4
  %120 = mul nsw i32 %119, %91
  %121 = icmp eq i32 %91, 1
  br i1 %121, label %136, label %122

122:                                              ; preds = %117, %122
  %123 = phi i64 [ %134, %122 ], [ 1, %117 ]
  %124 = phi i32 [ %133, %122 ], [ %120, %117 ]
  %125 = phi i32 [ %126, %122 ], [ %90, %117 ]
  %126 = add nsw i32 %125, %90
  %127 = sub nsw i32 %126, %124
  %128 = shl nsw i32 %127, 1
  %129 = icmp slt i32 %128, %109
  %130 = select i1 %129, i32 %96, i32 %110
  %131 = getelementptr inbounds i32, i32* %112, i64 %123
  store i32 %130, i32* %131, align 4
  %132 = mul nsw i32 %130, %91
  %133 = add nsw i32 %132, %124
  %134 = add nuw nsw i64 %123, 1
  %135 = icmp eq i64 %134, %111
  br i1 %135, label %136, label %122, !llvm.loop !6

136:                                              ; preds = %122, %117
  %137 = ptrtoint i32* %112 to i64
  %138 = load i64, i64* %11, align 8
  %139 = sitofp i64 %138 to double
  %140 = fdiv double %139, %92
  %141 = fcmp oge double %140, 0xC3E0000000000000
  %142 = fcmp ole double %140, 0x43DFFFFFFFFFFFFF
  %143 = and i1 %142, %141
  %144 = fptosi double %140 to i64
  br i1 %143, label %152, label %145

145:                                              ; preds = %136
  %146 = lshr i64 %138, 63
  %147 = trunc i64 %146 to i32
  %148 = fcmp olt double %92, 0.000000e+00
  %149 = zext i1 %148 to i32
  %150 = icmp eq i32 %147, %149
  %151 = select i1 %150, i64 9223372036854775807, i64 -9223372036854775808
  br label %152

152:                                              ; preds = %145, %136
  %153 = phi i64 [ %144, %136 ], [ %151, %145 ]
  %154 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  store i64 %153, i64* %154, align 8
  %155 = bitcast %"class.std::__1::vector"* %0 to i64*
  store i64 %137, i64* %155, align 8
  %156 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %157 = bitcast i32** %98 to <2 x i64>*
  %158 = load <2 x i64>, <2 x i64>* %157, align 8
  %159 = bitcast i32** %156 to <2 x i64>*
  store <2 x i64> %158, <2 x i64>* %159, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #9
  br label %160

160:                                              ; preds = %87, %152, %20, %22
  ret void

161:                                              ; preds = %78
  %162 = fmul double %12, 2.000000e+00
  %163 = call double @llvm.round.f64(double %162)
  %164 = fptosi double %163 to i32
  %165 = sitofp i32 %164 to double
  %166 = fdiv double %162, %165
  %167 = fsub double 1.000000e+00, %166
  %168 = call double @llvm.fabs.f64(double %167)
  %169 = icmp eq i32 %80, 0
  %170 = fmul double %79, 0x3FEFAE147AE147AE
  %171 = fcmp olt double %168, %170
  %172 = or i1 %169, %171
  %173 = select i1 %172, double %168, double %79
  %174 = select i1 %172, i32 2, i32 %80
  %175 = select i1 %172, i32 %164, i32 %81
  br label %176

176:                                              ; preds = %161, %78
  %177 = phi double [ %79, %78 ], [ %173, %161 ]
  %178 = phi i32 [ %80, %78 ], [ %174, %161 ]
  %179 = phi i32 [ %81, %78 ], [ %175, %161 ]
  %180 = fmul double %66, 3.000000e+00
  %181 = call double @llvm.floor.f64(double %180)
  %182 = fmul double %68, 3.000000e+00
  %183 = call double @llvm.floor.f64(double %182)
  %184 = fcmp olt double %181, %183
  br i1 %184, label %185, label %200

185:                                              ; preds = %176
  %186 = fmul double %12, 3.000000e+00
  %187 = call double @llvm.round.f64(double %186)
  %188 = fptosi double %187 to i32
  %189 = sitofp i32 %188 to double
  %190 = fdiv double %186, %189
  %191 = fsub double 1.000000e+00, %190
  %192 = call double @llvm.fabs.f64(double %191)
  %193 = icmp eq i32 %178, 0
  %194 = fmul double %177, 0x3FEFAE147AE147AE
  %195 = fcmp olt double %192, %194
  %196 = or i1 %193, %195
  %197 = select i1 %196, double %192, double %177
  %198 = select i1 %196, i32 3, i32 %178
  %199 = select i1 %196, i32 %188, i32 %179
  br label %200

200:                                              ; preds = %185, %176
  %201 = phi double [ %177, %176 ], [ %197, %185 ]
  %202 = phi i32 [ %178, %176 ], [ %198, %185 ]
  %203 = phi i32 [ %179, %176 ], [ %199, %185 ]
  %204 = fmul double %66, 4.000000e+00
  %205 = call double @llvm.floor.f64(double %204)
  %206 = fmul double %68, 4.000000e+00
  %207 = call double @llvm.floor.f64(double %206)
  %208 = fcmp olt double %205, %207
  br i1 %208, label %209, label %224

209:                                              ; preds = %200
  %210 = fmul double %12, 4.000000e+00
  %211 = call double @llvm.round.f64(double %210)
  %212 = fptosi double %211 to i32
  %213 = sitofp i32 %212 to double
  %214 = fdiv double %210, %213
  %215 = fsub double 1.000000e+00, %214
  %216 = call double @llvm.fabs.f64(double %215)
  %217 = icmp eq i32 %202, 0
  %218 = fmul double %201, 0x3FEFAE147AE147AE
  %219 = fcmp olt double %216, %218
  %220 = or i1 %217, %219
  %221 = select i1 %220, double %216, double %201
  %222 = select i1 %220, i32 4, i32 %202
  %223 = select i1 %220, i32 %212, i32 %203
  br label %224

224:                                              ; preds = %209, %200
  %225 = phi double [ %201, %200 ], [ %221, %209 ]
  %226 = phi i32 [ %202, %200 ], [ %222, %209 ]
  %227 = phi i32 [ %203, %200 ], [ %223, %209 ]
  %228 = fmul <2 x double> %65, <double 5.000000e+00, double 5.000000e+00>
  %229 = call <2 x double> @llvm.floor.v2f64(<2 x double> %228)
  %230 = extractelement <2 x double> %229, i32 0
  %231 = extractelement <2 x double> %229, i32 1
  %232 = fcmp olt double %230, %231
  br i1 %232, label %233, label %248

233:                                              ; preds = %224
  %234 = fmul double %12, 5.000000e+00
  %235 = call double @llvm.round.f64(double %234)
  %236 = fptosi double %235 to i32
  %237 = sitofp i32 %236 to double
  %238 = fdiv double %234, %237
  %239 = fsub double 1.000000e+00, %238
  %240 = call double @llvm.fabs.f64(double %239)
  %241 = icmp eq i32 %226, 0
  %242 = fmul double %225, 0x3FEFAE147AE147AE
  %243 = fcmp olt double %240, %242
  %244 = or i1 %241, %243
  %245 = select i1 %244, i32 %236, i32 %227
  %246 = select i1 %244, i32 5, i32 %226
  %247 = select i1 %244, double %240, double %225
  br label %89

248:                                              ; preds = %224
  %249 = icmp eq i32 %226, 0
  br i1 %249, label %87, label %89
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5media21VideoCadenceEstimator18GetCadenceForFrameEm(%"class.media::VideoCadenceEstimator"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11, !prof !8

10:                                               ; preds = %6
  tail call void @llvm.trap() #9
  unreachable

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = load double, double* %12, align 8
  %14 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = add i64 %16, %1
  %18 = add i64 %17, 1
  %19 = uitofp i64 %18 to double
  %20 = fmul double %13, %19
  %21 = fptoui double %20 to i64
  %22 = uitofp i64 %17 to double
  %23 = fmul double %13, %22
  %24 = fptoui double %23 to i64
  %25 = sub i64 %21, %24
  %26 = trunc i64 %25 to i32
  br label %39

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.media::VideoCadenceEstimator"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 2
  %35 = urem i64 %1, %34
  %36 = inttoptr i64 %32 to i32*
  %37 = getelementptr inbounds i32, i32* %36, i64 %35
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %27, %11
  %40 = phi i32 [ %26, %11 ], [ %38, %27 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0)) #9
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5media21VideoCadenceEstimator15CadenceToStringERKNSt3__16vectorIiNS1_9allocatorIiEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.media::VideoCadenceEstimator"* nocapture readnone, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_ostringstream", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  store i8 2, i8* %12, align 1
  %13 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 23899, i16* %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 2
  store i8 0, i8* %15, align 2
  br label %88

16:                                               ; preds = %3
  %17 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 264, i8* nonnull %17) #9
  %18 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_stringbuf"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 256, i1 false)
  %20 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %22, i64 0, i32 0
  %24 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %27 = bitcast %"class.std::__1::basic_ostringstream"* %4 to i8**
  %28 = inttoptr i64 %24 to i8*
  %29 = getelementptr i8, i8* %28, i64 -24
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %17, i64 %31
  %33 = bitcast i8* %32 to i64*
  store i64 %26, i64* %33, align 8
  %34 = load i8*, i8** %27, align 8
  %35 = getelementptr i8, i8* %34, i64 -24
  %36 = bitcast i8* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds i8, i8* %17, i64 %37
  %39 = bitcast i8* %38 to %"class.std::__1::ios_base"*
  %40 = bitcast %"class.std::__1::basic_stringbuf"* %22 to i8*
  call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %39, i8* %40) #9
  %41 = getelementptr inbounds i8, i8* %38, i64 136
  %42 = bitcast i8* %41 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %42, align 8
  %43 = getelementptr inbounds i8, i8* %38, i64 144
  %44 = bitcast i8* %43 to i32*
  store i32 -1, i32* %44, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %20, align 8
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %23) #9
  %45 = getelementptr inbounds %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_stringbuf"* %22, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 1
  %47 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 1, i32 3
  %48 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 32, i1 false) #9
  store i32 16, i32* %47, align 8
  %49 = bitcast %"class.std::__1::basic_ostringstream"* %4 to %"class.std::__1::basic_ostream"*
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #9
  %51 = load i32*, i32** %5, align 8
  %52 = load i32*, i32** %7, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 -1
  %54 = icmp eq i32* %51, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %16, %55
  %56 = phi i32* [ %60, %55 ], [ %51, %16 ]
  %57 = load i32, i32* %56, align 4
  %58 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %49, i32 %57) #9
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %49, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #9
  %60 = getelementptr inbounds i32, i32* %56, i64 1
  %61 = icmp eq i32* %60, %53
  br i1 %61, label %62, label %55

62:                                               ; preds = %55
  %63 = load i32*, i32** %7, align 8
  br label %64

64:                                               ; preds = %62, %16
  %65 = phi i32* [ %63, %62 ], [ %52, %16 ]
  %66 = getelementptr inbounds i32, i32* %65, i64 -1
  %67 = load i32, i32* %66, align 4
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %49, i32 %67) #9
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %68, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #9
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %22) #9
  %70 = load i64, i64* bitcast ([4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE to i64*), align 8
  store i64 %70, i64* %25, align 8
  %71 = load i64, i64* bitcast (i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %72 = inttoptr i64 %70 to i8*
  %73 = getelementptr i8, i8* %72, i64 -24
  %74 = bitcast i8* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds i8, i8* %17, i64 %75
  %77 = bitcast i8* %76 to i64*
  store i64 %71, i64* %77, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %78 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %64
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  call void @_ZdlPv(i8* %84) #11
  br label %85

85:                                               ; preds = %64, %82
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %23) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %49, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTNSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1)) #9
  %86 = getelementptr inbounds %"class.std::__1::basic_ostringstream", %"class.std::__1::basic_ostringstream"* %4, i64 0, i32 2
  %87 = bitcast %"class.std::__1::basic_ios.base"* %86 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %87) #9
  call void @llvm.lifetime.end.p0i8(i64 264, i8* nonnull %17) #9
  br label %88

88:                                               ; preds = %85, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5media21VideoCadenceEstimator23avg_cadence_for_testingEv(%"class.media::VideoCadenceEstimator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %130, label %113

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %11 to i64
  %13 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %130, label %17

17:                                               ; preds = %9
  %18 = getelementptr i32, i32* %14, i64 -1
  %19 = ptrtoint i32* %18 to i64
  %20 = sub i64 %19, %12
  %21 = lshr i64 %20, 2
  %22 = add nuw nsw i64 %21, 1
  %23 = icmp ult i64 %22, 8
  br i1 %23, label %24, label %27

24:                                               ; preds = %103, %17
  %25 = phi i32 [ 0, %17 ], [ %111, %103 ]
  %26 = phi i32* [ %11, %17 ], [ %29, %103 ]
  br label %116

27:                                               ; preds = %17
  %28 = and i64 %22, 9223372036854775800
  %29 = getelementptr i32, i32* %11, i64 %28
  %30 = add nsw i64 %28, -8
  %31 = lshr exact i64 %30, 3
  %32 = add nuw nsw i64 %31, 1
  %33 = and i64 %32, 3
  %34 = icmp ult i64 %30, 24
  br i1 %34, label %80, label %35

35:                                               ; preds = %27
  %36 = sub nsw i64 %32, %33
  br label %37

37:                                               ; preds = %37, %35
  %38 = phi i64 [ 0, %35 ], [ %77, %37 ]
  %39 = phi <4 x i32> [ zeroinitializer, %35 ], [ %75, %37 ]
  %40 = phi <4 x i32> [ zeroinitializer, %35 ], [ %76, %37 ]
  %41 = phi i64 [ %36, %35 ], [ %78, %37 ]
  %42 = getelementptr i32, i32* %11, i64 %38
  %43 = bitcast i32* %42 to <4 x i32>*
  %44 = load <4 x i32>, <4 x i32>* %43, align 4
  %45 = getelementptr i32, i32* %42, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  %47 = load <4 x i32>, <4 x i32>* %46, align 4
  %48 = add nsw <4 x i32> %44, %39
  %49 = add nsw <4 x i32> %47, %40
  %50 = or i64 %38, 8
  %51 = getelementptr i32, i32* %11, i64 %50
  %52 = bitcast i32* %51 to <4 x i32>*
  %53 = load <4 x i32>, <4 x i32>* %52, align 4
  %54 = getelementptr i32, i32* %51, i64 4
  %55 = bitcast i32* %54 to <4 x i32>*
  %56 = load <4 x i32>, <4 x i32>* %55, align 4
  %57 = add nsw <4 x i32> %53, %48
  %58 = add nsw <4 x i32> %56, %49
  %59 = or i64 %38, 16
  %60 = getelementptr i32, i32* %11, i64 %59
  %61 = bitcast i32* %60 to <4 x i32>*
  %62 = load <4 x i32>, <4 x i32>* %61, align 4
  %63 = getelementptr i32, i32* %60, i64 4
  %64 = bitcast i32* %63 to <4 x i32>*
  %65 = load <4 x i32>, <4 x i32>* %64, align 4
  %66 = add nsw <4 x i32> %62, %57
  %67 = add nsw <4 x i32> %65, %58
  %68 = or i64 %38, 24
  %69 = getelementptr i32, i32* %11, i64 %68
  %70 = bitcast i32* %69 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4
  %72 = getelementptr i32, i32* %69, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4
  %75 = add nsw <4 x i32> %71, %66
  %76 = add nsw <4 x i32> %74, %67
  %77 = add i64 %38, 32
  %78 = add i64 %41, -4
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %37, !llvm.loop !9

80:                                               ; preds = %37, %27
  %81 = phi <4 x i32> [ undef, %27 ], [ %75, %37 ]
  %82 = phi <4 x i32> [ undef, %27 ], [ %76, %37 ]
  %83 = phi i64 [ 0, %27 ], [ %77, %37 ]
  %84 = phi <4 x i32> [ zeroinitializer, %27 ], [ %75, %37 ]
  %85 = phi <4 x i32> [ zeroinitializer, %27 ], [ %76, %37 ]
  %86 = icmp eq i64 %33, 0
  br i1 %86, label %103, label %87

87:                                               ; preds = %80, %87
  %88 = phi i64 [ %100, %87 ], [ %83, %80 ]
  %89 = phi <4 x i32> [ %98, %87 ], [ %84, %80 ]
  %90 = phi <4 x i32> [ %99, %87 ], [ %85, %80 ]
  %91 = phi i64 [ %101, %87 ], [ %33, %80 ]
  %92 = getelementptr i32, i32* %11, i64 %88
  %93 = bitcast i32* %92 to <4 x i32>*
  %94 = load <4 x i32>, <4 x i32>* %93, align 4
  %95 = getelementptr i32, i32* %92, i64 4
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4
  %98 = add nsw <4 x i32> %94, %89
  %99 = add nsw <4 x i32> %97, %90
  %100 = add i64 %88, 8
  %101 = add i64 %91, -1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %87, !llvm.loop !11

103:                                              ; preds = %87, %80
  %104 = phi <4 x i32> [ %81, %80 ], [ %98, %87 ]
  %105 = phi <4 x i32> [ %82, %80 ], [ %99, %87 ]
  %106 = add <4 x i32> %105, %104
  %107 = shufflevector <4 x i32> %106, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %108 = add <4 x i32> %106, %107
  %109 = shufflevector <4 x i32> %108, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %110 = add <4 x i32> %108, %109
  %111 = extractelement <4 x i32> %110, i32 0
  %112 = icmp eq i64 %22, %28
  br i1 %112, label %123, label %24

113:                                              ; preds = %5
  %114 = getelementptr inbounds %"class.media::VideoCadenceEstimator", %"class.media::VideoCadenceEstimator"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %115 = load double, double* %114, align 8
  br label %130

116:                                              ; preds = %24, %116
  %117 = phi i32 [ %120, %116 ], [ %25, %24 ]
  %118 = phi i32* [ %121, %116 ], [ %26, %24 ]
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %119, %117
  %121 = getelementptr inbounds i32, i32* %118, i64 1
  %122 = icmp eq i32* %121, %14
  br i1 %122, label %123, label %116, !llvm.loop !12

123:                                              ; preds = %116, %103
  %124 = phi i32 [ %111, %103 ], [ %120, %116 ]
  %125 = sitofp i32 %124 to double
  %126 = sub i64 %16, %12
  %127 = ashr exact i64 %126, 2
  %128 = uitofp i64 %127 to double
  %129 = fdiv double %125, %128
  br label %130

130:                                              ; preds = %9, %5, %123, %113
  %131 = phi double [ %115, %113 ], [ %129, %123 ], [ 0.000000e+00, %9 ], [ 0.000000e+00, %5 ]
  ret double %131
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #2

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.floor.v2f64(<2 x double>) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5media16ConstructCadenceEii: argument 0"}
!5 = distinct !{!5, !"_ZN5media16ConstructCadenceEii"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !13, !10}
!13 = !{!"llvm.loop.unroll.runtime.disable"}
