; ModuleID = '../../third_party/pdfium/core/fpdfapi/parser/cpdf_number.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/parser/cpdf_number.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_Number = type { %class.CPDF_Object, %class.FX_Number }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%class.FX_Number = type { i8, i8, %union.anon }
%union.anon = type { i32 }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Object* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.7" }
%"class.fxcrt::RetainPtr.7" = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.IFX_ArchiveStream = type { %class.IFX_WriteStream }
%class.IFX_WriteStream = type { i32 (...)** }
%class.CPDF_Encryptor = type opaque
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.fxcrt::StringDataTemplate.17"* }
%"class.fxcrt::StringDataTemplate.17" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CPDF_Dictionary = type opaque
%class.CPDF_Array = type opaque
%class.CPDF_Boolean = type opaque
%class.CPDF_Name = type opaque
%class.CPDF_Reference = type opaque
%class.CPDF_Stream = type opaque
%class.CPDF_String = type opaque
%"class.std::__1::set" = type opaque
%class.CPDF_IndirectObjectHolder = type opaque

@_ZTV11CPDF_Number = hidden unnamed_addr constant { [44 x i8*] } { [44 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_Number*)* @_ZN11CPDF_NumberD2Ev to i8*), i8* bitcast (void (%class.CPDF_Number*)* @_ZN11CPDF_NumberD0Ev to i8*), i8* bitcast (i32 (%class.CPDF_Number*)* @_ZNK11CPDF_Number7GetTypeEv to i8*), i8* bitcast (void (%"class.fxcrt::RetainPtr"*, %class.CPDF_Number*)* @_ZNK11CPDF_Number5CloneEv to i8*), i8* bitcast (void (%"class.fxcrt::RetainPtr"*, %class.CPDF_Object*)* @_ZNK11CPDF_Object17CloneDirectObjectEv to i8*), i8* bitcast (%class.CPDF_Object* (%class.CPDF_Object*)* @_ZN11CPDF_Object9GetDirectEv to i8*), i8* bitcast (%class.CPDF_Object* (%class.CPDF_Object*)* @_ZNK11CPDF_Object9GetDirectEv to i8*), i8* bitcast (void (%"class.fxcrt::ByteString"*, %class.CPDF_Number*)* @_ZNK11CPDF_Number9GetStringEv to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPDF_Object*)* @_ZNK11CPDF_Object14GetUnicodeTextEv to i8*), i8* bitcast (float (%class.CPDF_Number*)* @_ZNK11CPDF_Number9GetNumberEv to i8*), i8* bitcast (i32 (%class.CPDF_Number*)* @_ZNK11CPDF_Number10GetIntegerEv to i8*), i8* bitcast (%class.CPDF_Dictionary* (%class.CPDF_Object*)* @_ZN11CPDF_Object7GetDictEv to i8*), i8* bitcast (%class.CPDF_Dictionary* (%class.CPDF_Object*)* @_ZNK11CPDF_Object7GetDictEv to i8*), i8* bitcast (void (%class.CPDF_Number*, %"class.fxcrt::ByteString"*)* @_ZN11CPDF_Number9SetStringERKN5fxcrt10ByteStringE to i8*), i8* bitcast (i1 (%class.CPDF_Object*)* @_ZNK11CPDF_Object7IsArrayEv to i8*), i8* bitcast (i1 (%class.CPDF_Object*)* @_ZNK11CPDF_Object9IsBooleanEv to i8*), i8* bitcast (i1 (%class.CPDF_Object*)* @_ZNK11CPDF_Object12IsDictionaryEv to i8*), i8* bitcast (i1 (%class.CPDF_Object*)* @_ZNK11CPDF_Object6IsNameEv to i8*), i8* bitcast (i1 (%class.CPDF_Number*)* @_ZNK11CPDF_Number8IsNumberEv to i8*), i8* bitcast (i1 (%class.CPDF_Object*)* @_ZNK11CPDF_Object11IsReferenceEv to i8*), i8* bitcast (i1 (%class.CPDF_Object*)* @_ZNK11CPDF_Object8IsStreamEv to i8*), i8* bitcast (i1 (%class.CPDF_Object*)* @_ZNK11CPDF_Object8IsStringEv to i8*), i8* bitcast (i1 (%class.CPDF_Object*)* @_ZNK11CPDF_Object6IsNullEv to i8*), i8* bitcast (%class.CPDF_Array* (%class.CPDF_Object*)* @_ZN11CPDF_Object7AsArrayEv to i8*), i8* bitcast (%class.CPDF_Array* (%class.CPDF_Object*)* @_ZNK11CPDF_Object7AsArrayEv to i8*), i8* bitcast (%class.CPDF_Boolean* (%class.CPDF_Object*)* @_ZN11CPDF_Object9AsBooleanEv to i8*), i8* bitcast (%class.CPDF_Boolean* (%class.CPDF_Object*)* @_ZNK11CPDF_Object9AsBooleanEv to i8*), i8* bitcast (%class.CPDF_Dictionary* (%class.CPDF_Object*)* @_ZN11CPDF_Object12AsDictionaryEv to i8*), i8* bitcast (%class.CPDF_Dictionary* (%class.CPDF_Object*)* @_ZNK11CPDF_Object12AsDictionaryEv to i8*), i8* bitcast (%class.CPDF_Name* (%class.CPDF_Object*)* @_ZN11CPDF_Object6AsNameEv to i8*), i8* bitcast (%class.CPDF_Name* (%class.CPDF_Object*)* @_ZNK11CPDF_Object6AsNameEv to i8*), i8* bitcast (%class.CPDF_Number* (%class.CPDF_Number*)* @_ZN11CPDF_Number8AsNumberEv to i8*), i8* bitcast (%class.CPDF_Number* (%class.CPDF_Number*)* @_ZNK11CPDF_Number8AsNumberEv to i8*), i8* bitcast (%class.CPDF_Reference* (%class.CPDF_Object*)* @_ZN11CPDF_Object11AsReferenceEv to i8*), i8* bitcast (%class.CPDF_Reference* (%class.CPDF_Object*)* @_ZNK11CPDF_Object11AsReferenceEv to i8*), i8* bitcast (%class.CPDF_Stream* (%class.CPDF_Object*)* @_ZN11CPDF_Object8AsStreamEv to i8*), i8* bitcast (%class.CPDF_Stream* (%class.CPDF_Object*)* @_ZNK11CPDF_Object8AsStreamEv to i8*), i8* bitcast (%class.CPDF_String* (%class.CPDF_Object*)* @_ZN11CPDF_Object8AsStringEv to i8*), i8* bitcast (%class.CPDF_String* (%class.CPDF_Object*)* @_ZNK11CPDF_Object8AsStringEv to i8*), i8* bitcast (i1 (%class.CPDF_Number*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor*)* @_ZNK11CPDF_Number7WriteToEP17IFX_ArchiveStreamPK14CPDF_Encryptor to i8*), i8* bitcast (void (%"class.fxcrt::RetainPtr"*, %class.CPDF_Object*, i1, %"class.std::__1::set"*)* @_ZNK11CPDF_Object14CloneNonCyclicEbPNSt3__13setIPKS_NS0_4lessIS3_EENS0_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.fxcrt::RetainPtr"*, %class.CPDF_Object*, %class.CPDF_IndirectObjectHolder*)* @_ZNK11CPDF_Object13MakeReferenceEP25CPDF_IndirectObjectHolder to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c" \00", align 1

@_ZN11CPDF_NumberC1Ev = hidden unnamed_addr alias void (%class.CPDF_Number*), void (%class.CPDF_Number*)* @_ZN11CPDF_NumberC2Ev
@_ZN11CPDF_NumberC1Ei = hidden unnamed_addr alias void (%class.CPDF_Number*, i32), void (%class.CPDF_Number*, i32)* @_ZN11CPDF_NumberC2Ei
@_ZN11CPDF_NumberC1Ef = hidden unnamed_addr alias void (%class.CPDF_Number*, float), void (%class.CPDF_Number*, float)* @_ZN11CPDF_NumberC2Ef
@_ZN11CPDF_NumberC1EN5fxcrt18StringViewTemplateIcEE = hidden unnamed_addr alias void (%class.CPDF_Number*, %"class.fxcrt::StringViewTemplate"*), void (%class.CPDF_Number*, %"class.fxcrt::StringViewTemplate"*)* @_ZN11CPDF_NumberC2EN5fxcrt18StringViewTemplateIcEE
@_ZN11CPDF_NumberD1Ev = hidden unnamed_addr alias void (%class.CPDF_Number*), void (%class.CPDF_Number*)* @_ZN11CPDF_NumberD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CPDF_NumberC2Ev(%class.CPDF_Number*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %5, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*] }, { [44 x i8*] }* @_ZTV11CPDF_Number, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %6 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 1
  tail call void @_ZN9FX_NumberC1Ev(%class.FX_Number* %6) #7
  ret void
}

declare void @_ZN9FX_NumberC1Ev(%class.FX_Number*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CPDF_NumberC2Ei(%class.CPDF_Number*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %6, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*] }, { [44 x i8*] }* @_ZTV11CPDF_Number, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 1
  tail call void @_ZN9FX_NumberC1Ei(%class.FX_Number* %7, i32 %1) #7
  ret void
}

declare void @_ZN9FX_NumberC1Ei(%class.FX_Number*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CPDF_NumberC2Ef(%class.CPDF_Number*, float) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %6, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*] }, { [44 x i8*] }* @_ZTV11CPDF_Number, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 1
  tail call void @_ZN9FX_NumberC1Ef(%class.FX_Number* %7, float %1) #7
  ret void
}

declare void @_ZN9FX_NumberC1Ef(%class.FX_Number*, float) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CPDF_NumberC2EN5fxcrt18StringViewTemplateIcEE(%class.CPDF_Number*, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %7, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*] }, { [44 x i8*] }* @_ZTV11CPDF_Number, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %8 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 1
  %9 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  %10 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 16, i1 false)
  call void @_ZN9FX_NumberC1EN5fxcrt18StringViewTemplateIcEE(%class.FX_Number* %8, %"class.fxcrt::StringViewTemplate"* nonnull %3) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN9FX_NumberC1EN5fxcrt18StringViewTemplateIcEE(%class.FX_Number*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11CPDF_ObjectD2Ev(%class.CPDF_Object*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CPDF_NumberD2Ev(%class.CPDF_Number*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0
  tail call void @_ZN11CPDF_ObjectD2Ev(%class.CPDF_Object* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CPDF_NumberD0Ev(%class.CPDF_Number*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 0
  tail call void @_ZN11CPDF_ObjectD2Ev(%class.CPDF_Object* %2) #7
  %3 = bitcast %class.CPDF_Number* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK11CPDF_Number7GetTypeEv(%class.CPDF_Number* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11CPDF_Number5CloneEv(%"class.fxcrt::RetainPtr"* noalias nocapture sret, %class.CPDF_Number*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %1, i64 0, i32 1
  %4 = getelementptr inbounds %class.FX_Number, %class.FX_Number* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK9FX_Number9GetSignedEv(%class.FX_Number* %3) #7
  %9 = tail call i8* @_Znwm(i64 32) #8, !noalias !3
  %10 = bitcast i8* %9 to i32 (...)***
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #7, !noalias !3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*] }, { [44 x i8*] }* @_ZTV11CPDF_Number, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8, !noalias !3
  %13 = getelementptr inbounds i8, i8* %9, i64 24
  %14 = bitcast i8* %13 to %class.FX_Number*
  tail call void @_ZN9FX_NumberC1Ei(%class.FX_Number* %14, i32 %8) #7, !noalias !3
  %15 = load i64, i64* %12, align 8, !noalias !3
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %12, align 8, !noalias !3
  br label %27

17:                                               ; preds = %2
  %18 = tail call float @_ZNK9FX_Number8GetFloatEv(%class.FX_Number* %3) #7
  %19 = tail call i8* @_Znwm(i64 32) #8, !noalias !6
  %20 = bitcast i8* %19 to i32 (...)***
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = bitcast i8* %21 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #7, !noalias !6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*] }, { [44 x i8*] }* @_ZTV11CPDF_Number, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8, !noalias !6
  %23 = getelementptr inbounds i8, i8* %19, i64 24
  %24 = bitcast i8* %23 to %class.FX_Number*
  tail call void @_ZN9FX_NumberC1Ef(%class.FX_Number* %24, float %18) #7, !noalias !6
  %25 = load i64, i64* %22, align 8, !noalias !6
  %26 = add nsw i64 %25, 1
  store i64 %26, i64* %22, align 8, !noalias !6
  br label %27

27:                                               ; preds = %17, %7
  %28 = phi i64* [ %22, %17 ], [ %12, %7 ]
  %29 = phi i64 [ %26, %17 ], [ %16, %7 ]
  %30 = phi i8* [ %19, %17 ], [ %9, %7 ]
  %31 = ptrtoint i8* %30 to i64
  %32 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %31, i64* %32, align 8
  store i64 %29, i64* %28, align 8
  %33 = icmp eq i64 %29, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %27
  %35 = bitcast i8* %30 to %"class.fxcrt::Retainable"*
  %36 = bitcast i8* %30 to void (%"class.fxcrt::Retainable"*)***
  %37 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, i64 1
  %39 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %38, align 8
  tail call void %39(%"class.fxcrt::Retainable"* nonnull %35) #7
  br label %40

40:                                               ; preds = %27, %34
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZNK9FX_Number9GetSignedEv(%class.FX_Number*) local_unnamed_addr #1

declare float @_ZNK9FX_Number8GetFloatEv(%class.FX_Number*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK11CPDF_Number9GetNumberEv(%class.CPDF_Number*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 1
  %3 = tail call float @_ZNK9FX_Number8GetFloatEv(%class.FX_Number* %2) #7
  ret float %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11CPDF_Number10GetIntegerEv(%class.CPDF_Number*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 1
  %3 = tail call i32 @_ZNK9FX_Number9GetSignedEv(%class.FX_Number* %2) #7
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK11CPDF_Number8IsNumberEv(%class.CPDF_Number* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_Number* @_ZN11CPDF_Number8AsNumberEv(%class.CPDF_Number* readnone returned) unnamed_addr #5 align 2 {
  ret %class.CPDF_Number* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_Number* @_ZNK11CPDF_Number8AsNumberEv(%class.CPDF_Number* readnone returned) unnamed_addr #5 align 2 {
  ret %class.CPDF_Number* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CPDF_Number9SetStringERKN5fxcrt10ByteStringE(%class.CPDF_Number* nocapture, %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %class.FX_Number*
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %7, align 8, !noalias !9
  %9 = icmp eq %"class.fxcrt::StringDataTemplate"* %8, null
  %10 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %8, i64 0, i32 3, i64 0
  %11 = select i1 %9, i8* null, i8* %10
  br i1 %9, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %8, i64 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !9
  br label %15

15:                                               ; preds = %2, %12
  %16 = phi i64 [ %14, %12 ], [ 0, %2 ]
  %17 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %11, i8** %17, align 8, !alias.scope !9
  %18 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %16, i64* %18, align 8, !alias.scope !9
  call void @_ZN9FX_NumberC1EN5fxcrt18StringViewTemplateIcEE(%class.FX_Number* nonnull %4, %"class.fxcrt::StringViewTemplate"* nonnull %5) #7
  %19 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 1, i32 0
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %3, align 8
  store i64 %21, i64* %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11CPDF_Number9GetStringEv(%"class.fxcrt::ByteString"* noalias sret, %class.CPDF_Number*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %1, i64 0, i32 1
  %4 = getelementptr inbounds %class.FX_Number, %class.FX_Number* %3, i64 0, i32 0
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK9FX_Number9GetSignedEv(%class.FX_Number* %3) #7
  tail call void @_ZN5fxcrt10ByteString13FormatIntegerEi(%"class.fxcrt::ByteString"* sret %0, i32 %8) #7
  br label %11

9:                                                ; preds = %2
  %10 = tail call float @_ZNK9FX_Number8GetFloatEv(%class.FX_Number* %3) #7
  tail call void @_ZN5fxcrt10ByteString11FormatFloatEf(%"class.fxcrt::ByteString"* sret %0, float %10) #7
  br label %11

11:                                               ; preds = %9, %7
  ret void
}

declare void @_ZN5fxcrt10ByteString13FormatIntegerEi(%"class.fxcrt::ByteString"* sret, i32) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteString11FormatFloatEf(%"class.fxcrt::ByteString"* sret, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11CPDF_Number7WriteToEP17IFX_ArchiveStreamPK14CPDF_Encryptor(%class.CPDF_Number*, %class.IFX_ArchiveStream*, %class.CPDF_Encryptor* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = getelementptr inbounds %class.IFX_ArchiveStream, %class.IFX_ArchiveStream* %1, i64 0, i32 0
  %8 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 1, i64* %9, align 8
  %10 = bitcast %class.IFX_ArchiveStream* %1 to i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)***
  %11 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %11, i64 1
  %13 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %12, align 8
  %14 = call zeroext i1 %13(%class.IFX_WriteStream* %7, %"class.fxcrt::StringViewTemplate"* nonnull %4) #7
  br i1 %14, label %15, label %42

15:                                               ; preds = %3
  %16 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = getelementptr inbounds %class.CPDF_Number, %class.CPDF_Number* %0, i64 0, i32 1
  %18 = getelementptr inbounds %class.FX_Number, %class.FX_Number* %17, i64 0, i32 0
  %19 = load i8, i8* %18, align 4, !range !2, !noalias !12
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  %22 = call i32 @_ZNK9FX_Number9GetSignedEv(%class.FX_Number* %17) #7
  call void @_ZN5fxcrt10ByteString13FormatIntegerEi(%"class.fxcrt::ByteString"* nonnull sret %6, i32 %22) #7
  br label %25

23:                                               ; preds = %15
  %24 = call float @_ZNK9FX_Number8GetFloatEv(%class.FX_Number* %17) #7
  call void @_ZN5fxcrt10ByteString11FormatFloatEf(%"class.fxcrt::ByteString"* nonnull sret %6, float %24) #7
  br label %25

25:                                               ; preds = %21, %23
  %26 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %26, align 8, !noalias !15
  %28 = icmp eq %"class.fxcrt::StringDataTemplate"* %27, null
  %29 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %27, i64 0, i32 3, i64 0
  %30 = select i1 %28, i8* null, i8* %29
  br i1 %28, label %34, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %27, i64 0, i32 1
  %33 = load i64, i64* %32, align 8, !noalias !15
  br label %34

34:                                               ; preds = %31, %25
  %35 = phi i64 [ %33, %31 ], [ 0, %25 ]
  %36 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %36, align 8, !alias.scope !15
  %37 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %35, i64* %37, align 8, !alias.scope !15
  %38 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)**, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*** %10, align 8
  %39 = getelementptr inbounds i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %38, i64 1
  %40 = load i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)*, i1 (%class.IFX_WriteStream*, %"class.fxcrt::StringViewTemplate"*)** %39, align 8
  %41 = call zeroext i1 %40(%class.IFX_WriteStream* %7, %"class.fxcrt::StringViewTemplate"* nonnull %5) #7
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  br label %42

42:                                               ; preds = %3, %34
  %43 = phi i1 [ %41, %34 ], [ false, %3 ]
  ret i1 %43
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

declare void @_ZNK11CPDF_Object17CloneDirectObjectEv(%"class.fxcrt::RetainPtr"* sret, %class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Object* @_ZN11CPDF_Object9GetDirectEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Object* @_ZNK11CPDF_Object9GetDirectEv(%class.CPDF_Object*) unnamed_addr #1

declare void @_ZNK11CPDF_Object14GetUnicodeTextEv(%"class.fxcrt::WideString"* sret, %class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZN11CPDF_Object7GetDictEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZNK11CPDF_Object7GetDictEv(%class.CPDF_Object*) unnamed_addr #1

declare zeroext i1 @_ZNK11CPDF_Object7IsArrayEv(%class.CPDF_Object*) unnamed_addr #1

declare zeroext i1 @_ZNK11CPDF_Object9IsBooleanEv(%class.CPDF_Object*) unnamed_addr #1

declare zeroext i1 @_ZNK11CPDF_Object12IsDictionaryEv(%class.CPDF_Object*) unnamed_addr #1

declare zeroext i1 @_ZNK11CPDF_Object6IsNameEv(%class.CPDF_Object*) unnamed_addr #1

declare zeroext i1 @_ZNK11CPDF_Object11IsReferenceEv(%class.CPDF_Object*) unnamed_addr #1

declare zeroext i1 @_ZNK11CPDF_Object8IsStreamEv(%class.CPDF_Object*) unnamed_addr #1

declare zeroext i1 @_ZNK11CPDF_Object8IsStringEv(%class.CPDF_Object*) unnamed_addr #1

declare zeroext i1 @_ZNK11CPDF_Object6IsNullEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Array* @_ZN11CPDF_Object7AsArrayEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Array* @_ZNK11CPDF_Object7AsArrayEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Boolean* @_ZN11CPDF_Object9AsBooleanEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Boolean* @_ZNK11CPDF_Object9AsBooleanEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZN11CPDF_Object12AsDictionaryEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZNK11CPDF_Object12AsDictionaryEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Name* @_ZN11CPDF_Object6AsNameEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Name* @_ZNK11CPDF_Object6AsNameEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Reference* @_ZN11CPDF_Object11AsReferenceEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Reference* @_ZNK11CPDF_Object11AsReferenceEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Stream* @_ZN11CPDF_Object8AsStreamEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_Stream* @_ZNK11CPDF_Object8AsStreamEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_String* @_ZN11CPDF_Object8AsStringEv(%class.CPDF_Object*) unnamed_addr #1

declare %class.CPDF_String* @_ZNK11CPDF_Object8AsStringEv(%class.CPDF_Object*) unnamed_addr #1

declare void @_ZNK11CPDF_Object14CloneNonCyclicEbPNSt3__13setIPKS_NS0_4lessIS3_EENS0_9allocatorIS3_EEEE(%"class.fxcrt::RetainPtr"* sret, %class.CPDF_Object*, i1 zeroext, %"class.std::__1::set"*) unnamed_addr #1

declare void @_ZNK11CPDF_Object13MakeReferenceEP25CPDF_IndirectObjectHolder(%"class.fxcrt::RetainPtr"* sret, %class.CPDF_Object*, %class.CPDF_IndirectObjectHolder*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6pdfium10MakeRetainI11CPDF_NumberJiEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!5 = distinct !{!5, !"_ZN6pdfium10MakeRetainI11CPDF_NumberJiEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6pdfium10MakeRetainI11CPDF_NumberJfEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN6pdfium10MakeRetainI11CPDF_NumberJfEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK11CPDF_Number9GetStringEv: argument 0"}
!14 = distinct !{!14, !"_ZNK11CPDF_Number9GetStringEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
