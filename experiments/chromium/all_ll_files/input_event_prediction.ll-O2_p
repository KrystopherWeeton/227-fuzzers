; ModuleID = '../../third_party/blink/renderer/platform/widget/input/input_event_prediction.cc'
source_filename = "../../third_party/blink/renderer/platform/widget/input/input_event_prediction.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.blink::InputEventPrediction" = type { %"class.std::__1::unordered_map", %"class.std::__1::unique_ptr.14", i32, i8, %"class.base::TimeTicks" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.ui::InputPredictor"* }
%"class.ui::InputPredictor" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::WebCoalescedInputEvent" = type { %"class.std::__1::unique_ptr.23", %"class.std::__1::vector", %"class.std::__1::vector", %"class.ui::LatencyInfo" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::WebInputEvent"* }
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.23"*, %"class.std::__1::unique_ptr.23"*, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::unique_ptr.23"* }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.34" }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair"* }
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.57" = type { i8 }
%"struct.ui::InputPredictor::InputData" = type { %"class.gfx::PointF", %"class.base::TimeTicks" }
%"struct.std::__1::pair.42" = type { i32, %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.41" }
%"struct.std::__1::pair.41" = type { i32, %"class.std::__1::unique_ptr.14" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE14__erase_uniqueIiEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJNS_4pairIiS7_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

@_ZN5blink8features22kResamplingInputEventsE = external global %"struct.base::Feature", align 8
@.str = private unnamed_addr constant [10 x i8] c"predictor\00", align 1
@_ZN5blink8features25kInputPredictorTypeChoiceE = external global %"struct.base::Feature", align 8
@.str.1 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN5blink20InputEventPredictionC1Eb = hidden unnamed_addr alias void (%"class.blink::InputEventPrediction"*, i1), void (%"class.blink::InputEventPrediction"*, i1)* @_ZN5blink20InputEventPredictionC2Eb
@_ZN5blink20InputEventPredictionD1Ev = hidden unnamed_addr alias void (%"class.blink::InputEventPrediction"*), void (%"class.blink::InputEventPrediction"*)* @_ZN5blink20InputEventPredictionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InputEventPredictionC2Eb(%"class.blink::InputEventPrediction"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = zext i1 %1 to i8
  %7 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 3
  %8 = bitcast %"class.std::__1::__compressed_pair.11"* %7 to i32*
  %9 = bitcast %"class.blink::InputEventPrediction"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.14"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 3
  store i8 %6, i8* %12, align 4
  %13 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  br i1 %1, label %18, label %25

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #9
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 9, i8* %21, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9, i1 false) #9
  %22 = getelementptr inbounds i8, i8* %19, i64 9
  store i8 0, i8* %22, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features22kResamplingInputEventsE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  %23 = load i8, i8* %21, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %35, label %38

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 9, i8* %28, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9, i1 false) #9
  %29 = getelementptr inbounds i8, i8* %26, i64 9
  store i8 0, i8* %29, align 1
  call void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features25kInputPredictorTypeChoiceE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #9
  %30 = load i8, i8* %28, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %34) #10
  br label %38

35:                                               ; preds = %18
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %35, %18, %25, %32
  %39 = phi i8* [ %26, %32 ], [ %26, %25 ], [ %19, %18 ], [ %19, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #9
  %40 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = load i64, i64* %16, align 8
  %45 = zext i8 %42 to i64
  %46 = select i1 %43, i64 %44, i64 %45
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %38
  %49 = call i32 @_ZN5blink16PredictorFactory24GetPredictorTypeFromNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #9
  br label %50

50:                                               ; preds = %38, %48
  %51 = phi i32 [ %49, %48 ], [ 1, %38 ]
  %52 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 2
  store i32 %51, i32* %52, align 8
  %53 = call %"class.ui::InputPredictor"* @_ZN5blink16PredictorFactory12GetPredictorENS_16input_prediction13PredictorTypeE(i32 %51) #9
  %54 = ptrtoint %"class.ui::InputPredictor"* %53 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %10, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %55, align 8
  store i64 %54, i64* %11, align 8
  %57 = icmp eq %"class.ui::InputPredictor"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.ui::InputPredictor"* %56 to void (%"class.ui::InputPredictor"*)***
  %60 = load void (%"class.ui::InputPredictor"*)**, void (%"class.ui::InputPredictor"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %60, i64 1
  %62 = load void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %61, align 8
  call void %62(%"class.ui::InputPredictor"* nonnull %56) #9
  br label %63

63:                                               ; preds = %58, %50
  %64 = load i8, i8* %41, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %63
  %67 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %67) #10
  br label %68

68:                                               ; preds = %63, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base32GetFieldTrialParamValueByFeatureERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN5blink16PredictorFactory24GetPredictorTypeFromNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ui::InputPredictor"* @_ZNK5blink20InputEventPrediction15CreatePredictorEv(%"class.blink::InputEventPrediction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = tail call %"class.ui::InputPredictor"* @_ZN5blink16PredictorFactory12GetPredictorENS_16input_prediction13PredictorTypeE(i32 %3) #9
  ret %"class.ui::InputPredictor"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InputEventPredictionD2Ev(%"class.blink::InputEventPrediction"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %2, align 8
  store %"class.ui::InputPredictor"* null, %"class.ui::InputPredictor"** %2, align 8
  %4 = icmp eq %"class.ui::InputPredictor"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.ui::InputPredictor"* %3 to void (%"class.ui::InputPredictor"*)***
  %7 = load void (%"class.ui::InputPredictor"*)**, void (%"class.ui::InputPredictor"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %7, i64 1
  %9 = load void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %8, align 8
  tail call void %9(%"class.ui::InputPredictor"* nonnull %3) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base"* %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %10, %27
  %15 = phi %"struct.std::__1::__hash_node_base"* [ %17, %27 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %15, i64 3
  %19 = bitcast %"struct.std::__1::__hash_node_base"* %18 to %"class.ui::InputPredictor"**
  %20 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %19, align 8
  store %"class.ui::InputPredictor"* null, %"class.ui::InputPredictor"** %19, align 8
  %21 = icmp eq %"class.ui::InputPredictor"* %20, null
  br i1 %21, label %27, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.ui::InputPredictor"* %20 to void (%"class.ui::InputPredictor"*)***
  %24 = load void (%"class.ui::InputPredictor"*)**, void (%"class.ui::InputPredictor"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %24, i64 1
  %26 = load void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %25, align 8
  tail call void %26(%"class.ui::InputPredictor"* nonnull %20) #9
  br label %27

27:                                               ; preds = %22, %14
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %15 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %17, null
  br i1 %29, label %30, label %14

30:                                               ; preds = %27, %10
  %31 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %31, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast %"struct.std::__1::__hash_node_base"** %32 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %30, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InputEventPrediction12HandleEventsERNS_22WebCoalescedInputEventEN4base9TimeTicksE(%"class.blink::InputEventPrediction"*, %"class.blink::WebCoalescedInputEvent"* dereferenceable(120), i64) local_unnamed_addr #0 align 2 {
  %4 = tail call dereferenceable(40) %"class.blink::WebInputEvent"* @_ZNK5blink22WebCoalescedInputEvent5EventEv(%"class.blink::WebCoalescedInputEvent"* %1) #9
  %5 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %137 [
    i32 2, label %7
    i32 29, label %7
    i32 35, label %7
    i32 32, label %73
    i32 38, label %73
  ]

7:                                                ; preds = %3, %3, %3
  %8 = tail call i64 @_ZNK5blink22WebCoalescedInputEvent18CoalescedEventSizeEv(%"class.blink::WebCoalescedInputEvent"* %1) #9
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 4, i32 0, i32 0
  br label %16

12:                                               ; preds = %65, %7
  %13 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %72, label %70

16:                                               ; preds = %65, %10
  %17 = phi i64 [ 0, %10 ], [ %68, %65 ]
  %18 = tail call dereferenceable(40) %"class.blink::WebInputEvent"* @_ZNK5blink22WebCoalescedInputEvent14CoalescedEventEm(%"class.blink::WebCoalescedInputEvent"* %1, i64 %17) #9
  %19 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %18, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, -28
  %22 = icmp ult i32 %21, 5
  br i1 %22, label %23, label %46

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::WebInputEvent"* %18 to %"class.blink::WebTouchEvent"*
  %25 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %18, i64 1
  %26 = bitcast %"class.blink::WebInputEvent"* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %65, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %18, i64 0, i32 3, i32 0, i32 0
  br label %31

31:                                               ; preds = %41, %29
  %32 = phi i32 [ %27, %29 ], [ %42, %41 ]
  %33 = phi i64 [ 0, %29 ], [ %43, %41 ]
  %34 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %24, i64 0, i32 2, i64 %33, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 3
  br i1 %36, label %37, label %41

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %24, i64 0, i32 2, i64 %33, i32 0
  %39 = load i64, i64* %30, align 8
  tail call void @_ZN5blink20InputEventPrediction19UpdateSinglePointerERKNS_20WebPointerPropertiesEN4base9TimeTicksE(%"class.blink::InputEventPrediction"* %0, %"class.blink::WebPointerProperties"* dereferenceable(60) %38, i64 %39) #9
  %40 = load i32, i32* %26, align 8
  br label %41

41:                                               ; preds = %37, %31
  %42 = phi i32 [ %32, %31 ], [ %40, %37 ]
  %43 = add nuw nsw i64 %33, 1
  %44 = zext i32 %42 to i64
  %45 = icmp ult i64 %43, %44
  br i1 %45, label %31, label %65

46:                                               ; preds = %16
  %47 = icmp ult i32 %20, 6
  br i1 %47, label %48, label %53

48:                                               ; preds = %46
  %49 = icmp eq %"class.blink::WebInputEvent"* %18, null
  %50 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %18, i64 1
  %51 = bitcast %"class.blink::WebInputEvent"* %50 to %"class.blink::WebPointerProperties"*
  %52 = select i1 %49, %"class.blink::WebPointerProperties"* null, %"class.blink::WebPointerProperties"* %51
  br label %61

53:                                               ; preds = %46
  %54 = add i32 %20, -33
  %55 = icmp ult i32 %54, 6
  br i1 %55, label %56, label %61

56:                                               ; preds = %53
  %57 = icmp eq %"class.blink::WebInputEvent"* %18, null
  %58 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %18, i64 1
  %59 = bitcast %"class.blink::WebInputEvent"* %58 to %"class.blink::WebPointerProperties"*
  %60 = select i1 %57, %"class.blink::WebPointerProperties"* null, %"class.blink::WebPointerProperties"* %59
  br label %61

61:                                               ; preds = %56, %53, %48
  %62 = phi %"class.blink::WebPointerProperties"* [ %52, %48 ], [ %60, %56 ], [ null, %53 ]
  %63 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %18, i64 0, i32 3, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  tail call void @_ZN5blink20InputEventPrediction19UpdateSinglePointerERKNS_20WebPointerPropertiesEN4base9TimeTicksE(%"class.blink::InputEventPrediction"* %0, %"class.blink::WebPointerProperties"* dereferenceable(60) %62, i64 %64) #9
  br label %65

65:                                               ; preds = %41, %23, %61
  %66 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %18, i64 0, i32 3, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  store i64 %67, i64* %11, align 8
  %68 = add nuw i64 %17, 1
  %69 = icmp eq i64 %68, %8
  br i1 %69, label %12, label %16

70:                                               ; preds = %12
  %71 = tail call %"class.blink::WebInputEvent"* @_ZN5blink22WebCoalescedInputEvent12EventPointerEv(%"class.blink::WebCoalescedInputEvent"* %1) #9
  tail call void @_ZN5blink20InputEventPrediction15ApplyResamplingEN4base9TimeTicksEPNS_13WebInputEventE(%"class.blink::InputEventPrediction"* %0, i64 %2, %"class.blink::WebInputEvent"* %71)
  br label %72

72:                                               ; preds = %12, %70
  tail call void @_ZN5blink20InputEventPrediction18AddPredictedEventsERNS_22WebCoalescedInputEventE(%"class.blink::InputEventPrediction"* %0, %"class.blink::WebCoalescedInputEvent"* dereferenceable(120) %1)
  br label %139

73:                                               ; preds = %3, %3
  %74 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %139, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base"* %79, null
  br i1 %80, label %97, label %81

81:                                               ; preds = %77, %94
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %84, %94 ], [ %79, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %82, i64 3
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %85 to %"class.ui::InputPredictor"**
  %87 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %86, align 8
  store %"class.ui::InputPredictor"* null, %"class.ui::InputPredictor"** %86, align 8
  %88 = icmp eq %"class.ui::InputPredictor"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %81
  %90 = bitcast %"class.ui::InputPredictor"* %87 to void (%"class.ui::InputPredictor"*)***
  %91 = load void (%"class.ui::InputPredictor"*)**, void (%"class.ui::InputPredictor"*)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %91, i64 1
  %93 = load void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %92, align 8
  tail call void %93(%"class.ui::InputPredictor"* nonnull %87) #9
  br label %94

94:                                               ; preds = %89, %81
  %95 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i8*
  tail call void @_ZdlPv(i8* %95) #10
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %84, null
  br i1 %96, label %97, label %81

97:                                               ; preds = %94, %77
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %78, align 8
  %98 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %119, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = add i64 %99, -1
  %104 = and i64 %99, 3
  %105 = icmp ult i64 %103, 3
  br i1 %105, label %108, label %106

106:                                              ; preds = %101
  %107 = sub i64 %99, %104
  br label %120

108:                                              ; preds = %120, %101
  %109 = phi i64 [ 0, %101 ], [ %134, %120 ]
  %110 = icmp eq i64 %104, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %108, %111
  %112 = phi i64 [ %116, %111 ], [ %109, %108 ]
  %113 = phi i64 [ %117, %111 ], [ %104, %108 ]
  %114 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %102, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, i64 %112
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %115, align 8
  %116 = add nuw i64 %112, 1
  %117 = add i64 %113, -1
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %111, !llvm.loop !3

119:                                              ; preds = %108, %111, %97
  store i64 0, i64* %74, align 8
  br label %139

120:                                              ; preds = %120, %106
  %121 = phi i64 [ 0, %106 ], [ %134, %120 ]
  %122 = phi i64 [ %107, %106 ], [ %135, %120 ]
  %123 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %102, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %123, i64 %121
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %124, align 8
  %125 = or i64 %121, 1
  %126 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %102, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %126, i64 %125
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %127, align 8
  %128 = or i64 %121, 2
  %129 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %102, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %129, i64 %128
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %130, align 8
  %131 = or i64 %121, 3
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %102, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %133, align 8
  %134 = add nuw i64 %121, 4
  %135 = add i64 %122, -4
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %108, label %120

137:                                              ; preds = %3
  %138 = tail call dereferenceable(40) %"class.blink::WebInputEvent"* @_ZNK5blink22WebCoalescedInputEvent5EventEv(%"class.blink::WebCoalescedInputEvent"* %1) #9
  tail call void @_ZN5blink20InputEventPrediction14ResetPredictorERKNS_13WebInputEventE(%"class.blink::InputEventPrediction"* %0, %"class.blink::WebInputEvent"* dereferenceable(40) %138)
  br label %139

139:                                              ; preds = %119, %73, %137, %72
  ret void
}

declare dereferenceable(40) %"class.blink::WebInputEvent"* @_ZNK5blink22WebCoalescedInputEvent5EventEv(%"class.blink::WebCoalescedInputEvent"*) local_unnamed_addr #2

declare i64 @_ZNK5blink22WebCoalescedInputEvent18CoalescedEventSizeEv(%"class.blink::WebCoalescedInputEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InputEventPrediction16UpdatePredictionERKNS_13WebInputEventE(%"class.blink::InputEventPrediction"*, %"class.blink::WebInputEvent"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -28
  %6 = icmp ult i32 %5, 5
  br i1 %6, label %7, label %30

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::WebInputEvent"* %1 to %"class.blink::WebTouchEvent"*
  %9 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1
  %10 = bitcast %"class.blink::WebInputEvent"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 3, i32 0, i32 0
  br label %15

15:                                               ; preds = %13, %25
  %16 = phi i32 [ %11, %13 ], [ %26, %25 ]
  %17 = phi i64 [ 0, %13 ], [ %27, %25 ]
  %18 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %8, i64 0, i32 2, i64 %17, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 3
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %8, i64 0, i32 2, i64 %17, i32 0
  %23 = load i64, i64* %14, align 8
  tail call void @_ZN5blink20InputEventPrediction19UpdateSinglePointerERKNS_20WebPointerPropertiesEN4base9TimeTicksE(%"class.blink::InputEventPrediction"* %0, %"class.blink::WebPointerProperties"* dereferenceable(60) %22, i64 %23)
  %24 = load i32, i32* %10, align 8
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i32 [ %16, %15 ], [ %24, %21 ]
  %27 = add nuw nsw i64 %17, 1
  %28 = zext i32 %26 to i64
  %29 = icmp ult i64 %27, %28
  br i1 %29, label %15, label %49

30:                                               ; preds = %2
  %31 = icmp ult i32 %4, 6
  br i1 %31, label %32, label %37

32:                                               ; preds = %30
  %33 = icmp eq %"class.blink::WebInputEvent"* %1, null
  %34 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1
  %35 = bitcast %"class.blink::WebInputEvent"* %34 to %"class.blink::WebPointerProperties"*
  %36 = select i1 %33, %"class.blink::WebPointerProperties"* null, %"class.blink::WebPointerProperties"* %35
  br label %45

37:                                               ; preds = %30
  %38 = add i32 %4, -33
  %39 = icmp ult i32 %38, 6
  br i1 %39, label %40, label %45

40:                                               ; preds = %37
  %41 = icmp eq %"class.blink::WebInputEvent"* %1, null
  %42 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1
  %43 = bitcast %"class.blink::WebInputEvent"* %42 to %"class.blink::WebPointerProperties"*
  %44 = select i1 %41, %"class.blink::WebPointerProperties"* null, %"class.blink::WebPointerProperties"* %43
  br label %45

45:                                               ; preds = %32, %37, %40
  %46 = phi %"class.blink::WebPointerProperties"* [ %36, %32 ], [ %44, %40 ], [ null, %37 ]
  %47 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  tail call void @_ZN5blink20InputEventPrediction19UpdateSinglePointerERKNS_20WebPointerPropertiesEN4base9TimeTicksE(%"class.blink::InputEventPrediction"* %0, %"class.blink::WebPointerProperties"* dereferenceable(60) %46, i64 %48)
  br label %49

49:                                               ; preds = %25, %7, %45
  %50 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 3, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %51, i64* %52, align 8
  ret void
}

declare dereferenceable(40) %"class.blink::WebInputEvent"* @_ZNK5blink22WebCoalescedInputEvent14CoalescedEventEm(%"class.blink::WebCoalescedInputEvent"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InputEventPrediction15ApplyResamplingEN4base9TimeTicksEPNS_13WebInputEventE(%"class.blink::InputEventPrediction"* nocapture readonly, i64, %"class.blink::WebInputEvent"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %2, i64 0, i32 3, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = sub nsw i64 %1, %7
  %9 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %2, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 29
  br i1 %11, label %12, label %124

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::WebInputEvent"* %2 to %"class.blink::WebTouchEvent"*
  %14 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %2, i64 1
  %15 = bitcast %"class.blink::WebInputEvent"* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %232, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %23

23:                                               ; preds = %18, %118
  %24 = phi i64 [ 0, %18 ], [ %120, %118 ]
  %25 = phi i64 [ %8, %18 ], [ %119, %118 ]
  %26 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %13, i64 0, i32 2, i64 %24, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 3
  br i1 %28, label %29, label %118

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %13, i64 0, i32 2, i64 %24, i32 0
  %31 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %13, i64 0, i32 2, i64 %24, i32 0, i32 7
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %90, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %30, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = load i64, i64* %19, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %118, label %40

40:                                               ; preds = %34
  %41 = call i64 @llvm.ctpop.i64(i64 %38) #9, !range !5
  %42 = icmp ugt i64 %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = add i64 %38, -1
  %45 = and i64 %44, %37
  br label %50

46:                                               ; preds = %40
  %47 = icmp ugt i64 %38, %37
  br i1 %47, label %50, label %48

48:                                               ; preds = %46
  %49 = urem i64 %37, %38
  br label %50

50:                                               ; preds = %48, %46, %43
  %51 = phi i64 [ %45, %43 ], [ %49, %48 ], [ %37, %46 ]
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %118, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %118, label %60

60:                                               ; preds = %56
  %61 = add i64 %38, -1
  br label %62

62:                                               ; preds = %83, %60
  %63 = phi %"struct.std::__1::__hash_node_base"* [ %58, %60 ], [ %85, %83 ]
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 1
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, %37
  br i1 %67, label %78, label %68

68:                                               ; preds = %62
  br i1 %42, label %71, label %69

69:                                               ; preds = %68
  %70 = and i64 %66, %61
  br label %75

71:                                               ; preds = %68
  %72 = icmp ult i64 %66, %38
  br i1 %72, label %75, label %73

73:                                               ; preds = %71
  %74 = urem i64 %66, %38
  br label %75

75:                                               ; preds = %73, %71, %69
  %76 = phi i64 [ %70, %69 ], [ %74, %73 ], [ %66, %71 ]
  %77 = icmp eq i64 %76, %51
  br i1 %77, label %83, label %118

78:                                               ; preds = %62
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 2
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, %36
  br i1 %82, label %87, label %83

83:                                               ; preds = %78, %75
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 0, i32 0
  %85 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base"* %85, null
  br i1 %86, label %118, label %62

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %63, i64 3
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %88 to %"class.ui::InputPredictor"**
  br label %90

90:                                               ; preds = %29, %87
  %91 = phi %"class.ui::InputPredictor"** [ %89, %87 ], [ %21, %29 ]
  %92 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %91, align 8
  %93 = icmp eq %"class.ui::InputPredictor"* %92, null
  br i1 %93, label %118, label %94

94:                                               ; preds = %90
  %95 = icmp slt i64 %25, 20000
  %96 = select i1 %95, i64 %25, i64 20000
  %97 = load i64, i64* %6, align 8
  %98 = add i64 %96, -9223372036854775807
  %99 = icmp ult i64 %98, 2
  br i1 %99, label %107, label %100

100:                                              ; preds = %94
  %101 = icmp slt i64 %96, 0
  %102 = select i1 %101, i64 -9223372036854775808, i64 9223372036854775807
  %103 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %97, i64 %96) #9
  %104 = extractvalue { i64, i1 } %103, 1
  %105 = extractvalue { i64, i1 } %103, 0
  %106 = select i1 %104, i64 %102, i64 %105, !prof !6
  br label %114

107:                                              ; preds = %94
  %108 = add i64 %97, -9223372036854775807
  %109 = icmp ugt i64 %108, 1
  %110 = icmp eq i64 %97, %96
  %111 = or i1 %110, %109
  br i1 %111, label %114, label %112

112:                                              ; preds = %107
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #9
  %113 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %114

114:                                              ; preds = %100, %107, %112
  %115 = phi i64 [ %106, %100 ], [ %25, %107 ], [ %25, %112 ]
  %116 = call zeroext i1 @_ZN5blink20InputEventPrediction20GetPointerPredictionEN4base9TimeTicksEPNS_20WebPointerPropertiesE(%"class.blink::InputEventPrediction"* %0, i64 %115, %"class.blink::WebPointerProperties"* %30)
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  store i64 %115, i64* %6, align 8
  br label %118

118:                                              ; preds = %83, %75, %56, %34, %50, %117, %114, %90, %23
  %119 = phi i64 [ %25, %56 ], [ %25, %34 ], [ %25, %50 ], [ %96, %117 ], [ %96, %114 ], [ %25, %90 ], [ %25, %23 ], [ %25, %75 ], [ %25, %83 ]
  %120 = add nuw nsw i64 %24, 1
  %121 = load i32, i32* %15, align 8
  %122 = zext i32 %121 to i64
  %123 = icmp ult i64 %120, %122
  br i1 %123, label %23, label %232

124:                                              ; preds = %3
  %125 = icmp ult i32 %10, 6
  br i1 %125, label %126, label %131

126:                                              ; preds = %124
  %127 = icmp eq %"class.blink::WebInputEvent"* %2, null
  %128 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %2, i64 1
  %129 = bitcast %"class.blink::WebInputEvent"* %128 to %"class.blink::WebPointerProperties"*
  %130 = select i1 %127, %"class.blink::WebPointerProperties"* null, %"class.blink::WebPointerProperties"* %129
  br label %139

131:                                              ; preds = %124
  %132 = add i32 %10, -33
  %133 = icmp ult i32 %132, 6
  br i1 %133, label %134, label %139

134:                                              ; preds = %131
  %135 = icmp eq %"class.blink::WebInputEvent"* %2, null
  %136 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %2, i64 1
  %137 = bitcast %"class.blink::WebInputEvent"* %136 to %"class.blink::WebPointerProperties"*
  %138 = select i1 %135, %"class.blink::WebPointerProperties"* null, %"class.blink::WebPointerProperties"* %137
  br label %139

139:                                              ; preds = %126, %131, %134
  %140 = phi %"class.blink::WebPointerProperties"* [ %130, %126 ], [ %138, %134 ], [ null, %131 ]
  %141 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %140, i64 0, i32 7
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %144, label %146

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %204

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %232, label %153

153:                                              ; preds = %146
  %154 = tail call i64 @llvm.ctpop.i64(i64 %151) #9, !range !5
  %155 = icmp ugt i64 %154, 1
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = add i64 %151, -1
  %158 = and i64 %157, %149
  br label %163

159:                                              ; preds = %153
  %160 = icmp ugt i64 %151, %149
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  %162 = urem i64 %149, %151
  br label %163

163:                                              ; preds = %161, %159, %156
  %164 = phi i64 [ %158, %156 ], [ %162, %161 ], [ %149, %159 ]
  %165 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %165, align 8
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %166, i64 %164
  %168 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %167, align 8
  %169 = icmp eq %"struct.std::__1::__hash_node_base"* %168, null
  br i1 %169, label %232, label %170

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %168, i64 0, i32 0
  %172 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, align 8
  %173 = icmp eq %"struct.std::__1::__hash_node_base"* %172, null
  br i1 %173, label %232, label %174

174:                                              ; preds = %170
  %175 = add i64 %151, -1
  br label %176

176:                                              ; preds = %197, %174
  %177 = phi %"struct.std::__1::__hash_node_base"* [ %172, %174 ], [ %199, %197 ]
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 1
  %179 = bitcast %"struct.std::__1::__hash_node_base"* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = icmp eq i64 %180, %149
  br i1 %181, label %192, label %182

182:                                              ; preds = %176
  br i1 %155, label %185, label %183

183:                                              ; preds = %182
  %184 = and i64 %180, %175
  br label %189

185:                                              ; preds = %182
  %186 = icmp ult i64 %180, %151
  br i1 %186, label %189, label %187

187:                                              ; preds = %185
  %188 = urem i64 %180, %151
  br label %189

189:                                              ; preds = %187, %185, %183
  %190 = phi i64 [ %184, %183 ], [ %188, %187 ], [ %180, %185 ]
  %191 = icmp eq i64 %190, %164
  br i1 %191, label %197, label %232

192:                                              ; preds = %176
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 2
  %194 = bitcast %"struct.std::__1::__hash_node_base"* %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, %148
  br i1 %196, label %201, label %197

197:                                              ; preds = %192, %189
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 0, i32 0
  %199 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %198, align 8
  %200 = icmp eq %"struct.std::__1::__hash_node_base"* %199, null
  br i1 %200, label %232, label %176

201:                                              ; preds = %192
  %202 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 3
  %203 = bitcast %"struct.std::__1::__hash_node_base"* %202 to %"class.ui::InputPredictor"**
  br label %204

204:                                              ; preds = %144, %201
  %205 = phi %"class.ui::InputPredictor"** [ %145, %144 ], [ %203, %201 ]
  %206 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %205, align 8
  %207 = icmp eq %"class.ui::InputPredictor"* %206, null
  br i1 %207, label %232, label %208

208:                                              ; preds = %204
  %209 = icmp slt i64 %8, 20000
  %210 = select i1 %209, i64 %8, i64 20000
  %211 = add i64 %210, -9223372036854775807
  %212 = icmp ult i64 %211, 2
  br i1 %212, label %220, label %213

213:                                              ; preds = %208
  %214 = icmp slt i64 %210, 0
  %215 = select i1 %214, i64 -9223372036854775808, i64 9223372036854775807
  %216 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %7, i64 %210) #9
  %217 = extractvalue { i64, i1 } %216, 1
  %218 = extractvalue { i64, i1 } %216, 0
  %219 = select i1 %217, i64 %215, i64 %218, !prof !6
  br label %228

220:                                              ; preds = %208
  %221 = add i64 %7, -9223372036854775807
  %222 = icmp ugt i64 %221, 1
  %223 = icmp eq i64 %7, %210
  %224 = or i1 %222, %223
  br i1 %224, label %228, label %225

225:                                              ; preds = %220
  %226 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %226) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #9
  %227 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %226) #9
  br label %228

228:                                              ; preds = %213, %220, %225
  %229 = phi i64 [ %219, %213 ], [ %8, %220 ], [ %8, %225 ]
  %230 = call zeroext i1 @_ZN5blink20InputEventPrediction20GetPointerPredictionEN4base9TimeTicksEPNS_20WebPointerPropertiesE(%"class.blink::InputEventPrediction"* %0, i64 %229, %"class.blink::WebPointerProperties"* %140)
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  store i64 %229, i64* %6, align 8
  br label %232

232:                                              ; preds = %197, %189, %118, %12, %170, %146, %163, %231, %228, %204
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.blink::WebInputEvent"* @_ZN5blink22WebCoalescedInputEvent12EventPointerEv(%"class.blink::WebCoalescedInputEvent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InputEventPrediction18AddPredictedEventsERNS_22WebCoalescedInputEventE(%"class.blink::InputEventPrediction"* nocapture readonly, %"class.blink::WebCoalescedInputEvent"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %7, i64 25000) #9
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  %11 = select i1 %9, i64 9223372036854775807, i64 %10, !prof !6
  %12 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = bitcast %"class.logging::CheckError"* %5 to i8*
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %18

18:                                               ; preds = %2, %322
  %19 = phi i64 [ %7, %2 ], [ %315, %322 ]
  %20 = call dereferenceable(40) %"class.blink::WebInputEvent"* @_ZNK5blink22WebCoalescedInputEvent5EventEv(%"class.blink::WebCoalescedInputEvent"* %1) #9
  %21 = bitcast %"class.blink::WebInputEvent"* %20 to %"class.blink::WebInputEvent"* (%"class.blink::WebInputEvent"*)***
  %22 = load %"class.blink::WebInputEvent"* (%"class.blink::WebInputEvent"*)**, %"class.blink::WebInputEvent"* (%"class.blink::WebInputEvent"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::WebInputEvent"* (%"class.blink::WebInputEvent"*)*, %"class.blink::WebInputEvent"* (%"class.blink::WebInputEvent"*)** %22, i64 2
  %24 = load %"class.blink::WebInputEvent"* (%"class.blink::WebInputEvent"*)*, %"class.blink::WebInputEvent"* (%"class.blink::WebInputEvent"*)** %23, align 8
  %25 = call %"class.blink::WebInputEvent"* %24(%"class.blink::WebInputEvent"* %20) #9
  %26 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %25, i64 0, i32 4
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 29
  br i1 %28, label %29, label %187

29:                                               ; preds = %18
  %30 = bitcast %"class.blink::WebInputEvent"* %25 to %"class.blink::WebTouchEvent"*
  %31 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %25, i64 1
  %32 = bitcast %"class.blink::WebInputEvent"* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %66

35:                                               ; preds = %163
  %36 = icmp eq i32 %166, 0
  br i1 %36, label %37, label %40, !prof !7

37:                                               ; preds = %35
  %38 = icmp sgt i64 %164, -1
  br i1 %38, label %39, label %52

39:                                               ; preds = %29, %37
  br label %52

40:                                               ; preds = %35
  %41 = zext i32 %166 to i64
  %42 = sdiv i64 %164, %41
  %43 = add i64 %42, -9223372036854775807
  %44 = icmp ult i64 %43, 2
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = icmp slt i64 %42, 0
  %47 = select i1 %46, i64 -9223372036854775808, i64 9223372036854775807
  %48 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %19, i64 %42) #9
  %49 = extractvalue { i64, i1 } %48, 1
  %50 = extractvalue { i64, i1 } %48, 0
  %51 = select i1 %49, i64 %47, i64 %50, !prof !6
  br label %60

52:                                               ; preds = %37, %39, %40
  %53 = phi i64 [ %42, %40 ], [ -9223372036854775808, %37 ], [ 9223372036854775807, %39 ]
  %54 = add i64 %19, -9223372036854775807
  %55 = icmp ugt i64 %54, 1
  %56 = icmp eq i64 %19, %53
  %57 = or i1 %55, %56
  br i1 %57, label %60, label %58

58:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #9
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %60

60:                                               ; preds = %45, %52, %58
  %61 = phi i64 [ %51, %45 ], [ %53, %52 ], [ %53, %58 ]
  %62 = icmp sgt i64 %61, %11
  br i1 %62, label %313, label %63

63:                                               ; preds = %60
  %64 = load i32, i32* %32, align 8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %313, label %169

66:                                               ; preds = %29, %163
  %67 = phi i64 [ %165, %163 ], [ 0, %29 ]
  %68 = phi i64 [ %164, %163 ], [ 0, %29 ]
  %69 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %30, i64 0, i32 2, i64 %67, i32 0, i32 7
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %128, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %30, i64 0, i32 2, i64 %67, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = load i64, i64* %12, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %138, label %78

78:                                               ; preds = %72
  %79 = call i64 @llvm.ctpop.i64(i64 %76) #9, !range !5
  %80 = icmp ugt i64 %79, 1
  br i1 %80, label %84, label %81

81:                                               ; preds = %78
  %82 = add i64 %76, -1
  %83 = and i64 %82, %75
  br label %88

84:                                               ; preds = %78
  %85 = icmp ugt i64 %76, %75
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = urem i64 %75, %76
  br label %88

88:                                               ; preds = %86, %84, %81
  %89 = phi i64 [ %83, %81 ], [ %87, %86 ], [ %75, %84 ]
  %90 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %13, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %90, i64 %89
  %92 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %91, align 8
  %93 = icmp eq %"struct.std::__1::__hash_node_base"* %92, null
  br i1 %93, label %138, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %92, i64 0, i32 0
  %96 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %95, align 8
  %97 = icmp eq %"struct.std::__1::__hash_node_base"* %96, null
  br i1 %97, label %138, label %98

98:                                               ; preds = %94
  %99 = add i64 %76, -1
  br label %100

100:                                              ; preds = %121, %98
  %101 = phi %"struct.std::__1::__hash_node_base"* [ %96, %98 ], [ %123, %121 ]
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %101, i64 1
  %103 = bitcast %"struct.std::__1::__hash_node_base"* %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = icmp eq i64 %104, %75
  br i1 %105, label %116, label %106

106:                                              ; preds = %100
  br i1 %80, label %109, label %107

107:                                              ; preds = %106
  %108 = and i64 %104, %99
  br label %113

109:                                              ; preds = %106
  %110 = icmp ult i64 %104, %76
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %104, %76
  br label %113

113:                                              ; preds = %111, %109, %107
  %114 = phi i64 [ %108, %107 ], [ %112, %111 ], [ %104, %109 ]
  %115 = icmp eq i64 %114, %89
  br i1 %115, label %121, label %138

116:                                              ; preds = %100
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %101, i64 2
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, %74
  br i1 %120, label %125, label %121

121:                                              ; preds = %116, %113
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %101, i64 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %122, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %138, label %100

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %101, i64 3
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to %"class.ui::InputPredictor"**
  br label %128

128:                                              ; preds = %66, %125
  %129 = phi %"class.ui::InputPredictor"** [ %127, %125 ], [ %14, %66 ]
  %130 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %129, align 8
  %131 = icmp eq %"class.ui::InputPredictor"* %130, null
  br i1 %131, label %138, label %132

132:                                              ; preds = %128
  %133 = bitcast %"class.ui::InputPredictor"* %130 to i64 (%"class.ui::InputPredictor"*)***
  %134 = load i64 (%"class.ui::InputPredictor"*)**, i64 (%"class.ui::InputPredictor"*)*** %133, align 8
  %135 = getelementptr inbounds i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %134, i64 7
  %136 = load i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %135, align 8
  %137 = call i64 %136(%"class.ui::InputPredictor"* nonnull %130) #9
  br label %145

138:                                              ; preds = %121, %113, %128, %94, %88, %72
  %139 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %14, align 8
  %140 = bitcast %"class.ui::InputPredictor"* %139 to i64 (%"class.ui::InputPredictor"*)***
  %141 = load i64 (%"class.ui::InputPredictor"*)**, i64 (%"class.ui::InputPredictor"*)*** %140, align 8
  %142 = getelementptr inbounds i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %141, i64 7
  %143 = load i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %142, align 8
  %144 = call i64 %143(%"class.ui::InputPredictor"* %139) #9
  br label %145

145:                                              ; preds = %132, %138
  %146 = phi i64 [ %144, %138 ], [ %137, %132 ]
  %147 = add i64 %146, -9223372036854775807
  %148 = icmp ult i64 %147, 2
  br i1 %148, label %156, label %149

149:                                              ; preds = %145
  %150 = icmp slt i64 %146, 0
  %151 = select i1 %150, i64 -9223372036854775808, i64 9223372036854775807
  %152 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %68, i64 %146) #9
  %153 = extractvalue { i64, i1 } %152, 1
  %154 = extractvalue { i64, i1 } %152, 0
  %155 = select i1 %153, i64 %151, i64 %154, !prof !6
  br label %163

156:                                              ; preds = %145
  %157 = add i64 %68, -9223372036854775807
  %158 = icmp ugt i64 %157, 1
  %159 = icmp eq i64 %68, %146
  %160 = or i1 %158, %159
  br i1 %160, label %163, label %161

161:                                              ; preds = %156
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #9
  %162 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  br label %163

163:                                              ; preds = %149, %156, %161
  %164 = phi i64 [ %155, %149 ], [ %146, %156 ], [ %146, %161 ]
  %165 = add nuw nsw i64 %67, 1
  %166 = load i32, i32* %32, align 8
  %167 = zext i32 %166 to i64
  %168 = icmp ult i64 %165, %167
  br i1 %168, label %66, label %35

169:                                              ; preds = %63, %181
  %170 = phi i32 [ %182, %181 ], [ %64, %63 ]
  %171 = phi i64 [ %184, %181 ], [ 0, %63 ]
  %172 = phi i8 [ %183, %181 ], [ 0, %63 ]
  %173 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %30, i64 0, i32 2, i64 %171, i32 1
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, 3
  br i1 %175, label %176, label %181

176:                                              ; preds = %169
  %177 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %30, i64 0, i32 2, i64 %171, i32 0
  %178 = call zeroext i1 @_ZN5blink20InputEventPrediction20GetPointerPredictionEN4base9TimeTicksEPNS_20WebPointerPropertiesE(%"class.blink::InputEventPrediction"* %0, i64 %61, %"class.blink::WebPointerProperties"* %177)
  %179 = zext i1 %178 to i8
  %180 = load i32, i32* %32, align 8
  br label %181

181:                                              ; preds = %169, %176
  %182 = phi i32 [ %180, %176 ], [ %170, %169 ]
  %183 = phi i8 [ %179, %176 ], [ %172, %169 ]
  %184 = add nuw nsw i64 %171, 1
  %185 = zext i32 %182 to i64
  %186 = icmp ult i64 %184, %185
  br i1 %186, label %169, label %306

187:                                              ; preds = %18
  %188 = icmp ult i32 %27, 6
  br i1 %188, label %189, label %194

189:                                              ; preds = %187
  %190 = icmp eq %"class.blink::WebInputEvent"* %25, null
  %191 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %25, i64 1
  %192 = bitcast %"class.blink::WebInputEvent"* %191 to %"class.blink::WebPointerProperties"*
  %193 = select i1 %190, %"class.blink::WebPointerProperties"* null, %"class.blink::WebPointerProperties"* %192
  br label %202

194:                                              ; preds = %187
  %195 = add i32 %27, -33
  %196 = icmp ult i32 %195, 6
  br i1 %196, label %197, label %202

197:                                              ; preds = %194
  %198 = icmp eq %"class.blink::WebInputEvent"* %25, null
  %199 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %25, i64 1
  %200 = bitcast %"class.blink::WebInputEvent"* %199 to %"class.blink::WebPointerProperties"*
  %201 = select i1 %198, %"class.blink::WebPointerProperties"* null, %"class.blink::WebPointerProperties"* %200
  br label %202

202:                                              ; preds = %189, %194, %197
  %203 = phi %"class.blink::WebPointerProperties"* [ %193, %189 ], [ %201, %197 ], [ null, %194 ]
  %204 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %203, i64 0, i32 7
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, 1
  br i1 %206, label %263, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %203, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = sext i32 %209 to i64
  %211 = load i64, i64* %12, align 8
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %273, label %213

213:                                              ; preds = %207
  %214 = call i64 @llvm.ctpop.i64(i64 %211) #9, !range !5
  %215 = icmp ugt i64 %214, 1
  br i1 %215, label %219, label %216

216:                                              ; preds = %213
  %217 = add i64 %211, -1
  %218 = and i64 %217, %210
  br label %223

219:                                              ; preds = %213
  %220 = icmp ugt i64 %211, %210
  br i1 %220, label %223, label %221

221:                                              ; preds = %219
  %222 = urem i64 %210, %211
  br label %223

223:                                              ; preds = %221, %219, %216
  %224 = phi i64 [ %218, %216 ], [ %222, %221 ], [ %210, %219 ]
  %225 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %13, align 8
  %226 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %225, i64 %224
  %227 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %226, align 8
  %228 = icmp eq %"struct.std::__1::__hash_node_base"* %227, null
  br i1 %228, label %273, label %229

229:                                              ; preds = %223
  %230 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %227, i64 0, i32 0
  %231 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %230, align 8
  %232 = icmp eq %"struct.std::__1::__hash_node_base"* %231, null
  br i1 %232, label %273, label %233

233:                                              ; preds = %229
  %234 = add i64 %211, -1
  br label %235

235:                                              ; preds = %256, %233
  %236 = phi %"struct.std::__1::__hash_node_base"* [ %231, %233 ], [ %258, %256 ]
  %237 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %236, i64 1
  %238 = bitcast %"struct.std::__1::__hash_node_base"* %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = icmp eq i64 %239, %210
  br i1 %240, label %251, label %241

241:                                              ; preds = %235
  br i1 %215, label %244, label %242

242:                                              ; preds = %241
  %243 = and i64 %239, %234
  br label %248

244:                                              ; preds = %241
  %245 = icmp ult i64 %239, %211
  br i1 %245, label %248, label %246

246:                                              ; preds = %244
  %247 = urem i64 %239, %211
  br label %248

248:                                              ; preds = %246, %244, %242
  %249 = phi i64 [ %243, %242 ], [ %247, %246 ], [ %239, %244 ]
  %250 = icmp eq i64 %249, %224
  br i1 %250, label %256, label %273

251:                                              ; preds = %235
  %252 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %236, i64 2
  %253 = bitcast %"struct.std::__1::__hash_node_base"* %252 to i32*
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, %209
  br i1 %255, label %260, label %256

256:                                              ; preds = %251, %248
  %257 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %236, i64 0, i32 0
  %258 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %257, align 8
  %259 = icmp eq %"struct.std::__1::__hash_node_base"* %258, null
  br i1 %259, label %273, label %235

260:                                              ; preds = %251
  %261 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %236, i64 3
  %262 = bitcast %"struct.std::__1::__hash_node_base"* %261 to %"class.ui::InputPredictor"**
  br label %263

263:                                              ; preds = %202, %260
  %264 = phi %"class.ui::InputPredictor"** [ %262, %260 ], [ %14, %202 ]
  %265 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %264, align 8
  %266 = icmp eq %"class.ui::InputPredictor"* %265, null
  br i1 %266, label %273, label %267

267:                                              ; preds = %263
  %268 = bitcast %"class.ui::InputPredictor"* %265 to i64 (%"class.ui::InputPredictor"*)***
  %269 = load i64 (%"class.ui::InputPredictor"*)**, i64 (%"class.ui::InputPredictor"*)*** %268, align 8
  %270 = getelementptr inbounds i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %269, i64 7
  %271 = load i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %270, align 8
  %272 = call i64 %271(%"class.ui::InputPredictor"* nonnull %265) #9
  br label %280

273:                                              ; preds = %256, %248, %263, %229, %223, %207
  %274 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %14, align 8
  %275 = bitcast %"class.ui::InputPredictor"* %274 to i64 (%"class.ui::InputPredictor"*)***
  %276 = load i64 (%"class.ui::InputPredictor"*)**, i64 (%"class.ui::InputPredictor"*)*** %275, align 8
  %277 = getelementptr inbounds i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %276, i64 7
  %278 = load i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %277, align 8
  %279 = call i64 %278(%"class.ui::InputPredictor"* %274) #9
  br label %280

280:                                              ; preds = %267, %273
  %281 = phi i64 [ %279, %273 ], [ %272, %267 ]
  %282 = add i64 %281, -9223372036854775807
  %283 = icmp ult i64 %282, 2
  br i1 %283, label %291, label %284

284:                                              ; preds = %280
  %285 = icmp slt i64 %281, 0
  %286 = select i1 %285, i64 -9223372036854775808, i64 9223372036854775807
  %287 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %19, i64 %281) #9
  %288 = extractvalue { i64, i1 } %287, 1
  %289 = extractvalue { i64, i1 } %287, 0
  %290 = select i1 %288, i64 %286, i64 %289, !prof !6
  br label %298

291:                                              ; preds = %280
  %292 = add i64 %19, -9223372036854775807
  %293 = icmp ugt i64 %292, 1
  %294 = icmp eq i64 %19, %281
  %295 = or i1 %293, %294
  br i1 %295, label %298, label %296

296:                                              ; preds = %291
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #9
  %297 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  br label %298

298:                                              ; preds = %284, %291, %296
  %299 = phi i64 [ %290, %284 ], [ %281, %291 ], [ %281, %296 ]
  %300 = icmp sgt i64 %299, %11
  br i1 %300, label %303, label %301

301:                                              ; preds = %298
  %302 = call zeroext i1 @_ZN5blink20InputEventPrediction20GetPointerPredictionEN4base9TimeTicksEPNS_20WebPointerPropertiesE(%"class.blink::InputEventPrediction"* %0, i64 %299, %"class.blink::WebPointerProperties"* %203)
  br label %303

303:                                              ; preds = %298, %301
  %304 = phi i1 [ false, %298 ], [ %302, %301 ]
  %305 = zext i1 %304 to i8
  br label %306

306:                                              ; preds = %181, %303
  %307 = phi i64 [ %299, %303 ], [ %61, %181 ]
  %308 = phi i8 [ %305, %303 ], [ %183, %181 ]
  %309 = and i8 %308, 1
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %313, label %311

311:                                              ; preds = %306
  %312 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %25, i64 0, i32 3, i32 0, i32 0
  store i64 %307, i64* %312, align 8
  call void @_ZN5blink22WebCoalescedInputEvent17AddPredictedEventERKNS_13WebInputEventE(%"class.blink::WebCoalescedInputEvent"* %1, %"class.blink::WebInputEvent"* dereferenceable(40) %25) #9
  br label %313

313:                                              ; preds = %63, %60, %306, %311
  %314 = phi i8 [ %308, %306 ], [ %308, %311 ], [ 0, %60 ], [ 0, %63 ]
  %315 = phi i64 [ %307, %306 ], [ %307, %311 ], [ %61, %60 ], [ %61, %63 ]
  %316 = icmp eq %"class.blink::WebInputEvent"* %25, null
  br i1 %316, label %322, label %317

317:                                              ; preds = %313
  %318 = bitcast %"class.blink::WebInputEvent"* %25 to void (%"class.blink::WebInputEvent"*)***
  %319 = load void (%"class.blink::WebInputEvent"*)**, void (%"class.blink::WebInputEvent"*)*** %318, align 8
  %320 = getelementptr inbounds void (%"class.blink::WebInputEvent"*)*, void (%"class.blink::WebInputEvent"*)** %319, i64 1
  %321 = load void (%"class.blink::WebInputEvent"*)*, void (%"class.blink::WebInputEvent"*)** %320, align 8
  call void %321(%"class.blink::WebInputEvent"* nonnull %25) #9
  br label %322

322:                                              ; preds = %313, %317
  %323 = and i8 %314, 1
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %325, label %18

325:                                              ; preds = %322
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InputEventPrediction14ResetPredictorERKNS_13WebInputEventE(%"class.blink::InputEventPrediction"*, %"class.blink::WebInputEvent"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -28
  %6 = icmp ult i32 %5, 5
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::WebInputEvent"* %1 to %"class.blink::WebTouchEvent"*
  %9 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1
  %10 = bitcast %"class.blink::WebInputEvent"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %70, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %13, %26
  %16 = phi i32 [ %11, %13 ], [ %27, %26 ]
  %17 = phi i64 [ 0, %13 ], [ %28, %26 ]
  %18 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %8, i64 0, i32 2, i64 %17, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -3
  %21 = icmp ult i32 %20, 2
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::WebTouchEvent", %"class.blink::WebTouchEvent"* %8, i64 0, i32 2, i64 %17, i32 0, i32 0
  %24 = tail call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table"* %14, i32* dereferenceable(4) %23) #9
  %25 = load i32, i32* %10, align 8
  br label %26

26:                                               ; preds = %15, %22
  %27 = phi i32 [ %16, %15 ], [ %25, %22 ]
  %28 = add nuw nsw i64 %17, 1
  %29 = zext i32 %27 to i64
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %15, label %70

31:                                               ; preds = %2
  %32 = icmp ult i32 %4, 6
  br i1 %32, label %33, label %50

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1
  %35 = bitcast %"class.blink::WebInputEvent"* %34 to %"class.blink::WebPointerProperties"*
  %36 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %35, i64 0, i32 7
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %46

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %40, align 8
  %42 = bitcast %"class.ui::InputPredictor"* %41 to void (%"class.ui::InputPredictor"*)***
  %43 = load void (%"class.ui::InputPredictor"*)**, void (%"class.ui::InputPredictor"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %43, i64 3
  %45 = load void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %44, align 8
  tail call void %45(%"class.ui::InputPredictor"* %41) #9
  br label %70

46:                                               ; preds = %33
  %47 = bitcast %"class.blink::WebInputEvent"* %34 to i32*
  %48 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0
  %49 = tail call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table"* %48, i32* dereferenceable(4) %47) #9
  br label %70

50:                                               ; preds = %31
  %51 = add i32 %4, -33
  %52 = icmp ult i32 %51, 6
  br i1 %52, label %53, label %70

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.blink::WebInputEvent", %"class.blink::WebInputEvent"* %1, i64 1
  %55 = bitcast %"class.blink::WebInputEvent"* %54 to %"class.blink::WebPointerProperties"*
  %56 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %55, i64 0, i32 7
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %66

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %60, align 8
  %62 = bitcast %"class.ui::InputPredictor"* %61 to void (%"class.ui::InputPredictor"*)***
  %63 = load void (%"class.ui::InputPredictor"*)**, void (%"class.ui::InputPredictor"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %63, i64 3
  %65 = load void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %64, align 8
  tail call void %65(%"class.ui::InputPredictor"* %61) #9
  br label %70

66:                                               ; preds = %53
  %67 = bitcast %"class.blink::WebInputEvent"* %54 to i32*
  %68 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0
  %69 = tail call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table"* %68, i32* dereferenceable(4) %67) #9
  br label %70

70:                                               ; preds = %26, %7, %66, %59, %46, %39, %50
  ret void
}

declare %"class.ui::InputPredictor"* @_ZN5blink16PredictorFactory12GetPredictorENS_16input_prediction13PredictorTypeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InputEventPrediction19UpdateSinglePointerERKNS_20WebPointerPropertiesEN4base9TimeTicksE(%"class.blink::InputEventPrediction"*, %"class.blink::WebPointerProperties"* dereferenceable(60), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.57", align 1
  %6 = alloca %"struct.ui::InputPredictor::InputData", align 8
  %7 = alloca %"struct.std::__1::pair.42", align 8
  %8 = bitcast %"struct.ui::InputPredictor::InputData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"struct.ui::InputPredictor::InputData", %"struct.ui::InputPredictor::InputData"* %6, i64 0, i32 1, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 11
  %11 = bitcast %"class.gfx::PointF"* %10 to i64*
  %12 = bitcast %"struct.ui::InputPredictor::InputData"* %6 to i64*
  %13 = load i64, i64* %11, align 4
  store i64 %13, i64* %12, align 8
  store i64 %2, i64* %9, align 8
  %14 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 7
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %77

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %86, label %26

26:                                               ; preds = %19
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #9, !range !5
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ugt i64 %24, %22
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %86, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %46, label %86, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %86

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %21
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base"* %72, null
  br i1 %73, label %86, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base"* %75 to %"class.ui::InputPredictor"**
  br label %77

77:                                               ; preds = %17, %74
  %78 = phi %"class.ui::InputPredictor"** [ %18, %17 ], [ %76, %74 ]
  %79 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %78, align 8
  %80 = icmp eq %"class.ui::InputPredictor"* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = bitcast %"class.ui::InputPredictor"* %79 to void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)***
  %83 = load void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)**, void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)*, void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)** %83, i64 4
  %85 = load void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)*, void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)** %84, align 8
  call void %85(%"class.ui::InputPredictor"* nonnull %79, %"struct.ui::InputPredictor::InputData"* nonnull dereferenceable(16) %6) #9
  br label %118

86:                                               ; preds = %70, %62, %43, %19, %36, %77
  %87 = bitcast %"struct.std::__1::pair.42"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #9
  %88 = bitcast %"struct.std::__1::pair.42"* %7 to i64*
  store i64 -6148914691236517206, i64* %88, align 8
  %89 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 0
  %90 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = tail call %"class.ui::InputPredictor"* @_ZN5blink16PredictorFactory12GetPredictorENS_16input_prediction13PredictorTypeE(i32 %91) #9
  %93 = load i32, i32* %89, align 4
  %94 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %7, i64 0, i32 0
  store i32 %93, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.ui::InputPredictor"* %92, %"class.ui::InputPredictor"** %95, align 8
  %96 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0
  %97 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJNS_4pairIiS7_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %96, i32* nonnull dereferenceable(4) %94, %"struct.std::__1::pair.42"* nonnull dereferenceable(16) %7) #9
  %98 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %89, i32** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::tuple.57", %"class.std::__1::tuple.57"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %100) #9
  %101 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %96, i32* dereferenceable(4) %89, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.57"* nonnull dereferenceable(1) %5) #9
  %102 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %101, 0
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %100) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to %"class.ui::InputPredictor"**
  %105 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %104, align 8
  %106 = bitcast %"class.ui::InputPredictor"* %105 to void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)***
  %107 = load void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)**, void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)*, void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)** %107, i64 4
  %109 = load void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)*, void (%"class.ui::InputPredictor"*, %"struct.ui::InputPredictor::InputData"*)** %108, align 8
  call void %109(%"class.ui::InputPredictor"* %105, %"struct.ui::InputPredictor::InputData"* nonnull dereferenceable(16) %6) #9
  %110 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %95, align 8
  store %"class.ui::InputPredictor"* null, %"class.ui::InputPredictor"** %95, align 8
  %111 = icmp eq %"class.ui::InputPredictor"* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %86
  %113 = bitcast %"class.ui::InputPredictor"* %110 to void (%"class.ui::InputPredictor"*)***
  %114 = load void (%"class.ui::InputPredictor"*)**, void (%"class.ui::InputPredictor"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %114, i64 1
  %116 = load void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %115, align 8
  call void %116(%"class.ui::InputPredictor"* nonnull %110) #9
  br label %117

117:                                              ; preds = %86, %112
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #9
  br label %118

118:                                              ; preds = %117, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.ui::InputPredictor"* @_ZNK5blink20InputEventPrediction12GetPredictorERKNS_20WebPointerPropertiesE(%"class.blink::InputEventPrediction"* nocapture readonly, %"class.blink::WebPointerProperties"* nocapture readonly dereferenceable(60)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 7
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %7, align 8
  br label %68

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %68, label %16

16:                                               ; preds = %9
  %17 = tail call i64 @llvm.ctpop.i64(i64 %14) #9, !range !5
  %18 = icmp ugt i64 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = add i64 %14, -1
  %21 = and i64 %20, %12
  br label %26

22:                                               ; preds = %16
  %23 = icmp ugt i64 %14, %12
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = urem i64 %12, %14
  br label %26

26:                                               ; preds = %24, %22, %19
  %27 = phi i64 [ %21, %19 ], [ %25, %24 ], [ %12, %22 ]
  %28 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, i64 %27
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %68, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %68, label %37

37:                                               ; preds = %33
  %38 = add i64 %14, -1
  br label %39

39:                                               ; preds = %60, %37
  %40 = phi %"struct.std::__1::__hash_node_base"* [ %35, %37 ], [ %62, %60 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 1
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %12
  br i1 %44, label %55, label %45

45:                                               ; preds = %39
  br i1 %18, label %48, label %46

46:                                               ; preds = %45
  %47 = and i64 %43, %38
  br label %52

48:                                               ; preds = %45
  %49 = icmp ult i64 %43, %14
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = urem i64 %43, %14
  br label %52

52:                                               ; preds = %50, %48, %46
  %53 = phi i64 [ %47, %46 ], [ %51, %50 ], [ %43, %48 ]
  %54 = icmp eq i64 %53, %27
  br i1 %54, label %60, label %68

55:                                               ; preds = %39
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 2
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %11
  br i1 %59, label %64, label %60

60:                                               ; preds = %55, %52
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base"* %62, null
  br i1 %63, label %68, label %39

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 3
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to %"class.ui::InputPredictor"**
  %67 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %66, align 8
  br label %68

68:                                               ; preds = %60, %52, %33, %9, %26, %64, %6
  %69 = phi %"class.ui::InputPredictor"* [ %8, %6 ], [ %67, %64 ], [ null, %26 ], [ null, %9 ], [ null, %33 ], [ null, %52 ], [ null, %60 ]
  ret %"class.ui::InputPredictor"* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink20InputEventPrediction20GetPointerPredictionEN4base9TimeTicksEPNS_20WebPointerPropertiesE(%"class.blink::InputEventPrediction"* nocapture readonly, i64, %"class.blink::WebPointerProperties"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %2, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %16, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %8, align 8
  %10 = bitcast %"class.ui::InputPredictor"* %9 to void (%"class.ui::InputPredictor"*)***
  %11 = load void (%"class.ui::InputPredictor"*)**, void (%"class.ui::InputPredictor"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %11, i64 3
  %13 = load void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %12, align 8
  tail call void %13(%"class.ui::InputPredictor"* %9) #9
  %14 = load i32, i32* %4, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %3, %7
  %17 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %76

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %2, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %93, label %25

25:                                               ; preds = %18
  %26 = tail call i64 @llvm.ctpop.i64(i64 %23) #9, !range !5
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %23, -1
  %30 = and i64 %29, %21
  br label %35

31:                                               ; preds = %25
  %32 = icmp ugt i64 %23, %21
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %21, %23
  br label %35

35:                                               ; preds = %33, %31, %28
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %21, %31 ]
  %37 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %93, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %93, label %46

46:                                               ; preds = %42
  %47 = add i64 %23, -1
  br label %48

48:                                               ; preds = %69, %46
  %49 = phi %"struct.std::__1::__hash_node_base"* [ %44, %46 ], [ %71, %69 ]
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %21
  br i1 %53, label %64, label %54

54:                                               ; preds = %48
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %47
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %23
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %23
  br label %61

61:                                               ; preds = %59, %57, %55
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %69, label %93

64:                                               ; preds = %48
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %20
  br i1 %68, label %73, label %69

69:                                               ; preds = %64, %61
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base"* %71, null
  br i1 %72, label %93, label %48

73:                                               ; preds = %64
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to %"class.ui::InputPredictor"**
  br label %76

76:                                               ; preds = %16, %73
  %77 = phi %"class.ui::InputPredictor"** [ %17, %16 ], [ %75, %73 ]
  %78 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %77, align 8
  %79 = icmp eq %"class.ui::InputPredictor"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.ui::InputPredictor"* %78 to %"struct.ui::InputPredictor::InputData"* (%"class.ui::InputPredictor"*, i64, i64)***
  %82 = load %"struct.ui::InputPredictor::InputData"* (%"class.ui::InputPredictor"*, i64, i64)**, %"struct.ui::InputPredictor::InputData"* (%"class.ui::InputPredictor"*, i64, i64)*** %81, align 8
  %83 = getelementptr inbounds %"struct.ui::InputPredictor::InputData"* (%"class.ui::InputPredictor"*, i64, i64)*, %"struct.ui::InputPredictor::InputData"* (%"class.ui::InputPredictor"*, i64, i64)** %82, i64 6
  %84 = load %"struct.ui::InputPredictor::InputData"* (%"class.ui::InputPredictor"*, i64, i64)*, %"struct.ui::InputPredictor::InputData"* (%"class.ui::InputPredictor"*, i64, i64)** %83, align 8
  %85 = tail call %"struct.ui::InputPredictor::InputData"* %84(%"class.ui::InputPredictor"* nonnull %78, i64 %1, i64 0) #9
  %86 = icmp eq %"struct.ui::InputPredictor::InputData"* %85, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %2, i64 0, i32 11
  %89 = bitcast %"struct.ui::InputPredictor::InputData"* %85 to i64*
  %90 = bitcast %"class.gfx::PointF"* %88 to i64*
  %91 = load i64, i64* %89, align 4
  store i64 %91, i64* %90, align 4
  %92 = bitcast %"struct.ui::InputPredictor::InputData"* %85 to i8*
  tail call void @_ZdlPv(i8* %92) #10
  br label %93

93:                                               ; preds = %69, %61, %80, %42, %18, %35, %76, %87
  %94 = phi i1 [ true, %87 ], [ false, %76 ], [ false, %35 ], [ false, %18 ], [ false, %42 ], [ false, %80 ], [ false, %61 ], [ false, %69 ]
  ret i1 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InputEventPrediction20ResetSinglePredictorERKNS_20WebPointerPropertiesE(%"class.blink::InputEventPrediction"*, %"class.blink::WebPointerProperties"* dereferenceable(60)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 7
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %7, align 8
  %9 = bitcast %"class.ui::InputPredictor"* %8 to void (%"class.ui::InputPredictor"*)***
  %10 = load void (%"class.ui::InputPredictor"*)**, void (%"class.ui::InputPredictor"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %10, i64 3
  %12 = load void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %11, align 8
  tail call void %12(%"class.ui::InputPredictor"* %8) #9
  br label %17

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table"* %15, i32* dereferenceable(4) %14) #9
  br label %17

17:                                               ; preds = %13, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink20InputEventPrediction25GetPredictionTimeIntervalERKNS_20WebPointerPropertiesE(%"class.blink::InputEventPrediction"* nocapture readonly, %"class.blink::WebPointerProperties"* nocapture readonly dereferenceable(60)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 7
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %66

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::WebPointerProperties", %"class.blink::WebPointerProperties"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %76, label %15

15:                                               ; preds = %8
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #9, !range !5
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, -1
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ugt i64 %13, %11
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %23, %21, %18
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %76, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %76, label %36

36:                                               ; preds = %32
  %37 = add i64 %13, -1
  br label %38

38:                                               ; preds = %59, %36
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %34, %36 ], [ %61, %59 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %11
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  br i1 %17, label %47, label %45

45:                                               ; preds = %44
  %46 = and i64 %42, %37
  br label %51

47:                                               ; preds = %44
  %48 = icmp ult i64 %42, %13
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %42, %13
  br label %51

51:                                               ; preds = %49, %47, %45
  %52 = phi i64 [ %46, %45 ], [ %50, %49 ], [ %42, %47 ]
  %53 = icmp eq i64 %52, %26
  br i1 %53, label %59, label %76

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 2
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %10
  br i1 %58, label %63, label %59

59:                                               ; preds = %54, %51
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base"* %61, null
  br i1 %62, label %76, label %38

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 3
  %65 = bitcast %"struct.std::__1::__hash_node_base"* %64 to %"class.ui::InputPredictor"**
  br label %66

66:                                               ; preds = %6, %63
  %67 = phi %"class.ui::InputPredictor"** [ %7, %6 ], [ %65, %63 ]
  %68 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %67, align 8
  %69 = icmp eq %"class.ui::InputPredictor"* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %66
  %71 = bitcast %"class.ui::InputPredictor"* %68 to i64 (%"class.ui::InputPredictor"*)***
  %72 = load i64 (%"class.ui::InputPredictor"*)**, i64 (%"class.ui::InputPredictor"*)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %72, i64 7
  %74 = load i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %73, align 8
  %75 = tail call i64 %74(%"class.ui::InputPredictor"* nonnull %68) #9
  br label %84

76:                                               ; preds = %59, %51, %32, %8, %25, %66
  %77 = getelementptr inbounds %"class.blink::InputEventPrediction", %"class.blink::InputEventPrediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %77, align 8
  %79 = bitcast %"class.ui::InputPredictor"* %78 to i64 (%"class.ui::InputPredictor"*)***
  %80 = load i64 (%"class.ui::InputPredictor"*)**, i64 (%"class.ui::InputPredictor"*)*** %79, align 8
  %81 = getelementptr inbounds i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %80, i64 7
  %82 = load i64 (%"class.ui::InputPredictor"*)*, i64 (%"class.ui::InputPredictor"*)** %81, align 8
  %83 = tail call i64 %82(%"class.ui::InputPredictor"* %78) #9
  br label %84

84:                                               ; preds = %70, %76
  %85 = phi i64 [ %83, %76 ], [ %75, %70 ]
  ret i64 %85
}

declare void @_ZN5blink22WebCoalescedInputEvent17AddPredictedEventERKNS_13WebInputEventE(%"class.blink::WebCoalescedInputEvent"*, %"class.blink::WebInputEvent"* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE14__erase_uniqueIiEEmRKT_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.50", align 8
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %78, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #9, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %78, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %78, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %78

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %78, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.50"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.50"* nonnull sret %3, %"class.std::__1::__hash_table"* %0, %"struct.std::__1::__hash_node_base"* nonnull %33) #9
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %59, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node"* %60, null
  br i1 %61, label %77, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %64 = load i8, i8* %63, align 8, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %60, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.ui::InputPredictor"*, %"class.ui::InputPredictor"** %67, align 8
  store %"class.ui::InputPredictor"* null, %"class.ui::InputPredictor"** %67, align 8
  %69 = icmp eq %"class.ui::InputPredictor"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = bitcast %"class.ui::InputPredictor"* %68 to void (%"class.ui::InputPredictor"*)***
  %72 = load void (%"class.ui::InputPredictor"*)**, void (%"class.ui::InputPredictor"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %72, i64 1
  %74 = load void (%"class.ui::InputPredictor"*)*, void (%"class.ui::InputPredictor"*)** %73, align 8
  call void %74(%"class.ui::InputPredictor"* nonnull %68) #9
  br label %75

75:                                               ; preds = %70, %66, %62
  %76 = bitcast %"struct.std::__1::__hash_node"* %60 to i8*
  call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %57, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %78

78:                                               ; preds = %45, %53, %26, %2, %19, %77
  %79 = phi i64 [ 1, %77 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.50"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #9, !range !5
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.4"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.50"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.7"** %98 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %30, %"class.std::__1::__compressed_pair.4"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJNS_4pairIiS7_EEEEENSL_INS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::pair.42"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #9, !range !5
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %147, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 32) #10, !noalias !8
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !8
  store i32 %59, i32* %57, align 8, !noalias !8
  %60 = getelementptr inbounds i8, i8* %55, i64 24
  %61 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %2, i64 0, i32 1
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.14"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr.14"* %61 to i64*
  %64 = load i64, i64* %63, align 8, !noalias !8
  store %"class.ui::InputPredictor"* null, %"class.ui::InputPredictor"** %62, align 8, !noalias !8
  %65 = bitcast i8* %60 to i64*
  store i64 %64, i64* %65, align 8, !noalias !8
  %66 = getelementptr inbounds i8, i8* %55, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %5, i64* %67, align 8, !noalias !8
  %68 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %68, align 8, !noalias !8
  %69 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %7 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %8, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %53
  %80 = shl i64 %7, 1
  %81 = icmp ult i64 %7, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %7) #9, !range !5
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #9
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %91)
  %92 = load i64, i64* %6, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #9, !range !5
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, -1
  %97 = and i64 %96, %5
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %5
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %5, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %53
  %103 = phi i64 [ %7, %53 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %54, %53 ], [ %97, %95 ], [ %5, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %55 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i8**
  store i8* %55, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base"* %111, %"struct.std::__1::__hash_node_base"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #9, !range !5
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %55 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %55, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %48, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %48 ]
  %149 = phi %"struct.std::__1::__hash_node_base"* [ %144, %143 ], [ %31, %48 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !5
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !5
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !5
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !11

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !5
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.57"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !5
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #10, !noalias !12
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !12
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !12
  store i32 %62, i32* %61, align 8, !noalias !12
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to i64*
  store i64 0, i64* %64, align 8, !noalias !12
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !12
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !12
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !5
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #9
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #9, !range !5
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, -1
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #9, !range !5
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{i64 0, i64 65}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!"branch_weights", i32 2002, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashINS_4pairIiS7_EEJEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashINS_4pairIiS7_EEJEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISP_EEEEEEmOT_DpOT0_"}
!11 = distinct !{!11, !4}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN2ui14InputPredictorENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISV_EEEEEEmOT_DpOT0_"}
