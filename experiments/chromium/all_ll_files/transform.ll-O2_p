; ModuleID = '../../ui/gfx/transform.cc'
source_filename = "../../ui/gfx/transform.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::Quaternion" = type { double, double, double, double }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.gfx::Vector3dF" = type { float, float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%struct.SkRect = type { float, float, float, float }
%class.SkMatrix = type { [9 x float], i32 }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::BoxF" = type { %"class.gfx::Point3F", float, float, float }
%"struct.gfx::DecomposedTransform" = type { [3 x float], [3 x float], [3 x float], [4 x float], %"class.gfx::Quaternion" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkM44 = type { [16 x float] }

@__const._ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE.inverse = private unnamed_addr constant %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }>, align 4
@__const._ZN3gfx9Transform5BlendERKS0_d.from_decomp = private unnamed_addr constant { [3 x float], [3 x float], [3 x float], [4 x float], [4 x i8], %"class.gfx::Quaternion" } { [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [3 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA", %"class.gfx::Quaternion" { double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF } }, align 8
@.str = private unnamed_addr constant [129 x i8] c"[ %+0.4f %+0.4f %+0.4f %+0.4f  \0A  %+0.4f %+0.4f %+0.4f %+0.4f  \0A  %+0.4f %+0.4f %+0.4f %+0.4f  \0A  %+0.4f %+0.4f %+0.4f %+0.4f ]\0A\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

@_ZN3gfx9TransformC1Effffffffffffffff = hidden unnamed_addr alias void (%"class.gfx::Transform"*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float), void (%"class.gfx::Transform"*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float)* @_ZN3gfx9TransformC2Effffffffffffffff
@_ZN3gfx9TransformC1Effffff = hidden unnamed_addr alias void (%"class.gfx::Transform"*, float, float, float, float, float, float), void (%"class.gfx::Transform"*, float, float, float, float, float, float)* @_ZN3gfx9TransformC2Effffff
@_ZN3gfx9TransformC1ERKNS_10QuaternionE = hidden unnamed_addr alias void (%"class.gfx::Transform"*, %"class.gfx::Quaternion"*), void (%"class.gfx::Transform"*, %"class.gfx::Quaternion"*)* @_ZN3gfx9TransformC2ERKNS_10QuaternionE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9TransformC2Effffffffffffffff(%"class.gfx::Transform"*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float) unnamed_addr #0 align 2 {
  %18 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  tail call void @_ZN10SkMatrix446set4x4Effffffffffffffff(%class.SkMatrix44* %18, float %1, float %5, float %9, float %13, float %2, float %6, float %10, float %14, float %3, float %7, float %11, float %15, float %4, float %8, float %12, float %16) #9
  ret void
}

declare void @_ZN10SkMatrix446set4x4Effffffffffffffff(%class.SkMatrix44*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9TransformC2Effffff(%"class.gfx::Transform"*, float, float, float, float, float, float) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %9 = bitcast %"class.gfx::Transform"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #9
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 0
  store float %1, float* %11, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %8) #9
  %12 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 1
  store float %3, float* %12, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %8) #9
  %13 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 0
  store float %2, float* %13, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %8) #9
  %14 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 1
  store float %4, float* %14, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %8) #9
  %15 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 0
  store float %5, float* %15, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %8) #9
  %16 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 1
  store float %6, float* %16, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9TransformC2ERKNS_10QuaternionE(%"class.gfx::Transform"*, %"class.gfx::Quaternion"* nocapture readonly dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %1, i64 0, i32 0
  %5 = load double, double* %4, align 8
  %6 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %1, i64 0, i32 1
  %7 = bitcast double* %6 to <2 x double>*
  %8 = load <2 x double>, <2 x double>* %7, align 8
  %9 = getelementptr inbounds %"class.gfx::Quaternion", %"class.gfx::Quaternion"* %1, i64 0, i32 3
  %10 = load double, double* %9, align 8
  %11 = fmul <2 x double> %8, %8
  %12 = extractelement <2 x double> %11, i32 0
  %13 = extractelement <2 x double> %11, i32 1
  %14 = fadd double %12, %13
  %15 = fmul double %14, 2.000000e+00
  %16 = fsub double 1.000000e+00, %15
  %17 = fptrunc double %16 to float
  %18 = insertelement <2 x double> undef, double %5, i32 0
  %19 = insertelement <2 x double> %18, double %10, i32 1
  %20 = fmul <2 x double> %19, %8
  %21 = extractelement <2 x double> %20, i32 0
  %22 = extractelement <2 x double> %20, i32 1
  %23 = fadd double %21, %22
  %24 = fmul double %23, 2.000000e+00
  %25 = fptrunc double %24 to float
  %26 = insertelement <2 x double> undef, double %10, i32 0
  %27 = insertelement <2 x double> %26, double %5, i32 1
  %28 = fmul <2 x double> %8, %27
  %29 = extractelement <2 x double> %28, i32 0
  %30 = extractelement <2 x double> %28, i32 1
  %31 = fsub double %30, %29
  %32 = fmul double %31, 2.000000e+00
  %33 = fptrunc double %32 to float
  %34 = fsub double %21, %22
  %35 = fmul double %34, 2.000000e+00
  %36 = fptrunc double %35 to float
  %37 = fmul double %5, %5
  %38 = fadd double %37, %13
  %39 = fmul double %38, 2.000000e+00
  %40 = fsub double 1.000000e+00, %39
  %41 = fptrunc double %40 to float
  %42 = extractelement <2 x double> %8, i32 0
  %43 = extractelement <2 x double> %8, i32 1
  %44 = fmul double %42, %43
  %45 = fmul double %5, %10
  %46 = fadd double %44, %45
  %47 = fmul double %46, 2.000000e+00
  %48 = fptrunc double %47 to float
  %49 = fadd double %30, %29
  %50 = fmul double %49, 2.000000e+00
  %51 = fptrunc double %50 to float
  %52 = fsub double %44, %45
  %53 = fmul double %52, 2.000000e+00
  %54 = fptrunc double %53 to float
  %55 = fadd double %37, %12
  %56 = fmul double %55, 2.000000e+00
  %57 = fsub double 1.000000e+00, %56
  %58 = fptrunc double %57 to float
  tail call void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44* %3, float %17, float %25, float %33, float %36, float %41, float %48, float %51, float %54, float %58) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44*, float, float, float, float, float, float, float, float, float) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform16RotateAboutXAxisEd(%"class.gfx::Transform"*, double) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix44, align 4
  %4 = fmul double %1, 0x400921FB54442D18
  %5 = fdiv double %4, 1.800000e+02
  %6 = tail call double @cos(double %5) #9
  %7 = fptrunc double %6 to float
  %8 = tail call double @sin(double %5) #9
  %9 = fptrunc double %8 to float
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = fsub float -0.000000e+00, %9
  tail call void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44* %10, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float %7, float %9, float 0.000000e+00, float %15, float %7) #9
  br label %19

16:                                               ; preds = %2
  %17 = bitcast %class.SkMatrix44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %17) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 bitcast (%class.SkMatrix44* @__const._ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE.inverse to i8*), i64 68, i1 false)
  %18 = fsub float -0.000000e+00, %9
  call void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44* nonnull %3, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float %7, float %9, float 0.000000e+00, float %18, float %7) #9
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* %10, %class.SkMatrix44* dereferenceable(68) %10, %class.SkMatrix44* nonnull dereferenceable(68) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %16, %14
  ret void
}

; Function Attrs: nofree nounwind
declare double @cos(double) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @sin(double) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform16RotateAboutYAxisEd(%"class.gfx::Transform"*, double) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix44, align 4
  %4 = fmul double %1, 0x400921FB54442D18
  %5 = fdiv double %4, 1.800000e+02
  %6 = tail call double @cos(double %5) #9
  %7 = fptrunc double %6 to float
  %8 = tail call double @sin(double %5) #9
  %9 = fptrunc double %8 to float
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = fsub float -0.000000e+00, %9
  tail call void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44* %10, float %7, float 0.000000e+00, float %15, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float %9, float 0.000000e+00, float %7) #9
  br label %19

16:                                               ; preds = %2
  %17 = bitcast %class.SkMatrix44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %17) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 bitcast (%class.SkMatrix44* @__const._ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE.inverse to i8*), i64 68, i1 false)
  %18 = fsub float -0.000000e+00, %9
  call void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44* nonnull %3, float %7, float 0.000000e+00, float %18, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float %9, float 0.000000e+00, float %7) #9
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* %10, %class.SkMatrix44* dereferenceable(68) %10, %class.SkMatrix44* nonnull dereferenceable(68) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %16, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform16RotateAboutZAxisEd(%"class.gfx::Transform"*, double) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix44, align 4
  %4 = fmul double %1, 0x400921FB54442D18
  %5 = fdiv double %4, 1.800000e+02
  %6 = tail call double @cos(double %5) #9
  %7 = fptrunc double %6 to float
  %8 = tail call double @sin(double %5) #9
  %9 = fptrunc double %8 to float
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = fsub float -0.000000e+00, %9
  tail call void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44* %10, float %7, float %9, float 0.000000e+00, float %15, float %7, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00) #9
  br label %19

16:                                               ; preds = %2
  %17 = bitcast %class.SkMatrix44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %17) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 bitcast (%class.SkMatrix44* @__const._ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE.inverse to i8*), i64 68, i1 false)
  %18 = fsub float -0.000000e+00, %9
  call void @_ZN10SkMatrix446set3x3Efffffffff(%class.SkMatrix44* nonnull %3, float %7, float %9, float 0.000000e+00, float %18, float %7, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00) #9
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* %10, %class.SkMatrix44* dereferenceable(68) %10, %class.SkMatrix44* nonnull dereferenceable(68) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %16, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform11RotateAboutERKNS_9Vector3dFEd(%"class.gfx::Transform"*, %"class.gfx::Vector3dF"* nocapture readonly dereferenceable(12), double) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix44, align 4
  %5 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %19

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 2
  %15 = load float, float* %14, align 4
  %16 = fptrunc double %2 to float
  %17 = fmul float %16, 0x400921FB60000000
  %18 = fdiv float %17, 1.800000e+02
  tail call void @_ZN10SkMatrix4414setRotateAboutEffff(%class.SkMatrix44* %5, float %11, float %13, float %15, float %18) #9
  br label %30

19:                                               ; preds = %3
  %20 = bitcast %class.SkMatrix44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %20) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 4 bitcast (%class.SkMatrix44* @__const._ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE.inverse to i8*), i64 68, i1 false)
  %21 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 2
  %26 = load float, float* %25, align 4
  %27 = fptrunc double %2 to float
  %28 = fmul float %27, 0x400921FB60000000
  %29 = fdiv float %28, 1.800000e+02
  call void @_ZN10SkMatrix4414setRotateAboutEffff(%class.SkMatrix44* nonnull %4, float %22, float %24, float %26, float %29) #9
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* %5, %class.SkMatrix44* dereferenceable(68) %5, %class.SkMatrix44* nonnull dereferenceable(68) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %20) #9
  br label %30

30:                                               ; preds = %19, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform5ScaleEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix448preScaleEfff(%class.SkMatrix44* %4, float %1, float %2, float 1.000000e+00) #9
  ret void
}

declare dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix448preScaleEfff(%class.SkMatrix44*, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform9PostScaleEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix449postScaleEfff(%class.SkMatrix44* %4, float %1, float %2, float 1.000000e+00) #9
  ret void
}

declare dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix449postScaleEfff(%class.SkMatrix44*, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform7Scale3dEfff(%"class.gfx::Transform"*, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %6 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix448preScaleEfff(%class.SkMatrix44* %5, float %1, float %2, float %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform9TranslateERKNS_9Vector2dFE(%"class.gfx::Transform"*, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4412preTranslateEfff(%class.SkMatrix44* %7, float %4, float %6, float 0.000000e+00) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform9TranslateEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4412preTranslateEfff(%class.SkMatrix44* %4, float %1, float %2, float 0.000000e+00) #9
  ret void
}

declare dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4412preTranslateEfff(%class.SkMatrix44*, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform13PostTranslateERKNS_9Vector2dFE(%"class.gfx::Transform"*, %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %1, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4413postTranslateEfff(%class.SkMatrix44* %7, float %4, float %6, float 0.000000e+00) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform13PostTranslateEff(%"class.gfx::Transform"*, float, float) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %5 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4413postTranslateEfff(%class.SkMatrix44* %4, float %1, float %2, float 0.000000e+00) #9
  ret void
}

declare dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4413postTranslateEfff(%class.SkMatrix44*, float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform11Translate3dERKNS_9Vector3dFE(%"class.gfx::Transform"*, %"class.gfx::Vector3dF"* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 2
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4412preTranslateEfff(%class.SkMatrix44* %9, float %4, float %6, float %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform11Translate3dEfff(%"class.gfx::Transform"*, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %6 = tail call dereferenceable(68) %class.SkMatrix44* @_ZN10SkMatrix4412preTranslateEfff(%class.SkMatrix44* %5, float %1, float %2, float %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform4SkewEdd(%"class.gfx::Transform"*, double, double) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix44, align 4
  %5 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %20

9:                                                ; preds = %3
  %10 = fmul double %1, 0x400921FB54442D18
  %11 = fdiv double %10, 1.800000e+02
  %12 = tail call double @tan(double %11) #9
  %13 = fptrunc double %12 to float
  %14 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 0
  store float %13, float* %14, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %5) #9
  %15 = fmul double %2, 0x400921FB54442D18
  %16 = fdiv double %15, 1.800000e+02
  %17 = tail call double @tan(double %16) #9
  %18 = fptrunc double %17 to float
  %19 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 1
  store float %18, float* %19, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %5) #9
  br label %33

20:                                               ; preds = %3
  %21 = bitcast %class.SkMatrix44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %21) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 bitcast (%class.SkMatrix44* @__const._ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE.inverse to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #9
  %22 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 1
  store i8 0, i8* %22, align 4
  %23 = fmul double %1, 0x400921FB54442D18
  %24 = fdiv double %23, 1.800000e+02
  %25 = tail call double @tan(double %24) #9
  %26 = fptrunc double %25 to float
  %27 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 0, i64 1, i64 0
  store float %26, float* %27, align 4
  call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* nonnull %4) #9
  %28 = fmul double %2, 0x400921FB54442D18
  %29 = fdiv double %28, 1.800000e+02
  %30 = call double @tan(double %29) #9
  %31 = fptrunc double %30 to float
  %32 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 0, i64 0, i64 1
  store float %31, float* %32, align 4
  call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* nonnull %4) #9
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* %5, %class.SkMatrix44* dereferenceable(68) %5, %class.SkMatrix44* nonnull dereferenceable(68) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %21) #9
  br label %33

33:                                               ; preds = %20, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform21ApplyPerspectiveDepthEf(%"class.gfx::Transform"*, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix44, align 4
  %4 = fcmp oeq float %1, 0.000000e+00
  br i1 %4, label %18, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = fdiv float -1.000000e+00, %1
  %12 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 3
  store float %11, float* %12, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %6) #9
  br label %18

13:                                               ; preds = %5
  %14 = bitcast %class.SkMatrix44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %14) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 bitcast (%class.SkMatrix44* @__const._ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE.inverse to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %14, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #9
  %15 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %3, i64 0, i32 1
  store i8 0, i8* %15, align 4
  %16 = fdiv float -1.000000e+00, %1
  %17 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %3, i64 0, i32 0, i64 2, i64 3
  store float %16, float* %17, align 4
  call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* nonnull %3) #9
  call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* %6, %class.SkMatrix44* dereferenceable(68) %6, %class.SkMatrix44* nonnull dereferenceable(68) %3) #9
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %14) #9
  br label %18

18:                                               ; preds = %2, %13, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform18PreconcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0
  tail call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* %3, %class.SkMatrix44* dereferenceable(68) %3, %class.SkMatrix44* dereferenceable(68) %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform15ConcatTransformERKS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0
  tail call void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44* %3, %class.SkMatrix44* dereferenceable(68) %4, %class.SkMatrix44* dereferenceable(68) %3) #9
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform36IsApproximatelyIdentityOrTranslationEf(%"class.gfx::Transform"* nocapture readonly, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = fadd float %4, -1.000000e+00
  %6 = tail call float @llvm.fabs.f32(float %5) #9
  %7 = fcmp ugt float %6, %1
  br i1 %7, label %66, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 1
  %10 = load float, float* %9, align 4
  %11 = tail call float @llvm.fabs.f32(float %10) #9
  %12 = fcmp ugt float %11, %1
  br i1 %12, label %66, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 2
  %15 = load float, float* %14, align 4
  %16 = tail call float @llvm.fabs.f32(float %15) #9
  %17 = fcmp ugt float %16, %1
  br i1 %17, label %66, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 3
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %20, 0.000000e+00
  br i1 %21, label %22, label %66

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 0
  %24 = load float, float* %23, align 4
  %25 = tail call float @llvm.fabs.f32(float %24) #9
  %26 = fcmp ugt float %25, %1
  br i1 %26, label %66, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 1
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, -1.000000e+00
  %31 = tail call float @llvm.fabs.f32(float %30) #9
  %32 = fcmp ugt float %31, %1
  br i1 %32, label %66, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 2
  %35 = load float, float* %34, align 4
  %36 = tail call float @llvm.fabs.f32(float %35) #9
  %37 = fcmp ugt float %36, %1
  br i1 %37, label %66, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 3
  %40 = load float, float* %39, align 4
  %41 = fcmp oeq float %40, 0.000000e+00
  br i1 %41, label %42, label %66

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 0
  %44 = load float, float* %43, align 4
  %45 = tail call float @llvm.fabs.f32(float %44) #9
  %46 = fcmp ugt float %45, %1
  br i1 %46, label %66, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 1
  %49 = load float, float* %48, align 4
  %50 = tail call float @llvm.fabs.f32(float %49) #9
  %51 = fcmp ugt float %50, %1
  br i1 %51, label %66, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 2
  %54 = load float, float* %53, align 4
  %55 = fadd float %54, -1.000000e+00
  %56 = tail call float @llvm.fabs.f32(float %55) #9
  %57 = fcmp ugt float %56, %1
  br i1 %57, label %66, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 3
  %60 = load float, float* %59, align 4
  %61 = fcmp oeq float %60, 0.000000e+00
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 3
  %64 = load float, float* %63, align 4
  %65 = fcmp oeq float %64, 1.000000e+00
  br label %66

66:                                               ; preds = %52, %47, %42, %33, %27, %22, %13, %8, %2, %62, %58, %38, %18
  %67 = phi i1 [ false, %58 ], [ false, %52 ], [ false, %47 ], [ false, %42 ], [ false, %38 ], [ false, %33 ], [ false, %27 ], [ false, %22 ], [ false, %18 ], [ false, %13 ], [ false, %8 ], [ false, %2 ], [ %65, %62 ]
  ret i1 %67
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform43IsApproximatelyIdentityOrIntegerTranslationEf(%"class.gfx::Transform"* nocapture readonly, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = fadd float %4, -1.000000e+00
  %6 = tail call float @llvm.fabs.f32(float %5) #9
  %7 = fcmp ugt float %6, %1
  br i1 %7, label %85, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 1
  %10 = load float, float* %9, align 4
  %11 = tail call float @llvm.fabs.f32(float %10) #9
  %12 = fcmp ugt float %11, %1
  br i1 %12, label %85, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 2
  %15 = load float, float* %14, align 4
  %16 = tail call float @llvm.fabs.f32(float %15) #9
  %17 = fcmp ugt float %16, %1
  br i1 %17, label %85, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 3
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %20, 0.000000e+00
  br i1 %21, label %22, label %85

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 0
  %24 = load float, float* %23, align 4
  %25 = tail call float @llvm.fabs.f32(float %24) #9
  %26 = fcmp ugt float %25, %1
  br i1 %26, label %85, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 1
  %29 = load float, float* %28, align 4
  %30 = fadd float %29, -1.000000e+00
  %31 = tail call float @llvm.fabs.f32(float %30) #9
  %32 = fcmp ugt float %31, %1
  br i1 %32, label %85, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 2
  %35 = load float, float* %34, align 4
  %36 = tail call float @llvm.fabs.f32(float %35) #9
  %37 = fcmp ugt float %36, %1
  br i1 %37, label %85, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 3
  %40 = load float, float* %39, align 4
  %41 = fcmp oeq float %40, 0.000000e+00
  br i1 %41, label %42, label %85

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 0
  %44 = load float, float* %43, align 4
  %45 = tail call float @llvm.fabs.f32(float %44) #9
  %46 = fcmp ugt float %45, %1
  br i1 %46, label %85, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 1
  %49 = load float, float* %48, align 4
  %50 = tail call float @llvm.fabs.f32(float %49) #9
  %51 = fcmp ugt float %50, %1
  br i1 %51, label %85, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 2
  %54 = load float, float* %53, align 4
  %55 = fadd float %54, -1.000000e+00
  %56 = tail call float @llvm.fabs.f32(float %55) #9
  %57 = fcmp ugt float %56, %1
  br i1 %57, label %85, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 3
  %60 = load float, float* %59, align 4
  %61 = fcmp oeq float %60, 0.000000e+00
  br i1 %61, label %62, label %85

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 3
  %64 = load float, float* %63, align 4
  %65 = fcmp oeq float %64, 1.000000e+00
  br i1 %65, label %66, label %85

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 0
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 1
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 2
  %72 = load float, float* %71, align 4
  %73 = fcmp oge float %68, 0xC1E0000000000000
  %74 = fcmp ole float %68, 0x41DFFFFFE0000000
  %75 = and i1 %74, %73
  br i1 %75, label %80, label %85

76:                                               ; preds = %80
  %77 = fcmp oge float %70, 0xC1E0000000000000
  %78 = fcmp ole float %70, 0x41DFFFFFE0000000
  %79 = and i1 %78, %77
  br i1 %79, label %87, label %85

80:                                               ; preds = %66
  %81 = call float @llvm.round.f32(float %68) #9
  %82 = fsub float %81, %68
  %83 = call float @llvm.fabs.f32(float %82) #9
  %84 = fcmp ogt float %83, %1
  br i1 %84, label %85, label %76

85:                                               ; preds = %66, %80, %76, %87, %92, %96, %62, %58, %52, %47, %42, %38, %33, %27, %22, %18, %13, %8, %2, %101
  %86 = phi i1 [ true, %101 ], [ false, %2 ], [ false, %8 ], [ false, %13 ], [ false, %18 ], [ false, %22 ], [ false, %27 ], [ false, %33 ], [ false, %38 ], [ false, %42 ], [ false, %47 ], [ false, %52 ], [ false, %58 ], [ false, %62 ], [ false, %96 ], [ false, %92 ], [ false, %87 ], [ false, %76 ], [ false, %80 ], [ false, %66 ]
  ret i1 %86

87:                                               ; preds = %76
  %88 = call float @llvm.round.f32(float %70) #9
  %89 = fsub float %88, %70
  %90 = call float @llvm.fabs.f32(float %89) #9
  %91 = fcmp ogt float %90, %1
  br i1 %91, label %85, label %92

92:                                               ; preds = %87
  %93 = fcmp oge float %72, 0xC1E0000000000000
  %94 = fcmp ole float %72, 0x41DFFFFFE0000000
  %95 = and i1 %94, %93
  br i1 %95, label %96, label %85

96:                                               ; preds = %92
  %97 = call float @llvm.round.f32(float %72) #9
  %98 = fsub float %97, %72
  %99 = call float @llvm.fabs.f32(float %98) #9
  %100 = fcmp ogt float %99, %1
  br i1 %100, label %85, label %101

101:                                              ; preds = %96
  br label %85
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform30IsIdentityOrIntegerTranslationEv(%"class.gfx::Transform"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %3 = load i8, i8* %2, align 4
  %4 = icmp ult i8 %3, 2
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 2
  %11 = load float, float* %10, align 4
  %12 = fcmp oge float %7, 0xC1E0000000000000
  %13 = fcmp ole float %7, 0x41DFFFFFE0000000
  %14 = and i1 %13, %12
  br i1 %14, label %19, label %23

15:                                               ; preds = %19
  %16 = fcmp oge float %9, 0xC1E0000000000000
  %17 = fcmp ole float %9, 0x41DFFFFFE0000000
  %18 = and i1 %17, %16
  br i1 %18, label %25, label %23

19:                                               ; preds = %5
  %20 = fptosi float %7 to i32
  %21 = sitofp i32 %20 to float
  %22 = fcmp une float %7, %21
  br i1 %22, label %23, label %15

23:                                               ; preds = %5, %19, %15, %25, %29, %33, %1, %37
  %24 = phi i1 [ true, %37 ], [ false, %1 ], [ false, %33 ], [ false, %29 ], [ false, %25 ], [ false, %15 ], [ false, %19 ], [ false, %5 ]
  ret i1 %24

25:                                               ; preds = %15
  %26 = fptosi float %9 to i32
  %27 = sitofp i32 %26 to float
  %28 = fcmp une float %9, %27
  br i1 %28, label %23, label %29

29:                                               ; preds = %25
  %30 = fcmp oge float %11, 0xC1E0000000000000
  %31 = fcmp ole float %11, 0x41DFFFFFE0000000
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %23

33:                                               ; preds = %29
  %34 = fptosi float %11 to i32
  %35 = sitofp i32 %34 to float
  %36 = fcmp une float %11, %35
  br i1 %36, label %23, label %37

37:                                               ; preds = %33
  br label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform17IsBackFaceVisibleEv(%"class.gfx::Transform"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %58, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %7 = tail call double @_ZNK10SkMatrix4411determinantEv(%class.SkMatrix44* %6) #9
  %8 = fcmp oeq double %7, 0.000000e+00
  br i1 %8, label %58, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 3
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 0
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 1
  %19 = load float, float* %18, align 4
  %20 = insertelement <2 x float> undef, float %11, i32 0
  %21 = insertelement <2 x float> %20, float %17, i32 1
  %22 = insertelement <2 x float> undef, float %13, i32 0
  %23 = insertelement <2 x float> %22, float %19, i32 1
  %24 = fmul <2 x float> %21, %23
  %25 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 3
  %26 = load float, float* %25, align 4
  %27 = insertelement <2 x float> undef, float %15, i32 0
  %28 = insertelement <2 x float> %27, float %26, i32 1
  %29 = fmul <2 x float> %24, %28
  %30 = fpext <2 x float> %29 to <2 x double>
  %31 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 0
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 1
  %34 = load float, float* %33, align 4
  %35 = fmul float %32, %34
  %36 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 3
  %37 = load float, float* %36, align 4
  %38 = fmul float %35, %37
  %39 = fpext float %38 to double
  %40 = fmul float %11, %19
  %41 = fmul float %40, %37
  %42 = fpext float %41 to double
  %43 = fmul float %17, %34
  %44 = fmul float %15, %43
  %45 = fpext float %44 to double
  %46 = fmul float %13, %32
  %47 = fmul float %26, %46
  %48 = fpext float %47 to double
  %49 = extractelement <2 x double> %30, i32 0
  %50 = extractelement <2 x double> %30, i32 1
  %51 = fadd double %49, %50
  %52 = fadd double %51, %39
  %53 = fsub double %52, %42
  %54 = fsub double %53, %45
  %55 = fsub double %54, %48
  %56 = fmul double %7, %55
  %57 = fcmp olt double %56, 0xBE80000000000000
  br label %58

58:                                               ; preds = %9, %5, %1
  %59 = phi i1 [ false, %1 ], [ %57, %9 ], [ false, %5 ]
  ret i1 %59
}

declare double @_ZNK10SkMatrix4411determinantEv(%class.SkMatrix44*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK10SkMatrix446invertEPS_(%class.SkMatrix44* %3, %class.SkMatrix44* %4) #9
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %4) #9
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ false, %6 ], [ true, %2 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK10SkMatrix446invertEPS_(%class.SkMatrix44*, %class.SkMatrix44*) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform24Preserves2dAxisAlignmentEv(%"class.gfx::Transform"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 3
  %3 = load float, float* %2, align 4
  %4 = fcmp une float %3, 0.000000e+00
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 3
  %7 = load float, float* %6, align 4
  %8 = fcmp oeq float %7, 0.000000e+00
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  %11 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 0
  %12 = bitcast %"class.gfx::Transform"* %0 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %13)
  %15 = fcmp ogt <2 x float> %14, <float 0x3E80000000000000, float 0x3E80000000000000>
  %16 = extractelement <2 x i1> %15, i32 0
  %17 = extractelement <2 x i1> %15, i32 1
  %18 = and i1 %16, %17
  %19 = bitcast float* %11 to <2 x float>*
  %20 = load <2 x float>, <2 x float>* %19, align 4
  %21 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %20)
  %22 = fcmp ogt <2 x float> %21, <float 0x3E80000000000000, float 0x3E80000000000000>
  %23 = extractelement <2 x i1> %22, i32 0
  %24 = extractelement <2 x i1> %22, i32 1
  %25 = and i1 %23, %24
  %26 = and <2 x i1> %15, %22
  %27 = extractelement <2 x i1> %26, i32 0
  %28 = extractelement <2 x i1> %26, i32 1
  %29 = or i1 %27, %28
  %30 = or i1 %18, %29
  %31 = or i1 %25, %30
  %32 = xor i1 %31, true
  %33 = and i1 %10, %32
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform9TransposeEv(%"class.gfx::Transform"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  tail call void @_ZN10SkMatrix449transposeEv(%class.SkMatrix44* %2) #9
  ret void
}

declare void @_ZN10SkMatrix449transposeEv(%class.SkMatrix44*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform11FlattenTo2dEv(%"class.gfx::Transform"*) local_unnamed_addr #0 align 2 {
  %2 = alloca [16 x float], align 16
  %3 = bitcast [16 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -1, i64 64, i1 false)
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %5 = getelementptr inbounds [16 x float], [16 x float]* %2, i64 0, i64 0
  call void @_ZNK10SkMatrix4411asColMajorfEPf(%class.SkMatrix44* %4, float* nonnull %5) #9
  %6 = getelementptr inbounds [16 x float], [16 x float]* %2, i64 0, i64 2
  store float 0.000000e+00, float* %6, align 8
  %7 = getelementptr inbounds [16 x float], [16 x float]* %2, i64 0, i64 6
  store float 0.000000e+00, float* %7, align 8
  %8 = getelementptr inbounds [16 x float], [16 x float]* %2, i64 0, i64 8
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %9, align 16
  %10 = getelementptr inbounds [16 x float], [16 x float]* %2, i64 0, i64 14
  store float 0.000000e+00, float* %10, align 8
  call void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44* %4, float* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK10SkMatrix4411asColMajorfEPf(%class.SkMatrix44*, float*) local_unnamed_addr #1

declare void @_ZN10SkMatrix4412setColMajorfEPKf(%class.SkMatrix44*, float*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform6IsFlatEv(%"class.gfx::Transform"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 2
  %3 = load float, float* %2, align 4
  %4 = fcmp oeq float %3, 0.000000e+00
  br i1 %4, label %5, label %29

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 2
  %7 = load float, float* %6, align 4
  %8 = fcmp oeq float %7, 0.000000e+00
  br i1 %8, label %9, label %29

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 0
  %11 = load float, float* %10, align 4
  %12 = fcmp oeq float %11, 0.000000e+00
  br i1 %12, label %13, label %29

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 1
  %15 = load float, float* %14, align 4
  %16 = fcmp oeq float %15, 0.000000e+00
  br i1 %16, label %17, label %29

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 2
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %19, 1.000000e+00
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 3
  %23 = load float, float* %22, align 4
  %24 = fcmp oeq float %23, 0.000000e+00
  br i1 %24, label %25, label %29

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 2
  %27 = load float, float* %26, align 4
  %28 = fcmp oeq float %27, 0.000000e+00
  br label %29

29:                                               ; preds = %25, %21, %17, %13, %9, %5, %1
  %30 = phi i1 [ false, %21 ], [ false, %17 ], [ false, %13 ], [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %28, %25 ]
  ret i1 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK3gfx9Transform15To2dTranslationEv(%"class.gfx::Transform"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 0
  %3 = bitcast float* %2 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  ret <2 x float> %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform14TransformPointEPNS_5PointE(%"class.gfx::Transform"*, %"class.gfx::Point"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x float], align 16
  %4 = alloca %"class.gfx::PointF", align 4
  %5 = bitcast %"class.gfx::PointF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sitofp i32 %9 to float
  %11 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  store float %10, float* %6, align 4
  store float %13, float* %7, align 4
  %14 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %15 = load i8, i8* %14, align 4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %19 = bitcast [4 x float]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  %20 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 0
  %21 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 1
  %22 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 2
  %23 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 3
  %24 = bitcast %"class.gfx::PointF"* %4 to i32*
  %25 = bitcast [4 x float]* %3 to i32*
  store float %10, float* %20, align 16
  %26 = bitcast float* %7 to i32*
  %27 = bitcast float* %21 to i32*
  store float %13, float* %21, align 4
  store float 0.000000e+00, float* %22, align 8
  store float 1.000000e+00, float* %23, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* %18, float* nonnull %20, float* nonnull %20) #9
  %28 = load i32, i32* %25, align 16
  %29 = load i32, i32* %27, align 4
  store i32 %28, i32* %24, align 4
  store i32 %29, i32* %26, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  br label %30

30:                                               ; preds = %2, %17
  %31 = call i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* nonnull dereferenceable(8) %4) #9
  %32 = bitcast %"class.gfx::Point"* %1 to i64*
  store i64 %31, i64* %32, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform22TransformPointInternalERK10SkMatrix44PNS_5PointE(%"class.gfx::Transform"* nocapture readnone, %class.SkMatrix44* dereferenceable(68), %"class.gfx::Point"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = alloca %"class.gfx::PointF", align 4
  %6 = bitcast %"class.gfx::PointF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sitofp i32 %10 to float
  %12 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  store float %11, float* %7, align 4
  store float %14, float* %8, align 4
  %15 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %1, i64 0, i32 1
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %3
  %19 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  %20 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %21 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %22 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %23 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %24 = bitcast %"class.gfx::PointF"* %5 to i32*
  %25 = bitcast [4 x float]* %4 to i32*
  %26 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  store float %11, float* %26, align 16
  %27 = bitcast float* %8 to i32*
  %28 = bitcast float* %21 to i32*
  store float %14, float* %21, align 4
  store float 0.000000e+00, float* %22, align 8
  store float 1.000000e+00, float* %23, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* %1, float* nonnull %20, float* nonnull %20) #9
  %29 = load i32, i32* %25, align 16
  %30 = load i32, i32* %28, align 4
  store i32 %29, i32* %24, align 4
  store i32 %30, i32* %27, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  br label %31

31:                                               ; preds = %3, %18
  %32 = call i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* nonnull dereferenceable(8) %5) #9
  %33 = bitcast %"class.gfx::Point"* %2 to i64*
  store i64 %32, i64* %33, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform14TransformPointEPNS_6PointFE(%"class.gfx::Transform"*, %"class.gfx::PointF"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x float], align 16
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %9 = bitcast [4 x float]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 0
  %11 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 1
  %12 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 2
  %13 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 3
  %14 = bitcast %"class.gfx::PointF"* %1 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast [4 x float]* %3 to i32*
  store i32 %15, i32* %16, align 16
  %17 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %11 to i32*
  store i32 %19, i32* %20, align 4
  store float 0.000000e+00, float* %12, align 8
  store float 1.000000e+00, float* %13, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* %8, float* nonnull %10, float* nonnull %10) #9
  %21 = load i32, i32* %16, align 16
  %22 = load i32, i32* %20, align 4
  store i32 %21, i32* %14, align 4
  store i32 %22, i32* %18, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  br label %23

23:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform22TransformPointInternalERK10SkMatrix44PNS_6PointFE(%"class.gfx::Transform"* nocapture readnone, %class.SkMatrix44* dereferenceable(68), %"class.gfx::PointF"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %3
  %9 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %11 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %12 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %13 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %14 = bitcast %"class.gfx::PointF"* %2 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast [4 x float]* %4 to i32*
  store i32 %15, i32* %16, align 16
  %17 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %11 to i32*
  store i32 %19, i32* %20, align 4
  store float 0.000000e+00, float* %12, align 8
  store float 1.000000e+00, float* %13, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* %1, float* nonnull %10, float* nonnull %10) #9
  %21 = load i32, i32* %16, align 16
  %22 = load i32, i32* %20, align 4
  store i32 %21, i32* %14, align 4
  store i32 %22, i32* %18, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  br label %23

23:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform14TransformPointEPNS_7Point3FE(%"class.gfx::Transform"*, %"class.gfx::Point3F"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x float], align 16
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %43, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %9 = bitcast [4 x float]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 0
  %11 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 1
  %12 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 2
  %13 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 3
  %14 = bitcast %"class.gfx::Point3F"* %1 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast [4 x float]* %3 to i32*
  store i32 %15, i32* %16, align 16
  %17 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %1, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %11 to i32*
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %1, i64 0, i32 2
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast float* %12 to i32*
  store i32 %23, i32* %24, align 8
  store float 1.000000e+00, float* %13, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* %8, float* nonnull %10, float* nonnull %10) #9
  %25 = load float, float* %13, align 4
  %26 = fcmp une float %25, 1.000000e+00
  %27 = fcmp une float %25, 0.000000e+00
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %38

29:                                               ; preds = %7
  %30 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %1, i64 0, i32 0
  %31 = fdiv float 1.000000e+00, %25
  %32 = load float, float* %10, align 16
  %33 = fmul float %31, %32
  %34 = load float, float* %11, align 4
  %35 = fmul float %31, %34
  %36 = load float, float* %12, align 8
  %37 = fmul float %31, %36
  store float %33, float* %30, align 4
  store float %35, float* %17, align 4
  store float %37, float* %21, align 4
  br label %42

38:                                               ; preds = %7
  %39 = load i32, i32* %16, align 16
  %40 = load i32, i32* %20, align 4
  %41 = load i32, i32* %24, align 8
  store i32 %39, i32* %14, align 4
  store i32 %40, i32* %18, align 4
  store i32 %41, i32* %22, align 4
  br label %42

42:                                               ; preds = %38, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  br label %43

43:                                               ; preds = %2, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform22TransformPointInternalERK10SkMatrix44PNS_7Point3FE(%"class.gfx::Transform"* nocapture readnone, %class.SkMatrix44* dereferenceable(68), %"class.gfx::Point3F"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %43, label %8

8:                                                ; preds = %3
  %9 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %11 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %12 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %13 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %14 = bitcast %"class.gfx::Point3F"* %2 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast [4 x float]* %4 to i32*
  store i32 %15, i32* %16, align 16
  %17 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %2, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %11 to i32*
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %2, i64 0, i32 2
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast float* %12 to i32*
  store i32 %23, i32* %24, align 8
  store float 1.000000e+00, float* %13, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* %1, float* nonnull %10, float* nonnull %10) #9
  %25 = load float, float* %13, align 4
  %26 = fcmp une float %25, 1.000000e+00
  %27 = fcmp une float %25, 0.000000e+00
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %38

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %2, i64 0, i32 0
  %31 = fdiv float 1.000000e+00, %25
  %32 = load float, float* %10, align 16
  %33 = fmul float %31, %32
  %34 = load float, float* %11, align 4
  %35 = fmul float %31, %34
  %36 = load float, float* %12, align 8
  %37 = fmul float %31, %36
  store float %33, float* %30, align 4
  store float %35, float* %17, align 4
  store float %37, float* %21, align 4
  br label %42

38:                                               ; preds = %8
  %39 = load i32, i32* %16, align 16
  %40 = load i32, i32* %20, align 4
  %41 = load i32, i32* %24, align 8
  store i32 %39, i32* %14, align 4
  store i32 %40, i32* %18, align 4
  store i32 %41, i32* %22, align 4
  br label %42

42:                                               ; preds = %38, %29
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  br label %43

43:                                               ; preds = %3, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform15TransformVectorEPNS_9Vector3dFE(%"class.gfx::Transform"*, %"class.gfx::Vector3dF"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x float], align 16
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %9 = bitcast [4 x float]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 0
  %11 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 1
  %12 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 2
  %13 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 3
  %14 = bitcast %"class.gfx::Vector3dF"* %1 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast [4 x float]* %3 to i32*
  store i32 %15, i32* %16, align 16
  %17 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %11 to i32*
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %1, i64 0, i32 2
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast float* %12 to i32*
  store i32 %23, i32* %24, align 8
  store float 0.000000e+00, float* %13, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* %8, float* nonnull %10, float* nonnull %10) #9
  %25 = load i32, i32* %16, align 16
  store i32 %25, i32* %14, align 4
  %26 = load i32, i32* %20, align 4
  store i32 %26, i32* %18, align 4
  %27 = load i32, i32* %24, align 8
  store i32 %27, i32* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  br label %28

28:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform23TransformVectorInternalERK10SkMatrix44PNS_9Vector3dFE(%"class.gfx::Transform"* nocapture readnone, %class.SkMatrix44* dereferenceable(68), %"class.gfx::Vector3dF"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca [4 x float], align 16
  %5 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %3
  %9 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #9
  %10 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %11 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %12 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %13 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %14 = bitcast %"class.gfx::Vector3dF"* %2 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast [4 x float]* %4 to i32*
  store i32 %15, i32* %16, align 16
  %17 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %2, i64 0, i32 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast float* %11 to i32*
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.gfx::Vector3dF", %"class.gfx::Vector3dF"* %2, i64 0, i32 2
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast float* %12 to i32*
  store i32 %23, i32* %24, align 8
  store float 0.000000e+00, float* %13, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* %1, float* nonnull %10, float* nonnull %10) #9
  %25 = load i32, i32* %16, align 16
  store i32 %25, i32* %14, align 4
  %26 = load i32, i32* %20, align 4
  store i32 %26, i32* %18, align 4
  %27 = load i32, i32* %24, align 8
  store i32 %27, i32* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #9
  br label %28

28:                                               ; preds = %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform21TransformPointReverseEPNS_5PointE(%"class.gfx::Transform"*, %"class.gfx::Point"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x float], align 16
  %4 = alloca %"class.gfx::PointF", align 4
  %5 = alloca %class.SkMatrix44, align 4
  %6 = bitcast %class.SkMatrix44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %6) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 bitcast (%class.SkMatrix44* @__const._ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE.inverse to i8*), i64 68, i1 false)
  %7 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %8 = call zeroext i1 @_ZNK10SkMatrix446invertEPS_(%class.SkMatrix44* %7, %class.SkMatrix44* nonnull %5) #9
  br i1 %8, label %9, label %37

9:                                                ; preds = %2
  %10 = bitcast %"class.gfx::PointF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 0
  %12 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  store float %15, float* %11, align 4
  store float %18, float* %12, align 4
  %19 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %5, i64 0, i32 1
  %20 = load i8, i8* %19, align 4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %9
  %23 = bitcast [4 x float]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #9
  %24 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 0
  %25 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 1
  %26 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 2
  %27 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 3
  %28 = bitcast %"class.gfx::PointF"* %4 to i32*
  %29 = bitcast [4 x float]* %3 to i32*
  store float %15, float* %24, align 16
  %30 = bitcast float* %12 to i32*
  %31 = bitcast float* %25 to i32*
  store float %18, float* %25, align 4
  store float 0.000000e+00, float* %26, align 8
  store float 1.000000e+00, float* %27, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* nonnull %5, float* nonnull %24, float* nonnull %24) #9
  %32 = load i32, i32* %29, align 16
  %33 = load i32, i32* %31, align 4
  store i32 %32, i32* %28, align 4
  store i32 %33, i32* %30, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #9
  br label %34

34:                                               ; preds = %9, %22
  %35 = call i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* nonnull dereferenceable(8) %4) #9
  %36 = bitcast %"class.gfx::Point"* %1 to i64*
  store i64 %35, i64* %36, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  br label %37

37:                                               ; preds = %2, %34
  %38 = phi i1 [ true, %34 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %6) #9
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform21TransformPointReverseEPNS_7Point3FE(%"class.gfx::Transform"*, %"class.gfx::Point3F"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x float], align 16
  %4 = alloca %class.SkMatrix44, align 4
  %5 = bitcast %class.SkMatrix44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %5) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %5, i8* align 4 bitcast (%class.SkMatrix44* @__const._ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE.inverse to i8*), i64 68, i1 false)
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %7 = call zeroext i1 @_ZNK10SkMatrix446invertEPS_(%class.SkMatrix44* %6, %class.SkMatrix44* nonnull %4) #9
  br i1 %7, label %8, label %47

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkMatrix44, %class.SkMatrix44* %4, i64 0, i32 1
  %10 = load i8, i8* %9, align 4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %47, label %12

12:                                               ; preds = %8
  %13 = bitcast [4 x float]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9
  %14 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 0
  %15 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 1
  %16 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 2
  %17 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 3
  %18 = bitcast %"class.gfx::Point3F"* %1 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = bitcast [4 x float]* %3 to i32*
  store i32 %19, i32* %20, align 16
  %21 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %1, i64 0, i32 1
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast float* %15 to i32*
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %1, i64 0, i32 2
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = bitcast float* %16 to i32*
  store i32 %27, i32* %28, align 8
  store float 1.000000e+00, float* %17, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* nonnull %4, float* nonnull %14, float* nonnull %14) #9
  %29 = load float, float* %17, align 4
  %30 = fcmp une float %29, 1.000000e+00
  %31 = fcmp une float %29, 0.000000e+00
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %42

33:                                               ; preds = %12
  %34 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %1, i64 0, i32 0
  %35 = fdiv float 1.000000e+00, %29
  %36 = load float, float* %14, align 16
  %37 = fmul float %35, %36
  %38 = load float, float* %15, align 4
  %39 = fmul float %35, %38
  %40 = load float, float* %16, align 8
  %41 = fmul float %35, %40
  store float %37, float* %34, align 4
  store float %39, float* %21, align 4
  store float %41, float* %25, align 4
  br label %46

42:                                               ; preds = %12
  %43 = load i32, i32* %20, align 16
  %44 = load i32, i32* %24, align 4
  %45 = load i32, i32* %28, align 8
  store i32 %43, i32* %18, align 4
  store i32 %44, i32* %22, align 4
  store i32 %45, i32* %26, align 4
  br label %46

46:                                               ; preds = %42, %33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9
  br label %47

47:                                               ; preds = %46, %8, %2
  %48 = phi i1 [ false, %2 ], [ true, %8 ], [ true, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %5) #9
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"*, %"class.gfx::RectF"*) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %struct.SkRect*
  %5 = alloca %class.SkMatrix, align 4
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %11 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = tail call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %1) #9
  %13 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 0
  store <2 x float> %14, <2 x float>* %13, align 8
  %15 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %16 = extractvalue { <2 x float>, <2 x float> } %12, 1
  store <2 x float> %16, <2 x float>* %15, align 8
  %17 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #9
  call void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* nonnull sret %5, %class.SkMatrix44* %10) #9
  %18 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %5, %struct.SkRect* nonnull %4, %struct.SkRect* nonnull dereferenceable(16) %4, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #9
  %19 = call { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* nonnull dereferenceable(16) %4) #9
  %20 = extractvalue { <2 x float>, <2 x float> } %19, 0
  %21 = extractvalue { <2 x float>, <2 x float> } %19, 1
  %22 = bitcast %"class.gfx::RectF"* %1 to <2 x float>*
  store <2 x float> %20, <2 x float>* %22, align 4
  %23 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1
  %24 = bitcast %"class.gfx::SizeF"* %23 to <2 x float>*
  store <2 x float> %21, <2 x float>* %24, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  br label %25

25:                                               ; preds = %2, %9
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* sret, %class.SkMatrix44*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE(%"class.gfx::Transform"*, %"class.gfx::RectF"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix44, align 4
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = alloca %class.SkMatrix, align 4
  %7 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %12 = bitcast %class.SkMatrix44* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %12) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %12, i8* align 4 bitcast (%class.SkMatrix44* @__const._ZNK3gfx9Transform20TransformRectReverseEPNS_5RectFE.inverse to i8*), i64 68, i1 false)
  %13 = call zeroext i1 @_ZNK10SkMatrix446invertEPS_(%class.SkMatrix44* %11, %class.SkMatrix44* nonnull %3) #9
  br i1 %13, label %14, label %29

14:                                               ; preds = %10
  %15 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16) %1) #9
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 0
  store <2 x float> %18, <2 x float>* %17, align 8
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %20 = extractvalue { <2 x float>, <2 x float> } %16, 1
  store <2 x float> %20, <2 x float>* %19, align 8
  %21 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #9
  call void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* nonnull sret %6, %class.SkMatrix44* nonnull %3) #9
  %22 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %6, %struct.SkRect* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %5, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #9
  %23 = call { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* nonnull dereferenceable(16) %5) #9
  %24 = extractvalue { <2 x float>, <2 x float> } %23, 0
  %25 = extractvalue { <2 x float>, <2 x float> } %23, 1
  %26 = bitcast %"class.gfx::RectF"* %1 to <2 x float>*
  store <2 x float> %24, <2 x float>* %26, align 4
  %27 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %1, i64 0, i32 1
  %28 = bitcast %"class.gfx::SizeF"* %27 to <2 x float>*
  store <2 x float> %25, <2 x float>* %28, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  br label %29

29:                                               ; preds = %10, %14
  %30 = phi i1 [ true, %14 ], [ false, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %12) #9
  br label %31

31:                                               ; preds = %2, %29
  %32 = phi i1 [ %30, %29 ], [ true, %2 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform15TransformRRectFEPNS_6RRectFE(%"class.gfx::Transform"*, %"class.gfx::RRectF"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkRRect, align 4
  %4 = alloca %class.SkRRect, align 4
  %5 = alloca %class.SkMatrix, align 4
  %6 = bitcast %class.SkRRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 0, i64 52, i1 false) #9
  %7 = bitcast %class.SkRRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %7) #9
  %8 = bitcast %"class.gfx::RRectF"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %8, i64 52, i1 false) #9
  %9 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  call void @_ZNK10SkMatrix44cv8SkMatrixEv(%class.SkMatrix* nonnull sret %5, %class.SkMatrix44* %10) #9
  %11 = call zeroext i1 @_ZNK7SkRRect9transformERK8SkMatrixPS_(%class.SkRRect* nonnull %4, %class.SkMatrix* nonnull dereferenceable(40) %5, %class.SkRRect* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %7) #9
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* nonnull align 4 %6, i64 52, i1 false)
  br label %13

13:                                               ; preds = %2, %12
  %14 = phi i1 [ true, %12 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %6) #9
  ret i1 %14
}

declare zeroext i1 @_ZNK7SkRRect9transformERK8SkMatrixPS_(%class.SkRRect*, %class.SkMatrix* dereferenceable(40), %class.SkRRect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform12TransformBoxEPNS_4BoxFE(%"class.gfx::Transform"*, %"class.gfx::BoxF"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca [4 x float], align 16
  %4 = alloca %"class.gfx::BoxF", align 4
  %5 = alloca %"class.gfx::Point3F", align 4
  %6 = bitcast %"class.gfx::BoxF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 0, i64 24, i1 false) #9
  %7 = bitcast %"class.gfx::Point3F"* %5 to i8*
  %8 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %5, i64 0, i32 0
  %9 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %5, i64 0, i32 1
  %10 = getelementptr inbounds %"class.gfx::Point3F", %"class.gfx::Point3F"* %5, i64 0, i32 2
  %11 = bitcast %"class.gfx::BoxF"* %1 to i8*
  %12 = getelementptr inbounds %"class.gfx::BoxF", %"class.gfx::BoxF"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.gfx::BoxF", %"class.gfx::BoxF"* %1, i64 0, i32 2
  %14 = getelementptr inbounds %"class.gfx::BoxF", %"class.gfx::BoxF"* %1, i64 0, i32 3
  %15 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %17 = bitcast [4 x float]* %3 to i8*
  %18 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 0
  %19 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 1
  %20 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 2
  %21 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 3
  %22 = bitcast %"class.gfx::Point3F"* %5 to i32*
  %23 = bitcast [4 x float]* %3 to i32*
  %24 = bitcast float* %9 to i32*
  %25 = bitcast float* %19 to i32*
  %26 = bitcast float* %10 to i32*
  %27 = bitcast float* %20 to i32*
  %28 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, i64 0
  br label %30

29:                                               ; preds = %82
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* nonnull align 4 %6, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void

30:                                               ; preds = %82, %2
  %31 = phi i32 [ 0, %2 ], [ %84, %82 ]
  %32 = phi i8 [ 1, %2 ], [ %83, %82 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %11, i64 12, i1 false)
  %33 = and i32 %31, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %30
  %36 = load float, float* %12, align 4
  br label %37

37:                                               ; preds = %30, %35
  %38 = phi float [ %36, %35 ], [ 0.000000e+00, %30 ]
  %39 = and i32 %31, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = load float, float* %13, align 4
  br label %43

43:                                               ; preds = %37, %41
  %44 = phi float [ %42, %41 ], [ 0.000000e+00, %37 ]
  %45 = and i32 %31, 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = load float, float* %14, align 4
  br label %49

49:                                               ; preds = %43, %47
  %50 = phi float [ %48, %47 ], [ 0.000000e+00, %43 ]
  %51 = load float, float* %8, align 4
  %52 = fadd float %38, %51
  store float %52, float* %8, align 4
  %53 = load float, float* %9, align 4
  %54 = fadd float %44, %53
  store float %54, float* %9, align 4
  %55 = load float, float* %10, align 4
  %56 = fadd float %50, %55
  store float %56, float* %10, align 4
  %57 = load i8, i8* %15, align 4
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %77, label %59

59:                                               ; preds = %49
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #9
  store float %52, float* %28, align 16
  store float %54, float* %19, align 4
  store float %56, float* %20, align 8
  store float 1.000000e+00, float* %21, align 4
  call void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44* %16, float* nonnull %18, float* nonnull %18) #9
  %60 = load float, float* %21, align 4
  %61 = fcmp une float %60, 1.000000e+00
  %62 = fcmp une float %60, 0.000000e+00
  %63 = and i1 %61, %62
  br i1 %63, label %64, label %72

64:                                               ; preds = %59
  %65 = fdiv float 1.000000e+00, %60
  %66 = load float, float* %18, align 16
  %67 = fmul float %65, %66
  %68 = load float, float* %19, align 4
  %69 = fmul float %65, %68
  %70 = load float, float* %20, align 8
  %71 = fmul float %65, %70
  store float %67, float* %8, align 4
  store float %69, float* %9, align 4
  store float %71, float* %10, align 4
  br label %76

72:                                               ; preds = %59
  %73 = load i32, i32* %23, align 16
  %74 = load i32, i32* %25, align 4
  %75 = load i32, i32* %27, align 8
  store i32 %73, i32* %22, align 4
  store i32 %74, i32* %24, align 4
  store i32 %75, i32* %26, align 4
  br label %76

76:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #9
  br label %77

77:                                               ; preds = %49, %76
  %78 = and i8 %32, 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %77
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* nonnull align 4 %7, i64 12, i1 false) #9
  br label %82

81:                                               ; preds = %77
  call void @_ZN3gfx4BoxF8ExpandToERKNS_7Point3FE(%"class.gfx::BoxF"* nonnull %4, %"class.gfx::Point3F"* nonnull dereferenceable(12) %5) #9
  br label %82

82:                                               ; preds = %81, %80
  %83 = phi i8 [ 0, %80 ], [ %32, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %7) #9
  %84 = add nuw nsw i32 %31, 1
  %85 = icmp eq i32 %84, 8
  br i1 %85, label %29, label %30
}

declare void @_ZN3gfx4BoxF8ExpandToERKNS_7Point3FE(%"class.gfx::BoxF"*, %"class.gfx::Point3F"* dereferenceable(12)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform19TransformBoxReverseEPNS_4BoxFE(%"class.gfx::Transform"*, %"class.gfx::BoxF"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Transform", align 4
  %4 = bitcast %"class.gfx::Transform"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %4) #9
  %5 = bitcast %"class.gfx::Transform"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %5, i64 68, i1 false) #9
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %3, i64 0, i32 0
  %8 = call zeroext i1 @_ZNK10SkMatrix446invertEPS_(%class.SkMatrix44* %6, %class.SkMatrix44* nonnull %7) #9
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* nonnull %7) #9
  br label %11

10:                                               ; preds = %2
  call void @_ZNK3gfx9Transform12TransformBoxEPNS_4BoxFE(%"class.gfx::Transform"* nonnull %3, %"class.gfx::BoxF"* %1)
  br label %11

11:                                               ; preds = %9, %10
  %12 = phi i1 [ true, %10 ], [ false, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %4) #9
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx9Transform5BlendERKS0_d(%"class.gfx::Transform"*, %"class.gfx::Transform"* dereferenceable(68), double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.gfx::DecomposedTransform", align 8
  %5 = alloca %"struct.gfx::DecomposedTransform", align 8
  %6 = alloca %"struct.gfx::DecomposedTransform", align 8
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = bitcast %"struct.gfx::DecomposedTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast ({ [3 x float], [3 x float], [3 x float], [4 x float], [4 x i8], %"class.gfx::Quaternion" }* @__const._ZN3gfx9Transform5BlendERKS0_d.from_decomp to i8*), i64 88, i1 false)
  call void @_ZN3gfx19DecomposedTransformC1Ev(%"struct.gfx::DecomposedTransform"* nonnull %4) #9
  %9 = bitcast %"struct.gfx::DecomposedTransform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %9) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast ({ [3 x float], [3 x float], [3 x float], [4 x float], [4 x i8], %"class.gfx::Quaternion" }* @__const._ZN3gfx9Transform5BlendERKS0_d.from_decomp to i8*), i64 88, i1 false)
  call void @_ZN3gfx19DecomposedTransformC1Ev(%"struct.gfx::DecomposedTransform"* nonnull %5) #9
  %10 = call zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"* nonnull %4, %"class.gfx::Transform"* dereferenceable(68) %0) #9
  br i1 %10, label %11, label %17

11:                                               ; preds = %3
  %12 = call zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"* nonnull %5, %"class.gfx::Transform"* dereferenceable(68) %1) #9
  br i1 %12, label %13, label %17

13:                                               ; preds = %11
  %14 = bitcast %"struct.gfx::DecomposedTransform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %14) #9
  call void @_ZN3gfx25BlendDecomposedTransformsERKNS_19DecomposedTransformES2_d(%"struct.gfx::DecomposedTransform"* nonnull sret %6, %"struct.gfx::DecomposedTransform"* nonnull dereferenceable(88) %4, %"struct.gfx::DecomposedTransform"* nonnull dereferenceable(88) %5, double %2) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %14, i64 88, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %14) #9
  %15 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %15) #9
  call void @_ZN3gfx16ComposeTransformERKNS_19DecomposedTransformE(%"class.gfx::Transform"* nonnull sret %7, %"struct.gfx::DecomposedTransform"* nonnull dereferenceable(88) %4) #9
  %16 = bitcast %"class.gfx::Transform"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* nonnull align 4 %15, i64 65, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %15) #9
  br label %17

17:                                               ; preds = %3, %11, %13
  %18 = phi i1 [ true, %13 ], [ false, %11 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #9
  ret i1 %18
}

declare void @_ZN3gfx19DecomposedTransformC1Ev(%"struct.gfx::DecomposedTransform"*) unnamed_addr #1

declare zeroext i1 @_ZN3gfx18DecomposeTransformEPNS_19DecomposedTransformERKNS_9TransformE(%"struct.gfx::DecomposedTransform"*, %"class.gfx::Transform"* dereferenceable(68)) local_unnamed_addr #1

declare void @_ZN3gfx25BlendDecomposedTransformsERKNS_19DecomposedTransformES2_d(%"struct.gfx::DecomposedTransform"* sret, %"struct.gfx::DecomposedTransform"* dereferenceable(88), %"struct.gfx::DecomposedTransform"* dereferenceable(88), double) local_unnamed_addr #1

declare void @_ZN3gfx16ComposeTransformERKNS_19DecomposedTransformE(%"class.gfx::Transform"* sret, %"struct.gfx::DecomposedTransform"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx9Transform26RoundTranslationComponentsEv(%"class.gfx::Transform"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 0
  %4 = load float, float* %3, align 4
  %5 = tail call float @llvm.round.f32(float %4) #9
  store float %5, float* %3, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %2) #9
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 1
  %7 = load float, float* %6, align 4
  %8 = tail call float @llvm.round.f32(float %7) #9
  store float %8, float* %6, align 4
  tail call void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44* %2) #9
  ret void
}

declare i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gfx9Transform18ApproximatelyEqualERKS0_(%"class.gfx::Transform"* nocapture readonly, %"class.gfx::Transform"* nocapture readonly dereferenceable(68)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 0, i64 0
  %6 = load float, float* %5, align 4
  %7 = fsub float %4, %6
  %8 = tail call float @llvm.fabs.f32(float %7) #9
  %9 = fcmp ule float %8, 0x3FB99999A0000000
  br i1 %9, label %10, label %18

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 0
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 1, i64 0
  %14 = load float, float* %13, align 4
  %15 = fsub float %12, %14
  %16 = tail call float @llvm.fabs.f32(float %15) #9
  %17 = fcmp ule float %16, 0x3FB99999A0000000
  br i1 %17, label %20, label %18

18:                                               ; preds = %2, %10, %20, %28, %36, %44, %52, %60, %68, %76, %84, %92, %100, %108, %116, %124, %132
  %19 = phi i1 [ true, %132 ], [ false, %124 ], [ false, %116 ], [ false, %108 ], [ false, %100 ], [ false, %92 ], [ false, %84 ], [ false, %76 ], [ false, %68 ], [ false, %60 ], [ false, %52 ], [ false, %44 ], [ false, %36 ], [ false, %28 ], [ false, %20 ], [ false, %10 ], [ false, %2 ]
  ret i1 %19

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 0
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 2, i64 0
  %24 = load float, float* %23, align 4
  %25 = fsub float %22, %24
  %26 = tail call float @llvm.fabs.f32(float %25) #9
  %27 = fcmp ule float %26, 0x3FB99999A0000000
  br i1 %27, label %28, label %18

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 0
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 3, i64 0
  %32 = load float, float* %31, align 4
  %33 = fsub float %30, %32
  %34 = tail call float @llvm.fabs.f32(float %33) #9
  %35 = fcmp ule float %34, 1.000000e+00
  br i1 %35, label %36, label %18

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 1
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 0, i64 1
  %40 = load float, float* %39, align 4
  %41 = fsub float %38, %40
  %42 = tail call float @llvm.fabs.f32(float %41) #9
  %43 = fcmp ule float %42, 0x3FB99999A0000000
  br i1 %43, label %44, label %18

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 1
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 1, i64 1
  %48 = load float, float* %47, align 4
  %49 = fsub float %46, %48
  %50 = tail call float @llvm.fabs.f32(float %49) #9
  %51 = fcmp ule float %50, 0x3FB99999A0000000
  br i1 %51, label %52, label %18

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 1
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 2, i64 1
  %56 = load float, float* %55, align 4
  %57 = fsub float %54, %56
  %58 = tail call float @llvm.fabs.f32(float %57) #9
  %59 = fcmp ule float %58, 0x3FB99999A0000000
  br i1 %59, label %60, label %18

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 1
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 3, i64 1
  %64 = load float, float* %63, align 4
  %65 = fsub float %62, %64
  %66 = tail call float @llvm.fabs.f32(float %65) #9
  %67 = fcmp ule float %66, 1.000000e+00
  br i1 %67, label %68, label %18

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 2
  %70 = load float, float* %69, align 4
  %71 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 0, i64 2
  %72 = load float, float* %71, align 4
  %73 = fsub float %70, %72
  %74 = tail call float @llvm.fabs.f32(float %73) #9
  %75 = fcmp ule float %74, 0x3FB99999A0000000
  br i1 %75, label %76, label %18

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 2
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 1, i64 2
  %80 = load float, float* %79, align 4
  %81 = fsub float %78, %80
  %82 = tail call float @llvm.fabs.f32(float %81) #9
  %83 = fcmp ule float %82, 0x3FB99999A0000000
  br i1 %83, label %84, label %18

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 2
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 2, i64 2
  %88 = load float, float* %87, align 4
  %89 = fsub float %86, %88
  %90 = tail call float @llvm.fabs.f32(float %89) #9
  %91 = fcmp ule float %90, 0x3FB99999A0000000
  br i1 %91, label %92, label %18

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 2
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 3, i64 2
  %96 = load float, float* %95, align 4
  %97 = fsub float %94, %96
  %98 = tail call float @llvm.fabs.f32(float %97) #9
  %99 = fcmp ule float %98, 1.000000e+00
  br i1 %99, label %100, label %18

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 0, i64 3
  %102 = load float, float* %101, align 4
  %103 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 0, i64 3
  %104 = load float, float* %103, align 4
  %105 = fsub float %102, %104
  %106 = tail call float @llvm.fabs.f32(float %105) #9
  %107 = fcmp ule float %106, 0x3FB99999A0000000
  br i1 %107, label %108, label %18

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 1, i64 3
  %110 = load float, float* %109, align 4
  %111 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 1, i64 3
  %112 = load float, float* %111, align 4
  %113 = fsub float %110, %112
  %114 = tail call float @llvm.fabs.f32(float %113) #9
  %115 = fcmp ule float %114, 0x3FB99999A0000000
  br i1 %115, label %116, label %18

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 2, i64 3
  %118 = load float, float* %117, align 4
  %119 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 2, i64 3
  %120 = load float, float* %119, align 4
  %121 = fsub float %118, %120
  %122 = tail call float @llvm.fabs.f32(float %121) #9
  %123 = fcmp ule float %122, 0x3FB99999A0000000
  br i1 %123, label %124, label %18

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %0, i64 0, i32 0, i32 0, i64 3, i64 3
  %126 = load float, float* %125, align 4
  %127 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 3, i64 3
  %128 = load float, float* %127, align 4
  %129 = fsub float %126, %128
  %130 = tail call float @llvm.fabs.f32(float %129) #9
  %131 = fcmp ule float %130, 0x3FB99999A0000000
  br i1 %131, label %132, label %18

132:                                              ; preds = %124
  br label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Transform"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 0, i64 0
  %4 = load float, float* %3, align 4
  %5 = fpext float %4 to double
  %6 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 1, i64 0
  %7 = load float, float* %6, align 4
  %8 = fpext float %7 to double
  %9 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 2, i64 0
  %10 = load float, float* %9, align 4
  %11 = fpext float %10 to double
  %12 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 3, i64 0
  %13 = load float, float* %12, align 4
  %14 = fpext float %13 to double
  %15 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 0, i64 1
  %16 = load float, float* %15, align 4
  %17 = fpext float %16 to double
  %18 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 1, i64 1
  %19 = load float, float* %18, align 4
  %20 = fpext float %19 to double
  %21 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 2, i64 1
  %22 = load float, float* %21, align 4
  %23 = fpext float %22 to double
  %24 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 3, i64 1
  %25 = load float, float* %24, align 4
  %26 = fpext float %25 to double
  %27 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 0, i64 2
  %28 = load float, float* %27, align 4
  %29 = fpext float %28 to double
  %30 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 1, i64 2
  %31 = load float, float* %30, align 4
  %32 = fpext float %31 to double
  %33 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 2, i64 2
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  %36 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 3, i64 2
  %37 = load float, float* %36, align 4
  %38 = fpext float %37 to double
  %39 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 0, i64 3
  %40 = load float, float* %39, align 4
  %41 = fpext float %40 to double
  %42 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 1, i64 3
  %43 = load float, float* %42, align 4
  %44 = fpext float %43 to double
  %45 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 2, i64 3
  %46 = load float, float* %45, align 4
  %47 = fpext float %46 to double
  %48 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 3, i64 3
  %49 = load float, float* %48, align 4
  %50 = fpext float %49 to double
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str, i64 0, i64 0), double %5, double %8, double %11, double %14, double %17, double %20, double %23, double %26, double %29, double %32, double %35, double %38, double %41, double %44, double %47, double %50) #9
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK3gfx9Transform16GetMatrixAsSkM44Ev(%class.SkM44* noalias nocapture sret, %"class.gfx::Transform"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 1, i64 0
  %4 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 2, i64 0
  %5 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %1, i64 0, i32 0, i32 0, i64 3, i64 0
  %6 = bitcast %"class.gfx::Transform"* %1 to <4 x i32>*
  %7 = load <4 x i32>, <4 x i32>* %6, align 4
  %8 = bitcast float* %3 to <4 x i32>*
  %9 = load <4 x i32>, <4 x i32>* %8, align 4
  %10 = bitcast float* %4 to <4 x i32>*
  %11 = load <4 x i32>, <4 x i32>* %10, align 4
  %12 = bitcast float* %5 to <4 x i32>*
  %13 = load <4 x i32>, <4 x i32>* %12, align 4
  %14 = bitcast %class.SkM44* %0 to <4 x i32>*
  store <4 x i32> %7, <4 x i32>* %14, align 4
  %15 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 4
  %16 = bitcast float* %15 to <4 x i32>*
  store <4 x i32> %9, <4 x i32>* %16, align 4
  %17 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 8
  %18 = bitcast float* %17 to <4 x i32>*
  store <4 x i32> %11, <4 x i32>* %18, align 4
  %19 = getelementptr inbounds %class.SkM44, %class.SkM44* %0, i64 0, i32 0, i64 12
  %20 = bitcast float* %19 to <4 x i32>*
  store <4 x i32> %13, <4 x i32>* %20, align 4
  ret void
}

declare void @_ZN10SkMatrix4417recomputeTypeMaskEv(%class.SkMatrix44*) local_unnamed_addr #1

declare void @_ZN10SkMatrix449setConcatERKS_S1_(%class.SkMatrix44*, %class.SkMatrix44* dereferenceable(68), %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #1

declare void @_ZN10SkMatrix4414setRotateAboutEffff(%class.SkMatrix44*, float, float, float, float) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @tan(double) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #8

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZNK10SkMatrix4410mapScalarsEPKfPf(%class.SkMatrix44*, float*, float*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
