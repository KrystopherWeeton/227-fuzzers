; ModuleID = '../../third_party/skia/src/sksl/SkSLUtil.cpp'
source_filename = "../../third_party/skia/src/sksl/SkSLUtil.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.SkSL::StringStream" = type { %"class.SkSL::OutputStream", %class.SkDynamicMemoryWStream, %"class.SkSL::String" }
%"class.SkSL::OutputStream" = type { i32 (...)** }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%class.SkWStream = type { i32 (...)** }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.sk_sp.36 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.SkSL::Type"* }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"struct.SkSL::ProgramConfig" = type opaque
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.9", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.11" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.SkSL::Type::Field"* }

$_ZNK4SkSL12StringStream3strEv = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL17ShaderCapsFactory14MakeShaderCapsEv(%class.sk_sp* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.GrContextOptions, align 8
  %3 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %3) #7
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 1
  store i32 2, i32* %4, align 4
  %5 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 2
  store i32 2147483647, i32* %5, align 8
  %6 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 3
  store i32 -1, i32* %6, align 4
  %7 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 4
  store %class.SkExecutor* null, %class.SkExecutor** %7, align 8
  %8 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 5
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 6
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 7
  store i8 0, i8* %10, align 2
  %11 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 8
  store i8 1, i8* %11, align 1
  %12 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 9
  store i8 0, i8* %12, align 4
  %13 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 10
  store i64 8388608, i64* %13, align 8
  %14 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 11
  store float 1.800000e+01, float* %14, align 8
  %15 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 12
  store float 3.240000e+02, float* %15, align 4
  %16 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 13
  store i32 2, i32* %16, align 8
  %17 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 14
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 15
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 16
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 17
  store i32 2, i32* %20, align 4
  %21 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 18
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 19
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 20
  store i32 256, i32* %23, align 4
  %24 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 21
  store %"class.GrContextOptions::PersistentCache"* null, %"class.GrContextOptions::PersistentCache"** %24, align 8
  %25 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 22
  store i32 2, i32* %25, align 8
  %26 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 23
  store %"class.GrContextOptions::ShaderErrorHandler"* null, %"class.GrContextOptions::ShaderErrorHandler"** %26, align 8
  %27 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 24
  store i32 4, i32* %27, align 8
  %28 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 25
  store i32 -1, i32* %28, align 4
  %29 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 26
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 27
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %2, i64 0, i32 28
  call void @_ZN22GrDriverBugWorkaroundsC1Ev(%class.GrDriverBugWorkarounds* %31) #7
  %32 = call i8* @_Znwm(i64 144) #8, !noalias !2
  %33 = bitcast i8* %32 to %class.GrShaderCaps*
  call void @_ZN12GrShaderCapsC1ERK16GrContextOptions(%class.GrShaderCaps* nonnull %33, %struct.GrContextOptions* nonnull dereferenceable(240) %2) #7, !noalias !2
  %34 = bitcast %class.sk_sp* %0 to i8**
  store i8* %32, i8** %34, align 8, !alias.scope !2
  call void @_ZN22GrDriverBugWorkaroundsD1Ev(%class.GrDriverBugWorkarounds* %31) #7
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %3) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL18write_stringstreamERKNS_12StringStreamERNS_12OutputStreamE(%"class.SkSL::StringStream"* dereferenceable(64), %"class.SkSL::OutputStream"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"* %0)
  %4 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.SkSL::String"* %3 to i8*
  %11 = select i1 %7, i8* %9, i8* %10
  %12 = tail call dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"* %0)
  %13 = bitcast %"class.SkSL::String"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = bitcast %"class.SkSL::OutputStream"* %1 to void (%"class.SkSL::OutputStream"*, i8*, i64)***
  %22 = load void (%"class.SkSL::OutputStream"*, i8*, i64)**, void (%"class.SkSL::OutputStream"*, i8*, i64)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %22, i64 3
  %24 = load void (%"class.SkSL::OutputStream"*, i8*, i64)*, void (%"class.SkSL::OutputStream"*, i8*, i64)** %23, align 8
  tail call void %24(%"class.SkSL::OutputStream"* %1, i8* %11, i64 %20) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.SkSL::String"* @_ZNK4SkSL12StringStream3strEv(%"class.SkSL::StringStream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.sk_sp.36, align 8
  %3 = alloca %"class.SkSL::String", align 8
  %4 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2
  %5 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  br label %14

12:                                               ; preds = %1
  %13 = zext i8 %7 to i64
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi i64 [ %11, %9 ], [ %13, %12 ]
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %66

17:                                               ; preds = %14
  %18 = bitcast %class.sk_sp.36* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %class.sk_sp.36, %class.sk_sp.36* %2, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %19, align 8
  %20 = getelementptr inbounds %"class.SkSL::StringStream", %"class.SkSL::StringStream"* %0, i64 0, i32 1
  call void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp.36* nonnull sret %2, %class.SkDynamicMemoryWStream* %20) #7
  %21 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #7
  %22 = load %class.SkData*, %class.SkData** %19, align 8
  %23 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 3
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %class.SkData, %class.SkData* %22, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = icmp ugt i64 %26, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %17
  %29 = bitcast %"class.SkSL::String"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %29) #9
  unreachable

30:                                               ; preds = %17
  %31 = icmp ult i64 %26, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %26, 16
  %34 = and i64 %33, -16
  %35 = call i8* @_Znwm(i64 %34) #8
  %36 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %26, i64* %39, align 8
  br label %45

40:                                               ; preds = %30
  %41 = trunc i64 %26 to i8
  %42 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1
  %44 = icmp eq i64 %26, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %40, %32
  %46 = phi i8* [ %35, %32 ], [ %21, %40 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %46, i8* align 1 %24, i64 %26, i1 false) #7
  br label %47

47:                                               ; preds = %40, %45
  %48 = phi i8* [ %21, %40 ], [ %46, %45 ]
  %49 = getelementptr inbounds i8, i8* %48, i64 %26
  store i8 0, i8* %49, align 1
  %50 = load i8, i8* %6, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* nonnull align 8 %21, i64 24, i1 false) #7
  %57 = load %class.SkData*, %class.SkData** %19, align 8
  %58 = bitcast %class.SkData* %57 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #7
  %59 = icmp eq %class.SkData* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %class.SkData, %class.SkData* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 -1 acq_rel
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %65

64:                                               ; preds = %60
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %57) #7
  call void @_ZN6SkDatadlEPv(i8* nonnull %58) #7
  br label %65

65:                                               ; preds = %55, %60, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %66

66:                                               ; preds = %14, %65
  ret %"class.SkSL::String"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4SkSL16type_to_grsltypeERKNS_7ContextERKNS_4TypeEP8GrSLType(%"class.SkSL::Context"* readonly dereferenceable(744), %"class.SkSL::Type"* readonly dereferenceable(184), i32*) local_unnamed_addr #0 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"struct.SkSL::StringFragment"*
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %"struct.SkSL::StringFragment"*
  %8 = alloca <2 x i64>, align 16
  %9 = bitcast <2 x i64>* %8 to %"struct.SkSL::StringFragment"*
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %"struct.SkSL::StringFragment"*
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"struct.SkSL::StringFragment"*
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to %"struct.SkSL::StringFragment"*
  %16 = alloca <2 x i64>, align 16
  %17 = bitcast <2 x i64>* %16 to %"struct.SkSL::StringFragment"*
  %18 = alloca <2 x i64>, align 16
  %19 = bitcast <2 x i64>* %18 to %"struct.SkSL::StringFragment"*
  %20 = alloca <2 x i64>, align 16
  %21 = bitcast <2 x i64>* %20 to %"struct.SkSL::StringFragment"*
  %22 = alloca <2 x i64>, align 16
  %23 = bitcast <2 x i64>* %22 to %"struct.SkSL::StringFragment"*
  %24 = alloca <2 x i64>, align 16
  %25 = bitcast <2 x i64>* %24 to %"struct.SkSL::StringFragment"*
  %26 = alloca <2 x i64>, align 16
  %27 = bitcast <2 x i64>* %26 to %"struct.SkSL::StringFragment"*
  %28 = alloca <2 x i64>, align 16
  %29 = bitcast <2 x i64>* %28 to %"struct.SkSL::StringFragment"*
  %30 = alloca <2 x i64>, align 16
  %31 = bitcast <2 x i64>* %30 to %"struct.SkSL::StringFragment"*
  %32 = alloca <2 x i64>, align 16
  %33 = bitcast <2 x i64>* %32 to %"struct.SkSL::StringFragment"*
  %34 = alloca <2 x i64>, align 16
  %35 = bitcast <2 x i64>* %34 to %"struct.SkSL::StringFragment"*
  %36 = alloca <2 x i64>, align 16
  %37 = bitcast <2 x i64>* %36 to %"struct.SkSL::StringFragment"*
  %38 = alloca <2 x i64>, align 16
  %39 = bitcast <2 x i64>* %38 to %"struct.SkSL::StringFragment"*
  %40 = alloca <2 x i64>, align 16
  %41 = bitcast <2 x i64>* %40 to %"struct.SkSL::StringFragment"*
  %42 = alloca <2 x i64>, align 16
  %43 = bitcast <2 x i64>* %42 to %"struct.SkSL::StringFragment"*
  %44 = alloca <2 x i64>, align 16
  %45 = bitcast <2 x i64>* %44 to %"struct.SkSL::StringFragment"*
  %46 = alloca <2 x i64>, align 16
  %47 = bitcast <2 x i64>* %46 to %"struct.SkSL::StringFragment"*
  %48 = alloca <2 x i64>, align 16
  %49 = bitcast <2 x i64>* %48 to %"struct.SkSL::StringFragment"*
  %50 = alloca <2 x i64>, align 16
  %51 = bitcast <2 x i64>* %50 to %"struct.SkSL::StringFragment"*
  %52 = alloca <2 x i64>, align 16
  %53 = bitcast <2 x i64>* %52 to %"struct.SkSL::StringFragment"*
  %54 = alloca <2 x i64>, align 16
  %55 = bitcast <2 x i64>* %54 to %"struct.SkSL::StringFragment"*
  %56 = alloca <2 x i64>, align 16
  %57 = bitcast <2 x i64>* %56 to %"struct.SkSL::StringFragment"*
  %58 = alloca <2 x i64>, align 16
  %59 = bitcast <2 x i64>* %58 to %"struct.SkSL::StringFragment"*
  %60 = alloca <2 x i64>, align 16
  %61 = bitcast <2 x i64>* %60 to %"struct.SkSL::StringFragment"*
  %62 = alloca <2 x i64>, align 16
  %63 = bitcast <2 x i64>* %62 to %"struct.SkSL::StringFragment"*
  %64 = alloca <2 x i64>, align 16
  %65 = bitcast <2 x i64>* %64 to %"struct.SkSL::StringFragment"*
  %66 = alloca <2 x i64>, align 16
  %67 = alloca <2 x i64>, align 16
  %68 = bitcast <2 x i64>* %67 to %"struct.SkSL::StringFragment"*
  %69 = alloca <2 x i64>, align 16
  %70 = bitcast <2 x i64>* %69 to %"struct.SkSL::StringFragment"*
  %71 = alloca <2 x i64>, align 16
  %72 = bitcast <2 x i64>* %71 to %"struct.SkSL::StringFragment"*
  %73 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 29, i32 0, i32 0, i32 0
  %74 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %73, align 8
  %75 = bitcast <2 x i64>* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #7
  %76 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %1, i64 0, i32 0, i32 1, i32 0
  %77 = bitcast i8** %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8
  store <2 x i64> %78, <2 x i64>* %69, align 16
  %79 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %74, i64 0, i32 0, i32 1, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %74, i64 0, i32 0, i32 1, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %70, i8* %80, i64 %82) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #7
  br i1 %83, label %459, label %84

84:                                               ; preds = %3
  %85 = bitcast <2 x i64>* %66 to %"struct.SkSL::StringFragment"*
  %86 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 24, i32 0, i32 0, i32 0
  %87 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %86, align 8
  %88 = bitcast <2 x i64>* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #7
  %89 = bitcast i8** %76 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8
  store <2 x i64> %90, <2 x i64>* %66, align 16
  %91 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %87, i64 0, i32 0, i32 1, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %87, i64 0, i32 0, i32 1, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %85, i8* %92, i64 %94) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #7
  br i1 %95, label %459, label %96

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 25, i32 0, i32 0, i32 0
  %98 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %97, align 8
  %99 = bitcast <2 x i64>* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #7
  %100 = bitcast i8** %76 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8
  store <2 x i64> %101, <2 x i64>* %62, align 16
  %102 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %98, i64 0, i32 0, i32 1, i32 0
  %103 = load i8*, i8** %102, align 8
  %104 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %98, i64 0, i32 0, i32 1, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %63, i8* %103, i64 %105) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #7
  br i1 %106, label %459, label %107

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 26, i32 0, i32 0, i32 0
  %109 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %108, align 8
  %110 = bitcast <2 x i64>* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #7
  %111 = bitcast i8** %76 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8
  store <2 x i64> %112, <2 x i64>* %58, align 16
  %113 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %109, i64 0, i32 0, i32 1, i32 0
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %109, i64 0, i32 0, i32 1, i32 1
  %116 = load i64, i64* %115, align 8
  %117 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %59, i8* %114, i64 %116) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #7
  br i1 %117, label %459, label %118

118:                                              ; preds = %107
  %119 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0
  %120 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %119, align 8
  %121 = bitcast <2 x i64>* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #7
  %122 = bitcast i8** %76 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8
  store <2 x i64> %123, <2 x i64>* %54, align 16
  %124 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 0, i32 1, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %120, i64 0, i32 0, i32 1, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %55, i8* %125, i64 %127) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #7
  br i1 %128, label %459, label %129

129:                                              ; preds = %118
  %130 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0
  %131 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %130, align 8
  %132 = bitcast <2 x i64>* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #7
  %133 = bitcast i8** %76 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8
  store <2 x i64> %134, <2 x i64>* %50, align 16
  %135 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %131, i64 0, i32 0, i32 1, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %131, i64 0, i32 0, i32 1, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %51, i8* %136, i64 %138) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #7
  br i1 %139, label %459, label %140

140:                                              ; preds = %129
  %141 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 17, i32 0, i32 0, i32 0
  %142 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %141, align 8
  %143 = bitcast <2 x i64>* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #7
  %144 = bitcast i8** %76 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8
  store <2 x i64> %145, <2 x i64>* %46, align 16
  %146 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %142, i64 0, i32 0, i32 1, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %142, i64 0, i32 0, i32 1, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %47, i8* %147, i64 %149) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #7
  br i1 %150, label %459, label %151

151:                                              ; preds = %140
  %152 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 18, i32 0, i32 0, i32 0
  %153 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %152, align 8
  %154 = bitcast <2 x i64>* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %154) #7
  %155 = bitcast i8** %76 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8
  store <2 x i64> %156, <2 x i64>* %42, align 16
  %157 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %153, i64 0, i32 0, i32 1, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %153, i64 0, i32 0, i32 1, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %43, i8* %158, i64 %160) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %154) #7
  br i1 %161, label %459, label %162

162:                                              ; preds = %151
  %163 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 19, i32 0, i32 0, i32 0
  %164 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %163, align 8
  %165 = bitcast <2 x i64>* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #7
  %166 = bitcast i8** %76 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8
  store <2 x i64> %167, <2 x i64>* %38, align 16
  %168 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %164, i64 0, i32 0, i32 1, i32 0
  %169 = load i8*, i8** %168, align 8
  %170 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %164, i64 0, i32 0, i32 1, i32 1
  %171 = load i64, i64* %170, align 8
  %172 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %39, i8* %169, i64 %171) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #7
  br i1 %172, label %459, label %173

173:                                              ; preds = %162
  %174 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 20, i32 0, i32 0, i32 0
  %175 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %174, align 8
  %176 = bitcast <2 x i64>* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176) #7
  %177 = bitcast i8** %76 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8
  store <2 x i64> %178, <2 x i64>* %34, align 16
  %179 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %175, i64 0, i32 0, i32 1, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %175, i64 0, i32 0, i32 1, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %35, i8* %180, i64 %182) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %176) #7
  br i1 %183, label %459, label %184

184:                                              ; preds = %173
  %185 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 21, i32 0, i32 0, i32 0
  %186 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %185, align 8
  %187 = bitcast <2 x i64>* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #7
  %188 = bitcast i8** %76 to <2 x i64>*
  %189 = load <2 x i64>, <2 x i64>* %188, align 8
  store <2 x i64> %189, <2 x i64>* %30, align 16
  %190 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %186, i64 0, i32 0, i32 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %186, i64 0, i32 0, i32 1, i32 1
  %193 = load i64, i64* %192, align 8
  %194 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %31, i8* %191, i64 %193) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #7
  br i1 %194, label %459, label %195

195:                                              ; preds = %184
  %196 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 22, i32 0, i32 0, i32 0
  %197 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %196, align 8
  %198 = bitcast <2 x i64>* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %198) #7
  %199 = bitcast i8** %76 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 8
  store <2 x i64> %200, <2 x i64>* %26, align 16
  %201 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %197, i64 0, i32 0, i32 1, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %197, i64 0, i32 0, i32 1, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %27, i8* %202, i64 %204) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %198) #7
  br i1 %205, label %459, label %206

206:                                              ; preds = %195
  %207 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 23, i32 0, i32 0, i32 0
  %208 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %207, align 8
  %209 = bitcast <2 x i64>* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %209) #7
  %210 = bitcast i8** %76 to <2 x i64>*
  %211 = load <2 x i64>, <2 x i64>* %210, align 8
  store <2 x i64> %211, <2 x i64>* %22, align 16
  %212 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %208, i64 0, i32 0, i32 1, i32 0
  %213 = load i8*, i8** %212, align 8
  %214 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %208, i64 0, i32 0, i32 1, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %23, i8* %213, i64 %215) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %209) #7
  br i1 %216, label %459, label %217

217:                                              ; preds = %206
  %218 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %218, align 8
  %220 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %220) #7
  %221 = bitcast i8** %76 to <2 x i64>*
  %222 = load <2 x i64>, <2 x i64>* %221, align 8
  store <2 x i64> %222, <2 x i64>* %18, align 16
  %223 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %219, i64 0, i32 0, i32 1, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %219, i64 0, i32 0, i32 1, i32 1
  %226 = load i64, i64* %225, align 8
  %227 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %19, i8* %224, i64 %226) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %220) #7
  br i1 %227, label %459, label %228

228:                                              ; preds = %217
  %229 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %230 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %229, align 8
  %231 = bitcast <2 x i64>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %231) #7
  %232 = bitcast i8** %76 to <2 x i64>*
  %233 = load <2 x i64>, <2 x i64>* %232, align 8
  store <2 x i64> %233, <2 x i64>* %14, align 16
  %234 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %230, i64 0, i32 0, i32 1, i32 0
  %235 = load i8*, i8** %234, align 8
  %236 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %230, i64 0, i32 0, i32 1, i32 1
  %237 = load i64, i64* %236, align 8
  %238 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %15, i8* %235, i64 %237) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %231) #7
  br i1 %238, label %459, label %239

239:                                              ; preds = %228
  %240 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %241 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %240, align 8
  %242 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %242) #7
  %243 = bitcast i8** %76 to <2 x i64>*
  %244 = load <2 x i64>, <2 x i64>* %243, align 8
  store <2 x i64> %244, <2 x i64>* %10, align 16
  %245 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %241, i64 0, i32 0, i32 1, i32 0
  %246 = load i8*, i8** %245, align 8
  %247 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %241, i64 0, i32 0, i32 1, i32 1
  %248 = load i64, i64* %247, align 8
  %249 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %11, i8* %246, i64 %248) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %242) #7
  br i1 %249, label %459, label %250

250:                                              ; preds = %239
  %251 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %252 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %251, align 8
  %253 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %253) #7
  %254 = bitcast i8** %76 to <2 x i64>*
  %255 = load <2 x i64>, <2 x i64>* %254, align 8
  store <2 x i64> %255, <2 x i64>* %6, align 16
  %256 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %252, i64 0, i32 0, i32 1, i32 0
  %257 = load i8*, i8** %256, align 8
  %258 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %252, i64 0, i32 0, i32 1, i32 1
  %259 = load i64, i64* %258, align 8
  %260 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %7, i8* %257, i64 %259) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %253) #7
  br i1 %260, label %459, label %261

261:                                              ; preds = %250
  %262 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 32, i32 0, i32 0, i32 0
  %263 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %262, align 8
  %264 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %264) #7
  %265 = bitcast i8** %76 to <2 x i64>*
  %266 = load <2 x i64>, <2 x i64>* %265, align 8
  store <2 x i64> %266, <2 x i64>* %4, align 16
  %267 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %263, i64 0, i32 0, i32 1, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %263, i64 0, i32 0, i32 1, i32 1
  %270 = load i64, i64* %269, align 8
  %271 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %5, i8* %268, i64 %270) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %264) #7
  br i1 %271, label %459, label %272

272:                                              ; preds = %261
  %273 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 36, i32 0, i32 0, i32 0
  %274 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %273, align 8
  %275 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %275) #7
  %276 = bitcast i8** %76 to <2 x i64>*
  %277 = load <2 x i64>, <2 x i64>* %276, align 8
  store <2 x i64> %277, <2 x i64>* %8, align 16
  %278 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %274, i64 0, i32 0, i32 1, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %274, i64 0, i32 0, i32 1, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %9, i8* %279, i64 %281) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %275) #7
  br i1 %282, label %459, label %283

283:                                              ; preds = %272
  %284 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 40, i32 0, i32 0, i32 0
  %285 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %284, align 8
  %286 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %286) #7
  %287 = bitcast i8** %76 to <2 x i64>*
  %288 = load <2 x i64>, <2 x i64>* %287, align 8
  store <2 x i64> %288, <2 x i64>* %12, align 16
  %289 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %285, i64 0, i32 0, i32 1, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %285, i64 0, i32 0, i32 1, i32 1
  %292 = load i64, i64* %291, align 8
  %293 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %13, i8* %290, i64 %292) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %286) #7
  br i1 %293, label %459, label %294

294:                                              ; preds = %283
  %295 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %296 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %295, align 8
  %297 = bitcast <2 x i64>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %297) #7
  %298 = bitcast i8** %76 to <2 x i64>*
  %299 = load <2 x i64>, <2 x i64>* %298, align 8
  store <2 x i64> %299, <2 x i64>* %16, align 16
  %300 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %296, i64 0, i32 0, i32 1, i32 0
  %301 = load i8*, i8** %300, align 8
  %302 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %296, i64 0, i32 0, i32 1, i32 1
  %303 = load i64, i64* %302, align 8
  %304 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %17, i8* %301, i64 %303) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %297) #7
  br i1 %304, label %459, label %305

305:                                              ; preds = %294
  %306 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %307 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %306, align 8
  %308 = bitcast <2 x i64>* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %308) #7
  %309 = bitcast i8** %76 to <2 x i64>*
  %310 = load <2 x i64>, <2 x i64>* %309, align 8
  store <2 x i64> %310, <2 x i64>* %20, align 16
  %311 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %307, i64 0, i32 0, i32 1, i32 0
  %312 = load i8*, i8** %311, align 8
  %313 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %307, i64 0, i32 0, i32 1, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %21, i8* %312, i64 %314) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %308) #7
  br i1 %315, label %459, label %316

316:                                              ; preds = %305
  %317 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0
  %318 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %317, align 8
  %319 = bitcast <2 x i64>* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %319) #7
  %320 = bitcast i8** %76 to <2 x i64>*
  %321 = load <2 x i64>, <2 x i64>* %320, align 8
  store <2 x i64> %321, <2 x i64>* %24, align 16
  %322 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %318, i64 0, i32 0, i32 1, i32 0
  %323 = load i8*, i8** %322, align 8
  %324 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %318, i64 0, i32 0, i32 1, i32 1
  %325 = load i64, i64* %324, align 8
  %326 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %25, i8* %323, i64 %325) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %319) #7
  br i1 %326, label %459, label %327

327:                                              ; preds = %316
  %328 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 7, i32 0, i32 0, i32 0
  %329 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %328, align 8
  %330 = bitcast <2 x i64>* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %330) #7
  %331 = bitcast i8** %76 to <2 x i64>*
  %332 = load <2 x i64>, <2 x i64>* %331, align 8
  store <2 x i64> %332, <2 x i64>* %28, align 16
  %333 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %329, i64 0, i32 0, i32 1, i32 0
  %334 = load i8*, i8** %333, align 8
  %335 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %329, i64 0, i32 0, i32 1, i32 1
  %336 = load i64, i64* %335, align 8
  %337 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %29, i8* %334, i64 %336) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %330) #7
  br i1 %337, label %459, label %338

338:                                              ; preds = %327
  %339 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 41, i32 0, i32 0, i32 0
  %340 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %339, align 8
  %341 = bitcast <2 x i64>* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %341) #7
  %342 = bitcast i8** %76 to <2 x i64>*
  %343 = load <2 x i64>, <2 x i64>* %342, align 8
  store <2 x i64> %343, <2 x i64>* %32, align 16
  %344 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %340, i64 0, i32 0, i32 1, i32 0
  %345 = load i8*, i8** %344, align 8
  %346 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %340, i64 0, i32 0, i32 1, i32 1
  %347 = load i64, i64* %346, align 8
  %348 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %33, i8* %345, i64 %347) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %341) #7
  br i1 %348, label %459, label %349

349:                                              ; preds = %338
  %350 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 45, i32 0, i32 0, i32 0
  %351 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %350, align 8
  %352 = bitcast <2 x i64>* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %352) #7
  %353 = bitcast i8** %76 to <2 x i64>*
  %354 = load <2 x i64>, <2 x i64>* %353, align 8
  store <2 x i64> %354, <2 x i64>* %36, align 16
  %355 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %351, i64 0, i32 0, i32 1, i32 0
  %356 = load i8*, i8** %355, align 8
  %357 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %351, i64 0, i32 0, i32 1, i32 1
  %358 = load i64, i64* %357, align 8
  %359 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %37, i8* %356, i64 %358) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %352) #7
  br i1 %359, label %459, label %360

360:                                              ; preds = %349
  %361 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 49, i32 0, i32 0, i32 0
  %362 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %361, align 8
  %363 = bitcast <2 x i64>* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %363) #7
  %364 = bitcast i8** %76 to <2 x i64>*
  %365 = load <2 x i64>, <2 x i64>* %364, align 8
  store <2 x i64> %365, <2 x i64>* %40, align 16
  %366 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %362, i64 0, i32 0, i32 1, i32 0
  %367 = load i8*, i8** %366, align 8
  %368 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %362, i64 0, i32 0, i32 1, i32 1
  %369 = load i64, i64* %368, align 8
  %370 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %41, i8* %367, i64 %369) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %363) #7
  br i1 %370, label %459, label %371

371:                                              ; preds = %360
  %372 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %373 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %372, align 8
  %374 = bitcast <2 x i64>* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %374) #7
  %375 = bitcast i8** %76 to <2 x i64>*
  %376 = load <2 x i64>, <2 x i64>* %375, align 8
  store <2 x i64> %376, <2 x i64>* %44, align 16
  %377 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %373, i64 0, i32 0, i32 1, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %373, i64 0, i32 0, i32 1, i32 1
  %380 = load i64, i64* %379, align 8
  %381 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %45, i8* %378, i64 %380) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %374) #7
  br i1 %381, label %459, label %382

382:                                              ; preds = %371
  %383 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %384 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %383, align 8
  %385 = bitcast <2 x i64>* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %385) #7
  %386 = bitcast i8** %76 to <2 x i64>*
  %387 = load <2 x i64>, <2 x i64>* %386, align 8
  store <2 x i64> %387, <2 x i64>* %48, align 16
  %388 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %384, i64 0, i32 0, i32 1, i32 0
  %389 = load i8*, i8** %388, align 8
  %390 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %384, i64 0, i32 0, i32 1, i32 1
  %391 = load i64, i64* %390, align 8
  %392 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %49, i8* %389, i64 %391) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %385) #7
  br i1 %392, label %459, label %393

393:                                              ; preds = %382
  %394 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 10, i32 0, i32 0, i32 0
  %395 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %394, align 8
  %396 = bitcast <2 x i64>* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %396) #7
  %397 = bitcast i8** %76 to <2 x i64>*
  %398 = load <2 x i64>, <2 x i64>* %397, align 8
  store <2 x i64> %398, <2 x i64>* %52, align 16
  %399 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %395, i64 0, i32 0, i32 1, i32 0
  %400 = load i8*, i8** %399, align 8
  %401 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %395, i64 0, i32 0, i32 1, i32 1
  %402 = load i64, i64* %401, align 8
  %403 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %53, i8* %400, i64 %402) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %396) #7
  br i1 %403, label %459, label %404

404:                                              ; preds = %393
  %405 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 0
  %406 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %405, align 8
  %407 = bitcast <2 x i64>* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %407) #7
  %408 = bitcast i8** %76 to <2 x i64>*
  %409 = load <2 x i64>, <2 x i64>* %408, align 8
  store <2 x i64> %409, <2 x i64>* %56, align 16
  %410 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %406, i64 0, i32 0, i32 1, i32 0
  %411 = load i8*, i8** %410, align 8
  %412 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %406, i64 0, i32 0, i32 1, i32 1
  %413 = load i64, i64* %412, align 8
  %414 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %57, i8* %411, i64 %413) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %407) #7
  br i1 %414, label %459, label %415

415:                                              ; preds = %404
  %416 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %417 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %416, align 8
  %418 = bitcast <2 x i64>* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %418) #7
  %419 = bitcast i8** %76 to <2 x i64>*
  %420 = load <2 x i64>, <2 x i64>* %419, align 8
  store <2 x i64> %420, <2 x i64>* %60, align 16
  %421 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %417, i64 0, i32 0, i32 1, i32 0
  %422 = load i8*, i8** %421, align 8
  %423 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %417, i64 0, i32 0, i32 1, i32 1
  %424 = load i64, i64* %423, align 8
  %425 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %61, i8* %422, i64 %424) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %418) #7
  br i1 %425, label %459, label %426

426:                                              ; preds = %415
  %427 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 13, i32 0, i32 0, i32 0
  %428 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %427, align 8
  %429 = bitcast <2 x i64>* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %429) #7
  %430 = bitcast i8** %76 to <2 x i64>*
  %431 = load <2 x i64>, <2 x i64>* %430, align 8
  store <2 x i64> %431, <2 x i64>* %64, align 16
  %432 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %428, i64 0, i32 0, i32 1, i32 0
  %433 = load i8*, i8** %432, align 8
  %434 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %428, i64 0, i32 0, i32 1, i32 1
  %435 = load i64, i64* %434, align 8
  %436 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %65, i8* %433, i64 %435) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %429) #7
  br i1 %436, label %459, label %437

437:                                              ; preds = %426
  %438 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 14, i32 0, i32 0, i32 0
  %439 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %438, align 8
  %440 = bitcast <2 x i64>* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %440) #7
  %441 = bitcast i8** %76 to <2 x i64>*
  %442 = load <2 x i64>, <2 x i64>* %441, align 8
  store <2 x i64> %442, <2 x i64>* %67, align 16
  %443 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %439, i64 0, i32 0, i32 1, i32 0
  %444 = load i8*, i8** %443, align 8
  %445 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %439, i64 0, i32 0, i32 1, i32 1
  %446 = load i64, i64* %445, align 8
  %447 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %68, i8* %444, i64 %446) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %440) #7
  br i1 %447, label %459, label %448

448:                                              ; preds = %437
  %449 = getelementptr inbounds %"class.SkSL::Context", %"class.SkSL::Context"* %0, i64 0, i32 0, i32 15, i32 0, i32 0, i32 0
  %450 = load %"class.SkSL::Type"*, %"class.SkSL::Type"** %449, align 8
  %451 = bitcast <2 x i64>* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %451) #7
  %452 = bitcast i8** %76 to <2 x i64>*
  %453 = load <2 x i64>, <2 x i64>* %452, align 8
  store <2 x i64> %453, <2 x i64>* %71, align 16
  %454 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %450, i64 0, i32 0, i32 1, i32 0
  %455 = load i8*, i8** %454, align 8
  %456 = getelementptr inbounds %"class.SkSL::Type", %"class.SkSL::Type"* %450, i64 0, i32 0, i32 1, i32 1
  %457 = load i64, i64* %456, align 8
  %458 = call zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"* nonnull %72, i8* %455, i64 %457) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %451) #7
  br i1 %458, label %459, label %461

459:                                              ; preds = %448, %437, %426, %415, %404, %393, %382, %371, %360, %349, %338, %327, %316, %305, %294, %283, %272, %261, %250, %239, %228, %217, %206, %195, %184, %173, %162, %151, %140, %129, %118, %107, %96, %84, %3
  %460 = phi i32 [ 0, %3 ], [ 1, %84 ], [ 2, %96 ], [ 3, %107 ], [ 4, %118 ], [ 13, %129 ], [ 14, %140 ], [ 15, %151 ], [ 16, %162 ], [ 17, %173 ], [ 18, %184 ], [ 19, %195 ], [ 20, %206 ], [ 21, %217 ], [ 22, %228 ], [ 23, %239 ], [ 24, %250 ], [ 25, %261 ], [ 26, %272 ], [ 27, %283 ], [ 28, %294 ], [ 29, %305 ], [ 30, %316 ], [ 31, %327 ], [ 32, %338 ], [ 33, %349 ], [ 34, %360 ], [ 35, %371 ], [ 36, %382 ], [ 37, %393 ], [ 38, %404 ], [ 39, %415 ], [ 40, %426 ], [ 41, %437 ], [ 42, %448 ]
  store i32 %460, i32* %2, align 4
  br label %461

461:                                              ; preds = %459, %448
  %462 = phi i1 [ false, %448 ], [ true, %459 ]
  ret i1 %462
}

declare void @_ZN22GrDriverBugWorkaroundsC1Ev(%class.GrDriverBugWorkarounds*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN22GrDriverBugWorkaroundsD1Ev(%class.GrDriverBugWorkarounds*) unnamed_addr #3

declare void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp.36* sret, %class.SkDynamicMemoryWStream*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK4SkSL14StringFragmenteqES0_(%"struct.SkSL::StringFragment"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN12GrShaderCapsC1ERK16GrContextOptions(%class.GrShaderCaps*, %struct.GrContextOptions* dereferenceable(240)) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_Z10sk_make_spI12GrShaderCapsJ16GrContextOptionsEE5sk_spIT_EDpOT0_: argument 0"}
!4 = distinct !{!4, !"_Z10sk_make_spI12GrShaderCapsJ16GrContextOptionsEE5sk_spIT_EDpOT0_"}
