; ModuleID = '../../third_party/blink/renderer/core/layout/ng/inline/ng_offset_mapping_builder.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/inline/ng_offset_mapping_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NGOffsetMappingBuilder" = type { %"class.blink::LayoutObject"*, i32, i8, i32, %"class.WTF::Vector.877", %"class.WTF::HashMap.882", %"class.WTF::String" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.711", %"class.std::__1::unique_ptr.713" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.423", %"class.blink::DataRef.427", %"class.blink::DataRef.627", %"class.blink::DataRef.694", %"class.blink::DataRef.698", %"class.blink::DataRef.702", %"class.blink::DataRef.706", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1258", [4 x i8] }>
%"class.WTF::RefCounted.1258" = type { %"class.base::RefCounted.1259" }
%"class.base::RefCounted.1259" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1251", i64 }
%"class.std::__1::vector.1251" = type { %"class.std::__1::__vector_base.1252" }
%"class.std::__1::__vector_base.1252" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1253" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1287 }
%class.scoped_refptr.1287 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1288", %"class.WTF::Vector.610", %"class.WTF::Vector.1290", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1288" = type { %"class.base::RefCounted.1289" }
%"class.base::RefCounted.1289" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.610" = type { %"class.WTF::VectorBuffer.611" }
%"class.WTF::VectorBuffer.611" = type { %"class.WTF::VectorBufferBase.612" }
%"class.WTF::VectorBufferBase.612" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1290" = type { %"class.WTF::VectorBuffer.1291" }
%"class.WTF::VectorBuffer.1291" = type { %"class.WTF::VectorBufferBase.1292" }
%"class.WTF::VectorBufferBase.1292" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1293 }
%union.anon.1293 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.421" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.370", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.379", %"class.blink::HeapVector.381" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.896", %"class.WTF::Vector.896", i8, i32, %"class.blink::Member.903", %"class.blink::Member.905", %"class.blink::Member.907", %"class.blink::Member.909", %"class.blink::Member.911", %"class.blink::Member.913", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.921", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.927", %"class.blink::Member.929", %"class.blink::Member.387", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.932", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.363", %"class.blink::Member.343", %"class.blink::Member.957", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.966", double, double, i64, i64, %"class.blink::HeapHashSet.968", %"class.blink::HeapHashSet.975", i16, i8, %"class.blink::Member.982", %"class.blink::Member.984", %"class.blink::Member.986", %"class.blink::Member.988", %"class.blink::TextLinkColors", %"class.blink::Member.990", i8, [7 x i8], %"class.blink::HeapHashMap.992", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.999", %"class.blink::Member.1004", %"class.blink::Member.1006", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1008", %"class.blink::HeapVector.1010", %"class.std::__1::unique_ptr.1018", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1024", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1037", %"class.WTF::Vector.1039", i8, i8, %"class.std::__1::unique_ptr.1044", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.363", %"class.blink::HeapVector.1050", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1058", i8, i32, %"class.blink::Member.1060", %"class.blink::Member.1062", %"class.blink::Member.1064", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1066", %"class.WTF::HashMap.1068", %"class.blink::Member.1073", %"class.blink::Member.1075", %"class.blink::Member.1077", %"class.blink::Member.1079", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1081", i8, i32, %"class.blink::Member.1088", %"class.blink::Member.1090", i32, %"class.blink::Member.1092", %"class.blink::Member.1094", %"class.blink::Member.1096", %"class.std::__1::unique_ptr.1098", i64, %"class.std::__1::unique_ptr.1104", i32, i32, %"class.blink::Member.1115", %"class.blink::Member.1117", %"class.blink::Member.1119", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1121", %"class.WTF::Vector.1123", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1128", %"class.blink::Member.1135", %"class.std::__1::unique_ptr.1137", %"class.blink::Member.1143", i8, i8, %"class.WTF::String", %"class.blink::Member.1145", i8, [7 x i8], %"class.blink::HeapHashMap.1147", %"class.blink::HeapObserverSet", %"class.blink::Member.1161", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1163", i32, i8, i8, %"class.blink::WeakMember.1165", %"class.blink::Member.1166" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.889" }
%"class.blink::HeapHashMap.889" = type { %"class.WTF::HashMap.892" }
%"class.WTF::HashMap.892" = type { %"class.WTF::HashTable.893" }
%"class.WTF::HashTable.893" = type <{ %"struct.WTF::KeyValuePair.895"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.895" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.896" = type { %"class.WTF::VectorBuffer.897" }
%"class.WTF::VectorBuffer.897" = type { %"class.WTF::VectorBufferBase.898" }
%"class.WTF::VectorBufferBase.898" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.899 }
%class.scoped_refptr.899 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.900", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.900" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1179", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1220", i32, i8, [3 x i8], %"class.blink::HeapVector.1222", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1230", %"class.blink::Member.1232", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1241", %"class.blink::Member.1247", %"class.blink::Member.1249", i8, [7 x i8] }>
%"class.blink::Supplementable.1179" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1180" }
%"class.blink::HeapHashMap.1180" = type { %"class.WTF::HashMap.1183" }
%"class.WTF::HashMap.1183" = type { %"class.WTF::HashTable.1184" }
%"class.WTF::HashTable.1184" = type <{ %"struct.WTF::KeyValuePair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1186" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1195" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1187" }
%"class.blink::HeapObserverSet.1187" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1188" }
%"class.blink::HeapHashSet.1188" = type { %"class.WTF::HashSet.1191" }
%"class.WTF::HashSet.1191" = type { %"class.WTF::HashTable.1192" }
%"class.WTF::HashTable.1192" = type <{ %"class.blink::WeakMember.1194"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1194" = type opaque
%"class.blink::Supplementable.1195" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1196" }
%"class.blink::HeapHashMap.1196" = type { %"class.WTF::HashMap.1199" }
%"class.WTF::HashMap.1199" = type { %"class.WTF::HashTable.1200" }
%"class.WTF::HashTable.1200" = type <{ %"struct.WTF::KeyValuePair.1202"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1202" = type { i8*, %"class.blink::Member.1273" }
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1275" }
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1203, %"class.std::__1::unique_ptr.1204", %"class.std::__1::unique_ptr.1204", %"class.std::__1::unique_ptr.1210", %"class.std::__1::unique_ptr.1210", %"class.blink::Member.905", i32, [4 x i8], %"class.WTF::HashSet.1216", i32, i32 }
%class.scoped_refptr.1203 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1204" = type { %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1210" = type { %"class.std::__1::__compressed_pair.1211" }
%"class.std::__1::__compressed_pair.1211" = type { %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1216" = type { %"class.WTF::HashTable.1217" }
%"class.WTF::HashTable.1217" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1222" = type { %"class.WTF::Vector.1225" }
%"class.WTF::Vector.1225" = type { %"class.WTF::VectorBuffer.1226" }
%"class.WTF::VectorBuffer.1226" = type { %"class.WTF::VectorBufferBase.1227" }
%"class.WTF::VectorBufferBase.1227" = type { %"class.blink::Member.1228"*, i32, i32 }
%"class.blink::Member.1228" = type opaque
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1234", i32, i32 }
%"class.blink::HeapHashMap.1234" = type { %"class.WTF::HashMap.1237" }
%"class.WTF::HashMap.1237" = type { %"class.WTF::HashTable.1238" }
%"class.WTF::HashTable.1238" = type <{ %"struct.WTF::KeyValuePair.1240"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1240" = type opaque
%"class.std::__1::unique_ptr.1241" = type { %"class.std::__1::__compressed_pair.1242" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.1243" }
%"struct.std::__1::__compressed_pair_elem.1243" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.915" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.915" = type { %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.blink::KURL"* }
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.389", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.391, %"class.WTF::Vector.392", %"class.WTF::Vector.392", %"class.blink::Member.318", %"class.blink::Member.397", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.405", %"class.WTF::TextPosition", %"class.blink::Member.409", %"class.blink::HeapVector.411", %"class.blink::Member.418" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.391 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.392" = type { %"class.WTF::VectorBuffer.393" }
%"class.WTF::VectorBuffer.393" = type { %"class.WTF::VectorBufferBase.394" }
%"class.WTF::VectorBufferBase.394" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.399" }
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.403" }
%"class.WTF::HashTable.403" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.405" = type { %"class.WTF::HashTable.406" }
%"class.WTF::HashTable.406" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.411" = type { %"class.WTF::Vector.414" }
%"class.WTF::Vector.414" = type { %"class.WTF::VectorBuffer.415" }
%"class.WTF::VectorBuffer.415" = type { %"class.WTF::VectorBufferBase.416" }
%"class.WTF::VectorBufferBase.416" = type { %"class.blink::Member.397"*, i32, i32 }
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.931 }
%class.scoped_refptr.931 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.932" = type { %"class.WTF::VectorBuffer.933" }
%"class.WTF::VectorBuffer.933" = type { %"class.WTF::VectorBufferBase.934" }
%"class.WTF::VectorBufferBase.934" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.935 }
%class.scoped_refptr.935 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.936", i32, i32, %"class.blink::Persistent.938" }
%"class.WTF::RefCounted.936" = type { %"class.base::RefCounted.937" }
%"class.base::RefCounted.937" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.938" = type { %"class.blink::PersistentBase.939" }
%"class.blink::PersistentBase.939" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.942" }
%"class.blink::HeapHashMap.942" = type { %"class.WTF::HashMap.945" }
%"class.WTF::HashMap.945" = type { %"class.WTF::HashTable.946" }
%"class.WTF::HashTable.946" = type <{ %"struct.WTF::KeyValuePair.948"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.948" = type { %"class.blink::WeakMember.949", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.959" }
%"class.blink::HeapHashMap.959" = type { %"class.WTF::HashMap.962" }
%"class.WTF::HashMap.962" = type { %"class.WTF::HashTable.963" }
%"class.WTF::HashTable.963" = type <{ %"struct.WTF::KeyValuePair.965"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.965" = type opaque
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.968" = type { %"class.WTF::HashSet.971" }
%"class.WTF::HashSet.971" = type { %"class.WTF::HashTable.972" }
%"class.WTF::HashTable.972" = type <{ %"class.blink::WeakMember.974"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.974" = type opaque
%"class.blink::HeapHashSet.975" = type { %"class.WTF::HashSet.978" }
%"class.WTF::HashSet.978" = type { %"class.WTF::HashTable.979" }
%"class.WTF::HashTable.979" = type <{ %"class.blink::WeakMember.981"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.981" = type opaque
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.381" }
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.992" = type { %"class.WTF::HashMap.995" }
%"class.WTF::HashMap.995" = type { %"class.WTF::HashTable.996" }
%"class.WTF::HashTable.996" = type <{ %"struct.WTF::KeyValuePair.998"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.998" = type opaque
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.1000" }
%"class.WTF::VectorBuffer.1000" = type { %"class.WTF::VectorBufferBase.1001" }
%"class.WTF::VectorBufferBase.1001" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.356 }
%class.scoped_refptr.356 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.357", %"class.WTF::AtomicString", %"class.WTF::Vector.359" }
%"class.WTF::RefCounted.357" = type { %"class.base::RefCounted.358" }
%"class.base::RefCounted.358" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.359" = type { %"class.WTF::VectorBuffer.360" }
%"class.WTF::VectorBuffer.360" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"class.blink::Member.1016"*, i32, i32 }
%"class.blink::Member.1016" = type opaque
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1024" = type { %"class.WTF::HashSet.1027" }
%"class.WTF::HashSet.1027" = type { %"class.WTF::HashTable.1028" }
%"class.WTF::HashTable.1028" = type <{ %"class.blink::WeakMember.1030"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1030" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1031", i32, [4 x i8] }>
%"class.WTF::Vector.1031" = type { %"class.WTF::VectorBuffer.1032" }
%"class.WTF::VectorBuffer.1032" = type { %"class.WTF::VectorBufferBase.1033" }
%"class.WTF::VectorBufferBase.1033" = type { %"struct.std::__1::pair.1034"*, i32, i32 }
%"struct.std::__1::pair.1034" = type opaque
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1039" = type { %"class.WTF::VectorBuffer.1040" }
%"class.WTF::VectorBuffer.1040" = type { %"class.WTF::VectorBufferBase.1041" }
%"class.WTF::VectorBufferBase.1041" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1044" = type { %"class.std::__1::__compressed_pair.1045" }
%"class.std::__1::__compressed_pair.1045" = type { %"struct.std::__1::__compressed_pair_elem.1046" }
%"struct.std::__1::__compressed_pair_elem.1046" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.363" = type { %"class.WTF::Vector.366" }
%"class.WTF::Vector.366" = type { %"class.WTF::VectorBuffer.367" }
%"class.WTF::VectorBuffer.367" = type { %"class.WTF::VectorBufferBase.368" }
%"class.WTF::VectorBufferBase.368" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1050" = type { %"class.WTF::Vector.1053" }
%"class.WTF::Vector.1053" = type { %"class.WTF::VectorBuffer.1054" }
%"class.WTF::VectorBuffer.1054" = type { %"class.WTF::VectorBufferBase.1055" }
%"class.WTF::VectorBufferBase.1055" = type { %"class.blink::Member.1056"*, i32, i32 }
%"class.blink::Member.1056" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1064" = type { %"class.blink::MemberBase.1065" }
%"class.blink::MemberBase.1065" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1066" = type { %"class.blink::MemberBase.1067" }
%"class.blink::MemberBase.1067" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1068" = type { %"class.WTF::HashTable.1069" }
%"class.WTF::HashTable.1069" = type <{ %"struct.WTF::KeyValuePair.1072"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1072" = type opaque
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1075" = type { %"class.blink::MemberBase.1076" }
%"class.blink::MemberBase.1076" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.956", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.953, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.953 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.954" }>
%"class.base::RefCountedThreadSafe.954" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.955 }
%class.scoped_refptr.955 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.956" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1081" = type { %"class.WTF::HashSet.1084" }
%"class.WTF::HashSet.1084" = type { %"class.WTF::HashTable.1085" }
%"class.WTF::HashTable.1085" = type <{ %"class.blink::Member.1087"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1087" = type opaque
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.405", %"class.WTF::HashSet.405", %"class.WTF::HashSet.405", %"class.WTF::HashSet.405", %"class.WTF::HashSet.405", %"class.WTF::HashSet.405", i32, [4 x i8], %"class.WTF::HashMap.1107", %"class.WTF::HashMap.1107", %"class.WTF::HashMap.1107", %"class.WTF::HashMap.1107", %"class.WTF::HashMap.1107", %"class.WTF::HashMap.1107", %"class.WTF::HashMap.1107", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1107" = type { %"class.WTF::HashTable.1108" }
%"class.WTF::HashTable.1108" = type <{ %"struct.WTF::KeyValuePair.1111"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1111" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1115" = type { %"class.blink::MemberBase.1116" }
%"class.blink::MemberBase.1116" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1117" = type { %"class.blink::MemberBase.1118" }
%"class.blink::MemberBase.1118" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1119" = type { %"class.blink::MemberBase.1120" }
%"class.blink::MemberBase.1120" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1123" = type { %"class.WTF::VectorBuffer.1124" }
%"class.WTF::VectorBuffer.1124" = type { %"class.WTF::VectorBufferBase.1125" }
%"class.WTF::VectorBufferBase.1125" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1128" = type { %"class.WTF::HashMap.1131" }
%"class.WTF::HashMap.1131" = type { %"class.WTF::HashTable.1132" }
%"class.WTF::HashTable.1132" = type <{ %"struct.WTF::KeyValuePair.1134"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1134" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1137" = type { %"class.std::__1::__compressed_pair.1138" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1147" = type { %"class.WTF::HashMap.1150" }
%"class.WTF::HashMap.1150" = type { %"class.WTF::HashTable.1151" }
%"class.WTF::HashTable.1151" = type <{ %"struct.WTF::KeyValuePair.1153"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1153" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1154" }
%"class.blink::HeapHashSet.1154" = type { %"class.WTF::HashSet.1157" }
%"class.WTF::HashSet.1157" = type { %"class.WTF::HashTable.1158" }
%"class.WTF::HashTable.1158" = type <{ %"class.blink::WeakMember.1160"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1160" = type opaque
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1170", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1177", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1170" = type { %"class.WTF::HashSet.1173" }
%"class.WTF::HashSet.1173" = type { %"class.WTF::HashTable.1174" }
%"class.WTF::HashTable.1174" = type <{ %"class.blink::Member.1176"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1176" = type opaque
%"class.blink::HeapTaskRunnerTimer.1177" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1178", { i64, i64 } }
%"class.blink::WeakMember.1178" = type { %"class.blink::MemberBase.1164" }
%"class.blink::WeakMember.1165" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.363" }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.376" }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::HeapHashMap.378"* }
%"class.blink::HeapHashMap.378" = type opaque
%"class.blink::Member.379" = type { %"class.blink::MemberBase.380" }
%"class.blink::MemberBase.380" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.381" = type { %"class.WTF::Vector.384" }
%"class.WTF::Vector.384" = type { %"class.WTF::VectorBuffer.385" }
%"class.WTF::VectorBuffer.385" = type { %"class.WTF::VectorBufferBase.386" }
%"class.WTF::VectorBufferBase.386" = type { %"class.blink::Member.387"*, i32, i32 }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.423" = type { %class.scoped_refptr.424 }
%class.scoped_refptr.424 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.425", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.425" = type { %"class.base::RefCounted.426" }
%"class.base::RefCounted.426" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.427" = type { %class.scoped_refptr.428 }
%class.scoped_refptr.428 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.429", [4 x i8], %"class.blink::DataRef.431", %"class.blink::DataRef.497", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.621", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.429" = type { %"class.base::RefCounted.430" }
%"class.base::RefCounted.430" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.431" = type { %class.scoped_refptr.432 }
%class.scoped_refptr.432 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.433", [4 x i8], %"class.blink::DataRef.435", %"class.blink::Persistent.473", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.433" = type { %"class.base::RefCounted.434" }
%"class.base::RefCounted.434" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.435" = type { %class.scoped_refptr.436 }
%class.scoped_refptr.436 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.437", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.455, %class.scoped_refptr.458, %class.scoped_refptr.461, %class.scoped_refptr.464, %class.scoped_refptr.465, %class.scoped_refptr.466, %"class.blink::Persistent.473", %"class.blink::Persistent.488", %"class.absl::optional.492", %"class.absl::optional.492", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.437" = type { %"class.base::RefCounted.438" }
%"class.base::RefCounted.438" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.439", %"class.std::__1::unique_ptr.444" }
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.447", %"class.WTF::Vector.439", i32, i32 }
%"class.WTF::Vector.447" = type { %"class.WTF::VectorBuffer.448" }
%"class.WTF::VectorBuffer.448" = type { %"class.WTF::VectorBufferBase.449" }
%"class.WTF::VectorBufferBase.449" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.455 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.456", [4 x i8] }>
%"class.WTF::RefCounted.456" = type { %"class.base::RefCounted.457" }
%"class.base::RefCounted.457" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.458 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.459", [4 x i8] }>
%"class.WTF::RefCounted.459" = type { %"class.base::RefCounted.460" }
%"class.base::RefCounted.460" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.461 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.462" }>
%"class.WTF::RefCounted.462" = type { %"class.base::RefCounted.463" }
%"class.base::RefCounted.463" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.464 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.465 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.466 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.467", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.467" = type { %"class.base::RefCounted.468" }
%"class.base::RefCounted.468" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.469" }
%"class.blink::DataRef.469" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.471" }
%"class.WTF::RefCounted.471" = type { %"class.base::RefCounted.472" }
%"class.base::RefCounted.472" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.488" = type { %"class.blink::PersistentBase.489" }
%"class.blink::PersistentBase.489" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.458, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.492" = type { %"class.absl::optional_internal::optional_data.493" }
%"class.absl::optional_internal::optional_data.493" = type { %"class.absl::optional_internal::optional_data_base.494" }
%"class.absl::optional_internal::optional_data_base.494" = type { %"class.absl::optional_internal::optional_data_dtor_base.495" }
%"class.absl::optional_internal::optional_data_dtor_base.495" = type { i8, [3 x i8], %union.anon.496 }
%union.anon.496 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.473" = type { %"class.blink::PersistentBase.474" }
%"class.blink::PersistentBase.474" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.477" }
%"class.blink::HeapVector.477" = type { %"class.WTF::Vector.480" }
%"class.WTF::Vector.480" = type { %"class.WTF::VectorBuffer.481" }
%"class.WTF::VectorBuffer.481" = type { %"class.WTF::VectorBufferBase.482" }
%"class.WTF::VectorBufferBase.482" = type { %"class.blink::Member.483"*, i32, i32 }
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.497" = type { %class.scoped_refptr.498 }
%class.scoped_refptr.498 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.499", %"class.blink::DataRef.501", %"class.blink::DataRef.505", %"class.blink::DataRef.514", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.533", %"class.std::__1::unique_ptr.544", %"class.std::__1::unique_ptr.582", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.604", %"class.WTF::Vector.610", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.499" = type { %"class.base::RefCounted.500" }
%"class.base::RefCounted.500" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.501" = type { %class.scoped_refptr.502 }
%class.scoped_refptr.502 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.503", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.503" = type { %"class.base::RefCounted.504" }
%"class.base::RefCounted.504" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.505" = type { %class.scoped_refptr.506 }
%class.scoped_refptr.506 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.507", [4 x i8], %"class.WTF::Vector.509", i8, [7 x i8] }>
%"class.WTF::RefCounted.507" = type { %"class.base::RefCounted.508" }
%"class.base::RefCounted.508" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.509" = type { %"class.WTF::VectorBuffer.510" }
%"class.WTF::VectorBuffer.510" = type { %"class.WTF::VectorBufferBase.511" }
%"class.WTF::VectorBufferBase.511" = type { i32*, i32, i32 }
%"class.blink::DataRef.514" = type { %class.scoped_refptr.515 }
%class.scoped_refptr.515 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.516", [4 x i8], %"class.WTF::HashMap.518", %"class.WTF::HashMap.518", %"class.WTF::HashMap.518", %"class.WTF::HashMap.518", %"class.WTF::HashMap.518", %"class.WTF::HashMap.518", %"class.WTF::HashMap.523", %"class.WTF::HashMap.523", %"class.WTF::HashMap.523", %"class.WTF::HashMap.523", %"class.WTF::HashMap.528", %"class.WTF::Vector.439", %"class.WTF::Vector.439", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.516" = type { %"class.base::RefCounted.517" }
%"class.base::RefCounted.517" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"struct.WTF::KeyValuePair.522"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.522" = type { %"class.WTF::String", %"class.WTF::Vector.1277" }
%"class.WTF::Vector.1277" = type { %"class.WTF::VectorBuffer.1278" }
%"class.WTF::VectorBuffer.1278" = type { %"class.WTF::VectorBufferBase.1279" }
%"class.WTF::VectorBufferBase.1279" = type { i64*, i32, i32 }
%"class.WTF::HashMap.523" = type { %"class.WTF::HashTable.524" }
%"class.WTF::HashTable.524" = type <{ %"struct.WTF::KeyValuePair.527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.527" = type { i64, %"class.WTF::Vector.610" }
%"class.WTF::HashMap.528" = type { %"class.WTF::HashTable.529" }
%"class.WTF::HashTable.529" = type <{ %"struct.WTF::KeyValuePair.532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.532" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.536" }
%"class.WTF::HashMap.536" = type { %"class.WTF::HashTable.537" }
%"class.WTF::HashTable.537" = type <{ %"struct.WTF::KeyValuePair.540"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.540" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1282", %"class.absl::optional.1282", %"class.absl::optional.1282" }
%"class.absl::optional.1282" = type { %"class.absl::optional_internal::optional_data.1283" }
%"class.absl::optional_internal::optional_data.1283" = type { %"class.absl::optional_internal::optional_data_base.1284" }
%"class.absl::optional_internal::optional_data_base.1284" = type { %"class.absl::optional_internal::optional_data_dtor_base.1285" }
%"class.absl::optional_internal::optional_data_dtor_base.1285" = type { i8, %union.anon.1286 }
%union.anon.1286 = type { i32 }
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.559", %"class.WTF::Vector.547", %"class.WTF::Vector.564", %"class.WTF::Vector.569", %"class.WTF::Vector.574" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.547", %"class.WTF::Vector.547", %"class.WTF::Vector.552" }
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { %class.scoped_refptr.555*, i32, i32 }
%class.scoped_refptr.555 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.556" }
%"class.base::RefCountedThreadSafe.556" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.559" = type { %"class.WTF::VectorBuffer.560" }
%"class.WTF::VectorBuffer.560" = type { %"class.WTF::VectorBufferBase.561" }
%"class.WTF::VectorBufferBase.561" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.547" = type { %"class.WTF::VectorBuffer.548" }
%"class.WTF::VectorBuffer.548" = type { %"class.WTF::VectorBufferBase.549" }
%"class.WTF::VectorBufferBase.549" = type { double*, i32, i32 }
%"class.WTF::Vector.564" = type { %"class.WTF::VectorBuffer.565" }
%"class.WTF::VectorBuffer.565" = type { %"class.WTF::VectorBufferBase.566" }
%"class.WTF::VectorBufferBase.566" = type { i32*, i32, i32 }
%"class.WTF::Vector.569" = type { %"class.WTF::VectorBuffer.570" }
%"class.WTF::VectorBuffer.570" = type { %"class.WTF::VectorBufferBase.571" }
%"class.WTF::VectorBufferBase.571" = type { i32*, i32, i32 }
%"class.WTF::Vector.574" = type { %"class.WTF::VectorBuffer.575" }
%"class.WTF::VectorBuffer.575" = type { %"class.WTF::VectorBufferBase.576" }
%"class.WTF::VectorBufferBase.576" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.585" }
%"class.WTF::Vector.585" = type { %"class.WTF::VectorBuffer.586" }
%"class.WTF::VectorBuffer.586" = type { %"class.WTF::VectorBufferBase.587" }
%"class.WTF::VectorBufferBase.587" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.596" }
%"class.WTF::Vector.596" = type { %"class.WTF::VectorBuffer.597" }
%"class.WTF::VectorBuffer.597" = type { %"class.WTF::VectorBufferBase.598" }
%"class.WTF::VectorBufferBase.598" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.604" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.615" }
%"class.WTF::Vector.615" = type { %"class.WTF::VectorBuffer.616" }
%"class.WTF::VectorBuffer.616" = type { %"class.WTF::VectorBufferBase.617" }
%"class.WTF::VectorBufferBase.617" = type { %class.scoped_refptr.618*, i32, i32 }
%class.scoped_refptr.618 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.462", [4 x i8] }>
%"class.blink::Persistent.621" = type { %"class.blink::PersistentBase.622" }
%"class.blink::PersistentBase.622" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.625" }
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.627" = type { %class.scoped_refptr.628 }
%class.scoped_refptr.628 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.629", [4 x i8], %"class.blink::DataRef.631", %"class.blink::DataRef.635", %"class.blink::DataRef.656", %"class.blink::DataRef.674", %"class.blink::DataRef.686", %"class.blink::DataRef.690", %class.scoped_refptr.660, i32, [4 x i8] }>
%"class.WTF::RefCounted.629" = type { %"class.base::RefCounted.630" }
%"class.base::RefCounted.630" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.631" = type { %class.scoped_refptr.632 }
%class.scoped_refptr.632 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.633", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.633" = type { %"class.base::RefCounted.634" }
%"class.base::RefCounted.634" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.635" = type { %class.scoped_refptr.636 }
%class.scoped_refptr.636 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.637", %class.scoped_refptr.639, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.637" = type { %"class.base::RefCounted.638" }
%"class.base::RefCounted.638" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.639 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.640", %"class.std::__1::unique_ptr.646", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.459" }>
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.649, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.649 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.650, %class.SkTDArray.651, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.650 = type { i8*, i32, i32 }
%class.SkTDArray.651 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.652 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.652 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.656" = type { %class.scoped_refptr.657 }
%class.scoped_refptr.657 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.658", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.658" = type { %"class.base::RefCounted.659" }
%"class.base::RefCounted.659" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.660, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.674" = type { %class.scoped_refptr.675 }
%class.scoped_refptr.675 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.676", [4 x i8], %class.scoped_refptr.678, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.676" = type { %"class.base::RefCounted.677" }
%"class.base::RefCounted.677" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.678 = type { %"class.base::RefCountedData.679"* }
%"class.base::RefCountedData.679" = type { %"class.base::RefCountedThreadSafe.680", %"class.WTF::Vector.681" }
%"class.base::RefCountedThreadSafe.680" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.681" = type { %"class.WTF::VectorBuffer.682" }
%"class.WTF::VectorBuffer.682" = type { %"class.WTF::VectorBufferBase.683" }
%"class.WTF::VectorBufferBase.683" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.686" = type { %class.scoped_refptr.687 }
%class.scoped_refptr.687 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.688", %class.scoped_refptr.660, %class.scoped_refptr.660, %class.scoped_refptr.660 }
%"class.WTF::RefCounted.688" = type { %"class.base::RefCounted.689" }
%"class.base::RefCounted.689" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.690" = type { %class.scoped_refptr.691 }
%class.scoped_refptr.691 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.692", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.692" = type { %"class.base::RefCounted.693" }
%"class.base::RefCounted.693" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.660 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.661", %"class.blink::Persistent.663", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.661" = type { %"class.base::RefCounted.662" }
%"class.base::RefCounted.662" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.663" = type { %"class.blink::PersistentBase.664" }
%"class.blink::PersistentBase.664" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.667" }
%"class.blink::HeapHashMap.667" = type { %"class.WTF::HashMap.670" }
%"class.WTF::HashMap.670" = type { %"class.WTF::HashTable.671" }
%"class.WTF::HashTable.671" = type <{ %"struct.WTF::KeyValuePair.673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.673" = type opaque
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.696", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.698" = type { %class.scoped_refptr.699 }
%class.scoped_refptr.699 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.700", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.700" = type { %"class.base::RefCounted.701" }
%"class.base::RefCounted.701" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.702" = type { %class.scoped_refptr.703 }
%class.scoped_refptr.703 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.704", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.704" = type { %"class.base::RefCounted.705" }
%"class.base::RefCounted.705" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.710 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.710 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.887", %"class.blink::StyleVariables", %class.scoped_refptr.710 }
%"class.WTF::RefCounted.887" = type { %"class.base::RefCounted.888" }
%"class.base::RefCounted.888" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.711" = type { %"class.base::RefCounted.712" }
%"class.base::RefCounted.712" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.716" }
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.WTF::Vector.719"* }
%"class.WTF::Vector.719" = type { %"class.WTF::VectorBuffer.1297" }
%"class.WTF::VectorBuffer.1297" = type { %"class.WTF::VectorBufferBase.1298", [32 x i8] }
%"class.WTF::VectorBufferBase.1298" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.727" }
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.730", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.736", %"class.std::__1::unique_ptr.857", i8, %"class.absl::optional.863", %class.scoped_refptr.839, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.868" }
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.732" }
%"struct.std::__1::__compressed_pair_elem.732" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.739, %class.scoped_refptr.739, %class.scoped_refptr.739, %class.scoped_refptr.739, %class.scoped_refptr.739, %class.scoped_refptr.739, %class.scoped_refptr.774, %class.scoped_refptr.788, %class.scoped_refptr.789, %class.scoped_refptr.789, %class.scoped_refptr.789, %class.scoped_refptr.789, %class.scoped_refptr.789, %class.scoped_refptr.789, %class.scoped_refptr.829, %class.scoped_refptr.830, %class.scoped_refptr.830, %class.scoped_refptr.830, %class.scoped_refptr.830, %class.scoped_refptr.830, %class.scoped_refptr.830, %class.scoped_refptr.830, %class.scoped_refptr.830, %class.scoped_refptr.853 }
%class.scoped_refptr.739 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.756" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.740", i8, i8, %class.scoped_refptr.742, i32, i32 }
%"class.WTF::RefCounted.740" = type { %"class.base::RefCounted.741" }
%"class.base::RefCounted.741" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.742 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.749, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.750", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.743" }
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.749 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.775", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.775" = type { %"class.WTF::RefCounted.776", i8, i8, %class.scoped_refptr.749, i32, i32 }
%"class.WTF::RefCounted.776" = type { %"class.base::RefCounted.777" }
%"class.base::RefCounted.777" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.778" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.778" = type { %"class.absl::optional_internal::optional_data.779" }
%"class.absl::optional_internal::optional_data.779" = type { %"class.absl::optional_internal::optional_data_base.780" }
%"class.absl::optional_internal::optional_data_base.780" = type { %"class.absl::optional_internal::optional_data_dtor_base.781" }
%"class.absl::optional_internal::optional_data_dtor_base.781" = type { i8, %union.anon.782 }
%union.anon.782 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.783" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.759", %"class.std::__1::unique_ptr.765", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.774 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.788 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.789 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.790" }
%"class.blink::PaintPropertyNode.790" = type { %"class.WTF::RefCounted.791", i8, i8, %class.scoped_refptr.793, i32, i32 }
%"class.WTF::RefCounted.791" = type { %"class.base::RefCounted.792" }
%"class.base::RefCounted.792" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.793 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.742, %class.scoped_refptr.794, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.816", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.831" }
%"class.blink::PaintPropertyNode.831" = type { %"class.WTF::RefCounted.832", i8, i8, %class.scoped_refptr.794, i32, i32 }
%"class.WTF::RefCounted.832" = type { %"class.base::RefCounted.833" }
%"class.base::RefCounted.833" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.795" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.811" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.797, [20 x float], i32, [4 x i8], %"class.std::__1::vector.804", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.797 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.798, i32, %"class.absl::optional.799", i8, i32 }
%class.sk_sp.798 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.799" = type { %"class.absl::optional_internal::optional_data.800" }
%"class.absl::optional_internal::optional_data.800" = type { %"class.absl::optional_internal::optional_data_base.801" }
%"class.absl::optional_internal::optional_data_base.801" = type { %"class.absl::optional_internal::optional_data_dtor_base.802" }
%"class.absl::optional_internal::optional_data_dtor_base.802" = type { i8, %union.anon.803 }
%union.anon.803 = type { %struct.SkRect }
%"class.std::__1::vector.804" = type { %"class.std::__1::__vector_base.805" }
%"class.std::__1::__vector_base.805" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.806" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.816" = type { %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.822" }
%"class.std::__1::vector.822" = type { %"class.std::__1::__vector_base.823" }
%"class.std::__1::__vector_base.823" = type { i32*, i32*, %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { i32* }
%class.scoped_refptr.829 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.830 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.842" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.742, %"class.absl::optional.834", %class.scoped_refptr.839, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.834" = type { %"class.absl::optional_internal::optional_data.835" }
%"class.absl::optional_internal::optional_data.835" = type { %"class.absl::optional_internal::optional_data_base.836" }
%"class.absl::optional_internal::optional_data_base.836" = type { %"class.absl::optional_internal::optional_data_dtor_base.837" }
%"class.absl::optional_internal::optional_data_dtor_base.837" = type { i8, [3 x i8], %union.anon.838 }
%union.anon.838 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.842" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.845", i32, [4 x i8] }>
%"class.WTF::Vector.845" = type { %"class.WTF::VectorBuffer.846" }
%"class.WTF::VectorBuffer.846" = type { %"class.WTF::VectorBufferBase.847" }
%"class.WTF::VectorBufferBase.847" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.853 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.857" = type { %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.742, %class.scoped_refptr.794, %class.scoped_refptr.793 }
%"class.absl::optional.863" = type { %"class.absl::optional_internal::optional_data.864" }
%"class.absl::optional_internal::optional_data.864" = type { %"class.absl::optional_internal::optional_data_base.865" }
%"class.absl::optional_internal::optional_data_base.865" = type { %"class.absl::optional_internal::optional_data_dtor_base.866" }
%"class.absl::optional_internal::optional_data_dtor_base.866" = type { i8, %union.anon.867 }
%union.anon.867 = type { %"class.blink::IntRect" }
%class.scoped_refptr.839 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.840", [4 x i8] }
%"class.WTF::RefCounted.840" = type { %"class.base::RefCounted.841" }
%"class.base::RefCounted.841" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.868" = type { %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"class.blink::FragmentData"* }
%"class.WTF::Vector.877" = type { %"class.WTF::VectorBuffer.878" }
%"class.WTF::VectorBuffer.878" = type { %"class.WTF::VectorBufferBase.879" }
%"class.WTF::VectorBufferBase.879" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.882" = type { %"class.WTF::HashTable.883" }
%"class.WTF::HashTable.883" = type <{ %"struct.WTF::KeyValuePair.886"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.886" = type { %"class.blink::Persistent.1301", %"struct.std::__1::pair.1272" }
%"class.blink::Persistent.1301" = type { %"class.blink::PersistentBase.1302" }
%"class.blink::PersistentBase.1302" = type { %"class.blink::Node"*, %"class.blink::PersistentNodePtr.1303" }
%"class.blink::PersistentNodePtr.1303" = type { %"class.blink::PersistentNode"* }
%"struct.std::__1::pair.1272" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::NGOffsetMappingBuilder::SourceNodeScope" = type { %"class.blink::NGOffsetMappingBuilder"*, %"class.base::AutoReset", %"class.base::AutoReset.1260" }
%"class.base::AutoReset" = type { %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"* }
%"class.base::AutoReset.1260" = type <{ i32*, i32, [4 x i8] }>
%"class.blink::LayoutTextFragment" = type { %"class.blink::LayoutText", i32, i32, i8, %class.scoped_refptr.5, %"class.blink::UntracedMember.1304" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.1265 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1265 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::UntracedMember.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::FirstLetterPseudoElement"* }
%"class.blink::FirstLetterPseudoElement" = type opaque
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1306 }
%class.scoped_refptr.1306 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1307", %"class.WTF::String", %"class.std::__1::unique_ptr.1309" }
%"class.WTF::RefCounted.1307" = type { %"class.base::RefCounted.1308" }
%"class.base::RefCounted.1308" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1312", %"class.std::__1::unique_ptr.1323", %"class.WTF::Vector.1329", i8, i32 }
%"class.std::__1::unique_ptr.1312" = type { %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.1314" }
%"struct.std::__1::__compressed_pair_elem.1314" = type { %"class.WTF::Vector.1315"* }
%"class.WTF::Vector.1315" = type { %"class.WTF::VectorBuffer.1316" }
%"class.WTF::VectorBuffer.1316" = type { %"class.WTF::VectorBufferBase.1317" }
%"class.WTF::VectorBufferBase.1317" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1323" = type { %"class.std::__1::__compressed_pair.1324" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.1325" }
%"struct.std::__1::__compressed_pair_elem.1325" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1329" = type { %"class.WTF::VectorBuffer.1330" }
%"class.WTF::VectorBuffer.1330" = type { %"class.WTF::VectorBufferBase.1317", [32 x i8] }
%"class.WTF::Vector.1261" = type { %"class.WTF::VectorBuffer.1262" }
%"class.WTF::VectorBuffer.1262" = type { %"class.WTF::VectorBufferBase.879", [96 x i8] }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.877", %"class.WTF::HashMap.882", %"class.WTF::String" }

$_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjOT_ = comdat any

$_ZN3WTF12VectorBufferIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE16LookupForWritingERKS5_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_4NodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm = comdat any

$_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjPKT_j = comdat any

$_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_ = comdat any

$_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERPS4_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

@.str = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink10PersistentIKNS2_4NodeEEENSt3__14pairIjjEEEEEEPKcv = private unnamed_addr constant [148 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::Persistent<const blink::Node>, std::__1::pair<unsigned int, unsigned int> >]\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NGOffsetMappingUnit]\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1

@_ZN5blink22NGOffsetMappingBuilderC1Ev = hidden unnamed_addr alias void (%"class.blink::NGOffsetMappingBuilder"*), void (%"class.blink::NGOffsetMappingBuilder"*)* @_ZN5blink22NGOffsetMappingBuilderC2Ev
@_ZN5blink22NGOffsetMappingBuilder15SourceNodeScopeC1EPS0_PKNS_12LayoutObjectE = hidden unnamed_addr alias void (%"class.blink::NGOffsetMappingBuilder::SourceNodeScope"*, %"class.blink::NGOffsetMappingBuilder"*, %"class.blink::LayoutObject"*), void (%"class.blink::NGOffsetMappingBuilder::SourceNodeScope"*, %"class.blink::NGOffsetMappingBuilder"*, %"class.blink::LayoutObject"*)* @_ZN5blink22NGOffsetMappingBuilder15SourceNodeScopeC2EPS0_PKNS_12LayoutObjectE
@_ZN5blink22NGOffsetMappingBuilder15SourceNodeScopeD1Ev = hidden unnamed_addr alias void (%"class.blink::NGOffsetMappingBuilder::SourceNodeScope"*), void (%"class.blink::NGOffsetMappingBuilder::SourceNodeScope"*)* @_ZN5blink22NGOffsetMappingBuilder15SourceNodeScopeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGOffsetMappingBuilderC2Ev(%"class.blink::NGOffsetMappingBuilder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 0
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %2, align 8
  %3 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 3
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %8 = bitcast %"class.WTF::Vector.877"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGOffsetMappingBuilder15SourceNodeScopeC2EPS0_PKNS_12LayoutObjectE(%"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* nocapture, %"class.blink::NGOffsetMappingBuilder"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::LayoutObject"* %2 to i64
  %5 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder::SourceNodeScope", %"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* %0, i64 0, i32 0
  store %"class.blink::NGOffsetMappingBuilder"* %1, %"class.blink::NGOffsetMappingBuilder"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %1, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder::SourceNodeScope", %"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* %0, i64 0, i32 1, i32 0
  store %"class.blink::LayoutObject"** %6, %"class.blink::LayoutObject"*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder::SourceNodeScope", %"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* %0, i64 0, i32 1, i32 1
  %9 = bitcast %"class.blink::NGOffsetMappingBuilder"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 %4, i64* %9, align 8
  %11 = bitcast %"class.blink::LayoutObject"** %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %1, i64 0, i32 1
  %13 = icmp eq %"class.blink::LayoutObject"* %2, null
  br i1 %13, label %34, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 33554432
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %34, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 1
  %22 = bitcast %"class.blink::LayoutObject"* %21 to i16*
  %23 = load i16, i16* %22, align 8
  %24 = and i16 %23, 8192
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::LayoutObject"* %2 to %"class.blink::LayoutTextFragment"*
  %28 = tail call %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"* nonnull %27) #10
  %29 = icmp eq %"class.blink::Text"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 1, i32 8
  %32 = bitcast %"class.blink::LayoutObject"** %31 to i32*
  %33 = load i32, i32* %32, align 8
  br label %34

34:                                               ; preds = %3, %14, %20, %26, %30
  %35 = phi i32 [ %33, %30 ], [ 0, %26 ], [ 0, %14 ], [ 0, %3 ], [ 0, %20 ]
  %36 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder::SourceNodeScope", %"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* %0, i64 0, i32 2, i32 0
  store i32* %12, i32** %36, align 8
  %37 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder::SourceNodeScope", %"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* %0, i64 0, i32 2, i32 1
  %38 = load i32, i32* %12, align 4
  store i32 %35, i32* %12, align 4
  store i32 %38, i32* %37, align 8
  %39 = load %"class.blink::NGOffsetMappingBuilder"*, %"class.blink::NGOffsetMappingBuilder"** %5, align 8
  %40 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %39, i64 0, i32 2
  store i8 0, i8* %40, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink22NGOffsetMappingBuilder15SourceNodeScopeD2Ev(%"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder::SourceNodeScope", %"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* %0, i64 0, i32 0
  %3 = load %"class.blink::NGOffsetMappingBuilder"*, %"class.blink::NGOffsetMappingBuilder"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %3, i64 0, i32 2
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder::SourceNodeScope", %"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* %0, i64 0, i32 2, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder::SourceNodeScope", %"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* %0, i64 0, i32 2, i32 1
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %6, align 4
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder::SourceNodeScope", %"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* %0, i64 0, i32 1, i32 0
  %13 = load %"class.blink::LayoutObject"**, %"class.blink::LayoutObject"*** %12, align 8
  %14 = icmp eq %"class.blink::LayoutObject"** %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::LayoutObject"** %13 to i64*
  %17 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder::SourceNodeScope", %"class.blink::NGOffsetMappingBuilder::SourceNodeScope"* %0, i64 0, i32 1, i32 1
  %18 = bitcast %"class.blink::LayoutObject"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  br label %20

20:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGOffsetMappingBuilder15ReserveCapacityEj(%"class.blink::NGOffsetMappingBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.883"* %3, i32 %1) #10
  %4 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4
  %5 = uitofp i32 %1 to double
  %6 = fmul double %5, 1.500000e+00
  %7 = fptoui double %6 to i32
  %8 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %9, %7
  br i1 %10, label %11, label %40, !prof !2

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %12, align 8
  %14 = icmp eq %"class.blink::NGOffsetMappingUnit"* %13, null
  %15 = zext i32 %7 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64 %15) #10
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv, i64 0, i64 0)) #10
  %18 = ptrtoint i8* %17 to i64
  br i1 %14, label %19, label %21

19:                                               ; preds = %11
  %20 = bitcast %"class.WTF::Vector.877"* %4 to i64*
  store atomic i64 %18, i64* %20 monotonic, align 8
  br label %37

21:                                               ; preds = %11
  %22 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %12, align 8
  %23 = icmp ne i8* %17, null
  %24 = icmp ne %"class.blink::NGOffsetMappingUnit"* %22, null
  %25 = and i1 %23, %24
  %26 = bitcast %"class.blink::NGOffsetMappingUnit"* %22 to i8*
  br i1 %25, label %27, label %34, !prof !2

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* nonnull align 8 %26, i64 %31, i1 false) #10
  %32 = bitcast %"class.WTF::Vector.877"* %4 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %27, %21
  %35 = phi i8* [ %33, %27 ], [ %26, %21 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %35) #10
  %36 = bitcast %"class.WTF::Vector.877"* %4 to i64*
  store atomic i64 %18, i64* %36 monotonic, align 8
  br label %37

37:                                               ; preds = %34, %19
  %38 = lshr i64 %16, 5
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %8, align 8
  br label %40

40:                                               ; preds = %37, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGOffsetMappingBuilder21AppendIdentityMappingEj(%"class.blink::NGOffsetMappingBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, %1
  %6 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, %1
  store i32 %5, i32* %3, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 0
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutObject"* %10, null
  br i1 %11, label %95, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 4, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %40, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, -1
  %21 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %17, i32 %20) #10
  %22 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %16
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  br label %40

27:                                               ; preds = %16
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, -1
  %30 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %17, i32 %29) #10
  %31 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %30, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, %1
  store i32 %33, i32* %31, align 4
  %34 = load i32, i32* %18, align 4
  %35 = add i32 %34, -1
  %36 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %17, i32 %35) #10
  %37 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %36, i64 0, i32 5
  %38 = load i32, i32* %37, align 4
  %39 = add i32 %38, %1
  store i32 %39, i32* %37, align 4
  br label %95

40:                                               ; preds = %25, %12
  %41 = phi %"class.blink::LayoutObject"* [ %26, %25 ], [ %10, %12 ]
  %42 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4
  %43 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %87, !prof !4

48:                                               ; preds = %40
  %49 = add i32 %44, 1
  %50 = lshr i32 %44, 2
  %51 = add i32 %49, %50
  %52 = icmp ugt i32 %51, 4
  %53 = select i1 %52, i32 %51, i32 4
  %54 = icmp ugt i32 %53, %49
  %55 = select i1 %54, i32 %53, i32 %49
  %56 = icmp ult i32 %44, %55
  br i1 %56, label %57, label %87, !prof !2

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %42, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %58, align 8
  %60 = icmp eq %"class.blink::NGOffsetMappingUnit"* %59, null
  %61 = zext i32 %55 to i64
  %62 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64 %61) #10
  %63 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %62, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv, i64 0, i64 0)) #10
  br i1 %60, label %64, label %69

64:                                               ; preds = %57
  %65 = ptrtoint i8* %63 to i64
  %66 = bitcast %"class.WTF::Vector.877"* %42 to i64*
  store atomic i64 %65, i64* %66 monotonic, align 8
  %67 = lshr i64 %62, 5
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %45, align 8
  br label %87

69:                                               ; preds = %57
  %70 = lshr i64 %62, 5
  %71 = ptrtoint i8* %63 to i64
  %72 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %58, align 8
  %73 = icmp ne i8* %63, null
  %74 = icmp ne %"class.blink::NGOffsetMappingUnit"* %72, null
  %75 = and i1 %73, %74
  %76 = bitcast %"class.blink::NGOffsetMappingUnit"* %72 to i8*
  br i1 %75, label %77, label %83, !prof !2

77:                                               ; preds = %69
  %78 = load i32, i32* %43, align 4
  %79 = zext i32 %78 to i64
  %80 = shl nuw nsw i64 %79, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* nonnull align 8 %76, i64 %80, i1 false) #10
  %81 = bitcast %"class.WTF::Vector.877"* %42 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %77, %69
  %84 = phi i8* [ %82, %77 ], [ %76, %69 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #10
  %85 = bitcast %"class.WTF::Vector.877"* %42 to i64*
  store atomic i64 %71, i64* %85 monotonic, align 8
  %86 = trunc i64 %70 to i32
  store i32 %86, i32* %45, align 8
  br label %87

87:                                               ; preds = %40, %48, %64, %83
  %88 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %42, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %88, align 8
  %90 = load i32, i32* %43, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %89, i64 %91
  tail call void @_ZN5blink19NGOffsetMappingUnitC1ENS_23NGOffsetMappingUnitTypeERKNS_12LayoutObjectEjjjj(%"class.blink::NGOffsetMappingUnit"* %92, i32 0, %"class.blink::LayoutObject"* dereferenceable(88) %41, i32 %4, i32 %5, i32 %7, i32 %8) #10
  %93 = load i32, i32* %43, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %43, align 4
  store i8 1, i8* %13, align 4
  br label %95

95:                                               ; preds = %2, %87, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGOffsetMappingBuilder22AppendCollapsedMappingEj(%"class.blink::NGOffsetMappingBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, %1
  %6 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  store i32 %5, i32* %3, align 8
  %8 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 0
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutObject"* %9, null
  br i1 %10, label %88, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 2
  %13 = load i8, i8* %12, align 4, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %33, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4
  %17 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add i32 %18, -1
  %20 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %16, i32 %19) #10
  %21 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %26, label %24

24:                                               ; preds = %15
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  br label %33

26:                                               ; preds = %15
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, -1
  %29 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %16, i32 %28) #10
  %30 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %29, i64 0, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, %1
  store i32 %32, i32* %30, align 4
  br label %88

33:                                               ; preds = %24, %11
  %34 = phi %"class.blink::LayoutObject"* [ %25, %24 ], [ %9, %11 ]
  %35 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %41, label %80, !prof !4

41:                                               ; preds = %33
  %42 = add i32 %37, 1
  %43 = lshr i32 %37, 2
  %44 = add i32 %42, %43
  %45 = icmp ugt i32 %44, 4
  %46 = select i1 %45, i32 %44, i32 4
  %47 = icmp ugt i32 %46, %42
  %48 = select i1 %47, i32 %46, i32 %42
  %49 = icmp ult i32 %37, %48
  br i1 %49, label %50, label %80, !prof !2

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %35, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %51, align 8
  %53 = icmp eq %"class.blink::NGOffsetMappingUnit"* %52, null
  %54 = zext i32 %48 to i64
  %55 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64 %54) #10
  %56 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %55, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv, i64 0, i64 0)) #10
  br i1 %53, label %57, label %62

57:                                               ; preds = %50
  %58 = ptrtoint i8* %56 to i64
  %59 = bitcast %"class.WTF::Vector.877"* %35 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %55, 5
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %38, align 8
  br label %80

62:                                               ; preds = %50
  %63 = lshr i64 %55, 5
  %64 = ptrtoint i8* %56 to i64
  %65 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %51, align 8
  %66 = icmp ne i8* %56, null
  %67 = icmp ne %"class.blink::NGOffsetMappingUnit"* %65, null
  %68 = and i1 %66, %67
  %69 = bitcast %"class.blink::NGOffsetMappingUnit"* %65 to i8*
  br i1 %68, label %70, label %76, !prof !2

70:                                               ; preds = %62
  %71 = load i32, i32* %36, align 4
  %72 = zext i32 %71 to i64
  %73 = shl nuw nsw i64 %72, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* nonnull align 8 %69, i64 %73, i1 false) #10
  %74 = bitcast %"class.WTF::Vector.877"* %35 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %70, %62
  %77 = phi i8* [ %75, %70 ], [ %69, %62 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #10
  %78 = bitcast %"class.WTF::Vector.877"* %35 to i64*
  store atomic i64 %64, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %38, align 8
  br label %80

80:                                               ; preds = %33, %41, %57, %76
  %81 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %35, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %81, align 8
  %83 = load i32, i32* %36, align 4
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %82, i64 %84
  tail call void @_ZN5blink19NGOffsetMappingUnitC1ENS_23NGOffsetMappingUnitTypeERKNS_12LayoutObjectEjjjj(%"class.blink::NGOffsetMappingUnit"* %85, i32 1, %"class.blink::LayoutObject"* dereferenceable(88) %34, i32 %4, i32 %5, i32 %7, i32 %7) #10
  %86 = load i32, i32* %36, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %36, align 4
  store i8 1, i8* %12, align 4
  br label %88

88:                                               ; preds = %2, %80, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGOffsetMappingBuilder21CollapseTrailingSpaceEj(%"class.blink::NGOffsetMappingBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.1261", align 8
  %4 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %131, label %11

11:                                               ; preds = %2, %18
  %12 = phi i32 [ %13, %18 ], [ %9, %2 ]
  %13 = add i32 %12, -1
  %14 = tail call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %7, i32 %13) #10
  %15 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %14, i64 0, i32 4
  %16 = load i32, i32* %15, align 8
  %17 = icmp ugt i32 %16, %1
  br i1 %17, label %18, label %24

18:                                               ; preds = %11
  %19 = add i32 %16, -1
  store i32 %19, i32* %15, align 8
  %20 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %14, i64 0, i32 5
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, -1
  store i32 %22, i32* %20, align 4
  %23 = icmp eq i32 %13, 0
  br i1 %23, label %131, label %11

24:                                               ; preds = %11
  %25 = icmp eq %"class.blink::NGOffsetMappingUnit"* %14, null
  br i1 %25, label %131, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %14, i64 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = icmp ugt i32 %28, %1
  br i1 %29, label %30, label %131

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %14, i64 0, i32 1
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %14, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = sub i32 %1, %16
  %36 = bitcast %"class.WTF::Vector.1261"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %36) #10
  %37 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %3, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 96, i1 false)
  %38 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %3, i64 0, i32 0, i32 1, i64 0
  %39 = bitcast %"class.WTF::Vector.1261"* %3 to i8**
  store i8* %38, i8** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 3, i32* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %41, align 4
  %42 = icmp eq i32 %35, 0
  %43 = bitcast i8* %38 to %"class.blink::NGOffsetMappingUnit"*
  br i1 %42, label %44, label %46

44:                                               ; preds = %30
  %45 = add i32 %34, 1
  br label %56

46:                                               ; preds = %30
  %47 = add i32 %35, %34
  call void @_ZN5blink19NGOffsetMappingUnitC1ENS_23NGOffsetMappingUnitTypeERKNS_12LayoutObjectEjjjj(%"class.blink::NGOffsetMappingUnit"* %43, i32 0, %"class.blink::LayoutObject"* dereferenceable(88) %32, i32 %34, i32 %47, i32 %16, i32 %1) #10
  %48 = load i32, i32* %41, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %41, align 4
  %50 = load i32, i32* %40, align 8
  %51 = add i32 %47, 1
  %52 = icmp eq i32 %49, %50
  br i1 %52, label %53, label %56, !prof !4

53:                                               ; preds = %46
  %54 = add i32 %50, 1
  call void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1261"* nonnull %3, i32 %54) #10
  %55 = load i32, i32* %41, align 4
  br label %56

56:                                               ; preds = %44, %46, %53
  %57 = phi i32 [ %51, %53 ], [ %51, %46 ], [ %45, %44 ]
  %58 = phi i32 [ %47, %53 ], [ %47, %46 ], [ %34, %44 ]
  %59 = phi i32 [ %1, %53 ], [ %1, %46 ], [ %16, %44 ]
  %60 = phi i32 [ %55, %53 ], [ %49, %46 ], [ 0, %44 ]
  %61 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %3, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %61, align 8
  %63 = zext i32 %60 to i64
  %64 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %62, i64 %63
  call void @_ZN5blink19NGOffsetMappingUnitC1ENS_23NGOffsetMappingUnitTypeERKNS_12LayoutObjectEjjjj(%"class.blink::NGOffsetMappingUnit"* %64, i32 1, %"class.blink::LayoutObject"* dereferenceable(88) %32, i32 %58, i32 %57, i32 %59, i32 %59) #10
  %65 = load i32, i32* %41, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %41, align 4
  %67 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %14, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = icmp ult i32 %57, %68
  br i1 %69, label %70, label %85

70:                                               ; preds = %56
  %71 = load i32, i32* %27, align 4
  %72 = add i32 %71, -1
  %73 = load i32, i32* %40, align 8
  %74 = icmp eq i32 %66, %73
  br i1 %74, label %75, label %78, !prof !4

75:                                               ; preds = %70
  %76 = add i32 %65, 2
  call void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1261"* nonnull %3, i32 %76) #10
  %77 = load i32, i32* %41, align 4
  br label %78

78:                                               ; preds = %70, %75
  %79 = phi i32 [ %77, %75 ], [ %66, %70 ]
  %80 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %61, align 8
  %81 = zext i32 %79 to i64
  %82 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %80, i64 %81
  call void @_ZN5blink19NGOffsetMappingUnitC1ENS_23NGOffsetMappingUnitTypeERKNS_12LayoutObjectEjjjj(%"class.blink::NGOffsetMappingUnit"* %82, i32 0, %"class.blink::LayoutObject"* dereferenceable(88) %32, i32 %57, i32 %68, i32 %59, i32 %72) #10
  %83 = load i32, i32* %41, align 4
  %84 = add i32 %83, 1
  store i32 %84, i32* %41, align 4
  br label %85

85:                                               ; preds = %78, %56
  %86 = bitcast %"class.WTF::Vector.877"* %7 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %14 to i64
  %89 = sub i64 %88, %87
  %90 = lshr exact i64 %89, 5
  %91 = trunc i64 %90 to i32
  call void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.877"* %7, i32 %91)
  %92 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %61, align 8
  %93 = load i32, i32* %41, align 4
  call void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjPKT_j(%"class.WTF::Vector.877"* %7, i32 %91, %"class.blink::NGOffsetMappingUnit"* %92, i32 %93) #10
  %94 = load i32, i32* %41, align 4
  %95 = add i32 %94, %91
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %108, label %97

97:                                               ; preds = %85
  %98 = add i32 %95, -1
  %99 = load i32, i32* %8, align 4
  %100 = icmp ult i32 %95, %99
  br i1 %100, label %101, label %108

101:                                              ; preds = %97, %105
  %102 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %7, i32 %98) #10
  %103 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %7, i32 %95) #10
  %104 = call zeroext i1 @_ZN5blink19NGOffsetMappingUnit11ConcatenateERKS0_(%"class.blink::NGOffsetMappingUnit"* %102, %"class.blink::NGOffsetMappingUnit"* dereferenceable(32) %103) #10
  br i1 %104, label %105, label %108

105:                                              ; preds = %101
  call void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.877"* %7, i32 %95)
  %106 = load i32, i32* %8, align 4
  %107 = icmp ult i32 %95, %106
  br i1 %107, label %101, label %108

108:                                              ; preds = %105, %101, %97, %85
  %109 = icmp eq i32 %91, 0
  br i1 %109, label %121, label %110

110:                                              ; preds = %108
  %111 = add i32 %91, -1
  %112 = load i32, i32* %8, align 4
  %113 = icmp ugt i32 %112, %91
  br i1 %113, label %114, label %121

114:                                              ; preds = %110, %118
  %115 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %7, i32 %111) #10
  %116 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %7, i32 %91) #10
  %117 = call zeroext i1 @_ZN5blink19NGOffsetMappingUnit11ConcatenateERKS0_(%"class.blink::NGOffsetMappingUnit"* %115, %"class.blink::NGOffsetMappingUnit"* dereferenceable(32) %116) #10
  br i1 %117, label %118, label %121

118:                                              ; preds = %114
  call void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.877"* %7, i32 %91)
  %119 = load i32, i32* %8, align 4
  %120 = icmp ugt i32 %119, %91
  br i1 %120, label %114, label %121

121:                                              ; preds = %118, %114, %110, %108
  %122 = load i32, i32* %41, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %125, label %124, !prof !4

124:                                              ; preds = %121
  store i32 0, i32* %41, align 4
  br label %125

125:                                              ; preds = %124, %121
  %126 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %61, align 8
  %127 = icmp eq %"class.blink::NGOffsetMappingUnit"* %126, %43
  br i1 %127, label %130, label %128, !prof !2

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1262"* nonnull %129, %"class.blink::NGOffsetMappingUnit"* %126) #10
  br label %130

130:                                              ; preds = %125, %128
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %36) #10
  br label %131

131:                                              ; preds = %18, %2, %24, %26, %130
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector.877"*, i32) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %24, i64 %25
  %27 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %26, i64 1
  %28 = icmp ne %"class.blink::NGOffsetMappingUnit"* %26, null
  %29 = icmp ne %"class.blink::NGOffsetMappingUnit"* %27, null
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %40, !prof !2

31:                                               ; preds = %22
  %32 = load i32, i32* %8, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %24, i64 %33
  %35 = bitcast %"class.blink::NGOffsetMappingUnit"* %26 to i8*
  %36 = bitcast %"class.blink::NGOffsetMappingUnit"* %27 to i8*
  %37 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %34 to i64
  %38 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %27 to i64
  %39 = sub i64 %37, %38
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %36, i64 %39, i1 false) #10
  br label %40

40:                                               ; preds = %22, %31
  %41 = load i32, i32* %8, align 4
  %42 = add i32 %41, -1
  store i32 %42, i32* %8, align 4
  ret void
}

declare zeroext i1 @_ZN5blink19NGOffsetMappingUnit11ConcatenateERKS0_(%"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"* dereferenceable(32)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGOffsetMappingBuilder31RestoreTrailingCollapsibleSpaceERKNS_10LayoutTextEj(%"class.blink::NGOffsetMappingBuilder"*, %"class.blink::LayoutText"* dereferenceable(144), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::NGOffsetMappingUnit", align 8
  %5 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, 1
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %57, label %14

14:                                               ; preds = %3
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %10, i64 %15
  %17 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %1, i64 0, i32 0
  br label %18

18:                                               ; preds = %14, %34
  %19 = phi %"class.blink::NGOffsetMappingUnit"* [ %16, %14 ], [ %20, %34 ]
  %20 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %19, i64 -1
  %21 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %19, i64 -1, i32 5
  %22 = load i32, i32* %21, align 4
  %23 = icmp ult i32 %22, %2
  br i1 %23, label %57, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %19, i64 -1, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %2
  %28 = icmp eq i32 %22, %2
  %29 = and i1 %28, %27
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %19, i64 -1, i32 1
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = icmp eq %"class.blink::LayoutObject"* %32, %17
  br i1 %33, label %38, label %34

34:                                               ; preds = %30, %24
  %35 = add i32 %26, 1
  store i32 %35, i32* %25, align 8
  %36 = add i32 %22, 1
  store i32 %36, i32* %21, align 4
  %37 = icmp eq %"class.blink::NGOffsetMappingUnit"* %20, %10
  br i1 %37, label %57, label %18

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %19, i64 -1, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %20, i64 0, i32 0
  store i32 0, i32* %41, align 8
  %42 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %19, i64 -1, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = add i32 %43, 1
  store i32 %44, i32* %39, align 4
  %45 = add i32 %2, 1
  store i32 %45, i32* %21, align 4
  %46 = sub i32 %40, %43
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %57, label %48

48:                                               ; preds = %38
  %49 = bitcast %"class.WTF::Vector.877"* %8 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %20 to i64
  %52 = sub i64 %51, %50
  %53 = lshr exact i64 %52, 5
  %54 = trunc i64 %53 to i32
  %55 = add i32 %54, 1
  %56 = bitcast %"class.blink::NGOffsetMappingUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #10
  call void @_ZN5blink19NGOffsetMappingUnitC1ENS_23NGOffsetMappingUnitTypeERKNS_12LayoutObjectEjjjj(%"class.blink::NGOffsetMappingUnit"* nonnull %4, i32 1, %"class.blink::LayoutObject"* dereferenceable(88) %17, i32 %44, i32 %40, i32 %45, i32 %45) #10
  call void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjOT_(%"class.WTF::Vector.877"* %8, i32 %55, %"class.blink::NGOffsetMappingUnit"* nonnull dereferenceable(32) %4)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #10
  br label %57

57:                                               ; preds = %18, %34, %3, %38, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjOT_(%"class.WTF::Vector.877"*, i32, %"class.blink::NGOffsetMappingUnit"* dereferenceable(32)) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = call %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.877"* %0, i32 %29, %"class.blink::NGOffsetMappingUnit"* %2)
  br label %31

31:                                               ; preds = %28, %23
  %32 = phi %"class.blink::NGOffsetMappingUnit"* [ %30, %28 ], [ %2, %23 ]
  %33 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %33, align 8
  %35 = zext i32 %1 to i64
  %36 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %34, i64 %35
  %37 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %36, i64 1
  %38 = icmp ne %"class.blink::NGOffsetMappingUnit"* %37, null
  %39 = icmp ne %"class.blink::NGOffsetMappingUnit"* %36, null
  %40 = and i1 %39, %38
  br i1 %40, label %43, label %41, !prof !2

41:                                               ; preds = %31
  %42 = bitcast %"class.blink::NGOffsetMappingUnit"* %36 to i8*
  br label %52

43:                                               ; preds = %31
  %44 = load i32, i32* %9, align 4
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %34, i64 %45
  %47 = bitcast %"class.blink::NGOffsetMappingUnit"* %37 to i8*
  %48 = bitcast %"class.blink::NGOffsetMappingUnit"* %36 to i8*
  %49 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %46 to i64
  %50 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %36 to i64
  %51 = sub i64 %49, %50
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* nonnull align 8 %48, i64 %51, i1 false) #10
  br label %52

52:                                               ; preds = %41, %43
  %53 = phi i8* [ %42, %41 ], [ %48, %43 ]
  %54 = bitcast %"class.blink::NGOffsetMappingUnit"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 32, i1 false) #10
  %55 = load i32, i32* %9, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %9, align 4
  ret void
}

declare void @_ZN5blink19NGOffsetMappingUnitC1ENS_23NGOffsetMappingUnitTypeERKNS_12LayoutObjectEjjjj(%"class.blink::NGOffsetMappingUnit"*, i32, %"class.blink::LayoutObject"* dereferenceable(88), i32, i32, i32, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22NGOffsetMappingBuilder20SetDestinationStringEN3WTF6StringE(%"class.blink::NGOffsetMappingBuilder"* nocapture, %"class.WTF::StringImpl"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 6
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #10
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !4

19:                                               ; preds = %10
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::String"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #10
  br label %41

41:                                               ; preds = %22, %37, %40
  br i1 %4, label %55, label %42

42:                                               ; preds = %41
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #10
  br label %55

55:                                               ; preds = %41, %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGOffsetMapping"* @_ZN5blink22NGOffsetMappingBuilder5BuildEv(%"class.blink::NGOffsetMappingBuilder"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::Node"*, align 8
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.std::__1::pair.1272"*
  %5 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::Node"** %2 to i8*
  %11 = bitcast i64* %3 to i8*
  %12 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 5, i32 0
  br label %38

13:                                               ; preds = %78, %1
  %14 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 5
  %15 = call noalias i8* @malloc(i64 48) #10
  %16 = bitcast i8* %15 to %"class.blink::NGOffsetMapping"*
  %17 = getelementptr inbounds %"class.blink::NGOffsetMappingBuilder", %"class.blink::NGOffsetMappingBuilder"* %0, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #10
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !4

34:                                               ; preds = %25
  call void @llvm.trap() #10
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %13, %20, %35
  call void @_ZN5blink15NGOffsetMappingC1EON3WTF6VectorINS_19NGOffsetMappingUnitELj0ENS1_18PartitionAllocatorEEEONS1_7HashMapINS_10PersistentIKNS_4NodeEEENSt3__14pairIjjEENS1_10MemberHashISA_EENS1_10HashTraitsISB_EENSH_ISE_EES4_EENS1_6StringE(%"class.blink::NGOffsetMapping"* %16, %"class.WTF::Vector.877"* dereferenceable(16) %5, %"class.WTF::HashMap.882"* dereferenceable(24) %14, %"class.WTF::StringImpl"* %18) #10
  ret %"class.blink::NGOffsetMapping"* %16

38:                                               ; preds = %9, %78
  %39 = phi i32 [ 0, %9 ], [ %79, %78 ]
  %40 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %5, i32 %39) #10
  %41 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %40, i64 0, i32 1
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %43 = add nuw i32 %39, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  store %"class.blink::Node"* inttoptr (i64 -6148914691236517206 to %"class.blink::Node"*), %"class.blink::Node"** %2, align 8
  %44 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %5, i32 %39) #10
  %45 = call %"class.blink::Node"* @_ZNK5blink19NGOffsetMappingUnit14AssociatedNodeEv(%"class.blink::NGOffsetMappingUnit"* %44) #10
  store %"class.blink::Node"* %45, %"class.blink::Node"** %2, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  %47 = load i32, i32* %6, align 4
  %48 = icmp ult i32 %43, %47
  br i1 %46, label %50, label %49

49:                                               ; preds = %38
  br i1 %48, label %51, label %61

50:                                               ; preds = %38
  br i1 %48, label %68, label %78

51:                                               ; preds = %49, %57
  %52 = phi i32 [ %58, %57 ], [ %43, %49 ]
  %53 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %5, i32 %52) #10
  %54 = call %"class.blink::Node"* @_ZNK5blink19NGOffsetMappingUnit14AssociatedNodeEv(%"class.blink::NGOffsetMappingUnit"* %53) #10
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %56 = icmp eq %"class.blink::Node"* %54, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %51
  %58 = add nuw i32 %52, 1
  %59 = load i32, i32* %6, align 4
  %60 = icmp ult i32 %58, %59
  br i1 %60, label %51, label %61

61:                                               ; preds = %51, %57, %49
  %62 = phi i32 [ %43, %49 ], [ %58, %57 ], [ %52, %51 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %63 = zext i32 %62 to i64
  %64 = shl nuw i64 %63, 32
  %65 = zext i32 %39 to i64
  %66 = or i64 %64, %65
  store i64 %66, i64* %3, align 8
  %67 = call { %"struct.WTF::KeyValuePair.886"*, i8 } @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERPS4_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.883"* %12, %"class.blink::Node"** nonnull dereferenceable(8) %2, %"struct.std::__1::pair.1272"* nonnull dereferenceable(8) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %78

68:                                               ; preds = %50, %74
  %69 = phi i32 [ %75, %74 ], [ %43, %50 ]
  %70 = call dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"* %5, i32 %69) #10
  %71 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %70, i64 0, i32 1
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutObject"* %72, %42
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = add nuw i32 %69, 1
  %76 = load i32, i32* %6, align 4
  %77 = icmp ult i32 %75, %76
  br i1 %77, label %68, label %78

78:                                               ; preds = %74, %68, %50, %61
  %79 = phi i32 [ %62, %61 ], [ %43, %50 ], [ %75, %74 ], [ %69, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  %80 = load i32, i32* %6, align 4
  %81 = icmp ult i32 %79, %80
  br i1 %81, label %38, label %13
}

declare %"class.blink::Node"* @_ZNK5blink19NGOffsetMappingUnit14AssociatedNodeEv(%"class.blink::NGOffsetMappingUnit"*) local_unnamed_addr #4

declare %"class.blink::Text"* @_ZNK5blink18LayoutTextFragment18AssociatedTextNodeEv(%"class.blink::LayoutTextFragment"*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1262"*, %"class.blink::NGOffsetMappingUnit"*) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"class.blink::NGOffsetMappingUnit"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #10
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.883"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = mul nuw nsw i64 %27, 24
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink10PersistentIKNS2_4NodeEEENSt3__14pairIjjEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #10
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.886"*
  %31 = call %"struct.WTF::KeyValuePair.886"* @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.883"* %0, %"struct.WTF::KeyValuePair.886"* %30, i32 %17, %"struct.WTF::KeyValuePair.886"* null) #10
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.886"* @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.883"*, %"struct.WTF::KeyValuePair.886"*, i32, %"struct.WTF::KeyValuePair.886"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.883", align 8
  %6 = bitcast %"class.WTF::HashTable.883"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.883"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.886"* %1, %"struct.WTF::KeyValuePair.886"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.886"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.883"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.883"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.886"*, %"struct.WTF::KeyValuePair.886"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.886"* %22 to i64
  br label %66

24:                                               ; preds = %121
  %25 = bitcast %"class.WTF::HashTable.883"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.883"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %122, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.886"* [ null, %16 ], [ %125, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %123, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.886"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %35, i64 %42, i32 0, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = icmp eq %"class.blink::Node"* %44, inttoptr (i64 -1 to %"class.blink::Node"*)
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %35, i64 %42, i32 0, i32 0, i32 1, i32 0
  %48 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %47, align 8
  %49 = icmp eq %"class.blink::PersistentNode"* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %52 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %53 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.blink::PersistentNode"* %48 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %48, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %56, align 8
  store %"class.blink::PersistentNode"* %48, %"class.blink::PersistentNode"** %52, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %47, align 8
  br label %57

57:                                               ; preds = %50, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair.886"* %33

66:                                               ; preds = %21, %121
  %67 = phi i64 [ %122, %121 ], [ %23, %21 ]
  %68 = phi i32 [ %123, %121 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair.886"* [ %124, %121 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair.886"* [ %125, %121 ], [ null, %21 ]
  %71 = phi i32 [ %126, %121 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %69, i64 %72
  %74 = bitcast %"struct.WTF::KeyValuePair.886"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  switch i64 %75, label %76 [
    i64 -1, label %121
    i64 0, label %121
  ]

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %73, i64 0, i32 0
  %78 = call { %"struct.WTF::KeyValuePair.886"*, i8 } @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.883"* nonnull %5, %"class.blink::Persistent.1301"* dereferenceable(16) %77) #10
  %79 = extractvalue { %"struct.WTF::KeyValuePair.886"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %79, i64 0, i32 0, i32 0, i32 1, i32 0
  %81 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %80, align 8
  %82 = icmp eq %"class.blink::PersistentNode"* %81, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %76
  %84 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %85 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %84, i64 0, i32 0, i32 0
  %86 = bitcast %"class.blink::PersistentRegion"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.blink::PersistentNode"* %81 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %81, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %89, align 8
  store %"class.blink::PersistentNode"* %81, %"class.blink::PersistentNode"** %85, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %80, align 8
  br label %90

90:                                               ; preds = %83, %76
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %79, i64 0, i32 0, i32 0
  %92 = load i64, i64* %74, align 8
  %93 = bitcast %"struct.WTF::KeyValuePair.886"* %79 to i64*
  store i64 %92, i64* %93, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %80, align 8
  switch i64 %92, label %94 [
    i64 0, label %109
    i64 -1, label %109
  ]

94:                                               ; preds = %90
  %95 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %96 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %96, align 8
  %98 = icmp eq %"class.blink::PersistentNode"* %97, null
  br i1 %98, label %99, label %102, !prof !4

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %95, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %100) #10
  %101 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %96, align 8
  br label %102

102:                                              ; preds = %99, %94
  %103 = phi %"class.blink::PersistentNode"* [ %101, %99 ], [ %97, %94 ]
  %104 = bitcast %"class.blink::PersistentNode"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.blink::PersistentRegion"* %95 to i64*
  store i64 %105, i64* %106, align 8
  %107 = bitcast %"class.blink::PersistentNode"* %103 to %"class.blink::PersistentBase.1302"**
  store %"class.blink::PersistentBase.1302"* %91, %"class.blink::PersistentBase.1302"** %107, align 8
  %108 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %103, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_4NodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %108, align 8
  store %"class.blink::PersistentNode"* %103, %"class.blink::PersistentNode"** %80, align 8
  br label %109

109:                                              ; preds = %90, %90, %102
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %79, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %69, i64 %72, i32 1
  %112 = bitcast %"struct.std::__1::pair.1272"* %111 to i64*
  %113 = bitcast %"struct.std::__1::pair.1272"* %110 to i64*
  %114 = load i64, i64* %112, align 8
  store i64 %114, i64* %113, align 8
  %115 = load %"struct.WTF::KeyValuePair.886"*, %"struct.WTF::KeyValuePair.886"** %15, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %115, i64 %72
  %117 = icmp eq %"struct.WTF::KeyValuePair.886"* %116, %3
  %118 = select i1 %117, %"struct.WTF::KeyValuePair.886"* %79, %"struct.WTF::KeyValuePair.886"* %70
  %119 = load i32, i32* %12, align 8
  %120 = ptrtoint %"struct.WTF::KeyValuePair.886"* %115 to i64
  br label %121

121:                                              ; preds = %66, %66, %109
  %122 = phi i64 [ %67, %66 ], [ %120, %109 ], [ %67, %66 ]
  %123 = phi i32 [ %68, %66 ], [ %119, %109 ], [ %68, %66 ]
  %124 = phi %"struct.WTF::KeyValuePair.886"* [ %69, %66 ], [ %115, %109 ], [ %69, %66 ]
  %125 = phi %"struct.WTF::KeyValuePair.886"* [ %70, %66 ], [ %118, %109 ], [ %70, %66 ]
  %126 = add i32 %71, 1
  %127 = icmp eq i32 %126, %123
  br i1 %127, label %24, label %66
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.886"*, i8 } @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.883"*, %"class.blink::Persistent.1301"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.886"*, %"struct.WTF::KeyValuePair.886"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Persistent.1301"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.886"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.886"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.886"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.886"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.886"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.886"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.886"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.886"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.886"*, i8 } undef, %"struct.WTF::KeyValuePair.886"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.886"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.886"*, i8 } %87
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_4NodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::Node"**
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::Node"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::Node"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.877"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %24, i64 %25
  ret %"class.blink::NGOffsetMappingUnit"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1261"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #10
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i8* %15, i8* %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !2

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %31, align 8
  %33 = icmp eq %"class.blink::NGOffsetMappingUnit"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 3
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64 %37) #10
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv, i64 0, i64 0)) #10
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1261"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 5
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1261"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 3, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1261"* %0, i32 %27) #10
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1261"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 4
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %5, align 8
  %7 = icmp eq %"class.blink::NGOffsetMappingUnit"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::NGOffsetMappingUnit"*
  %10 = icmp eq %"class.blink::NGOffsetMappingUnit"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1261"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 3, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1261"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 3, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::NGOffsetMappingUnit"* %6 to i8*
  %27 = shl nuw nsw i64 %25, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #10
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1262"* %19, %"class.blink::NGOffsetMappingUnit"* nonnull %6) #10
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64 %30) #10
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv, i64 0, i64 0)) #10
  %33 = lshr i64 %31, 5
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::NGOffsetMappingUnit"* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !2

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::NGOffsetMappingUnit"* %36 to i8*
  %45 = shl nuw nsw i64 %43, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #10
  %46 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::NGOffsetMappingUnit"* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::NGOffsetMappingUnit"*
  %51 = icmp eq %"class.blink::NGOffsetMappingUnit"* %48, %50
  br i1 %51, label %54, label %52, !prof !2

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink19NGOffsetMappingUnitELj3ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.1262"* %53, %"class.blink::NGOffsetMappingUnit"* %48) #10
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1261"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1261", %"class.WTF::Vector.1261"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjPKT_j(%"class.WTF::Vector.877"*, i32, %"class.blink::NGOffsetMappingUnit"*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = icmp ult i32 %14, %1
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* null, i8** %12, align 8
  br label %27

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* %19, i8* %20) #10
  %21 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  store i8* %22, i8** %12, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1990, %"class.logging::CheckOpResult"* nonnull %7) #10
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10
  br label %27

27:                                               ; preds = %17, %18, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  %28 = load i32, i32* %13, align 4
  %29 = add i32 %28, %3
  %30 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp ugt i32 %29, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = call %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.877"* %0, i32 %29, %"class.blink::NGOffsetMappingUnit"* %2) #10
  %35 = load i32, i32* %13, align 4
  br label %36

36:                                               ; preds = %33, %27
  %37 = phi i32 [ %35, %33 ], [ %28, %27 ]
  %38 = phi %"class.blink::NGOffsetMappingUnit"* [ %34, %33 ], [ %2, %27 ]
  %39 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %29, %37
  br i1 %42, label %44, label %43

43:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %36
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %29) #10
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %37) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %45, i8* %46) #10
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 1996, %"class.logging::CheckOpResult"* nonnull %9) #10
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #10
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  %54 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %54, align 8
  %56 = zext i32 %1 to i64
  %57 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %55, i64 %56
  %58 = zext i32 %3 to i64
  %59 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %57, i64 %58
  %60 = icmp ne %"class.blink::NGOffsetMappingUnit"* %59, null
  %61 = icmp ne %"class.blink::NGOffsetMappingUnit"* %57, null
  %62 = and i1 %61, %60
  br i1 %62, label %63, label %72, !prof !2

63:                                               ; preds = %53
  %64 = load i32, i32* %13, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %55, i64 %65
  %67 = bitcast %"class.blink::NGOffsetMappingUnit"* %59 to i8*
  %68 = bitcast %"class.blink::NGOffsetMappingUnit"* %57 to i8*
  %69 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %66 to i64
  %70 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %57 to i64
  %71 = sub i64 %69, %70
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* nonnull align 8 %68, i64 %71, i1 false) #10
  br label %72

72:                                               ; preds = %53, %63
  %73 = icmp ne %"class.blink::NGOffsetMappingUnit"* %38, null
  %74 = and i1 %73, %61
  br i1 %74, label %75, label %79, !prof !2

75:                                               ; preds = %72
  %76 = bitcast %"class.blink::NGOffsetMappingUnit"* %57 to i8*
  %77 = bitcast %"class.blink::NGOffsetMappingUnit"* %38 to i8*
  %78 = shl nuw nsw i64 %58, 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* nonnull align 8 %77, i64 %78, i1 false) #10
  br label %79

79:                                               ; preds = %72, %75
  store i32 %29, i32* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGOffsetMappingUnit"* @_ZN3WTF6VectorIN5blink19NGOffsetMappingUnitELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS2_(%"class.WTF::Vector.877"*, i32, %"class.blink::NGOffsetMappingUnit"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %4, align 8
  %6 = icmp ugt %"class.blink::NGOffsetMappingUnit"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %5, i64 %10
  %12 = icmp ugt %"class.blink::NGOffsetMappingUnit"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::NGOffsetMappingUnit"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.877"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 5
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"class.blink::NGOffsetMappingUnit"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"class.blink::NGOffsetMappingUnit"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !2

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %41, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.877"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.877"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %2 to i64
  %55 = ptrtoint %"class.blink::NGOffsetMappingUnit"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 5
  %58 = getelementptr inbounds %"class.WTF::Vector.877", %"class.WTF::Vector.877"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !2

68:                                               ; preds = %53
  %69 = icmp eq %"class.blink::NGOffsetMappingUnit"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink19NGOffsetMappingUnitEEEmm(i64 %70) #10
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19NGOffsetMappingUnitEEEPKcv, i64 0, i64 0)) #10
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.877"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"class.blink::NGOffsetMappingUnit"*, %"class.blink::NGOffsetMappingUnit"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"class.blink::NGOffsetMappingUnit"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"class.blink::NGOffsetMappingUnit"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !2

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %81, i64 %85, i1 false) #10
  %86 = bitcast %"class.WTF::Vector.877"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #10
  %90 = bitcast %"class.WTF::Vector.877"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 5
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"class.blink::NGOffsetMappingUnit"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"class.blink::NGOffsetMappingUnit"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"class.blink::NGOffsetMappingUnit", %"class.blink::NGOffsetMappingUnit"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"class.blink::NGOffsetMappingUnit"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"class.blink::NGOffsetMappingUnit"* %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.886"*, i8 } @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERPS4_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.883"*, %"class.blink::Node"** dereferenceable(8), %"struct.std::__1::pair.1272"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.886"*, %"struct.WTF::KeyValuePair.886"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.886"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.886"* @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.883"* %0, %"struct.WTF::KeyValuePair.886"* null)
  %9 = load %"struct.WTF::KeyValuePair.886"*, %"struct.WTF::KeyValuePair.886"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.886"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Node"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.886"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.886"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %141, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.886"* %60, %"struct.WTF::KeyValuePair.886"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.886"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.886"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 24, i1 false) #10
  %80 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Node"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.886"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %89, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %89, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Node"* %88, %"class.blink::Node"** %91, align 8
  %92 = ptrtoint %"class.blink::Node"* %88 to i64
  switch i64 %92, label %93 [
    i64 0, label %112
    i64 -1, label %112
  ]

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %89, i64 0, i32 0, i32 0, i32 1, i32 0
  %95 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %94, align 8
  %96 = icmp eq %"class.blink::PersistentNode"* %95, null
  br i1 %96, label %97, label %123

97:                                               ; preds = %93
  %98 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %99 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %99, align 8
  %101 = icmp eq %"class.blink::PersistentNode"* %100, null
  br i1 %101, label %102, label %105, !prof !4

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %98, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %103) #10
  %104 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %99, align 8
  br label %105

105:                                              ; preds = %102, %97
  %106 = phi %"class.blink::PersistentNode"* [ %104, %102 ], [ %100, %97 ]
  %107 = bitcast %"class.blink::PersistentNode"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.blink::PersistentRegion"* %98 to i64*
  store i64 %108, i64* %109, align 8
  %110 = bitcast %"class.blink::PersistentNode"* %106 to %"class.blink::PersistentBase.1302"**
  store %"class.blink::PersistentBase.1302"* %90, %"class.blink::PersistentBase.1302"** %110, align 8
  %111 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %106, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_4NodeELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %111, align 8
  store %"class.blink::PersistentNode"* %106, %"class.blink::PersistentNode"** %94, align 8
  br label %123

112:                                              ; preds = %87, %87
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %89, i64 0, i32 0, i32 0, i32 1, i32 0
  %114 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %113, align 8
  %115 = icmp eq %"class.blink::PersistentNode"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %118 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %117, i64 0, i32 0, i32 0
  %119 = bitcast %"class.blink::PersistentRegion"* %117 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.blink::PersistentNode"* %114 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %114, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %122, align 8
  store %"class.blink::PersistentNode"* %114, %"class.blink::PersistentNode"** %118, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %113, align 8
  br label %123

123:                                              ; preds = %93, %105, %112, %116
  %124 = getelementptr inbounds %"struct.std::__1::pair.1272", %"struct.std::__1::pair.1272"* %2, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %89, i64 0, i32 1, i32 0
  store i32 %125, i32* %126, align 4
  %127 = getelementptr inbounds %"struct.std::__1::pair.1272", %"struct.std::__1::pair.1272"* %2, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.886", %"struct.WTF::KeyValuePair.886"* %89, i64 0, i32 1, i32 1
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %130, align 4
  %133 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = add i32 %134, %132
  %136 = shl i32 %135, 1
  %137 = load i32, i32* %12, align 8
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %141, label %139

139:                                              ; preds = %123
  %140 = tail call %"struct.WTF::KeyValuePair.886"* @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.883"* %0, %"struct.WTF::KeyValuePair.886"* %89)
  br label %141

141:                                              ; preds = %58, %123, %139
  %142 = phi i8 [ 1, %123 ], [ 1, %139 ], [ 0, %58 ]
  %143 = phi %"struct.WTF::KeyValuePair.886"* [ %89, %123 ], [ %140, %139 ], [ %60, %58 ]
  %144 = insertvalue { %"struct.WTF::KeyValuePair.886"*, i8 } undef, %"struct.WTF::KeyValuePair.886"* %143, 0
  %145 = insertvalue { %"struct.WTF::KeyValuePair.886"*, i8 } %144, i8 %142, 1
  ret { %"struct.WTF::KeyValuePair.886"*, i8 } %145
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.886"* @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.883"*, %"struct.WTF::KeyValuePair.886"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.883", %"class.WTF::HashTable.883"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([148 x i8], [148 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink10PersistentIKNS2_4NodeEEENSt3__14pairIjjEEEEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.886"*
  %37 = call %"struct.WTF::KeyValuePair.886"* @_ZN3WTF9HashTableIN5blink10PersistentIKNS1_4NodeEEENS_12KeyValuePairIS5_NSt3__14pairIjjEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.883"* %0, %"struct.WTF::KeyValuePair.886"* %36, i32 %32, %"struct.WTF::KeyValuePair.886"* %1) #10
  ret %"struct.WTF::KeyValuePair.886"* %37
}

declare void @_ZN5blink15NGOffsetMappingC1EON3WTF6VectorINS_19NGOffsetMappingUnitELj0ENS1_18PartitionAllocatorEEEONS1_7HashMapINS_10PersistentIKNS_4NodeEEENSt3__14pairIjjEENS1_10MemberHashISA_EENS1_10HashTraitsISB_EENSH_ISE_EES4_EENS1_6StringE(%"class.blink::NGOffsetMapping"*, %"class.WTF::Vector.877"* dereferenceable(16), %"class.WTF::HashMap.882"* dereferenceable(24), %"class.WTF::StringImpl"*) unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
