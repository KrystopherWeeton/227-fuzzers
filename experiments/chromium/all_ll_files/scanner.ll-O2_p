; ModuleID = '../../third_party/wayland/src/src/scanner.c'
source_filename = "../../third_party/wayland/src/src/scanner.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.option = type { i8*, i32, i32*, i32 }
%struct.parse_context = type { %struct.location, %struct.XML_ParserStruct*, %struct.protocol*, %struct.interface*, %struct.message*, %struct.enumeration*, %struct.description*, [8192 x i8], i32 }
%struct.location = type { i8*, i32 }
%struct.XML_ParserStruct = type opaque
%struct.protocol = type { i8*, i8*, %struct.wl_list, i32, i32, i8*, %struct.description*, i8 }
%struct.wl_list = type { %struct.wl_list*, %struct.wl_list* }
%struct.interface = type { %struct.location, i8*, i8*, i32, i32, %struct.wl_list, %struct.wl_list, %struct.wl_list, %struct.wl_list, %struct.description* }
%struct.message = type { %struct.location, i8*, i8*, %struct.wl_list, %struct.wl_list, i32, i32, i32, i32, i32, i32, %struct.description* }
%struct.enumeration = type { i8*, i8*, %struct.wl_list, %struct.wl_list, %struct.description*, i8, i32 }
%struct.description = type { i8*, i8* }
%struct.wl_array = type { i64, i64, i8* }
%struct.arg = type { i8*, i32, i32, i8*, %struct.wl_list, i8*, i8* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

@stdin = external local_unnamed_addr global %struct._IO_FILE*, align 8
@main.options = internal constant [5 x %struct.option] [%struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 0, i32* null, i32 104 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i32 0, i32 0), i32 0, i32* null, i32 99 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option zeroinitializer], align 16
@.str = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"include-core-only\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"strict\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"hvcs\00", align 1
@optind = external local_unnamed_addr global i32, align 4
@.str.5 = private unnamed_addr constant [14 x i8] c"client-header\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"server-header\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"private-code\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"public-code\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"code\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.11 = private unnamed_addr constant [31 x i8] c"Could not open input file: %s\0A\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.13 = private unnamed_addr constant [32 x i8] c"Could not open output file: %s\0A\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"<stdin>\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"failed to create parser\0A\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"fread: %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [43 x i8] c"Error parsing XML at line %ld col %ld: %s\0A\00", align 1
@.str.19 = private unnamed_addr constant [94 x i8] c"Using \22code\22 is deprecated - use private-code or public-code.\0ASee the help page for details.\0A\00", align 1
@.str.20 = private unnamed_addr constant [100 x i8] c"usage: %s [OPTION] [client-header|server-header|private-code|public-code] [input_file output_file]\0A\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"wayland-scanner\00", align 1
@.str.23 = private unnamed_addr constant [309 x i8] c"Converts XML protocol descriptions supplied on stdin or input file to client\0Aheaders, server headers, or protocol marshalling code.\0A\0AUse \22public-code\22 only if the marshalling code will be public - aka DSO will export it while other components will be using it.\0AUsing \22private-code\22 is strongly recommended.\0A\0A\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"options:\0A\00", align 1
@.str.25 = private unnamed_addr constant [526 x i8] c"    -h,  --help                  display this help and exit.\0A    -v,  --version               print the wayland library version that\0A                                 the scanner was built against.\0A    -c,  --include-core-only     include the core version of the headers,\0A                                 that is e.g. wayland-client-core.h instead\0A                                 of wayland-client.h.\0A    -s,  --strict                exit immediately with an error if DTD\0A                                 verification fails.\0A\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"1.19.0\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"wrong version (%s)\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"interface\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"summary\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"since\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"allow-null\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"enum\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"bitfield\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"protocol\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"no protocol name given\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"copyright\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"no interface name given\00", align 1
@.str.42 = private unnamed_addr constant [27 x i8] c"no interface version given\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"request\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"event\00", align 1
@.str.45 = private unnamed_addr constant [22 x i8] c"no request name given\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"destructor\00", align 1
@.str.47 = private unnamed_addr constant [30 x i8] c"since version not increasing\0A\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"destroy\00", align 1
@.str.49 = private unnamed_addr constant [42 x i8] c"destroy request should be destructor type\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"arg\00", align 1
@.str.51 = private unnamed_addr constant [23 x i8] c"no argument name given\00", align 1
@.str.52 = private unnamed_addr constant [18 x i8] c"unknown type (%s)\00", align 1
@.str.53 = private unnamed_addr constant [44 x i8] c"interface attribute not allowed for type %s\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.56 = private unnamed_addr constant [44 x i8] c"invalid value for allow-null attribute (%s)\00", align 1
@.str.57 = private unnamed_addr constant [58 x i8] c"allow-null is only valid for objects, strings, and arrays\00", align 1
@.str.58 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.59 = private unnamed_addr constant [19 x i8] c"no enum name given\00", align 1
@.str.60 = private unnamed_addr constant [73 x i8] c"invalid value (%s) for bitfield attribute (only true/false are accepted)\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"entry\00", align 1
@.str.62 = private unnamed_addr constant [20 x i8] c"no entry name given\00", align 1
@.str.63 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.64 = private unnamed_addr constant [28 x i8] c"description without summary\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"%s:%d: error: \00", align 1
@.str.66 = private unnamed_addr constant [22 x i8] c"element name is empty\00", align 1
@.str.67 = private unnamed_addr constant [45 x i8] c"'%s' is not a valid trailing identifier part\00", align 1
@.str.68 = private unnamed_addr constant [42 x i8] c"'%s' is not a valid standalone identifier\00", align 1
@.str.69 = private unnamed_addr constant [19 x i8] c"%s: out of memory\0A\00", align 1
@.str.70 = private unnamed_addr constant [22 x i8] c"invalid integer (%s)\0A\00", align 1
@.str.71 = private unnamed_addr constant [37 x i8] c"since (%u) larger than version (%u)\0A\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"%s:%d: warning: \00", align 1
@.str.73 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.74 = private unnamed_addr constant [5 x i8] c"uint\00", align 1
@.str.75 = private unnamed_addr constant [6 x i8] c"fixed\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"string\00", align 1
@.str.77 = private unnamed_addr constant [6 x i8] c"array\00", align 1
@.str.78 = private unnamed_addr constant [3 x i8] c"fd\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"new_id\00", align 1
@.str.80 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.81 = private unnamed_addr constant [25 x i8] c"enumeration %s was empty\00", align 1
@.str.82 = private unnamed_addr constant [52 x i8] c"bitfield-style enum must only be referenced by uint\00", align 1
@.str.83 = private unnamed_addr constant [42 x i8] c"enumeration-style argument has wrong type\00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c"too much character data\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"SERVER\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c"CLIENT\00", align 1
@.str.87 = private unnamed_addr constant [27 x i8] c"/* Generated by %s %s */\0A\0A\00", align 1
@.str.88 = private unnamed_addr constant [148 x i8] c"#ifndef %s_%s_PROTOCOL_H\0A#define %s_%s_PROTOCOL_H\0A\0A#include <stdint.h>\0A#include <stddef.h>\0A#include \22%s\22\0A\0A#ifdef  __cplusplus\0Aextern \22C\22 {\0A#endif\0A\0A\00", align 1
@.str.90 = private unnamed_addr constant [12 x i8] c"struct %s;\0A\00", align 1
@.str.91 = private unnamed_addr constant [31 x i8] c"/**\0A * @page page_iface_%s %s\0A\00", align 1
@.str.92 = private unnamed_addr constant [44 x i8] c" * @section page_iface_%s_desc Description\0A\00", align 1
@.str.93 = private unnamed_addr constant [61 x i8] c" * @section page_iface_%s_api API\0A * See @ref iface_%s.\0A */\0A\00", align 1
@.str.94 = private unnamed_addr constant [44 x i8] c"/**\0A * @defgroup iface_%s The %s interface\0A\00", align 1
@.str.96 = private unnamed_addr constant [48 x i8] c"extern const struct wl_interface %s_interface;\0A\00", align 1
@.str.98 = private unnamed_addr constant [22 x i8] c"wayland-server-core.h\00", align 1
@.str.99 = private unnamed_addr constant [17 x i8] c"wayland-server.h\00", align 1
@.str.100 = private unnamed_addr constant [22 x i8] c"wayland-client-core.h\00", align 1
@.str.101 = private unnamed_addr constant [17 x i8] c"wayland-client.h\00", align 1
@.str.102 = private unnamed_addr constant [38 x i8] c"/**\0A * @page page_%s The %s protocol\0A\00", align 1
@.str.103 = private unnamed_addr constant [10 x i8] c" * %s\0A *\0A\00", align 1
@.str.104 = private unnamed_addr constant [38 x i8] c" * @section page_desc_%s Description\0A\00", align 1
@.str.106 = private unnamed_addr constant [39 x i8] c" * @section page_ifaces_%s Interfaces\0A\00", align 1
@.str.107 = private unnamed_addr constant [34 x i8] c" * - @subpage page_iface_%s - %s\0A\00", align 1
@.str.108 = private unnamed_addr constant [41 x i8] c" * @section page_copyright_%s Copyright\0A\00", align 1
@.str.111 = private unnamed_addr constant [10 x i8] c"%s%s%.*s\0A\00", align 1
@.str.113 = private unnamed_addr constant [3 x i8] c"/*\00", align 1
@.str.114 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.116 = private unnamed_addr constant [20 x i8] c"#ifndef %s_%s_ENUM\0A\00", align 1
@.str.117 = private unnamed_addr constant [20 x i8] c"#define %s_%s_ENUM\0A\00", align 1
@.str.119 = private unnamed_addr constant [22 x i8] c" * @ingroup iface_%s\0A\00", align 1
@.str.120 = private unnamed_addr constant [14 x i8] c"enum %s_%s {\0A\00", align 1
@.str.122 = private unnamed_addr constant [8 x i8] c"\09 * %s\0A\00", align 1
@.str.123 = private unnamed_addr constant [15 x i8] c"\09 * @since %d\0A\00", align 1
@.str.125 = private unnamed_addr constant [17 x i8] c"\09%s_%s_%s = %s,\0A\00", align 1
@.str.127 = private unnamed_addr constant [30 x i8] c"/**\0A * @ingroup iface_%s\0A */\0A\00", align 1
@.str.128 = private unnamed_addr constant [35 x i8] c"#define %s_%s_%s_SINCE_VERSION %d\0A\00", align 1
@.str.129 = private unnamed_addr constant [26 x i8] c"#endif /* %s_%s_ENUM */\0A\0A\00", align 1
@.str.130 = private unnamed_addr constant [18 x i8] c" * @struct %s_%s\0A\00", align 1
@.str.131 = private unnamed_addr constant [9 x i8] c"listener\00", align 1
@.str.132 = private unnamed_addr constant [16 x i8] c"struct %s_%s {\0A\00", align 1
@.str.134 = private unnamed_addr constant [5 x i8] c"\09 * \00", align 1
@.str.136 = private unnamed_addr constant [18 x i8] c"\09 * @param %s %s\0A\00", align 1
@.str.137 = private unnamed_addr constant [13 x i8] c"\09void (*%s)(\00", align 1
@.str.138 = private unnamed_addr constant [57 x i8] c"struct wl_client *client,\0A%sstruct wl_resource *resource\00", align 1
@.str.140 = private unnamed_addr constant [16 x i8] c"%sstruct %s *%s\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c",\0A%s\00", align 1
@.str.142 = private unnamed_addr constant [21 x i8] c"struct wl_resource *\00", align 1
@.str.143 = private unnamed_addr constant [51 x i8] c"const char *interface, uint32_t version, uint32_t \00", align 1
@.str.144 = private unnamed_addr constant [7 x i8] c"void *\00", align 1
@.str.145 = private unnamed_addr constant [12 x i8] c"struct %s *\00", align 1
@.str.146 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.149 = private unnamed_addr constant [196 x i8] c"static inline int\0A%s_add_listener(struct %s *%s,\0A%sconst struct %s_listener *listener, void *data)\0A{\0A\09return wl_proxy_add_listener((struct wl_proxy *) %s,\0A%s(void (**)(void)) listener, data);\0A}\0A\0A\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"\0A%s*\00", align 1
@.str.152 = private unnamed_addr constant [7 x i8] c"\0A%s*%c\00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c"%.*s\00", align 1
@.str.154 = private unnamed_addr constant [13 x i8] c"\09\09\09\09\09\09\09\09\09\09\09\09\00", align 1
@.str.155 = private unnamed_addr constant [14 x i8] c"\09\09\09\09\09\09\09\09\09\09\09\09 \00", align 1
@.str.156 = private unnamed_addr constant [15 x i8] c"\09\09\09\09\09\09\09\09\09\09\09\09  \00", align 1
@.str.157 = private unnamed_addr constant [16 x i8] c"\09\09\09\09\09\09\09\09\09\09\09\09   \00", align 1
@.str.158 = private unnamed_addr constant [17 x i8] c"\09\09\09\09\09\09\09\09\09\09\09\09    \00", align 1
@.str.159 = private unnamed_addr constant [18 x i8] c"\09\09\09\09\09\09\09\09\09\09\09\09     \00", align 1
@.str.160 = private unnamed_addr constant [19 x i8] c"\09\09\09\09\09\09\09\09\09\09\09\09      \00", align 1
@.str.161 = private unnamed_addr constant [20 x i8] c"\09\09\09\09\09\09\09\09\09\09\09\09       \00", align 1
@__const.indent.whitespace = private unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.161, i32 0, i32 0)], align 16
@.str.162 = private unnamed_addr constant [9 x i8] c"int32_t \00", align 1
@.str.163 = private unnamed_addr constant [10 x i8] c"uint32_t \00", align 1
@.str.164 = private unnamed_addr constant [12 x i8] c"wl_fixed_t \00", align 1
@.str.165 = private unnamed_addr constant [13 x i8] c"const char *\00", align 1
@.str.166 = private unnamed_addr constant [18 x i8] c"struct wl_array *\00", align 1
@.str.167 = private unnamed_addr constant [18 x i8] c"#define %s_%s %d\0A\00", align 1
@.str.168 = private unnamed_addr constant [32 x i8] c"#define %s_%s_SINCE_VERSION %d\0A\00", align 1
@.str.169 = private unnamed_addr constant [11 x i8] c"wl_display\00", align 1
@.str.170 = private unnamed_addr constant [82 x i8] c"/**\0A * @ingroup iface_%s\0A * Sends an %s event to the client owning the resource.\0A\00", align 1
@.str.172 = private unnamed_addr constant [17 x i8] c" * @param %s %s\0A\00", align 1
@.str.173 = private unnamed_addr constant [60 x i8] c"static inline void\0A%s_send_%s(struct wl_resource *resource_\00", align 1
@.str.174 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.175 = private unnamed_addr constant [45 x i8] c")\0A{\0A\09wl_resource_post_event(resource_, %s_%s\00", align 1
@.str.176 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.178 = private unnamed_addr constant [26 x i8] c"/** @ingroup iface_%s */\0A\00", align 1
@.str.179 = private unnamed_addr constant [134 x i8] c"static inline void\0A%s_set_user_data(struct %s *%s, void *user_data)\0A{\0A\09wl_proxy_set_user_data((struct wl_proxy *) %s, user_data);\0A}\0A\0A\00", align 1
@.str.180 = private unnamed_addr constant [115 x i8] c"static inline void *\0A%s_get_user_data(struct %s *%s)\0A{\0A\09return wl_proxy_get_user_data((struct wl_proxy *) %s);\0A}\0A\0A\00", align 1
@.str.181 = private unnamed_addr constant [113 x i8] c"static inline uint32_t\0A%s_get_version(struct %s *%s)\0A{\0A\09return wl_proxy_get_version((struct wl_proxy *) %s);\0A}\0A\0A\00", align 1
@.str.182 = private unnamed_addr constant [58 x i8] c"interface '%s' has method named destroy but no destructor\00", align 1
@.str.183 = private unnamed_addr constant [94 x i8] c"static inline void\0A%s_destroy(struct %s *%s)\0A{\0A\09wl_proxy_destroy((struct wl_proxy *) %s);\0A}\0A\0A\00", align 1
@.str.184 = private unnamed_addr constant [66 x i8] c"request '%s::%s' has more than one new_id arg, not emitting stub\0A\00", align 1
@.str.185 = private unnamed_addr constant [26 x i8] c"/**\0A * @ingroup iface_%s\0A\00", align 1
@.str.187 = private unnamed_addr constant [27 x i8] c"static inline struct %s *\0A\00", align 1
@.str.189 = private unnamed_addr constant [20 x i8] c"%s_%s(struct %s *%s\00", align 1
@.str.190 = private unnamed_addr constant [57 x i8] c", const struct wl_interface *interface, uint32_t version\00", align 1
@.str.192 = private unnamed_addr constant [122 x i8] c"\09struct wl_proxy *%s;\0A\0A\09%s = wl_proxy_marshal_constructor_versioned((struct wl_proxy *) %s,\0A\09\09\09 %s_%s, interface, version\00", align 1
@.str.193 = private unnamed_addr constant [107 x i8] c"\09struct wl_proxy *%s;\0A\0A\09%s = wl_proxy_marshal_constructor((struct wl_proxy *) %s,\0A\09\09\09 %s_%s, &%s_interface\00", align 1
@.str.194 = private unnamed_addr constant [52 x i8] c"\09wl_proxy_marshal((struct wl_proxy *) %s,\0A\09\09\09 %s_%s\00", align 1
@.str.195 = private unnamed_addr constant [27 x i8] c", interface->name, version\00", align 1
@.str.196 = private unnamed_addr constant [7 x i8] c", NULL\00", align 1
@.str.197 = private unnamed_addr constant [45 x i8] c"\0A\09wl_proxy_destroy((struct wl_proxy *) %s);\0A\00", align 1
@.str.198 = private unnamed_addr constant [23 x i8] c"\0A\09return (void *) %s;\0A\00", align 1
@.str.199 = private unnamed_addr constant [28 x i8] c"\0A\09return (struct %s *) %s;\0A\00", align 1
@.str.201 = private unnamed_addr constant [11 x i8] c"WL_PRIVATE\00", align 1
@.str.204 = private unnamed_addr constant [10 x i8] c"WL_EXPORT\00", align 1
@.str.205 = private unnamed_addr constant [50 x i8] c"static const struct wl_interface *%s_types[] = {\0A\00", align 1
@.str.206 = private unnamed_addr constant [9 x i8] c"requests\00", align 1
@.str.207 = private unnamed_addr constant [7 x i8] c"events\00", align 1
@.str.208 = private unnamed_addr constant [58 x i8] c"%s const struct wl_interface %s_interface = {\0A\09\22%s\22, %d,\0A\00", align 1
@.str.209 = private unnamed_addr constant [19 x i8] c"\09%d, %s_requests,\0A\00", align 1
@.str.211 = private unnamed_addr constant [17 x i8] c"\09%d, %s_events,\0A\00", align 1
@.str.213 = private unnamed_addr constant [17 x i8] c"\09&%s_interface,\0A\00", align 1
@.str.214 = private unnamed_addr constant [44 x i8] c"static const struct wl_message %s_%s[] = {\0A\00", align 1
@.str.215 = private unnamed_addr constant [11 x i8] c"\09{ \22%s\22, \22\00", align 1
@.str.216 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.219 = private unnamed_addr constant [3 x i8] c"su\00", align 1
@.str.227 = private unnamed_addr constant [21 x i8] c"\22, %s_types + %d },\0A\00", align 1
@str = private unnamed_addr constant [37 x i8] c"#ifdef  __cplusplus\0A}\0A#endif\0A\0A#endif\00", align 1
@str.229 = private unnamed_addr constant [39 x i8] c"struct wl_client;\0Astruct wl_resource;\0A\00", align 1
@str.230 = private unnamed_addr constant [67 x i8] c"#include <stdlib.h>\0A#include <stdint.h>\0A#include \22wayland-util.h\22\0A\00", align 1
@str.234 = private unnamed_addr constant [10 x i8] c"\090, NULL,\00", align 1
@str.235 = private unnamed_addr constant [109 x i8] c"#ifndef __has_attribute\0A# define __has_attribute(x) 0  /* Compatibility with non-clang compilers. */\0A#endif\0A\00", align 1
@str.236 = private unnamed_addr constant [163 x i8] c"#if (__has_attribute(visibility) || defined(__GNUC__) && __GNUC__ >= 4)\0A#define WL_PRIVATE __attribute__ ((visibility(\22hidden\22)))\0A#else\0A#define WL_PRIVATE\0A#endif\0A\00", align 1
@str.238 = private unnamed_addr constant [9 x i8] c" * <pre>\00", align 1
@str.239 = private unnamed_addr constant [10 x i8] c" * </pre>\00", align 1
@str.240 = private unnamed_addr constant [3 x i8] c" *\00", align 1
@str.241 = private unnamed_addr constant [5 x i8] c" */\0A\00", align 1
@str.242 = private unnamed_addr constant [3 x i8] c"};\00", align 1
@str.247 = private unnamed_addr constant [4 x i8] c"/**\00", align 1
@str.250 = private unnamed_addr constant [5 x i8] c"\09/**\00", align 1
@str.251 = private unnamed_addr constant [5 x i8] c"\09 */\00", align 1
@str.252 = private unnamed_addr constant [12 x i8] c"void *data,\00", align 1
@str.254 = private unnamed_addr constant [103 x i8] c"\09 * @param interface name of the objects interface\0A\09 * @param version version of the objects interface\00", align 1
@str.255 = private unnamed_addr constant [4 x i8] c"\09 *\00", align 1
@str.256 = private unnamed_addr constant [42 x i8] c" * @param resource_ The client's resource\00", align 1
@str.260 = private unnamed_addr constant [4 x i8] c" */\00", align 1
@str.261 = private unnamed_addr constant [19 x i8] c"static inline void\00", align 1
@str.262 = private unnamed_addr constant [4 x i8] c")\0A{\00", align 1
@str.263 = private unnamed_addr constant [3 x i8] c");\00", align 1
@str.264 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@str.265 = private unnamed_addr constant [21 x i8] c"static inline void *\00", align 1
@str.266 = private unnamed_addr constant [7 x i8] c"(none)\00", align 1
@str.269 = private unnamed_addr constant [7 x i8] c"\09NULL,\00", align 1
@str.270 = private unnamed_addr constant [4 x i8] c"};\0A\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias i8* @strndup(i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = add i64 %1, 1
  %4 = tail call noalias i8* @malloc(i64 %3) #10
  %5 = tail call i8* @strncpy(i8* %4, i8* %0, i64 %1) #10
  %6 = getelementptr inbounds i8, i8* %4, i64 %1
  store i8 0, i8* %6, align 1
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @main(i32, i8**) local_unnamed_addr #3 {
  %3 = alloca %struct.parse_context, align 8
  %4 = alloca %struct.protocol, align 8
  %5 = bitcast %struct.parse_context* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8264, i8* nonnull %5) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 8264, i1 false)
  %6 = bitcast %struct.protocol* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 64, i1 false)
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  br label %8

8:                                                ; preds = %22, %2
  %9 = phi i8 [ 0, %2 ], [ 1, %22 ]
  %10 = phi i8 [ 0, %2 ], [ %14, %22 ]
  %11 = phi i8 [ 0, %2 ], [ %18, %22 ]
  %12 = phi i8 [ 0, %2 ], [ %21, %22 ]
  br label %13

13:                                               ; preds = %22, %8
  %14 = phi i8 [ %10, %8 ], [ 1, %22 ]
  %15 = phi i8 [ %11, %8 ], [ %18, %22 ]
  %16 = phi i8 [ %12, %8 ], [ %21, %22 ]
  br label %17

17:                                               ; preds = %22, %13
  %18 = phi i8 [ %15, %13 ], [ 1, %22 ]
  %19 = phi i8 [ %16, %13 ], [ %21, %22 ]
  br label %20

20:                                               ; preds = %22, %17
  %21 = phi i8 [ %19, %17 ], [ 1, %22 ]
  br label %22

22:                                               ; preds = %22, %20
  %23 = tail call i32 @getopt_long(i32 %0, i8** %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %struct.option* getelementptr inbounds ([5 x %struct.option], [5 x %struct.option]* @main.options, i64 0, i64 0), i32* null) #10
  switch i32 %23, label %20 [
    i32 -1, label %24
    i32 104, label %8
    i32 118, label %17
    i32 99, label %13
    i32 115, label %22
  ]

24:                                               ; preds = %22
  %25 = load i32, i32* @optind, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8*, i8** %1, i64 %26
  %28 = sub nsw i32 %0, %25
  %29 = icmp eq i8 %9, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %24
  tail call fastcc void @usage(i32 0)
  unreachable

31:                                               ; preds = %24
  %32 = icmp eq i8 %18, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %31
  tail call fastcc void @scanner_version()
  unreachable

34:                                               ; preds = %31
  %35 = or i32 %28, 2
  %36 = icmp eq i32 %35, 3
  %37 = icmp eq i8 %21, 0
  %38 = and i1 %37, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  tail call fastcc void @usage(i32 1)
  unreachable

40:                                               ; preds = %34
  %41 = load i8*, i8** %27, align 8
  %42 = tail call i32 @strcmp(i8* %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #15
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call fastcc void @usage(i32 0)
  unreachable

45:                                               ; preds = %40
  %46 = tail call i32 @strcmp(i8* %41, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)) #15
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %61, label %48

48:                                               ; preds = %45
  %49 = tail call i32 @strcmp(i8* %41, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0)) #15
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %48
  %52 = tail call i32 @strcmp(i8* %41, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0)) #15
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %61, label %54

54:                                               ; preds = %51
  %55 = tail call i32 @strcmp(i8* %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0)) #15
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %54
  %58 = tail call i32 @strcmp(i8* %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)) #15
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %57
  tail call fastcc void @usage(i32 1)
  unreachable

61:                                               ; preds = %57, %54, %51, %48, %45
  %62 = phi i32 [ 0, %45 ], [ 1, %48 ], [ 2, %51 ], [ 3, %54 ], [ 4, %57 ]
  %63 = icmp eq i32 %28, 3
  br i1 %63, label %64, label %88

64:                                               ; preds = %61
  %65 = getelementptr inbounds i8*, i8** %27, i64 1
  %66 = load i8*, i8** %65, align 8
  %67 = tail call %struct._IO_FILE* @fopen64(i8* %66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0))
  %68 = icmp eq %struct._IO_FILE* %67, null
  br i1 %68, label %69, label %75

69:                                               ; preds = %64
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %71 = tail call i32* @__errno_location() #16
  %72 = load i32, i32* %71, align 4
  %73 = tail call i8* @strerror(i32 %72) #10
  %74 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11, i64 0, i64 0), i8* %73) #17
  tail call void @exit(i32 1) #18
  unreachable

75:                                               ; preds = %64
  %76 = getelementptr inbounds i8*, i8** %27, i64 2
  %77 = load i8*, i8** %76, align 8
  %78 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %79 = tail call %struct._IO_FILE* @freopen64(i8* %77, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), %struct._IO_FILE* %78) #10
  %80 = icmp eq %struct._IO_FILE* %79, null
  br i1 %80, label %81, label %88

81:                                               ; preds = %75
  %82 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %83 = tail call i32* @__errno_location() #16
  %84 = load i32, i32* %83, align 4
  %85 = tail call i8* @strerror(i32 %84) #10
  %86 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %82, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i8* %85) #17
  %87 = tail call i32 @fclose(%struct._IO_FILE* nonnull %67)
  tail call void @exit(i32 1) #18
  unreachable

88:                                               ; preds = %75, %61
  %89 = phi %struct._IO_FILE* [ %67, %75 ], [ %7, %61 ]
  %90 = phi i8* [ %66, %75 ], [ null, %61 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 64, i1 false)
  %91 = getelementptr inbounds %struct.protocol, %struct.protocol* %4, i64 0, i32 2
  call void @wl_list_init(%struct.wl_list* %91) #10
  %92 = getelementptr inbounds %struct.protocol, %struct.protocol* %4, i64 0, i32 7
  store i8 %14, i8* %92, align 8
  %93 = getelementptr inbounds %struct.parse_context, %struct.parse_context* %3, i64 0, i32 0, i32 1
  %94 = bitcast i32* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 8256, i1 false)
  %95 = getelementptr inbounds %struct.parse_context, %struct.parse_context* %3, i64 0, i32 2
  store %struct.protocol* %4, %struct.protocol** %95, align 8
  %96 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8
  %97 = icmp eq %struct._IO_FILE* %89, %96
  %98 = getelementptr inbounds %struct.parse_context, %struct.parse_context* %3, i64 0, i32 0, i32 0
  %99 = select i1 %97, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i8* %90
  store i8* %99, i8** %98, align 8
  %100 = call %struct.XML_ParserStruct* @XML_ParserCreate(i8* null) #10
  %101 = getelementptr inbounds %struct.parse_context, %struct.parse_context* %3, i64 0, i32 1
  store %struct.XML_ParserStruct* %100, %struct.XML_ParserStruct** %101, align 8
  call void @XML_SetUserData(%struct.XML_ParserStruct* %100, i8* nonnull %5) #10
  %102 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %101, align 8
  %103 = icmp eq %struct.XML_ParserStruct* %102, null
  br i1 %103, label %104, label %108

104:                                              ; preds = %88
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %106 = call i64 @fwrite(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), i64 24, i64 1, %struct._IO_FILE* %105) #17
  %107 = call i32 @fclose(%struct._IO_FILE* %89)
  call void @exit(i32 1) #18
  unreachable

108:                                              ; preds = %88
  call void @XML_SetElementHandler(%struct.XML_ParserStruct* nonnull %102, void (i8*, i8*, i8**)* nonnull @start_element, void (i8*, i8*)* nonnull @end_element) #10
  %109 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %101, align 8
  call void @XML_SetCharacterDataHandler(%struct.XML_ParserStruct* %109, void (i8*, i8*, i32)* nonnull @character_data) #10
  br label %110

110:                                              ; preds = %140, %108
  %111 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %101, align 8
  %112 = call i8* @XML_GetBuffer(%struct.XML_ParserStruct* %111, i32 4096) #10
  %113 = call i64 @fread(i8* %112, i64 1, i64 4096, %struct._IO_FILE* %89)
  %114 = trunc i64 %113 to i32
  %115 = icmp slt i32 %114, 0
  br i1 %115, label %116, label %123

116:                                              ; preds = %110
  %117 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %118 = tail call i32* @__errno_location() #16
  %119 = load i32, i32* %118, align 4
  %120 = call i8* @strerror(i32 %119) #10
  %121 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %117, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %120) #17
  %122 = call i32 @fclose(%struct._IO_FILE* %89)
  call void @exit(i32 1) #18
  unreachable

123:                                              ; preds = %110
  %124 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %101, align 8
  %125 = icmp eq i32 %114, 0
  %126 = zext i1 %125 to i32
  %127 = call i32 @XML_ParseBuffer(%struct.XML_ParserStruct* %124, i32 %114, i32 %126) #10
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %140

129:                                              ; preds = %123
  %130 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %131 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %101, align 8
  %132 = call i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %131) #10
  %133 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %101, align 8
  %134 = call i64 @XML_GetCurrentColumnNumber(%struct.XML_ParserStruct* %133) #10
  %135 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %101, align 8
  %136 = call i32 @XML_GetErrorCode(%struct.XML_ParserStruct* %135) #10
  %137 = call i8* @XML_ErrorString(i32 %136) #10
  %138 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %130, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18, i64 0, i64 0), i64 %132, i64 %134, i8* %137) #17
  %139 = call i32 @fclose(%struct._IO_FILE* %89)
  call void @exit(i32 1) #18
  unreachable

140:                                              ; preds = %123
  %141 = icmp sgt i32 %114, 0
  br i1 %141, label %110, label %142

142:                                              ; preds = %140
  %143 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %101, align 8
  call void @XML_ParserFree(%struct.XML_ParserStruct* %143) #10
  switch i32 %62, label %151 [
    i32 0, label %144
    i32 1, label %145
    i32 2, label %146
    i32 4, label %147
    i32 3, label %150
  ]

144:                                              ; preds = %142
  call fastcc void @emit_header(%struct.protocol* nonnull %4, i32 0)
  br label %151

145:                                              ; preds = %142
  call fastcc void @emit_header(%struct.protocol* nonnull %4, i32 1)
  br label %151

146:                                              ; preds = %142
  call fastcc void @emit_code(%struct.protocol* nonnull %4, i32 0)
  br label %151

147:                                              ; preds = %142
  %148 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %149 = call i64 @fwrite(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.19, i64 0, i64 0), i64 93, i64 1, %struct._IO_FILE* %148) #17
  br label %150

150:                                              ; preds = %142, %147
  call fastcc void @emit_code(%struct.protocol* nonnull %4, i32 1)
  br label %151

151:                                              ; preds = %142, %150, %146, %145, %144
  %152 = getelementptr inbounds %struct.protocol, %struct.protocol* %4, i64 0, i32 0
  %153 = load i8*, i8** %152, align 8
  call void @free(i8* %153) #10
  %154 = getelementptr inbounds %struct.protocol, %struct.protocol* %4, i64 0, i32 1
  %155 = load i8*, i8** %154, align 8
  call void @free(i8* %155) #10
  %156 = getelementptr inbounds %struct.protocol, %struct.protocol* %4, i64 0, i32 5
  %157 = load i8*, i8** %156, align 8
  call void @free(i8* %157) #10
  %158 = getelementptr inbounds %struct.protocol, %struct.protocol* %4, i64 0, i32 6
  %159 = load %struct.description*, %struct.description** %158, align 8
  %160 = icmp eq %struct.description* %159, null
  br i1 %160, label %167, label %161

161:                                              ; preds = %151
  %162 = getelementptr inbounds %struct.description, %struct.description* %159, i64 0, i32 0
  %163 = load i8*, i8** %162, align 8
  call void @free(i8* %163) #10
  %164 = getelementptr inbounds %struct.description, %struct.description* %159, i64 0, i32 1
  %165 = load i8*, i8** %164, align 8
  call void @free(i8* %165) #10
  %166 = bitcast %struct.description* %159 to i8*
  call void @free(i8* %166) #10
  br label %167

167:                                              ; preds = %151, %161
  %168 = call i32 @fclose(%struct._IO_FILE* %89)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8264, i8* nonnull %5) #10
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @usage(i32) unnamed_addr #5 {
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %2, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #17
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %5 = tail call i32 @fputc(i32 10, %struct._IO_FILE* %4) #17
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([309 x i8], [309 x i8]* @.str.23, i64 0, i64 0), i64 308, i64 1, %struct._IO_FILE* %6) #17
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i64 0, i64 0), i64 9, i64 1, %struct._IO_FILE* %8) #17
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = tail call i64 @fwrite(i8* getelementptr inbounds ([526 x i8], [526 x i8]* @.str.25, i64 0, i64 0), i64 525, i64 1, %struct._IO_FILE* %10) #17
  tail call void @exit(i32 %0) #18
  unreachable
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal fastcc void @scanner_version() unnamed_addr #5 {
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0)) #17
  tail call void @exit(i32 0) #18
  unreachable
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @exit(i32) local_unnamed_addr #8

declare %struct._IO_FILE* @freopen64(i8*, i8*, %struct._IO_FILE*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #2

declare void @wl_list_init(%struct.wl_list*) local_unnamed_addr #9

declare %struct.XML_ParserStruct* @XML_ParserCreate(i8*) local_unnamed_addr #9

declare void @XML_SetUserData(%struct.XML_ParserStruct*, i8*) local_unnamed_addr #9

declare void @XML_SetElementHandler(%struct.XML_ParserStruct*, void (i8*, i8*, i8**)*, void (i8*, i8*)*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @start_element(i8*, i8* nocapture readonly, i8** nocapture readonly) #3 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = getelementptr inbounds i8, i8* %0, i64 16
  %8 = bitcast i8* %7 to %struct.XML_ParserStruct**
  %9 = load %struct.XML_ParserStruct*, %struct.XML_ParserStruct** %8, align 8
  %10 = tail call i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct* %9) #10
  %11 = trunc i64 %10 to i32
  %12 = bitcast i8* %0 to %struct.location*
  %13 = getelementptr inbounds i8, i8* %0, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %11, i32* %14, align 8
  %15 = load i8*, i8** %2, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %141, label %17

17:                                               ; preds = %3
  %18 = bitcast i8** %6 to i8*
  br label %19

19:                                               ; preds = %17, %135
  %20 = phi i64 [ 0, %17 ], [ %137, %135 ]
  %21 = phi i8* [ %15, %17 ], [ %139, %135 ]
  %22 = phi i8** [ %2, %17 ], [ %138, %135 ]
  %23 = phi i32 [ 0, %17 ], [ %72, %135 ]
  %24 = phi i8* [ null, %17 ], [ %136, %135 ]
  %25 = phi i8* [ null, %17 ], [ %128, %135 ]
  %26 = phi i8* [ null, %17 ], [ %120, %135 ]
  %27 = phi i8* [ null, %17 ], [ %112, %135 ]
  %28 = phi i8* [ null, %17 ], [ %104, %135 ]
  %29 = phi i8* [ null, %17 ], [ %88, %135 ]
  %30 = phi i8* [ null, %17 ], [ %96, %135 ]
  %31 = phi i8* [ null, %17 ], [ %80, %135 ]
  %32 = phi i8* [ null, %17 ], [ %40, %135 ]
  %33 = tail call i32 @strcmp(i8* nonnull %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0)) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %19
  %36 = or i64 %20, 1
  %37 = getelementptr inbounds i8*, i8** %2, i64 %36
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %35, %19
  %40 = phi i8* [ %38, %35 ], [ %32, %19 ]
  %41 = tail call i32 @strcmp(i8* nonnull %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0)) #15
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %70

43:                                               ; preds = %39
  %44 = or i64 %20, 1
  %45 = getelementptr inbounds i8*, i8** %2, i64 %44
  %46 = load i8*, i8** %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %47 = tail call i32* @__errno_location() #16
  %48 = load i32, i32* %47, align 4
  store i32 0, i32* %47, align 4
  %49 = call i64 @strtol(i8* %46, i8** nonnull %6, i32 10) #10
  %50 = load i32, i32* %47, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %60

52:                                               ; preds = %43
  %53 = load i8*, i8** %6, align 8
  %54 = icmp eq i8* %53, %46
  br i1 %54, label %60, label %55

55:                                               ; preds = %52
  %56 = load i8, i8* %53, align 1
  %57 = icmp ne i8 %56, 0
  %58 = icmp ugt i64 %49, 2147483647
  %59 = or i1 %58, %57
  br i1 %59, label %60, label %61

60:                                               ; preds = %55, %43, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  br label %66

61:                                               ; preds = %55
  store i32 %48, i32* %47, align 4
  %62 = trunc i64 %49 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = load i8*, i8** %22, align 8
  br label %70

66:                                               ; preds = %61, %60
  %67 = and i64 %44, 4294967295
  %68 = getelementptr inbounds i8*, i8** %2, i64 %67
  %69 = load i8*, i8** %68, align 8
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i8* %69) #19
  unreachable

70:                                               ; preds = %64, %39
  %71 = phi i8* [ %65, %64 ], [ %21, %39 ]
  %72 = phi i32 [ %62, %64 ], [ %23, %39 ]
  %73 = tail call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0)) #15
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %70
  %76 = or i64 %20, 1
  %77 = getelementptr inbounds i8*, i8** %2, i64 %76
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %78, %75 ], [ %31, %70 ]
  %81 = tail call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0)) #15
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %79
  %84 = or i64 %20, 1
  %85 = getelementptr inbounds i8*, i8** %2, i64 %84
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %83, %79
  %88 = phi i8* [ %86, %83 ], [ %29, %79 ]
  %89 = tail call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #15
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %87
  %92 = or i64 %20, 1
  %93 = getelementptr inbounds i8*, i8** %2, i64 %92
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %91, %87
  %96 = phi i8* [ %94, %91 ], [ %30, %87 ]
  %97 = tail call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0)) #15
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = or i64 %20, 1
  %101 = getelementptr inbounds i8*, i8** %2, i64 %100
  %102 = load i8*, i8** %101, align 8
  br label %103

103:                                              ; preds = %99, %95
  %104 = phi i8* [ %102, %99 ], [ %28, %95 ]
  %105 = tail call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0)) #15
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %111

107:                                              ; preds = %103
  %108 = or i64 %20, 1
  %109 = getelementptr inbounds i8*, i8** %2, i64 %108
  %110 = load i8*, i8** %109, align 8
  br label %111

111:                                              ; preds = %107, %103
  %112 = phi i8* [ %110, %107 ], [ %27, %103 ]
  %113 = tail call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0)) #15
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %119

115:                                              ; preds = %111
  %116 = or i64 %20, 1
  %117 = getelementptr inbounds i8*, i8** %2, i64 %116
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %115, %111
  %120 = phi i8* [ %118, %115 ], [ %26, %111 ]
  %121 = tail call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0)) #15
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %127

123:                                              ; preds = %119
  %124 = or i64 %20, 1
  %125 = getelementptr inbounds i8*, i8** %2, i64 %124
  %126 = load i8*, i8** %125, align 8
  br label %127

127:                                              ; preds = %123, %119
  %128 = phi i8* [ %126, %123 ], [ %25, %119 ]
  %129 = tail call i32 @strcmp(i8* %71, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0)) #15
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %135

131:                                              ; preds = %127
  %132 = or i64 %20, 1
  %133 = getelementptr inbounds i8*, i8** %2, i64 %132
  %134 = load i8*, i8** %133, align 8
  br label %135

135:                                              ; preds = %127, %131
  %136 = phi i8* [ %134, %131 ], [ %24, %127 ]
  %137 = add nuw i64 %20, 2
  %138 = getelementptr inbounds i8*, i8** %2, i64 %137
  %139 = load i8*, i8** %138, align 8
  %140 = icmp eq i8* %139, null
  br i1 %140, label %141, label %19

141:                                              ; preds = %135, %3
  %142 = phi i8* [ null, %3 ], [ %40, %135 ]
  %143 = phi i8* [ null, %3 ], [ %80, %135 ]
  %144 = phi i8* [ null, %3 ], [ %96, %135 ]
  %145 = phi i8* [ null, %3 ], [ %88, %135 ]
  %146 = phi i8* [ null, %3 ], [ %104, %135 ]
  %147 = phi i8* [ null, %3 ], [ %112, %135 ]
  %148 = phi i8* [ null, %3 ], [ %120, %135 ]
  %149 = phi i8* [ null, %3 ], [ %128, %135 ]
  %150 = phi i8* [ null, %3 ], [ %136, %135 ]
  %151 = phi i32 [ 0, %3 ], [ %72, %135 ]
  %152 = getelementptr inbounds i8, i8* %0, i64 8256
  %153 = bitcast i8* %152 to i32*
  store i32 0, i32* %153, align 8
  %154 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0)) #15
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %219

156:                                              ; preds = %141
  %157 = icmp eq i8* %142, null
  br i1 %157, label %158, label %159

158:                                              ; preds = %156
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)) #19
  unreachable

159:                                              ; preds = %156
  %160 = load i8, i8* %142, align 1
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i64 0, i64 0)) #18
  unreachable

163:                                              ; preds = %159, %176
  %164 = phi i8* [ %177, %176 ], [ %142, %159 ]
  %165 = phi i8 [ %178, %176 ], [ %160, %159 ]
  %166 = and i8 %165, -33
  %167 = add i8 %166, -65
  %168 = icmp ugt i8 %167, 25
  %169 = add i8 %165, -48
  %170 = icmp ugt i8 %169, 9
  %171 = icmp eq i8* %164, %142
  %172 = icmp ne i8 %165, 95
  %173 = and i1 %172, %168
  %174 = or i1 %171, %170
  %175 = and i1 %174, %173
  br i1 %175, label %180, label %176

176:                                              ; preds = %163
  %177 = getelementptr inbounds i8, i8* %164, i64 1
  %178 = load i8, i8* %177, align 1
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %181, label %163

180:                                              ; preds = %163
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.68, i64 0, i64 0), i8* nonnull %142) #18
  unreachable

181:                                              ; preds = %176
  %182 = tail call noalias i8* @strdup(i8* %142) #10
  %183 = icmp eq i8* %182, null
  br i1 %183, label %184, label %187

184:                                              ; preds = %181
  %185 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %186 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %185, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

187:                                              ; preds = %181
  %188 = getelementptr inbounds i8, i8* %0, i64 24
  %189 = bitcast i8* %188 to %struct.protocol**
  %190 = load %struct.protocol*, %struct.protocol** %189, align 8
  %191 = getelementptr inbounds %struct.protocol, %struct.protocol* %190, i64 0, i32 0
  store i8* %182, i8** %191, align 8
  %192 = tail call noalias i8* @strdup(i8* %142) #10
  %193 = icmp eq i8* %192, null
  br i1 %193, label %200, label %194

194:                                              ; preds = %187
  %195 = load i8, i8* %192, align 1
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %215, label %197

197:                                              ; preds = %194
  %198 = tail call i32** @__ctype_toupper_loc() #16
  %199 = load i32*, i32** %198, align 8
  br label %203

200:                                              ; preds = %187
  %201 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %202 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %201, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

203:                                              ; preds = %203, %197
  %204 = phi i64 [ 0, %197 ], [ %211, %203 ]
  %205 = phi i8 [ %195, %197 ], [ %213, %203 ]
  %206 = phi i8* [ %192, %197 ], [ %212, %203 ]
  %207 = sext i8 %205 to i64
  %208 = getelementptr inbounds i32, i32* %199, i64 %207
  %209 = load i32, i32* %208, align 4
  %210 = trunc i32 %209 to i8
  store i8 %210, i8* %206, align 1
  %211 = add nuw i64 %204, 1
  %212 = getelementptr inbounds i8, i8* %192, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %203

215:                                              ; preds = %203, %194
  %216 = phi i8* [ %192, %194 ], [ %212, %203 ]
  store i8 0, i8* %216, align 1
  %217 = load %struct.protocol*, %struct.protocol** %189, align 8
  %218 = getelementptr inbounds %struct.protocol, %struct.protocol* %217, i64 0, i32 1
  store i8* %192, i8** %218, align 8
  br label %936

219:                                              ; preds = %141
  %220 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0)) #15
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %936, label %222

222:                                              ; preds = %219
  %223 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0)) #15
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %320

225:                                              ; preds = %222
  %226 = icmp eq i8* %142, null
  br i1 %226, label %227, label %228

227:                                              ; preds = %225
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0)) #19
  unreachable

228:                                              ; preds = %225
  %229 = icmp eq i32 %151, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %228
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0)) #19
  unreachable

231:                                              ; preds = %228
  %232 = load i8, i8* %142, align 1
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %234, label %235

234:                                              ; preds = %231
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i64 0, i64 0)) #18
  unreachable

235:                                              ; preds = %231, %248
  %236 = phi i8* [ %249, %248 ], [ %142, %231 ]
  %237 = phi i8 [ %250, %248 ], [ %232, %231 ]
  %238 = and i8 %237, -33
  %239 = add i8 %238, -65
  %240 = icmp ugt i8 %239, 25
  %241 = add i8 %237, -48
  %242 = icmp ugt i8 %241, 9
  %243 = icmp eq i8* %236, %142
  %244 = icmp ne i8 %237, 95
  %245 = and i1 %244, %240
  %246 = or i1 %243, %242
  %247 = and i1 %246, %245
  br i1 %247, label %252, label %248

248:                                              ; preds = %235
  %249 = getelementptr inbounds i8, i8* %236, i64 1
  %250 = load i8, i8* %249, align 1
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %253, label %235

252:                                              ; preds = %235
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.68, i64 0, i64 0), i8* nonnull %142) #18
  unreachable

253:                                              ; preds = %248
  %254 = bitcast i8* %0 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = load i32, i32* %14, align 8
  %257 = tail call noalias i8* @calloc(i64 112, i64 1) #10
  %258 = icmp eq i8* %257, null
  br i1 %258, label %259, label %262

259:                                              ; preds = %253
  %260 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %261 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %260, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

262:                                              ; preds = %253
  %263 = bitcast i8* %257 to i64*
  store i64 %255, i64* %263, align 8
  %264 = getelementptr inbounds i8, i8* %257, i64 8
  %265 = bitcast i8* %264 to i32*
  store i32 %256, i32* %265, align 8
  %266 = tail call noalias i8* @strdup(i8* %142) #10
  %267 = icmp eq i8* %266, null
  br i1 %267, label %268, label %271

268:                                              ; preds = %262
  %269 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %270 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %269, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

271:                                              ; preds = %262
  %272 = getelementptr inbounds i8, i8* %257, i64 16
  %273 = bitcast i8* %272 to i8**
  store i8* %266, i8** %273, align 8
  %274 = tail call noalias i8* @strdup(i8* %142) #10
  %275 = icmp eq i8* %274, null
  br i1 %275, label %282, label %276

276:                                              ; preds = %271
  %277 = load i8, i8* %274, align 1
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %297, label %279

279:                                              ; preds = %276
  %280 = tail call i32** @__ctype_toupper_loc() #16
  %281 = load i32*, i32** %280, align 8
  br label %285

282:                                              ; preds = %271
  %283 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %284 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %283, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

285:                                              ; preds = %285, %279
  %286 = phi i64 [ 0, %279 ], [ %293, %285 ]
  %287 = phi i8 [ %277, %279 ], [ %295, %285 ]
  %288 = phi i8* [ %274, %279 ], [ %294, %285 ]
  %289 = sext i8 %287 to i64
  %290 = getelementptr inbounds i32, i32* %281, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = trunc i32 %291 to i8
  store i8 %292, i8* %288, align 1
  %293 = add nuw i64 %286, 1
  %294 = getelementptr inbounds i8, i8* %274, i64 %293
  %295 = load i8, i8* %294, align 1
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %297, label %285

297:                                              ; preds = %285, %276
  %298 = phi i8* [ %274, %276 ], [ %294, %285 ]
  store i8 0, i8* %298, align 1
  %299 = getelementptr inbounds i8, i8* %257, i64 24
  %300 = bitcast i8* %299 to i8**
  store i8* %274, i8** %300, align 8
  %301 = getelementptr inbounds i8, i8* %257, i64 32
  %302 = bitcast i8* %301 to i32*
  store i32 %151, i32* %302, align 8
  %303 = getelementptr inbounds i8, i8* %257, i64 36
  %304 = bitcast i8* %303 to i32*
  store i32 1, i32* %304, align 4
  %305 = getelementptr inbounds i8, i8* %257, i64 40
  %306 = bitcast i8* %305 to %struct.wl_list*
  tail call void @wl_list_init(%struct.wl_list* %306) #10
  %307 = getelementptr inbounds i8, i8* %257, i64 56
  %308 = bitcast i8* %307 to %struct.wl_list*
  tail call void @wl_list_init(%struct.wl_list* %308) #10
  %309 = getelementptr inbounds i8, i8* %257, i64 72
  %310 = bitcast i8* %309 to %struct.wl_list*
  tail call void @wl_list_init(%struct.wl_list* %310) #10
  %311 = getelementptr inbounds i8, i8* %0, i64 32
  %312 = bitcast i8* %311 to i8**
  store i8* %257, i8** %312, align 8
  %313 = getelementptr inbounds i8, i8* %0, i64 24
  %314 = bitcast i8* %313 to %struct.protocol**
  %315 = load %struct.protocol*, %struct.protocol** %314, align 8
  %316 = getelementptr inbounds %struct.protocol, %struct.protocol* %315, i64 0, i32 2, i32 0
  %317 = load %struct.wl_list*, %struct.wl_list** %316, align 8
  %318 = getelementptr inbounds i8, i8* %257, i64 88
  %319 = bitcast i8* %318 to %struct.wl_list*
  tail call void @wl_list_insert(%struct.wl_list* %317, %struct.wl_list* %319) #10
  br label %936

320:                                              ; preds = %222
  %321 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0)) #15
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %326, label %323

323:                                              ; preds = %320
  %324 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0)) #15
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %473

326:                                              ; preds = %323, %320
  %327 = icmp eq i8* %142, null
  br i1 %327, label %328, label %329

328:                                              ; preds = %326
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0)) #19
  unreachable

329:                                              ; preds = %326
  %330 = load i8, i8* %142, align 1
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i64 0, i64 0)) #18
  unreachable

333:                                              ; preds = %329, %346
  %334 = phi i8* [ %347, %346 ], [ %142, %329 ]
  %335 = phi i8 [ %348, %346 ], [ %330, %329 ]
  %336 = and i8 %335, -33
  %337 = add i8 %336, -65
  %338 = icmp ugt i8 %337, 25
  %339 = add i8 %335, -48
  %340 = icmp ugt i8 %339, 9
  %341 = icmp eq i8* %334, %142
  %342 = icmp ne i8 %335, 95
  %343 = and i1 %342, %338
  %344 = or i1 %341, %340
  %345 = and i1 %344, %343
  br i1 %345, label %350, label %346

346:                                              ; preds = %333
  %347 = getelementptr inbounds i8, i8* %334, i64 1
  %348 = load i8, i8* %347, align 1
  %349 = icmp eq i8 %348, 0
  br i1 %349, label %351, label %333

350:                                              ; preds = %333
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.68, i64 0, i64 0), i8* nonnull %142) #18
  unreachable

351:                                              ; preds = %346
  %352 = bitcast i8* %0 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = load i32, i32* %14, align 8
  %355 = tail call noalias i8* @calloc(i64 96, i64 1) #10
  %356 = icmp eq i8* %355, null
  br i1 %356, label %357, label %360

357:                                              ; preds = %351
  %358 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %359 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %358, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

360:                                              ; preds = %351
  %361 = bitcast i8* %355 to i64*
  store i64 %353, i64* %361, align 8
  %362 = getelementptr inbounds i8, i8* %355, i64 8
  %363 = bitcast i8* %362 to i32*
  store i32 %354, i32* %363, align 8
  %364 = tail call noalias i8* @strdup(i8* %142) #10
  %365 = icmp eq i8* %364, null
  br i1 %365, label %366, label %369

366:                                              ; preds = %360
  %367 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %368 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %367, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

369:                                              ; preds = %360
  %370 = getelementptr inbounds i8, i8* %355, i64 16
  %371 = bitcast i8* %370 to i8**
  store i8* %364, i8** %371, align 8
  %372 = tail call noalias i8* @strdup(i8* %142) #10
  %373 = icmp eq i8* %372, null
  br i1 %373, label %380, label %374

374:                                              ; preds = %369
  %375 = load i8, i8* %372, align 1
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %395, label %377

377:                                              ; preds = %374
  %378 = tail call i32** @__ctype_toupper_loc() #16
  %379 = load i32*, i32** %378, align 8
  br label %383

380:                                              ; preds = %369
  %381 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %382 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %381, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

383:                                              ; preds = %383, %377
  %384 = phi i64 [ 0, %377 ], [ %391, %383 ]
  %385 = phi i8 [ %375, %377 ], [ %393, %383 ]
  %386 = phi i8* [ %372, %377 ], [ %392, %383 ]
  %387 = sext i8 %385 to i64
  %388 = getelementptr inbounds i32, i32* %379, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = trunc i32 %389 to i8
  store i8 %390, i8* %386, align 1
  %391 = add nuw i64 %384, 1
  %392 = getelementptr inbounds i8, i8* %372, i64 %391
  %393 = load i8, i8* %392, align 1
  %394 = icmp eq i8 %393, 0
  br i1 %394, label %395, label %383

395:                                              ; preds = %383, %374
  %396 = phi i8* [ %372, %374 ], [ %392, %383 ]
  store i8 0, i8* %396, align 1
  %397 = getelementptr inbounds i8, i8* %355, i64 24
  %398 = bitcast i8* %397 to i8**
  store i8* %372, i8** %398, align 8
  %399 = getelementptr inbounds i8, i8* %355, i64 32
  %400 = bitcast i8* %399 to %struct.wl_list*
  tail call void @wl_list_init(%struct.wl_list* %400) #10
  %401 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0)) #15
  %402 = icmp eq i32 %401, 0
  %403 = getelementptr inbounds i8, i8* %0, i64 32
  %404 = bitcast i8* %403 to %struct.interface**
  %405 = load %struct.interface*, %struct.interface** %404, align 8
  %406 = getelementptr inbounds %struct.interface, %struct.interface* %405, i64 0, i32 6, i32 0
  %407 = getelementptr inbounds %struct.interface, %struct.interface* %405, i64 0, i32 5, i32 0
  %408 = select i1 %402, %struct.wl_list** %407, %struct.wl_list** %406
  %409 = load %struct.wl_list*, %struct.wl_list** %408, align 8
  %410 = getelementptr inbounds i8, i8* %355, i64 48
  %411 = bitcast i8* %410 to %struct.wl_list*
  tail call void @wl_list_insert(%struct.wl_list* %409, %struct.wl_list* %411) #10
  %412 = icmp eq i8* %143, null
  br i1 %412, label %419, label %413

413:                                              ; preds = %395
  %414 = tail call i32 @strcmp(i8* nonnull %143, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0)) #15
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %419

416:                                              ; preds = %413
  %417 = getelementptr inbounds i8, i8* %355, i64 80
  %418 = bitcast i8* %417 to i32*
  store i32 1, i32* %418, align 8
  br label %419

419:                                              ; preds = %395, %416, %413
  %420 = icmp eq i8* %147, null
  br i1 %420, label %421, label %423

421:                                              ; preds = %419
  %422 = load %struct.interface*, %struct.interface** %404, align 8
  br label %449

423:                                              ; preds = %419
  %424 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %424) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %425 = tail call i32* @__errno_location() #16
  %426 = load i32, i32* %425, align 4
  store i32 0, i32* %425, align 4
  %427 = call i64 @strtol(i8* nonnull %147, i8** nonnull %5, i32 10) #10
  %428 = load i32, i32* %425, align 4
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %438

430:                                              ; preds = %423
  %431 = load i8*, i8** %5, align 8
  %432 = icmp eq i8* %431, %147
  br i1 %432, label %438, label %433

433:                                              ; preds = %430
  %434 = load i8, i8* %431, align 1
  %435 = icmp ne i8 %434, 0
  %436 = icmp ugt i64 %427, 2147483647
  %437 = or i1 %436, %435
  br i1 %437, label %438, label %439

438:                                              ; preds = %433, %423, %430
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %424) #10
  br label %442

439:                                              ; preds = %433
  store i32 %426, i32* %425, align 4
  %440 = trunc i64 %427 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %424) #10
  %441 = icmp eq i32 %440, -1
  br i1 %441, label %442, label %443

442:                                              ; preds = %438, %439
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.70, i64 0, i64 0), i8* nonnull %147) #18
  unreachable

443:                                              ; preds = %439
  %444 = load %struct.interface*, %struct.interface** %404, align 8
  %445 = getelementptr inbounds %struct.interface, %struct.interface* %444, i64 0, i32 3
  %446 = load i32, i32* %445, align 8
  %447 = icmp slt i32 %446, %440
  br i1 %447, label %448, label %449

448:                                              ; preds = %443
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.71, i64 0, i64 0), i32 %440, i32 %446) #18
  unreachable

449:                                              ; preds = %421, %443
  %450 = phi %struct.interface* [ %444, %443 ], [ %422, %421 ]
  %451 = phi i32 [ %440, %443 ], [ 1, %421 ]
  %452 = getelementptr inbounds %struct.interface, %struct.interface* %450, i64 0, i32 4
  %453 = load i32, i32* %452, align 4
  %454 = icmp slt i32 %451, %453
  br i1 %454, label %455, label %457

455:                                              ; preds = %449
  tail call void (%struct.location*, i8*, ...) @warn(%struct.location* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i64 0, i64 0))
  %456 = load %struct.interface*, %struct.interface** %404, align 8
  br label %457

457:                                              ; preds = %455, %449
  %458 = phi %struct.interface* [ %456, %455 ], [ %450, %449 ]
  %459 = getelementptr inbounds %struct.interface, %struct.interface* %458, i64 0, i32 4
  store i32 %451, i32* %459, align 4
  %460 = getelementptr inbounds i8, i8* %355, i64 84
  %461 = bitcast i8* %460 to i32*
  store i32 %451, i32* %461, align 4
  %462 = tail call i32 @strcmp(i8* nonnull %142, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i64 0, i64 0)) #15
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %464, label %470

464:                                              ; preds = %457
  %465 = getelementptr inbounds i8, i8* %355, i64 80
  %466 = bitcast i8* %465 to i32*
  %467 = load i32, i32* %466, align 8
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %470

469:                                              ; preds = %464
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.49, i64 0, i64 0)) #19
  unreachable

470:                                              ; preds = %464, %457
  %471 = getelementptr inbounds i8, i8* %0, i64 40
  %472 = bitcast i8* %471 to i8**
  store i8* %355, i8** %472, align 8
  br label %936

473:                                              ; preds = %323
  %474 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i64 0, i64 0)) #15
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %660

476:                                              ; preds = %473
  %477 = icmp eq i8* %142, null
  br i1 %477, label %478, label %479

478:                                              ; preds = %476
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.51, i64 0, i64 0)) #19
  unreachable

479:                                              ; preds = %476
  %480 = load i8, i8* %142, align 1
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %482, label %483

482:                                              ; preds = %479
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i64 0, i64 0)) #18
  unreachable

483:                                              ; preds = %479, %496
  %484 = phi i8* [ %497, %496 ], [ %142, %479 ]
  %485 = phi i8 [ %498, %496 ], [ %480, %479 ]
  %486 = and i8 %485, -33
  %487 = add i8 %486, -65
  %488 = icmp ugt i8 %487, 25
  %489 = add i8 %485, -48
  %490 = icmp ugt i8 %489, 9
  %491 = icmp eq i8* %484, %142
  %492 = icmp ne i8 %485, 95
  %493 = and i1 %492, %488
  %494 = or i1 %491, %490
  %495 = and i1 %494, %493
  br i1 %495, label %500, label %496

496:                                              ; preds = %483
  %497 = getelementptr inbounds i8, i8* %484, i64 1
  %498 = load i8, i8* %497, align 1
  %499 = icmp eq i8 %498, 0
  br i1 %499, label %501, label %483

500:                                              ; preds = %483
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.68, i64 0, i64 0), i8* nonnull %142) #18
  unreachable

501:                                              ; preds = %496
  %502 = tail call noalias i8* @calloc(i64 56, i64 1) #10
  %503 = icmp eq i8* %502, null
  br i1 %503, label %504, label %507

504:                                              ; preds = %501
  %505 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %506 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %505, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

507:                                              ; preds = %501
  %508 = tail call noalias i8* @strdup(i8* %142) #10
  %509 = icmp eq i8* %508, null
  br i1 %509, label %510, label %513

510:                                              ; preds = %507
  %511 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %512 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %511, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

513:                                              ; preds = %507
  %514 = bitcast i8* %502 to i8**
  store i8* %508, i8** %514, align 8
  %515 = tail call i32 @strcmp(i8* %143, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.73, i64 0, i64 0)) #15
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %517, label %520

517:                                              ; preds = %513
  %518 = getelementptr inbounds i8, i8* %502, i64 8
  %519 = bitcast i8* %518 to i32*
  store i32 1, i32* %519, align 8
  br label %603

520:                                              ; preds = %513
  %521 = tail call i32 @strcmp(i8* %143, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0)) #15
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %526

523:                                              ; preds = %520
  %524 = getelementptr inbounds i8, i8* %502, i64 8
  %525 = bitcast i8* %524 to i32*
  store i32 2, i32* %525, align 8
  br label %603

526:                                              ; preds = %520
  %527 = tail call i32 @strcmp(i8* %143, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.75, i64 0, i64 0)) #15
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %529, label %532

529:                                              ; preds = %526
  %530 = getelementptr inbounds i8, i8* %502, i64 8
  %531 = bitcast i8* %530 to i32*
  store i32 3, i32* %531, align 8
  br label %603

532:                                              ; preds = %526
  %533 = tail call i32 @strcmp(i8* %143, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0)) #15
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %538

535:                                              ; preds = %532
  %536 = getelementptr inbounds i8, i8* %502, i64 8
  %537 = bitcast i8* %536 to i32*
  store i32 4, i32* %537, align 8
  br label %603

538:                                              ; preds = %532
  %539 = tail call i32 @strcmp(i8* %143, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0)) #15
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %544

541:                                              ; preds = %538
  %542 = getelementptr inbounds i8, i8* %502, i64 8
  %543 = bitcast i8* %542 to i32*
  store i32 6, i32* %543, align 8
  br label %603

544:                                              ; preds = %538
  %545 = tail call i32 @strcmp(i8* %143, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.78, i64 0, i64 0)) #15
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %550

547:                                              ; preds = %544
  %548 = getelementptr inbounds i8, i8* %502, i64 8
  %549 = bitcast i8* %548 to i32*
  store i32 7, i32* %549, align 8
  br label %603

550:                                              ; preds = %544
  %551 = tail call i32 @strcmp(i8* %143, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i64 0, i64 0)) #15
  %552 = icmp eq i32 %551, 0
  br i1 %552, label %560, label %553

553:                                              ; preds = %550
  %554 = tail call i32 @strcmp(i8* %143, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.80, i64 0, i64 0)) #15
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %557, label %556

556:                                              ; preds = %553
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.52, i64 0, i64 0), i8* %143) #19
  unreachable

557:                                              ; preds = %553
  %558 = getelementptr inbounds i8, i8* %502, i64 8
  %559 = bitcast i8* %558 to i32*
  store i32 5, i32* %559, align 8
  br label %569

560:                                              ; preds = %550
  %561 = getelementptr inbounds i8, i8* %502, i64 8
  %562 = bitcast i8* %561 to i32*
  store i32 0, i32* %562, align 8
  %563 = getelementptr inbounds i8, i8* %0, i64 40
  %564 = bitcast i8* %563 to %struct.message**
  %565 = load %struct.message*, %struct.message** %564, align 8
  %566 = getelementptr inbounds %struct.message, %struct.message* %565, i64 0, i32 6
  %567 = load i32, i32* %566, align 4
  %568 = add nsw i32 %567, 1
  store i32 %568, i32* %566, align 4
  br label %569

569:                                              ; preds = %557, %560
  %570 = phi i32* [ %559, %557 ], [ %562, %560 ]
  %571 = icmp eq i8* %144, null
  br i1 %571, label %607, label %572

572:                                              ; preds = %569
  %573 = load i8, i8* %144, align 1
  %574 = icmp eq i8 %573, 0
  br i1 %574, label %575, label %576

575:                                              ; preds = %572
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i64 0, i64 0)) #18
  unreachable

576:                                              ; preds = %572, %589
  %577 = phi i8* [ %590, %589 ], [ %144, %572 ]
  %578 = phi i8 [ %591, %589 ], [ %573, %572 ]
  %579 = and i8 %578, -33
  %580 = add i8 %579, -65
  %581 = icmp ugt i8 %580, 25
  %582 = add i8 %578, -48
  %583 = icmp ugt i8 %582, 9
  %584 = icmp eq i8* %577, %144
  %585 = icmp ne i8 %578, 95
  %586 = and i1 %585, %581
  %587 = or i1 %584, %583
  %588 = and i1 %587, %586
  br i1 %588, label %593, label %589

589:                                              ; preds = %576
  %590 = getelementptr inbounds i8, i8* %577, i64 1
  %591 = load i8, i8* %590, align 1
  %592 = icmp eq i8 %591, 0
  br i1 %592, label %594, label %576

593:                                              ; preds = %576
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.68, i64 0, i64 0), i8* nonnull %144) #18
  unreachable

594:                                              ; preds = %589
  %595 = tail call noalias i8* @strdup(i8* %144) #10
  %596 = icmp eq i8* %595, null
  br i1 %596, label %597, label %600

597:                                              ; preds = %594
  %598 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %599 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %598, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

600:                                              ; preds = %594
  %601 = getelementptr inbounds i8, i8* %502, i64 16
  %602 = bitcast i8* %601 to i8**
  store i8* %595, i8** %602, align 8
  br label %607

603:                                              ; preds = %523, %535, %547, %541, %529, %517
  %604 = phi i32* [ %519, %517 ], [ %531, %529 ], [ %543, %541 ], [ %549, %547 ], [ %537, %535 ], [ %525, %523 ]
  %605 = icmp eq i8* %144, null
  br i1 %605, label %607, label %606

606:                                              ; preds = %603
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.53, i64 0, i64 0), i8* %143) #19
  unreachable

607:                                              ; preds = %603, %569, %600
  %608 = phi i32* [ %604, %603 ], [ %570, %569 ], [ %570, %600 ]
  %609 = icmp eq i8* %148, null
  br i1 %609, label %623, label %610

610:                                              ; preds = %607
  %611 = tail call i32 @strcmp(i8* nonnull %148, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0)) #15
  %612 = icmp eq i32 %611, 0
  br i1 %612, label %613, label %616

613:                                              ; preds = %610
  %614 = getelementptr inbounds i8, i8* %502, i64 12
  %615 = bitcast i8* %614 to i32*
  store i32 1, i32* %615, align 4
  br label %620

616:                                              ; preds = %610
  %617 = tail call i32 @strcmp(i8* nonnull %148, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0)) #15
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %620, label %619

619:                                              ; preds = %616
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.56, i64 0, i64 0), i8* nonnull %148) #19
  unreachable

620:                                              ; preds = %616, %613
  %621 = load i32, i32* %608, align 8
  switch i32 %621, label %622 [
    i32 4, label %623
    i32 5, label %623
    i32 0, label %623
    i32 6, label %623
  ]

622:                                              ; preds = %620
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.57, i64 0, i64 0)) #19
  unreachable

623:                                              ; preds = %620, %620, %620, %620, %607
  %624 = icmp eq i8* %149, null
  br i1 %624, label %634, label %625

625:                                              ; preds = %623
  %626 = load i8, i8* %149, align 1
  %627 = icmp eq i8 %626, 0
  br i1 %627, label %634, label %628

628:                                              ; preds = %625
  %629 = tail call noalias i8* @strdup(i8* nonnull %149) #10
  %630 = icmp eq i8* %629, null
  br i1 %630, label %631, label %634

631:                                              ; preds = %628
  %632 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %633 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %632, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

634:                                              ; preds = %628, %623, %625
  %635 = phi i8* [ null, %625 ], [ null, %623 ], [ %629, %628 ]
  %636 = getelementptr inbounds i8, i8* %502, i64 48
  %637 = bitcast i8* %636 to i8**
  store i8* %635, i8** %637, align 8
  %638 = icmp eq i8* %146, null
  br i1 %638, label %648, label %639

639:                                              ; preds = %634
  %640 = tail call noalias i8* @strdup(i8* nonnull %146) #10
  %641 = icmp eq i8* %640, null
  br i1 %641, label %642, label %645

642:                                              ; preds = %639
  %643 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %644 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %643, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

645:                                              ; preds = %639
  %646 = getelementptr inbounds i8, i8* %502, i64 40
  %647 = bitcast i8* %646 to i8**
  store i8* %640, i8** %647, align 8
  br label %648

648:                                              ; preds = %634, %645
  %649 = getelementptr inbounds i8, i8* %0, i64 40
  %650 = bitcast i8* %649 to %struct.message**
  %651 = load %struct.message*, %struct.message** %650, align 8
  %652 = getelementptr inbounds %struct.message, %struct.message* %651, i64 0, i32 3, i32 0
  %653 = load %struct.wl_list*, %struct.wl_list** %652, align 8
  %654 = getelementptr inbounds i8, i8* %502, i64 24
  %655 = bitcast i8* %654 to %struct.wl_list*
  tail call void @wl_list_insert(%struct.wl_list* %653, %struct.wl_list* %655) #10
  %656 = load %struct.message*, %struct.message** %650, align 8
  %657 = getelementptr inbounds %struct.message, %struct.message* %656, i64 0, i32 5
  %658 = load i32, i32* %657, align 8
  %659 = add nsw i32 %658, 1
  store i32 %659, i32* %657, align 8
  br label %936

660:                                              ; preds = %473
  %661 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0)) #15
  %662 = icmp eq i32 %661, 0
  br i1 %662, label %663, label %751

663:                                              ; preds = %660
  %664 = icmp eq i8* %142, null
  br i1 %664, label %665, label %666

665:                                              ; preds = %663
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.59, i64 0, i64 0)) #19
  unreachable

666:                                              ; preds = %663
  %667 = load i8, i8* %142, align 1
  %668 = icmp eq i8 %667, 0
  br i1 %668, label %669, label %670

669:                                              ; preds = %666
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i64 0, i64 0)) #18
  unreachable

670:                                              ; preds = %666, %681
  %671 = phi i8* [ %682, %681 ], [ %142, %666 ]
  %672 = phi i8 [ %683, %681 ], [ %667, %666 ]
  %673 = and i8 %672, -33
  %674 = add i8 %673, -65
  %675 = icmp ugt i8 %674, 25
  %676 = add i8 %672, -48
  %677 = icmp ugt i8 %676, 9
  %678 = icmp ne i8 %672, 95
  %679 = and i1 %678, %675
  %680 = and i1 %677, %679
  br i1 %680, label %685, label %681

681:                                              ; preds = %670
  %682 = getelementptr inbounds i8, i8* %671, i64 1
  %683 = load i8, i8* %682, align 1
  %684 = icmp eq i8 %683, 0
  br i1 %684, label %686, label %670

685:                                              ; preds = %670
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.67, i64 0, i64 0), i8* nonnull %142) #18
  unreachable

686:                                              ; preds = %681
  %687 = tail call noalias i8* @calloc(i64 64, i64 1) #10
  %688 = icmp eq i8* %687, null
  br i1 %688, label %689, label %692

689:                                              ; preds = %686
  %690 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %691 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %690, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

692:                                              ; preds = %686
  %693 = tail call noalias i8* @strdup(i8* %142) #10
  %694 = icmp eq i8* %693, null
  br i1 %694, label %695, label %698

695:                                              ; preds = %692
  %696 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %697 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %696, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

698:                                              ; preds = %692
  %699 = bitcast i8* %687 to i8**
  store i8* %693, i8** %699, align 8
  %700 = tail call noalias i8* @strdup(i8* %142) #10
  %701 = icmp eq i8* %700, null
  br i1 %701, label %708, label %702

702:                                              ; preds = %698
  %703 = load i8, i8* %700, align 1
  %704 = icmp eq i8 %703, 0
  br i1 %704, label %723, label %705

705:                                              ; preds = %702
  %706 = tail call i32** @__ctype_toupper_loc() #16
  %707 = load i32*, i32** %706, align 8
  br label %711

708:                                              ; preds = %698
  %709 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %710 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %709, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

711:                                              ; preds = %711, %705
  %712 = phi i64 [ 0, %705 ], [ %719, %711 ]
  %713 = phi i8 [ %703, %705 ], [ %721, %711 ]
  %714 = phi i8* [ %700, %705 ], [ %720, %711 ]
  %715 = sext i8 %713 to i64
  %716 = getelementptr inbounds i32, i32* %707, i64 %715
  %717 = load i32, i32* %716, align 4
  %718 = trunc i32 %717 to i8
  store i8 %718, i8* %714, align 1
  %719 = add nuw i64 %712, 1
  %720 = getelementptr inbounds i8, i8* %700, i64 %719
  %721 = load i8, i8* %720, align 1
  %722 = icmp eq i8 %721, 0
  br i1 %722, label %723, label %711

723:                                              ; preds = %711, %702
  %724 = phi i8* [ %700, %702 ], [ %720, %711 ]
  store i8 0, i8* %724, align 1
  %725 = getelementptr inbounds i8, i8* %687, i64 8
  %726 = bitcast i8* %725 to i8**
  store i8* %700, i8** %726, align 8
  %727 = getelementptr inbounds i8, i8* %687, i64 60
  %728 = bitcast i8* %727 to i32*
  store i32 1, i32* %728, align 4
  %729 = getelementptr inbounds i8, i8* %687, i64 16
  %730 = bitcast i8* %729 to %struct.wl_list*
  tail call void @wl_list_init(%struct.wl_list* %730) #10
  %731 = icmp eq i8* %150, null
  br i1 %731, label %739, label %732

732:                                              ; preds = %723
  %733 = tail call i32 @strcmp(i8* nonnull %150, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i64 0, i64 0)) #15
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %739, label %735

735:                                              ; preds = %732
  %736 = tail call i32 @strcmp(i8* nonnull %150, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0)) #15
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %739, label %738

738:                                              ; preds = %735
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.60, i64 0, i64 0), i8* nonnull %150) #19
  unreachable

739:                                              ; preds = %735, %723, %732
  %740 = phi i8 [ 0, %732 ], [ 0, %723 ], [ 1, %735 ]
  %741 = getelementptr inbounds i8, i8* %687, i64 56
  store i8 %740, i8* %741, align 8
  %742 = getelementptr inbounds i8, i8* %0, i64 32
  %743 = bitcast i8* %742 to %struct.interface**
  %744 = load %struct.interface*, %struct.interface** %743, align 8
  %745 = getelementptr inbounds %struct.interface, %struct.interface* %744, i64 0, i32 7, i32 0
  %746 = load %struct.wl_list*, %struct.wl_list** %745, align 8
  %747 = getelementptr inbounds i8, i8* %687, i64 32
  %748 = bitcast i8* %747 to %struct.wl_list*
  tail call void @wl_list_insert(%struct.wl_list* %746, %struct.wl_list* %748) #10
  %749 = getelementptr inbounds i8, i8* %0, i64 48
  %750 = bitcast i8* %749 to i8**
  store i8* %687, i8** %750, align 8
  br label %936

751:                                              ; preds = %660
  %752 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i64 0, i64 0)) #15
  %753 = icmp eq i32 %752, 0
  br i1 %753, label %754, label %886

754:                                              ; preds = %751
  %755 = icmp eq i8* %142, null
  br i1 %755, label %756, label %757

756:                                              ; preds = %754
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.62, i64 0, i64 0)) #19
  unreachable

757:                                              ; preds = %754
  %758 = load i8, i8* %142, align 1
  %759 = icmp eq i8 %758, 0
  br i1 %759, label %760, label %761

760:                                              ; preds = %757
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i64 0, i64 0)) #18
  unreachable

761:                                              ; preds = %757, %772
  %762 = phi i8* [ %773, %772 ], [ %142, %757 ]
  %763 = phi i8 [ %774, %772 ], [ %758, %757 ]
  %764 = and i8 %763, -33
  %765 = add i8 %764, -65
  %766 = icmp ugt i8 %765, 25
  %767 = add i8 %763, -48
  %768 = icmp ugt i8 %767, 9
  %769 = icmp ne i8 %763, 95
  %770 = and i1 %769, %766
  %771 = and i1 %768, %770
  br i1 %771, label %776, label %772

772:                                              ; preds = %761
  %773 = getelementptr inbounds i8, i8* %762, i64 1
  %774 = load i8, i8* %773, align 1
  %775 = icmp eq i8 %774, 0
  br i1 %775, label %777, label %761

776:                                              ; preds = %761
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.67, i64 0, i64 0), i8* nonnull %142) #18
  unreachable

777:                                              ; preds = %772
  %778 = tail call noalias i8* @calloc(i64 56, i64 1) #10
  %779 = icmp eq i8* %778, null
  br i1 %779, label %780, label %783

780:                                              ; preds = %777
  %781 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %782 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %781, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

783:                                              ; preds = %777
  %784 = tail call noalias i8* @strdup(i8* %142) #10
  %785 = icmp eq i8* %784, null
  br i1 %785, label %786, label %789

786:                                              ; preds = %783
  %787 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %788 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %787, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

789:                                              ; preds = %783
  %790 = bitcast i8* %778 to i8**
  store i8* %784, i8** %790, align 8
  %791 = tail call noalias i8* @strdup(i8* %142) #10
  %792 = icmp eq i8* %791, null
  br i1 %792, label %799, label %793

793:                                              ; preds = %789
  %794 = load i8, i8* %791, align 1
  %795 = icmp eq i8 %794, 0
  br i1 %795, label %814, label %796

796:                                              ; preds = %793
  %797 = tail call i32** @__ctype_toupper_loc() #16
  %798 = load i32*, i32** %797, align 8
  br label %802

799:                                              ; preds = %789
  %800 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %801 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %800, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

802:                                              ; preds = %802, %796
  %803 = phi i64 [ 0, %796 ], [ %810, %802 ]
  %804 = phi i8 [ %794, %796 ], [ %812, %802 ]
  %805 = phi i8* [ %791, %796 ], [ %811, %802 ]
  %806 = sext i8 %804 to i64
  %807 = getelementptr inbounds i32, i32* %798, i64 %806
  %808 = load i32, i32* %807, align 4
  %809 = trunc i32 %808 to i8
  store i8 %809, i8* %805, align 1
  %810 = add nuw i64 %803, 1
  %811 = getelementptr inbounds i8, i8* %791, i64 %810
  %812 = load i8, i8* %811, align 1
  %813 = icmp eq i8 %812, 0
  br i1 %813, label %814, label %802

814:                                              ; preds = %802, %793
  %815 = phi i8* [ %791, %793 ], [ %811, %802 ]
  store i8 0, i8* %815, align 1
  %816 = getelementptr inbounds i8, i8* %778, i64 8
  %817 = bitcast i8* %816 to i8**
  store i8* %791, i8** %817, align 8
  %818 = tail call noalias i8* @strdup(i8* %145) #10
  %819 = icmp eq i8* %818, null
  br i1 %819, label %820, label %823

820:                                              ; preds = %814
  %821 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %822 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %821, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

823:                                              ; preds = %814
  %824 = getelementptr inbounds i8, i8* %778, i64 16
  %825 = bitcast i8* %824 to i8**
  store i8* %818, i8** %825, align 8
  %826 = icmp eq i8* %147, null
  br i1 %826, label %855, label %827

827:                                              ; preds = %823
  %828 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %828) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %829 = tail call i32* @__errno_location() #16
  %830 = load i32, i32* %829, align 4
  store i32 0, i32* %829, align 4
  %831 = call i64 @strtol(i8* nonnull %147, i8** nonnull %4, i32 10) #10
  %832 = load i32, i32* %829, align 4
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %842

834:                                              ; preds = %827
  %835 = load i8*, i8** %4, align 8
  %836 = icmp eq i8* %835, %147
  br i1 %836, label %842, label %837

837:                                              ; preds = %834
  %838 = load i8, i8* %835, align 1
  %839 = icmp ne i8 %838, 0
  %840 = icmp ugt i64 %831, 2147483647
  %841 = or i1 %840, %839
  br i1 %841, label %842, label %843

842:                                              ; preds = %837, %827, %834
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %828) #10
  br label %846

843:                                              ; preds = %837
  store i32 %830, i32* %829, align 4
  %844 = trunc i64 %831 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %828) #10
  %845 = icmp eq i32 %844, -1
  br i1 %845, label %846, label %847

846:                                              ; preds = %842, %843
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.70, i64 0, i64 0), i8* nonnull %147) #18
  unreachable

847:                                              ; preds = %843
  %848 = getelementptr inbounds i8, i8* %0, i64 32
  %849 = bitcast i8* %848 to %struct.interface**
  %850 = load %struct.interface*, %struct.interface** %849, align 8
  %851 = getelementptr inbounds %struct.interface, %struct.interface* %850, i64 0, i32 3
  %852 = load i32, i32* %851, align 8
  %853 = icmp slt i32 %852, %844
  br i1 %853, label %854, label %855

854:                                              ; preds = %847
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.71, i64 0, i64 0), i32 %844, i32 %852) #18
  unreachable

855:                                              ; preds = %823, %847
  %856 = phi i32 [ %844, %847 ], [ 1, %823 ]
  %857 = getelementptr inbounds i8, i8* %0, i64 48
  %858 = bitcast i8* %857 to %struct.enumeration**
  %859 = load %struct.enumeration*, %struct.enumeration** %858, align 8
  %860 = getelementptr inbounds %struct.enumeration, %struct.enumeration* %859, i64 0, i32 6
  %861 = load i32, i32* %860, align 4
  %862 = icmp slt i32 %856, %861
  br i1 %862, label %863, label %865

863:                                              ; preds = %855
  tail call void (%struct.location*, i8*, ...) @warn(%struct.location* %12, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i64 0, i64 0))
  %864 = load %struct.enumeration*, %struct.enumeration** %858, align 8
  br label %865

865:                                              ; preds = %863, %855
  %866 = phi %struct.enumeration* [ %864, %863 ], [ %859, %855 ]
  %867 = getelementptr inbounds %struct.enumeration, %struct.enumeration* %866, i64 0, i32 6
  store i32 %856, i32* %867, align 4
  %868 = getelementptr inbounds i8, i8* %778, i64 32
  %869 = bitcast i8* %868 to i32*
  store i32 %856, i32* %869, align 8
  %870 = icmp eq i8* %146, null
  br i1 %870, label %877, label %871

871:                                              ; preds = %865
  %872 = tail call noalias i8* @strdup(i8* nonnull %146) #10
  %873 = icmp eq i8* %872, null
  br i1 %873, label %874, label %877

874:                                              ; preds = %871
  %875 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %876 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %875, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

877:                                              ; preds = %865, %871
  %878 = phi i8* [ %872, %871 ], [ null, %865 ]
  %879 = getelementptr inbounds i8, i8* %778, i64 24
  %880 = bitcast i8* %879 to i8**
  store i8* %878, i8** %880, align 8
  %881 = load %struct.enumeration*, %struct.enumeration** %858, align 8
  %882 = getelementptr inbounds %struct.enumeration, %struct.enumeration* %881, i64 0, i32 2, i32 0
  %883 = load %struct.wl_list*, %struct.wl_list** %882, align 8
  %884 = getelementptr inbounds i8, i8* %778, i64 40
  %885 = bitcast i8* %884 to %struct.wl_list*
  tail call void @wl_list_insert(%struct.wl_list* %883, %struct.wl_list* %885) #10
  br label %936

886:                                              ; preds = %751
  %887 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.63, i64 0, i64 0)) #15
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %936

889:                                              ; preds = %886
  %890 = icmp eq i8* %146, null
  br i1 %890, label %891, label %892

891:                                              ; preds = %889
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %12, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.64, i64 0, i64 0)) #19
  unreachable

892:                                              ; preds = %889
  %893 = tail call noalias i8* @calloc(i64 16, i64 1) #10
  %894 = icmp eq i8* %893, null
  br i1 %894, label %895, label %898

895:                                              ; preds = %892
  %896 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %897 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %896, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

898:                                              ; preds = %892
  %899 = tail call noalias i8* @strdup(i8* nonnull %146) #10
  %900 = icmp eq i8* %899, null
  br i1 %900, label %901, label %904

901:                                              ; preds = %898
  %902 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %903 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %902, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

904:                                              ; preds = %898
  %905 = bitcast i8* %893 to i8**
  store i8* %899, i8** %905, align 8
  %906 = getelementptr inbounds i8, i8* %0, i64 40
  %907 = bitcast i8* %906 to %struct.message**
  %908 = load %struct.message*, %struct.message** %907, align 8
  %909 = icmp eq %struct.message* %908, null
  br i1 %909, label %912, label %910

910:                                              ; preds = %904
  %911 = getelementptr inbounds %struct.message, %struct.message* %908, i64 0, i32 11
  br label %931

912:                                              ; preds = %904
  %913 = getelementptr inbounds i8, i8* %0, i64 48
  %914 = bitcast i8* %913 to %struct.enumeration**
  %915 = load %struct.enumeration*, %struct.enumeration** %914, align 8
  %916 = icmp eq %struct.enumeration* %915, null
  br i1 %916, label %919, label %917

917:                                              ; preds = %912
  %918 = getelementptr inbounds %struct.enumeration, %struct.enumeration* %915, i64 0, i32 4
  br label %931

919:                                              ; preds = %912
  %920 = getelementptr inbounds i8, i8* %0, i64 32
  %921 = bitcast i8* %920 to %struct.interface**
  %922 = load %struct.interface*, %struct.interface** %921, align 8
  %923 = icmp eq %struct.interface* %922, null
  br i1 %923, label %926, label %924

924:                                              ; preds = %919
  %925 = getelementptr inbounds %struct.interface, %struct.interface* %922, i64 0, i32 9
  br label %931

926:                                              ; preds = %919
  %927 = getelementptr inbounds i8, i8* %0, i64 24
  %928 = bitcast i8* %927 to %struct.protocol**
  %929 = load %struct.protocol*, %struct.protocol** %928, align 8
  %930 = getelementptr inbounds %struct.protocol, %struct.protocol* %929, i64 0, i32 6
  br label %931

931:                                              ; preds = %917, %926, %924, %910
  %932 = phi %struct.description** [ %918, %917 ], [ %930, %926 ], [ %925, %924 ], [ %911, %910 ]
  %933 = bitcast %struct.description** %932 to i8**
  store i8* %893, i8** %933, align 8
  %934 = getelementptr inbounds i8, i8* %0, i64 56
  %935 = bitcast i8* %934 to i8**
  store i8* %893, i8** %935, align 8
  br label %936

936:                                              ; preds = %219, %470, %739, %886, %931, %877, %648, %297, %215
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @end_element(i8* nocapture, i8* nocapture readonly) #3 {
  %3 = bitcast i8* %0 to %struct.parse_context*
  %4 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0)) #15
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %20

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %0, i64 64
  %8 = getelementptr inbounds i8, i8* %0, i64 8256
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = add nuw nsw i64 %11, 1
  %13 = tail call noalias i8* @malloc(i64 %12) #10
  %14 = tail call i8* @strncpy(i8* %13, i8* %7, i64 %11) #10
  %15 = getelementptr inbounds i8, i8* %13, i64 %11
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds i8, i8* %0, i64 24
  %17 = bitcast i8* %16 to %struct.protocol**
  %18 = load %struct.protocol*, %struct.protocol** %17, align 8
  %19 = getelementptr inbounds %struct.protocol, %struct.protocol* %18, i64 0, i32 5
  store i8* %13, i8** %19, align 8
  br label %90

20:                                               ; preds = %2
  %21 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.63, i64 0, i64 0)) #15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %37

23:                                               ; preds = %20
  %24 = getelementptr inbounds i8, i8* %0, i64 64
  %25 = getelementptr inbounds i8, i8* %0, i64 8256
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = add nuw nsw i64 %28, 1
  %30 = tail call noalias i8* @malloc(i64 %29) #10
  %31 = tail call i8* @strncpy(i8* %30, i8* %24, i64 %28) #10
  %32 = getelementptr inbounds i8, i8* %30, i64 %28
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 56
  %34 = bitcast i8* %33 to %struct.description**
  %35 = load %struct.description*, %struct.description** %34, align 8
  %36 = getelementptr inbounds %struct.description, %struct.description* %35, i64 0, i32 1
  store i8* %30, i8** %36, align 8
  store %struct.description* null, %struct.description** %34, align 8
  br label %90

37:                                               ; preds = %20
  %38 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0)) #15
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0)) #15
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %40, %37
  %44 = getelementptr inbounds i8, i8* %0, i64 40
  %45 = bitcast i8* %44 to %struct.message**
  store %struct.message* null, %struct.message** %45, align 8
  br label %90

46:                                               ; preds = %40
  %47 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0)) #15
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %62

49:                                               ; preds = %46
  %50 = getelementptr inbounds i8, i8* %0, i64 48
  %51 = bitcast i8* %50 to %struct.enumeration**
  %52 = load %struct.enumeration*, %struct.enumeration** %51, align 8
  %53 = getelementptr inbounds %struct.enumeration, %struct.enumeration* %52, i64 0, i32 2
  %54 = tail call i32 @wl_list_empty(%struct.wl_list* %53) #10
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %49
  %57 = bitcast i8* %0 to %struct.location*
  %58 = load %struct.enumeration*, %struct.enumeration** %51, align 8
  %59 = getelementptr inbounds %struct.enumeration, %struct.enumeration* %58, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %57, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.81, i64 0, i64 0), i8* %60) #19
  unreachable

61:                                               ; preds = %49
  store %struct.enumeration* null, %struct.enumeration** %51, align 8
  br label %90

62:                                               ; preds = %46
  %63 = tail call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0)) #15
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %90

65:                                               ; preds = %62
  %66 = getelementptr inbounds i8, i8* %0, i64 24
  %67 = bitcast i8* %66 to %struct.protocol**
  %68 = load %struct.protocol*, %struct.protocol** %67, align 8
  %69 = getelementptr inbounds %struct.protocol, %struct.protocol* %68, i64 0, i32 2, i32 1
  %70 = bitcast %struct.wl_list** %69 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast i8* %71 to %struct.wl_list*
  %73 = getelementptr inbounds %struct.protocol, %struct.protocol* %68, i64 0, i32 2
  %74 = icmp eq %struct.wl_list* %73, %72
  br i1 %74, label %90, label %75

75:                                               ; preds = %65, %75
  %76 = phi i8* [ %85, %75 ], [ %71, %65 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 -88
  %78 = bitcast i8* %77 to %struct.interface*
  %79 = getelementptr inbounds i8, i8* %76, i64 -48
  %80 = bitcast i8* %79 to %struct.wl_list*
  tail call fastcc void @verify_arguments(%struct.parse_context* %3, %struct.interface* %78, %struct.wl_list* %80)
  %81 = getelementptr inbounds i8, i8* %76, i64 -32
  %82 = bitcast i8* %81 to %struct.wl_list*
  tail call fastcc void @verify_arguments(%struct.parse_context* %3, %struct.interface* %78, %struct.wl_list* %82)
  %83 = getelementptr inbounds i8, i8* %76, i64 8
  %84 = bitcast i8* %83 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = bitcast i8* %85 to %struct.wl_list*
  %87 = load %struct.protocol*, %struct.protocol** %67, align 8
  %88 = getelementptr inbounds %struct.protocol, %struct.protocol* %87, i64 0, i32 2
  %89 = icmp eq %struct.wl_list* %88, %86
  br i1 %89, label %90, label %75

90:                                               ; preds = %75, %65, %23, %61, %62, %43, %6
  ret void
}

declare void @XML_SetCharacterDataHandler(%struct.XML_ParserStruct*, void (i8*, i8*, i32)*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @character_data(i8* nocapture, i8* nocapture readonly, i32) #3 {
  %4 = getelementptr inbounds i8, i8* %0, i64 8256
  %5 = bitcast i8* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, %2
  %8 = icmp ugt i32 %7, 8192
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %11 = tail call i64 @fwrite(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.84, i64 0, i64 0), i64 23, i64 1, %struct._IO_FILE* %10) #17
  tail call void @exit(i32 1) #18
  unreachable

12:                                               ; preds = %3
  %13 = getelementptr inbounds i8, i8* %0, i64 64
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = sext i32 %2 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %1, i64 %16, i1 false)
  %17 = load i32, i32* %5, align 8
  %18 = add i32 %17, %2
  store i32 %18, i32* %5, align 8
  ret void
}

declare i8* @XML_GetBuffer(%struct.XML_ParserStruct*, i32) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i64 @fread(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #2

declare i32 @XML_ParseBuffer(%struct.XML_ParserStruct*, i32, i32) local_unnamed_addr #9

declare i64 @XML_GetCurrentLineNumber(%struct.XML_ParserStruct*) local_unnamed_addr #9

declare i64 @XML_GetCurrentColumnNumber(%struct.XML_ParserStruct*) local_unnamed_addr #9

declare i8* @XML_ErrorString(i32) local_unnamed_addr #9

declare i32 @XML_GetErrorCode(%struct.XML_ParserStruct*) local_unnamed_addr #9

declare void @XML_ParserFree(%struct.XML_ParserStruct*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @emit_header(%struct.protocol*, i32) unnamed_addr #3 {
  %3 = alloca %struct.wl_array, align 8
  %4 = bitcast %struct.wl_array* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %struct.wl_array, %struct.wl_array* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.wl_array, %struct.wl_array* %3, i64 0, i32 2
  %7 = icmp eq i32 %1, 1
  %8 = select i1 %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i64 0, i64 0)
  %9 = bitcast %struct.wl_array* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0))
  %11 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 7
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp ne i8 %14, 0
  %16 = select i1 %15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.99, i64 0, i64 0)
  %17 = select i1 %15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.101, i64 0, i64 0)
  %18 = select i1 %7, i8* %16, i8* %17
  %19 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([148 x i8], [148 x i8]* @.str.88, i64 0, i64 0), i8* %12, i8* %8, i8* %12, i8* %8, i8* %18)
  br i1 %7, label %20, label %22

20:                                               ; preds = %2
  %21 = tail call i32 @puts(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @str.229, i64 0, i64 0))
  br label %22

22:                                               ; preds = %20, %2
  %23 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.102, i64 0, i64 0), i8* %24, i8* %24) #10
  %26 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 6
  %27 = load %struct.description*, %struct.description** %26, align 8
  %28 = icmp eq %struct.description* %27, null
  br i1 %28, label %81, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %struct.description, %struct.description* %27, i64 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.103, i64 0, i64 0), i8* nonnull %31) #10
  %35 = load %struct.description*, %struct.description** %26, align 8
  br label %36

36:                                               ; preds = %33, %29
  %37 = phi %struct.description* [ %27, %29 ], [ %35, %33 ]
  %38 = getelementptr inbounds %struct.description, %struct.description* %37, i64 0, i32 1
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %81, label %41

41:                                               ; preds = %36
  %42 = load i8*, i8** %23, align 8
  %43 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.104, i64 0, i64 0), i8* %42) #10
  %44 = load %struct.description*, %struct.description** %26, align 8
  %45 = getelementptr inbounds %struct.description, %struct.description* %44, i64 0, i32 1
  %46 = load i8*, i8** %45, align 8
  %47 = tail call i64 @strlen(i8* %46) #15
  %48 = trunc i64 %47 to i32
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %79, label %50

50:                                               ; preds = %41
  %51 = add i64 %47, 1
  %52 = and i64 %51, 4294967295
  br label %53

53:                                               ; preds = %74, %50
  %54 = phi i64 [ 0, %50 ], [ %77, %74 ]
  %55 = phi i32 [ 0, %50 ], [ %76, %74 ]
  %56 = phi i32 [ 1, %50 ], [ %75, %74 ]
  %57 = icmp ne i32 %56, 0
  %58 = getelementptr inbounds i8, i8* %46, i64 %54
  %59 = load i8, i8* %58, align 1
  br i1 %57, label %60, label %61

60:                                               ; preds = %53
  switch i8 %59, label %61 [
    i8 32, label %74
    i8 9, label %74
  ]

61:                                               ; preds = %60, %53
  %62 = trunc i64 %54 to i32
  %63 = select i1 %57, i32 %62, i32 %55
  switch i8 %59, label %74 [
    i8 10, label %67
    i8 0, label %64
  ]

64:                                               ; preds = %61
  %65 = zext i32 %63 to i64
  %66 = icmp eq i64 %54, %65
  br i1 %66, label %74, label %67

67:                                               ; preds = %64, %61
  %68 = sext i32 %63 to i64
  %69 = icmp sgt i64 %54, %68
  %70 = select i1 %69, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0)
  %71 = sub nsw i32 %62, %63
  %72 = getelementptr inbounds i8, i8* %46, i64 %68
  %73 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.240, i64 0, i64 0), i8* %70, i32 %71, i8* %72) #10
  br label %74

74:                                               ; preds = %67, %64, %61, %60, %60
  %75 = phi i32 [ %56, %60 ], [ 1, %67 ], [ 0, %64 ], [ %56, %60 ], [ 0, %61 ]
  %76 = phi i32 [ %55, %60 ], [ %63, %67 ], [ %63, %64 ], [ %55, %60 ], [ %63, %61 ]
  %77 = add nuw nsw i64 %54, 1
  %78 = icmp eq i64 %77, %52
  br i1 %78, label %79, label %53

79:                                               ; preds = %74, %41
  %80 = tail call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.240, i64 0, i64 0)) #10
  br label %81

81:                                               ; preds = %79, %36, %22
  %82 = load i8*, i8** %23, align 8
  %83 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.106, i64 0, i64 0), i8* %82) #10
  %84 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 2
  %85 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 2, i32 1
  %86 = bitcast %struct.wl_list** %85 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = bitcast i8* %87 to %struct.wl_list*
  %89 = icmp eq %struct.wl_list* %84, %88
  br i1 %89, label %112, label %90

90:                                               ; preds = %81, %104
  %91 = phi i8* [ %109, %104 ], [ %87, %81 ]
  %92 = getelementptr inbounds i8, i8* %91, i64 -72
  %93 = bitcast i8* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds i8, i8* %91, i64 16
  %96 = bitcast i8* %95 to %struct.description**
  %97 = load %struct.description*, %struct.description** %96, align 8
  %98 = icmp eq %struct.description* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %90
  %100 = getelementptr inbounds %struct.description, %struct.description* %97, i64 0, i32 0
  %101 = load i8*, i8** %100, align 8
  %102 = icmp eq i8* %101, null
  %103 = select i1 %102, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), i8* %101
  br label %104

104:                                              ; preds = %99, %90
  %105 = phi i8* [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0), %90 ], [ %103, %99 ]
  %106 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.107, i64 0, i64 0), i8* %94, i8* %105) #10
  %107 = getelementptr inbounds i8, i8* %91, i64 8
  %108 = bitcast i8* %107 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = bitcast i8* %109 to %struct.wl_list*
  %111 = icmp eq %struct.wl_list* %84, %110
  br i1 %111, label %112, label %90

112:                                              ; preds = %104, %81
  %113 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 5
  %114 = load i8*, i8** %113, align 8
  %115 = icmp eq i8* %114, null
  br i1 %115, label %155, label %116

116:                                              ; preds = %112
  %117 = load i8*, i8** %23, align 8
  %118 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.108, i64 0, i64 0), i8* %117) #10
  %119 = tail call i32 @puts(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @str.238, i64 0, i64 0)) #10
  %120 = load i8*, i8** %113, align 8
  %121 = tail call i64 @strlen(i8* %120) #15
  %122 = trunc i64 %121 to i32
  %123 = icmp slt i32 %122, 0
  br i1 %123, label %153, label %124

124:                                              ; preds = %116
  %125 = add i64 %121, 1
  %126 = and i64 %125, 4294967295
  br label %127

127:                                              ; preds = %148, %124
  %128 = phi i64 [ 0, %124 ], [ %151, %148 ]
  %129 = phi i32 [ 0, %124 ], [ %150, %148 ]
  %130 = phi i32 [ 1, %124 ], [ %149, %148 ]
  %131 = icmp ne i32 %130, 0
  %132 = getelementptr inbounds i8, i8* %120, i64 %128
  %133 = load i8, i8* %132, align 1
  br i1 %131, label %134, label %135

134:                                              ; preds = %127
  switch i8 %133, label %135 [
    i8 32, label %148
    i8 9, label %148
  ]

135:                                              ; preds = %134, %127
  %136 = trunc i64 %128 to i32
  %137 = select i1 %131, i32 %136, i32 %129
  switch i8 %133, label %148 [
    i8 10, label %141
    i8 0, label %138
  ]

138:                                              ; preds = %135
  %139 = zext i32 %137 to i64
  %140 = icmp eq i64 %128, %139
  br i1 %140, label %148, label %141

141:                                              ; preds = %138, %135
  %142 = sext i32 %137 to i64
  %143 = icmp sgt i64 %128, %142
  %144 = select i1 %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0)
  %145 = sub nsw i32 %136, %137
  %146 = getelementptr inbounds i8, i8* %120, i64 %142
  %147 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.240, i64 0, i64 0), i8* %144, i32 %145, i8* %146) #10
  br label %148

148:                                              ; preds = %141, %138, %135, %134, %134
  %149 = phi i32 [ %130, %134 ], [ 1, %141 ], [ 0, %138 ], [ %130, %134 ], [ 0, %135 ]
  %150 = phi i32 [ %129, %134 ], [ %137, %141 ], [ %137, %138 ], [ %129, %134 ], [ %137, %135 ]
  %151 = add nuw nsw i64 %128, 1
  %152 = icmp eq i64 %151, %126
  br i1 %152, label %153, label %127

153:                                              ; preds = %148, %116
  %154 = tail call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.239, i64 0, i64 0)) #10
  br label %155

155:                                              ; preds = %112, %153
  %156 = tail call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.260, i64 0, i64 0)) #10
  call void @wl_array_init(%struct.wl_array* nonnull %3) #10
  %157 = load i8*, i8** %86, align 8
  %158 = bitcast i8* %157 to %struct.wl_list*
  %159 = icmp eq %struct.wl_list* %84, %158
  br i1 %159, label %163, label %167

160:                                              ; preds = %167
  %161 = load i8*, i8** %86, align 8
  %162 = bitcast i8* %161 to %struct.wl_list*
  br label %163

163:                                              ; preds = %160, %155
  %164 = phi %struct.wl_list* [ %162, %160 ], [ %158, %155 ]
  %165 = phi i8* [ %161, %160 ], [ %157, %155 ]
  %166 = icmp eq %struct.wl_list* %84, %164
  br i1 %166, label %195, label %178

167:                                              ; preds = %155, %167
  %168 = phi i8* [ %175, %167 ], [ %157, %155 ]
  %169 = getelementptr inbounds i8, i8* %168, i64 -48
  %170 = bitcast i8* %169 to %struct.wl_list*
  call fastcc void @emit_types_forward_declarations(%struct.protocol* %0, %struct.wl_list* %170, %struct.wl_array* nonnull %3)
  %171 = getelementptr inbounds i8, i8* %168, i64 -32
  %172 = bitcast i8* %171 to %struct.wl_list*
  call fastcc void @emit_types_forward_declarations(%struct.protocol* %0, %struct.wl_list* %172, %struct.wl_array* nonnull %3)
  %173 = getelementptr inbounds i8, i8* %168, i64 8
  %174 = bitcast i8* %173 to i8**
  %175 = load i8*, i8** %174, align 8
  %176 = bitcast i8* %175 to %struct.wl_list*
  %177 = icmp eq %struct.wl_list* %84, %176
  br i1 %177, label %160, label %167

178:                                              ; preds = %163, %185
  %179 = phi i8* [ %192, %185 ], [ %165, %163 ]
  %180 = call i8* @wl_array_add(%struct.wl_array* nonnull %3, i64 8) #10
  %181 = icmp eq i8* %180, null
  br i1 %181, label %182, label %185

182:                                              ; preds = %178
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %184 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %183, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  call void @exit(i32 1) #18
  unreachable

185:                                              ; preds = %178
  %186 = getelementptr inbounds i8, i8* %179, i64 -72
  %187 = bitcast i8* %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast i8* %180 to i64*
  store i64 %188, i64* %189, align 8
  %190 = getelementptr inbounds i8, i8* %179, i64 8
  %191 = bitcast i8* %190 to i8**
  %192 = load i8*, i8** %191, align 8
  %193 = bitcast i8* %192 to %struct.wl_list*
  %194 = icmp eq %struct.wl_list* %84, %193
  br i1 %194, label %195, label %178

195:                                              ; preds = %185, %163
  %196 = load i8*, i8** %6, align 8
  %197 = load i64, i64* %5, align 8
  %198 = lshr i64 %197, 3
  call void @qsort(i8* %196, i64 %198, i64 8, i32 (i8*, i8*)* nonnull @cmp_names) #10
  %199 = bitcast i8** %6 to i8***
  %200 = load i8**, i8*** %199, align 8
  %201 = bitcast i8** %200 to i8*
  %202 = load i64, i64* %5, align 8
  %203 = getelementptr inbounds i8, i8* %201, i64 %202
  %204 = icmp ugt i8* %203, %201
  br i1 %204, label %205, label %228

205:                                              ; preds = %195, %220
  %206 = phi i64 [ %221, %220 ], [ %202, %195 ]
  %207 = phi i8* [ %222, %220 ], [ %201, %195 ]
  %208 = phi i8* [ %223, %220 ], [ null, %195 ]
  %209 = phi i8** [ %224, %220 ], [ %200, %195 ]
  %210 = icmp eq i8* %208, null
  %211 = load i8*, i8** %209, align 8
  br i1 %210, label %215, label %212

212:                                              ; preds = %205
  %213 = call i32 @strcmp(i8* %211, i8* nonnull %208) #15
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %220, label %215

215:                                              ; preds = %205, %212
  %216 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.90, i64 0, i64 0), i8* %211)
  %217 = load i8*, i8** %209, align 8
  %218 = load i8*, i8** %6, align 8
  %219 = load i64, i64* %5, align 8
  br label %220

220:                                              ; preds = %212, %215
  %221 = phi i64 [ %206, %212 ], [ %219, %215 ]
  %222 = phi i8* [ %207, %212 ], [ %218, %215 ]
  %223 = phi i8* [ %208, %212 ], [ %217, %215 ]
  %224 = getelementptr inbounds i8*, i8** %209, i64 1
  %225 = bitcast i8** %224 to i8*
  %226 = getelementptr inbounds i8, i8* %222, i64 %221
  %227 = icmp ugt i8* %226, %225
  br i1 %227, label %205, label %228

228:                                              ; preds = %220, %195
  call void @wl_array_release(%struct.wl_array* nonnull %3) #10
  %229 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %230 = call i32 @putc(i32 10, %struct._IO_FILE* %229) #10
  %231 = load i8*, i8** %86, align 8
  %232 = bitcast i8* %231 to %struct.wl_list*
  %233 = icmp eq %struct.wl_list* %84, %232
  br i1 %233, label %339, label %234

234:                                              ; preds = %228, %330
  %235 = phi i8* [ %336, %330 ], [ %231, %228 ]
  %236 = getelementptr inbounds i8, i8* %235, i64 -72
  %237 = bitcast i8* %236 to i8**
  %238 = load i8*, i8** %237, align 8
  %239 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.91, i64 0, i64 0), i8* %238, i8* %238)
  %240 = getelementptr inbounds i8, i8* %235, i64 16
  %241 = bitcast i8* %240 to %struct.description**
  %242 = load %struct.description*, %struct.description** %241, align 8
  %243 = icmp eq %struct.description* %242, null
  br i1 %243, label %286, label %244

244:                                              ; preds = %234
  %245 = getelementptr inbounds %struct.description, %struct.description* %242, i64 0, i32 1
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %286, label %248

248:                                              ; preds = %244
  %249 = load i8*, i8** %237, align 8
  %250 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.92, i64 0, i64 0), i8* %249)
  %251 = load %struct.description*, %struct.description** %241, align 8
  %252 = getelementptr inbounds %struct.description, %struct.description* %251, i64 0, i32 1
  %253 = load i8*, i8** %252, align 8
  %254 = call i64 @strlen(i8* %253) #15
  %255 = trunc i64 %254 to i32
  %256 = icmp slt i32 %255, 0
  br i1 %256, label %286, label %257

257:                                              ; preds = %248
  %258 = add i64 %254, 1
  %259 = and i64 %258, 4294967295
  br label %260

260:                                              ; preds = %281, %257
  %261 = phi i64 [ 0, %257 ], [ %284, %281 ]
  %262 = phi i32 [ 0, %257 ], [ %283, %281 ]
  %263 = phi i32 [ 1, %257 ], [ %282, %281 ]
  %264 = icmp ne i32 %263, 0
  %265 = getelementptr inbounds i8, i8* %253, i64 %261
  %266 = load i8, i8* %265, align 1
  br i1 %264, label %267, label %268

267:                                              ; preds = %260
  switch i8 %266, label %268 [
    i8 32, label %281
    i8 9, label %281
  ]

268:                                              ; preds = %267, %260
  %269 = trunc i64 %261 to i32
  %270 = select i1 %264, i32 %269, i32 %262
  switch i8 %266, label %281 [
    i8 10, label %274
    i8 0, label %271
  ]

271:                                              ; preds = %268
  %272 = zext i32 %270 to i64
  %273 = icmp eq i64 %261, %272
  br i1 %273, label %281, label %274

274:                                              ; preds = %271, %268
  %275 = sext i32 %270 to i64
  %276 = icmp sgt i64 %261, %275
  %277 = select i1 %276, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0)
  %278 = sub nsw i32 %269, %270
  %279 = getelementptr inbounds i8, i8* %253, i64 %275
  %280 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.240, i64 0, i64 0), i8* %277, i32 %278, i8* %279) #10
  br label %281

281:                                              ; preds = %274, %271, %268, %267, %267
  %282 = phi i32 [ %263, %267 ], [ 1, %274 ], [ 0, %271 ], [ %263, %267 ], [ 0, %268 ]
  %283 = phi i32 [ %262, %267 ], [ %270, %274 ], [ %270, %271 ], [ %262, %267 ], [ %270, %268 ]
  %284 = add nuw nsw i64 %261, 1
  %285 = icmp eq i64 %284, %259
  br i1 %285, label %286, label %260

286:                                              ; preds = %281, %248, %244, %234
  %287 = load i8*, i8** %237, align 8
  %288 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.93, i64 0, i64 0), i8* %287, i8* %287)
  %289 = load i8*, i8** %237, align 8
  %290 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.94, i64 0, i64 0), i8* %289, i8* %289)
  %291 = load %struct.description*, %struct.description** %241, align 8
  %292 = icmp eq %struct.description* %291, null
  br i1 %292, label %330, label %293

293:                                              ; preds = %286
  %294 = getelementptr inbounds %struct.description, %struct.description* %291, i64 0, i32 1
  %295 = load i8*, i8** %294, align 8
  %296 = icmp eq i8* %295, null
  br i1 %296, label %330, label %297

297:                                              ; preds = %293
  %298 = call i64 @strlen(i8* nonnull %295) #15
  %299 = trunc i64 %298 to i32
  %300 = icmp slt i32 %299, 0
  br i1 %300, label %330, label %301

301:                                              ; preds = %297
  %302 = add i64 %298, 1
  %303 = and i64 %302, 4294967295
  br label %304

304:                                              ; preds = %325, %301
  %305 = phi i64 [ 0, %301 ], [ %328, %325 ]
  %306 = phi i32 [ 0, %301 ], [ %327, %325 ]
  %307 = phi i32 [ 1, %301 ], [ %326, %325 ]
  %308 = icmp ne i32 %307, 0
  %309 = getelementptr inbounds i8, i8* %295, i64 %305
  %310 = load i8, i8* %309, align 1
  br i1 %308, label %311, label %312

311:                                              ; preds = %304
  switch i8 %310, label %312 [
    i8 32, label %325
    i8 9, label %325
  ]

312:                                              ; preds = %311, %304
  %313 = trunc i64 %305 to i32
  %314 = select i1 %308, i32 %313, i32 %306
  switch i8 %310, label %325 [
    i8 10, label %318
    i8 0, label %315
  ]

315:                                              ; preds = %312
  %316 = zext i32 %314 to i64
  %317 = icmp eq i64 %305, %316
  br i1 %317, label %325, label %318

318:                                              ; preds = %315, %312
  %319 = sext i32 %314 to i64
  %320 = icmp sgt i64 %305, %319
  %321 = select i1 %320, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0)
  %322 = sub nsw i32 %313, %314
  %323 = getelementptr inbounds i8, i8* %295, i64 %319
  %324 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.240, i64 0, i64 0), i8* %321, i32 %322, i8* %323) #10
  br label %325

325:                                              ; preds = %318, %315, %312, %311, %311
  %326 = phi i32 [ %307, %311 ], [ 1, %318 ], [ 0, %315 ], [ %307, %311 ], [ 0, %312 ]
  %327 = phi i32 [ %306, %311 ], [ %314, %318 ], [ %314, %315 ], [ %306, %311 ], [ %314, %312 ]
  %328 = add nuw nsw i64 %305, 1
  %329 = icmp eq i64 %328, %303
  br i1 %329, label %330, label %304

330:                                              ; preds = %325, %297, %293, %286
  %331 = call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.260, i64 0, i64 0))
  %332 = load i8*, i8** %237, align 8
  %333 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.96, i64 0, i64 0), i8* %332)
  %334 = getelementptr inbounds i8, i8* %235, i64 8
  %335 = bitcast i8* %334 to i8**
  %336 = load i8*, i8** %335, align 8
  %337 = bitcast i8* %336 to %struct.wl_list*
  %338 = icmp eq %struct.wl_list* %84, %337
  br i1 %338, label %339, label %234

339:                                              ; preds = %330, %228
  %340 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %341 = call i32 @putc(i32 10, %struct._IO_FILE* %340) #10
  %342 = load i8*, i8** %86, align 8
  %343 = bitcast i8* %342 to %struct.wl_list*
  %344 = icmp eq %struct.wl_list* %84, %343
  br i1 %344, label %1072, label %345

345:                                              ; preds = %339, %1069
  %346 = phi i8* [ %350, %1069 ], [ %342, %339 ]
  %347 = getelementptr inbounds i8, i8* %346, i64 -88
  %348 = getelementptr inbounds i8, i8* %346, i64 8
  %349 = bitcast i8* %348 to i8**
  %350 = load i8*, i8** %349, align 8
  %351 = bitcast i8* %347 to %struct.interface*
  %352 = getelementptr inbounds i8, i8* %346, i64 -16
  %353 = getelementptr inbounds i8, i8* %346, i64 -8
  %354 = bitcast i8* %353 to i8**
  %355 = load i8*, i8** %354, align 8
  %356 = icmp eq i8* %352, %355
  br i1 %356, label %537, label %357

357:                                              ; preds = %345
  %358 = getelementptr inbounds i8, i8* %346, i64 -64
  %359 = bitcast i8* %358 to i8**
  %360 = getelementptr inbounds i8, i8* %346, i64 -72
  %361 = bitcast i8* %360 to i8**
  br label %362

362:                                              ; preds = %529, %357
  %363 = phi i8* [ %355, %357 ], [ %535, %529 ]
  %364 = getelementptr inbounds i8, i8* %363, i64 -32
  %365 = getelementptr inbounds i8, i8* %363, i64 16
  %366 = bitcast i8* %365 to %struct.description**
  %367 = load %struct.description*, %struct.description** %366, align 8
  %368 = load i8*, i8** %359, align 8
  %369 = getelementptr inbounds i8, i8* %363, i64 -24
  %370 = bitcast i8* %369 to i8**
  %371 = load i8*, i8** %370, align 8
  %372 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.116, i64 0, i64 0), i8* %368, i8* %371) #10
  %373 = load i8*, i8** %359, align 8
  %374 = load i8*, i8** %370, align 8
  %375 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.117, i64 0, i64 0), i8* %373, i8* %374) #10
  %376 = icmp eq %struct.description* %367, null
  br i1 %376, label %454, label %377

377:                                              ; preds = %362
  %378 = call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.247, i64 0, i64 0)) #10
  %379 = load i8*, i8** %361, align 8
  %380 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.119, i64 0, i64 0), i8* %379) #10
  %381 = getelementptr inbounds %struct.description, %struct.description* %367, i64 0, i32 0
  %382 = load i8*, i8** %381, align 8
  %383 = call i64 @strlen(i8* %382) #15
  %384 = trunc i64 %383 to i32
  %385 = icmp slt i32 %384, 0
  br i1 %385, label %415, label %386

386:                                              ; preds = %377
  %387 = add i64 %383, 1
  %388 = and i64 %387, 4294967295
  br label %389

389:                                              ; preds = %410, %386
  %390 = phi i64 [ 0, %386 ], [ %413, %410 ]
  %391 = phi i32 [ 0, %386 ], [ %412, %410 ]
  %392 = phi i32 [ 1, %386 ], [ %411, %410 ]
  %393 = icmp ne i32 %392, 0
  %394 = getelementptr inbounds i8, i8* %382, i64 %390
  %395 = load i8, i8* %394, align 1
  br i1 %393, label %396, label %397

396:                                              ; preds = %389
  switch i8 %395, label %397 [
    i8 32, label %410
    i8 9, label %410
  ]

397:                                              ; preds = %396, %389
  %398 = trunc i64 %390 to i32
  %399 = select i1 %393, i32 %398, i32 %391
  switch i8 %395, label %410 [
    i8 10, label %403
    i8 0, label %400
  ]

400:                                              ; preds = %397
  %401 = zext i32 %399 to i64
  %402 = icmp eq i64 %390, %401
  br i1 %402, label %410, label %403

403:                                              ; preds = %400, %397
  %404 = sext i32 %399 to i64
  %405 = icmp sgt i64 %390, %404
  %406 = select i1 %405, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0)
  %407 = sub nsw i32 %398, %399
  %408 = getelementptr inbounds i8, i8* %382, i64 %404
  %409 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.240, i64 0, i64 0), i8* %406, i32 %407, i8* %408) #10
  br label %410

410:                                              ; preds = %403, %400, %397, %396, %396
  %411 = phi i32 [ %392, %396 ], [ 1, %403 ], [ 0, %400 ], [ %392, %396 ], [ 0, %397 ]
  %412 = phi i32 [ %391, %396 ], [ %399, %403 ], [ %399, %400 ], [ %391, %396 ], [ %399, %397 ]
  %413 = add nuw nsw i64 %390, 1
  %414 = icmp eq i64 %413, %388
  br i1 %414, label %415, label %389

415:                                              ; preds = %410, %377
  %416 = getelementptr inbounds %struct.description, %struct.description* %367, i64 0, i32 1
  %417 = load i8*, i8** %416, align 8
  %418 = icmp eq i8* %417, null
  br i1 %418, label %452, label %419

419:                                              ; preds = %415
  %420 = call i64 @strlen(i8* nonnull %417) #15
  %421 = trunc i64 %420 to i32
  %422 = icmp slt i32 %421, 0
  br i1 %422, label %452, label %423

423:                                              ; preds = %419
  %424 = add i64 %420, 1
  %425 = and i64 %424, 4294967295
  br label %426

426:                                              ; preds = %447, %423
  %427 = phi i64 [ 0, %423 ], [ %450, %447 ]
  %428 = phi i32 [ 0, %423 ], [ %449, %447 ]
  %429 = phi i32 [ 1, %423 ], [ %448, %447 ]
  %430 = icmp ne i32 %429, 0
  %431 = getelementptr inbounds i8, i8* %417, i64 %427
  %432 = load i8, i8* %431, align 1
  br i1 %430, label %433, label %434

433:                                              ; preds = %426
  switch i8 %432, label %434 [
    i8 32, label %447
    i8 9, label %447
  ]

434:                                              ; preds = %433, %426
  %435 = trunc i64 %427 to i32
  %436 = select i1 %430, i32 %435, i32 %428
  switch i8 %432, label %447 [
    i8 10, label %440
    i8 0, label %437
  ]

437:                                              ; preds = %434
  %438 = zext i32 %436 to i64
  %439 = icmp eq i64 %427, %438
  br i1 %439, label %447, label %440

440:                                              ; preds = %437, %434
  %441 = sext i32 %436 to i64
  %442 = icmp sgt i64 %427, %441
  %443 = select i1 %442, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0)
  %444 = sub nsw i32 %435, %436
  %445 = getelementptr inbounds i8, i8* %417, i64 %441
  %446 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.240, i64 0, i64 0), i8* %443, i32 %444, i8* %445) #10
  br label %447

447:                                              ; preds = %440, %437, %434, %433, %433
  %448 = phi i32 [ %429, %433 ], [ 1, %440 ], [ 0, %437 ], [ %429, %433 ], [ 0, %434 ]
  %449 = phi i32 [ %428, %433 ], [ %436, %440 ], [ %436, %437 ], [ %428, %433 ], [ %436, %434 ]
  %450 = add nuw nsw i64 %427, 1
  %451 = icmp eq i64 %450, %425
  br i1 %451, label %452, label %426

452:                                              ; preds = %447, %419, %415
  %453 = call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.260, i64 0, i64 0)) #10
  br label %454

454:                                              ; preds = %452, %362
  %455 = load i8*, i8** %361, align 8
  %456 = bitcast i8* %364 to i8**
  %457 = load i8*, i8** %456, align 8
  %458 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.120, i64 0, i64 0), i8* %455, i8* %457) #10
  %459 = getelementptr inbounds i8, i8* %363, i64 -16
  %460 = getelementptr inbounds i8, i8* %363, i64 -8
  %461 = bitcast i8* %460 to i8**
  %462 = load i8*, i8** %461, align 8
  %463 = icmp eq i8* %462, %459
  br i1 %463, label %504, label %464

464:                                              ; preds = %454, %490
  %465 = phi i8* [ %502, %490 ], [ %462, %454 ]
  %466 = getelementptr inbounds i8, i8* %465, i64 -16
  %467 = bitcast i8* %466 to i8**
  %468 = load i8*, i8** %467, align 8
  %469 = icmp eq i8* %468, null
  br i1 %469, label %470, label %475

470:                                              ; preds = %464
  %471 = getelementptr inbounds i8, i8* %465, i64 -8
  %472 = bitcast i8* %471 to i32*
  %473 = load i32, i32* %472, align 8
  %474 = icmp sgt i32 %473, 1
  br i1 %474, label %475, label %490

475:                                              ; preds = %470, %464
  %476 = call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.250, i64 0, i64 0)) #10
  %477 = load i8*, i8** %467, align 8
  %478 = icmp eq i8* %477, null
  br i1 %478, label %481, label %479

479:                                              ; preds = %475
  %480 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.122, i64 0, i64 0), i8* nonnull %477) #10
  br label %481

481:                                              ; preds = %479, %475
  %482 = getelementptr inbounds i8, i8* %465, i64 -8
  %483 = bitcast i8* %482 to i32*
  %484 = load i32, i32* %483, align 8
  %485 = icmp sgt i32 %484, 1
  br i1 %485, label %486, label %488

486:                                              ; preds = %481
  %487 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i64 0, i64 0), i32 %484) #10
  br label %488

488:                                              ; preds = %486, %481
  %489 = call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.251, i64 0, i64 0)) #10
  br label %490

490:                                              ; preds = %488, %470
  %491 = load i8*, i8** %359, align 8
  %492 = load i8*, i8** %370, align 8
  %493 = getelementptr inbounds i8, i8* %465, i64 -32
  %494 = bitcast i8* %493 to i8**
  %495 = load i8*, i8** %494, align 8
  %496 = getelementptr inbounds i8, i8* %465, i64 -24
  %497 = bitcast i8* %496 to i8**
  %498 = load i8*, i8** %497, align 8
  %499 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.125, i64 0, i64 0), i8* %491, i8* %492, i8* %495, i8* %498) #10
  %500 = getelementptr inbounds i8, i8* %465, i64 8
  %501 = bitcast i8* %500 to i8**
  %502 = load i8*, i8** %501, align 8
  %503 = icmp eq i8* %502, %459
  br i1 %503, label %504, label %464

504:                                              ; preds = %490, %454
  %505 = call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.242, i64 0, i64 0)) #10
  %506 = load i8*, i8** %461, align 8
  %507 = icmp eq i8* %506, %459
  br i1 %507, label %529, label %508

508:                                              ; preds = %504, %524
  %509 = phi i8* [ %527, %524 ], [ %506, %504 ]
  %510 = getelementptr inbounds i8, i8* %509, i64 -8
  %511 = bitcast i8* %510 to i32*
  %512 = load i32, i32* %511, align 8
  %513 = icmp eq i32 %512, 1
  br i1 %513, label %524, label %514

514:                                              ; preds = %508
  %515 = load i8*, i8** %361, align 8
  %516 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.127, i64 0, i64 0), i8* %515) #10
  %517 = load i8*, i8** %359, align 8
  %518 = load i8*, i8** %370, align 8
  %519 = getelementptr inbounds i8, i8* %509, i64 -32
  %520 = bitcast i8* %519 to i8**
  %521 = load i8*, i8** %520, align 8
  %522 = load i32, i32* %511, align 8
  %523 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.128, i64 0, i64 0), i8* %517, i8* %518, i8* %521, i32 %522) #10
  br label %524

524:                                              ; preds = %514, %508
  %525 = getelementptr inbounds i8, i8* %509, i64 8
  %526 = bitcast i8* %525 to i8**
  %527 = load i8*, i8** %526, align 8
  %528 = icmp eq i8* %527, %459
  br i1 %528, label %529, label %508

529:                                              ; preds = %524, %504
  %530 = load i8*, i8** %359, align 8
  %531 = load i8*, i8** %370, align 8
  %532 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.129, i64 0, i64 0), i8* %530, i8* %531) #10
  %533 = getelementptr inbounds i8, i8* %363, i64 8
  %534 = bitcast i8* %533 to i8**
  %535 = load i8*, i8** %534, align 8
  %536 = icmp eq i8* %352, %535
  br i1 %536, label %537, label %362

537:                                              ; preds = %529, %345
  br i1 %7, label %538, label %719

538:                                              ; preds = %537
  %539 = getelementptr inbounds i8, i8* %346, i64 -48
  %540 = bitcast i8* %539 to %struct.wl_list*
  call fastcc void @emit_structs(%struct.wl_list* %540, %struct.interface* %351, i32 1)
  %541 = getelementptr inbounds i8, i8* %346, i64 -32
  %542 = bitcast i8* %541 to %struct.wl_list*
  %543 = call i32 @wl_list_empty(%struct.wl_list* %542) #10
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %545, label %569

545:                                              ; preds = %538
  %546 = getelementptr inbounds i8, i8* %346, i64 -24
  %547 = bitcast i8* %546 to i8**
  %548 = load i8*, i8** %547, align 8
  %549 = icmp eq i8* %548, %541
  br i1 %549, label %566, label %550

550:                                              ; preds = %545
  %551 = getelementptr inbounds i8, i8* %346, i64 -64
  %552 = bitcast i8* %551 to i8**
  br label %553

553:                                              ; preds = %553, %550
  %554 = phi i8* [ %548, %550 ], [ %564, %553 ]
  %555 = phi i32 [ 0, %550 ], [ %560, %553 ]
  %556 = load i8*, i8** %552, align 8
  %557 = getelementptr inbounds i8, i8* %554, i64 -24
  %558 = bitcast i8* %557 to i8**
  %559 = load i8*, i8** %558, align 8
  %560 = add nuw nsw i32 %555, 1
  %561 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.167, i64 0, i64 0), i8* %556, i8* %559, i32 %555) #10
  %562 = getelementptr inbounds i8, i8* %554, i64 8
  %563 = bitcast i8* %562 to i8**
  %564 = load i8*, i8** %563, align 8
  %565 = icmp eq i8* %564, %541
  br i1 %565, label %566, label %553

566:                                              ; preds = %553, %545
  %567 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %568 = call i32 @putc(i32 10, %struct._IO_FILE* %567) #10
  br label %569

569:                                              ; preds = %538, %566
  %570 = getelementptr inbounds i8, i8* %346, i64 -24
  %571 = bitcast i8* %570 to i8**
  %572 = load i8*, i8** %571, align 8
  %573 = icmp eq i8* %572, %541
  br i1 %573, label %595, label %574

574:                                              ; preds = %569
  %575 = getelementptr inbounds i8, i8* %346, i64 -72
  %576 = bitcast i8* %575 to i8**
  %577 = getelementptr inbounds i8, i8* %346, i64 -64
  %578 = bitcast i8* %577 to i8**
  br label %579

579:                                              ; preds = %579, %574
  %580 = phi i8* [ %572, %574 ], [ %593, %579 ]
  %581 = load i8*, i8** %576, align 8
  %582 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.127, i64 0, i64 0), i8* %581) #10
  %583 = load i8*, i8** %578, align 8
  %584 = getelementptr inbounds i8, i8* %580, i64 -24
  %585 = bitcast i8* %584 to i8**
  %586 = load i8*, i8** %585, align 8
  %587 = getelementptr inbounds i8, i8* %580, i64 36
  %588 = bitcast i8* %587 to i32*
  %589 = load i32, i32* %588, align 4
  %590 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.168, i64 0, i64 0), i8* %583, i8* %586, i32 %589) #10
  %591 = getelementptr inbounds i8, i8* %580, i64 8
  %592 = bitcast i8* %591 to i8**
  %593 = load i8*, i8** %592, align 8
  %594 = icmp eq i8* %593, %541
  br i1 %594, label %595, label %579

595:                                              ; preds = %579, %569
  %596 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %597 = call i32 @putc(i32 10, %struct._IO_FILE* %596) #10
  %598 = getelementptr inbounds i8, i8* %346, i64 -40
  %599 = bitcast i8* %598 to i8**
  %600 = load i8*, i8** %599, align 8
  %601 = icmp eq i8* %600, %539
  br i1 %601, label %623, label %602

602:                                              ; preds = %595
  %603 = getelementptr inbounds i8, i8* %346, i64 -72
  %604 = bitcast i8* %603 to i8**
  %605 = getelementptr inbounds i8, i8* %346, i64 -64
  %606 = bitcast i8* %605 to i8**
  br label %607

607:                                              ; preds = %607, %602
  %608 = phi i8* [ %600, %602 ], [ %621, %607 ]
  %609 = load i8*, i8** %604, align 8
  %610 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.127, i64 0, i64 0), i8* %609) #10
  %611 = load i8*, i8** %606, align 8
  %612 = getelementptr inbounds i8, i8* %608, i64 -24
  %613 = bitcast i8* %612 to i8**
  %614 = load i8*, i8** %613, align 8
  %615 = getelementptr inbounds i8, i8* %608, i64 36
  %616 = bitcast i8* %615 to i32*
  %617 = load i32, i32* %616, align 4
  %618 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.168, i64 0, i64 0), i8* %611, i8* %614, i32 %617) #10
  %619 = getelementptr inbounds i8, i8* %608, i64 8
  %620 = bitcast i8* %619 to i8**
  %621 = load i8*, i8** %620, align 8
  %622 = icmp eq i8* %621, %539
  br i1 %622, label %623, label %607

623:                                              ; preds = %607, %595
  %624 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %625 = call i32 @putc(i32 10, %struct._IO_FILE* %624) #10
  %626 = getelementptr inbounds i8, i8* %346, i64 -72
  %627 = bitcast i8* %626 to i8**
  %628 = load i8*, i8** %627, align 8
  %629 = call i32 @strcmp(i8* %628, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.169, i64 0, i64 0)) #15
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %1069, label %631

631:                                              ; preds = %623
  %632 = load i8*, i8** %571, align 8
  %633 = icmp eq i8* %632, %541
  br i1 %633, label %1069, label %634

634:                                              ; preds = %631
  %635 = getelementptr inbounds i8, i8* %346, i64 -64
  %636 = bitcast i8* %635 to i8**
  br label %637

637:                                              ; preds = %717, %634
  %638 = phi i8* [ %628, %634 ], [ %718, %717 ]
  %639 = phi i8* [ %632, %634 ], [ %715, %717 ]
  %640 = getelementptr inbounds i8, i8* %639, i64 -32
  %641 = bitcast i8* %640 to i8**
  %642 = load i8*, i8** %641, align 8
  %643 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.170, i64 0, i64 0), i8* %638, i8* %642) #10
  %644 = call i32 @puts(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @str.256, i64 0, i64 0)) #10
  %645 = getelementptr inbounds i8, i8* %639, i64 -16
  %646 = getelementptr inbounds i8, i8* %639, i64 -8
  %647 = bitcast i8* %646 to i8**
  %648 = load i8*, i8** %647, align 8
  %649 = icmp eq i8* %648, %645
  br i1 %649, label %666, label %650

650:                                              ; preds = %637, %661
  %651 = phi i8* [ %664, %661 ], [ %648, %637 ]
  %652 = getelementptr inbounds i8, i8* %651, i64 16
  %653 = bitcast i8* %652 to i8**
  %654 = load i8*, i8** %653, align 8
  %655 = icmp eq i8* %654, null
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = getelementptr inbounds i8, i8* %651, i64 -24
  %658 = bitcast i8* %657 to i8**
  %659 = load i8*, i8** %658, align 8
  %660 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.172, i64 0, i64 0), i8* %659, i8* nonnull %654) #10
  br label %661

661:                                              ; preds = %656, %650
  %662 = getelementptr inbounds i8, i8* %651, i64 8
  %663 = bitcast i8* %662 to i8**
  %664 = load i8*, i8** %663, align 8
  %665 = icmp eq i8* %664, %645
  br i1 %665, label %666, label %650

666:                                              ; preds = %661, %637
  %667 = call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.260, i64 0, i64 0)) #10
  %668 = load i8*, i8** %627, align 8
  %669 = load i8*, i8** %641, align 8
  %670 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.173, i64 0, i64 0), i8* %668, i8* %669) #10
  %671 = load i8*, i8** %647, align 8
  %672 = icmp eq i8* %671, %645
  br i1 %672, label %692, label %673

673:                                              ; preds = %666, %684
  %674 = phi i8* [ %690, %684 ], [ %671, %666 ]
  %675 = getelementptr inbounds i8, i8* %674, i64 -24
  %676 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0)) #10
  %677 = getelementptr inbounds i8, i8* %674, i64 -16
  %678 = bitcast i8* %677 to i32*
  %679 = load i32, i32* %678, align 8
  switch i32 %679, label %682 [
    i32 0, label %680
    i32 5, label %680
  ]

680:                                              ; preds = %673, %673
  %681 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.142, i64 0, i64 0)) #10
  br label %684

682:                                              ; preds = %673
  %683 = bitcast i8* %675 to %struct.arg*
  call fastcc void @emit_type(%struct.arg* %683) #10
  br label %684

684:                                              ; preds = %682, %680
  %685 = bitcast i8* %675 to i8**
  %686 = load i8*, i8** %685, align 8
  %687 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i8* %686) #10
  %688 = getelementptr inbounds i8, i8* %674, i64 8
  %689 = bitcast i8* %688 to i8**
  %690 = load i8*, i8** %689, align 8
  %691 = icmp eq i8* %690, %645
  br i1 %691, label %692, label %673

692:                                              ; preds = %684, %666
  %693 = load i8*, i8** %636, align 8
  %694 = getelementptr inbounds i8, i8* %639, i64 -24
  %695 = bitcast i8* %694 to i8**
  %696 = load i8*, i8** %695, align 8
  %697 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.175, i64 0, i64 0), i8* %693, i8* %696) #10
  %698 = load i8*, i8** %647, align 8
  %699 = icmp eq i8* %698, %645
  br i1 %699, label %710, label %700

700:                                              ; preds = %692, %700
  %701 = phi i8* [ %708, %700 ], [ %698, %692 ]
  %702 = getelementptr inbounds i8, i8* %701, i64 -24
  %703 = bitcast i8* %702 to i8**
  %704 = load i8*, i8** %703, align 8
  %705 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.176, i64 0, i64 0), i8* %704) #10
  %706 = getelementptr inbounds i8, i8* %701, i64 8
  %707 = bitcast i8* %706 to i8**
  %708 = load i8*, i8** %707, align 8
  %709 = icmp eq i8* %708, %645
  br i1 %709, label %710, label %700

710:                                              ; preds = %700, %692
  %711 = call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.263, i64 0, i64 0)) #10
  %712 = call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.264, i64 0, i64 0)) #10
  %713 = getelementptr inbounds i8, i8* %639, i64 8
  %714 = bitcast i8* %713 to i8**
  %715 = load i8*, i8** %714, align 8
  %716 = icmp eq i8* %715, %541
  br i1 %716, label %1069, label %717

717:                                              ; preds = %710
  %718 = load i8*, i8** %627, align 8
  br label %637

719:                                              ; preds = %537
  %720 = getelementptr inbounds i8, i8* %346, i64 -32
  %721 = bitcast i8* %720 to %struct.wl_list*
  call fastcc void @emit_structs(%struct.wl_list* %721, %struct.interface* %351, i32 %1)
  %722 = getelementptr inbounds i8, i8* %346, i64 -48
  %723 = bitcast i8* %722 to %struct.wl_list*
  %724 = call i32 @wl_list_empty(%struct.wl_list* %723) #10
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %750

726:                                              ; preds = %719
  %727 = getelementptr inbounds i8, i8* %346, i64 -40
  %728 = bitcast i8* %727 to i8**
  %729 = load i8*, i8** %728, align 8
  %730 = icmp eq i8* %729, %722
  br i1 %730, label %747, label %731

731:                                              ; preds = %726
  %732 = getelementptr inbounds i8, i8* %346, i64 -64
  %733 = bitcast i8* %732 to i8**
  br label %734

734:                                              ; preds = %734, %731
  %735 = phi i8* [ %729, %731 ], [ %745, %734 ]
  %736 = phi i32 [ 0, %731 ], [ %741, %734 ]
  %737 = load i8*, i8** %733, align 8
  %738 = getelementptr inbounds i8, i8* %735, i64 -24
  %739 = bitcast i8* %738 to i8**
  %740 = load i8*, i8** %739, align 8
  %741 = add nuw nsw i32 %736, 1
  %742 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.167, i64 0, i64 0), i8* %737, i8* %740, i32 %736) #10
  %743 = getelementptr inbounds i8, i8* %735, i64 8
  %744 = bitcast i8* %743 to i8**
  %745 = load i8*, i8** %744, align 8
  %746 = icmp eq i8* %745, %722
  br i1 %746, label %747, label %734

747:                                              ; preds = %734, %726
  %748 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %749 = call i32 @putc(i32 10, %struct._IO_FILE* %748) #10
  br label %750

750:                                              ; preds = %719, %747
  %751 = getelementptr inbounds i8, i8* %346, i64 -24
  %752 = bitcast i8* %751 to i8**
  %753 = load i8*, i8** %752, align 8
  %754 = icmp eq i8* %753, %720
  br i1 %754, label %776, label %755

755:                                              ; preds = %750
  %756 = getelementptr inbounds i8, i8* %346, i64 -72
  %757 = bitcast i8* %756 to i8**
  %758 = getelementptr inbounds i8, i8* %346, i64 -64
  %759 = bitcast i8* %758 to i8**
  br label %760

760:                                              ; preds = %760, %755
  %761 = phi i8* [ %753, %755 ], [ %774, %760 ]
  %762 = load i8*, i8** %757, align 8
  %763 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.127, i64 0, i64 0), i8* %762) #10
  %764 = load i8*, i8** %759, align 8
  %765 = getelementptr inbounds i8, i8* %761, i64 -24
  %766 = bitcast i8* %765 to i8**
  %767 = load i8*, i8** %766, align 8
  %768 = getelementptr inbounds i8, i8* %761, i64 36
  %769 = bitcast i8* %768 to i32*
  %770 = load i32, i32* %769, align 4
  %771 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.168, i64 0, i64 0), i8* %764, i8* %767, i32 %770) #10
  %772 = getelementptr inbounds i8, i8* %761, i64 8
  %773 = bitcast i8* %772 to i8**
  %774 = load i8*, i8** %773, align 8
  %775 = icmp eq i8* %774, %720
  br i1 %775, label %776, label %760

776:                                              ; preds = %760, %750
  %777 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %778 = call i32 @putc(i32 10, %struct._IO_FILE* %777) #10
  %779 = getelementptr inbounds i8, i8* %346, i64 -40
  %780 = bitcast i8* %779 to i8**
  %781 = load i8*, i8** %780, align 8
  %782 = icmp eq i8* %781, %722
  br i1 %782, label %804, label %783

783:                                              ; preds = %776
  %784 = getelementptr inbounds i8, i8* %346, i64 -72
  %785 = bitcast i8* %784 to i8**
  %786 = getelementptr inbounds i8, i8* %346, i64 -64
  %787 = bitcast i8* %786 to i8**
  br label %788

788:                                              ; preds = %788, %783
  %789 = phi i8* [ %781, %783 ], [ %802, %788 ]
  %790 = load i8*, i8** %785, align 8
  %791 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.127, i64 0, i64 0), i8* %790) #10
  %792 = load i8*, i8** %787, align 8
  %793 = getelementptr inbounds i8, i8* %789, i64 -24
  %794 = bitcast i8* %793 to i8**
  %795 = load i8*, i8** %794, align 8
  %796 = getelementptr inbounds i8, i8* %789, i64 36
  %797 = bitcast i8* %796 to i32*
  %798 = load i32, i32* %797, align 4
  %799 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.168, i64 0, i64 0), i8* %792, i8* %795, i32 %798) #10
  %800 = getelementptr inbounds i8, i8* %789, i64 8
  %801 = bitcast i8* %800 to i8**
  %802 = load i8*, i8** %801, align 8
  %803 = icmp eq i8* %802, %722
  br i1 %803, label %804, label %788

804:                                              ; preds = %788, %776
  %805 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %806 = call i32 @putc(i32 10, %struct._IO_FILE* %805) #10
  %807 = getelementptr inbounds i8, i8* %346, i64 -72
  %808 = bitcast i8* %807 to i8**
  %809 = load i8*, i8** %808, align 8
  %810 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.178, i64 0, i64 0), i8* %809) #10
  %811 = load i8*, i8** %808, align 8
  %812 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.179, i64 0, i64 0), i8* %811, i8* %811, i8* %811, i8* %811) #10
  %813 = load i8*, i8** %808, align 8
  %814 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.178, i64 0, i64 0), i8* %813) #10
  %815 = load i8*, i8** %808, align 8
  %816 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.180, i64 0, i64 0), i8* %815, i8* %815, i8* %815, i8* %815) #10
  %817 = load i8*, i8** %808, align 8
  %818 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.181, i64 0, i64 0), i8* %817, i8* %817, i8* %817, i8* %817) #10
  %819 = load i8*, i8** %780, align 8
  %820 = icmp eq i8* %819, %722
  br i1 %820, label %849, label %821

821:                                              ; preds = %804, %821
  %822 = phi i8* [ %838, %821 ], [ %819, %804 ]
  %823 = phi i32 [ %835, %821 ], [ 0, %804 ]
  %824 = phi i32 [ %829, %821 ], [ 0, %804 ]
  %825 = getelementptr inbounds i8, i8* %822, i64 32
  %826 = bitcast i8* %825 to i32*
  %827 = load i32, i32* %826, align 8
  %828 = icmp eq i32 %827, 0
  %829 = select i1 %828, i32 %824, i32 1
  %830 = getelementptr inbounds i8, i8* %822, i64 -32
  %831 = bitcast i8* %830 to i8**
  %832 = load i8*, i8** %831, align 8
  %833 = call i32 @strcmp(i8* %832, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i64 0, i64 0)) #15
  %834 = icmp eq i32 %833, 0
  %835 = select i1 %834, i32 1, i32 %823
  %836 = getelementptr inbounds i8, i8* %822, i64 8
  %837 = bitcast i8* %836 to i8**
  %838 = load i8*, i8** %837, align 8
  %839 = icmp eq i8* %838, %722
  br i1 %839, label %840, label %821

840:                                              ; preds = %821
  %841 = icmp eq i32 %829, 0
  %842 = icmp ne i32 %835, 0
  %843 = and i1 %841, %842
  br i1 %843, label %844, label %848

844:                                              ; preds = %840
  %845 = bitcast i8* %807 to i8**
  %846 = bitcast i8* %347 to %struct.location*
  %847 = load i8*, i8** %845, align 8
  call void (%struct.location*, i8*, ...) @fail(%struct.location* %846, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.182, i64 0, i64 0), i8* %847) #18
  unreachable

848:                                              ; preds = %840
  br i1 %842, label %857, label %849

849:                                              ; preds = %848, %804
  %850 = load i8*, i8** %808, align 8
  %851 = call i32 @strcmp(i8* %850, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.169, i64 0, i64 0)) #15
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %857, label %853

853:                                              ; preds = %849
  %854 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.178, i64 0, i64 0), i8* %850) #10
  %855 = load i8*, i8** %808, align 8
  %856 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.183, i64 0, i64 0), i8* %855, i8* %855, i8* %855, i8* %855) #10
  br label %857

857:                                              ; preds = %853, %849, %848
  %858 = call i32 @wl_list_empty(%struct.wl_list* %723) #10
  %859 = icmp eq i32 %858, 0
  br i1 %859, label %860, label %1069

860:                                              ; preds = %857
  %861 = load i8*, i8** %780, align 8
  %862 = icmp eq i8* %861, %722
  br i1 %862, label %1069, label %863

863:                                              ; preds = %860
  %864 = getelementptr inbounds i8, i8* %346, i64 -64
  %865 = bitcast i8* %864 to i8**
  br label %866

866:                                              ; preds = %1064, %863
  %867 = phi i8* [ %861, %863 ], [ %1067, %1064 ]
  %868 = getelementptr inbounds i8, i8* %867, i64 20
  %869 = bitcast i8* %868 to i32*
  %870 = load i32, i32* %869, align 4
  %871 = icmp sgt i32 %870, 1
  br i1 %871, label %872, label %879

872:                                              ; preds = %866
  %873 = getelementptr inbounds i8, i8* %867, i64 -48
  %874 = bitcast i8* %873 to %struct.location*
  %875 = load i8*, i8** %808, align 8
  %876 = getelementptr inbounds i8, i8* %867, i64 -32
  %877 = bitcast i8* %876 to i8**
  %878 = load i8*, i8** %877, align 8
  call void (%struct.location*, i8*, ...) @warn(%struct.location* %874, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.184, i64 0, i64 0), i8* %875, i8* %878) #10
  br label %1064

879:                                              ; preds = %866
  %880 = getelementptr inbounds i8, i8* %867, i64 -16
  %881 = getelementptr inbounds i8, i8* %867, i64 -8
  %882 = bitcast i8* %881 to i8**
  %883 = load i8*, i8** %882, align 8
  %884 = icmp eq i8* %883, %880
  br i1 %884, label %899, label %885

885:                                              ; preds = %879, %885
  %886 = phi i8* [ %897, %885 ], [ %883, %879 ]
  %887 = phi %struct.arg* [ %894, %885 ], [ null, %879 ]
  %888 = getelementptr inbounds i8, i8* %886, i64 -24
  %889 = bitcast i8* %888 to %struct.arg*
  %890 = getelementptr inbounds i8, i8* %886, i64 -16
  %891 = bitcast i8* %890 to i32*
  %892 = load i32, i32* %891, align 8
  %893 = icmp eq i32 %892, 0
  %894 = select i1 %893, %struct.arg* %889, %struct.arg* %887
  %895 = getelementptr inbounds i8, i8* %886, i64 8
  %896 = bitcast i8* %895 to i8**
  %897 = load i8*, i8** %896, align 8
  %898 = icmp eq i8* %897, %880
  br i1 %898, label %899, label %885

899:                                              ; preds = %885, %879
  %900 = phi %struct.arg* [ null, %879 ], [ %894, %885 ]
  %901 = load i8*, i8** %808, align 8
  %902 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.185, i64 0, i64 0), i8* %901) #10
  %903 = getelementptr inbounds i8, i8* %867, i64 40
  %904 = bitcast i8* %903 to %struct.description**
  %905 = load %struct.description*, %struct.description** %904, align 8
  %906 = icmp eq %struct.description* %905, null
  br i1 %906, label %944, label %907

907:                                              ; preds = %899
  %908 = getelementptr inbounds %struct.description, %struct.description* %905, i64 0, i32 1
  %909 = load i8*, i8** %908, align 8
  %910 = icmp eq i8* %909, null
  br i1 %910, label %944, label %911

911:                                              ; preds = %907
  %912 = call i64 @strlen(i8* nonnull %909) #15
  %913 = trunc i64 %912 to i32
  %914 = icmp slt i32 %913, 0
  br i1 %914, label %944, label %915

915:                                              ; preds = %911
  %916 = add i64 %912, 1
  %917 = and i64 %916, 4294967295
  br label %918

918:                                              ; preds = %939, %915
  %919 = phi i64 [ 0, %915 ], [ %942, %939 ]
  %920 = phi i32 [ 0, %915 ], [ %941, %939 ]
  %921 = phi i32 [ 1, %915 ], [ %940, %939 ]
  %922 = icmp ne i32 %921, 0
  %923 = getelementptr inbounds i8, i8* %909, i64 %919
  %924 = load i8, i8* %923, align 1
  br i1 %922, label %925, label %926

925:                                              ; preds = %918
  switch i8 %924, label %926 [
    i8 32, label %939
    i8 9, label %939
  ]

926:                                              ; preds = %925, %918
  %927 = trunc i64 %919 to i32
  %928 = select i1 %922, i32 %927, i32 %920
  switch i8 %924, label %939 [
    i8 10, label %932
    i8 0, label %929
  ]

929:                                              ; preds = %926
  %930 = zext i32 %928 to i64
  %931 = icmp eq i64 %919, %930
  br i1 %931, label %939, label %932

932:                                              ; preds = %929, %926
  %933 = sext i32 %928 to i64
  %934 = icmp sgt i64 %919, %933
  %935 = select i1 %934, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0)
  %936 = sub nsw i32 %927, %928
  %937 = getelementptr inbounds i8, i8* %909, i64 %933
  %938 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.240, i64 0, i64 0), i8* %935, i32 %936, i8* %937) #10
  br label %939

939:                                              ; preds = %932, %929, %926, %925, %925
  %940 = phi i32 [ %921, %925 ], [ 1, %932 ], [ 0, %929 ], [ %921, %925 ], [ 0, %926 ]
  %941 = phi i32 [ %920, %925 ], [ %928, %932 ], [ %928, %929 ], [ %920, %925 ], [ %928, %926 ]
  %942 = add nuw nsw i64 %919, 1
  %943 = icmp eq i64 %942, %917
  br i1 %943, label %944, label %918

944:                                              ; preds = %939, %911, %907, %899
  %945 = call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.260, i64 0, i64 0)) #10
  %946 = icmp ne %struct.arg* %900, null
  br i1 %946, label %947, label %955

947:                                              ; preds = %944
  %948 = getelementptr inbounds %struct.arg, %struct.arg* %900, i64 0, i32 3
  %949 = load i8*, i8** %948, align 8
  %950 = icmp eq i8* %949, null
  br i1 %950, label %951, label %953

951:                                              ; preds = %947
  %952 = call i32 @puts(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @str.265, i64 0, i64 0)) #10
  br label %957

953:                                              ; preds = %947
  %954 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.187, i64 0, i64 0), i8* nonnull %949) #10
  br label %957

955:                                              ; preds = %944
  %956 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @str.261, i64 0, i64 0)) #10
  br label %957

957:                                              ; preds = %955, %953, %951
  %958 = load i8*, i8** %808, align 8
  %959 = getelementptr inbounds i8, i8* %867, i64 -32
  %960 = bitcast i8* %959 to i8**
  %961 = load i8*, i8** %960, align 8
  %962 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.189, i64 0, i64 0), i8* %958, i8* %961, i8* %958, i8* %958) #10
  %963 = load i8*, i8** %882, align 8
  %964 = icmp eq i8* %963, %880
  br i1 %964, label %990, label %965

965:                                              ; preds = %957, %985
  %966 = phi i8* [ %988, %985 ], [ %963, %957 ]
  %967 = getelementptr inbounds i8, i8* %966, i64 -24
  %968 = getelementptr inbounds i8, i8* %966, i64 -16
  %969 = bitcast i8* %968 to i32*
  %970 = load i32, i32* %969, align 8
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %979

972:                                              ; preds = %965
  %973 = getelementptr inbounds i8, i8* %966, i64 -8
  %974 = bitcast i8* %973 to i8**
  %975 = load i8*, i8** %974, align 8
  %976 = icmp eq i8* %975, null
  br i1 %976, label %977, label %985

977:                                              ; preds = %972
  %978 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.190, i64 0, i64 0)) #10
  br label %985

979:                                              ; preds = %965
  %980 = bitcast i8* %967 to %struct.arg*
  %981 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.174, i64 0, i64 0)) #10
  call fastcc void @emit_type(%struct.arg* %980) #10
  %982 = bitcast i8* %967 to i8**
  %983 = load i8*, i8** %982, align 8
  %984 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i8* %983) #10
  br label %985

985:                                              ; preds = %979, %977, %972
  %986 = getelementptr inbounds i8, i8* %966, i64 8
  %987 = bitcast i8* %986 to i8**
  %988 = load i8*, i8** %987, align 8
  %989 = icmp eq i8* %988, %880
  br i1 %989, label %990, label %965

990:                                              ; preds = %985, %957
  %991 = call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.262, i64 0, i64 0)) #10
  br i1 %946, label %992, label %1007

992:                                              ; preds = %990
  %993 = getelementptr inbounds %struct.arg, %struct.arg* %900, i64 0, i32 3
  %994 = load i8*, i8** %993, align 8
  %995 = icmp eq i8* %994, null
  %996 = getelementptr inbounds %struct.arg, %struct.arg* %900, i64 0, i32 0
  %997 = load i8*, i8** %996, align 8
  %998 = load i8*, i8** %808, align 8
  %999 = load i8*, i8** %865, align 8
  %1000 = getelementptr inbounds i8, i8* %867, i64 -24
  %1001 = bitcast i8* %1000 to i8**
  %1002 = load i8*, i8** %1001, align 8
  br i1 %995, label %1003, label %1005

1003:                                             ; preds = %992
  %1004 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.192, i64 0, i64 0), i8* %997, i8* %997, i8* %998, i8* %999, i8* %1002) #10
  br label %1014

1005:                                             ; preds = %992
  %1006 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.193, i64 0, i64 0), i8* %997, i8* %997, i8* %998, i8* %999, i8* %1002, i8* nonnull %994) #10
  br label %1014

1007:                                             ; preds = %990
  %1008 = load i8*, i8** %808, align 8
  %1009 = load i8*, i8** %865, align 8
  %1010 = getelementptr inbounds i8, i8* %867, i64 -24
  %1011 = bitcast i8* %1010 to i8**
  %1012 = load i8*, i8** %1011, align 8
  %1013 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.194, i64 0, i64 0), i8* %1008, i8* %1009, i8* %1012) #10
  br label %1014

1014:                                             ; preds = %1007, %1005, %1003
  %1015 = load i8*, i8** %882, align 8
  %1016 = icmp eq i8* %1015, %880
  br i1 %1016, label %1042, label %1017

1017:                                             ; preds = %1014, %1037
  %1018 = phi i8* [ %1040, %1037 ], [ %1015, %1014 ]
  %1019 = getelementptr inbounds i8, i8* %1018, i64 -16
  %1020 = bitcast i8* %1019 to i32*
  %1021 = load i32, i32* %1020, align 8
  %1022 = icmp eq i32 %1021, 0
  br i1 %1022, label %1023, label %1032

1023:                                             ; preds = %1017
  %1024 = getelementptr inbounds i8, i8* %1018, i64 -8
  %1025 = bitcast i8* %1024 to i8**
  %1026 = load i8*, i8** %1025, align 8
  %1027 = icmp eq i8* %1026, null
  br i1 %1027, label %1028, label %1030

1028:                                             ; preds = %1023
  %1029 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.195, i64 0, i64 0)) #10
  br label %1030

1030:                                             ; preds = %1028, %1023
  %1031 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.196, i64 0, i64 0)) #10
  br label %1037

1032:                                             ; preds = %1017
  %1033 = getelementptr inbounds i8, i8* %1018, i64 -24
  %1034 = bitcast i8* %1033 to i8**
  %1035 = load i8*, i8** %1034, align 8
  %1036 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.176, i64 0, i64 0), i8* %1035) #10
  br label %1037

1037:                                             ; preds = %1032, %1030
  %1038 = getelementptr inbounds i8, i8* %1018, i64 8
  %1039 = bitcast i8* %1038 to i8**
  %1040 = load i8*, i8** %1039, align 8
  %1041 = icmp eq i8* %1040, %880
  br i1 %1041, label %1042, label %1017

1042:                                             ; preds = %1037, %1014
  %1043 = call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.263, i64 0, i64 0)) #10
  %1044 = getelementptr inbounds i8, i8* %867, i64 32
  %1045 = bitcast i8* %1044 to i32*
  %1046 = load i32, i32* %1045, align 8
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1051, label %1048

1048:                                             ; preds = %1042
  %1049 = load i8*, i8** %808, align 8
  %1050 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.197, i64 0, i64 0), i8* %1049) #10
  br label %1051

1051:                                             ; preds = %1048, %1042
  br i1 %946, label %1052, label %1062

1052:                                             ; preds = %1051
  %1053 = getelementptr inbounds %struct.arg, %struct.arg* %900, i64 0, i32 3
  %1054 = load i8*, i8** %1053, align 8
  %1055 = icmp eq i8* %1054, null
  %1056 = getelementptr inbounds %struct.arg, %struct.arg* %900, i64 0, i32 0
  %1057 = load i8*, i8** %1056, align 8
  br i1 %1055, label %1058, label %1060

1058:                                             ; preds = %1052
  %1059 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.198, i64 0, i64 0), i8* %1057) #10
  br label %1062

1060:                                             ; preds = %1052
  %1061 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.199, i64 0, i64 0), i8* nonnull %1054, i8* %1057) #10
  br label %1062

1062:                                             ; preds = %1060, %1058, %1051
  %1063 = call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.264, i64 0, i64 0)) #10
  br label %1064

1064:                                             ; preds = %1062, %872
  %1065 = getelementptr inbounds i8, i8* %867, i64 8
  %1066 = bitcast i8* %1065 to i8**
  %1067 = load i8*, i8** %1066, align 8
  %1068 = icmp eq i8* %1067, %722
  br i1 %1068, label %1069, label %866

1069:                                             ; preds = %1064, %710, %860, %857, %631, %623
  call fastcc void @free_interface(%struct.interface* %351)
  %1070 = bitcast i8* %350 to %struct.wl_list*
  %1071 = icmp eq %struct.wl_list* %84, %1070
  br i1 %1071, label %1072, label %345

1072:                                             ; preds = %1069, %339
  %1073 = call i32 @puts(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @str, i64 0, i64 0))
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @emit_code(%struct.protocol*, i32) unnamed_addr #3 {
  %3 = alloca %struct.wl_array, align 8
  %4 = bitcast %struct.wl_array* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %struct.wl_array, %struct.wl_array* %3, i64 0, i32 0
  %6 = getelementptr inbounds %struct.wl_array, %struct.wl_array* %3, i64 0, i32 2
  %7 = bitcast %struct.wl_array* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0))
  %9 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 5
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %55, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @strlen(i8* nonnull %10) #15
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %55, label %16

16:                                               ; preds = %12
  %17 = add i64 %13, 1
  %18 = and i64 %17, 4294967295
  br label %19

19:                                               ; preds = %44, %16
  %20 = phi i64 [ 0, %16 ], [ %48, %44 ]
  %21 = phi i8 [ 0, %16 ], [ %47, %44 ]
  %22 = phi i32 [ 0, %16 ], [ %46, %44 ]
  %23 = phi i32 [ 1, %16 ], [ %45, %44 ]
  %24 = icmp ne i32 %23, 0
  %25 = getelementptr inbounds i8, i8* %10, i64 %20
  %26 = load i8, i8* %25, align 1
  br i1 %24, label %27, label %28

27:                                               ; preds = %19
  switch i8 %26, label %28 [
    i8 32, label %44
    i8 9, label %44
  ]

28:                                               ; preds = %27, %19
  %29 = trunc i64 %20 to i32
  %30 = select i1 %24, i32 %29, i32 %22
  switch i8 %26, label %44 [
    i8 10, label %34
    i8 0, label %31
  ]

31:                                               ; preds = %28
  %32 = zext i32 %30 to i64
  %33 = icmp eq i64 %20, %32
  br i1 %33, label %44, label %34

34:                                               ; preds = %31, %28
  %35 = and i8 %21, 1
  %36 = icmp eq i8 %35, 0
  %37 = select i1 %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.240, i64 0, i64 0)
  %38 = sext i32 %30 to i64
  %39 = icmp sgt i64 %20, %38
  %40 = select i1 %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.58, i64 0, i64 0)
  %41 = sub nsw i32 %29, %30
  %42 = getelementptr inbounds i8, i8* %10, i64 %38
  %43 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.111, i64 0, i64 0), i8* %37, i8* %40, i32 %41, i8* %42) #10
  br label %44

44:                                               ; preds = %34, %31, %28, %27, %27
  %45 = phi i32 [ %23, %27 ], [ 1, %34 ], [ 0, %31 ], [ %23, %27 ], [ 0, %28 ]
  %46 = phi i32 [ %22, %27 ], [ %30, %34 ], [ %30, %31 ], [ %22, %27 ], [ %30, %28 ]
  %47 = phi i8 [ %21, %27 ], [ 1, %34 ], [ %21, %31 ], [ %21, %27 ], [ %21, %28 ]
  %48 = add nuw nsw i64 %20, 1
  %49 = icmp eq i64 %48, %18
  br i1 %49, label %50, label %19

50:                                               ; preds = %44
  %51 = and i8 %47, 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  %54 = tail call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.241, i64 0, i64 0)) #10
  br label %55

55:                                               ; preds = %12, %53, %50, %2
  %56 = tail call i32 @puts(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @str.230, i64 0, i64 0))
  %57 = icmp eq i32 %1, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = tail call i32 @puts(i8* getelementptr inbounds ([109 x i8], [109 x i8]* @str.235, i64 0, i64 0))
  %60 = tail call i32 @puts(i8* getelementptr inbounds ([163 x i8], [163 x i8]* @str.236, i64 0, i64 0))
  br label %61

61:                                               ; preds = %55, %58
  %62 = phi i8* [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.201, i64 0, i64 0), %58 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.204, i64 0, i64 0), %55 ]
  call void @wl_array_init(%struct.wl_array* nonnull %3) #10
  %63 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 2
  %64 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 2, i32 1
  %65 = bitcast %struct.wl_list** %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = bitcast i8* %66 to %struct.wl_list*
  %68 = icmp eq %struct.wl_list* %63, %67
  br i1 %68, label %80, label %69

69:                                               ; preds = %61, %69
  %70 = phi i8* [ %77, %69 ], [ %66, %61 ]
  %71 = getelementptr inbounds i8, i8* %70, i64 -48
  %72 = bitcast i8* %71 to %struct.wl_list*
  call fastcc void @emit_types_forward_declarations(%struct.protocol* %0, %struct.wl_list* %72, %struct.wl_array* nonnull %3)
  %73 = getelementptr inbounds i8, i8* %70, i64 -32
  %74 = bitcast i8* %73 to %struct.wl_list*
  call fastcc void @emit_types_forward_declarations(%struct.protocol* %0, %struct.wl_list* %74, %struct.wl_array* nonnull %3)
  %75 = getelementptr inbounds i8, i8* %70, i64 8
  %76 = bitcast i8* %75 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast i8* %77 to %struct.wl_list*
  %79 = icmp eq %struct.wl_list* %63, %78
  br i1 %79, label %80, label %69

80:                                               ; preds = %69, %61
  %81 = load i8*, i8** %6, align 8
  %82 = load i64, i64* %5, align 8
  %83 = lshr i64 %82, 3
  call void @qsort(i8* %81, i64 %83, i64 8, i32 (i8*, i8*)* nonnull @cmp_names) #10
  %84 = bitcast i8** %6 to i8***
  %85 = load i8**, i8*** %84, align 8
  %86 = bitcast i8** %85 to i8*
  %87 = load i64, i64* %5, align 8
  %88 = getelementptr inbounds i8, i8* %86, i64 %87
  %89 = icmp ugt i8* %88, %86
  br i1 %89, label %90, label %113

90:                                               ; preds = %80, %105
  %91 = phi i64 [ %106, %105 ], [ %87, %80 ]
  %92 = phi i8* [ %107, %105 ], [ %86, %80 ]
  %93 = phi i8* [ %108, %105 ], [ null, %80 ]
  %94 = phi i8** [ %109, %105 ], [ %85, %80 ]
  %95 = icmp eq i8* %93, null
  %96 = load i8*, i8** %94, align 8
  br i1 %95, label %100, label %97

97:                                               ; preds = %90
  %98 = call i32 @strcmp(i8* %96, i8* nonnull %93) #15
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %105, label %100

100:                                              ; preds = %90, %97
  %101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.96, i64 0, i64 0), i8* %96)
  %102 = load i8*, i8** %94, align 8
  %103 = load i8*, i8** %6, align 8
  %104 = load i64, i64* %5, align 8
  br label %105

105:                                              ; preds = %97, %100
  %106 = phi i64 [ %91, %97 ], [ %104, %100 ]
  %107 = phi i8* [ %92, %97 ], [ %103, %100 ]
  %108 = phi i8* [ %93, %97 ], [ %102, %100 ]
  %109 = getelementptr inbounds i8*, i8** %94, i64 1
  %110 = bitcast i8** %109 to i8*
  %111 = getelementptr inbounds i8, i8* %107, i64 %106
  %112 = icmp ugt i8* %111, %110
  br i1 %112, label %90, label %113

113:                                              ; preds = %105, %80
  call void @wl_array_release(%struct.wl_array* nonnull %3) #10
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %115 = call i32 @putc(i32 10, %struct._IO_FILE* %114) #10
  %116 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 0
  %117 = load i8*, i8** %116, align 8
  %118 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.205, i64 0, i64 0), i8* %117)
  %119 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 4
  %120 = load i32, i32* %119, align 4
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %128

122:                                              ; preds = %113, %122
  %123 = phi i32 [ %125, %122 ], [ 0, %113 ]
  %124 = call i32 @puts(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.269, i64 0, i64 0)) #10
  %125 = add nuw nsw i32 %123, 1
  %126 = load i32, i32* %119, align 4
  %127 = icmp slt i32 %125, %126
  br i1 %127, label %122, label %128

128:                                              ; preds = %122, %113
  %129 = load i8*, i8** %65, align 8
  %130 = bitcast i8* %129 to %struct.wl_list*
  %131 = icmp eq %struct.wl_list* %63, %130
  br i1 %131, label %143, label %132

132:                                              ; preds = %128, %132
  %133 = phi i8* [ %140, %132 ], [ %129, %128 ]
  %134 = getelementptr inbounds i8, i8* %133, i64 -48
  %135 = bitcast i8* %134 to %struct.wl_list*
  call fastcc void @emit_types(%struct.protocol* %0, %struct.wl_list* %135)
  %136 = getelementptr inbounds i8, i8* %133, i64 -32
  %137 = bitcast i8* %136 to %struct.wl_list*
  call fastcc void @emit_types(%struct.protocol* %0, %struct.wl_list* %137)
  %138 = getelementptr inbounds i8, i8* %133, i64 8
  %139 = bitcast i8* %138 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = bitcast i8* %140 to %struct.wl_list*
  %142 = icmp eq %struct.wl_list* %63, %141
  br i1 %142, label %143, label %132

143:                                              ; preds = %132, %128
  %144 = call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.270, i64 0, i64 0))
  %145 = load i8*, i8** %65, align 8
  %146 = bitcast i8* %145 to %struct.wl_list*
  %147 = icmp eq %struct.wl_list* %63, %146
  br i1 %147, label %189, label %148

148:                                              ; preds = %143, %185
  %149 = phi i8* [ %153, %185 ], [ %145, %143 ]
  %150 = getelementptr inbounds i8, i8* %149, i64 8
  %151 = bitcast i8* %150 to i8**
  %152 = getelementptr inbounds i8, i8* %149, i64 -88
  %153 = load i8*, i8** %151, align 8
  %154 = bitcast i8* %152 to %struct.interface*
  %155 = load i8*, i8** %116, align 8
  %156 = getelementptr inbounds i8, i8* %149, i64 -48
  %157 = bitcast i8* %156 to %struct.wl_list*
  call fastcc void @emit_messages(i8* %155, %struct.wl_list* %157, %struct.interface* %154, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.206, i64 0, i64 0))
  %158 = load i8*, i8** %116, align 8
  %159 = getelementptr inbounds i8, i8* %149, i64 -32
  %160 = bitcast i8* %159 to %struct.wl_list*
  call fastcc void @emit_messages(i8* %158, %struct.wl_list* %160, %struct.interface* %154, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.207, i64 0, i64 0))
  %161 = getelementptr inbounds i8, i8* %149, i64 -72
  %162 = bitcast i8* %161 to i8**
  %163 = load i8*, i8** %162, align 8
  %164 = getelementptr inbounds i8, i8* %149, i64 -56
  %165 = bitcast i8* %164 to i32*
  %166 = load i32, i32* %165, align 8
  %167 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.208, i64 0, i64 0), i8* %62, i8* %163, i8* %163, i32 %166)
  %168 = call i32 @wl_list_empty(%struct.wl_list* %157) #10
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %174

170:                                              ; preds = %148
  %171 = call i32 @wl_list_length(%struct.wl_list* %157) #10
  %172 = load i8*, i8** %162, align 8
  %173 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.209, i64 0, i64 0), i32 %171, i8* %172)
  br label %176

174:                                              ; preds = %148
  %175 = call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.234, i64 0, i64 0))
  br label %176

176:                                              ; preds = %174, %170
  %177 = call i32 @wl_list_empty(%struct.wl_list* %160) #10
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %183

179:                                              ; preds = %176
  %180 = call i32 @wl_list_length(%struct.wl_list* %160) #10
  %181 = load i8*, i8** %162, align 8
  %182 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.211, i64 0, i64 0), i32 %180, i8* %181)
  br label %185

183:                                              ; preds = %176
  %184 = call i32 @puts(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @str.234, i64 0, i64 0))
  br label %185

185:                                              ; preds = %183, %179
  %186 = call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.270, i64 0, i64 0))
  call fastcc void @free_interface(%struct.interface* %154)
  %187 = bitcast i8* %153 to %struct.wl_list*
  %188 = icmp eq %struct.wl_list* %63, %187
  br i1 %188, label %189, label %148

189:                                              ; preds = %185, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define internal void @fail(%struct.location* nocapture readonly, i8* nocapture readonly, ...) unnamed_addr #5 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = getelementptr inbounds %struct.location, %struct.location* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.location, %struct.location* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i64 0, i64 0), i8* %9, i32 %11) #17
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %14 = call i32 @vfprintf(%struct._IO_FILE* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #17
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %16 = call i32 @fputc(i32 10, %struct._IO_FILE* %15) #17
  call void @llvm.va_end(i8* nonnull %4)
  call void @exit(i32 1) #18
  unreachable
}

declare void @wl_list_insert(%struct.wl_list*, %struct.wl_list*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @warn(%struct.location* nocapture readonly, i8* nocapture readonly, ...) unnamed_addr #3 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %8 = getelementptr inbounds %struct.location, %struct.location* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.location, %struct.location* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0), i8* %9, i32 %11) #17
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %14 = call i32 @vfprintf(%struct._IO_FILE* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #17
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %16 = call i32 @fputc(i32 10, %struct._IO_FILE* %15) #17
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nounwind
declare i32 @vfprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32** @__ctype_toupper_loc() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare noalias i8* @calloc(i64, i64) local_unnamed_addr #2

declare i32 @wl_list_empty(%struct.wl_list*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @verify_arguments(%struct.parse_context* nocapture readonly, %struct.interface* readonly, %struct.wl_list* readonly) unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.wl_list, %struct.wl_list* %2, i64 0, i32 1
  %5 = bitcast %struct.wl_list** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i8* %6 to %struct.wl_list*
  %8 = icmp eq %struct.wl_list* %7, %2
  br i1 %8, label %135, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.parse_context, %struct.parse_context* %0, i64 0, i32 2
  %11 = icmp eq %struct.interface* %1, null
  %12 = getelementptr inbounds %struct.interface, %struct.interface* %1, i64 0, i32 7
  %13 = getelementptr inbounds %struct.interface, %struct.interface* %1, i64 0, i32 7, i32 1
  %14 = bitcast %struct.wl_list** %13 to i8**
  br label %15

15:                                               ; preds = %9, %129
  %16 = phi i8* [ %6, %9 ], [ %132, %129 ]
  %17 = getelementptr inbounds i8, i8* %16, i64 -16
  %18 = getelementptr inbounds i8, i8* %16, i64 -8
  %19 = bitcast i8* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, %17
  br i1 %21, label %129, label %22

22:                                               ; preds = %15, %124
  %23 = phi i8* [ %127, %124 ], [ %20, %15 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 24
  %25 = bitcast i8* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %124, label %28

28:                                               ; preds = %22
  %29 = load %struct.protocol*, %struct.protocol** %10, align 8
  %30 = tail call i64 @strlen(i8* nonnull %26) #15
  %31 = icmp ugt i64 %30, 1
  br i1 %31, label %32, label %87

32:                                               ; preds = %28, %32
  %33 = phi i32 [ %41, %32 ], [ 1, %28 ]
  %34 = phi i32 [ %33, %32 ], [ 0, %28 ]
  %35 = phi i32 [ %40, %32 ], [ 0, %28 ]
  %36 = zext i32 %34 to i64
  %37 = getelementptr inbounds i8, i8* %26, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 46
  %40 = select i1 %39, i32 %34, i32 %35
  %41 = add i32 %33, 1
  %42 = zext i32 %41 to i64
  %43 = icmp ugt i64 %30, %42
  br i1 %43, label %32, label %44

44:                                               ; preds = %32
  %45 = icmp eq i32 %40, 0
  br i1 %45, label %87, label %46

46:                                               ; preds = %44
  %47 = zext i32 %40 to i64
  %48 = getelementptr inbounds i8, i8* %26, i64 1
  %49 = getelementptr inbounds i8, i8* %48, i64 %47
  %50 = getelementptr inbounds %struct.protocol, %struct.protocol* %29, i64 0, i32 2
  %51 = getelementptr inbounds %struct.protocol, %struct.protocol* %29, i64 0, i32 2, i32 1
  %52 = bitcast %struct.wl_list** %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast i8* %53 to %struct.wl_list*
  %55 = icmp eq %struct.wl_list* %50, %54
  br i1 %55, label %109, label %56

56:                                               ; preds = %46, %81
  %57 = phi i8* [ %84, %81 ], [ %53, %46 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 -72
  %59 = bitcast i8* %58 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = tail call i32 @strncmp(i8* %60, i8* nonnull %26, i64 %47) #15
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %81

63:                                               ; preds = %56
  %64 = getelementptr inbounds i8, i8* %57, i64 -16
  %65 = getelementptr inbounds i8, i8* %57, i64 -8
  %66 = bitcast i8* %65 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = icmp eq i8* %67, %64
  br i1 %68, label %81, label %74

69:                                               ; preds = %74
  %70 = getelementptr inbounds i8, i8* %75, i64 8
  %71 = bitcast i8* %70 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, %64
  br i1 %73, label %81, label %74

74:                                               ; preds = %63, %69
  %75 = phi i8* [ %72, %69 ], [ %67, %63 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 -32
  %77 = bitcast i8* %76 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = tail call i32 @strcmp(i8* %78, i8* %49) #15
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %107, label %69

81:                                               ; preds = %69, %63, %56
  %82 = getelementptr inbounds i8, i8* %57, i64 8
  %83 = bitcast i8* %82 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast i8* %84 to %struct.wl_list*
  %86 = icmp eq %struct.wl_list* %50, %85
  br i1 %86, label %109, label %56

87:                                               ; preds = %44, %28
  br i1 %11, label %109, label %88

88:                                               ; preds = %87
  %89 = load i8*, i8** %14, align 8
  %90 = bitcast i8* %89 to %struct.wl_list*
  %91 = icmp eq %struct.wl_list* %12, %90
  br i1 %91, label %109, label %92

92:                                               ; preds = %88, %99
  %93 = phi i8* [ %102, %99 ], [ %89, %88 ]
  %94 = getelementptr inbounds i8, i8* %93, i64 -32
  %95 = bitcast i8* %94 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = tail call i32 @strcmp(i8* %96, i8* nonnull %26) #15
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %105, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %93, i64 8
  %101 = bitcast i8* %100 to i8**
  %102 = load i8*, i8** %101, align 8
  %103 = bitcast i8* %102 to %struct.wl_list*
  %104 = icmp eq %struct.wl_list* %12, %103
  br i1 %104, label %109, label %92

105:                                              ; preds = %92
  %106 = bitcast i8* %94 to %struct.enumeration*
  br label %109

107:                                              ; preds = %74
  %108 = bitcast i8* %76 to %struct.enumeration*
  br label %109

109:                                              ; preds = %81, %99, %46, %87, %88, %105, %107
  %110 = phi %struct.enumeration* [ null, %87 ], [ %108, %107 ], [ %106, %105 ], [ null, %88 ], [ null, %46 ], [ null, %99 ], [ null, %81 ]
  %111 = getelementptr inbounds i8, i8* %23, i64 -16
  %112 = bitcast i8* %111 to i32*
  %113 = load i32, i32* %112, align 8
  switch i32 %113, label %122 [
    i32 1, label %114
    i32 2, label %124
  ]

114:                                              ; preds = %109
  %115 = icmp eq %struct.enumeration* %110, null
  br i1 %115, label %124, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %struct.enumeration, %struct.enumeration* %110, i64 0, i32 5
  %118 = load i8, i8* %117, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %struct.parse_context, %struct.parse_context* %0, i64 0, i32 0
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %121, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.82, i64 0, i64 0)) #19
  unreachable

122:                                              ; preds = %109
  %123 = getelementptr inbounds %struct.parse_context, %struct.parse_context* %0, i64 0, i32 0
  tail call void (%struct.location*, i8*, ...) @fail(%struct.location* %123, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.83, i64 0, i64 0)) #19
  unreachable

124:                                              ; preds = %109, %114, %116, %22
  %125 = getelementptr inbounds i8, i8* %23, i64 8
  %126 = bitcast i8* %125 to i8**
  %127 = load i8*, i8** %126, align 8
  %128 = icmp eq i8* %127, %17
  br i1 %128, label %129, label %22

129:                                              ; preds = %124, %15
  %130 = getelementptr inbounds i8, i8* %16, i64 8
  %131 = bitcast i8* %130 to i8**
  %132 = load i8*, i8** %131, align 8
  %133 = bitcast i8* %132 to %struct.wl_list*
  %134 = icmp eq %struct.wl_list* %133, %2
  br i1 %134, label %135, label %15

135:                                              ; preds = %129, %3
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @printf(i8* nocapture readonly, ...) local_unnamed_addr #2

declare void @wl_array_init(%struct.wl_array*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @emit_types_forward_declarations(%struct.protocol* nocapture, %struct.wl_list* readonly, %struct.wl_array*) unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.wl_list, %struct.wl_list* %1, i64 0, i32 1
  %5 = bitcast %struct.wl_list** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i8* %6 to %struct.wl_list*
  %8 = icmp eq %struct.wl_list* %7, %1
  br i1 %8, label %61, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 4
  br label %11

11:                                               ; preds = %9, %55
  %12 = phi i8* [ %6, %9 ], [ %58, %55 ]
  %13 = getelementptr inbounds i8, i8* %12, i64 28
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %12, i64 -16
  %16 = getelementptr inbounds i8, i8* %12, i64 -8
  %17 = bitcast i8* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %15
  br i1 %19, label %50, label %20

20:                                               ; preds = %11, %42
  %21 = phi i8* [ %45, %42 ], [ %18, %11 ]
  %22 = phi i32 [ %23, %42 ], [ 0, %11 ]
  %23 = add nuw nsw i32 %22, 1
  %24 = getelementptr inbounds i8, i8* %21, i64 -16
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 8
  switch i32 %26, label %42 [
    i32 0, label %27
    i32 5, label %27
  ]

27:                                               ; preds = %20, %20
  %28 = getelementptr inbounds i8, i8* %21, i64 -8
  %29 = bitcast i8* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %27
  store i32 0, i32* %14, align 4
  %33 = tail call i8* @wl_array_add(%struct.wl_array* %2, i64 8) #10
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %37 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %36, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0)) #20
  tail call void @exit(i32 1) #18
  unreachable

38:                                               ; preds = %32
  %39 = bitcast i8* %28 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast i8* %33 to i64*
  store i64 %40, i64* %41, align 8
  br label %42

42:                                               ; preds = %27, %38, %20
  %43 = getelementptr inbounds i8, i8* %21, i64 8
  %44 = bitcast i8* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, %15
  br i1 %46, label %47, label %20

47:                                               ; preds = %42
  %48 = load i32, i32* %14, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %11, %47
  %51 = phi i32 [ %23, %47 ], [ 0, %11 ]
  %52 = load i32, i32* %10, align 4
  %53 = icmp sgt i32 %51, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  store i32 %51, i32* %10, align 4
  br label %55

55:                                               ; preds = %47, %50, %54
  %56 = getelementptr inbounds i8, i8* %12, i64 8
  %57 = bitcast i8* %56 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = bitcast i8* %58 to %struct.wl_list*
  %60 = icmp eq %struct.wl_list* %59, %1
  br i1 %60, label %61, label %11

61:                                               ; preds = %55, %3
  ret void
}

declare i8* @wl_array_add(%struct.wl_array*, i64) local_unnamed_addr #9

; Function Attrs: nofree
declare void @qsort(i8*, i64, i64, i32 (i8*, i8*)* nocapture) local_unnamed_addr #12

; Function Attrs: nounwind readonly ssp uwtable
define internal i32 @cmp_names(i8* nocapture readonly, i8* nocapture readonly) #13 {
  %3 = bitcast i8* %0 to i8**
  %4 = bitcast i8* %1 to i8**
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = tail call i32 @strcmp(i8* %5, i8* %6) #15
  ret i32 %7
}

declare void @wl_array_release(%struct.wl_array*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @emit_structs(%struct.wl_list*, %struct.interface* nocapture readonly, i32) unnamed_addr #3 {
  %4 = tail call i32 @wl_list_empty(%struct.wl_list* %0) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %198

6:                                                ; preds = %3
  %7 = tail call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.247, i64 0, i64 0))
  %8 = getelementptr inbounds %struct.interface, %struct.interface* %1, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.119, i64 0, i64 0), i8* %9)
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i32 %2, 1
  %13 = select i1 %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.131, i64 0, i64 0)
  %14 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.130, i64 0, i64 0), i8* %11, i8* %13)
  %15 = tail call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.260, i64 0, i64 0))
  %16 = load i8*, i8** %8, align 8
  %17 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.132, i64 0, i64 0), i8* %16, i8* %13)
  %18 = getelementptr inbounds %struct.wl_list, %struct.wl_list* %0, i64 0, i32 1
  %19 = bitcast %struct.wl_list** %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = bitcast i8* %20 to %struct.wl_list*
  %22 = icmp eq %struct.wl_list* %21, %0
  br i1 %22, label %179, label %23

23:                                               ; preds = %6
  %24 = icmp eq i32 %2, 0
  br label %25

25:                                               ; preds = %23, %172
  %26 = phi i8* [ %20, %23 ], [ %176, %172 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 40
  %28 = bitcast i8* %27 to %struct.description**
  %29 = load %struct.description*, %struct.description** %28, align 8
  %30 = tail call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.250, i64 0, i64 0))
  %31 = icmp eq %struct.description* %29, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.description, %struct.description* %29, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.122, i64 0, i64 0), i8* nonnull %34)
  br label %38

38:                                               ; preds = %32, %36
  %39 = tail call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.255, i64 0, i64 0))
  %40 = getelementptr inbounds %struct.description, %struct.description* %29, i64 0, i32 1
  %41 = load i8*, i8** %40, align 8
  tail call void (i8*, i8*, ...) @desc_dump(i8* %41, i8* undef)
  br label %42

42:                                               ; preds = %25, %38
  %43 = getelementptr inbounds i8, i8* %26, i64 -16
  %44 = getelementptr inbounds i8, i8* %26, i64 -8
  %45 = bitcast i8* %44 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, %43
  br i1 %47, label %77, label %48

48:                                               ; preds = %42, %72
  %49 = phi i8* [ %75, %72 ], [ %46, %42 ]
  %50 = getelementptr inbounds i8, i8* %49, i64 -24
  br i1 %12, label %51, label %63

51:                                               ; preds = %48
  %52 = getelementptr inbounds i8, i8* %49, i64 -16
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %51
  %57 = getelementptr inbounds i8, i8* %49, i64 -8
  %58 = bitcast i8* %57 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = tail call i32 @puts(i8* getelementptr inbounds ([103 x i8], [103 x i8]* @str.254, i64 0, i64 0))
  br label %63

63:                                               ; preds = %61, %56, %51, %48
  %64 = getelementptr inbounds i8, i8* %49, i64 16
  %65 = bitcast i8* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %63
  %69 = bitcast i8* %50 to i8**
  %70 = load i8*, i8** %69, align 8
  %71 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.136, i64 0, i64 0), i8* %70, i8* nonnull %66)
  br label %72

72:                                               ; preds = %63, %68
  %73 = getelementptr inbounds i8, i8* %49, i64 8
  %74 = bitcast i8* %73 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = icmp eq i8* %75, %43
  br i1 %76, label %77, label %48

77:                                               ; preds = %72, %42
  %78 = getelementptr inbounds i8, i8* %26, i64 36
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = icmp sgt i32 %80, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i64 0, i64 0), i32 %80)
  br label %84

84:                                               ; preds = %82, %77
  %85 = tail call i32 @puts(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @str.251, i64 0, i64 0))
  %86 = getelementptr inbounds i8, i8* %26, i64 -32
  %87 = bitcast i8* %86 to i8**
  %88 = load i8*, i8** %87, align 8
  %89 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i64 0, i64 0), i8* %88)
  %90 = load i8*, i8** %87, align 8
  %91 = tail call i64 @strlen(i8* %90) #15
  %92 = trunc i64 %91 to i32
  %93 = add i32 %92, 17
  br i1 %12, label %94, label %104

94:                                               ; preds = %84
  %95 = srem i32 %93, 8
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [8 x i8*], [8 x i8*]* @__const.indent.whitespace, i64 0, i64 %96
  %98 = load i8*, i8** %97, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 12
  %100 = sdiv i32 %93, -8
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %99, i64 %101
  %103 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.138, i64 0, i64 0), i8* %102)
  br label %116

104:                                              ; preds = %84
  %105 = tail call i32 @puts(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @str.252, i64 0, i64 0))
  %106 = srem i32 %93, 8
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [8 x i8*], [8 x i8*]* @__const.indent.whitespace, i64 0, i64 %107
  %109 = load i8*, i8** %108, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 12
  %111 = sdiv i32 %93, -8
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %110, i64 %112
  %114 = load i8*, i8** %8, align 8
  %115 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.140, i64 0, i64 0), i8* %113, i8* %114, i8* %114)
  br label %116

116:                                              ; preds = %104, %94
  %117 = load i8*, i8** %45, align 8
  %118 = icmp eq i8* %117, %43
  br i1 %118, label %172, label %119

119:                                              ; preds = %116
  %120 = srem i32 %93, 8
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds [8 x i8*], [8 x i8*]* @__const.indent.whitespace, i64 0, i64 %121
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 12
  %125 = sdiv i32 %93, -8
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %124, i64 %126
  br label %128

128:                                              ; preds = %119, %164
  %129 = phi i8* [ %117, %119 ], [ %170, %164 ]
  %130 = getelementptr inbounds i8, i8* %129, i64 -24
  %131 = bitcast i8* %130 to %struct.arg*
  %132 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i64 0, i64 0), i8* %127)
  br i1 %12, label %133, label %146

133:                                              ; preds = %128
  %134 = getelementptr inbounds i8, i8* %129, i64 -16
  %135 = bitcast i8* %134 to i32*
  %136 = load i32, i32* %135, align 8
  switch i32 %136, label %163 [
    i32 5, label %137
    i32 0, label %139
  ]

137:                                              ; preds = %133
  %138 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.142, i64 0, i64 0))
  br label %164

139:                                              ; preds = %133
  %140 = getelementptr inbounds i8, i8* %129, i64 -8
  %141 = bitcast i8* %140 to i8**
  %142 = load i8*, i8** %141, align 8
  %143 = icmp eq i8* %142, null
  br i1 %143, label %144, label %163

144:                                              ; preds = %139
  %145 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.143, i64 0, i64 0))
  br label %164

146:                                              ; preds = %128
  br i1 %24, label %147, label %163

147:                                              ; preds = %146
  %148 = getelementptr inbounds i8, i8* %129, i64 -16
  %149 = bitcast i8* %148 to i32*
  %150 = load i32, i32* %149, align 8
  switch i32 %150, label %163 [
    i32 5, label %151
    i32 0, label %158
  ]

151:                                              ; preds = %147
  %152 = getelementptr inbounds i8, i8* %129, i64 -8
  %153 = bitcast i8* %152 to i8**
  %154 = load i8*, i8** %153, align 8
  %155 = icmp eq i8* %154, null
  br i1 %155, label %156, label %163

156:                                              ; preds = %151
  %157 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.144, i64 0, i64 0))
  br label %164

158:                                              ; preds = %147
  %159 = getelementptr inbounds i8, i8* %129, i64 -8
  %160 = bitcast i8* %159 to i8**
  %161 = load i8*, i8** %160, align 8
  %162 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.145, i64 0, i64 0), i8* %161)
  br label %164

163:                                              ; preds = %147, %133, %151, %139, %146
  tail call fastcc void @emit_type(%struct.arg* %131)
  br label %164

164:                                              ; preds = %144, %158, %163, %156, %137
  %165 = bitcast i8* %130 to i8**
  %166 = load i8*, i8** %165, align 8
  %167 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i8* %166)
  %168 = getelementptr inbounds i8, i8* %129, i64 8
  %169 = bitcast i8* %168 to i8**
  %170 = load i8*, i8** %169, align 8
  %171 = icmp eq i8* %170, %43
  br i1 %171, label %172, label %128

172:                                              ; preds = %164, %116
  %173 = tail call i32 @puts(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @str.263, i64 0, i64 0))
  %174 = getelementptr inbounds i8, i8* %26, i64 8
  %175 = bitcast i8* %174 to i8**
  %176 = load i8*, i8** %175, align 8
  %177 = bitcast i8* %176 to %struct.wl_list*
  %178 = icmp eq %struct.wl_list* %177, %0
  br i1 %178, label %179, label %25

179:                                              ; preds = %172, %6
  %180 = tail call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.270, i64 0, i64 0))
  %181 = icmp eq i32 %2, 0
  br i1 %181, label %182, label %198

182:                                              ; preds = %179
  %183 = load i8*, i8** %8, align 8
  %184 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.127, i64 0, i64 0), i8* %183)
  %185 = load i8*, i8** %8, align 8
  %186 = tail call i64 @strlen(i8* %185) #15
  %187 = trunc i64 %186 to i32
  %188 = add i32 %187, 14
  %189 = srem i32 %188, 8
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds [8 x i8*], [8 x i8*]* @__const.indent.whitespace, i64 0, i64 %190
  %192 = load i8*, i8** %191, align 8
  %193 = getelementptr inbounds i8, i8* %192, i64 12
  %194 = sdiv i32 %188, -8
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %193, i64 %195
  %197 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([196 x i8], [196 x i8]* @.str.149, i64 0, i64 0), i8* %185, i8* %185, i8* %185, i8* %196, i8* %185, i8* %185, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.159, i64 0, i64 8))
  br label %198

198:                                              ; preds = %179, %182, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @free_interface(%struct.interface*) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.interface, %struct.interface* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  tail call void @free(i8* %3) #10
  %4 = getelementptr inbounds %struct.interface, %struct.interface* %0, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  tail call void @free(i8* %5) #10
  %6 = getelementptr inbounds %struct.interface, %struct.interface* %0, i64 0, i32 9
  %7 = load %struct.description*, %struct.description** %6, align 8
  %8 = icmp eq %struct.description* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.description, %struct.description* %7, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @free(i8* %11) #10
  %12 = getelementptr inbounds %struct.description, %struct.description* %7, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  tail call void @free(i8* %13) #10
  %14 = bitcast %struct.description* %7 to i8*
  tail call void @free(i8* %14) #10
  br label %15

15:                                               ; preds = %1, %9
  %16 = getelementptr inbounds %struct.interface, %struct.interface* %0, i64 0, i32 5
  %17 = getelementptr inbounds %struct.interface, %struct.interface* %0, i64 0, i32 5, i32 1
  %18 = bitcast %struct.wl_list** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast i8* %19 to %struct.wl_list*
  %21 = icmp eq %struct.wl_list* %16, %20
  br i1 %21, label %31, label %22

22:                                               ; preds = %15, %22
  %23 = phi i8* [ %26, %22 ], [ %19, %15 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 -48
  %28 = bitcast i8* %27 to %struct.message*
  tail call fastcc void @free_message(%struct.message* %28)
  %29 = bitcast i8* %26 to %struct.wl_list*
  %30 = icmp eq %struct.wl_list* %16, %29
  br i1 %30, label %31, label %22

31:                                               ; preds = %22, %15
  %32 = getelementptr inbounds %struct.interface, %struct.interface* %0, i64 0, i32 6
  %33 = getelementptr inbounds %struct.interface, %struct.interface* %0, i64 0, i32 6, i32 1
  %34 = bitcast %struct.wl_list** %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %struct.wl_list*
  %37 = icmp eq %struct.wl_list* %32, %36
  br i1 %37, label %47, label %38

38:                                               ; preds = %31, %38
  %39 = phi i8* [ %42, %38 ], [ %35, %31 ]
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = bitcast i8* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds i8, i8* %39, i64 -48
  %44 = bitcast i8* %43 to %struct.message*
  tail call fastcc void @free_message(%struct.message* %44)
  %45 = bitcast i8* %42 to %struct.wl_list*
  %46 = icmp eq %struct.wl_list* %32, %45
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %31
  %48 = getelementptr inbounds %struct.interface, %struct.interface* %0, i64 0, i32 7
  %49 = getelementptr inbounds %struct.interface, %struct.interface* %0, i64 0, i32 7, i32 1
  %50 = bitcast %struct.wl_list** %49 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = bitcast i8* %51 to %struct.wl_list*
  %53 = icmp eq %struct.wl_list* %48, %52
  br i1 %53, label %102, label %54

54:                                               ; preds = %47, %99
  %55 = phi i8* [ %58, %99 ], [ %51, %47 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = bitcast i8* %56 to i8**
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds i8, i8* %55, i64 -32
  %60 = bitcast i8* %59 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @free(i8* %61) #10
  %62 = getelementptr inbounds i8, i8* %55, i64 -24
  %63 = bitcast i8* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @free(i8* %64) #10
  %65 = getelementptr inbounds i8, i8* %55, i64 16
  %66 = bitcast i8* %65 to %struct.description**
  %67 = load %struct.description*, %struct.description** %66, align 8
  %68 = icmp eq %struct.description* %67, null
  br i1 %68, label %75, label %69

69:                                               ; preds = %54
  %70 = getelementptr inbounds %struct.description, %struct.description* %67, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @free(i8* %71) #10
  %72 = getelementptr inbounds %struct.description, %struct.description* %67, i64 0, i32 1
  %73 = load i8*, i8** %72, align 8
  tail call void @free(i8* %73) #10
  %74 = bitcast %struct.description* %67 to i8*
  tail call void @free(i8* %74) #10
  br label %75

75:                                               ; preds = %69, %54
  %76 = getelementptr inbounds i8, i8* %55, i64 -16
  %77 = getelementptr inbounds i8, i8* %55, i64 -8
  %78 = bitcast i8* %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %76, %79
  br i1 %80, label %99, label %81

81:                                               ; preds = %75, %81
  %82 = phi i8* [ %85, %81 ], [ %79, %75 ]
  %83 = getelementptr inbounds i8, i8* %82, i64 8
  %84 = bitcast i8* %83 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr inbounds i8, i8* %82, i64 -40
  %87 = bitcast i8* %86 to i8**
  %88 = load i8*, i8** %87, align 8
  tail call void @free(i8* %88) #10
  %89 = getelementptr inbounds i8, i8* %82, i64 -32
  %90 = bitcast i8* %89 to i8**
  %91 = load i8*, i8** %90, align 8
  tail call void @free(i8* %91) #10
  %92 = getelementptr inbounds i8, i8* %82, i64 -24
  %93 = bitcast i8* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  tail call void @free(i8* %94) #10
  %95 = getelementptr inbounds i8, i8* %82, i64 -16
  %96 = bitcast i8* %95 to i8**
  %97 = load i8*, i8** %96, align 8
  tail call void @free(i8* %97) #10
  tail call void @free(i8* %86) #10
  %98 = icmp eq i8* %76, %85
  br i1 %98, label %99, label %81

99:                                               ; preds = %81, %75
  tail call void @free(i8* %59) #10
  %100 = bitcast i8* %58 to %struct.wl_list*
  %101 = icmp eq %struct.wl_list* %48, %100
  br i1 %101, label %102, label %54

102:                                              ; preds = %99, %47
  %103 = bitcast %struct.interface* %0 to i8*
  tail call void @free(i8* %103) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @desc_dump(i8*, i8* nocapture readnone, ...) unnamed_addr #3 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = alloca [128 x i8], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #10
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %7 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  %8 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 128, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %9 = call i32 @vsnprintf(i8* nonnull %7, i64 128, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.134, i64 0, i64 0), %struct.__va_list_tag* nonnull %6) #10
  call void @llvm.va_end(i8* nonnull %5)
  br label %10

10:                                               ; preds = %20, %2
  %11 = phi i64 [ %22, %20 ], [ 0, %2 ]
  %12 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %13 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %11
  %14 = load i8, i8* %13, align 1
  switch i8 %14, label %18 [
    i8 42, label %23
    i8 9, label %15
  ]

15:                                               ; preds = %10
  %16 = add nsw i32 %12, 8
  %17 = and i32 %16, -8
  br label %20

18:                                               ; preds = %10
  %19 = add nsw i32 %12, 1
  br label %20

20:                                               ; preds = %15, %18
  %21 = phi i32 [ %17, %15 ], [ %19, %18 ]
  %22 = add nuw i64 %11, 1
  br label %10

23:                                               ; preds = %10
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.146, i64 0, i64 0), i8* nonnull %7)
  %25 = icmp eq i8* %0, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = call i32 @puts(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.266, i64 0, i64 0))
  br label %141

28:                                               ; preds = %23
  %29 = and i64 %11, 4294967295
  %30 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 %29
  %31 = call i64 @strlen(i8* %30) #15
  %32 = trunc i64 %31 to i32
  %33 = icmp sgt i32 %32, 2
  %34 = select i1 %33, i32 9, i32 32
  %35 = load i8, i8* %0, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %138, label %37

37:                                               ; preds = %28
  %38 = add i32 %12, %32
  %39 = srem i32 %12, 8
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [8 x i8*], [8 x i8*]* @__const.indent.whitespace, i64 0, i64 %40
  %42 = sdiv i32 %12, -8
  %43 = sext i32 %42 to i64
  %44 = tail call i16** @__ctype_b_loc() #16
  br label %45

45:                                               ; preds = %129, %37
  %46 = phi i8 [ %35, %37 ], [ %136, %129 ]
  %47 = phi i32 [ 0, %37 ], [ %104, %129 ]
  %48 = phi i32 [ %38, %37 ], [ %133, %129 ]
  %49 = sext i32 %47 to i64
  %50 = getelementptr inbounds i8, i8* %0, i64 %49
  %51 = load i16*, i16** %44, align 8
  %52 = sext i8 %46 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = and i16 %54, 8192
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %65, label %75

57:                                               ; preds = %75
  %58 = sext i8 %84 to i64
  %59 = getelementptr inbounds i16, i16* %51, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = and i16 %60, 8192
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %57
  %64 = getelementptr inbounds i8, i8* %0, i64 %82
  br label %65

65:                                               ; preds = %63, %45
  %66 = phi i64 [ %49, %45 ], [ %82, %63 ]
  %67 = phi i8* [ %50, %45 ], [ %64, %63 ]
  %68 = phi i32 [ 0, %45 ], [ %81, %63 ]
  %69 = trunc i64 %66 to i32
  %70 = shl i64 %66, 32
  %71 = ashr exact i64 %70, 32
  %72 = getelementptr inbounds i8, i8* %0, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %103, label %86

75:                                               ; preds = %45, %57
  %76 = phi i32 [ %81, %57 ], [ 0, %45 ]
  %77 = phi i8 [ %84, %57 ], [ %46, %45 ]
  %78 = phi i64 [ %82, %57 ], [ %49, %45 ]
  %79 = icmp eq i8 %77, 10
  %80 = zext i1 %79 to i32
  %81 = add nuw nsw i32 %76, %80
  %82 = add i64 %78, 1
  %83 = getelementptr inbounds i8, i8* %0, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %138, label %57

86:                                               ; preds = %65, %95
  %87 = phi i64 [ %96, %95 ], [ %71, %65 ]
  %88 = phi i8 [ %99, %95 ], [ %73, %65 ]
  %89 = phi i32 [ %97, %95 ], [ %69, %65 ]
  %90 = sext i8 %88 to i64
  %91 = getelementptr inbounds i16, i16* %51, i64 %90
  %92 = load i16, i16* %91, align 2
  %93 = and i16 %92, 8192
  %94 = icmp eq i16 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %86
  %96 = add i64 %87, 1
  %97 = add nsw i32 %89, 1
  %98 = getelementptr inbounds i8, i8* %0, i64 %96
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %103, label %86

101:                                              ; preds = %86
  %102 = trunc i64 %87 to i32
  br label %103

103:                                              ; preds = %95, %101, %65
  %104 = phi i32 [ %69, %65 ], [ %102, %101 ], [ %97, %95 ]
  %105 = icmp ugt i32 %68, 1
  br i1 %105, label %106, label %111

106:                                              ; preds = %103
  %107 = load i8*, i8** %41, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 12
  %109 = getelementptr inbounds i8, i8* %108, i64 %43
  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i64 0, i64 0), i8* %109)
  br label %117

111:                                              ; preds = %103
  %112 = sub i32 %48, %69
  %113 = add i32 %112, %104
  %114 = icmp sgt i32 %113, 72
  br i1 %114, label %115, label %122

115:                                              ; preds = %111
  %116 = load i8*, i8** %41, align 8
  br label %117

117:                                              ; preds = %115, %106
  %118 = phi i8* [ %116, %115 ], [ %107, %106 ]
  %119 = getelementptr inbounds i8, i8* %118, i64 12
  %120 = getelementptr inbounds i8, i8* %119, i64 %43
  %121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.152, i64 0, i64 0), i8* %120, i32 %34)
  br label %129

122:                                              ; preds = %111
  %123 = icmp sgt i32 %48, %12
  %124 = icmp sgt i32 %47, 0
  %125 = and i1 %123, %124
  br i1 %125, label %126, label %129

126:                                              ; preds = %122
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.114, i64 0, i64 0))
  %128 = add nsw i32 %127, %48
  br label %129

129:                                              ; preds = %117, %126, %122
  %130 = phi i32 [ %128, %126 ], [ %48, %122 ], [ %12, %117 ]
  %131 = sub nsw i32 %104, %69
  %132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i64 0, i64 0), i32 %131, i8* %67)
  %133 = add nsw i32 %132, %130
  %134 = sext i32 %104 to i64
  %135 = getelementptr inbounds i8, i8* %0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %45

138:                                              ; preds = %129, %75, %28
  %139 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %140 = call i32 @putc(i32 10, %struct._IO_FILE* %139) #10
  br label %141

141:                                              ; preds = %138, %26
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @emit_type(%struct.arg* nocapture readonly) unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %4 [
    i32 6, label %16
    i32 5, label %12
    i32 0, label %6
    i32 2, label %6
    i32 3, label %8
    i32 4, label %10
  ]

4:                                                ; preds = %1
  %5 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.162, i64 0, i64 0))
  br label %18

6:                                                ; preds = %1, %1
  %7 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.163, i64 0, i64 0))
  br label %18

8:                                                ; preds = %1
  %9 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.164, i64 0, i64 0))
  br label %18

10:                                               ; preds = %1
  %11 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.165, i64 0, i64 0))
  br label %18

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.arg, %struct.arg* %0, i64 0, i32 3
  %14 = load i8*, i8** %13, align 8
  %15 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.145, i64 0, i64 0), i8* %14)
  br label %18

16:                                               ; preds = %1
  %17 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.166, i64 0, i64 0))
  br label %18

18:                                               ; preds = %16, %12, %10, %8, %6, %4
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @vsnprintf(i8* nocapture, i64, i8* nocapture readonly, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i32 @putc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @free_message(%struct.message*) unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.message, %struct.message* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  tail call void @free(i8* %3) #10
  %4 = getelementptr inbounds %struct.message, %struct.message* %0, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  tail call void @free(i8* %5) #10
  %6 = getelementptr inbounds %struct.message, %struct.message* %0, i64 0, i32 11
  %7 = load %struct.description*, %struct.description** %6, align 8
  %8 = icmp eq %struct.description* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.description, %struct.description* %7, i64 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @free(i8* %11) #10
  %12 = getelementptr inbounds %struct.description, %struct.description* %7, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  tail call void @free(i8* %13) #10
  %14 = bitcast %struct.description* %7 to i8*
  tail call void @free(i8* %14) #10
  br label %15

15:                                               ; preds = %1, %9
  %16 = getelementptr inbounds %struct.message, %struct.message* %0, i64 0, i32 3
  %17 = getelementptr inbounds %struct.message, %struct.message* %0, i64 0, i32 3, i32 1
  %18 = bitcast %struct.wl_list** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast i8* %19 to %struct.wl_list*
  %21 = icmp eq %struct.wl_list* %16, %20
  br i1 %21, label %41, label %22

22:                                               ; preds = %15, %22
  %23 = phi i8* [ %26, %22 ], [ %19, %15 ]
  %24 = getelementptr inbounds i8, i8* %23, i64 8
  %25 = bitcast i8* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 -24
  %28 = bitcast i8* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  tail call void @free(i8* %29) #10
  %30 = getelementptr inbounds i8, i8* %23, i64 -8
  %31 = bitcast i8* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @free(i8* %32) #10
  %33 = getelementptr inbounds i8, i8* %23, i64 16
  %34 = bitcast i8* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  tail call void @free(i8* %35) #10
  %36 = getelementptr inbounds i8, i8* %23, i64 24
  %37 = bitcast i8* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  tail call void @free(i8* %38) #10
  tail call void @free(i8* %27) #10
  %39 = bitcast i8* %26 to %struct.wl_list*
  %40 = icmp eq %struct.wl_list* %16, %39
  br i1 %40, label %41, label %22

41:                                               ; preds = %22, %15
  %42 = bitcast %struct.message* %0 to i8*
  tail call void @free(i8* %42) #10
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc void @emit_types(%struct.protocol* nocapture, %struct.wl_list* readonly) unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.wl_list, %struct.wl_list* %1, i64 0, i32 1
  %4 = bitcast %struct.wl_list** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.wl_list*
  %7 = icmp eq %struct.wl_list* %6, %1
  br i1 %7, label %63, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 4
  %10 = getelementptr inbounds %struct.protocol, %struct.protocol* %0, i64 0, i32 3
  br label %11

11:                                               ; preds = %8, %57
  %12 = phi i8* [ %5, %8 ], [ %60, %57 ]
  %13 = getelementptr inbounds i8, i8* %12, i64 28
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %12, i64 24
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  br label %57

20:                                               ; preds = %11
  %21 = load i32, i32* %9, align 4
  %22 = load i32, i32* %10, align 8
  %23 = add nsw i32 %22, %21
  %24 = getelementptr inbounds i8, i8* %12, i64 24
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %12, i64 16
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 8
  %29 = load i32, i32* %10, align 8
  %30 = add nsw i32 %29, %28
  store i32 %30, i32* %10, align 8
  %31 = getelementptr inbounds i8, i8* %12, i64 -16
  %32 = getelementptr inbounds i8, i8* %12, i64 -8
  %33 = bitcast i8* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, %31
  br i1 %35, label %57, label %36

36:                                               ; preds = %20, %52
  %37 = phi i8* [ %55, %52 ], [ %34, %20 ]
  %38 = getelementptr inbounds i8, i8* %37, i64 -16
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 8
  switch i32 %40, label %50 [
    i32 0, label %41
    i32 5, label %41
  ]

41:                                               ; preds = %36, %36
  %42 = getelementptr inbounds i8, i8* %37, i64 -8
  %43 = bitcast i8* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.213, i64 0, i64 0), i8* nonnull %44)
  br label %52

48:                                               ; preds = %41
  %49 = tail call i32 @puts(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.269, i64 0, i64 0))
  br label %52

50:                                               ; preds = %36
  %51 = tail call i32 @puts(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @str.269, i64 0, i64 0))
  br label %52

52:                                               ; preds = %50, %48, %46
  %53 = getelementptr inbounds i8, i8* %37, i64 8
  %54 = bitcast i8* %53 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, %31
  br i1 %56, label %57, label %36

57:                                               ; preds = %52, %20, %17
  %58 = getelementptr inbounds i8, i8* %12, i64 8
  %59 = bitcast i8* %58 to i8**
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast i8* %60 to %struct.wl_list*
  %62 = icmp eq %struct.wl_list* %61, %1
  br i1 %62, label %63, label %11

63:                                               ; preds = %57, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @emit_messages(i8*, %struct.wl_list*, %struct.interface* nocapture readonly, i8*) unnamed_addr #3 {
  %5 = tail call i32 @wl_list_empty(%struct.wl_list* %1) #10
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %83

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.interface, %struct.interface* %2, i64 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.214, i64 0, i64 0), i8* %9, i8* %3)
  %11 = getelementptr inbounds %struct.wl_list, %struct.wl_list* %1, i64 0, i32 1
  %12 = bitcast %struct.wl_list** %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast i8* %13 to %struct.wl_list*
  %15 = icmp eq %struct.wl_list* %14, %1
  br i1 %15, label %81, label %16

16:                                               ; preds = %7, %71
  %17 = phi i8* [ %78, %71 ], [ %13, %7 ]
  %18 = getelementptr inbounds i8, i8* %17, i64 -32
  %19 = bitcast i8* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.215, i64 0, i64 0), i8* %20)
  %22 = getelementptr inbounds i8, i8* %17, i64 36
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %16
  %27 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.216, i64 0, i64 0), i32 %24)
  br label %28

28:                                               ; preds = %26, %16
  %29 = getelementptr inbounds i8, i8* %17, i64 -16
  %30 = getelementptr inbounds i8, i8* %17, i64 -8
  %31 = bitcast i8* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, %29
  br i1 %33, label %71, label %34

34:                                               ; preds = %28, %63
  %35 = phi i8* [ %69, %63 ], [ %32, %28 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 -16
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 8
  switch i32 %38, label %48 [
    i32 4, label %39
    i32 5, label %39
    i32 0, label %39
    i32 6, label %39
  ]

39:                                               ; preds = %34, %34, %34, %34
  %40 = getelementptr inbounds i8, i8* %35, i64 -12
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %39
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %46 = tail call i32 @putc(i32 63, %struct._IO_FILE* %45) #10
  %47 = load i32, i32* %37, align 8
  br label %48

48:                                               ; preds = %34, %39, %44
  %49 = phi i32 [ %38, %34 ], [ %38, %39 ], [ %47, %44 ]
  switch i32 %49, label %63 [
    i32 7, label %62
    i32 0, label %50
    i32 2, label %57
    i32 3, label %58
    i32 4, label %59
    i32 5, label %60
    i32 6, label %61
  ]

50:                                               ; preds = %48
  %51 = getelementptr inbounds i8, i8* %35, i64 -8
  %52 = bitcast i8* %51 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %55, label %63

55:                                               ; preds = %50
  %56 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.219, i64 0, i64 0))
  br label %63

57:                                               ; preds = %48
  br label %63

58:                                               ; preds = %48
  br label %63

59:                                               ; preds = %48
  br label %63

60:                                               ; preds = %48
  br label %63

61:                                               ; preds = %48
  br label %63

62:                                               ; preds = %48
  br label %63

63:                                               ; preds = %50, %55, %48, %57, %58, %59, %60, %61, %62
  %64 = phi i32 [ 117, %57 ], [ 102, %58 ], [ 115, %59 ], [ 111, %60 ], [ 97, %61 ], [ 104, %62 ], [ 105, %48 ], [ 110, %55 ], [ 110, %50 ]
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %66 = tail call i32 @putc(i32 %64, %struct._IO_FILE* %65) #10
  %67 = getelementptr inbounds i8, i8* %35, i64 8
  %68 = bitcast i8* %67 to i8**
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, %29
  br i1 %70, label %71, label %34

71:                                               ; preds = %63, %28
  %72 = getelementptr inbounds i8, i8* %17, i64 24
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 8
  %75 = tail call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.227, i64 0, i64 0), i8* %0, i32 %74)
  %76 = getelementptr inbounds i8, i8* %17, i64 8
  %77 = bitcast i8* %76 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast i8* %78 to %struct.wl_list*
  %80 = icmp eq %struct.wl_list* %79, %1
  br i1 %80, label %81, label %16

81:                                               ; preds = %71, %7
  %82 = tail call i32 @puts(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @str.270, i64 0, i64 0))
  br label %83

83:                                               ; preds = %4, %81
  ret void
}

declare i32 @wl_list_length(%struct.wl_list*) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #14

; Function Attrs: nofree nounwind
declare i32 @fputc(i32, %struct._IO_FILE* nocapture) local_unnamed_addr #14

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #14

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind }
attributes #15 = { nounwind readonly }
attributes #16 = { nounwind readnone }
attributes #17 = { cold }
attributes #18 = { noreturn nounwind }
attributes #19 = { noreturn }
attributes #20 = { cold nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
