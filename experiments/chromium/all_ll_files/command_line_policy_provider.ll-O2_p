; ModuleID = '../../components/policy/core/common/command_line_policy_provider.cc'
source_filename = "../../components/policy/core/common/command_line_policy_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.policy::CommandLinePolicyProvider" = type { %"class.policy::ConfigurationPolicyProvider", i8, %"class.policy::PolicyLoaderCommandLine" }
%"class.policy::ConfigurationPolicyProvider" = type { %"class.policy::SchemaRegistry::Observer", %"class.policy::PolicyBundle", i8, %"class.policy::SchemaRegistry"*, %"class.base::ObserverList.50" }
%"class.policy::SchemaRegistry::Observer" = type { i32 (...)** }
%"class.policy::PolicyBundle" = type { i32 (...)**, %"class.std::__1::map", %"class.policy::PolicyMap" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.0", %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i64 }
%"class.policy::PolicyMap" = type { %"class.std::__1::map.6", i8, %"class.base::internal::flat_tree", %"class.base::internal::flat_tree" }
%"class.std::__1::map.6" = type { %"class.std::__1::__tree.7" }
%"class.std::__1::__tree.7" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.std::__1::basic_string"* }
%"class.policy::SchemaRegistry" = type <{ i32 (...)**, %class.scoped_refptr, %"class.base::ObserverList", %"class.base::ObserverList.46", [3 x i8], [5 x i8] }>
%class.scoped_refptr = type { %"class.policy::SchemaMap"* }
%"class.policy::SchemaMap" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::map.28" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::map.28" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.39", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.41" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::ObserverList.46" = type <{ %"class.std::__1::vector.39", %"class.base::LinkedList.47", i64, i32, [4 x i8] }>
%"class.base::LinkedList.47" = type { %"class.base::LinkNode.48" }
%"class.base::LinkNode.48" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.50" = type <{ %"class.std::__1::vector.39", %"class.base::LinkedList.51", i64, i32, [4 x i8] }>
%"class.base::LinkedList.51" = type { %"class.base::LinkNode.52" }
%"class.base::LinkNode.52" = type { %"class.base::internal::LinkNodeBase" }
%"class.policy::PolicyLoaderCommandLine" = type { %"class.base::CommandLine"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map.54", i64 }
%"class.std::__1::map.54" = type { %"class.std::__1::__tree.55" }
%"class.std::__1::__tree.55" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"class.policy::ConfigurationPolicyProvider::Observer" = type { i32 (...)** }

@_ZTVN6policy25CommandLinePolicyProviderE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::ConfigurationPolicyProvider"*, i1)* @_ZN6policy27ConfigurationPolicyProvider23OnSchemaRegistryUpdatedEb to i8*), i8* bitcast (void (%"class.policy::ConfigurationPolicyProvider"*)* @_ZN6policy27ConfigurationPolicyProvider21OnSchemaRegistryReadyEv to i8*), i8* bitcast (void (%"class.policy::CommandLinePolicyProvider"*)* @_ZN6policy25CommandLinePolicyProviderD2Ev to i8*), i8* bitcast (void (%"class.policy::CommandLinePolicyProvider"*)* @_ZN6policy25CommandLinePolicyProviderD0Ev to i8*), i8* bitcast (void (%"class.policy::ConfigurationPolicyProvider"*, %"class.policy::SchemaRegistry"*)* @_ZN6policy27ConfigurationPolicyProvider4InitEPNS_14SchemaRegistryE to i8*), i8* bitcast (void (%"class.policy::ConfigurationPolicyProvider"*)* @_ZN6policy27ConfigurationPolicyProvider8ShutdownEv to i8*), i8* bitcast (i1 (%"class.policy::ConfigurationPolicyProvider"*, i32)* @_ZNK6policy27ConfigurationPolicyProvider24IsInitializationCompleteENS_12PolicyDomainE to i8*), i8* bitcast (i1 (%"class.policy::CommandLinePolicyProvider"*, i32)* @_ZNK6policy25CommandLinePolicyProvider25IsFirstPolicyLoadCompleteENS_12PolicyDomainE to i8*), i8* bitcast (void (%"class.policy::CommandLinePolicyProvider"*)* @_ZN6policy25CommandLinePolicyProvider15RefreshPoliciesEv to i8*), i8* bitcast (void (%"class.policy::ConfigurationPolicyProvider"*, %"class.policy::ConfigurationPolicyProvider::Observer"*)* @_ZN6policy27ConfigurationPolicyProvider11AddObserverEPNS0_8ObserverE to i8*), i8* bitcast (void (%"class.policy::ConfigurationPolicyProvider"*, %"class.policy::ConfigurationPolicyProvider::Observer"*)* @_ZN6policy27ConfigurationPolicyProvider14RemoveObserverEPNS0_8ObserverE to i8*)] }, align 8

@_ZN6policy25CommandLinePolicyProviderD1Ev = hidden unnamed_addr alias void (%"class.policy::CommandLinePolicyProvider"*), void (%"class.policy::CommandLinePolicyProvider"*)* @_ZN6policy25CommandLinePolicyProviderD2Ev
@_ZN6policy25CommandLinePolicyProviderC1ERKN4base11CommandLineE = hidden unnamed_addr alias void (%"class.policy::CommandLinePolicyProvider"*, %"class.base::CommandLine"*), void (%"class.policy::CommandLinePolicyProvider"*, %"class.base::CommandLine"*)* @_ZN6policy25CommandLinePolicyProviderC2ERKN4base11CommandLineE

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.policy::CommandLinePolicyProvider"* @_ZN6policy25CommandLinePolicyProvider15CreateIfAllowedERKN4base11CommandLineEN12version_info7ChannelE(%"class.base::CommandLine"* nocapture readnone dereferenceable(56), i32) local_unnamed_addr #0 align 2 {
  ret %"class.policy::CommandLinePolicyProvider"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.policy::CommandLinePolicyProvider"* @_ZN6policy25CommandLinePolicyProvider16CreateForTestingERKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 208) #7
  %3 = bitcast i8* %2 to %"class.policy::CommandLinePolicyProvider"*
  %4 = bitcast i8* %2 to %"class.policy::ConfigurationPolicyProvider"*
  tail call void @_ZN6policy27ConfigurationPolicyProviderC2Ev(%"class.policy::ConfigurationPolicyProvider"* nonnull %4) #8
  %5 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6policy25CommandLinePolicyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 200
  %7 = bitcast i8* %6 to %"class.policy::PolicyLoaderCommandLine"*
  tail call void @_ZN6policy23PolicyLoaderCommandLineC1ERKN4base11CommandLineE(%"class.policy::PolicyLoaderCommandLine"* %7, %"class.base::CommandLine"* dereferenceable(56) %0) #8
  %8 = bitcast i8* %2 to void (%"class.policy::CommandLinePolicyProvider"*)***
  %9 = load void (%"class.policy::CommandLinePolicyProvider"*)**, void (%"class.policy::CommandLinePolicyProvider"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.policy::CommandLinePolicyProvider"*)*, void (%"class.policy::CommandLinePolicyProvider"*)** %9, i64 8
  %11 = load void (%"class.policy::CommandLinePolicyProvider"*)*, void (%"class.policy::CommandLinePolicyProvider"*)** %10, align 8
  tail call void %11(%"class.policy::CommandLinePolicyProvider"* nonnull %3) #8
  ret %"class.policy::CommandLinePolicyProvider"* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy25CommandLinePolicyProviderD2Ev(%"class.policy::CommandLinePolicyProvider"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6policy25CommandLinePolicyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 2
  tail call void @_ZN6policy23PolicyLoaderCommandLineD1Ev(%"class.policy::PolicyLoaderCommandLine"* %3) #8
  %4 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 0
  tail call void @_ZN6policy27ConfigurationPolicyProviderD2Ev(%"class.policy::ConfigurationPolicyProvider"* %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6policy23PolicyLoaderCommandLineD1Ev(%"class.policy::PolicyLoaderCommandLine"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6policy27ConfigurationPolicyProviderD2Ev(%"class.policy::ConfigurationPolicyProvider"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy25CommandLinePolicyProviderD0Ev(%"class.policy::CommandLinePolicyProvider"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6policy25CommandLinePolicyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 2
  tail call void @_ZN6policy23PolicyLoaderCommandLineD1Ev(%"class.policy::PolicyLoaderCommandLine"* %3) #8
  %4 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 0
  tail call void @_ZN6policy27ConfigurationPolicyProviderD2Ev(%"class.policy::ConfigurationPolicyProvider"* %4) #8
  %5 = bitcast %"class.policy::CommandLinePolicyProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy25CommandLinePolicyProvider15RefreshPoliciesEv(%"class.policy::CommandLinePolicyProvider"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 2
  %3 = tail call %"class.policy::PolicyBundle"* @_ZN6policy23PolicyLoaderCommandLine4LoadEv(%"class.policy::PolicyLoaderCommandLine"* %2) #8
  %4 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 1
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 0
  tail call void @_ZN6policy27ConfigurationPolicyProvider12UpdatePolicyENSt3__110unique_ptrINS_12PolicyBundleENS1_14default_deleteIS3_EEEE(%"class.policy::ConfigurationPolicyProvider"* %5, %"class.policy::PolicyBundle"* %3) #8
  ret void
}

declare %"class.policy::PolicyBundle"* @_ZN6policy23PolicyLoaderCommandLine4LoadEv(%"class.policy::PolicyLoaderCommandLine"*) local_unnamed_addr #5

declare void @_ZN6policy27ConfigurationPolicyProvider12UpdatePolicyENSt3__110unique_ptrINS_12PolicyBundleENS1_14default_deleteIS3_EEEE(%"class.policy::ConfigurationPolicyProvider"*, %"class.policy::PolicyBundle"*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6policy25CommandLinePolicyProvider25IsFirstPolicyLoadCompleteENS_12PolicyDomainE(%"class.policy::CommandLinePolicyProvider"* nocapture readonly, i32) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp ne i8 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy25CommandLinePolicyProviderC2ERKN4base11CommandLineE(%"class.policy::CommandLinePolicyProvider"*, %"class.base::CommandLine"* dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 0
  tail call void @_ZN6policy27ConfigurationPolicyProviderC2Ev(%"class.policy::ConfigurationPolicyProvider"* %3) #8
  %4 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN6policy25CommandLinePolicyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.policy::CommandLinePolicyProvider", %"class.policy::CommandLinePolicyProvider"* %0, i64 0, i32 2
  tail call void @_ZN6policy23PolicyLoaderCommandLineC1ERKN4base11CommandLineE(%"class.policy::PolicyLoaderCommandLine"* %5, %"class.base::CommandLine"* dereferenceable(56) %1) #8
  %6 = bitcast %"class.policy::CommandLinePolicyProvider"* %0 to void (%"class.policy::CommandLinePolicyProvider"*)***
  %7 = load void (%"class.policy::CommandLinePolicyProvider"*)**, void (%"class.policy::CommandLinePolicyProvider"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.policy::CommandLinePolicyProvider"*)*, void (%"class.policy::CommandLinePolicyProvider"*)** %7, i64 8
  %9 = load void (%"class.policy::CommandLinePolicyProvider"*)*, void (%"class.policy::CommandLinePolicyProvider"*)** %8, align 8
  tail call void %9(%"class.policy::CommandLinePolicyProvider"* %0) #8
  ret void
}

declare void @_ZN6policy27ConfigurationPolicyProviderC2Ev(%"class.policy::ConfigurationPolicyProvider"*) unnamed_addr #5

declare void @_ZN6policy23PolicyLoaderCommandLineC1ERKN4base11CommandLineE(%"class.policy::PolicyLoaderCommandLine"*, %"class.base::CommandLine"* dereferenceable(56)) unnamed_addr #5

declare void @_ZN6policy27ConfigurationPolicyProvider23OnSchemaRegistryUpdatedEb(%"class.policy::ConfigurationPolicyProvider"*, i1 zeroext) unnamed_addr #5

declare void @_ZN6policy27ConfigurationPolicyProvider21OnSchemaRegistryReadyEv(%"class.policy::ConfigurationPolicyProvider"*) unnamed_addr #5

declare void @_ZN6policy27ConfigurationPolicyProvider4InitEPNS_14SchemaRegistryE(%"class.policy::ConfigurationPolicyProvider"*, %"class.policy::SchemaRegistry"*) unnamed_addr #5

declare void @_ZN6policy27ConfigurationPolicyProvider8ShutdownEv(%"class.policy::ConfigurationPolicyProvider"*) unnamed_addr #5

declare zeroext i1 @_ZNK6policy27ConfigurationPolicyProvider24IsInitializationCompleteENS_12PolicyDomainE(%"class.policy::ConfigurationPolicyProvider"*, i32) unnamed_addr #5

declare void @_ZN6policy27ConfigurationPolicyProvider11AddObserverEPNS0_8ObserverE(%"class.policy::ConfigurationPolicyProvider"*, %"class.policy::ConfigurationPolicyProvider::Observer"*) unnamed_addr #5

declare void @_ZN6policy27ConfigurationPolicyProvider14RemoveObserverEPNS0_8ObserverE(%"class.policy::ConfigurationPolicyProvider"*, %"class.policy::ConfigurationPolicyProvider::Observer"*) unnamed_addr #5

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
