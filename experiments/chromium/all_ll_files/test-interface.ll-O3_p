; ModuleID = '../../v8/src/inspector/test-interface.cc'
source_filename = "../../v8/src/inspector/test-interface.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8_inspector::V8Inspector" = type { i32 (...)** }
%"class.v8_inspector::V8Debugger" = type { %"class.v8::debug::DebugDelegate", %"class.v8::debug::AsyncEventDelegate", %"class.v8::Isolate"*, %"class.v8_inspector::V8InspectorImpl"*, i32, i32, i32, i64, i8, i8, i32, i32, i32, %"class.v8_inspector::String16", %"class.std::__1::unique_ptr.3", %"class.std::__1::unordered_map", %"class.std::__1::unordered_set", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.52", %"class.std::__1::vector.59", i32, %"class.std::__1::list", %"class.std::__1::unordered_map.70", i8*, i8, i8, i8, i32, i8, [7 x i8], %"class.std::__1::unordered_map.98", i64, %"class.std::__1::unordered_map.126", %"class.std::__1::unique_ptr.154" }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.v8_inspector::V8InspectorImpl" = type { %"class.v8_inspector::V8Inspector", %"class.v8::Isolate"*, %"class.v8_inspector::V8InspectorClient"*, %"class.std::__1::unique_ptr", %"class.v8::Global", i32, i32, i32, i32, i64, %"class.std::__1::unordered_map.163", %"class.std::__1::unordered_map.187", %"class.std::__1::unordered_map.211", %"class.std::__1::unordered_map.235", %"class.std::__1::unordered_map.163", %"class.std::__1::map", %"class.std::__1::unique_ptr.267", %"class.v8_inspector::V8Inspector::Counters"* }
%"class.v8_inspector::V8InspectorClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8_inspector::V8Debugger"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.std::__1::unordered_map.187" = type { %"class.std::__1::__hash_table.188" }
%"class.std::__1::__hash_table.188" = type <{ %"class.std::__1::unique_ptr.189", %"class.std::__1::__compressed_pair.199", %"class.std::__1::__compressed_pair.204", %"class.std::__1::__compressed_pair.207", [4 x i8] }>
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191", %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"struct.std::__1::__hash_node_base.192"** }
%"struct.std::__1::__hash_node_base.192" = type { %"struct.std::__1::__hash_node_base.192"* }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::__bucket_list_deallocator.194" }
%"class.std::__1::__bucket_list_deallocator.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.std::__1::__hash_node_base.192" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { float }
%"class.std::__1::unordered_map.211" = type { %"class.std::__1::__hash_table.212" }
%"class.std::__1::__hash_table.212" = type <{ %"class.std::__1::unique_ptr.213", %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.231", [4 x i8] }>
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215", %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.std::__1::__hash_node_base.216"** }
%"struct.std::__1::__hash_node_base.216" = type { %"struct.std::__1::__hash_node_base.216"* }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.std::__1::__bucket_list_deallocator.218" }
%"class.std::__1::__bucket_list_deallocator.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.std::__1::__hash_node_base.216" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_map.235" = type { %"class.std::__1::__hash_table.236" }
%"class.std::__1::__hash_table.236" = type <{ %"class.std::__1::unique_ptr.237", %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.255", [4 x i8] }>
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239", %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::__hash_node_base.240"** }
%"struct.std::__1::__hash_node_base.240" = type { %"struct.std::__1::__hash_node_base.240"* }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.std::__1::__bucket_list_deallocator.242" }
%"class.std::__1::__bucket_list_deallocator.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.std::__1::__hash_node_base.240" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_map.163" = type { %"class.std::__1::__hash_table.164" }
%"class.std::__1::__hash_table.164" = type <{ %"class.std::__1::unique_ptr.165", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.183", [4 x i8] }>
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167", %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base.168"** }
%"struct.std::__1::__hash_node_base.168" = type { %"struct.std::__1::__hash_node_base.168"* }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::__bucket_list_deallocator.170" }
%"class.std::__1::__bucket_list_deallocator.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base.168" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.v8_inspector::V8Console"* }
%"class.v8_inspector::V8Console" = type { %"class.v8::debug::ConsoleDelegate", %"class.v8_inspector::V8InspectorImpl"* }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8_inspector::V8Inspector::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::Isolate"*, %"class.std::__1::unordered_map.273" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8_inspector::V8Inspector::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unordered_map.273" = type { %"class.std::__1::__hash_table.274" }
%"class.std::__1::__hash_table.274" = type <{ %"class.std::__1::unique_ptr.275", %"class.std::__1::__compressed_pair.285", %"class.std::__1::__compressed_pair.290", %"class.std::__1::__compressed_pair.295", [4 x i8] }>
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277", %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.std::__1::__hash_node_base.278"** }
%"struct.std::__1::__hash_node_base.278" = type { %"struct.std::__1::__hash_node_base.278"* }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.std::__1::__bucket_list_deallocator.280" }
%"class.std::__1::__bucket_list_deallocator.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.std::__1::__hash_node_base.278" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.v8_inspector::String16" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" }
%"struct.std::__1::basic_string<unsigned short, std::__1::char_traits<unsigned short>, std::__1::allocator<unsigned short> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.v8_inspector::V8StackTraceImpl"* }
%"class.v8_inspector::V8StackTraceImpl" = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.7", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.23", [4 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.26" }
%"class.std::__1::__hash_table.26" = type <{ %"class.std::__1::unique_ptr.27", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.44", [4 x i8] }>
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29", %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::__hash_node_base.30"** }
%"struct.std::__1::__hash_node_base.30" = type { %"struct.std::__1::__hash_node_base.30"* }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::__bucket_list_deallocator.32" }
%"class.std::__1::__bucket_list_deallocator.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base.30" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8**, i8**, %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i8** }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::shared_ptr" = type opaque
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::shared_ptr"* }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"struct.v8_inspector::V8StackTraceId"*, %"struct.v8_inspector::V8StackTraceId"*, %"class.std::__1::__compressed_pair.61" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair", i8, [7 x i8] }>
%"struct.std::__1::pair" = type { i64, i64 }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.v8_inspector::V8StackTraceId"* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.66" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.70" = type { %"class.std::__1::__hash_table.71" }
%"class.std::__1::__hash_table.71" = type <{ %"class.std::__1::unique_ptr.72", %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.92", [4 x i8] }>
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74", %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base.75"** }
%"struct.std::__1::__hash_node_base.75" = type { %"struct.std::__1::__hash_node_base.75"* }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.std::__1::__bucket_list_deallocator.77" }
%"class.std::__1::__bucket_list_deallocator.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::__hash_node_base.75" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_map.98" = type { %"class.std::__1::__hash_table.99" }
%"class.std::__1::__hash_table.99" = type <{ %"class.std::__1::unique_ptr.100", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", [4 x i8] }>
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102", %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.std::__1::__hash_node_base.103"** }
%"struct.std::__1::__hash_node_base.103" = type { %"struct.std::__1::__hash_node_base.103"* }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.std::__1::__bucket_list_deallocator.105" }
%"class.std::__1::__bucket_list_deallocator.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base.103" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unordered_map.126" = type { %"class.std::__1::__hash_table.127" }
%"class.std::__1::__hash_table.127" = type <{ %"class.std::__1::unique_ptr.128", %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.148", [4 x i8] }>
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130", %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::__hash_node_base.131"** }
%"struct.std::__1::__hash_node_base.131" = type { %"struct.std::__1::__hash_node_base.131"* }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.std::__1::__bucket_list_deallocator.133" }
%"class.std::__1::__bucket_list_deallocator.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::__hash_node_base.131" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8_inspector::protocol::Runtime::Backend::TerminateExecutionCallback"* }
%"class.v8_inspector::protocol::Runtime::Backend::TerminateExecutionCallback" = type { i32 (...)** }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector28SetMaxAsyncTaskStacksForTestEPNS_11V8InspectorEi(%"class.v8_inspector::V8Inspector"* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.v8_inspector::V8Inspector", %"class.v8_inspector::V8Inspector"* %0, i64 3
  %4 = bitcast %"class.v8_inspector::V8Inspector"* %3 to %"class.v8_inspector::V8Debugger"**
  %5 = load %"class.v8_inspector::V8Debugger"*, %"class.v8_inspector::V8Debugger"** %4, align 8
  tail call void @_ZN12v8_inspector10V8Debugger28setMaxAsyncTaskStacksForTestEi(%"class.v8_inspector::V8Debugger"* %5, i32 %1) #2
  ret void
}

declare void @_ZN12v8_inspector10V8Debugger28setMaxAsyncTaskStacksForTestEi(%"class.v8_inspector::V8Debugger"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12v8_inspector31DumpAsyncTaskStacksStateForTestEPNS_11V8InspectorE(%"class.v8_inspector::V8Inspector"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.v8_inspector::V8Inspector", %"class.v8_inspector::V8Inspector"* %0, i64 3
  %3 = bitcast %"class.v8_inspector::V8Inspector"* %2 to %"class.v8_inspector::V8Debugger"**
  %4 = load %"class.v8_inspector::V8Debugger"*, %"class.v8_inspector::V8Debugger"** %3, align 8
  tail call void @_ZN12v8_inspector10V8Debugger31dumpAsyncTaskStacksStateForTestEv(%"class.v8_inspector::V8Debugger"* %4) #2
  ret void
}

declare void @_ZN12v8_inspector10V8Debugger31dumpAsyncTaskStacksStateForTestEv(%"class.v8_inspector::V8Debugger"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
