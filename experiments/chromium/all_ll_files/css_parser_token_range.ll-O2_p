; ModuleID = '../../third_party/blink/renderer/core/css/parser/css_parser_token_range.cc'
source_filename = "../../third_party/blink/renderer/core/css/parser/css_parser_token_range.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%union.anon.1 = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }

@_ZN5blink25g_static_eof_tokenStorageE = hidden global [3 x i8*] zeroinitializer, align 16
@_ZN5blink18g_static_eof_tokenE = hidden local_unnamed_addr constant %"class.blink::CSSParserToken"* bitcast ([3 x i8*]* @_ZN5blink25g_static_eof_tokenStorageE to %"class.blink::CSSParserToken"*), align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19CSSParserTokenRange18InitStaticEOFTokenEv() local_unnamed_addr #0 align 2 {
  %1 = load i32, i32* bitcast ([3 x i8*]* @_ZN5blink25g_static_eof_tokenStorageE to i32*), align 16
  %2 = and i32 %1, -256
  %3 = or i32 %2, 31
  store i32 %3, i32* bitcast ([3 x i8*]* @_ZN5blink25g_static_eof_tokenStorageE to i32*), align 16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZNK5blink19CSSParserTokenRange12MakeSubRangeEPKNS_14CSSParserTokenES3_(%"class.blink::CSSParserTokenRange"* nocapture readonly, %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"*) local_unnamed_addr #1 align 2 {
  %4 = icmp eq %"class.blink::CSSParserToken"* %1, bitcast ([3 x i8*]* @_ZN5blink25g_static_eof_tokenStorageE to %"class.blink::CSSParserToken"*)
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %7 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %6, align 8
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi %"class.blink::CSSParserToken"* [ %7, %5 ], [ %1, %3 ]
  %10 = icmp eq %"class.blink::CSSParserToken"* %2, bitcast ([3 x i8*]* @_ZN5blink25g_static_eof_tokenStorageE to %"class.blink::CSSParserToken"*)
  br i1 %10, label %11, label %14

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %13 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  br label %14

14:                                               ; preds = %11, %8
  %15 = phi %"class.blink::CSSParserToken"* [ %13, %11 ], [ %2, %8 ]
  %16 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } undef, %"class.blink::CSSParserToken"* %9, 0
  %17 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %16, %"class.blink::CSSParserToken"* %15, 1
  ret { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } @_ZN5blink19CSSParserTokenRange12ConsumeBlockEv(%"class.blink::CSSParserTokenRange"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %3 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %4, align 8
  %6 = icmp ult %"class.blink::CSSParserToken"* %3, %5
  %7 = select i1 %6, %"class.blink::CSSParserToken"* %3, %"class.blink::CSSParserToken"* bitcast ([3 x i8*]* @_ZN5blink25g_static_eof_tokenStorageE to %"class.blink::CSSParserToken"*)
  %8 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 1
  br label %9

9:                                                ; preds = %32, %1
  %10 = phi %"class.blink::CSSParserToken"* [ %3, %1 ], [ %16, %32 ]
  %11 = phi i32 [ 0, %1 ], [ %30, %32 ]
  %12 = icmp eq %"class.blink::CSSParserToken"* %10, %5
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %10, i64 1
  store %"class.blink::CSSParserToken"* %14, %"class.blink::CSSParserToken"** %2, align 8
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::CSSParserToken"* [ %14, %13 ], [ %10, %9 ]
  %17 = phi %"class.blink::CSSParserToken"* [ %10, %13 ], [ bitcast ([3 x i8*]* @_ZN5blink25g_static_eof_tokenStorageE to %"class.blink::CSSParserToken"*), %9 ]
  %18 = bitcast %"class.blink::CSSParserToken"* %17 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = lshr i32 %19, 6
  %21 = and i32 %20, 3
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %15
  %24 = add i32 %11, 1
  br label %29

25:                                               ; preds = %15
  %26 = icmp eq i32 %21, 2
  %27 = zext i1 %26 to i32
  %28 = sub i32 %11, %27
  br label %29

29:                                               ; preds = %25, %23
  %30 = phi i32 [ %24, %23 ], [ %28, %25 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %29
  %33 = icmp ult %"class.blink::CSSParserToken"* %16, %5
  br i1 %33, label %9, label %36

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %16, i64 -1
  br label %36

36:                                               ; preds = %32, %34
  %37 = phi %"class.blink::CSSParserToken"* [ %35, %34 ], [ %16, %32 ]
  %38 = icmp eq %"class.blink::CSSParserToken"* %8, bitcast ([3 x i8*]* @_ZN5blink25g_static_eof_tokenStorageE to %"class.blink::CSSParserToken"*)
  %39 = select i1 %38, %"class.blink::CSSParserToken"* %5, %"class.blink::CSSParserToken"* %8
  %40 = icmp eq %"class.blink::CSSParserToken"* %37, bitcast ([3 x i8*]* @_ZN5blink25g_static_eof_tokenStorageE to %"class.blink::CSSParserToken"*)
  %41 = select i1 %40, %"class.blink::CSSParserToken"* %5, %"class.blink::CSSParserToken"* %37
  %42 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } undef, %"class.blink::CSSParserToken"* %39, 0
  %43 = insertvalue { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %42, %"class.blink::CSSParserToken"* %41, 1
  ret { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* } %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19CSSParserTokenRange21ConsumeComponentValueEv(%"class.blink::CSSParserTokenRange"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %4 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %2, align 8
  %5 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %3, align 8
  br label %6

6:                                                ; preds = %26, %1
  %7 = phi %"class.blink::CSSParserToken"* [ %4, %1 ], [ %13, %26 ]
  %8 = phi i32 [ 0, %1 ], [ %27, %26 ]
  %9 = icmp eq %"class.blink::CSSParserToken"* %7, %5
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %7, i64 1
  store %"class.blink::CSSParserToken"* %11, %"class.blink::CSSParserToken"** %2, align 8
  br label %12

12:                                               ; preds = %6, %10
  %13 = phi %"class.blink::CSSParserToken"* [ %11, %10 ], [ %7, %6 ]
  %14 = phi %"class.blink::CSSParserToken"* [ %7, %10 ], [ bitcast ([3 x i8*]* @_ZN5blink25g_static_eof_tokenStorageE to %"class.blink::CSSParserToken"*), %6 ]
  %15 = bitcast %"class.blink::CSSParserToken"* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = lshr i32 %16, 6
  %18 = and i32 %17, 3
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %12
  %21 = add i32 %8, 1
  br label %26

22:                                               ; preds = %12
  %23 = icmp eq i32 %18, 2
  %24 = zext i1 %23 to i32
  %25 = sub i32 %8, %24
  br label %26

26:                                               ; preds = %22, %20
  %27 = phi i32 [ %21, %20 ], [ %25, %22 ]
  %28 = icmp ne i32 %27, 0
  %29 = icmp ult %"class.blink::CSSParserToken"* %13, %5
  %30 = and i1 %28, %29
  br i1 %30, label %6, label %31

31:                                               ; preds = %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink19CSSParserTokenRange9SerializeEv(%"class.blink::CSSParserTokenRange"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 48, i1 false)
  %4 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %6 = bitcast %union.anon.1* %5 to i8*
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %8, align 4
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 0
  %11 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %0, i64 0, i32 1
  %13 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %14 = icmp eq %"class.blink::CSSParserToken"* %11, %13
  br i1 %14, label %15, label %33

15:                                               ; preds = %33, %1
  %16 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #5
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #5
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #5
  br label %32

32:                                               ; preds = %15, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #5
  ret %"class.WTF::StringImpl"* %16

33:                                               ; preds = %1, %33
  %34 = phi %"class.blink::CSSParserToken"* [ %35, %33 ], [ %11, %1 ]
  call void @_ZNK5blink14CSSParserToken9SerializeERN3WTF13StringBuilderE(%"class.blink::CSSParserToken"* %34, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %2) #5
  %35 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %34, i64 1
  %36 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %12, align 8
  %37 = icmp eq %"class.blink::CSSParserToken"* %35, %36
  br i1 %37, label %15, label %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK5blink14CSSParserToken9SerializeERN3WTF13StringBuilderE(%"class.blink::CSSParserToken"*, %"class.WTF::StringBuilder"* dereferenceable(48)) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
