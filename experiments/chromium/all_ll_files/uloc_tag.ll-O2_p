; ModuleID = '../../third_party/icu/source/common/uloc_tag.cpp'
source_filename = "../../third_party/icu/source/common/uloc_tag.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::CheckedArrayByteSink" = type <{ %"class.icu_69::ByteSink", i8*, i32, i32, i32, i8, [3 x i8] }>
%"class.icu_69::ByteSink" = type { i32 (...)** }
%"class.icu_69::MemoryPool" = type { i32, %"class.icu_69::MaybeStackArray.1" }
%"class.icu_69::MaybeStackArray.1" = type { %struct.AttributeListEntry**, i32, i8, [8 x %struct.AttributeListEntry*] }
%struct.AttributeListEntry = type { i8*, %struct.AttributeListEntry* }
%"class.icu_69::MemoryPool.2" = type { i32, %"class.icu_69::MaybeStackArray.3" }
%"class.icu_69::MaybeStackArray.3" = type { %struct.ExtensionListEntry**, i32, i8, [8 x %struct.ExtensionListEntry*] }
%struct.ExtensionListEntry = type { i8*, i8*, %struct.ExtensionListEntry* }
%"class.icu_69::MemoryPool.4" = type { i32, %"class.icu_69::MaybeStackArray.5" }
%"class.icu_69::MaybeStackArray.5" = type { %"class.icu_69::CharString"**, i32, i8, [8 x %"class.icu_69::CharString"*] }
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::CharStringByteSink" = type { %"class.icu_69::ByteSink", %"class.icu_69::CharString"* }
%struct.UEnumeration = type opaque
%struct.VariantListEntry = type { i8*, %struct.VariantListEntry* }
%struct.ULanguageTag = type { i8*, i8*, [3 x i8*], i8*, i8*, %struct.VariantListEntry*, %struct.ExtensionListEntry*, i8*, i8* }
%"class.icu_69::StringPiece" = type <{ i8*, i32, [4 x i8] }>

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

$_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRA100_cRiR10UErrorCodeEEEPS1_DpOT_ = comdat any

$_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRS1_R10UErrorCodeEEEPS1_DpOT_ = comdat any

$_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJPcRiR10UErrorCodeEEEPS1_DpOT_ = comdat any

$_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJEEEPS1_DpOT_ = comdat any

$_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRA3_cRiR10UErrorCodeEEEPS1_DpOT_ = comdat any

$_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRA128_cRiR10UErrorCodeEEEPS1_DpOT_ = comdat any

@.str = private unnamed_addr constant [7 x i8] c"und-x-\00", align 1
@_ZL8LANG_UND = internal constant [4 x i8] c"und\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"_\00", align 1
@_ZL15DEPRECATEDLANGS = internal constant [156 x [4 x i8]] [[4 x i8] c"in\00\00", [4 x i8] c"id\00\00", [4 x i8] c"iw\00\00", [4 x i8] c"he\00\00", [4 x i8] c"ji\00\00", [4 x i8] c"yi\00\00", [4 x i8] c"jw\00\00", [4 x i8] c"jv\00\00", [4 x i8] c"mo\00\00", [4 x i8] c"ro\00\00", [4 x i8] c"aam\00", [4 x i8] c"aas\00", [4 x i8] c"adp\00", [4 x i8] c"dz\00\00", [4 x i8] c"aue\00", [4 x i8] c"ktz\00", [4 x i8] c"ayx\00", [4 x i8] c"nun\00", [4 x i8] c"bgm\00", [4 x i8] c"bcg\00", [4 x i8] c"bjd\00", [4 x i8] c"drl\00", [4 x i8] c"ccq\00", [4 x i8] c"rki\00", [4 x i8] c"cjr\00", [4 x i8] c"mom\00", [4 x i8] c"cka\00", [4 x i8] c"cmr\00", [4 x i8] c"cmk\00", [4 x i8] c"xch\00", [4 x i8] c"coy\00", [4 x i8] c"pij\00", [4 x i8] c"cqu\00", [4 x i8] c"quh\00", [4 x i8] c"drh\00", [4 x i8] c"khk\00", [4 x i8] c"drw\00", [4 x i8] c"prs\00", [4 x i8] c"gav\00", [4 x i8] c"dev\00", [4 x i8] c"gfx\00", [4 x i8] c"vaj\00", [4 x i8] c"ggn\00", [4 x i8] c"gvr\00", [4 x i8] c"gti\00", [4 x i8] c"nyc\00", [4 x i8] c"guv\00", [4 x i8] c"duz\00", [4 x i8] c"hrr\00", [4 x i8] c"jal\00", [4 x i8] c"ibi\00", [4 x i8] c"opa\00", [4 x i8] c"ilw\00", [4 x i8] c"gal\00", [4 x i8] c"jeg\00", [4 x i8] c"oyb\00", [4 x i8] c"kgc\00", [4 x i8] c"tdf\00", [4 x i8] c"kgh\00", [4 x i8] c"kml\00", [4 x i8] c"koj\00", [4 x i8] c"kwv\00", [4 x i8] c"krm\00", [4 x i8] c"bmf\00", [4 x i8] c"ktr\00", [4 x i8] c"dtp\00", [4 x i8] c"kvs\00", [4 x i8] c"gdj\00", [4 x i8] c"kwq\00", [4 x i8] c"yam\00", [4 x i8] c"kxe\00", [4 x i8] c"tvd\00", [4 x i8] c"kzj\00", [4 x i8] c"dtp\00", [4 x i8] c"kzt\00", [4 x i8] c"dtp\00", [4 x i8] c"lii\00", [4 x i8] c"raq\00", [4 x i8] c"lmm\00", [4 x i8] c"rmx\00", [4 x i8] c"meg\00", [4 x i8] c"cir\00", [4 x i8] c"mst\00", [4 x i8] c"mry\00", [4 x i8] c"mwj\00", [4 x i8] c"vaj\00", [4 x i8] c"myt\00", [4 x i8] c"mry\00", [4 x i8] c"nad\00", [4 x i8] c"xny\00", [4 x i8] c"ncp\00", [4 x i8] c"kdz\00", [4 x i8] c"nnx\00", [4 x i8] c"ngv\00", [4 x i8] c"nts\00", [4 x i8] c"pij\00", [4 x i8] c"oun\00", [4 x i8] c"vaj\00", [4 x i8] c"pcr\00", [4 x i8] c"adx\00", [4 x i8] c"pmc\00", [4 x i8] c"huw\00", [4 x i8] c"pmu\00", [4 x i8] c"phr\00", [4 x i8] c"ppa\00", [4 x i8] c"bfy\00", [4 x i8] c"ppr\00", [4 x i8] c"lcq\00", [4 x i8] c"pry\00", [4 x i8] c"prt\00", [4 x i8] c"puz\00", [4 x i8] c"pub\00", [4 x i8] c"sca\00", [4 x i8] c"hle\00", [4 x i8] c"skk\00", [4 x i8] c"oyb\00", [4 x i8] c"tdu\00", [4 x i8] c"dtp\00", [4 x i8] c"thc\00", [4 x i8] c"tpo\00", [4 x i8] c"thx\00", [4 x i8] c"oyb\00", [4 x i8] c"tie\00", [4 x i8] c"ras\00", [4 x i8] c"tkk\00", [4 x i8] c"twm\00", [4 x i8] c"tlw\00", [4 x i8] c"weo\00", [4 x i8] c"tmp\00", [4 x i8] c"tyj\00", [4 x i8] c"tne\00", [4 x i8] c"kak\00", [4 x i8] c"tnf\00", [4 x i8] c"prs\00", [4 x i8] c"tsf\00", [4 x i8] c"taj\00", [4 x i8] c"uok\00", [4 x i8] c"ema\00", [4 x i8] c"xba\00", [4 x i8] c"cax\00", [4 x i8] c"xia\00", [4 x i8] c"acn\00", [4 x i8] c"xkh\00", [4 x i8] c"waw\00", [4 x i8] c"xsj\00", [4 x i8] c"suj\00", [4 x i8] c"ybd\00", [4 x i8] c"rki\00", [4 x i8] c"yma\00", [4 x i8] c"lrr\00", [4 x i8] c"ymt\00", [4 x i8] c"mtm\00", [4 x i8] c"yos\00", [4 x i8] c"zom\00", [4 x i8] c"yuu\00", [4 x i8] c"yug\00"], align 16
@.str.2 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@_ZL17DEPRECATEDREGIONS = internal constant [12 x [3 x i8]] [[3 x i8] c"BU\00", [3 x i8] c"MM\00", [3 x i8] c"DD\00", [3 x i8] c"DE\00", [3 x i8] c"FX\00", [3 x i8] c"FR\00", [3 x i8] c"TP\00", [3 x i8] c"TL\00", [3 x i8] c"YD\00", [3 x i8] c"YE\00", [3 x i8] c"ZR\00", [3 x i8] c"CD\00"], align 16
@_ZL11POSIX_VALUE = internal constant [6 x i8] c"posix\00", align 1
@_ZL20LOCALE_ATTRIBUTE_KEY = internal constant [10 x i8] c"attribute\00", align 1
@_ZL9POSIX_KEY = internal constant [3 x i8] c"va\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"-u\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.5 = private constant [4 x i8] c"yes\00", align 1
@_ZL14PRIVATEUSE_KEY = internal constant [2 x i8] c"x\00", align 1
@_ZL22PRIVUSE_VARIANT_PREFIX = internal constant [9 x i8] c"lvariant\00", align 1
@_ZL6LEGACY = internal unnamed_addr constant [50 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0)], align 16
@_ZL9REDUNDANT = internal unnamed_addr constant [52 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.105, i32 0, i32 0)], align 16
@_ZL5EMPTY = internal constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"art-lojban\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"jbo\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"en-gb-oed\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"en-gb-oxendict\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"i-ami\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"ami\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"i-bnn\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"bnn\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"i-hak\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"hak\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"i-klingon\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"tlh\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"i-lux\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"lb\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"i-navajo\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"nv\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"i-pwn\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"pwn\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"i-tao\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"tao\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"i-tay\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"tay\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"i-tsu\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"tsu\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c"no-bok\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"nb\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"no-nyn\00", align 1
@.str.33 = private unnamed_addr constant [3 x i8] c"nn\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sgn-be-fr\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"sfb\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"sgn-be-nl\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"vgt\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"sgn-ch-de\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"sgg\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"zh-guoyu\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"cmn\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"zh-hakka\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"zh-min-nan\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"nan\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"zh-xiang\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"hsn\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"i-default\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"en-x-i-default\00", align 1
@.str.49 = private unnamed_addr constant [11 x i8] c"i-enochian\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"und-x-i-enochian\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"i-mingo\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"see-x-i-mingo\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"zh-min\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"nan-x-zh-min\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"sgn-br\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"bzs\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"sgn-co\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"csn\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"sgn-de\00", align 1
@.str.60 = private unnamed_addr constant [4 x i8] c"gsg\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"sgn-dk\00", align 1
@.str.62 = private unnamed_addr constant [4 x i8] c"dsl\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"sgn-es\00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"ssp\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"sgn-fr\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"fsl\00", align 1
@.str.67 = private unnamed_addr constant [7 x i8] c"sgn-gb\00", align 1
@.str.68 = private unnamed_addr constant [4 x i8] c"bfi\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"sgn-gr\00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"gss\00", align 1
@.str.71 = private unnamed_addr constant [7 x i8] c"sgn-ie\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"isg\00", align 1
@.str.73 = private unnamed_addr constant [7 x i8] c"sgn-it\00", align 1
@.str.74 = private unnamed_addr constant [4 x i8] c"ise\00", align 1
@.str.75 = private unnamed_addr constant [7 x i8] c"sgn-jp\00", align 1
@.str.76 = private unnamed_addr constant [4 x i8] c"jsl\00", align 1
@.str.77 = private unnamed_addr constant [7 x i8] c"sgn-mx\00", align 1
@.str.78 = private unnamed_addr constant [4 x i8] c"mfs\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"sgn-ni\00", align 1
@.str.80 = private unnamed_addr constant [4 x i8] c"ncs\00", align 1
@.str.81 = private unnamed_addr constant [7 x i8] c"sgn-nl\00", align 1
@.str.82 = private unnamed_addr constant [4 x i8] c"dse\00", align 1
@.str.83 = private unnamed_addr constant [7 x i8] c"sgn-no\00", align 1
@.str.84 = private unnamed_addr constant [4 x i8] c"nsl\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"sgn-pt\00", align 1
@.str.86 = private unnamed_addr constant [4 x i8] c"psr\00", align 1
@.str.87 = private unnamed_addr constant [7 x i8] c"sgn-se\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c"swl\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c"sgn-us\00", align 1
@.str.90 = private unnamed_addr constant [4 x i8] c"ase\00", align 1
@.str.91 = private unnamed_addr constant [7 x i8] c"sgn-za\00", align 1
@.str.92 = private unnamed_addr constant [4 x i8] c"sfs\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"zh-cmn\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"zh-cmn-hans\00", align 1
@.str.95 = private unnamed_addr constant [9 x i8] c"cmn-hans\00", align 1
@.str.96 = private unnamed_addr constant [12 x i8] c"zh-cmn-hant\00", align 1
@.str.97 = private unnamed_addr constant [9 x i8] c"cmn-hant\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"zh-gan\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"gan\00", align 1
@.str.100 = private unnamed_addr constant [7 x i8] c"zh-wuu\00", align 1
@.str.101 = private unnamed_addr constant [4 x i8] c"wuu\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"zh-yue\00", align 1
@.str.103 = private unnamed_addr constant [4 x i8] c"yue\00", align 1
@.str.104 = private unnamed_addr constant [23 x i8] c"ja-latn-hepburn-heploc\00", align 1
@.str.105 = private unnamed_addr constant [16 x i8] c"ja-latn-alalc97\00", align 1
@_ZL6_POSIX = internal constant [7 x i8] c"_POSIX\00", align 1
@.str.106 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.107 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.108 = private unnamed_addr constant [2 x i8] c"=\00", align 1

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #10
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #11
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #11
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #11
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #11
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #10
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #10
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #11
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isLanguageSubtag_69(i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = add i32 %8, -2
  %10 = icmp ult i32 %9, 7
  br i1 %10, label %11, label %22

11:                                               ; preds = %7
  %12 = zext i32 %8 to i64
  br label %15

13:                                               ; preds = %15
  %14 = icmp eq i64 %21, %12
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %11
  %16 = phi i64 [ 0, %11 ], [ %21, %13 ]
  %17 = getelementptr inbounds i8, i8* %0, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %18) #11
  %20 = icmp eq i8 %19, 0
  %21 = add nuw nsw i64 %16, 1
  br i1 %20, label %22, label %13

22:                                               ; preds = %15, %13, %7
  %23 = phi i8 [ 0, %7 ], [ 0, %15 ], [ 1, %13 ]
  ret i8 %23
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isScriptSubtag_69(i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %10, label %19

10:                                               ; preds = %7
  %11 = load i8, i8* %0, align 1
  %12 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %11) #11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds i8, i8* %0, i64 1
  %16 = load i8, i8* %15, align 1
  %17 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %16) #11
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %10, %14, %20, %7
  ret i8 0

20:                                               ; preds = %14
  %21 = getelementptr inbounds i8, i8* %0, i64 2
  %22 = load i8, i8* %21, align 1
  %23 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %22) #11
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %19, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8, i8* %0, i64 3
  %27 = load i8, i8* %26, align 1
  %28 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %27) #11
  %29 = icmp ne i8 %28, 0
  %30 = zext i1 %29 to i8
  ret i8 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isRegionSubtag_69(i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  switch i32 %8, label %32 [
    i32 2, label %9
    i32 3, label %18
  ]

9:                                                ; preds = %7
  %10 = load i8, i8* %0, align 1
  %11 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %10) #11
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %32, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %15) #11
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %32, label %33

18:                                               ; preds = %7
  %19 = load i8, i8* %0, align 1
  %20 = add i8 %19, -48
  %21 = icmp ult i8 %20, 10
  br i1 %21, label %22, label %32

22:                                               ; preds = %18
  %23 = getelementptr inbounds i8, i8* %0, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = add i8 %24, -48
  %26 = icmp ult i8 %25, 10
  br i1 %26, label %27, label %32

27:                                               ; preds = %22
  %28 = getelementptr inbounds i8, i8* %0, i64 2
  %29 = load i8, i8* %28, align 1
  %30 = add i8 %29, -48
  %31 = icmp ugt i8 %30, 9
  br i1 %31, label %32, label %33

32:                                               ; preds = %9, %13, %18, %22, %7, %27
  br label %33

33:                                               ; preds = %13, %27, %32
  %34 = phi i8 [ 0, %32 ], [ 1, %27 ], [ 1, %13 ]
  ret i8 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isVariantSubtags_69(i8*, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = ptrtoint i8* %0 to i64
  %10 = sext i32 %8 to i64
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %12, label %125

12:                                               ; preds = %7, %69
  %13 = phi i64 [ %72, %69 ], [ %9, %7 ]
  %14 = phi i8* [ %70, %69 ], [ null, %7 ]
  %15 = phi i8* [ %71, %69 ], [ %0, %7 ]
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 45
  %18 = icmp eq i8* %14, null
  br i1 %17, label %19, label %67

19:                                               ; preds = %12
  br i1 %18, label %125, label %20

20:                                               ; preds = %19
  %21 = ptrtoint i8* %14 to i64
  %22 = sub i64 %13, %21
  %23 = trunc i64 %22 to i32
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = tail call i64 @strlen(i8* nonnull %14) #12
  %27 = trunc i64 %26 to i32
  br label %28

28:                                               ; preds = %25, %20
  %29 = phi i32 [ %23, %20 ], [ %27, %25 ]
  %30 = add i32 %29, -5
  %31 = icmp ult i32 %30, 4
  br i1 %31, label %32, label %47

32:                                               ; preds = %28
  %33 = zext i32 %29 to i64
  br label %34

34:                                               ; preds = %44, %32
  %35 = phi i64 [ 0, %32 ], [ %45, %44 ]
  %36 = getelementptr inbounds i8, i8* %14, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %37) #11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = load i8, i8* %36, align 1
  %42 = add i8 %41, -48
  %43 = icmp ult i8 %42, 10
  br i1 %43, label %44, label %47

44:                                               ; preds = %40, %34
  %45 = add nuw nsw i64 %35, 1
  %46 = icmp eq i64 %45, %33
  br i1 %46, label %69, label %34

47:                                               ; preds = %40, %28
  %48 = icmp eq i32 %29, 4
  br i1 %48, label %49, label %125

49:                                               ; preds = %47
  %50 = load i8, i8* %14, align 1
  %51 = add i8 %50, -48
  %52 = icmp ult i8 %51, 10
  br i1 %52, label %53, label %125

53:                                               ; preds = %49
  %54 = getelementptr inbounds i8, i8* %14, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %55) #11
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %62

58:                                               ; preds = %53
  %59 = load i8, i8* %54, align 1
  %60 = add i8 %59, -48
  %61 = icmp ult i8 %60, 10
  br i1 %61, label %62, label %125

62:                                               ; preds = %58, %53
  %63 = getelementptr inbounds i8, i8* %14, i64 2
  %64 = load i8, i8* %63, align 1
  %65 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %64) #11
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %141, label %145

67:                                               ; preds = %12
  %68 = select i1 %18, i8* %15, i8* %14
  br label %69

69:                                               ; preds = %44, %145, %150, %67
  %70 = phi i8* [ %68, %67 ], [ null, %150 ], [ null, %145 ], [ null, %44 ]
  %71 = getelementptr inbounds i8, i8* %15, i64 1
  %72 = ptrtoint i8* %71 to i64
  %73 = sub i64 %72, %9
  %74 = icmp slt i64 %73, %10
  br i1 %74, label %12, label %75

75:                                               ; preds = %69
  %76 = icmp eq i8* %70, null
  br i1 %76, label %125, label %77

77:                                               ; preds = %75
  %78 = ptrtoint i8* %71 to i64
  %79 = ptrtoint i8* %70 to i64
  %80 = sub i64 %78, %79
  %81 = trunc i64 %80 to i32
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = tail call i64 @strlen(i8* nonnull %70) #12
  %85 = trunc i64 %84 to i32
  br label %86

86:                                               ; preds = %83, %77
  %87 = phi i32 [ %81, %77 ], [ %85, %83 ]
  %88 = add i32 %87, -5
  %89 = icmp ult i32 %88, 4
  br i1 %89, label %90, label %105

90:                                               ; preds = %86
  %91 = zext i32 %87 to i64
  br label %92

92:                                               ; preds = %102, %90
  %93 = phi i64 [ 0, %90 ], [ %103, %102 ]
  %94 = getelementptr inbounds i8, i8* %70, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %95) #11
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %92
  %99 = load i8, i8* %94, align 1
  %100 = add i8 %99, -48
  %101 = icmp ult i8 %100, 10
  br i1 %101, label %102, label %105

102:                                              ; preds = %98, %92
  %103 = add nuw nsw i64 %93, 1
  %104 = icmp eq i64 %103, %91
  br i1 %104, label %125, label %92

105:                                              ; preds = %98, %86
  %106 = icmp eq i32 %87, 4
  br i1 %106, label %107, label %125

107:                                              ; preds = %105
  %108 = load i8, i8* %70, align 1
  %109 = add i8 %108, -48
  %110 = icmp ult i8 %109, 10
  br i1 %110, label %111, label %125

111:                                              ; preds = %107
  %112 = getelementptr inbounds i8, i8* %70, i64 1
  %113 = load i8, i8* %112, align 1
  %114 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %113) #11
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %111
  %117 = load i8, i8* %112, align 1
  %118 = add i8 %117, -48
  %119 = icmp ult i8 %118, 10
  br i1 %119, label %120, label %125

120:                                              ; preds = %116, %111
  %121 = getelementptr inbounds i8, i8* %70, i64 2
  %122 = load i8, i8* %121, align 1
  %123 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %122) #11
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %127, label %131

125:                                              ; preds = %47, %49, %19, %58, %141, %150, %102, %116, %127, %136, %140, %107, %105, %7, %75
  %126 = phi i8 [ 0, %75 ], [ 0, %7 ], [ 0, %107 ], [ 0, %105 ], [ 0, %116 ], [ 0, %127 ], [ 0, %136 ], [ 1, %140 ], [ 1, %102 ], [ 0, %150 ], [ 0, %141 ], [ 0, %58 ], [ 0, %19 ], [ 0, %49 ], [ 0, %47 ]
  ret i8 %126

127:                                              ; preds = %120
  %128 = load i8, i8* %121, align 1
  %129 = add i8 %128, -48
  %130 = icmp ult i8 %129, 10
  br i1 %130, label %131, label %125

131:                                              ; preds = %127, %120
  %132 = getelementptr inbounds i8, i8* %70, i64 3
  %133 = load i8, i8* %132, align 1
  %134 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %133) #11
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %131
  %137 = load i8, i8* %132, align 1
  %138 = add i8 %137, -48
  %139 = icmp ult i8 %138, 10
  br i1 %139, label %140, label %125

140:                                              ; preds = %136, %131
  br label %125

141:                                              ; preds = %62
  %142 = load i8, i8* %63, align 1
  %143 = add i8 %142, -48
  %144 = icmp ult i8 %143, 10
  br i1 %144, label %145, label %125

145:                                              ; preds = %141, %62
  %146 = getelementptr inbounds i8, i8* %14, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %147) #11
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %69

150:                                              ; preds = %145
  %151 = load i8, i8* %146, align 1
  %152 = add i8 %151, -48
  %153 = icmp ult i8 %152, 10
  br i1 %153, label %69, label %125
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZL16_isVariantSubtagPKci(i8* nocapture readonly, i32) unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = tail call fastcc signext i8 @_ZL34_isAlphaNumericStringLimitedLengthPKciii(i8* %0, i32 %8, i32 5)
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %31

11:                                               ; preds = %7
  %12 = icmp eq i32 %8, 4
  br i1 %12, label %13, label %31

13:                                               ; preds = %11
  %14 = load i8, i8* %0, align 1
  %15 = add i8 %14, -48
  %16 = icmp ult i8 %15, 10
  br i1 %16, label %17, label %31

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %0, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %19) #11
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = load i8, i8* %18, align 1
  %24 = add i8 %23, -48
  %25 = icmp ult i8 %24, 10
  br i1 %25, label %26, label %31

26:                                               ; preds = %22, %17
  %27 = getelementptr inbounds i8, i8* %0, i64 2
  %28 = load i8, i8* %27, align 1
  %29 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %28) #11
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %33, label %37

31:                                               ; preds = %22, %33, %42, %46, %11, %13, %7
  %32 = phi i8 [ 1, %7 ], [ 0, %13 ], [ 0, %11 ], [ 0, %22 ], [ 0, %33 ], [ 0, %42 ], [ 1, %46 ]
  ret i8 %32

33:                                               ; preds = %26
  %34 = load i8, i8* %27, align 1
  %35 = add i8 %34, -48
  %36 = icmp ult i8 %35, 10
  br i1 %36, label %37, label %31

37:                                               ; preds = %33, %26
  %38 = getelementptr inbounds i8, i8* %0, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %39) #11
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = load i8, i8* %38, align 1
  %44 = add i8 %43, -48
  %45 = icmp ult i8 %44, 10
  br i1 %45, label %46, label %31

46:                                               ; preds = %42, %37
  br label %31
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isExtensionSubtags_69(i8*, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = ptrtoint i8* %0 to i64
  %10 = sext i32 %8 to i64
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %12, label %85

12:                                               ; preds = %7, %49
  %13 = phi i64 [ %52, %49 ], [ %9, %7 ]
  %14 = phi i8* [ %50, %49 ], [ null, %7 ]
  %15 = phi i8* [ %51, %49 ], [ %0, %7 ]
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 45
  %18 = icmp eq i8* %14, null
  br i1 %17, label %19, label %47

19:                                               ; preds = %12
  br i1 %18, label %85, label %20

20:                                               ; preds = %19
  %21 = ptrtoint i8* %14 to i64
  %22 = sub i64 %13, %21
  %23 = trunc i64 %22 to i32
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = tail call i64 @strlen(i8* nonnull %14) #12
  %27 = trunc i64 %26 to i32
  br label %28

28:                                               ; preds = %25, %20
  %29 = phi i32 [ %27, %25 ], [ %23, %20 ]
  %30 = add i32 %29, -2
  %31 = icmp ult i32 %30, 7
  br i1 %31, label %32, label %85

32:                                               ; preds = %28
  %33 = zext i32 %29 to i64
  br label %34

34:                                               ; preds = %44, %32
  %35 = phi i64 [ 0, %32 ], [ %45, %44 ]
  %36 = getelementptr inbounds i8, i8* %14, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %37) #11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = load i8, i8* %36, align 1
  %42 = add i8 %41, -48
  %43 = icmp ult i8 %42, 10
  br i1 %43, label %44, label %85

44:                                               ; preds = %40, %34
  %45 = add nuw nsw i64 %35, 1
  %46 = icmp eq i64 %45, %33
  br i1 %46, label %49, label %34

47:                                               ; preds = %12
  %48 = select i1 %18, i8* %15, i8* %14
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i8* [ %48, %47 ], [ null, %44 ]
  %51 = getelementptr inbounds i8, i8* %15, i64 1
  %52 = ptrtoint i8* %51 to i64
  %53 = sub i64 %52, %9
  %54 = icmp slt i64 %53, %10
  br i1 %54, label %12, label %55

55:                                               ; preds = %49
  %56 = icmp eq i8* %50, null
  br i1 %56, label %85, label %57

57:                                               ; preds = %55
  %58 = ptrtoint i8* %51 to i64
  %59 = ptrtoint i8* %50 to i64
  %60 = sub i64 %58, %59
  %61 = trunc i64 %60 to i32
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = tail call i64 @strlen(i8* nonnull %50) #12
  %65 = trunc i64 %64 to i32
  br label %66

66:                                               ; preds = %63, %57
  %67 = phi i32 [ %65, %63 ], [ %61, %57 ]
  %68 = add i32 %67, -2
  %69 = icmp ult i32 %68, 7
  br i1 %69, label %70, label %85

70:                                               ; preds = %66
  %71 = zext i32 %67 to i64
  br label %72

72:                                               ; preds = %82, %70
  %73 = phi i64 [ 0, %70 ], [ %83, %82 ]
  %74 = getelementptr inbounds i8, i8* %50, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %75) #11
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %72
  %79 = load i8, i8* %74, align 1
  %80 = add i8 %79, -48
  %81 = icmp ult i8 %80, 10
  br i1 %81, label %82, label %85

82:                                               ; preds = %78, %72
  %83 = add nuw nsw i64 %73, 1
  %84 = icmp eq i64 %83, %71
  br i1 %84, label %85, label %72

85:                                               ; preds = %28, %19, %40, %82, %78, %66, %7, %55
  %86 = phi i8 [ 0, %55 ], [ 0, %7 ], [ 0, %66 ], [ 0, %78 ], [ 1, %82 ], [ 0, %40 ], [ 0, %19 ], [ 0, %28 ]
  ret i8 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isPrivateuseValueSubtags_69(i8*, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = ptrtoint i8* %0 to i64
  %10 = sext i32 %8 to i64
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %12, label %85

12:                                               ; preds = %7, %49
  %13 = phi i64 [ %52, %49 ], [ %9, %7 ]
  %14 = phi i8* [ %50, %49 ], [ null, %7 ]
  %15 = phi i8* [ %51, %49 ], [ %0, %7 ]
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 45
  %18 = icmp eq i8* %14, null
  br i1 %17, label %19, label %47

19:                                               ; preds = %12
  br i1 %18, label %85, label %20

20:                                               ; preds = %19
  %21 = ptrtoint i8* %14 to i64
  %22 = sub i64 %13, %21
  %23 = trunc i64 %22 to i32
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = tail call i64 @strlen(i8* nonnull %14) #12
  %27 = trunc i64 %26 to i32
  br label %28

28:                                               ; preds = %25, %20
  %29 = phi i32 [ %27, %25 ], [ %23, %20 ]
  %30 = add i32 %29, -1
  %31 = icmp ult i32 %30, 8
  br i1 %31, label %32, label %85

32:                                               ; preds = %28
  %33 = zext i32 %29 to i64
  br label %34

34:                                               ; preds = %44, %32
  %35 = phi i64 [ 0, %32 ], [ %45, %44 ]
  %36 = getelementptr inbounds i8, i8* %14, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %37) #11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = load i8, i8* %36, align 1
  %42 = add i8 %41, -48
  %43 = icmp ult i8 %42, 10
  br i1 %43, label %44, label %85

44:                                               ; preds = %40, %34
  %45 = add nuw nsw i64 %35, 1
  %46 = icmp eq i64 %45, %33
  br i1 %46, label %49, label %34

47:                                               ; preds = %12
  %48 = select i1 %18, i8* %15, i8* %14
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i8* [ %48, %47 ], [ null, %44 ]
  %51 = getelementptr inbounds i8, i8* %15, i64 1
  %52 = ptrtoint i8* %51 to i64
  %53 = sub i64 %52, %9
  %54 = icmp slt i64 %53, %10
  br i1 %54, label %12, label %55

55:                                               ; preds = %49
  %56 = icmp eq i8* %50, null
  br i1 %56, label %85, label %57

57:                                               ; preds = %55
  %58 = ptrtoint i8* %51 to i64
  %59 = ptrtoint i8* %50 to i64
  %60 = sub i64 %58, %59
  %61 = trunc i64 %60 to i32
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = tail call i64 @strlen(i8* nonnull %50) #12
  %65 = trunc i64 %64 to i32
  br label %66

66:                                               ; preds = %63, %57
  %67 = phi i32 [ %65, %63 ], [ %61, %57 ]
  %68 = add i32 %67, -1
  %69 = icmp ult i32 %68, 8
  br i1 %69, label %70, label %85

70:                                               ; preds = %66
  %71 = zext i32 %67 to i64
  br label %72

72:                                               ; preds = %82, %70
  %73 = phi i64 [ 0, %70 ], [ %83, %82 ]
  %74 = getelementptr inbounds i8, i8* %50, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %75) #11
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %72
  %79 = load i8, i8* %74, align 1
  %80 = add i8 %79, -48
  %81 = icmp ult i8 %80, 10
  br i1 %81, label %82, label %85

82:                                               ; preds = %78, %72
  %83 = add nuw nsw i64 %73, 1
  %84 = icmp eq i64 %83, %71
  br i1 %84, label %85, label %72

85:                                               ; preds = %28, %19, %40, %82, %78, %66, %7, %55
  %86 = phi i8 [ 0, %55 ], [ 0, %7 ], [ 0, %66 ], [ 0, %78 ], [ 1, %82 ], [ 0, %40 ], [ 0, %19 ], [ 0, %28 ]
  ret i8 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isUnicodeLocaleAttribute_69(i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = add i32 %8, -3
  %10 = icmp ult i32 %9, 6
  br i1 %10, label %11, label %26

11:                                               ; preds = %7
  %12 = zext i32 %8 to i64
  br label %13

13:                                               ; preds = %23, %11
  %14 = phi i64 [ 0, %11 ], [ %24, %23 ]
  %15 = getelementptr inbounds i8, i8* %0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %16) #11
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = load i8, i8* %15, align 1
  %21 = add i8 %20, -48
  %22 = icmp ult i8 %21, 10
  br i1 %22, label %23, label %26

23:                                               ; preds = %19, %13
  %24 = add nuw nsw i64 %14, 1
  %25 = icmp eq i64 %24, %12
  br i1 %25, label %26, label %13

26:                                               ; preds = %19, %23, %7
  %27 = phi i8 [ 0, %7 ], [ 0, %19 ], [ 1, %23 ]
  ret i8 %27
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZL34_isAlphaNumericStringLimitedLengthPKciii(i8* nocapture readonly, i32, i32) unnamed_addr #0 {
  %4 = icmp slt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = tail call i64 @strlen(i8* %0) #12
  %7 = trunc i64 %6 to i32
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi i32 [ %7, %5 ], [ %1, %3 ]
  %10 = icmp sge i32 %9, %2
  %11 = icmp slt i32 %9, 9
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %30

13:                                               ; preds = %8
  %14 = icmp sgt i32 %9, 0
  br i1 %14, label %15, label %30

15:                                               ; preds = %13
  %16 = zext i32 %9 to i64
  br label %17

17:                                               ; preds = %27, %15
  %18 = phi i64 [ 0, %15 ], [ %28, %27 ]
  %19 = getelementptr inbounds i8, i8* %0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %20) #11
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = load i8, i8* %19, align 1
  %25 = add i8 %24, -48
  %26 = icmp ult i8 %25, 10
  br i1 %26, label %27, label %30

27:                                               ; preds = %23, %17
  %28 = add nuw nsw i64 %18, 1
  %29 = icmp eq i64 %28, %16
  br i1 %29, label %30, label %17

30:                                               ; preds = %27, %23, %13, %8
  %31 = phi i8 [ 0, %8 ], [ 1, %13 ], [ 1, %27 ], [ 0, %23 ]
  ret i8 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isUnicodeLocaleAttributes_69(i8*, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = ptrtoint i8* %0 to i64
  %10 = sext i32 %8 to i64
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %12, label %85

12:                                               ; preds = %7, %49
  %13 = phi i64 [ %52, %49 ], [ %9, %7 ]
  %14 = phi i8* [ %50, %49 ], [ null, %7 ]
  %15 = phi i8* [ %51, %49 ], [ %0, %7 ]
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 45
  %18 = icmp eq i8* %14, null
  br i1 %17, label %19, label %47

19:                                               ; preds = %12
  br i1 %18, label %85, label %20

20:                                               ; preds = %19
  %21 = ptrtoint i8* %14 to i64
  %22 = sub i64 %13, %21
  %23 = trunc i64 %22 to i32
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = tail call i64 @strlen(i8* nonnull %14) #12
  %27 = trunc i64 %26 to i32
  br label %28

28:                                               ; preds = %25, %20
  %29 = phi i32 [ %27, %25 ], [ %23, %20 ]
  %30 = add i32 %29, -3
  %31 = icmp ult i32 %30, 6
  br i1 %31, label %32, label %85

32:                                               ; preds = %28
  %33 = zext i32 %29 to i64
  br label %34

34:                                               ; preds = %44, %32
  %35 = phi i64 [ 0, %32 ], [ %45, %44 ]
  %36 = getelementptr inbounds i8, i8* %14, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %37) #11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = load i8, i8* %36, align 1
  %42 = add i8 %41, -48
  %43 = icmp ult i8 %42, 10
  br i1 %43, label %44, label %85

44:                                               ; preds = %40, %34
  %45 = add nuw nsw i64 %35, 1
  %46 = icmp eq i64 %45, %33
  br i1 %46, label %49, label %34

47:                                               ; preds = %12
  %48 = select i1 %18, i8* %15, i8* %14
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i8* [ %48, %47 ], [ null, %44 ]
  %51 = getelementptr inbounds i8, i8* %15, i64 1
  %52 = ptrtoint i8* %51 to i64
  %53 = sub i64 %52, %9
  %54 = icmp slt i64 %53, %10
  br i1 %54, label %12, label %55

55:                                               ; preds = %49
  %56 = icmp eq i8* %50, null
  br i1 %56, label %85, label %57

57:                                               ; preds = %55
  %58 = ptrtoint i8* %51 to i64
  %59 = ptrtoint i8* %50 to i64
  %60 = sub i64 %58, %59
  %61 = trunc i64 %60 to i32
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = tail call i64 @strlen(i8* nonnull %50) #12
  %65 = trunc i64 %64 to i32
  br label %66

66:                                               ; preds = %63, %57
  %67 = phi i32 [ %65, %63 ], [ %61, %57 ]
  %68 = add i32 %67, -3
  %69 = icmp ult i32 %68, 6
  br i1 %69, label %70, label %85

70:                                               ; preds = %66
  %71 = zext i32 %67 to i64
  br label %72

72:                                               ; preds = %82, %70
  %73 = phi i64 [ 0, %70 ], [ %83, %82 ]
  %74 = getelementptr inbounds i8, i8* %50, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %75) #11
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %72
  %79 = load i8, i8* %74, align 1
  %80 = add i8 %79, -48
  %81 = icmp ult i8 %80, 10
  br i1 %81, label %82, label %85

82:                                               ; preds = %78, %72
  %83 = add nuw nsw i64 %73, 1
  %84 = icmp eq i64 %83, %71
  br i1 %84, label %85, label %72

85:                                               ; preds = %28, %19, %40, %82, %78, %66, %7, %55
  %86 = phi i8 [ 0, %55 ], [ 0, %7 ], [ 0, %66 ], [ 1, %82 ], [ 0, %78 ], [ 0, %40 ], [ 0, %19 ], [ 0, %28 ]
  ret i8 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isUnicodeLocaleKey_69(i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %23

10:                                               ; preds = %7
  %11 = load i8, i8* %0, align 1
  %12 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %11) #11
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = load i8, i8* %0, align 1
  %16 = add i8 %15, -48
  %17 = icmp ult i8 %16, 10
  br i1 %17, label %18, label %23

18:                                               ; preds = %14, %10
  %19 = getelementptr inbounds i8, i8* %0, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %20) #11
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %18, %14, %7
  br label %24

24:                                               ; preds = %18, %23
  %25 = phi i8 [ 0, %23 ], [ 1, %18 ]
  ret i8 %25
}

declare signext i8 @uprv_isASCIILetter_69(i8 signext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_isUnicodeLocaleTypeSubtag_69(i8* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = add i32 %8, -3
  %10 = icmp ult i32 %9, 6
  br i1 %10, label %11, label %26

11:                                               ; preds = %7
  %12 = zext i32 %8 to i64
  br label %13

13:                                               ; preds = %23, %11
  %14 = phi i64 [ 0, %11 ], [ %24, %23 ]
  %15 = getelementptr inbounds i8, i8* %0, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %16) #11
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %13
  %20 = load i8, i8* %15, align 1
  %21 = add i8 %20, -48
  %22 = icmp ult i8 %21, 10
  br i1 %22, label %23, label %26

23:                                               ; preds = %19, %13
  %24 = add nuw nsw i64 %14, 1
  %25 = icmp eq i64 %24, %12
  br i1 %25, label %26, label %13

26:                                               ; preds = %19, %23, %7
  %27 = phi i8 [ 0, %7 ], [ 0, %19 ], [ 1, %23 ]
  ret i8 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isUnicodeLocaleType_69(i8*, i32) local_unnamed_addr #0 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %7

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* %0) #12
  %6 = trunc i64 %5 to i32
  br label %7

7:                                                ; preds = %4, %2
  %8 = phi i32 [ %6, %4 ], [ %1, %2 ]
  %9 = ptrtoint i8* %0 to i64
  %10 = sext i32 %8 to i64
  %11 = icmp sgt i32 %8, 0
  br i1 %11, label %12, label %85

12:                                               ; preds = %7, %49
  %13 = phi i64 [ %52, %49 ], [ %9, %7 ]
  %14 = phi i8* [ %50, %49 ], [ null, %7 ]
  %15 = phi i8* [ %51, %49 ], [ %0, %7 ]
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 45
  %18 = icmp eq i8* %14, null
  br i1 %17, label %19, label %47

19:                                               ; preds = %12
  br i1 %18, label %85, label %20

20:                                               ; preds = %19
  %21 = ptrtoint i8* %14 to i64
  %22 = sub i64 %13, %21
  %23 = trunc i64 %22 to i32
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = tail call i64 @strlen(i8* nonnull %14) #12
  %27 = trunc i64 %26 to i32
  br label %28

28:                                               ; preds = %25, %20
  %29 = phi i32 [ %27, %25 ], [ %23, %20 ]
  %30 = add i32 %29, -3
  %31 = icmp ult i32 %30, 6
  br i1 %31, label %32, label %85

32:                                               ; preds = %28
  %33 = zext i32 %29 to i64
  br label %34

34:                                               ; preds = %44, %32
  %35 = phi i64 [ 0, %32 ], [ %45, %44 ]
  %36 = getelementptr inbounds i8, i8* %14, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %37) #11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %34
  %41 = load i8, i8* %36, align 1
  %42 = add i8 %41, -48
  %43 = icmp ult i8 %42, 10
  br i1 %43, label %44, label %85

44:                                               ; preds = %40, %34
  %45 = add nuw nsw i64 %35, 1
  %46 = icmp eq i64 %45, %33
  br i1 %46, label %49, label %34

47:                                               ; preds = %12
  %48 = select i1 %18, i8* %15, i8* %14
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i8* [ %48, %47 ], [ null, %44 ]
  %51 = getelementptr inbounds i8, i8* %15, i64 1
  %52 = ptrtoint i8* %51 to i64
  %53 = sub i64 %52, %9
  %54 = icmp slt i64 %53, %10
  br i1 %54, label %12, label %55

55:                                               ; preds = %49
  %56 = icmp eq i8* %50, null
  br i1 %56, label %85, label %57

57:                                               ; preds = %55
  %58 = ptrtoint i8* %51 to i64
  %59 = ptrtoint i8* %50 to i64
  %60 = sub i64 %58, %59
  %61 = trunc i64 %60 to i32
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %57
  %64 = tail call i64 @strlen(i8* nonnull %50) #12
  %65 = trunc i64 %64 to i32
  br label %66

66:                                               ; preds = %63, %57
  %67 = phi i32 [ %65, %63 ], [ %61, %57 ]
  %68 = add i32 %67, -3
  %69 = icmp ult i32 %68, 6
  br i1 %69, label %70, label %85

70:                                               ; preds = %66
  %71 = zext i32 %67 to i64
  br label %72

72:                                               ; preds = %82, %70
  %73 = phi i64 [ 0, %70 ], [ %83, %82 ]
  %74 = getelementptr inbounds i8, i8* %50, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %75) #11
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %72
  %79 = load i8, i8* %74, align 1
  %80 = add i8 %79, -48
  %81 = icmp ult i8 %80, 10
  br i1 %81, label %82, label %85

82:                                               ; preds = %78, %72
  %83 = add nuw nsw i64 %73, 1
  %84 = icmp eq i64 %83, %71
  br i1 %84, label %85, label %72

85:                                               ; preds = %28, %19, %40, %82, %78, %66, %7, %55
  %86 = phi i8 [ 0, %55 ], [ 0, %7 ], [ 0, %66 ], [ 1, %82 ], [ 0, %78 ], [ 0, %40 ], [ 0, %19 ], [ 0, %28 ]
  ret i8 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @ultag_getTKeyStart_69(i8*) local_unnamed_addr #0 {
  %2 = tail call i8* @strchr(i8* %0, i32 45) #12
  %3 = icmp eq i8* %2, null
  br i1 %3, label %31, label %4

4:                                                ; preds = %1, %27
  %5 = phi i8* [ %29, %27 ], [ %2, %1 ]
  %6 = phi i8* [ %28, %27 ], [ %0, %1 ]
  %7 = ptrtoint i8* %5 to i64
  %8 = ptrtoint i8* %6 to i64
  %9 = sub i64 %7, %8
  %10 = trunc i64 %9 to i32
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %4
  %13 = tail call i64 @strlen(i8* %6) #12
  %14 = trunc i64 %13 to i32
  br label %15

15:                                               ; preds = %12, %4
  %16 = phi i32 [ %14, %12 ], [ %10, %4 ]
  %17 = icmp eq i32 %16, 2
  br i1 %17, label %18, label %27

18:                                               ; preds = %15
  %19 = load i8, i8* %6, align 1
  %20 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %19) #11
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %27, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds i8, i8* %6, i64 1
  %24 = load i8, i8* %23, align 1
  %25 = add i8 %24, -48
  %26 = icmp ult i8 %25, 10
  br i1 %26, label %46, label %27

27:                                               ; preds = %15, %18, %22
  %28 = getelementptr inbounds i8, i8* %5, i64 1
  %29 = tail call i8* @strchr(i8* %28, i32 45) #12
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %4

31:                                               ; preds = %27, %1
  %32 = phi i8* [ %0, %1 ], [ %28, %27 ]
  %33 = tail call i64 @strlen(i8* %32) #12
  %34 = trunc i64 %33 to i32
  %35 = icmp eq i32 %34, 2
  br i1 %35, label %36, label %45

36:                                               ; preds = %31
  %37 = load i8, i8* %32, align 1
  %38 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %37) #11
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds i8, i8* %32, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = add i8 %42, -48
  %44 = icmp ult i8 %43, 10
  br i1 %44, label %46, label %45

45:                                               ; preds = %31, %36, %40
  br label %46

46:                                               ; preds = %22, %45, %40
  %47 = phi i8* [ null, %45 ], [ %32, %40 ], [ %6, %22 ]
  ret i8* %47
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isTransformedExtensionSubtags_69(i8*, i32) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11
  store i32 0, i32* %3, align 4
  %5 = icmp slt i32 %1, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call i64 @strlen(i8* %0) #12
  %8 = trunc i64 %7 to i32
  br label %9

9:                                                ; preds = %6, %2
  %10 = phi i32 [ %8, %6 ], [ %1, %2 ]
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %32

12:                                               ; preds = %9, %26
  %13 = phi i32 [ %28, %26 ], [ 0, %9 ]
  %14 = phi i8* [ %27, %26 ], [ %0, %9 ]
  %15 = phi i8* [ %29, %26 ], [ %0, %9 ]
  %16 = phi i32 [ %30, %26 ], [ %10, %9 ]
  %17 = load i8, i8* %15, align 1
  %18 = icmp eq i8 %17, 45
  br i1 %18, label %19, label %24

19:                                               ; preds = %12
  %20 = call fastcc signext i8 @_ZL29_isTransformedExtensionSubtagRiPKci(i32* nonnull dereferenceable(4) %3, i8* %14, i32 %13) #11, !callees !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %41, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds i8, i8* %15, i64 1
  br label %26

24:                                               ; preds = %12
  %25 = add nsw i32 %13, 1
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i8* [ %23, %22 ], [ %14, %24 ]
  %28 = phi i32 [ 0, %22 ], [ %25, %24 ]
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = add nsw i32 %16, -1
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %12, label %32

32:                                               ; preds = %26, %9
  %33 = phi i8* [ %0, %9 ], [ %27, %26 ]
  %34 = phi i32 [ 0, %9 ], [ %28, %26 ]
  %35 = call fastcc signext i8 @_ZL29_isTransformedExtensionSubtagRiPKci(i32* nonnull dereferenceable(4) %3, i8* %33, i32 %34) #11, !callees !2
  %36 = icmp ne i8 %35, 0
  %37 = load i32, i32* %3, align 4
  %38 = icmp sgt i32 %37, -1
  %39 = and i1 %36, %38
  %40 = zext i1 %39 to i8
  br label %41

41:                                               ; preds = %19, %32
  %42 = phi i8 [ %40, %32 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11
  ret i8 %42
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZL29_isTransformedExtensionSubtagRiPKci(i32* nocapture dereferenceable(4), i8* readonly, i32) unnamed_addr #0 {
  %4 = icmp slt i32 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = tail call i64 @strlen(i8* %1) #12
  %7 = trunc i64 %6 to i32
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %10 = load i32, i32* %0, align 4
  switch i32 %10, label %198 [
    i32 0, label %11
    i32 1, label %51
    i32 2, label %79
    i32 3, label %110
    i32 4, label %110
    i32 -1, label %132
    i32 6, label %157
  ]

11:                                               ; preds = %8
  %12 = icmp slt i32 %9, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %11
  %14 = tail call i64 @strlen(i8* %1) #12
  %15 = trunc i64 %14 to i32
  br label %16

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %15, %13 ], [ %9, %11 ]
  %18 = add i32 %17, -2
  %19 = icmp ult i32 %18, 7
  br i1 %19, label %20, label %34

20:                                               ; preds = %16
  %21 = zext i32 %17 to i64
  br label %24

22:                                               ; preds = %24
  %23 = icmp eq i64 %30, %21
  br i1 %23, label %31, label %24

24:                                               ; preds = %22, %20
  %25 = phi i64 [ 0, %20 ], [ %30, %22 ]
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %27) #11
  %29 = icmp eq i8 %28, 0
  %30 = add nuw nsw i64 %25, 1
  br i1 %29, label %34, label %22

31:                                               ; preds = %22
  %32 = icmp eq i32 %9, 4
  br i1 %32, label %34, label %33

33:                                               ; preds = %31
  store i32 1, i32* %0, align 4
  br label %198

34:                                               ; preds = %24, %31, %16
  br i1 %12, label %35, label %38

35:                                               ; preds = %34
  %36 = tail call i64 @strlen(i8* %1) #12
  %37 = trunc i64 %36 to i32
  br label %38

38:                                               ; preds = %35, %34
  %39 = phi i32 [ %37, %35 ], [ %9, %34 ]
  %40 = icmp eq i32 %39, 2
  br i1 %40, label %41, label %198

41:                                               ; preds = %38
  %42 = load i8, i8* %1, align 1
  %43 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %42) #11
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %198, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds i8, i8* %1, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = add i8 %47, -48
  %49 = icmp ult i8 %48, 10
  br i1 %49, label %50, label %198

50:                                               ; preds = %45
  store i32 -1, i32* %0, align 4
  br label %198

51:                                               ; preds = %8
  %52 = icmp slt i32 %9, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = tail call i64 @strlen(i8* %1) #12
  %55 = trunc i64 %54 to i32
  br label %56

56:                                               ; preds = %53, %51
  %57 = phi i32 [ %55, %53 ], [ %9, %51 ]
  %58 = icmp eq i32 %57, 4
  br i1 %58, label %59, label %79

59:                                               ; preds = %56
  %60 = load i8, i8* %1, align 1
  %61 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %60) #11
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %79, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds i8, i8* %1, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %65) #11
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds i8, i8* %1, i64 2
  %70 = load i8, i8* %69, align 1
  %71 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %70) #11
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds i8, i8* %1, i64 3
  %75 = load i8, i8* %74, align 1
  %76 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %75) #11
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %73
  store i32 2, i32* %0, align 4
  br label %198

79:                                               ; preds = %56, %59, %63, %68, %73, %8
  %80 = icmp slt i32 %9, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %79
  %82 = tail call i64 @strlen(i8* %1) #12
  %83 = trunc i64 %82 to i32
  br label %84

84:                                               ; preds = %81, %79
  %85 = phi i32 [ %83, %81 ], [ %9, %79 ]
  switch i32 %85, label %110 [
    i32 2, label %86
    i32 3, label %95
  ]

86:                                               ; preds = %84
  %87 = load i8, i8* %1, align 1
  %88 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %87) #11
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %110, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds i8, i8* %1, i64 1
  %92 = load i8, i8* %91, align 1
  %93 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %92) #11
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %110, label %109

95:                                               ; preds = %84
  %96 = load i8, i8* %1, align 1
  %97 = add i8 %96, -48
  %98 = icmp ult i8 %97, 10
  br i1 %98, label %99, label %110

99:                                               ; preds = %95
  %100 = getelementptr inbounds i8, i8* %1, i64 1
  %101 = load i8, i8* %100, align 1
  %102 = add i8 %101, -48
  %103 = icmp ult i8 %102, 10
  br i1 %103, label %104, label %110

104:                                              ; preds = %99
  %105 = getelementptr inbounds i8, i8* %1, i64 2
  %106 = load i8, i8* %105, align 1
  %107 = add i8 %106, -48
  %108 = icmp ugt i8 %107, 9
  br i1 %108, label %110, label %109

109:                                              ; preds = %104, %90
  store i32 3, i32* %0, align 4
  br label %198

110:                                              ; preds = %104, %99, %95, %90, %86, %84, %8, %8
  %111 = tail call fastcc signext i8 @_ZL16_isVariantSubtagPKci(i8* %1, i32 %9)
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  store i32 4, i32* %0, align 4
  br label %198

114:                                              ; preds = %110
  %115 = icmp slt i32 %9, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %114
  %117 = tail call i64 @strlen(i8* %1) #12
  %118 = trunc i64 %117 to i32
  br label %119

119:                                              ; preds = %116, %114
  %120 = phi i32 [ %118, %116 ], [ %9, %114 ]
  %121 = icmp eq i32 %120, 2
  br i1 %121, label %122, label %198

122:                                              ; preds = %119
  %123 = load i8, i8* %1, align 1
  %124 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %123) #11
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %198, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds i8, i8* %1, i64 1
  %128 = load i8, i8* %127, align 1
  %129 = add i8 %128, -48
  %130 = icmp ult i8 %129, 10
  br i1 %130, label %131, label %198

131:                                              ; preds = %126
  store i32 -1, i32* %0, align 4
  br label %198

132:                                              ; preds = %8
  %133 = icmp slt i32 %9, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %132
  %135 = tail call i64 @strlen(i8* %1) #12
  %136 = trunc i64 %135 to i32
  br label %137

137:                                              ; preds = %134, %132
  %138 = phi i32 [ %136, %134 ], [ %9, %132 ]
  %139 = add i32 %138, -3
  %140 = icmp ult i32 %139, 6
  br i1 %140, label %141, label %198

141:                                              ; preds = %137
  %142 = zext i32 %138 to i64
  br label %143

143:                                              ; preds = %153, %141
  %144 = phi i64 [ 0, %141 ], [ %154, %153 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %146) #11
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %143
  %150 = load i8, i8* %145, align 1
  %151 = add i8 %150, -48
  %152 = icmp ult i8 %151, 10
  br i1 %152, label %153, label %198

153:                                              ; preds = %149, %143
  %154 = add nuw nsw i64 %144, 1
  %155 = icmp eq i64 %154, %142
  br i1 %155, label %156, label %143

156:                                              ; preds = %153
  store i32 6, i32* %0, align 4
  br label %198

157:                                              ; preds = %8
  %158 = icmp slt i32 %9, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %157
  %160 = tail call i64 @strlen(i8* %1) #12
  %161 = trunc i64 %160 to i32
  br label %162

162:                                              ; preds = %159, %157
  %163 = phi i32 [ %161, %159 ], [ %9, %157 ]
  %164 = icmp eq i32 %163, 2
  br i1 %164, label %165, label %175

165:                                              ; preds = %162
  %166 = load i8, i8* %1, align 1
  %167 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %166) #11
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %175, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds i8, i8* %1, i64 1
  %171 = load i8, i8* %170, align 1
  %172 = add i8 %171, -48
  %173 = icmp ult i8 %172, 10
  br i1 %173, label %174, label %175

174:                                              ; preds = %169
  store i32 -1, i32* %0, align 4
  br label %198

175:                                              ; preds = %162, %165, %169
  br i1 %158, label %176, label %179

176:                                              ; preds = %175
  %177 = tail call i64 @strlen(i8* %1) #12
  %178 = trunc i64 %177 to i32
  br label %179

179:                                              ; preds = %176, %175
  %180 = phi i32 [ %178, %176 ], [ %9, %175 ]
  %181 = add i32 %180, -3
  %182 = icmp ult i32 %181, 6
  br i1 %182, label %183, label %198

183:                                              ; preds = %179
  %184 = zext i32 %180 to i64
  br label %185

185:                                              ; preds = %195, %183
  %186 = phi i64 [ 0, %183 ], [ %196, %195 ]
  %187 = getelementptr inbounds i8, i8* %1, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %188) #11
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %195

191:                                              ; preds = %185
  %192 = load i8, i8* %187, align 1
  %193 = add i8 %192, -48
  %194 = icmp ult i8 %193, 10
  br i1 %194, label %195, label %198

195:                                              ; preds = %191, %185
  %196 = add nuw nsw i64 %186, 1
  %197 = icmp eq i64 %196, %184
  br i1 %197, label %198, label %185

198:                                              ; preds = %195, %191, %149, %137, %126, %122, %119, %45, %41, %38, %179, %8, %174, %156, %131, %113, %109, %78, %50, %33
  %199 = phi i8 [ 1, %174 ], [ 1, %156 ], [ 1, %113 ], [ 1, %131 ], [ 1, %109 ], [ 1, %78 ], [ 1, %33 ], [ 1, %50 ], [ 0, %8 ], [ 0, %179 ], [ 0, %38 ], [ 0, %41 ], [ 0, %45 ], [ 0, %119 ], [ 0, %122 ], [ 0, %126 ], [ 0, %137 ], [ 0, %149 ], [ 0, %191 ], [ 1, %195 ]
  ret i8 %199
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @ultag_isUnicodeExtensionSubtags_69(i8*, i32) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #11
  store i32 0, i32* %3, align 4
  %5 = icmp slt i32 %1, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call i64 @strlen(i8* %0) #12
  %8 = trunc i64 %7 to i32
  br label %9

9:                                                ; preds = %6, %2
  %10 = phi i32 [ %8, %6 ], [ %1, %2 ]
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %32

12:                                               ; preds = %9, %26
  %13 = phi i32 [ %28, %26 ], [ 0, %9 ]
  %14 = phi i8* [ %27, %26 ], [ %0, %9 ]
  %15 = phi i8* [ %29, %26 ], [ %0, %9 ]
  %16 = phi i32 [ %30, %26 ], [ %10, %9 ]
  %17 = load i8, i8* %15, align 1
  %18 = icmp eq i8 %17, 45
  br i1 %18, label %19, label %24

19:                                               ; preds = %12
  %20 = call fastcc signext i8 @_ZL25_isUnicodeExtensionSubtagRiPKci(i32* nonnull dereferenceable(4) %3, i8* %14, i32 %13) #11, !callees !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %41, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds i8, i8* %15, i64 1
  br label %26

24:                                               ; preds = %12
  %25 = add nsw i32 %13, 1
  br label %26

26:                                               ; preds = %24, %22
  %27 = phi i8* [ %23, %22 ], [ %14, %24 ]
  %28 = phi i32 [ 0, %22 ], [ %25, %24 ]
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = add nsw i32 %16, -1
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %12, label %32

32:                                               ; preds = %26, %9
  %33 = phi i8* [ %0, %9 ], [ %27, %26 ]
  %34 = phi i32 [ 0, %9 ], [ %28, %26 ]
  %35 = call fastcc signext i8 @_ZL25_isUnicodeExtensionSubtagRiPKci(i32* nonnull dereferenceable(4) %3, i8* %33, i32 %34) #11, !callees !2
  %36 = icmp ne i8 %35, 0
  %37 = load i32, i32* %3, align 4
  %38 = icmp sgt i32 %37, -1
  %39 = and i1 %36, %38
  %40 = zext i1 %39 to i8
  br label %41

41:                                               ; preds = %19, %32
  %42 = phi i8 [ %40, %32 ], [ 0, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #11
  ret i8 %42
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc signext i8 @_ZL25_isUnicodeExtensionSubtagRiPKci(i32* nocapture dereferenceable(4), i8* nocapture readonly, i32) unnamed_addr #0 {
  %4 = load i32, i32* %0, align 4
  switch i32 %4, label %140 [
    i32 0, label %5
    i32 1, label %50
    i32 2, label %95
  ]

5:                                                ; preds = %3
  %6 = icmp slt i32 %2, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = tail call i64 @strlen(i8* %1) #12
  %9 = trunc i64 %8 to i32
  br label %10

10:                                               ; preds = %7, %5
  %11 = phi i32 [ %9, %7 ], [ %2, %5 ]
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %27

13:                                               ; preds = %10
  %14 = load i8, i8* %1, align 1
  %15 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %14) #11
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = load i8, i8* %1, align 1
  %19 = add i8 %18, -48
  %20 = icmp ult i8 %19, 10
  br i1 %20, label %21, label %27

21:                                               ; preds = %17, %13
  %22 = getelementptr inbounds i8, i8* %1, i64 1
  %23 = load i8, i8* %22, align 1
  %24 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %23) #11
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %21
  store i32 1, i32* %0, align 4
  br label %140

27:                                               ; preds = %10, %17, %21
  br i1 %6, label %28, label %31

28:                                               ; preds = %27
  %29 = tail call i64 @strlen(i8* %1) #12
  %30 = trunc i64 %29 to i32
  br label %31

31:                                               ; preds = %28, %27
  %32 = phi i32 [ %30, %28 ], [ %2, %27 ]
  %33 = add i32 %32, -3
  %34 = icmp ult i32 %33, 6
  br i1 %34, label %35, label %140

35:                                               ; preds = %31
  %36 = zext i32 %32 to i64
  br label %37

37:                                               ; preds = %47, %35
  %38 = phi i64 [ 0, %35 ], [ %48, %47 ]
  %39 = getelementptr inbounds i8, i8* %1, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %40) #11
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = load i8, i8* %39, align 1
  %45 = add i8 %44, -48
  %46 = icmp ult i8 %45, 10
  br i1 %46, label %47, label %140

47:                                               ; preds = %43, %37
  %48 = add nuw nsw i64 %38, 1
  %49 = icmp eq i64 %48, %36
  br i1 %49, label %140, label %37

50:                                               ; preds = %3
  %51 = icmp slt i32 %2, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %50
  %53 = tail call i64 @strlen(i8* %1) #12
  %54 = trunc i64 %53 to i32
  br label %55

55:                                               ; preds = %52, %50
  %56 = phi i32 [ %54, %52 ], [ %2, %50 ]
  %57 = icmp eq i32 %56, 2
  br i1 %57, label %58, label %71

58:                                               ; preds = %55
  %59 = load i8, i8* %1, align 1
  %60 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %59) #11
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = load i8, i8* %1, align 1
  %64 = add i8 %63, -48
  %65 = icmp ult i8 %64, 10
  br i1 %65, label %66, label %71

66:                                               ; preds = %62, %58
  %67 = getelementptr inbounds i8, i8* %1, i64 1
  %68 = load i8, i8* %67, align 1
  %69 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %68) #11
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %140

71:                                               ; preds = %55, %62, %66
  br i1 %51, label %72, label %75

72:                                               ; preds = %71
  %73 = tail call i64 @strlen(i8* %1) #12
  %74 = trunc i64 %73 to i32
  br label %75

75:                                               ; preds = %72, %71
  %76 = phi i32 [ %74, %72 ], [ %2, %71 ]
  %77 = add i32 %76, -3
  %78 = icmp ult i32 %77, 6
  br i1 %78, label %79, label %140

79:                                               ; preds = %75
  %80 = zext i32 %76 to i64
  br label %81

81:                                               ; preds = %91, %79
  %82 = phi i64 [ 0, %79 ], [ %92, %91 ]
  %83 = getelementptr inbounds i8, i8* %1, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %84) #11
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = load i8, i8* %83, align 1
  %89 = add i8 %88, -48
  %90 = icmp ult i8 %89, 10
  br i1 %90, label %91, label %140

91:                                               ; preds = %87, %81
  %92 = add nuw nsw i64 %82, 1
  %93 = icmp eq i64 %92, %80
  br i1 %93, label %94, label %81

94:                                               ; preds = %91
  store i32 2, i32* %0, align 4
  br label %140

95:                                               ; preds = %3
  %96 = icmp slt i32 %2, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %95
  %98 = tail call i64 @strlen(i8* %1) #12
  %99 = trunc i64 %98 to i32
  br label %100

100:                                              ; preds = %97, %95
  %101 = phi i32 [ %99, %97 ], [ %2, %95 ]
  %102 = icmp eq i32 %101, 2
  br i1 %102, label %103, label %117

103:                                              ; preds = %100
  %104 = load i8, i8* %1, align 1
  %105 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %104) #11
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %111

107:                                              ; preds = %103
  %108 = load i8, i8* %1, align 1
  %109 = add i8 %108, -48
  %110 = icmp ult i8 %109, 10
  br i1 %110, label %111, label %117

111:                                              ; preds = %107, %103
  %112 = getelementptr inbounds i8, i8* %1, i64 1
  %113 = load i8, i8* %112, align 1
  %114 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %113) #11
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %117, label %116

116:                                              ; preds = %111
  store i32 1, i32* %0, align 4
  br label %140

117:                                              ; preds = %100, %107, %111
  br i1 %96, label %118, label %121

118:                                              ; preds = %117
  %119 = tail call i64 @strlen(i8* %1) #12
  %120 = trunc i64 %119 to i32
  br label %121

121:                                              ; preds = %118, %117
  %122 = phi i32 [ %120, %118 ], [ %2, %117 ]
  %123 = add i32 %122, -3
  %124 = icmp ult i32 %123, 6
  br i1 %124, label %125, label %140

125:                                              ; preds = %121
  %126 = zext i32 %122 to i64
  br label %127

127:                                              ; preds = %137, %125
  %128 = phi i64 [ 0, %125 ], [ %138, %137 ]
  %129 = getelementptr inbounds i8, i8* %1, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %130) #11
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %137

133:                                              ; preds = %127
  %134 = load i8, i8* %129, align 1
  %135 = add i8 %134, -48
  %136 = icmp ult i8 %135, 10
  br i1 %136, label %137, label %140

137:                                              ; preds = %133, %127
  %138 = add nuw nsw i64 %128, 1
  %139 = icmp eq i64 %138, %126
  br i1 %139, label %140, label %127

140:                                              ; preds = %137, %133, %87, %47, %43, %75, %121, %66, %31, %3, %116, %94, %26
  %141 = phi i8 [ 1, %116 ], [ 1, %94 ], [ 1, %26 ], [ 0, %3 ], [ 0, %31 ], [ 1, %66 ], [ 0, %121 ], [ 0, %75 ], [ 0, %43 ], [ 1, %47 ], [ 0, %87 ], [ 0, %133 ], [ 1, %137 ]
  ret i8 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uloc_toLanguageTag_69(i8*, i8*, i32, i8 signext, i32*) local_unnamed_addr #0 {
  %6 = alloca %"class.icu_69::CheckedArrayByteSink", align 8
  %7 = load i32, i32* %4, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = bitcast %"class.icu_69::CheckedArrayByteSink"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.icu_69::CheckedArrayByteSink", %"class.icu_69::CheckedArrayByteSink"* %6, i64 0, i32 4
  %12 = bitcast %"class.icu_69::CheckedArrayByteSink"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  call void @_ZN6icu_6920CheckedArrayByteSinkC1EPci(%"class.icu_69::CheckedArrayByteSink"* nonnull %6, i8* %1, i32 %2) #11
  %13 = getelementptr inbounds %"class.icu_69::CheckedArrayByteSink", %"class.icu_69::CheckedArrayByteSink"* %6, i64 0, i32 0
  call void @ulocimp_toLanguageTag_69(i8* %0, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %13, i8 signext %3, i32* %4)
  %14 = load i32, i32* %11, align 8
  %15 = load i32, i32* %4, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %24

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.icu_69::CheckedArrayByteSink", %"class.icu_69::CheckedArrayByteSink"* %6, i64 0, i32 5
  %19 = load i8, i8* %18, align 4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  store i32 15, i32* %4, align 4
  br label %24

22:                                               ; preds = %17
  %23 = call i32 @u_terminateChars_69(i8* %1, i32 %2, i32 %14, i32* %4) #11
  br label %24

24:                                               ; preds = %21, %22, %9
  call void @_ZN6icu_6920CheckedArrayByteSinkD1Ev(%"class.icu_69::CheckedArrayByteSink"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  br label %25

25:                                               ; preds = %5, %24
  %26 = phi i32 [ %14, %24 ], [ 0, %5 ]
  ret i32 %26
}

declare void @_ZN6icu_6920CheckedArrayByteSinkC1EPci(%"class.icu_69::CheckedArrayByteSink"*, i8*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @ulocimp_toLanguageTag_69(i8*, %"class.icu_69::ByteSink"* dereferenceable(8), i8 signext, i32*) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [6 x i8], align 1
  %9 = alloca i32, align 4
  %10 = alloca [12 x i8], align 1
  %11 = alloca i32, align 4
  %12 = alloca [100 x i8], align 16
  %13 = alloca i32, align 4
  %14 = alloca %"class.icu_69::MemoryPool", align 8
  %15 = alloca %"class.icu_69::MemoryPool.2", align 8
  %16 = alloca %"class.icu_69::MemoryPool.4", align 8
  %17 = alloca i32, align 4
  %18 = alloca %struct.ExtensionListEntry*, align 8
  %19 = alloca %"class.icu_69::MemoryPool.4", align 8
  %20 = alloca i32, align 4
  %21 = alloca %"class.icu_69::CharString", align 8
  %22 = alloca %"class.icu_69::CharStringByteSink", align 8
  %23 = alloca i8*, align 8
  %24 = alloca [157 x i8], align 16
  %25 = alloca [157 x i8], align 16
  %26 = alloca i32, align 4
  %27 = alloca %"class.icu_69::CharString", align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %"class.icu_69::CharString", align 8
  %32 = alloca %"class.icu_69::CharStringByteSink", align 8
  %33 = bitcast %"class.icu_69::CharString"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %33) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 64, i1 false)
  %34 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %27, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %27, i64 0, i32 0, i32 3, i64 0
  store i8* %35, i8** %34, align 8
  %36 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %27, i64 0, i32 0, i32 1
  store i32 40, i32* %36, align 8
  %37 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %27, i64 0, i32 0, i32 2
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %27, i64 0, i32 1
  store i32 0, i32* %38, align 8
  store i8 0, i8* %35, align 1
  %39 = bitcast i32* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #11
  store i32 0, i32* %28, align 4
  %40 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #11
  %41 = call i64 @strlen(i8* %0) #12
  %42 = trunc i64 %41 to i32
  store i32 %42, i32* %29, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %73

44:                                               ; preds = %4
  %45 = call i8* @_ZN6icu_6910CharString15getAppendBufferEiiRiR10UErrorCode(%"class.icu_69::CharString"* nonnull %27, i32 %42, i32 %42, i32* nonnull dereferenceable(4) %29, i32* nonnull dereferenceable(4) %28) #11
  %46 = load i32, i32* %28, align 4
  %47 = icmp slt i32 %46, 1
  br i1 %47, label %50, label %48

48:                                               ; preds = %56, %44
  %49 = phi i32 [ %46, %44 ], [ %58, %56 ]
  store i32 %49, i32* %3, align 4
  br label %1288

50:                                               ; preds = %44, %56
  %51 = phi i8* [ %57, %56 ], [ %45, %44 ]
  %52 = load i32, i32* %29, align 4
  %53 = call i32 @uloc_canonicalize_69(i8* %0, i8* %51, i32 %52, i32* nonnull %28) #11
  %54 = load i32, i32* %28, align 4
  %55 = icmp eq i32 %54, 15
  br i1 %55, label %56, label %60

56:                                               ; preds = %50
  store i32 %53, i32* %29, align 4
  store i32 0, i32* %28, align 4
  %57 = call i8* @_ZN6icu_6910CharString15getAppendBufferEiiRiR10UErrorCode(%"class.icu_69::CharString"* nonnull %27, i32 %53, i32 %53, i32* nonnull dereferenceable(4) %29, i32* nonnull dereferenceable(4) %28) #11
  %58 = load i32, i32* %28, align 4
  %59 = icmp slt i32 %58, 1
  br i1 %59, label %50, label %48

60:                                               ; preds = %50
  %61 = icmp slt i32 %54, 1
  br i1 %61, label %63, label %62

62:                                               ; preds = %60
  store i32 1, i32* %3, align 4
  br label %1288

63:                                               ; preds = %60
  %64 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* nonnull %27, i8* %51, i32 %53, i32* nonnull dereferenceable(4) %28) #11
  %65 = load i32, i32* %28, align 4
  %66 = icmp eq i32 %65, -124
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  store i32 0, i32* %28, align 4
  br label %70

68:                                               ; preds = %63
  %69 = icmp slt i32 %65, 1
  br i1 %69, label %70, label %72

70:                                               ; preds = %67, %68
  %71 = load i8*, i8** %34, align 8
  br label %73

72:                                               ; preds = %68
  store i32 %65, i32* %3, align 4
  br label %1288

73:                                               ; preds = %70, %4
  %74 = phi i8* [ %71, %70 ], [ %35, %4 ]
  %75 = call i8* @locale_getKeywordsStart_69(i8* %74) #11
  %76 = load i8*, i8** %34, align 8
  %77 = icmp eq i8* %75, %76
  br i1 %77, label %78, label %139

78:                                               ; preds = %73
  %79 = call %struct.UEnumeration* @uloc_openKeywords_69(i8* %75, i32* nonnull %28) #11
  %80 = load i32, i32* %28, align 4
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %136, label %82

82:                                               ; preds = %78
  %83 = call i32 @uenum_count_69(%struct.UEnumeration* %79, i32* nonnull %28) #11
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %136

85:                                               ; preds = %82
  %86 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #11
  store i32 0, i32* %30, align 4
  %87 = call i8* @uenum_next_69(%struct.UEnumeration* %79, i32* nonnull %30, i32* nonnull %28) #11
  %88 = load i32, i32* %30, align 4
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %130

90:                                               ; preds = %85
  %91 = load i8, i8* %87, align 1
  %92 = icmp eq i8 %91, 120
  br i1 %92, label %93, label %130

93:                                               ; preds = %90
  %94 = bitcast %"class.icu_69::CharString"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %94) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 64, i1 false)
  %95 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %31, i64 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %31, i64 0, i32 0, i32 3, i64 0
  store i8* %96, i8** %95, align 8
  %97 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %31, i64 0, i32 0, i32 1
  store i32 40, i32* %97, align 8
  %98 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %31, i64 0, i32 0, i32 2
  store i8 0, i8* %98, align 4
  %99 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %31, i64 0, i32 1
  store i32 0, i32* %99, align 8
  store i8 0, i8* %96, align 1
  %100 = bitcast %"class.icu_69::CharStringByteSink"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #11
  %101 = bitcast %"class.icu_69::CharStringByteSink"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false)
  call void @_ZN6icu_6918CharStringByteSinkC1EPNS_10CharStringE(%"class.icu_69::CharStringByteSink"* nonnull %32, %"class.icu_69::CharString"* nonnull %31) #11
  %102 = getelementptr inbounds %"class.icu_69::CharStringByteSink", %"class.icu_69::CharStringByteSink"* %32, i64 0, i32 0
  call void @ulocimp_getKeywordValue_69(i8* %0, i8* %87, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %102, i32* nonnull %28) #11
  call void @_ZN6icu_6918CharStringByteSinkD1Ev(%"class.icu_69::CharStringByteSink"* nonnull %32) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #11
  %103 = load i32, i32* %28, align 4
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %123, label %105

105:                                              ; preds = %93
  %106 = load i8*, i8** %95, align 8
  %107 = load i32, i32* %99, align 8
  %108 = call signext i8 @ultag_isPrivateuseValueSubtags_69(i8* %106, i32 %107)
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %120, label %110

110:                                              ; preds = %105
  %111 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %112 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %112, i64 2
  %114 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %113, align 8
  call void %114(%"class.icu_69::ByteSink"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 6) #11
  %115 = load i8*, i8** %95, align 8
  %116 = load i32, i32* %99, align 8
  %117 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %111, align 8
  %118 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %117, i64 2
  %119 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %118, align 8
  call void %119(%"class.icu_69::ByteSink"* %1, i8* %115, i32 %116) #11
  br label %124

120:                                              ; preds = %105
  %121 = icmp eq i8 %2, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  store i32 1, i32* %3, align 4
  br label %124

123:                                              ; preds = %93
  store i32 1, i32* %3, align 4
  br label %124

124:                                              ; preds = %120, %110, %122, %123
  %125 = phi i8 [ 1, %110 ], [ 1, %122 ], [ 0, %120 ], [ 1, %123 ]
  %126 = load i8, i8* %98, align 4
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %124
  %129 = load i8*, i8** %95, align 8
  call void @uprv_free_69(i8* %129) #11
  br label %131

130:                                              ; preds = %90, %85
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #11
  br label %136

131:                                              ; preds = %128, %124
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #11
  %132 = icmp eq i8 %125, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %131
  %134 = icmp eq %struct.UEnumeration* %79, null
  br i1 %134, label %1288, label %135

135:                                              ; preds = %133
  call void @uenum_close_69(%struct.UEnumeration* nonnull %79) #11
  br label %1288

136:                                              ; preds = %82, %130, %78, %131
  %137 = icmp eq %struct.UEnumeration* %79, null
  br i1 %137, label %139, label %138

138:                                              ; preds = %136
  call void @uenum_close_69(%struct.UEnumeration* nonnull %79) #11
  br label %139

139:                                              ; preds = %138, %136, %73
  %140 = load i8*, i8** %34, align 8
  %141 = getelementptr inbounds [12 x i8], [12 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %141) #11
  %142 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %141, i8 -86, i64 12, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %142) #11
  store i32 0, i32* %11, align 4
  %143 = load i32, i32* %3, align 4
  %144 = icmp slt i32 %143, 1
  br i1 %144, label %145, label %215

145:                                              ; preds = %139
  %146 = call i32 @uloc_getLanguage_69(i8* %140, i8* nonnull %141, i32 12, i32* nonnull %11) #11
  %147 = load i32, i32* %11, align 4
  %148 = icmp sgt i32 %147, 0
  %149 = icmp eq i32 %147, -124
  %150 = or i1 %148, %149
  br i1 %150, label %151, label %154

151:                                              ; preds = %145
  %152 = icmp eq i8 %2, 0
  br i1 %152, label %156, label %153

153:                                              ; preds = %151
  store i32 1, i32* %3, align 4
  br label %215

154:                                              ; preds = %145
  %155 = icmp eq i32 %146, 0
  br i1 %155, label %156, label %161

156:                                              ; preds = %154, %151
  %157 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %158 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %158, i64 2
  %160 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %159, align 8
  call void %160(%"class.icu_69::ByteSink"* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL8LANG_UND, i64 0, i64 0), i32 3) #11
  br label %215

161:                                              ; preds = %154
  %162 = icmp slt i32 %146, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %161
  %164 = call i64 @strlen(i8* nonnull %141) #12
  %165 = trunc i64 %164 to i32
  br label %166

166:                                              ; preds = %163, %161
  %167 = phi i32 [ %165, %163 ], [ %146, %161 ]
  %168 = add i32 %167, -2
  %169 = icmp ult i32 %168, 7
  br i1 %169, label %170, label %183

170:                                              ; preds = %166
  %171 = zext i32 %167 to i64
  br label %176

172:                                              ; preds = %176
  %173 = icmp eq i64 %182, %171
  br i1 %173, label %174, label %176

174:                                              ; preds = %172
  %175 = call i64 @strlen(i8* nonnull %141) #12
  br label %191

176:                                              ; preds = %172, %170
  %177 = phi i64 [ 0, %170 ], [ %182, %172 ]
  %178 = getelementptr inbounds [12 x i8], [12 x i8]* %10, i64 0, i64 %177
  %179 = load i8, i8* %178, align 1
  %180 = call signext i8 @uprv_isASCIILetter_69(i8 signext %179) #11
  %181 = icmp eq i8 %180, 0
  %182 = add nuw nsw i64 %177, 1
  br i1 %181, label %183, label %172

183:                                              ; preds = %176, %166
  %184 = icmp eq i8 %2, 0
  br i1 %184, label %186, label %185

185:                                              ; preds = %183
  store i32 1, i32* %3, align 4
  br label %215

186:                                              ; preds = %183
  %187 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %188 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %188, i64 2
  %190 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %189, align 8
  call void %190(%"class.icu_69::ByteSink"* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL8LANG_UND, i64 0, i64 0), i32 3) #11
  br label %215

191:                                              ; preds = %206, %174
  %192 = phi i64 [ 0, %174 ], [ %207, %206 ]
  %193 = getelementptr inbounds [156 x [4 x i8]], [156 x [4 x i8]]* @_ZL15DEPRECATEDLANGS, i64 0, i64 %192, i64 0
  %194 = call i64 @strlen(i8* %193) #12
  %195 = icmp ult i64 %175, %194
  br i1 %195, label %209, label %196

196:                                              ; preds = %191
  %197 = call i32 @strcmp(i8* nonnull %141, i8* %193) #12
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %206

199:                                              ; preds = %196
  %200 = and i64 %192, 4294967294
  %201 = or i64 %200, 1
  %202 = getelementptr inbounds [156 x [4 x i8]], [156 x [4 x i8]]* @_ZL15DEPRECATEDLANGS, i64 0, i64 %201, i64 0
  %203 = call i8* @strcpy(i8* nonnull %141, i8* %202) #11
  %204 = call i64 @strlen(i8* nonnull %141) #12
  %205 = trunc i64 %204 to i32
  br label %209

206:                                              ; preds = %196
  %207 = add nuw nsw i64 %192, 2
  %208 = icmp ult i64 %207, 156
  br i1 %208, label %191, label %209

209:                                              ; preds = %206, %191, %199
  %210 = phi i32 [ %205, %199 ], [ %146, %191 ], [ %146, %206 ]
  %211 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %212 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %212, i64 2
  %214 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %213, align 8
  call void %214(%"class.icu_69::ByteSink"* %1, i8* nonnull %141, i32 %210) #11
  br label %215

215:                                              ; preds = %139, %153, %156, %185, %186, %209
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %142) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %141) #11
  %216 = load i8*, i8** %34, align 8
  %217 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %217) #11
  %218 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 1
  %219 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 2
  %220 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 3
  %221 = bitcast i32* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %217, i8 -86, i64 6, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221) #11
  store i32 0, i32* %9, align 4
  %222 = load i32, i32* %3, align 4
  %223 = icmp slt i32 %222, 1
  br i1 %223, label %224, label %264

224:                                              ; preds = %215
  %225 = call i32 @uloc_getScript_69(i8* %216, i8* nonnull %217, i32 6, i32* nonnull %9) #11
  %226 = load i32, i32* %9, align 4
  %227 = icmp sgt i32 %226, 0
  %228 = icmp eq i32 %226, -124
  %229 = or i1 %227, %228
  br i1 %229, label %230, label %233

230:                                              ; preds = %224
  %231 = icmp eq i8 %2, 0
  br i1 %231, label %264, label %232

232:                                              ; preds = %230
  store i32 1, i32* %3, align 4
  br label %264

233:                                              ; preds = %224
  %234 = icmp sgt i32 %225, 0
  br i1 %234, label %235, label %264

235:                                              ; preds = %233
  %236 = icmp eq i32 %225, 4
  br i1 %236, label %237, label %253

237:                                              ; preds = %235
  %238 = load i8, i8* %217, align 1
  %239 = call signext i8 @uprv_isASCIILetter_69(i8 signext %238) #11
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %253, label %241

241:                                              ; preds = %237
  %242 = load i8, i8* %218, align 1
  %243 = call signext i8 @uprv_isASCIILetter_69(i8 signext %242) #11
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %253, label %245

245:                                              ; preds = %241
  %246 = load i8, i8* %219, align 1
  %247 = call signext i8 @uprv_isASCIILetter_69(i8 signext %246) #11
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %253, label %249

249:                                              ; preds = %245
  %250 = load i8, i8* %220, align 1
  %251 = call signext i8 @uprv_isASCIILetter_69(i8 signext %250) #11
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %249, %245, %241, %237, %235
  %254 = icmp eq i8 %2, 0
  br i1 %254, label %264, label %255

255:                                              ; preds = %253
  store i32 1, i32* %3, align 4
  br label %264

256:                                              ; preds = %249
  %257 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %258 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %257, align 8
  %259 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %258, i64 2
  %260 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %259, align 8
  call void %260(%"class.icu_69::ByteSink"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1) #11
  %261 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %257, align 8
  %262 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %261, i64 2
  %263 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %262, align 8
  call void %263(%"class.icu_69::ByteSink"* %1, i8* nonnull %217, i32 4) #11
  br label %264

264:                                              ; preds = %215, %230, %232, %233, %253, %255, %256
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221) #11
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %217) #11
  %265 = load i8*, i8** %34, align 8
  %266 = bitcast i32* %6 to [4 x i8]*
  %267 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %267) #11
  %268 = getelementptr inbounds [4 x i8], [4 x i8]* %266, i64 0, i64 1
  %269 = getelementptr inbounds [4 x i8], [4 x i8]* %266, i64 0, i64 2
  %270 = bitcast i32* %7 to i8*
  store i32 -1431655766, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %270) #11
  store i32 0, i32* %7, align 4
  %271 = load i32, i32* %3, align 4
  %272 = icmp slt i32 %271, 1
  br i1 %272, label %273, label %341

273:                                              ; preds = %264
  %274 = call i32 @uloc_getCountry_69(i8* %265, i8* nonnull %267, i32 4, i32* nonnull %7) #11
  %275 = load i32, i32* %7, align 4
  %276 = icmp sgt i32 %275, 0
  %277 = icmp eq i32 %275, -124
  %278 = or i1 %276, %277
  br i1 %278, label %279, label %282

279:                                              ; preds = %273
  %280 = icmp eq i8 %2, 0
  br i1 %280, label %341, label %281

281:                                              ; preds = %279
  store i32 1, i32* %3, align 4
  br label %341

282:                                              ; preds = %273
  %283 = icmp sgt i32 %274, 0
  br i1 %283, label %284, label %341

284:                                              ; preds = %282
  switch i32 %274, label %305 [
    i32 2, label %285
    i32 3, label %293
  ]

285:                                              ; preds = %284
  %286 = load i8, i8* %267, align 4
  %287 = call signext i8 @uprv_isASCIILetter_69(i8 signext %286) #11
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %305, label %289

289:                                              ; preds = %285
  %290 = load i8, i8* %268, align 1
  %291 = call signext i8 @uprv_isASCIILetter_69(i8 signext %290) #11
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %308

293:                                              ; preds = %284
  %294 = load i8, i8* %267, align 4
  %295 = add i8 %294, -48
  %296 = icmp ult i8 %295, 10
  br i1 %296, label %297, label %305

297:                                              ; preds = %293
  %298 = load i8, i8* %268, align 1
  %299 = add i8 %298, -48
  %300 = icmp ult i8 %299, 10
  br i1 %300, label %301, label %305

301:                                              ; preds = %297
  %302 = load i8, i8* %269, align 2
  %303 = add i8 %302, -48
  %304 = icmp ugt i8 %303, 9
  br i1 %304, label %305, label %308

305:                                              ; preds = %301, %297, %293, %289, %285, %284
  %306 = icmp eq i8 %2, 0
  br i1 %306, label %341, label %307

307:                                              ; preds = %305
  store i32 1, i32* %3, align 4
  br label %341

308:                                              ; preds = %301, %289
  %309 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %310 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %309, align 8
  %311 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %310, i64 2
  %312 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %311, align 8
  call void %312(%"class.icu_69::ByteSink"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1) #11
  %313 = call i32 @strcmp(i8* nonnull %267, i8* getelementptr inbounds ([12 x [3 x i8]], [12 x [3 x i8]]* @_ZL17DEPRECATEDREGIONS, i64 0, i64 0, i64 0)) #12
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %321

315:                                              ; preds = %338, %335, %332, %329, %321, %308
  %316 = phi i64 [ 1, %308 ], [ 3, %321 ], [ 5, %329 ], [ 7, %332 ], [ 9, %335 ], [ 11, %338 ]
  %317 = getelementptr inbounds [12 x [3 x i8]], [12 x [3 x i8]]* @_ZL17DEPRECATEDREGIONS, i64 0, i64 %316, i64 0
  %318 = call i8* @strcpy(i8* nonnull %267, i8* %317) #11
  %319 = call i64 @strlen(i8* nonnull %267) #12
  %320 = trunc i64 %319 to i32
  br label %324

321:                                              ; preds = %308
  %322 = call i32 @strcmp(i8* nonnull %267, i8* getelementptr inbounds ([12 x [3 x i8]], [12 x [3 x i8]]* @_ZL17DEPRECATEDREGIONS, i64 0, i64 2, i64 0)) #12
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %315, label %329

324:                                              ; preds = %338, %315
  %325 = phi i32 [ %320, %315 ], [ %274, %338 ]
  %326 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %309, align 8
  %327 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %326, i64 2
  %328 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %327, align 8
  call void %328(%"class.icu_69::ByteSink"* %1, i8* nonnull %267, i32 %325) #11
  br label %341

329:                                              ; preds = %321
  %330 = call i32 @strcmp(i8* nonnull %267, i8* getelementptr inbounds ([12 x [3 x i8]], [12 x [3 x i8]]* @_ZL17DEPRECATEDREGIONS, i64 0, i64 4, i64 0)) #12
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %315, label %332

332:                                              ; preds = %329
  %333 = call i32 @strcmp(i8* nonnull %267, i8* getelementptr inbounds ([12 x [3 x i8]], [12 x [3 x i8]]* @_ZL17DEPRECATEDREGIONS, i64 0, i64 6, i64 0)) #12
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %315, label %335

335:                                              ; preds = %332
  %336 = call i32 @strcmp(i8* nonnull %267, i8* getelementptr inbounds ([12 x [3 x i8]], [12 x [3 x i8]]* @_ZL17DEPRECATEDREGIONS, i64 0, i64 8, i64 0)) #12
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %315, label %338

338:                                              ; preds = %335
  %339 = call i32 @strcmp(i8* nonnull %267, i8* getelementptr inbounds ([12 x [3 x i8]], [12 x [3 x i8]]* @_ZL17DEPRECATEDREGIONS, i64 0, i64 10, i64 0)) #12
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %315, label %324

341:                                              ; preds = %264, %279, %281, %282, %305, %307, %324
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %270) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %267) #11
  %342 = load i8*, i8** %34, align 8
  %343 = getelementptr inbounds [157 x i8], [157 x i8]* %24, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 157, i8* nonnull %343) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %343, i8 -86, i64 157, i1 false) #11
  %344 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %344) #11
  store i32 0, i32* %5, align 4
  %345 = load i32, i32* %3, align 4
  %346 = icmp slt i32 %345, 1
  br i1 %346, label %347, label %511

347:                                              ; preds = %341
  %348 = call i32 @uloc_getVariant_69(i8* %342, i8* nonnull %343, i32 157, i32* nonnull %5) #11
  %349 = load i32, i32* %5, align 4
  %350 = icmp sgt i32 %349, 0
  %351 = icmp eq i32 %349, -124
  %352 = or i1 %350, %351
  br i1 %352, label %353, label %356

353:                                              ; preds = %347
  %354 = icmp eq i8 %2, 0
  br i1 %354, label %511, label %355

355:                                              ; preds = %353
  store i32 1, i32* %3, align 4
  br label %511

356:                                              ; preds = %347
  %357 = icmp sgt i32 %348, 0
  br i1 %357, label %358, label %511

358:                                              ; preds = %356
  %359 = icmp ne i32 %348, 5
  %360 = icmp eq i8 %2, 0
  br label %361

361:                                              ; preds = %447, %358
  %362 = phi i8 [ 0, %358 ], [ %448, %447 ]
  %363 = phi i8 [ 1, %358 ], [ %452, %447 ]
  %364 = phi i8* [ null, %358 ], [ %451, %447 ]
  %365 = phi i8* [ %343, %358 ], [ %453, %447 ]
  %366 = phi %struct.VariantListEntry* [ null, %358 ], [ %450, %447 ]
  %367 = phi i8* [ null, %358 ], [ %449, %447 ]
  %368 = load i8, i8* %365, align 1
  switch i8 %368, label %444 [
    i8 0, label %370
    i8 45, label %369
    i8 95, label %369
  ]

369:                                              ; preds = %361, %361
  store i8 0, i8* %365, align 1
  br label %370

370:                                              ; preds = %369, %361
  %371 = phi i8 [ %363, %369 ], [ %368, %361 ]
  %372 = icmp eq i8* %364, null
  br i1 %372, label %376, label %373

373:                                              ; preds = %370
  %374 = load i8, i8* %364, align 1
  %375 = icmp eq i8 %374, 0
  br i1 %375, label %387, label %378

376:                                              ; preds = %370
  br i1 %360, label %447, label %377

377:                                              ; preds = %376
  store i32 1, i32* %3, align 4
  br label %455

378:                                              ; preds = %373, %378
  %379 = phi i64 [ %383, %378 ], [ 0, %373 ]
  %380 = phi i8 [ %385, %378 ], [ %374, %373 ]
  %381 = phi i8* [ %384, %378 ], [ %364, %373 ]
  %382 = call signext i8 @uprv_asciitolower_69(i8 signext %380) #11
  store i8 %382, i8* %381, align 1
  %383 = add nuw i64 %379, 1
  %384 = getelementptr inbounds i8, i8* %364, i64 %383
  %385 = load i8, i8* %384, align 1
  %386 = icmp eq i8 %385, 0
  br i1 %386, label %387, label %378

387:                                              ; preds = %378, %373
  %388 = call fastcc signext i8 @_ZL16_isVariantSubtagPKci(i8* nonnull %364, i32 -1) #11
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %422, label %390

390:                                              ; preds = %387
  %391 = call i32 @strcmp(i8* nonnull %364, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZL11POSIX_VALUE, i64 0, i64 0)) #12
  %392 = icmp ne i32 %391, 0
  %393 = or i1 %359, %392
  br i1 %393, label %394, label %447

394:                                              ; preds = %390
  %395 = call noalias i8* @uprv_malloc_69(i64 16) #10
  %396 = icmp eq i8* %395, null
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  store i32 7, i32* %3, align 4
  br label %455

398:                                              ; preds = %394
  %399 = bitcast i8* %395 to i8**
  store i8* %364, i8** %399, align 8
  %400 = icmp eq %struct.VariantListEntry* %366, null
  br i1 %400, label %401, label %410

401:                                              ; preds = %398
  %402 = bitcast i8* %395 to %struct.VariantListEntry*
  %403 = getelementptr inbounds i8, i8* %395, i64 8
  %404 = bitcast i8* %403 to %struct.VariantListEntry**
  store %struct.VariantListEntry* null, %struct.VariantListEntry** %404, align 8
  br label %447

405:                                              ; preds = %416
  %406 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %411, i64 0, i32 1
  %407 = bitcast %struct.VariantListEntry** %406 to i8**
  store i8* %395, i8** %407, align 8
  %408 = getelementptr inbounds i8, i8* %395, i64 8
  %409 = bitcast i8* %408 to %struct.VariantListEntry**
  store %struct.VariantListEntry* null, %struct.VariantListEntry** %409, align 8
  br label %447

410:                                              ; preds = %398, %416
  %411 = phi %struct.VariantListEntry* [ %418, %416 ], [ %366, %398 ]
  %412 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %411, i64 0, i32 0
  %413 = load i8*, i8** %412, align 8
  %414 = call i32 @strcmp(i8* nonnull %364, i8* %413) #12
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %420, label %416

416:                                              ; preds = %410
  %417 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %411, i64 0, i32 1
  %418 = load %struct.VariantListEntry*, %struct.VariantListEntry** %417, align 8
  %419 = icmp eq %struct.VariantListEntry* %418, null
  br i1 %419, label %405, label %410

420:                                              ; preds = %410
  call void @uprv_free_69(i8* nonnull %395) #11
  br i1 %360, label %447, label %421

421:                                              ; preds = %420
  store i32 1, i32* %3, align 4
  br label %455

422:                                              ; preds = %387
  br i1 %360, label %424, label %423

423:                                              ; preds = %422
  store i32 1, i32* %3, align 4
  br label %455

424:                                              ; preds = %422
  %425 = call i64 @strlen(i8* nonnull %364) #12
  %426 = trunc i64 %425 to i32
  %427 = add i32 %426, -1
  %428 = icmp ult i32 %427, 8
  br i1 %428, label %429, label %447

429:                                              ; preds = %424
  %430 = and i64 %425, 4294967295
  br label %431

431:                                              ; preds = %441, %429
  %432 = phi i64 [ 0, %429 ], [ %442, %441 ]
  %433 = getelementptr inbounds i8, i8* %364, i64 %432
  %434 = load i8, i8* %433, align 1
  %435 = call signext i8 @uprv_isASCIILetter_69(i8 signext %434) #11
  %436 = icmp eq i8 %435, 0
  br i1 %436, label %437, label %441

437:                                              ; preds = %431
  %438 = load i8, i8* %433, align 1
  %439 = add i8 %438, -48
  %440 = icmp ult i8 %439, 10
  br i1 %440, label %441, label %447

441:                                              ; preds = %437, %431
  %442 = add nuw nsw i64 %432, 1
  %443 = icmp eq i64 %442, %430
  br i1 %443, label %455, label %431

444:                                              ; preds = %361
  %445 = icmp eq i8* %364, null
  %446 = select i1 %445, i8* %365, i8* %364
  br label %447

447:                                              ; preds = %437, %390, %444, %424, %420, %405, %401, %376
  %448 = phi i8 [ %362, %444 ], [ %362, %376 ], [ %362, %424 ], [ %362, %401 ], [ %362, %420 ], [ %362, %405 ], [ 1, %390 ], [ %362, %437 ]
  %449 = phi i8* [ %367, %444 ], [ %367, %376 ], [ %367, %424 ], [ %395, %401 ], [ %367, %420 ], [ %367, %405 ], [ %367, %390 ], [ %367, %437 ]
  %450 = phi %struct.VariantListEntry* [ %366, %444 ], [ %366, %376 ], [ %366, %424 ], [ %402, %401 ], [ %366, %420 ], [ %366, %405 ], [ %366, %390 ], [ %366, %437 ]
  %451 = phi i8* [ %446, %444 ], [ null, %376 ], [ null, %424 ], [ null, %401 ], [ null, %420 ], [ null, %405 ], [ null, %390 ], [ null, %437 ]
  %452 = phi i8 [ %363, %444 ], [ %371, %376 ], [ %371, %424 ], [ %371, %401 ], [ %371, %420 ], [ %371, %405 ], [ %371, %390 ], [ %371, %437 ]
  %453 = getelementptr inbounds i8, i8* %365, i64 1
  %454 = icmp eq i8 %452, 0
  br i1 %454, label %455, label %361

455:                                              ; preds = %447, %441, %423, %421, %397, %377
  %456 = phi i8 [ %362, %377 ], [ %362, %423 ], [ %362, %397 ], [ %362, %421 ], [ %362, %441 ], [ %448, %447 ]
  %457 = phi i8* [ %367, %377 ], [ %367, %423 ], [ %367, %397 ], [ %367, %421 ], [ %367, %441 ], [ %449, %447 ]
  %458 = phi %struct.VariantListEntry* [ %366, %377 ], [ %366, %423 ], [ %366, %397 ], [ %366, %421 ], [ %366, %441 ], [ %450, %447 ]
  %459 = load i32, i32* %3, align 4
  %460 = icmp slt i32 %459, 1
  %461 = icmp ne %struct.VariantListEntry* %458, null
  %462 = and i1 %461, %460
  br i1 %462, label %463, label %502

463:                                              ; preds = %455, %470
  %464 = phi %struct.VariantListEntry* [ %471, %470 ], [ %458, %455 ]
  %465 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %464, i64 0, i32 1
  %466 = load %struct.VariantListEntry*, %struct.VariantListEntry** %465, align 8
  %467 = icmp eq %struct.VariantListEntry* %466, null
  br i1 %467, label %485, label %468

468:                                              ; preds = %463
  %469 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %464, i64 0, i32 0
  br label %473

470:                                              ; preds = %481
  %471 = load %struct.VariantListEntry*, %struct.VariantListEntry** %465, align 8
  %472 = icmp eq %struct.VariantListEntry* %471, null
  br i1 %472, label %485, label %463

473:                                              ; preds = %481, %468
  %474 = phi %struct.VariantListEntry* [ %466, %468 ], [ %483, %481 ]
  %475 = load i8*, i8** %469, align 8
  %476 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %474, i64 0, i32 0
  %477 = load i8*, i8** %476, align 8
  %478 = call i32 @strcmp(i8* %475, i8* %477) #12
  %479 = icmp sgt i32 %478, 0
  br i1 %479, label %480, label %481

480:                                              ; preds = %473
  store i8* %477, i8** %469, align 8
  store i8* %475, i8** %476, align 8
  br label %481

481:                                              ; preds = %480, %473
  %482 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %474, i64 0, i32 1
  %483 = load %struct.VariantListEntry*, %struct.VariantListEntry** %482, align 8
  %484 = icmp eq %struct.VariantListEntry* %483, null
  br i1 %484, label %470, label %473

485:                                              ; preds = %470, %463
  %486 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  br label %487

487:                                              ; preds = %487, %485
  %488 = phi %struct.VariantListEntry* [ %458, %485 ], [ %500, %487 ]
  %489 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %486, align 8
  %490 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %489, i64 2
  %491 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %490, align 8
  call void %491(%"class.icu_69::ByteSink"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1) #11
  %492 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %488, i64 0, i32 0
  %493 = load i8*, i8** %492, align 8
  %494 = call i64 @strlen(i8* %493) #12
  %495 = trunc i64 %494 to i32
  %496 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %486, align 8
  %497 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %496, i64 2
  %498 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %497, align 8
  call void %498(%"class.icu_69::ByteSink"* %1, i8* %493, i32 %495) #11
  %499 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %488, i64 0, i32 1
  %500 = load %struct.VariantListEntry*, %struct.VariantListEntry** %499, align 8
  %501 = icmp eq %struct.VariantListEntry* %500, null
  br i1 %501, label %502, label %487

502:                                              ; preds = %487, %455
  %503 = icmp eq %struct.VariantListEntry* %458, null
  br i1 %503, label %511, label %504

504:                                              ; preds = %502, %504
  %505 = phi %struct.VariantListEntry* [ %508, %504 ], [ %458, %502 ]
  %506 = phi i8* [ %509, %504 ], [ %457, %502 ]
  %507 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %505, i64 0, i32 1
  %508 = load %struct.VariantListEntry*, %struct.VariantListEntry** %507, align 8
  %509 = bitcast %struct.VariantListEntry* %508 to i8*
  call void @uprv_free_69(i8* %506) #11
  %510 = icmp eq %struct.VariantListEntry* %508, null
  br i1 %510, label %511, label %504

511:                                              ; preds = %504, %341, %353, %355, %356, %502
  %512 = phi i8 [ 0, %353 ], [ 0, %355 ], [ %456, %502 ], [ 0, %356 ], [ 0, %341 ], [ %456, %504 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %344) #11
  call void @llvm.lifetime.end.p0i8(i64 157, i8* nonnull %343) #11
  %513 = load i8*, i8** %34, align 8
  %514 = getelementptr inbounds [100 x i8], [100 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %514) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %514, i8 0, i64 100, i1 false) #11
  %515 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %515) #11
  store i32 0, i32* %13, align 4
  %516 = bitcast %"class.icu_69::MemoryPool"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %516) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %516, i8 -86, i64 88, i1 false) #11
  %517 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %14, i64 0, i32 0
  store i32 0, i32* %517, align 8
  %518 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %14, i64 0, i32 1, i32 0
  %519 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %14, i64 0, i32 1, i32 3, i64 0
  store %struct.AttributeListEntry** %519, %struct.AttributeListEntry*** %518, align 8
  %520 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %14, i64 0, i32 1, i32 1
  store i32 8, i32* %520, align 8
  %521 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %14, i64 0, i32 1, i32 2
  store i8 0, i8* %521, align 4
  %522 = bitcast %"class.icu_69::MemoryPool.2"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %522) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %522, i8 -86, i64 88, i1 false) #11
  %523 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %15, i64 0, i32 0
  store i32 0, i32* %523, align 8
  %524 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %15, i64 0, i32 1, i32 0
  %525 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %15, i64 0, i32 1, i32 3, i64 0
  store %struct.ExtensionListEntry** %525, %struct.ExtensionListEntry*** %524, align 8
  %526 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %15, i64 0, i32 1, i32 1
  store i32 8, i32* %526, align 8
  %527 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %15, i64 0, i32 1, i32 2
  store i8 0, i8* %527, align 4
  %528 = bitcast %"class.icu_69::MemoryPool.4"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %528) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %528, i8 -86, i64 88, i1 false) #11
  %529 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %16, i64 0, i32 0
  store i32 0, i32* %529, align 8
  %530 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %16, i64 0, i32 1, i32 0
  %531 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %16, i64 0, i32 1, i32 3, i64 0
  store %"class.icu_69::CharString"** %531, %"class.icu_69::CharString"*** %530, align 8
  %532 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %16, i64 0, i32 1, i32 1
  store i32 8, i32* %532, align 8
  %533 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %16, i64 0, i32 1, i32 2
  store i8 0, i8* %533, align 4
  %534 = call %struct.UEnumeration* @uloc_openKeywords_69(i8* %513, i32* %3) #11
  %535 = load i32, i32* %3, align 4
  %536 = icmp slt i32 %535, 1
  %537 = icmp ne i8 %512, 0
  %538 = or i1 %537, %536
  br i1 %538, label %539, label %1052

539:                                              ; preds = %511
  %540 = icmp ne %struct.UEnumeration* %534, null
  %541 = zext i1 %540 to i8
  %542 = or i8 %512, %541
  %543 = icmp eq i8 %542, 0
  br i1 %543, label %1052, label %544

544:                                              ; preds = %539
  %545 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %545) #11
  store i32 -1431655766, i32* %17, align 4
  %546 = bitcast %struct.ExtensionListEntry** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %546) #11
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %18, align 8
  %547 = bitcast %"class.icu_69::MemoryPool.4"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %547) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %547, i8 -86, i64 88, i1 false) #11
  %548 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %19, i64 0, i32 0
  store i32 0, i32* %548, align 8
  %549 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %19, i64 0, i32 1, i32 0
  %550 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %19, i64 0, i32 1, i32 3, i64 0
  store %"class.icu_69::CharString"** %550, %"class.icu_69::CharString"*** %549, align 8
  %551 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %19, i64 0, i32 1, i32 1
  store i32 8, i32* %551, align 8
  %552 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %19, i64 0, i32 1, i32 2
  store i8 0, i8* %552, align 4
  %553 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %553) #11
  store i32 0, i32* %20, align 4
  %554 = bitcast %"class.icu_69::CharString"* %21 to i8*
  %555 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %21, i64 0, i32 0, i32 0
  %556 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %21, i64 0, i32 0, i32 3, i64 0
  %557 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %21, i64 0, i32 0, i32 1
  %558 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %21, i64 0, i32 0, i32 2
  %559 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %21, i64 0, i32 1
  %560 = bitcast %"class.icu_69::CharStringByteSink"* %22 to i8*
  %561 = getelementptr inbounds %"class.icu_69::CharStringByteSink", %"class.icu_69::CharStringByteSink"* %22, i64 0, i32 0
  %562 = icmp eq i8 %2, 0
  %563 = bitcast i8** %23 to i8*
  %564 = bitcast %"class.icu_69::CharString"* %21 to i64*
  %565 = bitcast i8** %23 to i64*
  %566 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %14, i64 0, i32 1
  %567 = bitcast %"class.icu_69::MaybeStackArray.1"* %566 to i8**
  %568 = getelementptr inbounds %"class.icu_69::MaybeStackArray.1", %"class.icu_69::MaybeStackArray.1"* %566, i64 0, i32 0
  %569 = icmp ne i8 %2, 0
  %570 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %15, i64 0, i32 1
  %571 = bitcast %"class.icu_69::MaybeStackArray.3"* %570 to i8**
  %572 = getelementptr inbounds %"class.icu_69::MaybeStackArray.3", %"class.icu_69::MaybeStackArray.3"* %570, i64 0, i32 0
  br label %573

573:                                              ; preds = %856, %544
  %574 = phi %struct.AttributeListEntry* [ null, %544 ], [ %848, %856 ]
  %575 = phi i8* [ null, %544 ], [ %850, %856 ]
  %576 = phi i8* [ null, %544 ], [ %851, %856 ]
  %577 = call i8* @uenum_next_69(%struct.UEnumeration* %534, i32* null, i32* %3) #11
  %578 = icmp eq i8* %577, null
  br i1 %578, label %858, label %579

579:                                              ; preds = %573
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %554) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %554, i8 -86, i64 64, i1 false) #11
  store i8* %556, i8** %555, align 8
  store i32 40, i32* %557, align 8
  store i8 0, i8* %558, align 4
  store i32 0, i32* %559, align 8
  store i8 0, i8* %556, align 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %560) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %560, i8 -86, i64 16, i1 false) #11
  call void @_ZN6icu_6918CharStringByteSinkC1EPNS_10CharStringE(%"class.icu_69::CharStringByteSink"* nonnull %22, %"class.icu_69::CharString"* nonnull %21) #11
  call void @ulocimp_getKeywordValue_69(i8* %513, i8* nonnull %577, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %561, i32* nonnull %20) #11
  call void @_ZN6icu_6918CharStringByteSinkD1Ev(%"class.icu_69::CharStringByteSink"* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %560) #11
  %580 = load i32, i32* %559, align 8
  store i32 %580, i32* %17, align 4
  %581 = load i32, i32* %20, align 4
  %582 = icmp slt i32 %581, 1
  br i1 %582, label %589, label %583

583:                                              ; preds = %579
  %584 = icmp eq i32 %581, 7
  br i1 %584, label %585, label %586

585:                                              ; preds = %583
  store i32 7, i32* %3, align 4
  br label %847

586:                                              ; preds = %583
  br i1 %562, label %588, label %587

587:                                              ; preds = %586
  store i32 1, i32* %3, align 4
  br label %847

588:                                              ; preds = %586
  store i32 0, i32* %20, align 4
  br label %847

589:                                              ; preds = %579
  %590 = call i64 @strlen(i8* nonnull %577) #12
  %591 = trunc i64 %590 to i32
  %592 = call i32 @strcmp(i8* nonnull %577, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL20LOCALE_ATTRIBUTE_KEY, i64 0, i64 0)) #12
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %723

594:                                              ; preds = %589
  %595 = icmp sgt i32 %580, 0
  br i1 %595, label %596, label %792

596:                                              ; preds = %594, %719
  %597 = phi i32 [ %721, %719 ], [ %580, %594 ]
  %598 = phi %struct.AttributeListEntry* [ %720, %719 ], [ %574, %594 ]
  %599 = phi i32 [ %635, %719 ], [ 0, %594 ]
  store i32 0, i32* %13, align 4
  %600 = icmp slt i32 %599, %597
  br i1 %600, label %601, label %631

601:                                              ; preds = %596
  %602 = sext i32 %599 to i64
  %603 = load i8*, i8** %555, align 8
  %604 = sext i32 %597 to i64
  %605 = sub nsw i64 %604, %602
  br label %606

606:                                              ; preds = %612, %601
  %607 = phi i64 [ %613, %612 ], [ 0, %601 ]
  %608 = phi i64 [ %616, %612 ], [ %602, %601 ]
  %609 = getelementptr inbounds i8, i8* %603, i64 %608
  %610 = load i8, i8* %609, align 1
  %611 = icmp eq i8 %610, 45
  br i1 %611, label %620, label %612

612:                                              ; preds = %606
  %613 = add nuw nsw i64 %607, 1
  %614 = trunc i64 %613 to i32
  store i32 %614, i32* %13, align 4
  %615 = getelementptr inbounds [100 x i8], [100 x i8]* %12, i64 0, i64 %607
  store i8 %610, i8* %615, align 1
  %616 = add nsw i64 %608, 1
  %617 = icmp eq i64 %613, %605
  br i1 %617, label %618, label %606

618:                                              ; preds = %612
  %619 = trunc i64 %616 to i32
  br label %625

620:                                              ; preds = %606
  %621 = trunc i64 %607 to i32
  %622 = trunc i64 %608 to i32
  %623 = add nsw i32 %622, 1
  %624 = icmp eq i32 %621, 0
  br i1 %624, label %631, label %625

625:                                              ; preds = %620, %618
  %626 = phi i32 [ %619, %618 ], [ %623, %620 ]
  %627 = phi i64 [ %605, %618 ], [ %607, %620 ]
  %628 = shl i64 %627, 32
  %629 = ashr exact i64 %628, 32
  %630 = getelementptr inbounds [100 x i8], [100 x i8]* %12, i64 0, i64 %629
  store i8 0, i8* %630, align 1
  br label %634

631:                                              ; preds = %620, %596
  %632 = phi i32 [ %623, %620 ], [ %599, %596 ]
  %633 = icmp slt i32 %632, %597
  br i1 %633, label %634, label %792

634:                                              ; preds = %631, %625
  %635 = phi i32 [ %632, %631 ], [ %626, %625 ]
  %636 = load i32, i32* %520, align 8
  %637 = load i32, i32* %517, align 8
  %638 = icmp eq i32 %637, %636
  br i1 %638, label %639, label %666

639:                                              ; preds = %634
  %640 = icmp eq i32 %636, 8
  %641 = select i1 %640, i32 2, i32 1
  %642 = shl nsw i32 %636, %641
  %643 = icmp sgt i32 %642, 0
  br i1 %643, label %644, label %679

644:                                              ; preds = %639
  %645 = sext i32 %642 to i64
  %646 = shl nsw i64 %645, 3
  %647 = call noalias i8* @uprv_malloc_69(i64 %646) #10
  %648 = icmp eq i8* %647, null
  br i1 %648, label %679, label %649

649:                                              ; preds = %644
  %650 = icmp sgt i32 %636, 0
  br i1 %650, label %651, label %660

651:                                              ; preds = %649
  %652 = load i32, i32* %520, align 8
  %653 = icmp slt i32 %652, %636
  %654 = select i1 %653, i32 %652, i32 %636
  %655 = icmp sgt i32 %654, %642
  %656 = select i1 %655, i32 %642, i32 %654
  %657 = load i8*, i8** %567, align 8
  %658 = sext i32 %656 to i64
  %659 = shl nsw i64 %658, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %647, i8* align 8 %657, i64 %659, i1 false) #11
  br label %660

660:                                              ; preds = %651, %649
  %661 = load i8, i8* %521, align 4
  %662 = icmp eq i8 %661, 0
  br i1 %662, label %665, label %663

663:                                              ; preds = %660
  %664 = load i8*, i8** %567, align 8
  call void @uprv_free_69(i8* %664) #11
  br label %665

665:                                              ; preds = %663, %660
  store i8* %647, i8** %567, align 8
  store i32 %642, i32* %520, align 8
  store i8 1, i8* %521, align 4
  br label %666

666:                                              ; preds = %665, %634
  %667 = call i8* @_ZN6icu_697UMemorynwEm(i64 16) #11
  %668 = icmp eq i8* %667, null
  br i1 %668, label %671, label %669

669:                                              ; preds = %666
  %670 = bitcast i8* %667 to %struct.AttributeListEntry*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %667, i8 0, i64 16, i1 false) #11
  br label %671

671:                                              ; preds = %669, %666
  %672 = phi %struct.AttributeListEntry* [ %670, %669 ], [ null, %666 ]
  %673 = load i32, i32* %517, align 8
  %674 = add nsw i32 %673, 1
  store i32 %674, i32* %517, align 8
  %675 = sext i32 %673 to i64
  %676 = load %struct.AttributeListEntry**, %struct.AttributeListEntry*** %568, align 8
  %677 = getelementptr inbounds %struct.AttributeListEntry*, %struct.AttributeListEntry** %676, i64 %675
  store %struct.AttributeListEntry* %672, %struct.AttributeListEntry** %677, align 8
  %678 = icmp eq %struct.AttributeListEntry* %672, null
  br i1 %678, label %679, label %680

679:                                              ; preds = %671, %644, %639
  store i32 7, i32* %3, align 4
  br label %792

680:                                              ; preds = %671
  %681 = call %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRA100_cRiR10UErrorCodeEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"* nonnull %16, [100 x i8]* nonnull dereferenceable(100) %12, i32* nonnull dereferenceable(4) %13, i32* dereferenceable(4) %3) #11
  %682 = icmp eq %"class.icu_69::CharString"* %681, null
  br i1 %682, label %683, label %684

683:                                              ; preds = %680
  store i32 7, i32* %3, align 4
  br label %792

684:                                              ; preds = %680
  %685 = load i32, i32* %3, align 4
  %686 = icmp slt i32 %685, 1
  br i1 %686, label %687, label %792

687:                                              ; preds = %684
  %688 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %681, i64 0, i32 0, i32 0
  %689 = load i8*, i8** %688, align 8
  %690 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %672, i64 0, i32 0
  store i8* %689, i8** %690, align 8
  %691 = icmp eq %struct.AttributeListEntry* %598, null
  br i1 %691, label %715, label %692

692:                                              ; preds = %687
  %693 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %598, i64 0, i32 0
  %694 = load i8*, i8** %693, align 8
  %695 = call i32 @strcmp(i8* %689, i8* %694) #12
  %696 = icmp slt i32 %695, 0
  br i1 %696, label %715, label %706

697:                                              ; preds = %710
  %698 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %708, i64 0, i32 1
  store %struct.AttributeListEntry* %672, %struct.AttributeListEntry** %698, align 8
  br label %715

699:                                              ; preds = %710
  %700 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %712, i64 0, i32 0
  %701 = load i8*, i8** %700, align 8
  %702 = call i32 @strcmp(i8* %689, i8* %701) #12
  %703 = icmp slt i32 %702, 0
  br i1 %703, label %704, label %706

704:                                              ; preds = %699
  %705 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %708, i64 0, i32 1
  store %struct.AttributeListEntry* %672, %struct.AttributeListEntry** %705, align 8
  br label %715

706:                                              ; preds = %692, %699
  %707 = phi i32 [ %702, %699 ], [ %695, %692 ]
  %708 = phi %struct.AttributeListEntry* [ %712, %699 ], [ %598, %692 ]
  %709 = icmp eq i32 %707, 0
  br i1 %709, label %714, label %710

710:                                              ; preds = %706
  %711 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %708, i64 0, i32 1
  %712 = load %struct.AttributeListEntry*, %struct.AttributeListEntry** %711, align 8
  %713 = icmp eq %struct.AttributeListEntry* %712, null
  br i1 %713, label %697, label %699

714:                                              ; preds = %706
  br i1 %569, label %722, label %719

715:                                              ; preds = %692, %704, %687, %697
  %716 = phi %struct.AttributeListEntry* [ null, %697 ], [ null, %687 ], [ %712, %704 ], [ %598, %692 ]
  %717 = phi %struct.AttributeListEntry* [ %598, %697 ], [ %672, %687 ], [ %598, %704 ], [ %672, %692 ]
  %718 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %672, i64 0, i32 1
  store %struct.AttributeListEntry* %716, %struct.AttributeListEntry** %718, align 8
  br label %719

719:                                              ; preds = %715, %714
  %720 = phi %struct.AttributeListEntry* [ %598, %714 ], [ %717, %715 ]
  %721 = load i32, i32* %17, align 4
  br label %596

722:                                              ; preds = %714
  store i32 1, i32* %3, align 4
  br label %792

723:                                              ; preds = %589
  %724 = icmp sgt i32 %591, 1
  br i1 %724, label %725, label %752

725:                                              ; preds = %723
  %726 = call i8* @uloc_toUnicodeLocaleKey_69(i8* nonnull %577) #11
  %727 = icmp eq i8* %726, null
  br i1 %727, label %728, label %730

728:                                              ; preds = %725
  br i1 %562, label %847, label %729

729:                                              ; preds = %728
  store i32 1, i32* %3, align 4
  br label %847

730:                                              ; preds = %725
  %731 = load i8*, i8** %555, align 8
  %732 = call i8* @uloc_toUnicodeLocaleType_69(i8* nonnull %577, i8* %731) #11
  %733 = icmp eq i8* %732, null
  br i1 %733, label %734, label %736

734:                                              ; preds = %730
  br i1 %562, label %847, label %735

735:                                              ; preds = %734
  store i32 1, i32* %3, align 4
  br label %847

736:                                              ; preds = %730
  %737 = load i8*, i8** %555, align 8
  %738 = icmp eq i8* %732, %737
  br i1 %738, label %739, label %792

739:                                              ; preds = %736
  %740 = call %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRS1_R10UErrorCodeEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"* nonnull %19, %"class.icu_69::CharString"* nonnull dereferenceable(64) %21, i32* nonnull dereferenceable(4) %20) #11
  %741 = icmp eq %"class.icu_69::CharString"* %740, null
  br i1 %741, label %742, label %743

742:                                              ; preds = %739
  store i32 7, i32* %3, align 4
  br label %847

743:                                              ; preds = %739
  %744 = load i32, i32* %20, align 4
  %745 = icmp slt i32 %744, 1
  br i1 %745, label %747, label %746

746:                                              ; preds = %743
  store i32 %744, i32* %3, align 4
  br label %847

747:                                              ; preds = %743
  %748 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %740, i64 0, i32 0, i32 0
  %749 = load i8*, i8** %748, align 8
  %750 = call i8* @T_CString_toLowerCase_69(i8* %749) #11
  %751 = load i8*, i8** %748, align 8
  br label %792

752:                                              ; preds = %723
  %753 = load i8, i8* %577, align 1
  %754 = icmp eq i8 %753, 120
  br i1 %754, label %755, label %761

755:                                              ; preds = %752
  %756 = load i8*, i8** %555, align 8
  %757 = call signext i8 @ultag_isPrivateuseValueSubtags_69(i8* %756, i32 %580) #11
  %758 = icmp eq i8 %757, 0
  br i1 %758, label %759, label %780

759:                                              ; preds = %755
  br i1 %562, label %847, label %760

760:                                              ; preds = %759
  store i32 1, i32* %3, align 4
  br label %847

761:                                              ; preds = %752
  %762 = icmp eq i32 %591, 1
  br i1 %762, label %763, label %778

763:                                              ; preds = %761
  %764 = call signext i8 @uprv_isASCIILetter_69(i8 signext %753) #11
  %765 = icmp ne i8 %764, 0
  %766 = load i8, i8* %577, align 1
  %767 = add i8 %766, -48
  %768 = icmp ult i8 %767, 10
  %769 = or i1 %765, %768
  br i1 %769, label %770, label %778

770:                                              ; preds = %763
  %771 = call signext i8 @uprv_asciitolower_69(i8 signext %766) #11
  %772 = icmp eq i8 %771, 120
  br i1 %772, label %778, label %773

773:                                              ; preds = %770
  %774 = load i8*, i8** %555, align 8
  %775 = load i32, i32* %17, align 4
  %776 = call signext i8 @ultag_isExtensionSubtags_69(i8* %774, i32 %775) #11
  %777 = icmp eq i8 %776, 0
  br i1 %777, label %778, label %780

778:                                              ; preds = %773, %770, %763, %761
  br i1 %562, label %847, label %779

779:                                              ; preds = %778
  store i32 1, i32* %3, align 4
  br label %847

780:                                              ; preds = %773, %755
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %563) #11
  %781 = load i64, i64* %564, align 8
  store i64 %781, i64* %565, align 8
  %782 = call %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJPcRiR10UErrorCodeEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"* nonnull %19, i8** nonnull dereferenceable(8) %23, i32* nonnull dereferenceable(4) %17, i32* nonnull dereferenceable(4) %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %563) #11
  %783 = icmp eq %"class.icu_69::CharString"* %782, null
  br i1 %783, label %784, label %785

784:                                              ; preds = %780
  store i32 7, i32* %3, align 4
  br label %847

785:                                              ; preds = %780
  %786 = load i32, i32* %20, align 4
  %787 = icmp slt i32 %786, 1
  br i1 %787, label %789, label %788

788:                                              ; preds = %785
  store i32 %786, i32* %3, align 4
  br label %847

789:                                              ; preds = %785
  %790 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %782, i64 0, i32 0, i32 0
  %791 = load i8*, i8** %790, align 8
  br label %792

792:                                              ; preds = %684, %631, %789, %747, %736, %722, %683, %679, %594
  %793 = phi %struct.AttributeListEntry* [ %598, %679 ], [ %598, %683 ], [ %598, %722 ], [ %574, %594 ], [ %574, %747 ], [ %574, %736 ], [ %574, %789 ], [ %598, %631 ], [ %598, %684 ]
  %794 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL20LOCALE_ATTRIBUTE_KEY, i64 0, i64 0), %679 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL20LOCALE_ATTRIBUTE_KEY, i64 0, i64 0), %683 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL20LOCALE_ATTRIBUTE_KEY, i64 0, i64 0), %722 ], [ %575, %594 ], [ %726, %747 ], [ %726, %736 ], [ %577, %789 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL20LOCALE_ATTRIBUTE_KEY, i64 0, i64 0), %631 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL20LOCALE_ATTRIBUTE_KEY, i64 0, i64 0), %684 ]
  %795 = phi i8* [ null, %679 ], [ null, %683 ], [ null, %722 ], [ %576, %594 ], [ %751, %747 ], [ %732, %736 ], [ %791, %789 ], [ null, %631 ], [ null, %684 ]
  %796 = load i32, i32* %526, align 8
  %797 = load i32, i32* %523, align 8
  %798 = icmp eq i32 %797, %796
  br i1 %798, label %799, label %826

799:                                              ; preds = %792
  %800 = icmp eq i32 %796, 8
  %801 = select i1 %800, i32 2, i32 1
  %802 = shl nsw i32 %796, %801
  %803 = icmp sgt i32 %802, 0
  br i1 %803, label %804, label %839

804:                                              ; preds = %799
  %805 = sext i32 %802 to i64
  %806 = shl nsw i64 %805, 3
  %807 = call noalias i8* @uprv_malloc_69(i64 %806) #10
  %808 = icmp eq i8* %807, null
  br i1 %808, label %839, label %809

809:                                              ; preds = %804
  %810 = icmp sgt i32 %796, 0
  br i1 %810, label %811, label %820

811:                                              ; preds = %809
  %812 = load i32, i32* %526, align 8
  %813 = icmp slt i32 %812, %796
  %814 = select i1 %813, i32 %812, i32 %796
  %815 = icmp sgt i32 %814, %802
  %816 = select i1 %815, i32 %802, i32 %814
  %817 = load i8*, i8** %571, align 8
  %818 = sext i32 %816 to i64
  %819 = shl nsw i64 %818, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %807, i8* align 8 %817, i64 %819, i1 false) #11
  br label %820

820:                                              ; preds = %811, %809
  %821 = load i8, i8* %527, align 4
  %822 = icmp eq i8 %821, 0
  br i1 %822, label %825, label %823

823:                                              ; preds = %820
  %824 = load i8*, i8** %571, align 8
  call void @uprv_free_69(i8* %824) #11
  br label %825

825:                                              ; preds = %823, %820
  store i8* %807, i8** %571, align 8
  store i32 %802, i32* %526, align 8
  store i8 1, i8* %527, align 4
  br label %826

826:                                              ; preds = %825, %792
  %827 = call i8* @_ZN6icu_697UMemorynwEm(i64 24) #11
  %828 = icmp eq i8* %827, null
  br i1 %828, label %831, label %829

829:                                              ; preds = %826
  %830 = bitcast i8* %827 to %struct.ExtensionListEntry*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %827, i8 0, i64 24, i1 false) #11
  br label %831

831:                                              ; preds = %829, %826
  %832 = phi %struct.ExtensionListEntry* [ %830, %829 ], [ null, %826 ]
  %833 = load i32, i32* %523, align 8
  %834 = add nsw i32 %833, 1
  store i32 %834, i32* %523, align 8
  %835 = sext i32 %833 to i64
  %836 = load %struct.ExtensionListEntry**, %struct.ExtensionListEntry*** %572, align 8
  %837 = getelementptr inbounds %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %836, i64 %835
  store %struct.ExtensionListEntry* %832, %struct.ExtensionListEntry** %837, align 8
  %838 = icmp eq %struct.ExtensionListEntry* %832, null
  br i1 %838, label %839, label %840

839:                                              ; preds = %831, %804, %799
  store i32 7, i32* %3, align 4
  br label %847

840:                                              ; preds = %831
  %841 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %832, i64 0, i32 0
  store i8* %794, i8** %841, align 8
  %842 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %832, i64 0, i32 1
  store i8* %795, i8** %842, align 8
  %843 = call fastcc signext i8 @_ZL19_addExtensionToListPP18ExtensionListEntryS0_a(%struct.ExtensionListEntry** nonnull %18, %struct.ExtensionListEntry* nonnull %832, i8 signext 1) #11
  %844 = icmp eq i8 %843, 0
  %845 = and i1 %569, %844
  br i1 %845, label %846, label %847

846:                                              ; preds = %840
  store i32 1, i32* %3, align 4
  br label %847

847:                                              ; preds = %846, %840, %839, %788, %784, %779, %778, %760, %759, %746, %742, %735, %734, %729, %728, %588, %587, %585
  %848 = phi %struct.AttributeListEntry* [ %793, %839 ], [ %793, %846 ], [ %793, %840 ], [ %574, %728 ], [ %574, %729 ], [ %574, %734 ], [ %574, %735 ], [ %574, %759 ], [ %574, %760 ], [ %574, %778 ], [ %574, %779 ], [ %574, %585 ], [ %574, %588 ], [ %574, %587 ], [ %574, %742 ], [ %574, %746 ], [ %574, %784 ], [ %574, %788 ]
  %849 = phi i32 [ 3, %839 ], [ 3, %846 ], [ 0, %840 ], [ 2, %728 ], [ 3, %729 ], [ 2, %734 ], [ 3, %735 ], [ 2, %759 ], [ 3, %760 ], [ 2, %778 ], [ 3, %779 ], [ 3, %585 ], [ 2, %588 ], [ 3, %587 ], [ 3, %742 ], [ 3, %746 ], [ 3, %784 ], [ 3, %788 ]
  %850 = phi i8* [ %794, %839 ], [ %794, %846 ], [ %794, %840 ], [ null, %728 ], [ null, %729 ], [ %726, %734 ], [ %726, %735 ], [ %575, %759 ], [ %575, %760 ], [ %575, %778 ], [ %575, %779 ], [ %575, %585 ], [ %575, %588 ], [ %575, %587 ], [ %726, %742 ], [ %726, %746 ], [ %577, %784 ], [ %577, %788 ]
  %851 = phi i8* [ %795, %839 ], [ %795, %846 ], [ %795, %840 ], [ %576, %728 ], [ %576, %729 ], [ null, %734 ], [ null, %735 ], [ %576, %759 ], [ %576, %760 ], [ %576, %778 ], [ %576, %779 ], [ %576, %585 ], [ %576, %588 ], [ %576, %587 ], [ %732, %742 ], [ %732, %746 ], [ %576, %784 ], [ %576, %788 ]
  %852 = load i8, i8* %558, align 4
  %853 = icmp eq i8 %852, 0
  br i1 %853, label %856, label %854

854:                                              ; preds = %847
  %855 = load i8*, i8** %555, align 8
  call void @uprv_free_69(i8* %855) #11
  br label %856

856:                                              ; preds = %854, %847
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %554) #11
  %857 = icmp eq i32 %849, 3
  br i1 %857, label %858, label %573

858:                                              ; preds = %856, %573
  %859 = phi %struct.AttributeListEntry* [ %574, %573 ], [ %848, %856 ]
  br i1 %537, label %860, label %942

860:                                              ; preds = %858
  %861 = load i32, i32* %526, align 8
  %862 = load i32, i32* %523, align 8
  %863 = icmp eq i32 %862, %861
  br i1 %863, label %864, label %891

864:                                              ; preds = %860
  %865 = icmp eq i32 %861, 8
  %866 = select i1 %865, i32 2, i32 1
  %867 = shl nsw i32 %861, %866
  %868 = icmp sgt i32 %867, 0
  br i1 %868, label %869, label %904

869:                                              ; preds = %864
  %870 = sext i32 %867 to i64
  %871 = shl nsw i64 %870, 3
  %872 = call noalias i8* @uprv_malloc_69(i64 %871) #10
  %873 = icmp eq i8* %872, null
  br i1 %873, label %904, label %874

874:                                              ; preds = %869
  %875 = icmp sgt i32 %861, 0
  br i1 %875, label %876, label %885

876:                                              ; preds = %874
  %877 = load i32, i32* %526, align 8
  %878 = icmp slt i32 %877, %861
  %879 = select i1 %878, i32 %877, i32 %861
  %880 = icmp sgt i32 %879, %867
  %881 = select i1 %880, i32 %867, i32 %879
  %882 = load i8*, i8** %571, align 8
  %883 = sext i32 %881 to i64
  %884 = shl nsw i64 %883, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %872, i8* align 8 %882, i64 %884, i1 false) #11
  br label %885

885:                                              ; preds = %876, %874
  %886 = load i8, i8* %527, align 4
  %887 = icmp eq i8 %886, 0
  br i1 %887, label %890, label %888

888:                                              ; preds = %885
  %889 = load i8*, i8** %571, align 8
  call void @uprv_free_69(i8* %889) #11
  br label %890

890:                                              ; preds = %888, %885
  store i8* %872, i8** %571, align 8
  store i32 %867, i32* %526, align 8
  store i8 1, i8* %527, align 4
  br label %891

891:                                              ; preds = %890, %860
  %892 = call i8* @_ZN6icu_697UMemorynwEm(i64 24) #11
  %893 = icmp eq i8* %892, null
  br i1 %893, label %896, label %894

894:                                              ; preds = %891
  %895 = bitcast i8* %892 to %struct.ExtensionListEntry*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %892, i8 0, i64 24, i1 false) #11
  br label %896

896:                                              ; preds = %894, %891
  %897 = phi %struct.ExtensionListEntry* [ %895, %894 ], [ null, %891 ]
  %898 = load i32, i32* %523, align 8
  %899 = add nsw i32 %898, 1
  store i32 %899, i32* %523, align 8
  %900 = sext i32 %898 to i64
  %901 = load %struct.ExtensionListEntry**, %struct.ExtensionListEntry*** %572, align 8
  %902 = getelementptr inbounds %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %901, i64 %900
  store %struct.ExtensionListEntry* %897, %struct.ExtensionListEntry** %902, align 8
  %903 = icmp eq %struct.ExtensionListEntry* %897, null
  br i1 %903, label %904, label %939

904:                                              ; preds = %896, %869, %864
  store i32 7, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %553) #11
  %905 = load i32, i32* %548, align 8
  %906 = icmp sgt i32 %905, 0
  %907 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %19, i64 0, i32 1
  br i1 %906, label %908, label %910

908:                                              ; preds = %904
  %909 = getelementptr inbounds %"class.icu_69::MaybeStackArray.5", %"class.icu_69::MaybeStackArray.5"* %907, i64 0, i32 0
  br label %916

910:                                              ; preds = %933, %904
  %911 = load i8, i8* %552, align 4
  %912 = icmp eq i8 %911, 0
  br i1 %912, label %938, label %913

913:                                              ; preds = %910
  %914 = bitcast %"class.icu_69::MaybeStackArray.5"* %907 to i8**
  %915 = load i8*, i8** %914, align 8
  call void @uprv_free_69(i8* %915) #11
  br label %938

916:                                              ; preds = %933, %908
  %917 = phi i32 [ %905, %908 ], [ %934, %933 ]
  %918 = phi i64 [ 0, %908 ], [ %935, %933 ]
  %919 = load %"class.icu_69::CharString"**, %"class.icu_69::CharString"*** %909, align 8
  %920 = getelementptr inbounds %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %919, i64 %918
  %921 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %920, align 8
  %922 = icmp eq %"class.icu_69::CharString"* %921, null
  br i1 %922, label %933, label %923

923:                                              ; preds = %916
  %924 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %921, i64 0, i32 0, i32 2
  %925 = load i8, i8* %924, align 4
  %926 = icmp eq i8 %925, 0
  br i1 %926, label %930, label %927

927:                                              ; preds = %923
  %928 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %921, i64 0, i32 0, i32 0
  %929 = load i8*, i8** %928, align 8
  call void @uprv_free_69(i8* %929) #11
  br label %930

930:                                              ; preds = %927, %923
  %931 = bitcast %"class.icu_69::CharString"* %921 to i8*
  call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %931) #11
  %932 = load i32, i32* %548, align 8
  br label %933

933:                                              ; preds = %930, %916
  %934 = phi i32 [ %917, %916 ], [ %932, %930 ]
  %935 = add nuw nsw i64 %918, 1
  %936 = sext i32 %934 to i64
  %937 = icmp slt i64 %935, %936
  br i1 %937, label %916, label %910

938:                                              ; preds = %913, %910
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %547) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %546) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %545) #11
  br label %1052

939:                                              ; preds = %896
  %940 = bitcast %struct.ExtensionListEntry* %897 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZL9POSIX_KEY, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZL11POSIX_VALUE, i64 0, i64 0)>, <2 x i8*>* %940, align 8
  %941 = call fastcc signext i8 @_ZL19_addExtensionToListPP18ExtensionListEntryS0_a(%struct.ExtensionListEntry** nonnull %18, %struct.ExtensionListEntry* nonnull %897, i8 signext 1) #11
  br label %942

942:                                              ; preds = %939, %858
  %943 = load i32, i32* %3, align 4
  %944 = icmp sgt i32 %943, 0
  br i1 %944, label %1017, label %945

945:                                              ; preds = %942
  %946 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %18, align 8
  %947 = icmp eq %struct.ExtensionListEntry* %946, null
  %948 = icmp eq %struct.AttributeListEntry* %859, null
  br i1 %947, label %1017, label %949

949:                                              ; preds = %945
  %950 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  br label %951

951:                                              ; preds = %1013, %949
  %952 = phi i8 [ 0, %949 ], [ %965, %1013 ]
  %953 = phi %struct.ExtensionListEntry* [ %946, %949 ], [ %1015, %1013 ]
  %954 = icmp eq i8 %952, 0
  br i1 %954, label %955, label %964

955:                                              ; preds = %951
  %956 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %953, i64 0, i32 0
  %957 = load i8*, i8** %956, align 8
  %958 = call i64 @strlen(i8* %957) #12
  %959 = icmp ugt i64 %958, 1
  br i1 %959, label %960, label %964

960:                                              ; preds = %955
  %961 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %950, align 8
  %962 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %961, i64 2
  %963 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %962, align 8
  call void %963(%"class.icu_69::ByteSink"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 2) #11
  br label %964

964:                                              ; preds = %960, %955, %951
  %965 = phi i8 [ %952, %951 ], [ 1, %960 ], [ 0, %955 ]
  %966 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %953, i64 0, i32 0
  %967 = load i8*, i8** %966, align 8
  %968 = call i32 @strcmp(i8* %967, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL20LOCALE_ATTRIBUTE_KEY, i64 0, i64 0)) #12
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %970, label %986

970:                                              ; preds = %964
  br i1 %948, label %1013, label %971

971:                                              ; preds = %970, %971
  %972 = phi %struct.AttributeListEntry* [ %984, %971 ], [ %859, %970 ]
  %973 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %950, align 8
  %974 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %973, i64 2
  %975 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %974, align 8
  call void %975(%"class.icu_69::ByteSink"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1) #11
  %976 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %972, i64 0, i32 0
  %977 = load i8*, i8** %976, align 8
  %978 = call i64 @strlen(i8* %977) #12
  %979 = trunc i64 %978 to i32
  %980 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %950, align 8
  %981 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %980, i64 2
  %982 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %981, align 8
  call void %982(%"class.icu_69::ByteSink"* %1, i8* %977, i32 %979) #11
  %983 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %972, i64 0, i32 1
  %984 = load %struct.AttributeListEntry*, %struct.AttributeListEntry** %983, align 8
  %985 = icmp eq %struct.AttributeListEntry* %984, null
  br i1 %985, label %1013, label %971

986:                                              ; preds = %964
  %987 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %950, align 8
  %988 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %987, i64 2
  %989 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %988, align 8
  call void %989(%"class.icu_69::ByteSink"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1) #11
  %990 = load i8*, i8** %966, align 8
  %991 = call i64 @strlen(i8* %990) #12
  %992 = trunc i64 %991 to i32
  %993 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %950, align 8
  %994 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %993, i64 2
  %995 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %994, align 8
  call void %995(%"class.icu_69::ByteSink"* %1, i8* %990, i32 %992) #11
  %996 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %953, i64 0, i32 1
  %997 = load i8*, i8** %996, align 8
  %998 = call i32 @strcmp(i8* %997, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0)) #12
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1013, label %1000

1000:                                             ; preds = %986
  %1001 = call i32 @strcmp(i8* %997, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #12
  %1002 = icmp eq i32 %1001, 0
  br i1 %1002, label %1013, label %1003

1003:                                             ; preds = %1000
  %1004 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %950, align 8
  %1005 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1004, i64 2
  %1006 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1005, align 8
  call void %1006(%"class.icu_69::ByteSink"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1) #11
  %1007 = load i8*, i8** %996, align 8
  %1008 = call i64 @strlen(i8* %1007) #12
  %1009 = trunc i64 %1008 to i32
  %1010 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %950, align 8
  %1011 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1010, i64 2
  %1012 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1011, align 8
  call void %1012(%"class.icu_69::ByteSink"* %1, i8* %1007, i32 %1009) #11
  br label %1013

1013:                                             ; preds = %971, %1003, %1000, %986, %970
  %1014 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %953, i64 0, i32 2
  %1015 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1014, align 8
  %1016 = icmp eq %struct.ExtensionListEntry* %1015, null
  br i1 %1016, label %1017, label %951

1017:                                             ; preds = %1013, %945, %942
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %553) #11
  %1018 = load i32, i32* %548, align 8
  %1019 = icmp sgt i32 %1018, 0
  %1020 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %19, i64 0, i32 1
  br i1 %1019, label %1021, label %1023

1021:                                             ; preds = %1017
  %1022 = getelementptr inbounds %"class.icu_69::MaybeStackArray.5", %"class.icu_69::MaybeStackArray.5"* %1020, i64 0, i32 0
  br label %1029

1023:                                             ; preds = %1046, %1017
  %1024 = load i8, i8* %552, align 4
  %1025 = icmp eq i8 %1024, 0
  br i1 %1025, label %1051, label %1026

1026:                                             ; preds = %1023
  %1027 = bitcast %"class.icu_69::MaybeStackArray.5"* %1020 to i8**
  %1028 = load i8*, i8** %1027, align 8
  call void @uprv_free_69(i8* %1028) #11
  br label %1051

1029:                                             ; preds = %1046, %1021
  %1030 = phi i32 [ %1018, %1021 ], [ %1047, %1046 ]
  %1031 = phi i64 [ 0, %1021 ], [ %1048, %1046 ]
  %1032 = load %"class.icu_69::CharString"**, %"class.icu_69::CharString"*** %1022, align 8
  %1033 = getelementptr inbounds %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %1032, i64 %1031
  %1034 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %1033, align 8
  %1035 = icmp eq %"class.icu_69::CharString"* %1034, null
  br i1 %1035, label %1046, label %1036

1036:                                             ; preds = %1029
  %1037 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %1034, i64 0, i32 0, i32 2
  %1038 = load i8, i8* %1037, align 4
  %1039 = icmp eq i8 %1038, 0
  br i1 %1039, label %1043, label %1040

1040:                                             ; preds = %1036
  %1041 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %1034, i64 0, i32 0, i32 0
  %1042 = load i8*, i8** %1041, align 8
  call void @uprv_free_69(i8* %1042) #11
  br label %1043

1043:                                             ; preds = %1040, %1036
  %1044 = bitcast %"class.icu_69::CharString"* %1034 to i8*
  call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %1044) #11
  %1045 = load i32, i32* %548, align 8
  br label %1046

1046:                                             ; preds = %1043, %1029
  %1047 = phi i32 [ %1030, %1029 ], [ %1045, %1043 ]
  %1048 = add nuw nsw i64 %1031, 1
  %1049 = sext i32 %1047 to i64
  %1050 = icmp slt i64 %1048, %1049
  br i1 %1050, label %1029, label %1023

1051:                                             ; preds = %1026, %1023
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %547) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %546) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %545) #11
  br label %1052

1052:                                             ; preds = %1051, %938, %539, %511
  %1053 = icmp eq %struct.UEnumeration* %534, null
  br i1 %1053, label %1055, label %1054

1054:                                             ; preds = %1052
  call void @uenum_close_69(%struct.UEnumeration* nonnull %534) #11
  br label %1055

1055:                                             ; preds = %1054, %1052
  %1056 = load i32, i32* %529, align 8
  %1057 = icmp sgt i32 %1056, 0
  %1058 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %16, i64 0, i32 1
  br i1 %1057, label %1059, label %1061

1059:                                             ; preds = %1055
  %1060 = getelementptr inbounds %"class.icu_69::MaybeStackArray.5", %"class.icu_69::MaybeStackArray.5"* %1058, i64 0, i32 0
  br label %1067

1061:                                             ; preds = %1084, %1055
  %1062 = load i8, i8* %533, align 4
  %1063 = icmp eq i8 %1062, 0
  br i1 %1063, label %1089, label %1064

1064:                                             ; preds = %1061
  %1065 = bitcast %"class.icu_69::MaybeStackArray.5"* %1058 to i8**
  %1066 = load i8*, i8** %1065, align 8
  call void @uprv_free_69(i8* %1066) #11
  br label %1089

1067:                                             ; preds = %1084, %1059
  %1068 = phi i32 [ %1056, %1059 ], [ %1085, %1084 ]
  %1069 = phi i64 [ 0, %1059 ], [ %1086, %1084 ]
  %1070 = load %"class.icu_69::CharString"**, %"class.icu_69::CharString"*** %1060, align 8
  %1071 = getelementptr inbounds %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %1070, i64 %1069
  %1072 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %1071, align 8
  %1073 = icmp eq %"class.icu_69::CharString"* %1072, null
  br i1 %1073, label %1084, label %1074

1074:                                             ; preds = %1067
  %1075 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %1072, i64 0, i32 0, i32 2
  %1076 = load i8, i8* %1075, align 4
  %1077 = icmp eq i8 %1076, 0
  br i1 %1077, label %1081, label %1078

1078:                                             ; preds = %1074
  %1079 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %1072, i64 0, i32 0, i32 0
  %1080 = load i8*, i8** %1079, align 8
  call void @uprv_free_69(i8* %1080) #11
  br label %1081

1081:                                             ; preds = %1078, %1074
  %1082 = bitcast %"class.icu_69::CharString"* %1072 to i8*
  call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %1082) #11
  %1083 = load i32, i32* %529, align 8
  br label %1084

1084:                                             ; preds = %1081, %1067
  %1085 = phi i32 [ %1068, %1067 ], [ %1083, %1081 ]
  %1086 = add nuw nsw i64 %1069, 1
  %1087 = sext i32 %1085 to i64
  %1088 = icmp slt i64 %1086, %1087
  br i1 %1088, label %1067, label %1061

1089:                                             ; preds = %1064, %1061
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %528) #11
  %1090 = load i32, i32* %523, align 8
  %1091 = icmp sgt i32 %1090, 0
  %1092 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %15, i64 0, i32 1
  br i1 %1091, label %1093, label %1095

1093:                                             ; preds = %1089
  %1094 = getelementptr inbounds %"class.icu_69::MaybeStackArray.3", %"class.icu_69::MaybeStackArray.3"* %1092, i64 0, i32 0
  br label %1101

1095:                                             ; preds = %1111, %1089
  %1096 = load i8, i8* %527, align 4
  %1097 = icmp eq i8 %1096, 0
  br i1 %1097, label %1116, label %1098

1098:                                             ; preds = %1095
  %1099 = bitcast %"class.icu_69::MaybeStackArray.3"* %1092 to i8**
  %1100 = load i8*, i8** %1099, align 8
  call void @uprv_free_69(i8* %1100) #11
  br label %1116

1101:                                             ; preds = %1111, %1093
  %1102 = phi i32 [ %1090, %1093 ], [ %1112, %1111 ]
  %1103 = phi i64 [ 0, %1093 ], [ %1113, %1111 ]
  %1104 = load %struct.ExtensionListEntry**, %struct.ExtensionListEntry*** %1094, align 8
  %1105 = getelementptr inbounds %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1104, i64 %1103
  %1106 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1105, align 8
  %1107 = icmp eq %struct.ExtensionListEntry* %1106, null
  br i1 %1107, label %1111, label %1108

1108:                                             ; preds = %1101
  %1109 = bitcast %struct.ExtensionListEntry* %1106 to i8*
  call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %1109) #11
  %1110 = load i32, i32* %523, align 8
  br label %1111

1111:                                             ; preds = %1108, %1101
  %1112 = phi i32 [ %1102, %1101 ], [ %1110, %1108 ]
  %1113 = add nuw nsw i64 %1103, 1
  %1114 = sext i32 %1112 to i64
  %1115 = icmp slt i64 %1113, %1114
  br i1 %1115, label %1101, label %1095

1116:                                             ; preds = %1098, %1095
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %522) #11
  %1117 = load i32, i32* %517, align 8
  %1118 = icmp sgt i32 %1117, 0
  %1119 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %14, i64 0, i32 1
  br i1 %1118, label %1120, label %1122

1120:                                             ; preds = %1116
  %1121 = getelementptr inbounds %"class.icu_69::MaybeStackArray.1", %"class.icu_69::MaybeStackArray.1"* %1119, i64 0, i32 0
  br label %1128

1122:                                             ; preds = %1138, %1116
  %1123 = load i8, i8* %521, align 4
  %1124 = icmp eq i8 %1123, 0
  br i1 %1124, label %1143, label %1125

1125:                                             ; preds = %1122
  %1126 = bitcast %"class.icu_69::MaybeStackArray.1"* %1119 to i8**
  %1127 = load i8*, i8** %1126, align 8
  call void @uprv_free_69(i8* %1127) #11
  br label %1143

1128:                                             ; preds = %1138, %1120
  %1129 = phi i32 [ %1117, %1120 ], [ %1139, %1138 ]
  %1130 = phi i64 [ 0, %1120 ], [ %1140, %1138 ]
  %1131 = load %struct.AttributeListEntry**, %struct.AttributeListEntry*** %1121, align 8
  %1132 = getelementptr inbounds %struct.AttributeListEntry*, %struct.AttributeListEntry** %1131, i64 %1130
  %1133 = load %struct.AttributeListEntry*, %struct.AttributeListEntry** %1132, align 8
  %1134 = icmp eq %struct.AttributeListEntry* %1133, null
  br i1 %1134, label %1138, label %1135

1135:                                             ; preds = %1128
  %1136 = bitcast %struct.AttributeListEntry* %1133 to i8*
  call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %1136) #11
  %1137 = load i32, i32* %517, align 8
  br label %1138

1138:                                             ; preds = %1135, %1128
  %1139 = phi i32 [ %1129, %1128 ], [ %1137, %1135 ]
  %1140 = add nuw nsw i64 %1130, 1
  %1141 = sext i32 %1139 to i64
  %1142 = icmp slt i64 %1140, %1141
  br i1 %1142, label %1128, label %1122

1143:                                             ; preds = %1122, %1125
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %516) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %515) #11
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %514) #11
  %1144 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 157, i8* nonnull %343) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %343, i8 -86, i64 157, i1 false) #11
  %1145 = getelementptr inbounds [157 x i8], [157 x i8]* %25, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 157, i8* nonnull %1145) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1145, i8 -86, i64 157, i1 false) #11
  %1146 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1146) #11
  store i32 0, i32* %26, align 4
  %1147 = load i32, i32* %3, align 4
  %1148 = icmp slt i32 %1147, 1
  br i1 %1148, label %1149, label %1287

1149:                                             ; preds = %1143
  %1150 = call i32 @uloc_getVariant_69(i8* %1144, i8* nonnull %343, i32 157, i32* nonnull %26) #11
  %1151 = load i32, i32* %26, align 4
  %1152 = icmp sgt i32 %1151, 0
  %1153 = icmp eq i32 %1151, -124
  %1154 = or i1 %1152, %1153
  br i1 %1154, label %1155, label %1158

1155:                                             ; preds = %1149
  %1156 = icmp eq i8 %2, 0
  br i1 %1156, label %1287, label %1157

1157:                                             ; preds = %1155
  store i32 1, i32* %3, align 4
  br label %1287

1158:                                             ; preds = %1149
  %1159 = icmp sgt i32 %1150, 0
  br i1 %1159, label %1160, label %1278

1160:                                             ; preds = %1158, %1267
  %1161 = phi i8 [ %1271, %1267 ], [ 1, %1158 ]
  %1162 = phi i8 [ %1270, %1267 ], [ 1, %1158 ]
  %1163 = phi i8* [ %1269, %1267 ], [ null, %1158 ]
  %1164 = phi i8* [ %1272, %1267 ], [ %343, %1158 ]
  %1165 = phi i32 [ %1268, %1267 ], [ 0, %1158 ]
  %1166 = load i8, i8* %1164, align 1
  switch i8 %1166, label %1264 [
    i8 0, label %1168
    i8 45, label %1167
    i8 95, label %1167
  ]

1167:                                             ; preds = %1160, %1160
  store i8 0, i8* %1164, align 1
  br label %1168

1168:                                             ; preds = %1167, %1160
  %1169 = phi i8 [ %1162, %1167 ], [ %1166, %1160 ]
  %1170 = icmp eq i8* %1163, null
  br i1 %1170, label %1267, label %1171

1171:                                             ; preds = %1168
  %1172 = load i8, i8* %1163, align 1
  %1173 = icmp eq i8 %1172, 0
  br i1 %1173, label %1183, label %1174

1174:                                             ; preds = %1171, %1174
  %1175 = phi i64 [ %1179, %1174 ], [ 0, %1171 ]
  %1176 = phi i8 [ %1181, %1174 ], [ %1172, %1171 ]
  %1177 = phi i8* [ %1180, %1174 ], [ %1163, %1171 ]
  %1178 = call signext i8 @uprv_asciitolower_69(i8 signext %1176) #11
  store i8 %1178, i8* %1177, align 1
  %1179 = add nuw i64 %1175, 1
  %1180 = getelementptr inbounds i8, i8* %1163, i64 %1179
  %1181 = load i8, i8* %1180, align 1
  %1182 = icmp eq i8 %1181, 0
  br i1 %1182, label %1183, label %1174

1183:                                             ; preds = %1174, %1171
  %1184 = call i64 @strlen(i8* nonnull %1163) #12
  %1185 = trunc i64 %1184 to i32
  %1186 = add i32 %1185, -1
  %1187 = icmp ult i32 %1186, 8
  br i1 %1187, label %1188, label %1208

1188:                                             ; preds = %1183
  %1189 = and i64 %1184, 4294967295
  br label %1190

1190:                                             ; preds = %1200, %1188
  %1191 = phi i64 [ 0, %1188 ], [ %1201, %1200 ]
  %1192 = getelementptr inbounds i8, i8* %1163, i64 %1191
  %1193 = load i8, i8* %1192, align 1
  %1194 = call signext i8 @uprv_isASCIILetter_69(i8 signext %1193) #11
  %1195 = icmp eq i8 %1194, 0
  br i1 %1195, label %1196, label %1200

1196:                                             ; preds = %1190
  %1197 = load i8, i8* %1192, align 1
  %1198 = add i8 %1197, -48
  %1199 = icmp ult i8 %1198, 10
  br i1 %1199, label %1200, label %1208

1200:                                             ; preds = %1196, %1190
  %1201 = add nuw nsw i64 %1191, 1
  %1202 = icmp eq i64 %1201, %1189
  br i1 %1202, label %1203, label %1190

1203:                                             ; preds = %1200
  %1204 = icmp ne i8 %1161, 0
  br i1 %1204, label %1205, label %1211

1205:                                             ; preds = %1203
  %1206 = call fastcc signext i8 @_ZL16_isVariantSubtagPKci(i8* nonnull %1163, i32 -1) #11
  %1207 = icmp eq i8 %1206, 0
  br i1 %1207, label %1211, label %1267

1208:                                             ; preds = %1183, %1196
  %1209 = icmp eq i8 %2, 0
  br i1 %1209, label %1274, label %1210

1210:                                             ; preds = %1208
  store i32 1, i32* %3, align 4
  br label %1287

1211:                                             ; preds = %1205, %1203
  %1212 = icmp slt i32 %1165, 157
  br i1 %1212, label %1213, label %1217

1213:                                             ; preds = %1211
  %1214 = add nsw i32 %1165, 1
  %1215 = sext i32 %1165 to i64
  %1216 = getelementptr inbounds [157 x i8], [157 x i8]* %25, i64 0, i64 %1215
  store i8 45, i8* %1216, align 1
  br label %1217

1217:                                             ; preds = %1213, %1211
  %1218 = phi i32 [ %1214, %1213 ], [ %1165, %1211 ]
  br i1 %1204, label %1219, label %1249

1219:                                             ; preds = %1217
  %1220 = icmp slt i32 %1218, 157
  br i1 %1220, label %1221, label %1237

1221:                                             ; preds = %1219
  %1222 = add nsw i32 %1218, 1
  %1223 = sext i32 %1218 to i64
  %1224 = getelementptr inbounds [157 x i8], [157 x i8]* %25, i64 0, i64 %1223
  store i8 120, i8* %1224, align 1
  %1225 = icmp slt i32 %1222, 157
  br i1 %1225, label %1226, label %1245

1226:                                             ; preds = %1221
  %1227 = add nsw i32 %1218, 2
  %1228 = sext i32 %1222 to i64
  %1229 = getelementptr inbounds [157 x i8], [157 x i8]* %25, i64 0, i64 %1228
  store i8 45, i8* %1229, align 1
  %1230 = icmp slt i32 %1227, 157
  br i1 %1230, label %1231, label %1245

1231:                                             ; preds = %1226
  %1232 = sext i32 %1227 to i64
  %1233 = getelementptr inbounds [157 x i8], [157 x i8]* %25, i64 0, i64 %1232
  %1234 = sub i32 155, %1218
  %1235 = call i32 @uprv_min_69(i32 8, i32 %1234) #11
  %1236 = sext i32 %1235 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1233, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @_ZL22PRIVUSE_VARIANT_PREFIX, i64 0, i64 0), i64 %1236, i1 false) #11
  br label %1237

1237:                                             ; preds = %1231, %1219
  %1238 = phi i32 [ %1227, %1231 ], [ %1218, %1219 ]
  %1239 = add nsw i32 %1238, 8
  %1240 = icmp slt i32 %1239, 157
  br i1 %1240, label %1241, label %1245

1241:                                             ; preds = %1237
  %1242 = add nsw i32 %1238, 9
  %1243 = sext i32 %1239 to i64
  %1244 = getelementptr inbounds [157 x i8], [157 x i8]* %25, i64 0, i64 %1243
  store i8 45, i8* %1244, align 1
  br label %1249

1245:                                             ; preds = %1237, %1226, %1221
  %1246 = phi i32 [ %1239, %1237 ], [ 165, %1221 ], [ 165, %1226 ]
  %1247 = call i64 @strlen(i8* nonnull %1163) #12
  %1248 = trunc i64 %1247 to i32
  br label %1260

1249:                                             ; preds = %1241, %1217
  %1250 = phi i32 [ %1218, %1217 ], [ %1242, %1241 ]
  %1251 = call i64 @strlen(i8* nonnull %1163) #12
  %1252 = trunc i64 %1251 to i32
  %1253 = icmp slt i32 %1250, 157
  br i1 %1253, label %1254, label %1260

1254:                                             ; preds = %1249
  %1255 = sext i32 %1250 to i64
  %1256 = getelementptr inbounds [157 x i8], [157 x i8]* %25, i64 0, i64 %1255
  %1257 = sub nsw i32 157, %1250
  %1258 = call i32 @uprv_min_69(i32 %1252, i32 %1257) #11
  %1259 = sext i32 %1258 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1256, i8* nonnull align 1 %1163, i64 %1259, i1 false) #11
  br label %1260

1260:                                             ; preds = %1254, %1249, %1245
  %1261 = phi i32 [ %1248, %1245 ], [ %1252, %1254 ], [ %1252, %1249 ]
  %1262 = phi i32 [ %1246, %1245 ], [ %1250, %1254 ], [ %1250, %1249 ]
  %1263 = add nsw i32 %1262, %1261
  br label %1267

1264:                                             ; preds = %1160
  %1265 = icmp eq i8* %1163, null
  %1266 = select i1 %1265, i8* %1164, i8* %1163
  br label %1267

1267:                                             ; preds = %1264, %1260, %1205, %1168
  %1268 = phi i32 [ %1263, %1260 ], [ %1165, %1205 ], [ %1165, %1168 ], [ %1165, %1264 ]
  %1269 = phi i8* [ null, %1260 ], [ null, %1205 ], [ null, %1168 ], [ %1266, %1264 ]
  %1270 = phi i8 [ %1169, %1260 ], [ %1169, %1205 ], [ %1169, %1168 ], [ %1162, %1264 ]
  %1271 = phi i8 [ 0, %1260 ], [ %1161, %1205 ], [ %1161, %1168 ], [ %1161, %1264 ]
  %1272 = getelementptr inbounds i8, i8* %1164, i64 1
  %1273 = icmp eq i8 %1270, 0
  br i1 %1273, label %1274, label %1160

1274:                                             ; preds = %1267, %1208
  %1275 = phi i32 [ %1165, %1208 ], [ %1268, %1267 ]
  %1276 = load i32, i32* %3, align 4
  %1277 = icmp slt i32 %1276, 1
  br i1 %1277, label %1281, label %1287

1278:                                             ; preds = %1158
  %1279 = load i32, i32* %3, align 4
  %1280 = icmp sgt i32 %1279, 0
  br i1 %1280, label %1287, label %1281

1281:                                             ; preds = %1278, %1274
  %1282 = phi i32 [ 0, %1278 ], [ %1275, %1274 ]
  %1283 = bitcast %"class.icu_69::ByteSink"* %1 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %1284 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1283, align 8
  %1285 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1284, i64 2
  %1286 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1285, align 8
  call void %1286(%"class.icu_69::ByteSink"* %1, i8* nonnull %1145, i32 %1282) #11
  br label %1287

1287:                                             ; preds = %1143, %1155, %1157, %1210, %1274, %1278, %1281
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1146) #11
  call void @llvm.lifetime.end.p0i8(i64 157, i8* nonnull %1145) #11
  call void @llvm.lifetime.end.p0i8(i64 157, i8* nonnull %343) #11
  br label %1288

1288:                                             ; preds = %135, %133, %72, %62, %48, %1287
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #11
  %1289 = load i8, i8* %37, align 4
  %1290 = icmp eq i8 %1289, 0
  br i1 %1290, label %1293, label %1291

1291:                                             ; preds = %1288
  %1292 = load i8*, i8** %34, align 8
  call void @uprv_free_69(i8* %1292) #11
  br label %1293

1293:                                             ; preds = %1288, %1291
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %33) #11
  ret void
}

declare i32 @u_terminateChars_69(i8*, i32, i32, i32*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6920CheckedArrayByteSinkD1Ev(%"class.icu_69::CheckedArrayByteSink"*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i8* @_ZN6icu_6910CharString15getAppendBufferEiiRiR10UErrorCode(%"class.icu_69::CharString"*, i32, i32, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #4

declare i32 @uloc_canonicalize_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"*, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

declare i8* @locale_getKeywordsStart_69(i8*) local_unnamed_addr #4

declare %struct.UEnumeration* @uloc_openKeywords_69(i8*, i32*) local_unnamed_addr #4

declare i32 @uenum_count_69(%struct.UEnumeration*, i32*) local_unnamed_addr #4

declare i8* @uenum_next_69(%struct.UEnumeration*, i32*, i32*) local_unnamed_addr #4

declare void @_ZN6icu_6918CharStringByteSinkC1EPNS_10CharStringE(%"class.icu_69::CharStringByteSink"*, %"class.icu_69::CharString"*) unnamed_addr #4

declare void @ulocimp_getKeywordValue_69(i8*, i8*, %"class.icu_69::ByteSink"* dereferenceable(8), i32*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6icu_6918CharStringByteSinkD1Ev(%"class.icu_69::CharStringByteSink"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @uloc_forLanguageTag_69(i8* nocapture readonly, i8*, i32, i32*, i32*) local_unnamed_addr #0 {
  %6 = alloca %"class.icu_69::CheckedArrayByteSink", align 8
  %7 = load i32, i32* %4, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = bitcast %"class.icu_69::CheckedArrayByteSink"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.icu_69::CheckedArrayByteSink", %"class.icu_69::CheckedArrayByteSink"* %6, i64 0, i32 4
  %12 = bitcast %"class.icu_69::CheckedArrayByteSink"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  call void @_ZN6icu_6920CheckedArrayByteSinkC1EPci(%"class.icu_69::CheckedArrayByteSink"* nonnull %6, i8* %1, i32 %2) #11
  %13 = getelementptr inbounds %"class.icu_69::CheckedArrayByteSink", %"class.icu_69::CheckedArrayByteSink"* %6, i64 0, i32 0
  call void @ulocimp_forLanguageTag_69(i8* %0, i32 -1, %"class.icu_69::ByteSink"* nonnull dereferenceable(8) %13, i32* %3, i32* %4)
  %14 = load i32, i32* %11, align 8
  %15 = load i32, i32* %4, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %24

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.icu_69::CheckedArrayByteSink", %"class.icu_69::CheckedArrayByteSink"* %6, i64 0, i32 5
  %19 = load i8, i8* %18, align 4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  store i32 15, i32* %4, align 4
  br label %24

22:                                               ; preds = %17
  %23 = call i32 @u_terminateChars_69(i8* %1, i32 %2, i32 %14, i32* %4) #11
  br label %24

24:                                               ; preds = %21, %22, %9
  call void @_ZN6icu_6920CheckedArrayByteSinkD1Ev(%"class.icu_69::CheckedArrayByteSink"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  br label %25

25:                                               ; preds = %5, %24
  %26 = phi i32 [ %14, %24 ], [ 0, %5 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ulocimp_forLanguageTag_69(i8* nocapture readonly, i32, %"class.icu_69::ByteSink"* dereferenceable(8), i32*, i32*) local_unnamed_addr #0 {
  %6 = alloca [100 x i8], align 16
  %7 = alloca %"class.icu_69::MemoryPool", align 8
  %8 = alloca { i8*, i32 }, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [3 x i8], align 1
  %12 = alloca [128 x i8], align 16
  %13 = alloca %"class.icu_69::MemoryPool.2", align 8
  %14 = alloca %"class.icu_69::MemoryPool.4", align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = icmp ne i32* %3, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %5
  store i32 0, i32* %3, align 4
  br label %20

20:                                               ; preds = %19, %5
  %21 = load i32, i32* %4, align 4
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %1808

23:                                               ; preds = %20
  %24 = icmp slt i32 %1, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %23
  %26 = tail call i64 @strlen(i8* %0) #12
  %27 = trunc i64 %26 to i32
  br label %28

28:                                               ; preds = %25, %23
  %29 = phi i32 [ %27, %25 ], [ %1, %23 ]
  %30 = add nsw i32 %29, 1
  %31 = sext i32 %30 to i64
  %32 = tail call noalias i8* @uprv_malloc_69(i64 %31) #10
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %28
  store i32 7, i32* %4, align 4
  br label %1808

35:                                               ; preds = %28
  %36 = icmp sgt i32 %29, 0
  %37 = sext i32 %29 to i64
  br i1 %36, label %38, label %39

38:                                               ; preds = %35
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %32, i8* align 1 %0, i64 %37, i1 false) #11
  br label %39

39:                                               ; preds = %38, %35
  %40 = getelementptr inbounds i8, i8* %32, i64 %37
  store i8 0, i8* %40, align 1
  %41 = tail call noalias i8* @uprv_malloc_69(i64 88) #10
  %42 = bitcast i8* %41 to %struct.ULanguageTag*
  %43 = icmp eq i8* %41, null
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @uprv_free_69(i8* nonnull %32) #11
  store i32 7, i32* %4, align 4
  br label %1808

45:                                               ; preds = %39
  %46 = bitcast i8* %41 to i8**
  %47 = getelementptr inbounds i8, i8* %41, i64 8
  %48 = bitcast i8* %47 to i8**
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZL5EMPTY, i64 0, i64 0), i8** %48, align 8
  %49 = getelementptr i8, i8* %41, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %41, i64 40
  %51 = bitcast i8* %50 to i8**
  %52 = getelementptr inbounds i8, i8* %41, i64 48
  %53 = bitcast i8* %52 to i8**
  %54 = bitcast i8* %50 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZL5EMPTY, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZL5EMPTY, i64 0, i64 0)>, <2 x i8*>* %54, align 8
  %55 = getelementptr inbounds i8, i8* %41, i64 56
  %56 = bitcast i8* %55 to %struct.VariantListEntry**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #11
  %57 = getelementptr inbounds i8, i8* %41, i64 72
  %58 = bitcast i8* %57 to i8**
  %59 = bitcast i8* %57 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZL5EMPTY, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZL5EMPTY, i64 0, i64 0)>, <2 x i8*>* %59, align 8
  store i8* %32, i8** %46, align 8
  %60 = icmp slt i32 %29, 2
  br i1 %60, label %697, label %61

61:                                               ; preds = %45, %116
  %62 = phi i64 [ %117, %116 ], [ 0, %45 ]
  %63 = getelementptr inbounds [50 x i8*], [50 x i8*]* @_ZL6LEGACY, i64 0, i64 %62
  %64 = load i8*, i8** %63, align 16
  %65 = tail call i64 @strlen(i8* %64) #12
  %66 = trunc i64 %65 to i32
  %67 = icmp slt i32 %29, %66
  br i1 %67, label %116, label %68

68:                                               ; preds = %61
  %69 = icmp sgt i32 %29, %66
  br i1 %69, label %70, label %76

70:                                               ; preds = %68
  %71 = shl i64 %65, 32
  %72 = ashr exact i64 %71, 32
  %73 = getelementptr inbounds i8, i8* %32, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 45
  br i1 %75, label %76, label %116

76:                                               ; preds = %70, %68
  %77 = tail call i32 @uprv_strnicmp_69(i8* %64, i8* nonnull %32, i32 %66) #11
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %116

79:                                               ; preds = %76
  %80 = trunc i64 %65 to i32
  %81 = and i64 %62, 4294967294
  %82 = or i64 %81, 1
  %83 = getelementptr inbounds [50 x i8*], [50 x i8*]* @_ZL6LEGACY, i64 0, i64 %82
  %84 = load i8*, i8** %83, align 8
  %85 = tail call i64 @strlen(i8* %84) #12
  %86 = trunc i64 %85 to i32
  %87 = sub i32 %29, %80
  %88 = add i32 %87, %86
  %89 = icmp slt i32 %29, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %79
  %91 = load i8*, i8** %46, align 8
  br label %98

92:                                               ; preds = %79
  tail call void @uprv_free_69(i8* nonnull %32) #11
  %93 = add nsw i32 %88, 1
  %94 = sext i32 %93 to i64
  %95 = tail call noalias i8* @uprv_malloc_69(i64 %94) #10
  %96 = icmp eq i8* %95, null
  br i1 %96, label %675, label %97

97:                                               ; preds = %92
  store i8* %95, i8** %46, align 8
  br label %98

98:                                               ; preds = %97, %90
  %99 = phi i8* [ %95, %97 ], [ %91, %90 ]
  %100 = phi i8* [ %95, %97 ], [ %32, %90 ]
  %101 = phi i32 [ %88, %97 ], [ %29, %90 ]
  %102 = sub i64 %65, %85
  %103 = shl i64 %102, 32
  %104 = ashr exact i64 %103, 32
  %105 = tail call i8* @strcpy(i8* %99, i8* %84) #11
  %106 = icmp eq i32 %101, %80
  br i1 %106, label %119, label %107

107:                                              ; preds = %98
  %108 = load i8*, i8** %46, align 8
  %109 = shl i64 %85, 32
  %110 = ashr exact i64 %109, 32
  %111 = getelementptr inbounds i8, i8* %108, i64 %110
  %112 = shl i64 %65, 32
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, i8* %0, i64 %113
  %115 = tail call i8* @strcpy(i8* %111, i8* %114) #11
  br label %119

116:                                              ; preds = %76, %70, %61
  %117 = add nuw nsw i64 %62, 2
  %118 = icmp ult i64 %117, 50
  br i1 %118, label %61, label %122

119:                                              ; preds = %107, %98
  %120 = phi i32 [ %80, %98 ], [ %101, %107 ]
  %121 = icmp eq i32 %80, 0
  br i1 %121, label %122, label %159

122:                                              ; preds = %116, %119
  %123 = phi i32 [ %120, %119 ], [ %29, %116 ]
  %124 = phi i64 [ %104, %119 ], [ 0, %116 ]
  %125 = phi i8* [ %100, %119 ], [ %32, %116 ]
  br label %126

126:                                              ; preds = %156, %122
  %127 = phi i64 [ 0, %122 ], [ %157, %156 ]
  %128 = getelementptr inbounds [52 x i8*], [52 x i8*]* @_ZL9REDUNDANT, i64 0, i64 %127
  %129 = load i8*, i8** %128, align 16
  %130 = tail call i64 @strlen(i8* %129) #12
  %131 = trunc i64 %130 to i32
  %132 = tail call i32 @uprv_strnicmp_69(i8* %129, i8* %125, i32 %131) #11
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %156

134:                                              ; preds = %126
  %135 = getelementptr inbounds i8, i8* %125, i64 %130
  %136 = load i8, i8* %135, align 1
  switch i8 %136, label %156 [
    i8 0, label %137
    i8 45, label %137
  ]

137:                                              ; preds = %134, %134
  %138 = getelementptr inbounds i8, i8* %125, i64 %130
  %139 = and i64 %127, 4294967294
  %140 = or i64 %139, 1
  %141 = getelementptr inbounds [52 x i8*], [52 x i8*]* @_ZL9REDUNDANT, i64 0, i64 %140
  %142 = load i8*, i8** %141, align 8
  %143 = tail call i64 @strlen(i8* %142) #12
  %144 = load i8*, i8** %46, align 8
  %145 = tail call i8* @strncpy(i8* %144, i8* %142, i64 %143) #11
  %146 = load i8, i8* %138, align 1
  %147 = icmp eq i8 %146, 45
  %148 = getelementptr inbounds i8, i8* %125, i64 %143
  br i1 %147, label %149, label %153

149:                                              ; preds = %137
  %150 = sext i32 %123 to i64
  %151 = add nsw i64 %150, 1
  %152 = sub i64 %151, %130
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %148, i8* align 1 %138, i64 %152, i1 false) #11
  br label %154

153:                                              ; preds = %137
  store i8 0, i8* %148, align 1
  br label %154

154:                                              ; preds = %153, %149
  %155 = sub i64 %130, %143
  br label %159

156:                                              ; preds = %134, %126
  %157 = add nuw nsw i64 %127, 2
  %158 = icmp ult i64 %157, 52
  br i1 %158, label %126, label %159

159:                                              ; preds = %156, %154, %119
  %160 = phi i8* [ %125, %154 ], [ %100, %119 ], [ %125, %156 ]
  %161 = phi i64 [ %155, %154 ], [ %104, %119 ], [ %124, %156 ]
  %162 = icmp eq i8* %160, null
  br i1 %162, label %666, label %163

163:                                              ; preds = %159
  %164 = bitcast i8* %55 to i8**
  %165 = getelementptr inbounds i8, i8* %41, i64 64
  %166 = bitcast i8* %165 to %struct.ExtensionListEntry**
  br label %167

167:                                              ; preds = %606, %163
  %168 = phi i8 [ 0, %163 ], [ %615, %606 ]
  %169 = phi i8* [ null, %163 ], [ %614, %606 ]
  %170 = phi i8* [ null, %163 ], [ %613, %606 ]
  %171 = phi %struct.ExtensionListEntry* [ null, %163 ], [ %612, %606 ]
  %172 = phi i8* [ null, %163 ], [ %611, %606 ]
  %173 = phi i32 [ 0, %163 ], [ %610, %606 ]
  %174 = phi i8* [ %160, %163 ], [ %609, %606 ]
  %175 = phi i8* [ %160, %163 ], [ %608, %606 ]
  %176 = phi i16 [ 129, %163 ], [ %607, %606 ]
  br label %177

177:                                              ; preds = %180, %167
  %178 = phi i8* [ %181, %180 ], [ %175, %167 ]
  %179 = load i8, i8* %178, align 1
  switch i8 %179, label %180 [
    i8 0, label %182
    i8 45, label %182
  ]

180:                                              ; preds = %177
  %181 = getelementptr inbounds i8, i8* %178, i64 1
  br label %177

182:                                              ; preds = %177, %177
  %183 = icmp eq i8 %179, 0
  %184 = getelementptr inbounds i8, i8* %178, i64 1
  %185 = select i1 %183, i8* null, i8* %184
  %186 = ptrtoint i8* %178 to i64
  %187 = ptrtoint i8* %175 to i64
  %188 = sub i64 %186, %187
  %189 = trunc i64 %188 to i32
  %190 = sext i16 %176 to i32
  %191 = and i32 %190, 1
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %217, label %193

193:                                              ; preds = %182
  %194 = icmp slt i32 %189, 0
  br i1 %194, label %195, label %198

195:                                              ; preds = %193
  %196 = tail call i64 @strlen(i8* %175) #12
  %197 = trunc i64 %196 to i32
  br label %198

198:                                              ; preds = %195, %193
  %199 = phi i32 [ %197, %195 ], [ %189, %193 ]
  %200 = add i32 %199, -2
  %201 = icmp ult i32 %200, 7
  br i1 %201, label %202, label %217

202:                                              ; preds = %198
  %203 = zext i32 %199 to i64
  br label %206

204:                                              ; preds = %206
  %205 = icmp eq i64 %212, %203
  br i1 %205, label %213, label %206

206:                                              ; preds = %204, %202
  %207 = phi i64 [ 0, %202 ], [ %212, %204 ]
  %208 = getelementptr inbounds i8, i8* %175, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %209) #11
  %211 = icmp eq i8 %210, 0
  %212 = add nuw nsw i64 %207, 1
  br i1 %211, label %217, label %204

213:                                              ; preds = %204
  store i8 0, i8* %178, align 1
  %214 = tail call i8* @T_CString_toLowerCase_69(i8* %175) #11
  store i8* %214, i8** %48, align 8
  %215 = icmp slt i32 %189, 4
  %216 = select i1 %215, i16 190, i16 188
  br label %606

217:                                              ; preds = %206, %198, %182
  %218 = and i32 %190, 2
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %249, label %220

220:                                              ; preds = %217
  %221 = icmp slt i32 %189, 0
  br i1 %221, label %222, label %225

222:                                              ; preds = %220
  %223 = tail call i64 @strlen(i8* %175) #12
  %224 = trunc i64 %223 to i32
  br label %225

225:                                              ; preds = %222, %220
  %226 = phi i32 [ %224, %222 ], [ %189, %220 ]
  %227 = icmp eq i32 %226, 3
  br i1 %227, label %228, label %249

228:                                              ; preds = %225
  %229 = load i8, i8* %175, align 1
  %230 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %229) #11
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %249, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds i8, i8* %175, i64 1
  %234 = load i8, i8* %233, align 1
  %235 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %234) #11
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %249, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds i8, i8* %175, i64 2
  %239 = load i8, i8* %238, align 1
  %240 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %239) #11
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %249, label %242

242:                                              ; preds = %237
  store i8 0, i8* %178, align 1
  %243 = tail call i8* @T_CString_toLowerCase_69(i8* %175) #11
  %244 = add nsw i32 %173, 1
  %245 = sext i32 %173 to i64
  %246 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %42, i64 0, i32 2, i64 %245
  store i8* %243, i8** %246, align 8
  %247 = icmp slt i32 %244, 3
  %248 = select i1 %247, i16 190, i16 188
  br label %606

249:                                              ; preds = %237, %232, %228, %225, %217
  %250 = and i32 %190, 4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %292, label %252

252:                                              ; preds = %249
  %253 = icmp slt i32 %189, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %252
  %255 = tail call i64 @strlen(i8* %175) #12
  %256 = trunc i64 %255 to i32
  br label %257

257:                                              ; preds = %254, %252
  %258 = phi i32 [ %256, %254 ], [ %189, %252 ]
  %259 = icmp eq i32 %258, 4
  br i1 %259, label %260, label %292

260:                                              ; preds = %257
  %261 = load i8, i8* %175, align 1
  %262 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %261) #11
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %292, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds i8, i8* %175, i64 1
  %266 = load i8, i8* %265, align 1
  %267 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %266) #11
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %292, label %269

269:                                              ; preds = %264
  %270 = getelementptr inbounds i8, i8* %175, i64 2
  %271 = load i8, i8* %270, align 1
  %272 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %271) #11
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %292, label %274

274:                                              ; preds = %269
  %275 = getelementptr inbounds i8, i8* %175, i64 3
  %276 = load i8, i8* %275, align 1
  %277 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %276) #11
  %278 = icmp eq i8 %277, 0
  br i1 %278, label %292, label %279

279:                                              ; preds = %274
  store i8 0, i8* %178, align 1
  %280 = load i8, i8* %175, align 1
  %281 = tail call signext i8 @uprv_toupper_69(i8 signext %280) #11
  store i8 %281, i8* %175, align 1
  %282 = load i8, i8* %265, align 1
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %291, label %284

284:                                              ; preds = %279, %284
  %285 = phi i8 [ %289, %284 ], [ %282, %279 ]
  %286 = phi i8* [ %288, %284 ], [ %265, %279 ]
  %287 = tail call signext i8 @uprv_asciitolower_69(i8 signext %285) #11
  store i8 %287, i8* %286, align 1
  %288 = getelementptr inbounds i8, i8* %286, i64 1
  %289 = load i8, i8* %288, align 1
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %291, label %284

291:                                              ; preds = %284, %279
  store i8* %175, i8** %51, align 8
  br label %606

292:                                              ; preds = %274, %269, %264, %260, %257, %249
  %293 = and i32 %190, 8
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %327, label %295

295:                                              ; preds = %292
  %296 = icmp slt i32 %189, 0
  br i1 %296, label %297, label %300

297:                                              ; preds = %295
  %298 = tail call i64 @strlen(i8* %175) #12
  %299 = trunc i64 %298 to i32
  br label %300

300:                                              ; preds = %297, %295
  %301 = phi i32 [ %299, %297 ], [ %189, %295 ]
  switch i32 %301, label %327 [
    i32 2, label %302
    i32 3, label %311
  ]

302:                                              ; preds = %300
  %303 = load i8, i8* %175, align 1
  %304 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %303) #11
  %305 = icmp eq i8 %304, 0
  br i1 %305, label %327, label %306

306:                                              ; preds = %302
  %307 = getelementptr inbounds i8, i8* %175, i64 1
  %308 = load i8, i8* %307, align 1
  %309 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %308) #11
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %327, label %325

311:                                              ; preds = %300
  %312 = load i8, i8* %175, align 1
  %313 = add i8 %312, -48
  %314 = icmp ult i8 %313, 10
  br i1 %314, label %315, label %327

315:                                              ; preds = %311
  %316 = getelementptr inbounds i8, i8* %175, i64 1
  %317 = load i8, i8* %316, align 1
  %318 = add i8 %317, -48
  %319 = icmp ult i8 %318, 10
  br i1 %319, label %320, label %327

320:                                              ; preds = %315
  %321 = getelementptr inbounds i8, i8* %175, i64 2
  %322 = load i8, i8* %321, align 1
  %323 = add i8 %322, -48
  %324 = icmp ugt i8 %323, 9
  br i1 %324, label %327, label %325

325:                                              ; preds = %320, %306
  store i8 0, i8* %178, align 1
  %326 = tail call i8* @T_CString_toUpperCase_69(i8* %175) #11
  store i8* %326, i8** %53, align 8
  br label %606

327:                                              ; preds = %320, %315, %311, %306, %302, %300, %292
  %328 = and i32 %190, 16
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %386, label %330

330:                                              ; preds = %327
  %331 = tail call fastcc signext i8 @_ZL16_isVariantSubtagPKci(i8* %175, i32 %189) #11
  %332 = icmp eq i8 %331, 0
  br i1 %332, label %333, label %359

333:                                              ; preds = %330
  %334 = icmp eq i8 %168, 0
  br i1 %334, label %386, label %335

335:                                              ; preds = %333
  %336 = icmp slt i32 %189, 0
  br i1 %336, label %337, label %340

337:                                              ; preds = %335
  %338 = tail call i64 @strlen(i8* %175) #12
  %339 = trunc i64 %338 to i32
  br label %340

340:                                              ; preds = %337, %335
  %341 = phi i32 [ %339, %337 ], [ %189, %335 ]
  %342 = add i32 %341, -1
  %343 = icmp ult i32 %342, 8
  br i1 %343, label %344, label %386

344:                                              ; preds = %340
  %345 = zext i32 %341 to i64
  br label %346

346:                                              ; preds = %356, %344
  %347 = phi i64 [ 0, %344 ], [ %357, %356 ]
  %348 = getelementptr inbounds i8, i8* %175, i64 %347
  %349 = load i8, i8* %348, align 1
  %350 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %349) #11
  %351 = icmp eq i8 %350, 0
  br i1 %351, label %352, label %356

352:                                              ; preds = %346
  %353 = load i8, i8* %348, align 1
  %354 = add i8 %353, -48
  %355 = icmp ult i8 %354, 10
  br i1 %355, label %356, label %386

356:                                              ; preds = %352, %346
  %357 = add nuw nsw i64 %347, 1
  %358 = icmp eq i64 %357, %345
  br i1 %358, label %359, label %346

359:                                              ; preds = %356, %330
  %360 = tail call noalias i8* @uprv_malloc_69(i64 16) #10
  %361 = icmp eq i8* %360, null
  br i1 %361, label %675, label %362

362:                                              ; preds = %359
  store i8 0, i8* %178, align 1
  %363 = tail call i8* @T_CString_toUpperCase_69(i8* %175) #11
  %364 = bitcast i8* %360 to i8**
  store i8* %363, i8** %364, align 8
  %365 = load %struct.VariantListEntry*, %struct.VariantListEntry** %56, align 8
  %366 = icmp eq %struct.VariantListEntry* %365, null
  br i1 %366, label %367, label %375

367:                                              ; preds = %362
  %368 = getelementptr inbounds i8, i8* %360, i64 8
  %369 = bitcast i8* %368 to %struct.VariantListEntry**
  store %struct.VariantListEntry* null, %struct.VariantListEntry** %369, align 8
  store i8* %360, i8** %164, align 8
  br label %606

370:                                              ; preds = %381
  %371 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %376, i64 0, i32 1
  %372 = bitcast %struct.VariantListEntry** %371 to i8**
  store i8* %360, i8** %372, align 8
  %373 = getelementptr inbounds i8, i8* %360, i64 8
  %374 = bitcast i8* %373 to %struct.VariantListEntry**
  store %struct.VariantListEntry* null, %struct.VariantListEntry** %374, align 8
  br label %606

375:                                              ; preds = %362, %381
  %376 = phi %struct.VariantListEntry* [ %383, %381 ], [ %365, %362 ]
  %377 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %376, i64 0, i32 0
  %378 = load i8*, i8** %377, align 8
  %379 = tail call i32 @strcmp(i8* %363, i8* %378) #12
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %385, label %381

381:                                              ; preds = %375
  %382 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %376, i64 0, i32 1
  %383 = load %struct.VariantListEntry*, %struct.VariantListEntry** %382, align 8
  %384 = icmp eq %struct.VariantListEntry* %383, null
  br i1 %384, label %370, label %375

385:                                              ; preds = %375
  tail call void @uprv_free_69(i8* nonnull %360) #11
  br label %617

386:                                              ; preds = %352, %340, %333, %327
  %387 = and i32 %190, 32
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %462, label %389

389:                                              ; preds = %386
  %390 = icmp slt i32 %189, 0
  br i1 %390, label %391, label %394

391:                                              ; preds = %389
  %392 = tail call i64 @strlen(i8* %175) #12
  %393 = trunc i64 %392 to i32
  br label %394

394:                                              ; preds = %391, %389
  %395 = phi i32 [ %393, %391 ], [ %189, %389 ]
  %396 = icmp eq i32 %395, 1
  br i1 %396, label %397, label %462

397:                                              ; preds = %394
  %398 = load i8, i8* %175, align 1
  %399 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %398) #11
  %400 = icmp ne i8 %399, 0
  %401 = load i8, i8* %175, align 1
  %402 = add i8 %401, -48
  %403 = icmp ult i8 %402, 10
  %404 = or i1 %400, %403
  br i1 %404, label %405, label %462

405:                                              ; preds = %397
  %406 = tail call signext i8 @uprv_asciitolower_69(i8 signext %401) #11
  %407 = icmp eq i8 %406, 120
  br i1 %407, label %462, label %408

408:                                              ; preds = %405
  %409 = icmp eq %struct.ExtensionListEntry* %171, null
  br i1 %409, label %452, label %410

410:                                              ; preds = %408
  %411 = icmp eq i8* %170, null
  %412 = icmp eq i8* %169, null
  %413 = or i1 %412, %411
  br i1 %413, label %414, label %415

414:                                              ; preds = %410
  tail call void @uprv_free_69(i8* %172) #11
  br label %666

415:                                              ; preds = %410
  store i8 0, i8* %169, align 1
  %416 = tail call i8* @T_CString_toLowerCase_69(i8* nonnull %170) #11
  %417 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %171, i64 0, i32 1
  store i8* %416, i8** %417, align 8
  %418 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %166, align 8
  %419 = icmp eq %struct.ExtensionListEntry* %418, null
  br i1 %419, label %427, label %420

420:                                              ; preds = %415
  %421 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %171, i64 0, i32 0
  %422 = load i8*, i8** %421, align 8
  %423 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %418, i64 0, i32 0
  %424 = load i8*, i8** %423, align 8
  %425 = tail call i32 @strcmp(i8* %422, i8* %424) #12
  %426 = icmp slt i32 %425, 0
  br i1 %426, label %439, label %443

427:                                              ; preds = %415
  %428 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %171, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %428, align 8
  store %struct.ExtensionListEntry* %171, %struct.ExtensionListEntry** %166, align 8
  br label %452

429:                                              ; preds = %447
  %430 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %445, i64 0, i32 2
  store %struct.ExtensionListEntry* %171, %struct.ExtensionListEntry** %430, align 8
  %431 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %171, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %431, align 8
  br label %452

432:                                              ; preds = %447
  %433 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %449, i64 0, i32 0
  %434 = load i8*, i8** %433, align 8
  %435 = tail call i32 @strcmp(i8* %422, i8* %434) #12
  %436 = icmp slt i32 %435, 0
  br i1 %436, label %437, label %443

437:                                              ; preds = %432
  %438 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %445, i64 0, i32 2
  br label %439

439:                                              ; preds = %420, %437
  %440 = phi %struct.ExtensionListEntry** [ %438, %437 ], [ %166, %420 ]
  %441 = phi %struct.ExtensionListEntry* [ %449, %437 ], [ %418, %420 ]
  store %struct.ExtensionListEntry* %171, %struct.ExtensionListEntry** %440, align 8
  %442 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %171, i64 0, i32 2
  store %struct.ExtensionListEntry* %441, %struct.ExtensionListEntry** %442, align 8
  br label %452

443:                                              ; preds = %420, %432
  %444 = phi i32 [ %435, %432 ], [ %425, %420 ]
  %445 = phi %struct.ExtensionListEntry* [ %449, %432 ], [ %418, %420 ]
  %446 = icmp eq i32 %444, 0
  br i1 %446, label %451, label %447

447:                                              ; preds = %443
  %448 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %445, i64 0, i32 2
  %449 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %448, align 8
  %450 = icmp eq %struct.ExtensionListEntry* %449, null
  br i1 %450, label %429, label %432

451:                                              ; preds = %443
  tail call void @uprv_free_69(i8* %172) #11
  br label %666

452:                                              ; preds = %439, %429, %427, %408
  %453 = phi i8* [ %174, %408 ], [ %169, %427 ], [ %169, %429 ], [ %169, %439 ]
  %454 = tail call noalias i8* @uprv_malloc_69(i64 24) #10
  %455 = icmp eq i8* %454, null
  br i1 %455, label %675, label %456

456:                                              ; preds = %452
  %457 = bitcast i8* %454 to %struct.ExtensionListEntry*
  store i8 0, i8* %178, align 1
  %458 = tail call i8* @T_CString_toLowerCase_69(i8* %175) #11
  %459 = bitcast i8* %454 to i8**
  store i8* %458, i8** %459, align 8
  %460 = getelementptr inbounds i8, i8* %454, i64 8
  %461 = bitcast i8* %460 to i8**
  store i8* null, i8** %461, align 8
  br label %606

462:                                              ; preds = %405, %397, %394, %386
  %463 = and i32 %190, 64
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %492, label %465

465:                                              ; preds = %462
  %466 = icmp slt i32 %189, 0
  br i1 %466, label %467, label %470

467:                                              ; preds = %465
  %468 = tail call i64 @strlen(i8* %175) #12
  %469 = trunc i64 %468 to i32
  br label %470

470:                                              ; preds = %467, %465
  %471 = phi i32 [ %469, %467 ], [ %189, %465 ]
  %472 = add i32 %471, -2
  %473 = icmp ult i32 %472, 7
  br i1 %473, label %474, label %492

474:                                              ; preds = %470
  %475 = zext i32 %471 to i64
  br label %476

476:                                              ; preds = %486, %474
  %477 = phi i64 [ 0, %474 ], [ %487, %486 ]
  %478 = getelementptr inbounds i8, i8* %175, i64 %477
  %479 = load i8, i8* %478, align 1
  %480 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %479) #11
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %482, label %486

482:                                              ; preds = %476
  %483 = load i8, i8* %478, align 1
  %484 = add i8 %483, -48
  %485 = icmp ult i8 %484, 10
  br i1 %485, label %486, label %492

486:                                              ; preds = %482, %476
  %487 = add nuw nsw i64 %477, 1
  %488 = icmp eq i64 %487, %475
  br i1 %488, label %489, label %476

489:                                              ; preds = %486
  %490 = icmp eq i8* %170, null
  %491 = select i1 %490, i8* %175, i8* %170
  br label %606

492:                                              ; preds = %482, %470, %462
  %493 = trunc i16 %176 to i8
  %494 = icmp slt i8 %493, 0
  br i1 %494, label %495, label %617

495:                                              ; preds = %492
  %496 = load i8, i8* %175, align 1
  %497 = tail call signext i8 @uprv_asciitolower_69(i8 signext %496) #11
  %498 = icmp eq i8 %497, 120
  %499 = icmp eq i32 %189, 1
  %500 = and i1 %499, %498
  br i1 %500, label %501, label %617

501:                                              ; preds = %495
  %502 = icmp eq %struct.ExtensionListEntry* %171, null
  br i1 %502, label %545, label %503

503:                                              ; preds = %501
  %504 = icmp eq i8* %170, null
  %505 = icmp eq i8* %169, null
  %506 = or i1 %505, %504
  br i1 %506, label %507, label %508

507:                                              ; preds = %503
  tail call void @uprv_free_69(i8* %172) #11
  br label %666

508:                                              ; preds = %503
  store i8 0, i8* %169, align 1
  %509 = tail call i8* @T_CString_toLowerCase_69(i8* nonnull %170) #11
  %510 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %171, i64 0, i32 1
  store i8* %509, i8** %510, align 8
  %511 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %166, align 8
  %512 = icmp eq %struct.ExtensionListEntry* %511, null
  br i1 %512, label %520, label %513

513:                                              ; preds = %508
  %514 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %171, i64 0, i32 0
  %515 = load i8*, i8** %514, align 8
  %516 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %511, i64 0, i32 0
  %517 = load i8*, i8** %516, align 8
  %518 = tail call i32 @strcmp(i8* %515, i8* %517) #12
  %519 = icmp slt i32 %518, 0
  br i1 %519, label %532, label %536

520:                                              ; preds = %508
  %521 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %171, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %521, align 8
  store %struct.ExtensionListEntry* %171, %struct.ExtensionListEntry** %166, align 8
  br label %545

522:                                              ; preds = %540
  %523 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %538, i64 0, i32 2
  store %struct.ExtensionListEntry* %171, %struct.ExtensionListEntry** %523, align 8
  %524 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %171, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %524, align 8
  br label %545

525:                                              ; preds = %540
  %526 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %542, i64 0, i32 0
  %527 = load i8*, i8** %526, align 8
  %528 = tail call i32 @strcmp(i8* %515, i8* %527) #12
  %529 = icmp slt i32 %528, 0
  br i1 %529, label %530, label %536

530:                                              ; preds = %525
  %531 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %538, i64 0, i32 2
  br label %532

532:                                              ; preds = %513, %530
  %533 = phi %struct.ExtensionListEntry** [ %531, %530 ], [ %166, %513 ]
  %534 = phi %struct.ExtensionListEntry* [ %542, %530 ], [ %511, %513 ]
  store %struct.ExtensionListEntry* %171, %struct.ExtensionListEntry** %533, align 8
  %535 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %171, i64 0, i32 2
  store %struct.ExtensionListEntry* %534, %struct.ExtensionListEntry** %535, align 8
  br label %545

536:                                              ; preds = %513, %525
  %537 = phi i32 [ %528, %525 ], [ %518, %513 ]
  %538 = phi %struct.ExtensionListEntry* [ %542, %525 ], [ %511, %513 ]
  %539 = icmp eq i32 %537, 0
  br i1 %539, label %544, label %540

540:                                              ; preds = %536
  %541 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %538, i64 0, i32 2
  %542 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %541, align 8
  %543 = icmp eq %struct.ExtensionListEntry* %542, null
  br i1 %543, label %522, label %525

544:                                              ; preds = %536
  tail call void @uprv_free_69(i8* %172) #11
  br label %666

545:                                              ; preds = %532, %522, %520, %501
  %546 = phi i8* [ %174, %501 ], [ %169, %520 ], [ %169, %522 ], [ %169, %532 ]
  br i1 %183, label %666, label %548

547:                                              ; preds = %587
  br i1 %557, label %593, label %548

548:                                              ; preds = %545, %547
  %549 = phi i8* [ %552, %547 ], [ %546, %545 ]
  %550 = phi i8* [ %558, %547 ], [ %184, %545 ]
  br label %551

551:                                              ; preds = %554, %548
  %552 = phi i8* [ %555, %554 ], [ %550, %548 ]
  %553 = load i8, i8* %552, align 1
  switch i8 %553, label %554 [
    i8 0, label %556
    i8 45, label %556
  ]

554:                                              ; preds = %551
  %555 = getelementptr inbounds i8, i8* %552, i64 1
  br label %551

556:                                              ; preds = %551, %551
  %557 = icmp eq i8 %553, 0
  %558 = getelementptr inbounds i8, i8* %552, i64 1
  %559 = tail call i32 @strncmp(i8* nonnull %550, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @_ZL22PRIVUSE_VARIANT_PREFIX, i64 0, i64 0), i64 8) #12
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %561, label %562

561:                                              ; preds = %556
  store i8 0, i8* %552, align 1
  br i1 %557, label %666, label %606

562:                                              ; preds = %556
  %563 = ptrtoint i8* %552 to i64
  %564 = ptrtoint i8* %550 to i64
  %565 = sub i64 %563, %564
  %566 = trunc i64 %565 to i32
  %567 = icmp slt i32 %566, 0
  br i1 %567, label %568, label %571

568:                                              ; preds = %562
  %569 = tail call i64 @strlen(i8* nonnull %550) #12
  %570 = trunc i64 %569 to i32
  br label %571

571:                                              ; preds = %568, %562
  %572 = phi i32 [ %570, %568 ], [ %566, %562 ]
  %573 = add i32 %572, -1
  %574 = icmp ult i32 %573, 8
  br i1 %574, label %575, label %592

575:                                              ; preds = %571
  %576 = zext i32 %572 to i64
  br label %577

577:                                              ; preds = %587, %575
  %578 = phi i64 [ 0, %575 ], [ %588, %587 ]
  %579 = getelementptr inbounds i8, i8* %550, i64 %578
  %580 = load i8, i8* %579, align 1
  %581 = tail call signext i8 @uprv_isASCIILetter_69(i8 signext %580) #11
  %582 = icmp eq i8 %581, 0
  br i1 %582, label %583, label %587

583:                                              ; preds = %577
  %584 = load i8, i8* %579, align 1
  %585 = add i8 %584, -48
  %586 = icmp ult i8 %585, 10
  br i1 %586, label %587, label %590

587:                                              ; preds = %583, %577
  %588 = add nuw nsw i64 %578, 1
  %589 = icmp eq i64 %588, %576
  br i1 %589, label %547, label %577

590:                                              ; preds = %583
  %591 = select i1 %557, i8* null, i8* %558
  br label %595

592:                                              ; preds = %571
  br i1 %557, label %593, label %595

593:                                              ; preds = %547, %592
  %594 = phi i8* [ %549, %592 ], [ %552, %547 ]
  br label %595

595:                                              ; preds = %593, %592, %590
  %596 = phi i8* [ %591, %590 ], [ null, %593 ], [ %558, %592 ]
  %597 = phi i8* [ %549, %590 ], [ %594, %593 ], [ %549, %592 ]
  %598 = icmp eq i16 %176, 16
  br i1 %598, label %606, label %599

599:                                              ; preds = %595
  %600 = ptrtoint i8* %597 to i64
  %601 = ptrtoint i8* %185 to i64
  %602 = sub i64 %600, %601
  %603 = icmp sgt i64 %602, 0
  br i1 %603, label %604, label %666

604:                                              ; preds = %599
  store i8 0, i8* %597, align 1
  %605 = tail call i8* @T_CString_toLowerCase_69(i8* nonnull %185) #11
  store i8* %605, i8** %58, align 8
  br label %666

606:                                              ; preds = %561, %595, %489, %456, %370, %367, %325, %291, %242, %213
  %607 = phi i16 [ %216, %213 ], [ %248, %242 ], [ 184, %291 ], [ 176, %325 ], [ 64, %456 ], [ 224, %489 ], [ 16, %595 ], [ 16, %561 ], [ 176, %367 ], [ 176, %370 ]
  %608 = phi i8* [ %185, %213 ], [ %185, %242 ], [ %185, %291 ], [ %185, %325 ], [ %185, %456 ], [ %185, %489 ], [ %596, %595 ], [ %558, %561 ], [ %185, %367 ], [ %185, %370 ]
  %609 = phi i8* [ %178, %213 ], [ %178, %242 ], [ %178, %291 ], [ %178, %325 ], [ %453, %456 ], [ %174, %489 ], [ %597, %595 ], [ %549, %561 ], [ %178, %367 ], [ %178, %370 ]
  %610 = phi i32 [ %173, %213 ], [ %244, %242 ], [ %173, %291 ], [ %173, %325 ], [ %173, %456 ], [ %173, %489 ], [ %173, %595 ], [ %173, %561 ], [ %173, %367 ], [ %173, %370 ]
  %611 = phi i8* [ %172, %213 ], [ %172, %242 ], [ %172, %291 ], [ %172, %325 ], [ %454, %456 ], [ %172, %489 ], [ null, %595 ], [ null, %561 ], [ %172, %367 ], [ %172, %370 ]
  %612 = phi %struct.ExtensionListEntry* [ %171, %213 ], [ %171, %242 ], [ %171, %291 ], [ %171, %325 ], [ %457, %456 ], [ %171, %489 ], [ null, %595 ], [ null, %561 ], [ %171, %367 ], [ %171, %370 ]
  %613 = phi i8* [ %170, %213 ], [ %170, %242 ], [ %170, %291 ], [ %170, %325 ], [ null, %456 ], [ %491, %489 ], [ %170, %595 ], [ %170, %561 ], [ %170, %367 ], [ %170, %370 ]
  %614 = phi i8* [ %169, %213 ], [ %169, %242 ], [ %169, %291 ], [ %169, %325 ], [ null, %456 ], [ %178, %489 ], [ %169, %595 ], [ %169, %561 ], [ %169, %367 ], [ %169, %370 ]
  %615 = phi i8 [ %168, %213 ], [ %168, %242 ], [ %168, %291 ], [ %168, %325 ], [ %168, %456 ], [ %168, %489 ], [ %168, %595 ], [ 1, %561 ], [ %168, %367 ], [ %168, %370 ]
  %616 = icmp eq i8* %608, null
  br i1 %616, label %617, label %167

617:                                              ; preds = %606, %495, %492, %385
  %618 = phi i8* [ %174, %385 ], [ %174, %492 ], [ %174, %495 ], [ %609, %606 ]
  %619 = phi i8* [ %172, %385 ], [ %172, %492 ], [ %172, %495 ], [ %611, %606 ]
  %620 = phi %struct.ExtensionListEntry* [ %171, %385 ], [ %171, %492 ], [ %171, %495 ], [ %612, %606 ]
  %621 = phi i8* [ %170, %385 ], [ %170, %492 ], [ %170, %495 ], [ %613, %606 ]
  %622 = phi i8* [ %169, %385 ], [ %169, %492 ], [ %169, %495 ], [ %614, %606 ]
  %623 = icmp eq %struct.ExtensionListEntry* %620, null
  br i1 %623, label %666, label %624

624:                                              ; preds = %617
  %625 = icmp eq i8* %621, null
  %626 = icmp eq i8* %622, null
  %627 = or i1 %625, %626
  br i1 %627, label %628, label %629

628:                                              ; preds = %624
  tail call void @uprv_free_69(i8* %619) #11
  br label %666

629:                                              ; preds = %624
  store i8 0, i8* %622, align 1
  %630 = tail call i8* @T_CString_toLowerCase_69(i8* nonnull %621) #11
  %631 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %620, i64 0, i32 1
  store i8* %630, i8** %631, align 8
  %632 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %166, align 8
  %633 = icmp eq %struct.ExtensionListEntry* %632, null
  br i1 %633, label %641, label %634

634:                                              ; preds = %629
  %635 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %620, i64 0, i32 0
  %636 = load i8*, i8** %635, align 8
  %637 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %632, i64 0, i32 0
  %638 = load i8*, i8** %637, align 8
  %639 = tail call i32 @strcmp(i8* %636, i8* %638) #12
  %640 = icmp slt i32 %639, 0
  br i1 %640, label %653, label %657

641:                                              ; preds = %629
  %642 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %620, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %642, align 8
  store %struct.ExtensionListEntry* %620, %struct.ExtensionListEntry** %166, align 8
  br label %666

643:                                              ; preds = %661
  %644 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %659, i64 0, i32 2
  store %struct.ExtensionListEntry* %620, %struct.ExtensionListEntry** %644, align 8
  %645 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %620, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %645, align 8
  br label %666

646:                                              ; preds = %661
  %647 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %663, i64 0, i32 0
  %648 = load i8*, i8** %647, align 8
  %649 = tail call i32 @strcmp(i8* %636, i8* %648) #12
  %650 = icmp slt i32 %649, 0
  br i1 %650, label %651, label %657

651:                                              ; preds = %646
  %652 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %659, i64 0, i32 2
  br label %653

653:                                              ; preds = %634, %651
  %654 = phi %struct.ExtensionListEntry** [ %652, %651 ], [ %166, %634 ]
  %655 = phi %struct.ExtensionListEntry* [ %663, %651 ], [ %632, %634 ]
  store %struct.ExtensionListEntry* %620, %struct.ExtensionListEntry** %654, align 8
  %656 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %620, i64 0, i32 2
  store %struct.ExtensionListEntry* %655, %struct.ExtensionListEntry** %656, align 8
  br label %666

657:                                              ; preds = %634, %646
  %658 = phi i32 [ %649, %646 ], [ %639, %634 ]
  %659 = phi %struct.ExtensionListEntry* [ %663, %646 ], [ %632, %634 ]
  %660 = icmp eq i32 %658, 0
  br i1 %660, label %665, label %661

661:                                              ; preds = %657
  %662 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %659, i64 0, i32 2
  %663 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %662, align 8
  %664 = icmp eq %struct.ExtensionListEntry* %663, null
  br i1 %664, label %643, label %646

665:                                              ; preds = %657
  tail call void @uprv_free_69(i8* %619) #11
  br label %666

666:                                              ; preds = %561, %545, %665, %653, %643, %641, %628, %617, %604, %599, %544, %507, %451, %414, %159
  %667 = phi i8* [ %618, %628 ], [ %618, %665 ], [ %618, %617 ], [ %622, %641 ], [ %622, %643 ], [ %622, %653 ], [ %174, %414 ], [ %174, %451 ], [ %174, %507 ], [ %174, %544 ], [ %597, %604 ], [ %597, %599 ], [ null, %159 ], [ %549, %561 ], [ %546, %545 ]
  br i1 %18, label %668, label %697

668:                                              ; preds = %666
  %669 = bitcast i8* %41 to i64*
  %670 = load i64, i64* %669, align 8
  %671 = ptrtoint i8* %667 to i64
  %672 = add i64 %161, %671
  %673 = sub i64 %672, %670
  %674 = trunc i64 %673 to i32
  store i32 %674, i32* %3, align 4
  br label %697

675:                                              ; preds = %452, %359, %92
  store i32 7, i32* %4, align 4
  %676 = load i8*, i8** %46, align 8
  tail call void @uprv_free_69(i8* %676) #11
  %677 = load %struct.VariantListEntry*, %struct.VariantListEntry** %56, align 8
  %678 = icmp eq %struct.VariantListEntry* %677, null
  br i1 %678, label %685, label %679

679:                                              ; preds = %675, %679
  %680 = phi %struct.VariantListEntry* [ %682, %679 ], [ %677, %675 ]
  %681 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %680, i64 0, i32 1
  %682 = load %struct.VariantListEntry*, %struct.VariantListEntry** %681, align 8
  %683 = bitcast %struct.VariantListEntry* %680 to i8*
  tail call void @uprv_free_69(i8* nonnull %683) #11
  %684 = icmp eq %struct.VariantListEntry* %682, null
  br i1 %684, label %685, label %679

685:                                              ; preds = %679, %675
  %686 = getelementptr inbounds i8, i8* %41, i64 64
  %687 = bitcast i8* %686 to %struct.ExtensionListEntry**
  %688 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %687, align 8
  %689 = icmp eq %struct.ExtensionListEntry* %688, null
  br i1 %689, label %696, label %690

690:                                              ; preds = %685, %690
  %691 = phi %struct.ExtensionListEntry* [ %693, %690 ], [ %688, %685 ]
  %692 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %691, i64 0, i32 2
  %693 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %692, align 8
  %694 = bitcast %struct.ExtensionListEntry* %691 to i8*
  tail call void @uprv_free_69(i8* nonnull %694) #11
  %695 = icmp eq %struct.ExtensionListEntry* %693, null
  br i1 %695, label %696, label %690

696:                                              ; preds = %690, %685
  tail call void @uprv_free_69(i8* nonnull %41) #11
  br label %697

697:                                              ; preds = %45, %666, %668, %696
  %698 = phi i8* [ %41, %666 ], [ %41, %668 ], [ %41, %45 ], [ null, %696 ]
  %699 = phi %struct.ULanguageTag* [ %42, %666 ], [ %42, %668 ], [ %42, %45 ], [ null, %696 ]
  %700 = load i32, i32* %4, align 4
  %701 = icmp slt i32 %700, 1
  br i1 %701, label %702, label %1783

702:                                              ; preds = %697
  %703 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 2, i64 0
  %704 = load i8*, i8** %703, align 8
  %705 = icmp ne i8* %704, null
  %706 = zext i1 %705 to i32
  %707 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 2, i64 1
  %708 = load i8*, i8** %707, align 8
  %709 = icmp ne i8* %708, null
  %710 = zext i1 %709 to i32
  %711 = add nuw nsw i32 %710, %706
  %712 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 2, i64 2
  %713 = load i8*, i8** %712, align 8
  %714 = icmp ne i8* %713, null
  %715 = sext i1 %714 to i32
  %716 = icmp eq i32 %711, %715
  br i1 %716, label %717, label %720

717:                                              ; preds = %702
  %718 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 1
  %719 = load i8*, i8** %718, align 8
  br label %720

720:                                              ; preds = %702, %717
  %721 = phi i8* [ %719, %717 ], [ %704, %702 ]
  %722 = tail call i32 @strcmp(i8* %721, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL8LANG_UND, i64 0, i64 0)) #12
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %733, label %724

724:                                              ; preds = %720
  %725 = tail call i64 @strlen(i8* %721) #12
  %726 = trunc i64 %725 to i32
  %727 = icmp sgt i32 %726, 0
  br i1 %727, label %728, label %733

728:                                              ; preds = %724
  %729 = bitcast %"class.icu_69::ByteSink"* %2 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %730 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %729, align 8
  %731 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %730, i64 2
  %732 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %731, align 8
  tail call void %732(%"class.icu_69::ByteSink"* %2, i8* %721, i32 %726) #11
  br label %733

733:                                              ; preds = %720, %724, %728
  %734 = phi i8 [ 0, %728 ], [ 1, %724 ], [ 1, %720 ]
  %735 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 3
  %736 = load i8*, i8** %735, align 8
  %737 = tail call i64 @strlen(i8* %736) #12
  %738 = trunc i64 %737 to i32
  %739 = icmp sgt i32 %738, 0
  br i1 %739, label %740, label %755

740:                                              ; preds = %733
  %741 = bitcast %"class.icu_69::ByteSink"* %2 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %742 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %741, align 8
  %743 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %742, i64 2
  %744 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %743, align 8
  tail call void %744(%"class.icu_69::ByteSink"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i32 1) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #11
  store i8 -86, i8* %15, align 1
  %745 = load i8, i8* %736, align 1
  %746 = tail call signext i8 @uprv_toupper_69(i8 signext %745) #11
  store i8 %746, i8* %15, align 1
  %747 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %741, align 8
  %748 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %747, i64 2
  %749 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %748, align 8
  call void %749(%"class.icu_69::ByteSink"* %2, i8* nonnull %15, i32 1) #11
  %750 = getelementptr inbounds i8, i8* %736, i64 1
  %751 = add nsw i32 %738, -1
  %752 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %741, align 8
  %753 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %752, i64 2
  %754 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %753, align 8
  call void %754(%"class.icu_69::ByteSink"* %2, i8* %750, i32 %751) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #11
  br label %755

755:                                              ; preds = %740, %733
  %756 = phi i8 [ 0, %740 ], [ %734, %733 ]
  %757 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 4
  %758 = load i8*, i8** %757, align 8
  %759 = call i64 @strlen(i8* %758) #12
  %760 = trunc i64 %759 to i32
  %761 = icmp sgt i32 %760, 0
  br i1 %761, label %762, label %779

762:                                              ; preds = %755
  %763 = bitcast %"class.icu_69::ByteSink"* %2 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %764 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %763, align 8
  %765 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %764, i64 2
  %766 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %765, align 8
  call void %766(%"class.icu_69::ByteSink"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i32 1) #11
  %767 = load i8, i8* %758, align 1
  %768 = icmp eq i8 %767, 0
  br i1 %768, label %779, label %769

769:                                              ; preds = %762, %769
  %770 = phi i8* [ %776, %769 ], [ %758, %762 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #11
  store i8 -86, i8* %16, align 1
  %771 = load i8, i8* %770, align 1
  %772 = call signext i8 @uprv_toupper_69(i8 signext %771) #11
  store i8 %772, i8* %16, align 1
  %773 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %763, align 8
  %774 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %773, i64 2
  %775 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %774, align 8
  call void %775(%"class.icu_69::ByteSink"* %2, i8* nonnull %16, i32 1) #11
  %776 = getelementptr inbounds i8, i8* %770, i64 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #11
  %777 = load i8, i8* %776, align 1
  %778 = icmp eq i8 %777, 0
  br i1 %778, label %779, label %769

779:                                              ; preds = %769, %762, %755
  %780 = phi i8 [ %756, %755 ], [ 0, %762 ], [ 0, %769 ]
  %781 = phi i8 [ 1, %755 ], [ 0, %762 ], [ 0, %769 ]
  %782 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 5
  %783 = load %struct.VariantListEntry*, %struct.VariantListEntry** %782, align 8
  %784 = icmp eq %struct.VariantListEntry* %783, null
  br i1 %784, label %862, label %785

785:                                              ; preds = %779, %792
  %786 = phi %struct.VariantListEntry* [ %793, %792 ], [ %783, %779 ]
  %787 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %786, i64 0, i32 1
  %788 = load %struct.VariantListEntry*, %struct.VariantListEntry** %787, align 8
  %789 = icmp eq %struct.VariantListEntry* %788, null
  br i1 %789, label %807, label %790

790:                                              ; preds = %785
  %791 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %786, i64 0, i32 0
  br label %795

792:                                              ; preds = %803
  %793 = load %struct.VariantListEntry*, %struct.VariantListEntry** %787, align 8
  %794 = icmp eq %struct.VariantListEntry* %793, null
  br i1 %794, label %807, label %785

795:                                              ; preds = %803, %790
  %796 = phi %struct.VariantListEntry* [ %788, %790 ], [ %805, %803 ]
  %797 = load i8*, i8** %791, align 8
  %798 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %796, i64 0, i32 0
  %799 = load i8*, i8** %798, align 8
  %800 = call i32 @strcmp(i8* %797, i8* %799) #12
  %801 = icmp sgt i32 %800, 0
  br i1 %801, label %802, label %803

802:                                              ; preds = %795
  store i8* %799, i8** %791, align 8
  store i8* %797, i8** %798, align 8
  br label %803

803:                                              ; preds = %802, %795
  %804 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %796, i64 0, i32 1
  %805 = load %struct.VariantListEntry*, %struct.VariantListEntry** %804, align 8
  %806 = icmp eq %struct.VariantListEntry* %805, null
  br i1 %806, label %792, label %795

807:                                              ; preds = %785, %792
  %808 = load %struct.VariantListEntry*, %struct.VariantListEntry** %782, align 8
  %809 = icmp eq %struct.VariantListEntry* %808, null
  br i1 %809, label %862, label %810

810:                                              ; preds = %807, %810
  %811 = phi %struct.VariantListEntry* [ %815, %810 ], [ %808, %807 ]
  %812 = phi i32 [ %813, %810 ], [ 0, %807 ]
  %813 = add nuw i32 %812, 1
  %814 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %811, i64 0, i32 1
  %815 = load %struct.VariantListEntry*, %struct.VariantListEntry** %814, align 8
  %816 = icmp eq %struct.VariantListEntry* %815, null
  br i1 %816, label %817, label %810

817:                                              ; preds = %810
  %818 = icmp eq i8 %781, 0
  %819 = bitcast %"class.icu_69::ByteSink"* %2 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  br i1 %818, label %824, label %820

820:                                              ; preds = %817
  %821 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %819, align 8
  %822 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %821, i64 2
  %823 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %822, align 8
  call void %823(%"class.icu_69::ByteSink"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i32 1) #11
  br label %824

824:                                              ; preds = %817, %820
  %825 = phi i8 [ 0, %820 ], [ %780, %817 ]
  br label %826

826:                                              ; preds = %859, %824
  %827 = phi i32 [ 0, %824 ], [ %860, %859 ]
  %828 = load %struct.VariantListEntry*, %struct.VariantListEntry** %782, align 8
  %829 = icmp eq %struct.VariantListEntry* %828, null
  br i1 %829, label %842, label %830

830:                                              ; preds = %826, %837
  %831 = phi %struct.VariantListEntry* [ %840, %837 ], [ %828, %826 ]
  %832 = phi i32 [ %839, %837 ], [ 0, %826 ]
  %833 = icmp eq i32 %832, %827
  br i1 %833, label %834, label %837

834:                                              ; preds = %830
  %835 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %831, i64 0, i32 0
  %836 = load i8*, i8** %835, align 8
  br label %842

837:                                              ; preds = %830
  %838 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %831, i64 0, i32 1
  %839 = add nuw nsw i32 %832, 1
  %840 = load %struct.VariantListEntry*, %struct.VariantListEntry** %838, align 8
  %841 = icmp eq %struct.VariantListEntry* %840, null
  br i1 %841, label %842, label %830

842:                                              ; preds = %837, %826, %834
  %843 = phi i8* [ %836, %834 ], [ null, %826 ], [ null, %837 ]
  %844 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %819, align 8
  %845 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %844, i64 2
  %846 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %845, align 8
  call void %846(%"class.icu_69::ByteSink"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i32 1) #11
  %847 = load i8, i8* %843, align 1
  %848 = icmp eq i8 %847, 0
  br i1 %848, label %859, label %849

849:                                              ; preds = %842, %849
  %850 = phi i8* [ %856, %849 ], [ %843, %842 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  store i8 -86, i8* %17, align 1
  %851 = load i8, i8* %850, align 1
  %852 = call signext i8 @uprv_toupper_69(i8 signext %851) #11
  store i8 %852, i8* %17, align 1
  %853 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %819, align 8
  %854 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %853, i64 2
  %855 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %854, align 8
  call void %855(%"class.icu_69::ByteSink"* %2, i8* nonnull %17, i32 1) #11
  %856 = getelementptr inbounds i8, i8* %850, i64 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  %857 = load i8, i8* %856, align 1
  %858 = icmp eq i8 %857, 0
  br i1 %858, label %859, label %849

859:                                              ; preds = %849, %842
  %860 = add nuw i32 %827, 1
  %861 = icmp eq i32 %860, %813
  br i1 %861, label %862, label %826

862:                                              ; preds = %859, %779, %807
  %863 = phi i8 [ %780, %807 ], [ %780, %779 ], [ %825, %859 ]
  %864 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 6
  %865 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %864, align 8
  %866 = icmp eq %struct.ExtensionListEntry* %865, null
  br i1 %866, label %872, label %867

867:                                              ; preds = %862, %867
  %868 = phi %struct.ExtensionListEntry* [ %870, %867 ], [ %865, %862 ]
  %869 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %868, i64 0, i32 2
  %870 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %869, align 8
  %871 = icmp eq %struct.ExtensionListEntry* %870, null
  br i1 %871, label %877, label %867

872:                                              ; preds = %862
  %873 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 7
  %874 = load i8*, i8** %873, align 8
  %875 = load i8, i8* %874, align 1
  %876 = icmp eq i8 %875, 0
  br i1 %876, label %1783, label %885

877:                                              ; preds = %867
  %878 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 7
  %879 = icmp eq i8 %863, 0
  br i1 %879, label %885, label %880

880:                                              ; preds = %877
  %881 = bitcast %"class.icu_69::ByteSink"* %2 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %882 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %881, align 8
  %883 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %882, i64 2
  %884 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %883, align 8
  call void %884(%"class.icu_69::ByteSink"* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZL8LANG_UND, i64 0, i64 0), i32 3) #11
  br label %885

885:                                              ; preds = %877, %872, %880
  %886 = phi i8** [ %878, %880 ], [ %878, %877 ], [ %873, %872 ]
  %887 = bitcast %"class.icu_69::MemoryPool.2"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %887) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %887, i8 -86, i64 88, i1 false) #11
  %888 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %13, i64 0, i32 0
  store i32 0, i32* %888, align 8
  %889 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %13, i64 0, i32 1, i32 0
  %890 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %13, i64 0, i32 1, i32 3, i64 0
  store %struct.ExtensionListEntry** %890, %struct.ExtensionListEntry*** %889, align 8
  %891 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %13, i64 0, i32 1, i32 1
  store i32 8, i32* %891, align 8
  %892 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %13, i64 0, i32 1, i32 2
  store i8 0, i8* %892, align 4
  %893 = bitcast %"class.icu_69::MemoryPool.4"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %893) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %893, i8 -86, i64 88, i1 false) #11
  %894 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %14, i64 0, i32 0
  store i32 0, i32* %894, align 8
  %895 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %14, i64 0, i32 1, i32 0
  %896 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %14, i64 0, i32 1, i32 3, i64 0
  store %"class.icu_69::CharString"** %896, %"class.icu_69::CharString"*** %895, align 8
  %897 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %14, i64 0, i32 1, i32 1
  store i32 8, i32* %897, align 8
  %898 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %14, i64 0, i32 1, i32 2
  store i8 0, i8* %898, align 4
  %899 = load i32, i32* %4, align 4
  %900 = icmp slt i32 %899, 1
  br i1 %900, label %901, label %1721

901:                                              ; preds = %885
  %902 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %864, align 8
  %903 = icmp eq %struct.ExtensionListEntry* %902, null
  br i1 %903, label %1561, label %904

904:                                              ; preds = %901, %904
  %905 = phi %struct.ExtensionListEntry* [ %909, %904 ], [ %902, %901 ]
  %906 = phi i32 [ %907, %904 ], [ 0, %901 ]
  %907 = add nuw nsw i32 %906, 1
  %908 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %905, i64 0, i32 2
  %909 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %908, align 8
  %910 = icmp eq %struct.ExtensionListEntry* %909, null
  br i1 %910, label %911, label %904

911:                                              ; preds = %904
  %912 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %13, i64 0, i32 1
  %913 = bitcast %"class.icu_69::MaybeStackArray.3"* %912 to i8**
  %914 = getelementptr inbounds %"class.icu_69::MaybeStackArray.3", %"class.icu_69::MaybeStackArray.3"* %912, i64 0, i32 0
  %915 = bitcast { i8*, i32 }* %8 to i8*
  %916 = bitcast { i8*, i32 }* %8 to %"class.icu_69::StringPiece"*
  %917 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i64 0, i64 0
  %918 = bitcast %"class.icu_69::MemoryPool"* %7 to i8*
  %919 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %7, i64 0, i32 0
  %920 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %7, i64 0, i32 1, i32 0
  %921 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %7, i64 0, i32 1, i32 3, i64 0
  %922 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %7, i64 0, i32 1, i32 1
  %923 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %7, i64 0, i32 1, i32 2
  %924 = getelementptr inbounds %"class.icu_69::MemoryPool", %"class.icu_69::MemoryPool"* %7, i64 0, i32 1
  %925 = bitcast %"class.icu_69::MaybeStackArray.1"* %924 to i8**
  %926 = getelementptr inbounds %"class.icu_69::MaybeStackArray.1", %"class.icu_69::MaybeStackArray.1"* %924, i64 0, i32 0
  %927 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %8, i64 0, i32 0
  %928 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %8, i64 0, i32 1
  %929 = bitcast i32* %9 to i8*
  %930 = bitcast i32* %10 to i8*
  %931 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 0
  %932 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 1
  %933 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 2
  %934 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 0
  br label %935

935:                                              ; preds = %1556, %911
  %936 = phi %struct.ExtensionListEntry* [ %902, %911 ], [ %1557, %1556 ]
  %937 = phi i32 [ 0, %911 ], [ %1554, %1556 ]
  %938 = phi i8 [ 0, %911 ], [ %1553, %1556 ]
  %939 = phi %struct.ExtensionListEntry* [ null, %911 ], [ %1552, %1556 ]
  %940 = icmp eq %struct.ExtensionListEntry* %936, null
  br i1 %940, label %967, label %941

941:                                              ; preds = %935, %948
  %942 = phi %struct.ExtensionListEntry* [ %951, %948 ], [ %936, %935 ]
  %943 = phi i32 [ %950, %948 ], [ 0, %935 ]
  %944 = icmp eq i32 %943, %937
  br i1 %944, label %945, label %948

945:                                              ; preds = %941
  %946 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %942, i64 0, i32 0
  %947 = load i8*, i8** %946, align 8
  br label %953

948:                                              ; preds = %941
  %949 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %942, i64 0, i32 2
  %950 = add nuw nsw i32 %943, 1
  %951 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %949, align 8
  %952 = icmp eq %struct.ExtensionListEntry* %951, null
  br i1 %952, label %953, label %941

953:                                              ; preds = %948, %945
  %954 = phi i8* [ %947, %945 ], [ null, %948 ]
  br label %955

955:                                              ; preds = %962, %953
  %956 = phi %struct.ExtensionListEntry* [ %965, %962 ], [ %936, %953 ]
  %957 = phi i32 [ %964, %962 ], [ 0, %953 ]
  %958 = icmp eq i32 %957, %937
  br i1 %958, label %959, label %962

959:                                              ; preds = %955
  %960 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %956, i64 0, i32 1
  %961 = load i8*, i8** %960, align 8
  br label %967

962:                                              ; preds = %955
  %963 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %956, i64 0, i32 2
  %964 = add nuw nsw i32 %957, 1
  %965 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %963, align 8
  %966 = icmp eq %struct.ExtensionListEntry* %965, null
  br i1 %966, label %967, label %955

967:                                              ; preds = %962, %959, %935
  %968 = phi i8* [ %954, %959 ], [ null, %935 ], [ %954, %962 ]
  %969 = phi i8* [ %961, %959 ], [ null, %935 ], [ null, %962 ]
  %970 = load i8, i8* %968, align 1
  %971 = icmp eq i8 %970, 117
  br i1 %971, label %972, label %1475

972:                                              ; preds = %967
  %973 = load %struct.VariantListEntry*, %struct.VariantListEntry** %782, align 8
  %974 = icmp eq %struct.VariantListEntry* %973, null
  br i1 %974, label %980, label %975

975:                                              ; preds = %972, %975
  %976 = phi %struct.VariantListEntry* [ %978, %975 ], [ %973, %972 ]
  %977 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %976, i64 0, i32 1
  %978 = load %struct.VariantListEntry*, %struct.VariantListEntry** %977, align 8
  %979 = icmp eq %struct.VariantListEntry* %978, null
  br i1 %979, label %980, label %975

980:                                              ; preds = %975, %972
  %981 = phi i8 [ %938, %972 ], [ 1, %975 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %915) #11
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %917) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %917, i8 -86, i64 100, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %918) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %918, i8 -86, i64 88, i1 false) #11
  store i32 0, i32* %919, align 8
  store %struct.AttributeListEntry** %921, %struct.AttributeListEntry*** %920, align 8
  store i32 8, i32* %922, align 8
  store i8 0, i8* %923, align 4
  %982 = load i8, i8* %969, align 1
  %983 = icmp eq i8 %982, 0
  br i1 %983, label %1182, label %984

984:                                              ; preds = %980, %1096
  %985 = phi i8 [ %1102, %1096 ], [ %982, %980 ]
  %986 = phi i32 [ %1068, %1096 ], [ 0, %980 ]
  %987 = phi i8* [ %1101, %1096 ], [ %969, %980 ]
  %988 = phi %struct.AttributeListEntry* [ %1097, %1096 ], [ null, %980 ]
  br label %989

989:                                              ; preds = %992, %984
  %990 = phi i8 [ %985, %984 ], [ %995, %992 ]
  %991 = phi i64 [ 0, %984 ], [ %993, %992 ]
  switch i8 %990, label %992 [
    i8 0, label %996
    i8 45, label %996
  ]

992:                                              ; preds = %989
  %993 = add nuw i64 %991, 1
  %994 = getelementptr inbounds i8, i8* %987, i64 %993
  %995 = load i8, i8* %994, align 1
  br label %989

996:                                              ; preds = %989, %989
  %997 = trunc i64 %991 to i32
  %998 = and i64 %991, 4294967295
  %999 = getelementptr inbounds i8, i8* %987, i64 %998
  %1000 = icmp eq i32 %997, 2
  br i1 %1000, label %1001, label %1013

1001:                                             ; preds = %996
  %1002 = call signext i8 @uprv_isASCIILetter_69(i8 signext %985) #11
  %1003 = icmp eq i8 %1002, 0
  br i1 %1003, label %1004, label %1008

1004:                                             ; preds = %1001
  %1005 = load i8, i8* %987, align 1
  %1006 = add i8 %1005, -48
  %1007 = icmp ult i8 %1006, 10
  br i1 %1007, label %1008, label %1013

1008:                                             ; preds = %1004, %1001
  %1009 = getelementptr inbounds i8, i8* %987, i64 1
  %1010 = load i8, i8* %1009, align 1
  %1011 = call signext i8 @uprv_isASCIILetter_69(i8 signext %1010) #11
  %1012 = icmp eq i8 %1011, 0
  br i1 %1012, label %1013, label %1105

1013:                                             ; preds = %1008, %1004, %996
  %1014 = load i32, i32* %922, align 8
  %1015 = load i32, i32* %919, align 8
  %1016 = icmp eq i32 %1015, %1014
  br i1 %1016, label %1017, label %1044

1017:                                             ; preds = %1013
  %1018 = icmp eq i32 %1014, 8
  %1019 = select i1 %1018, i32 2, i32 1
  %1020 = shl nsw i32 %1014, %1019
  %1021 = icmp sgt i32 %1020, 0
  br i1 %1021, label %1022, label %1057

1022:                                             ; preds = %1017
  %1023 = sext i32 %1020 to i64
  %1024 = shl nsw i64 %1023, 3
  %1025 = call noalias i8* @uprv_malloc_69(i64 %1024) #10
  %1026 = icmp eq i8* %1025, null
  br i1 %1026, label %1057, label %1027

1027:                                             ; preds = %1022
  %1028 = icmp sgt i32 %1014, 0
  br i1 %1028, label %1029, label %1038

1029:                                             ; preds = %1027
  %1030 = load i32, i32* %922, align 8
  %1031 = icmp slt i32 %1030, %1014
  %1032 = select i1 %1031, i32 %1030, i32 %1014
  %1033 = icmp sgt i32 %1032, %1020
  %1034 = select i1 %1033, i32 %1020, i32 %1032
  %1035 = load i8*, i8** %925, align 8
  %1036 = sext i32 %1034 to i64
  %1037 = shl nsw i64 %1036, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1025, i8* align 8 %1035, i64 %1037, i1 false) #11
  br label %1038

1038:                                             ; preds = %1029, %1027
  %1039 = load i8, i8* %923, align 4
  %1040 = icmp eq i8 %1039, 0
  br i1 %1040, label %1043, label %1041

1041:                                             ; preds = %1038
  %1042 = load i8*, i8** %925, align 8
  call void @uprv_free_69(i8* %1042) #11
  br label %1043

1043:                                             ; preds = %1041, %1038
  store i8* %1025, i8** %925, align 8
  store i32 %1020, i32* %922, align 8
  store i8 1, i8* %923, align 4
  br label %1044

1044:                                             ; preds = %1043, %1013
  %1045 = call i8* @_ZN6icu_697UMemorynwEm(i64 16) #11
  %1046 = icmp eq i8* %1045, null
  br i1 %1046, label %1049, label %1047

1047:                                             ; preds = %1044
  %1048 = bitcast i8* %1045 to %struct.AttributeListEntry*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1045, i8 0, i64 16, i1 false) #11
  br label %1049

1049:                                             ; preds = %1047, %1044
  %1050 = phi %struct.AttributeListEntry* [ %1048, %1047 ], [ null, %1044 ]
  %1051 = load i32, i32* %919, align 8
  %1052 = add nsw i32 %1051, 1
  store i32 %1052, i32* %919, align 8
  %1053 = sext i32 %1051 to i64
  %1054 = load %struct.AttributeListEntry**, %struct.AttributeListEntry*** %926, align 8
  %1055 = getelementptr inbounds %struct.AttributeListEntry*, %struct.AttributeListEntry** %1054, i64 %1053
  store %struct.AttributeListEntry* %1050, %struct.AttributeListEntry** %1055, align 8
  %1056 = icmp eq %struct.AttributeListEntry* %1050, null
  br i1 %1056, label %1057, label %1058

1057:                                             ; preds = %1049, %1022, %1017
  store i32 7, i32* %4, align 4
  br label %1182

1058:                                             ; preds = %1049
  %1059 = sub nsw i32 100, %986
  %1060 = icmp sgt i32 %1059, %997
  br i1 %1060, label %1061, label %1104

1061:                                             ; preds = %1058
  %1062 = zext i32 %986 to i64
  %1063 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i64 0, i64 %1062
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1063, i8* align 1 %987, i64 %998, i1 false) #11
  %1064 = add i32 %986, %997
  %1065 = zext i32 %1064 to i64
  %1066 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i64 0, i64 %1065
  store i8 0, i8* %1066, align 1
  %1067 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %1050, i64 0, i32 0
  store i8* %1063, i8** %1067, align 8
  %1068 = add i32 %1064, 1
  %1069 = icmp eq %struct.AttributeListEntry* %988, null
  br i1 %1069, label %1092, label %1070

1070:                                             ; preds = %1061
  %1071 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %988, i64 0, i32 0
  %1072 = load i8*, i8** %1071, align 8
  %1073 = call i32 @strcmp(i8* %1063, i8* %1072) #12
  %1074 = icmp slt i32 %1073, 0
  br i1 %1074, label %1092, label %1084

1075:                                             ; preds = %1088
  %1076 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %1086, i64 0, i32 1
  store %struct.AttributeListEntry* %1050, %struct.AttributeListEntry** %1076, align 8
  br label %1092

1077:                                             ; preds = %1088
  %1078 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %1090, i64 0, i32 0
  %1079 = load i8*, i8** %1078, align 8
  %1080 = call i32 @strcmp(i8* %1063, i8* %1079) #12
  %1081 = icmp slt i32 %1080, 0
  br i1 %1081, label %1082, label %1084

1082:                                             ; preds = %1077
  %1083 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %1086, i64 0, i32 1
  store %struct.AttributeListEntry* %1050, %struct.AttributeListEntry** %1083, align 8
  br label %1092

1084:                                             ; preds = %1070, %1077
  %1085 = phi i32 [ %1080, %1077 ], [ %1073, %1070 ]
  %1086 = phi %struct.AttributeListEntry* [ %1090, %1077 ], [ %988, %1070 ]
  %1087 = icmp eq i32 %1085, 0
  br i1 %1087, label %1096, label %1088

1088:                                             ; preds = %1084
  %1089 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %1086, i64 0, i32 1
  %1090 = load %struct.AttributeListEntry*, %struct.AttributeListEntry** %1089, align 8
  %1091 = icmp eq %struct.AttributeListEntry* %1090, null
  br i1 %1091, label %1075, label %1077

1092:                                             ; preds = %1070, %1082, %1061, %1075
  %1093 = phi %struct.AttributeListEntry* [ null, %1075 ], [ null, %1061 ], [ %1090, %1082 ], [ %988, %1070 ]
  %1094 = phi %struct.AttributeListEntry* [ %988, %1075 ], [ %1050, %1061 ], [ %988, %1082 ], [ %1050, %1070 ]
  %1095 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %1050, i64 0, i32 1
  store %struct.AttributeListEntry* %1093, %struct.AttributeListEntry** %1095, align 8
  br label %1096

1096:                                             ; preds = %1084, %1092
  %1097 = phi %struct.AttributeListEntry* [ %1094, %1092 ], [ %988, %1084 ]
  %1098 = load i8, i8* %999, align 1
  %1099 = icmp eq i8 %1098, 0
  %1100 = getelementptr inbounds i8, i8* %999, i64 1
  %1101 = select i1 %1099, i8* %999, i8* %1100
  %1102 = load i8, i8* %1101, align 1
  %1103 = icmp eq i8 %1102, 0
  br i1 %1103, label %1105, label %984

1104:                                             ; preds = %1058
  store i32 1, i32* %4, align 4
  br label %1182

1105:                                             ; preds = %1096, %1008
  %1106 = phi %struct.AttributeListEntry* [ %1097, %1096 ], [ %988, %1008 ]
  %1107 = phi i8* [ null, %1096 ], [ %987, %1008 ]
  %1108 = icmp eq %struct.AttributeListEntry* %1106, null
  br i1 %1108, label %1182, label %1109

1109:                                             ; preds = %1105
  %1110 = load i32, i32* %891, align 8
  %1111 = load i32, i32* %888, align 8
  %1112 = icmp eq i32 %1111, %1110
  br i1 %1112, label %1113, label %1140

1113:                                             ; preds = %1109
  %1114 = icmp eq i32 %1110, 8
  %1115 = select i1 %1114, i32 2, i32 1
  %1116 = shl nsw i32 %1110, %1115
  %1117 = icmp sgt i32 %1116, 0
  br i1 %1117, label %1118, label %1153

1118:                                             ; preds = %1113
  %1119 = sext i32 %1116 to i64
  %1120 = shl nsw i64 %1119, 3
  %1121 = call noalias i8* @uprv_malloc_69(i64 %1120) #10
  %1122 = icmp eq i8* %1121, null
  br i1 %1122, label %1153, label %1123

1123:                                             ; preds = %1118
  %1124 = icmp sgt i32 %1110, 0
  br i1 %1124, label %1125, label %1134

1125:                                             ; preds = %1123
  %1126 = load i32, i32* %891, align 8
  %1127 = icmp slt i32 %1126, %1110
  %1128 = select i1 %1127, i32 %1126, i32 %1110
  %1129 = icmp sgt i32 %1128, %1116
  %1130 = select i1 %1129, i32 %1116, i32 %1128
  %1131 = load i8*, i8** %913, align 8
  %1132 = sext i32 %1130 to i64
  %1133 = shl nsw i64 %1132, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1121, i8* align 8 %1131, i64 %1133, i1 false) #11
  br label %1134

1134:                                             ; preds = %1125, %1123
  %1135 = load i8, i8* %892, align 4
  %1136 = icmp eq i8 %1135, 0
  br i1 %1136, label %1139, label %1137

1137:                                             ; preds = %1134
  %1138 = load i8*, i8** %913, align 8
  call void @uprv_free_69(i8* %1138) #11
  br label %1139

1139:                                             ; preds = %1137, %1134
  store i8* %1121, i8** %913, align 8
  store i32 %1116, i32* %891, align 8
  store i8 1, i8* %892, align 4
  br label %1140

1140:                                             ; preds = %1139, %1109
  %1141 = call i8* @_ZN6icu_697UMemorynwEm(i64 24) #11
  %1142 = icmp eq i8* %1141, null
  br i1 %1142, label %1145, label %1143

1143:                                             ; preds = %1140
  %1144 = bitcast i8* %1141 to %struct.ExtensionListEntry*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1141, i8 0, i64 24, i1 false) #11
  br label %1145

1145:                                             ; preds = %1143, %1140
  %1146 = phi %struct.ExtensionListEntry* [ %1144, %1143 ], [ null, %1140 ]
  %1147 = load i32, i32* %888, align 8
  %1148 = add nsw i32 %1147, 1
  store i32 %1148, i32* %888, align 8
  %1149 = sext i32 %1147 to i64
  %1150 = load %struct.ExtensionListEntry**, %struct.ExtensionListEntry*** %914, align 8
  %1151 = getelementptr inbounds %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1150, i64 %1149
  store %struct.ExtensionListEntry* %1146, %struct.ExtensionListEntry** %1151, align 8
  %1152 = icmp eq %struct.ExtensionListEntry* %1146, null
  br i1 %1152, label %1153, label %1154

1153:                                             ; preds = %1145, %1118, %1113
  store i32 7, i32* %4, align 4
  br label %1182

1154:                                             ; preds = %1145
  %1155 = call %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"* nonnull %14) #11
  %1156 = icmp eq %"class.icu_69::CharString"* %1155, null
  br i1 %1156, label %1157, label %1158

1157:                                             ; preds = %1154
  store i32 7, i32* %4, align 4
  br label %1182

1158:                                             ; preds = %1154, %1165
  %1159 = phi %struct.AttributeListEntry* [ %1161, %1165 ], [ %1106, %1154 ]
  %1160 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %1159, i64 0, i32 1
  %1161 = load %struct.AttributeListEntry*, %struct.AttributeListEntry** %1160, align 8
  %1162 = icmp eq %struct.AttributeListEntry* %1159, %1106
  br i1 %1162, label %1165, label %1163

1163:                                             ; preds = %1158
  %1164 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* nonnull %1155, i8 signext 45, i32* dereferenceable(4) %4) #11
  br label %1165

1165:                                             ; preds = %1163, %1158
  %1166 = getelementptr inbounds %struct.AttributeListEntry, %struct.AttributeListEntry* %1159, i64 0, i32 0
  %1167 = load i8*, i8** %1166, align 8
  call void @_ZN6icu_6911StringPieceC1EPKc(%"class.icu_69::StringPiece"* nonnull %916, i8* %1167) #11
  %1168 = load i8*, i8** %927, align 8
  %1169 = load i32, i32* %928, align 8
  %1170 = call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* nonnull %1155, i8* %1168, i32 %1169, i32* dereferenceable(4) %4) #11
  %1171 = icmp eq %struct.AttributeListEntry* %1161, null
  br i1 %1171, label %1172, label %1158

1172:                                             ; preds = %1165
  %1173 = load i32, i32* %4, align 4
  %1174 = icmp slt i32 %1173, 1
  br i1 %1174, label %1175, label %1182

1175:                                             ; preds = %1172
  %1176 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1146, i64 0, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL20LOCALE_ATTRIBUTE_KEY, i64 0, i64 0), i8** %1176, align 8
  %1177 = bitcast %"class.icu_69::CharString"* %1155 to i64*
  %1178 = load i64, i64* %1177, align 8
  %1179 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1146, i64 0, i32 1
  %1180 = bitcast i8** %1179 to i64*
  store i64 %1178, i64* %1180, align 8
  %1181 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1146, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %1181, align 8
  br label %1182

1182:                                             ; preds = %1175, %1172, %1157, %1153, %1105, %1104, %1057, %980
  %1183 = phi %struct.ExtensionListEntry* [ null, %1153 ], [ null, %1057 ], [ null, %1104 ], [ null, %1105 ], [ %1146, %1175 ], [ null, %1157 ], [ null, %1172 ], [ null, %980 ]
  %1184 = phi i8* [ %1107, %1153 ], [ null, %1057 ], [ null, %1104 ], [ %1107, %1105 ], [ %1107, %1175 ], [ %1107, %1157 ], [ %1107, %1172 ], [ null, %980 ]
  %1185 = phi i32 [ 1, %1153 ], [ 1, %1057 ], [ 1, %1104 ], [ 0, %1105 ], [ 0, %1175 ], [ 1, %1157 ], [ 1, %1172 ], [ 0, %980 ]
  %1186 = load i32, i32* %919, align 8
  %1187 = icmp sgt i32 %1186, 0
  br i1 %1187, label %1193, label %1188

1188:                                             ; preds = %1203, %1182
  %1189 = load i8, i8* %923, align 4
  %1190 = icmp eq i8 %1189, 0
  br i1 %1190, label %1208, label %1191

1191:                                             ; preds = %1188
  %1192 = load i8*, i8** %925, align 8
  call void @uprv_free_69(i8* %1192) #11
  br label %1208

1193:                                             ; preds = %1182, %1203
  %1194 = phi i32 [ %1204, %1203 ], [ %1186, %1182 ]
  %1195 = phi i64 [ %1205, %1203 ], [ 0, %1182 ]
  %1196 = load %struct.AttributeListEntry**, %struct.AttributeListEntry*** %926, align 8
  %1197 = getelementptr inbounds %struct.AttributeListEntry*, %struct.AttributeListEntry** %1196, i64 %1195
  %1198 = load %struct.AttributeListEntry*, %struct.AttributeListEntry** %1197, align 8
  %1199 = icmp eq %struct.AttributeListEntry* %1198, null
  br i1 %1199, label %1203, label %1200

1200:                                             ; preds = %1193
  %1201 = bitcast %struct.AttributeListEntry* %1198 to i8*
  call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %1201) #11
  %1202 = load i32, i32* %919, align 8
  br label %1203

1203:                                             ; preds = %1200, %1193
  %1204 = phi i32 [ %1194, %1193 ], [ %1202, %1200 ]
  %1205 = add nuw nsw i64 %1195, 1
  %1206 = sext i32 %1204 to i64
  %1207 = icmp slt i64 %1205, %1206
  br i1 %1207, label %1193, label %1188

1208:                                             ; preds = %1191, %1188
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %918) #11
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %917) #11
  %1209 = icmp eq i32 %1185, 0
  br i1 %1209, label %1210, label %1470

1210:                                             ; preds = %1208
  %1211 = icmp eq i8* %1184, null
  br i1 %1211, label %1430, label %1212

1212:                                             ; preds = %1210
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %929) #11
  store i32 0, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %930) #11
  store i32 0, i32* %10, align 4
  %1213 = icmp eq i8 %981, 0
  br label %1215

1214:                                             ; preds = %1421
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %930) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %929) #11
  br label %1430

1215:                                             ; preds = %1421, %1212
  %1216 = phi i8 [ 0, %1212 ], [ %1422, %1421 ]
  %1217 = phi i8* [ null, %1212 ], [ %1427, %1421 ]
  %1218 = phi i8* [ null, %1212 ], [ %1426, %1421 ]
  %1219 = phi i8* [ %1184, %1212 ], [ %1424, %1421 ]
  %1220 = phi %struct.ExtensionListEntry* [ %1183, %1212 ], [ %1425, %1421 ]
  %1221 = load i8, i8* %1219, align 1
  %1222 = icmp eq i8 %1221, 0
  br i1 %1222, label %1269, label %1223

1223:                                             ; preds = %1215, %1226
  %1224 = phi i8 [ %1229, %1226 ], [ %1221, %1215 ]
  %1225 = phi i64 [ %1227, %1226 ], [ 0, %1215 ]
  switch i8 %1224, label %1226 [
    i8 0, label %1230
    i8 45, label %1230
  ]

1226:                                             ; preds = %1223
  %1227 = add nuw i64 %1225, 1
  %1228 = getelementptr inbounds i8, i8* %1219, i64 %1227
  %1229 = load i8, i8* %1228, align 1
  br label %1223

1230:                                             ; preds = %1223, %1223
  %1231 = trunc i64 %1225 to i32
  %1232 = and i64 %1225, 4294967295
  %1233 = getelementptr inbounds i8, i8* %1219, i64 %1232
  %1234 = icmp eq i32 %1231, 2
  br i1 %1234, label %1235, label %1250

1235:                                             ; preds = %1230
  %1236 = call signext i8 @uprv_isASCIILetter_69(i8 signext %1221) #11
  %1237 = icmp eq i8 %1236, 0
  br i1 %1237, label %1238, label %1242

1238:                                             ; preds = %1235
  %1239 = load i8, i8* %1219, align 1
  %1240 = add i8 %1239, -48
  %1241 = icmp ult i8 %1240, 10
  br i1 %1241, label %1242, label %1250

1242:                                             ; preds = %1238, %1235
  %1243 = getelementptr inbounds i8, i8* %1219, i64 1
  %1244 = load i8, i8* %1243, align 1
  %1245 = call signext i8 @uprv_isASCIILetter_69(i8 signext %1244) #11
  %1246 = icmp eq i8 %1245, 0
  br i1 %1246, label %1250, label %1247

1247:                                             ; preds = %1242
  %1248 = icmp eq i8* %1218, null
  br i1 %1248, label %1249, label %1264

1249:                                             ; preds = %1247
  store i32 2, i32* %9, align 4
  br label %1257

1250:                                             ; preds = %1242, %1238, %1230
  %1251 = icmp eq i8* %1217, null
  br i1 %1251, label %1256, label %1252

1252:                                             ; preds = %1250
  %1253 = add nuw nsw i32 %1231, 1
  %1254 = load i32, i32* %10, align 4
  %1255 = add nsw i32 %1253, %1254
  store i32 %1255, i32* %10, align 4
  br label %1257

1256:                                             ; preds = %1250
  store i32 %1231, i32* %10, align 4
  br label %1257

1257:                                             ; preds = %1256, %1252, %1249
  %1258 = phi i8* [ %1218, %1256 ], [ %1218, %1252 ], [ %1219, %1249 ]
  %1259 = phi i8* [ %1219, %1256 ], [ %1217, %1252 ], [ %1217, %1249 ]
  %1260 = load i8, i8* %1233, align 1
  %1261 = icmp eq i8 %1260, 0
  %1262 = getelementptr inbounds i8, i8* %1233, i64 1
  %1263 = select i1 %1261, i8* %1233, i8* %1262
  br label %1421

1264:                                             ; preds = %1247
  %1265 = load i8, i8* %1233, align 1
  %1266 = icmp eq i8 %1265, 0
  %1267 = getelementptr inbounds i8, i8* %1233, i64 1
  %1268 = select i1 %1266, i8* %1233, i8* %1267
  br label %1269

1269:                                             ; preds = %1264, %1215
  %1270 = phi i32 [ 2, %1264 ], [ 0, %1215 ]
  %1271 = phi i8* [ %1219, %1264 ], [ null, %1215 ]
  %1272 = phi i8 [ 0, %1264 ], [ 1, %1215 ]
  %1273 = phi i8* [ %1268, %1264 ], [ %1219, %1215 ]
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %931) #11
  store i8 -86, i8* %931, align 1
  store i8 -86, i8* %932, align 1
  store i8 -86, i8* %933, align 1
  %1274 = load i32, i32* %9, align 4
  %1275 = icmp sgt i32 %1274, 2
  br i1 %1275, label %1276, label %1277

1276:                                             ; preds = %1269
  store i32 1, i32* %4, align 4
  br label %1429

1277:                                             ; preds = %1269
  %1278 = sext i32 %1274 to i64
  %1279 = call i8* @strncpy(i8* nonnull %931, i8* %1218, i64 %1278) #11
  %1280 = load i32, i32* %9, align 4
  %1281 = sext i32 %1280 to i64
  %1282 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 %1281
  store i8 0, i8* %1282, align 1
  %1283 = call i8* @uloc_toLegacyKey_69(i8* nonnull %931) #11
  %1284 = icmp eq i8* %1283, null
  br i1 %1284, label %1285, label %1286

1285:                                             ; preds = %1277
  store i32 1, i32* %4, align 4
  br label %1429

1286:                                             ; preds = %1277
  %1287 = icmp eq i8* %1283, %931
  br i1 %1287, label %1288, label %1299

1288:                                             ; preds = %1286
  %1289 = call i8* @T_CString_toLowerCase_69(i8* nonnull %931) #11
  %1290 = call %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRA3_cRiR10UErrorCodeEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"* nonnull %14, [3 x i8]* nonnull dereferenceable(3) %11, i32* nonnull dereferenceable(4) %9, i32* dereferenceable(4) %4) #11
  %1291 = icmp eq %"class.icu_69::CharString"* %1290, null
  br i1 %1291, label %1292, label %1293

1292:                                             ; preds = %1288
  store i32 7, i32* %4, align 4
  br label %1429

1293:                                             ; preds = %1288
  %1294 = load i32, i32* %4, align 4
  %1295 = icmp slt i32 %1294, 1
  br i1 %1295, label %1296, label %1429

1296:                                             ; preds = %1293
  %1297 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %1290, i64 0, i32 0, i32 0
  %1298 = load i8*, i8** %1297, align 8
  br label %1299

1299:                                             ; preds = %1296, %1286
  %1300 = phi i8* [ %1298, %1296 ], [ %1283, %1286 ]
  %1301 = icmp eq i8* %1217, null
  br i1 %1301, label %1330, label %1302

1302:                                             ; preds = %1299
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %934) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %934, i8 -86, i64 128, i1 false) #11
  %1303 = load i32, i32* %10, align 4
  %1304 = icmp sgt i32 %1303, 127
  br i1 %1304, label %1325, label %1305

1305:                                             ; preds = %1302
  %1306 = sext i32 %1303 to i64
  %1307 = call i8* @strncpy(i8* nonnull %934, i8* nonnull %1217, i64 %1306) #11
  %1308 = load i32, i32* %10, align 4
  %1309 = sext i32 %1308 to i64
  %1310 = getelementptr inbounds [128 x i8], [128 x i8]* %12, i64 0, i64 %1309
  store i8 0, i8* %1310, align 1
  %1311 = call i8* @uloc_toLegacyType_69(i8* %1300, i8* nonnull %934) #11
  %1312 = icmp eq i8* %1311, null
  br i1 %1312, label %1325, label %1313

1313:                                             ; preds = %1305
  %1314 = icmp eq i8* %1311, %934
  br i1 %1314, label %1315, label %1328

1315:                                             ; preds = %1313
  %1316 = call i8* @T_CString_toLowerCase_69(i8* nonnull %934) #11
  %1317 = call %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRA128_cRiR10UErrorCodeEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"* nonnull %14, [128 x i8]* nonnull dereferenceable(128) %12, i32* nonnull dereferenceable(4) %10, i32* dereferenceable(4) %4) #11
  %1318 = icmp eq %"class.icu_69::CharString"* %1317, null
  br i1 %1318, label %1325, label %1319

1319:                                             ; preds = %1315
  %1320 = load i32, i32* %4, align 4
  %1321 = icmp slt i32 %1320, 1
  br i1 %1321, label %1322, label %1327

1322:                                             ; preds = %1319
  %1323 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %1317, i64 0, i32 0, i32 0
  %1324 = load i8*, i8** %1323, align 8
  br label %1328

1325:                                             ; preds = %1315, %1305, %1302
  %1326 = phi i32 [ 1, %1302 ], [ 1, %1305 ], [ 7, %1315 ]
  store i32 %1326, i32* %4, align 4
  br label %1327

1327:                                             ; preds = %1319, %1325
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %934) #11
  br label %1429

1328:                                             ; preds = %1322, %1313
  %1329 = phi i8* [ %1324, %1322 ], [ %1311, %1313 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %934) #11
  br label %1330

1330:                                             ; preds = %1328, %1299
  %1331 = phi i8* [ %1329, %1328 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), %1299 ]
  br i1 %1213, label %1332, label %1338

1332:                                             ; preds = %1330
  %1333 = call i32 @strcmp(i8* %1300, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZL9POSIX_KEY, i64 0, i64 0)) #12
  %1334 = icmp eq i32 %1333, 0
  br i1 %1334, label %1335, label %1338

1335:                                             ; preds = %1332
  %1336 = call i32 @strcmp(i8* %1331, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZL11POSIX_VALUE, i64 0, i64 0)) #12
  %1337 = icmp eq i32 %1336, 0
  br i1 %1337, label %1416, label %1338

1338:                                             ; preds = %1335, %1332, %1330
  %1339 = load i32, i32* %891, align 8
  %1340 = load i32, i32* %888, align 8
  %1341 = icmp eq i32 %1340, %1339
  br i1 %1341, label %1342, label %1369

1342:                                             ; preds = %1338
  %1343 = icmp eq i32 %1339, 8
  %1344 = select i1 %1343, i32 2, i32 1
  %1345 = shl nsw i32 %1339, %1344
  %1346 = icmp sgt i32 %1345, 0
  br i1 %1346, label %1347, label %1382

1347:                                             ; preds = %1342
  %1348 = sext i32 %1345 to i64
  %1349 = shl nsw i64 %1348, 3
  %1350 = call noalias i8* @uprv_malloc_69(i64 %1349) #10
  %1351 = icmp eq i8* %1350, null
  br i1 %1351, label %1382, label %1352

1352:                                             ; preds = %1347
  %1353 = icmp sgt i32 %1339, 0
  br i1 %1353, label %1354, label %1363

1354:                                             ; preds = %1352
  %1355 = load i32, i32* %891, align 8
  %1356 = icmp slt i32 %1355, %1339
  %1357 = select i1 %1356, i32 %1355, i32 %1339
  %1358 = icmp sgt i32 %1357, %1345
  %1359 = select i1 %1358, i32 %1345, i32 %1357
  %1360 = load i8*, i8** %913, align 8
  %1361 = sext i32 %1359 to i64
  %1362 = shl nsw i64 %1361, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1350, i8* align 8 %1360, i64 %1362, i1 false) #11
  br label %1363

1363:                                             ; preds = %1354, %1352
  %1364 = load i8, i8* %892, align 4
  %1365 = icmp eq i8 %1364, 0
  br i1 %1365, label %1368, label %1366

1366:                                             ; preds = %1363
  %1367 = load i8*, i8** %913, align 8
  call void @uprv_free_69(i8* %1367) #11
  br label %1368

1368:                                             ; preds = %1366, %1363
  store i8* %1350, i8** %913, align 8
  store i32 %1345, i32* %891, align 8
  store i8 1, i8* %892, align 4
  br label %1369

1369:                                             ; preds = %1368, %1338
  %1370 = call i8* @_ZN6icu_697UMemorynwEm(i64 24) #11
  %1371 = icmp eq i8* %1370, null
  br i1 %1371, label %1374, label %1372

1372:                                             ; preds = %1369
  %1373 = bitcast i8* %1370 to %struct.ExtensionListEntry*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1370, i8 0, i64 24, i1 false) #11
  br label %1374

1374:                                             ; preds = %1372, %1369
  %1375 = phi %struct.ExtensionListEntry* [ %1373, %1372 ], [ null, %1369 ]
  %1376 = load i32, i32* %888, align 8
  %1377 = add nsw i32 %1376, 1
  store i32 %1377, i32* %888, align 8
  %1378 = sext i32 %1376 to i64
  %1379 = load %struct.ExtensionListEntry**, %struct.ExtensionListEntry*** %914, align 8
  %1380 = getelementptr inbounds %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1379, i64 %1378
  store %struct.ExtensionListEntry* %1375, %struct.ExtensionListEntry** %1380, align 8
  %1381 = icmp eq %struct.ExtensionListEntry* %1375, null
  br i1 %1381, label %1382, label %1383

1382:                                             ; preds = %1374, %1347, %1342
  store i32 7, i32* %4, align 4
  br label %1429

1383:                                             ; preds = %1374
  %1384 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1375, i64 0, i32 0
  store i8* %1300, i8** %1384, align 8
  %1385 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1375, i64 0, i32 1
  store i8* %1331, i8** %1385, align 8
  %1386 = icmp eq %struct.ExtensionListEntry* %1220, null
  br i1 %1386, label %1392, label %1387

1387:                                             ; preds = %1383
  %1388 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1220, i64 0, i32 0
  %1389 = load i8*, i8** %1388, align 8
  %1390 = call i32 @strcmp(i8* %1300, i8* %1389) #12
  %1391 = icmp slt i32 %1390, 0
  br i1 %1391, label %1404, label %1408

1392:                                             ; preds = %1383
  %1393 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1375, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %1393, align 8
  br label %1416

1394:                                             ; preds = %1412
  %1395 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1410, i64 0, i32 2
  store %struct.ExtensionListEntry* %1375, %struct.ExtensionListEntry** %1395, align 8
  %1396 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1375, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %1396, align 8
  br label %1416

1397:                                             ; preds = %1412
  %1398 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1414, i64 0, i32 0
  %1399 = load i8*, i8** %1398, align 8
  %1400 = call i32 @strcmp(i8* %1300, i8* %1399) #12
  %1401 = icmp slt i32 %1400, 0
  br i1 %1401, label %1402, label %1408

1402:                                             ; preds = %1397
  %1403 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1410, i64 0, i32 2
  store %struct.ExtensionListEntry* %1375, %struct.ExtensionListEntry** %1403, align 8
  br label %1404

1404:                                             ; preds = %1402, %1387
  %1405 = phi %struct.ExtensionListEntry* [ %1414, %1402 ], [ %1220, %1387 ]
  %1406 = phi %struct.ExtensionListEntry* [ %1220, %1402 ], [ %1375, %1387 ]
  %1407 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1375, i64 0, i32 2
  store %struct.ExtensionListEntry* %1405, %struct.ExtensionListEntry** %1407, align 8
  br label %1416

1408:                                             ; preds = %1387, %1397
  %1409 = phi i32 [ %1400, %1397 ], [ %1390, %1387 ]
  %1410 = phi %struct.ExtensionListEntry* [ %1414, %1397 ], [ %1220, %1387 ]
  %1411 = icmp eq i32 %1409, 0
  br i1 %1411, label %1416, label %1412

1412:                                             ; preds = %1408
  %1413 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1410, i64 0, i32 2
  %1414 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1413, align 8
  %1415 = icmp eq %struct.ExtensionListEntry* %1414, null
  br i1 %1415, label %1394, label %1397

1416:                                             ; preds = %1408, %1404, %1394, %1392, %1335
  %1417 = phi i8 [ %1216, %1392 ], [ %1216, %1404 ], [ %1216, %1394 ], [ 1, %1335 ], [ %1216, %1408 ]
  %1418 = phi %struct.ExtensionListEntry* [ %1375, %1392 ], [ %1406, %1404 ], [ %1220, %1394 ], [ %1220, %1335 ], [ %1220, %1408 ]
  %1419 = icmp eq i8* %1271, null
  %1420 = select i1 %1419, i32 0, i32 %1270
  store i32 %1420, i32* %9, align 4
  store i32 0, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %931) #11
  br label %1421

1421:                                             ; preds = %1416, %1257
  %1422 = phi i8 [ %1417, %1416 ], [ %1216, %1257 ]
  %1423 = phi i8 [ %1272, %1416 ], [ 0, %1257 ]
  %1424 = phi i8* [ %1273, %1416 ], [ %1263, %1257 ]
  %1425 = phi %struct.ExtensionListEntry* [ %1418, %1416 ], [ %1220, %1257 ]
  %1426 = phi i8* [ %1271, %1416 ], [ %1258, %1257 ]
  %1427 = phi i8* [ null, %1416 ], [ %1259, %1257 ]
  %1428 = icmp eq i8 %1423, 0
  br i1 %1428, label %1215, label %1214

1429:                                             ; preds = %1293, %1382, %1327, %1292, %1285, %1276
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %931) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %930) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %929) #11
  br label %1470

1430:                                             ; preds = %1214, %1210
  %1431 = phi i8 [ 0, %1210 ], [ %1422, %1214 ]
  %1432 = phi %struct.ExtensionListEntry* [ %1183, %1210 ], [ %1425, %1214 ]
  %1433 = icmp eq %struct.ExtensionListEntry* %1432, null
  br i1 %1433, label %1470, label %1434

1434:                                             ; preds = %1430, %1467
  %1435 = phi %struct.ExtensionListEntry* [ %1468, %1467 ], [ %939, %1430 ]
  %1436 = phi %struct.ExtensionListEntry* [ %1438, %1467 ], [ %1432, %1430 ]
  %1437 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1436, i64 0, i32 2
  %1438 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1437, align 8
  %1439 = icmp eq %struct.ExtensionListEntry* %1435, null
  br i1 %1439, label %1464, label %1440

1440:                                             ; preds = %1434
  %1441 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1436, i64 0, i32 0
  %1442 = load i8*, i8** %1441, align 8
  %1443 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1435, i64 0, i32 0
  %1444 = load i8*, i8** %1443, align 8
  %1445 = call i32 @strcmp(i8* %1442, i8* %1444) #12
  %1446 = icmp slt i32 %1445, 0
  br i1 %1446, label %1464, label %1456

1447:                                             ; preds = %1460
  %1448 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1458, i64 0, i32 2
  store %struct.ExtensionListEntry* %1436, %struct.ExtensionListEntry** %1448, align 8
  br label %1464

1449:                                             ; preds = %1460
  %1450 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1462, i64 0, i32 0
  %1451 = load i8*, i8** %1450, align 8
  %1452 = call i32 @strcmp(i8* %1442, i8* %1451) #12
  %1453 = icmp slt i32 %1452, 0
  br i1 %1453, label %1454, label %1456

1454:                                             ; preds = %1449
  %1455 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1458, i64 0, i32 2
  store %struct.ExtensionListEntry* %1436, %struct.ExtensionListEntry** %1455, align 8
  br label %1464

1456:                                             ; preds = %1440, %1449
  %1457 = phi i32 [ %1452, %1449 ], [ %1445, %1440 ]
  %1458 = phi %struct.ExtensionListEntry* [ %1462, %1449 ], [ %1435, %1440 ]
  %1459 = icmp eq i32 %1457, 0
  br i1 %1459, label %1467, label %1460

1460:                                             ; preds = %1456
  %1461 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1458, i64 0, i32 2
  %1462 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1461, align 8
  %1463 = icmp eq %struct.ExtensionListEntry* %1462, null
  br i1 %1463, label %1447, label %1449

1464:                                             ; preds = %1440, %1454, %1434, %1447
  %1465 = phi %struct.ExtensionListEntry* [ null, %1447 ], [ null, %1434 ], [ %1462, %1454 ], [ %1435, %1440 ]
  %1466 = phi %struct.ExtensionListEntry* [ %1435, %1447 ], [ %1436, %1434 ], [ %1435, %1454 ], [ %1436, %1440 ]
  store %struct.ExtensionListEntry* %1465, %struct.ExtensionListEntry** %1437, align 8
  br label %1467

1467:                                             ; preds = %1456, %1464
  %1468 = phi %struct.ExtensionListEntry* [ %1466, %1464 ], [ %1435, %1456 ]
  %1469 = icmp eq %struct.ExtensionListEntry* %1438, null
  br i1 %1469, label %1470, label %1434

1470:                                             ; preds = %1467, %1430, %1429, %1208
  %1471 = phi %struct.ExtensionListEntry* [ %939, %1430 ], [ %939, %1429 ], [ %939, %1208 ], [ %1468, %1467 ]
  %1472 = phi i8 [ %1431, %1430 ], [ %1216, %1429 ], [ 0, %1208 ], [ %1431, %1467 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %915) #11
  %1473 = load i32, i32* %4, align 4
  %1474 = icmp slt i32 %1473, 1
  br i1 %1474, label %1551, label %1653

1475:                                             ; preds = %967
  %1476 = load i32, i32* %891, align 8
  %1477 = load i32, i32* %888, align 8
  %1478 = icmp eq i32 %1477, %1476
  br i1 %1478, label %1479, label %1506

1479:                                             ; preds = %1475
  %1480 = icmp eq i32 %1476, 8
  %1481 = select i1 %1480, i32 2, i32 1
  %1482 = shl nsw i32 %1476, %1481
  %1483 = icmp sgt i32 %1482, 0
  br i1 %1483, label %1484, label %1519

1484:                                             ; preds = %1479
  %1485 = sext i32 %1482 to i64
  %1486 = shl nsw i64 %1485, 3
  %1487 = call noalias i8* @uprv_malloc_69(i64 %1486) #10
  %1488 = icmp eq i8* %1487, null
  br i1 %1488, label %1519, label %1489

1489:                                             ; preds = %1484
  %1490 = icmp sgt i32 %1476, 0
  br i1 %1490, label %1491, label %1500

1491:                                             ; preds = %1489
  %1492 = load i32, i32* %891, align 8
  %1493 = icmp slt i32 %1492, %1476
  %1494 = select i1 %1493, i32 %1492, i32 %1476
  %1495 = icmp sgt i32 %1494, %1482
  %1496 = select i1 %1495, i32 %1482, i32 %1494
  %1497 = load i8*, i8** %913, align 8
  %1498 = sext i32 %1496 to i64
  %1499 = shl nsw i64 %1498, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1487, i8* align 8 %1497, i64 %1499, i1 false) #11
  br label %1500

1500:                                             ; preds = %1491, %1489
  %1501 = load i8, i8* %892, align 4
  %1502 = icmp eq i8 %1501, 0
  br i1 %1502, label %1505, label %1503

1503:                                             ; preds = %1500
  %1504 = load i8*, i8** %913, align 8
  call void @uprv_free_69(i8* %1504) #11
  br label %1505

1505:                                             ; preds = %1503, %1500
  store i8* %1487, i8** %913, align 8
  store i32 %1482, i32* %891, align 8
  store i8 1, i8* %892, align 4
  br label %1506

1506:                                             ; preds = %1505, %1475
  %1507 = call i8* @_ZN6icu_697UMemorynwEm(i64 24) #11
  %1508 = icmp eq i8* %1507, null
  br i1 %1508, label %1511, label %1509

1509:                                             ; preds = %1506
  %1510 = bitcast i8* %1507 to %struct.ExtensionListEntry*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1507, i8 0, i64 24, i1 false) #11
  br label %1511

1511:                                             ; preds = %1509, %1506
  %1512 = phi %struct.ExtensionListEntry* [ %1510, %1509 ], [ null, %1506 ]
  %1513 = load i32, i32* %888, align 8
  %1514 = add nsw i32 %1513, 1
  store i32 %1514, i32* %888, align 8
  %1515 = sext i32 %1513 to i64
  %1516 = load %struct.ExtensionListEntry**, %struct.ExtensionListEntry*** %914, align 8
  %1517 = getelementptr inbounds %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1516, i64 %1515
  store %struct.ExtensionListEntry* %1512, %struct.ExtensionListEntry** %1517, align 8
  %1518 = icmp eq %struct.ExtensionListEntry* %1512, null
  br i1 %1518, label %1519, label %1520

1519:                                             ; preds = %1511, %1484, %1479
  store i32 7, i32* %4, align 4
  br label %1653

1520:                                             ; preds = %1511
  %1521 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1512, i64 0, i32 0
  store i8* %968, i8** %1521, align 8
  %1522 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1512, i64 0, i32 1
  store i8* %969, i8** %1522, align 8
  %1523 = icmp eq %struct.ExtensionListEntry* %939, null
  br i1 %1523, label %1547, label %1524

1524:                                             ; preds = %1520
  %1525 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %939, i64 0, i32 0
  %1526 = load i8*, i8** %1525, align 8
  %1527 = call i32 @strcmp(i8* %968, i8* %1526) #12
  %1528 = icmp slt i32 %1527, 0
  br i1 %1528, label %1547, label %1538

1529:                                             ; preds = %1542
  %1530 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1540, i64 0, i32 2
  store %struct.ExtensionListEntry* %1512, %struct.ExtensionListEntry** %1530, align 8
  br label %1547

1531:                                             ; preds = %1542
  %1532 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1544, i64 0, i32 0
  %1533 = load i8*, i8** %1532, align 8
  %1534 = call i32 @strcmp(i8* %968, i8* %1533) #12
  %1535 = icmp slt i32 %1534, 0
  br i1 %1535, label %1536, label %1538

1536:                                             ; preds = %1531
  %1537 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1540, i64 0, i32 2
  store %struct.ExtensionListEntry* %1512, %struct.ExtensionListEntry** %1537, align 8
  br label %1547

1538:                                             ; preds = %1524, %1531
  %1539 = phi i32 [ %1534, %1531 ], [ %1527, %1524 ]
  %1540 = phi %struct.ExtensionListEntry* [ %1544, %1531 ], [ %939, %1524 ]
  %1541 = icmp eq i32 %1539, 0
  br i1 %1541, label %1546, label %1542

1542:                                             ; preds = %1538
  %1543 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1540, i64 0, i32 2
  %1544 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1543, align 8
  %1545 = icmp eq %struct.ExtensionListEntry* %1544, null
  br i1 %1545, label %1529, label %1531

1546:                                             ; preds = %1538
  store i32 1, i32* %4, align 4
  br label %1653

1547:                                             ; preds = %1524, %1536, %1520, %1529
  %1548 = phi %struct.ExtensionListEntry* [ null, %1529 ], [ null, %1520 ], [ %1544, %1536 ], [ %939, %1524 ]
  %1549 = phi %struct.ExtensionListEntry* [ %939, %1529 ], [ %1512, %1520 ], [ %939, %1536 ], [ %1512, %1524 ]
  %1550 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1512, i64 0, i32 2
  store %struct.ExtensionListEntry* %1548, %struct.ExtensionListEntry** %1550, align 8
  br label %1551

1551:                                             ; preds = %1547, %1470
  %1552 = phi %struct.ExtensionListEntry* [ %1471, %1470 ], [ %1549, %1547 ]
  %1553 = phi i8 [ %1472, %1470 ], [ %938, %1547 ]
  %1554 = add nuw nsw i32 %937, 1
  %1555 = icmp eq i32 %1554, %907
  br i1 %1555, label %1558, label %1556

1556:                                             ; preds = %1551
  %1557 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %864, align 8
  br label %935

1558:                                             ; preds = %1551
  %1559 = load i32, i32* %4, align 4
  %1560 = icmp sgt i32 %1559, 0
  br i1 %1560, label %1653, label %1561

1561:                                             ; preds = %1558, %901
  %1562 = phi i8 [ %1553, %1558 ], [ 0, %901 ]
  %1563 = phi %struct.ExtensionListEntry* [ %1552, %1558 ], [ null, %901 ]
  %1564 = load i8*, i8** %886, align 8
  %1565 = call i64 @strlen(i8* %1564) #12
  %1566 = trunc i64 %1565 to i32
  %1567 = icmp sgt i32 %1566, 0
  br i1 %1567, label %1568, label %1653

1568:                                             ; preds = %1561
  %1569 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %13, i64 0, i32 1
  %1570 = load i32, i32* %891, align 8
  %1571 = load i32, i32* %888, align 8
  %1572 = icmp eq i32 %1571, %1570
  br i1 %1572, label %1573, label %1604

1573:                                             ; preds = %1568
  %1574 = icmp eq i32 %1570, 8
  %1575 = select i1 %1574, i32 2, i32 1
  %1576 = shl nsw i32 %1570, %1575
  %1577 = icmp sgt i32 %1576, 0
  br i1 %1577, label %1578, label %1618

1578:                                             ; preds = %1573
  %1579 = sext i32 %1576 to i64
  %1580 = shl nsw i64 %1579, 3
  %1581 = call noalias i8* @uprv_malloc_69(i64 %1580) #10
  %1582 = icmp eq i8* %1581, null
  br i1 %1582, label %1618, label %1583

1583:                                             ; preds = %1578
  %1584 = icmp sgt i32 %1570, 0
  br i1 %1584, label %1587, label %1585

1585:                                             ; preds = %1583
  %1586 = bitcast %"class.icu_69::MaybeStackArray.3"* %1569 to i8**
  br label %1597

1587:                                             ; preds = %1583
  %1588 = load i32, i32* %891, align 8
  %1589 = icmp slt i32 %1588, %1570
  %1590 = select i1 %1589, i32 %1588, i32 %1570
  %1591 = icmp sgt i32 %1590, %1576
  %1592 = select i1 %1591, i32 %1576, i32 %1590
  %1593 = bitcast %"class.icu_69::MaybeStackArray.3"* %1569 to i8**
  %1594 = load i8*, i8** %1593, align 8
  %1595 = sext i32 %1592 to i64
  %1596 = shl nsw i64 %1595, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1581, i8* align 8 %1594, i64 %1596, i1 false) #11
  br label %1597

1597:                                             ; preds = %1587, %1585
  %1598 = phi i8** [ %1586, %1585 ], [ %1593, %1587 ]
  %1599 = load i8, i8* %892, align 4
  %1600 = icmp eq i8 %1599, 0
  br i1 %1600, label %1603, label %1601

1601:                                             ; preds = %1597
  %1602 = load i8*, i8** %1598, align 8
  call void @uprv_free_69(i8* %1602) #11
  br label %1603

1603:                                             ; preds = %1601, %1597
  store i8* %1581, i8** %1598, align 8
  store i32 %1576, i32* %891, align 8
  store i8 1, i8* %892, align 4
  br label %1604

1604:                                             ; preds = %1603, %1568
  %1605 = call i8* @_ZN6icu_697UMemorynwEm(i64 24) #11
  %1606 = icmp eq i8* %1605, null
  br i1 %1606, label %1609, label %1607

1607:                                             ; preds = %1604
  %1608 = bitcast i8* %1605 to %struct.ExtensionListEntry*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1605, i8 0, i64 24, i1 false) #11
  br label %1609

1609:                                             ; preds = %1607, %1604
  %1610 = phi %struct.ExtensionListEntry* [ %1608, %1607 ], [ null, %1604 ]
  %1611 = load i32, i32* %888, align 8
  %1612 = add nsw i32 %1611, 1
  store i32 %1612, i32* %888, align 8
  %1613 = sext i32 %1611 to i64
  %1614 = getelementptr inbounds %"class.icu_69::MaybeStackArray.3", %"class.icu_69::MaybeStackArray.3"* %1569, i64 0, i32 0
  %1615 = load %struct.ExtensionListEntry**, %struct.ExtensionListEntry*** %1614, align 8
  %1616 = getelementptr inbounds %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1615, i64 %1613
  store %struct.ExtensionListEntry* %1610, %struct.ExtensionListEntry** %1616, align 8
  %1617 = icmp eq %struct.ExtensionListEntry* %1610, null
  br i1 %1617, label %1618, label %1619

1618:                                             ; preds = %1609, %1578, %1573
  store i32 7, i32* %4, align 4
  br label %1653

1619:                                             ; preds = %1609
  %1620 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1610, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZL14PRIVATEUSE_KEY, i64 0, i64 0), i8** %1620, align 8
  %1621 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1610, i64 0, i32 1
  store i8* %1564, i8** %1621, align 8
  %1622 = icmp eq %struct.ExtensionListEntry* %1563, null
  br i1 %1622, label %1628, label %1623

1623:                                             ; preds = %1619
  %1624 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1563, i64 0, i32 0
  %1625 = load i8*, i8** %1624, align 8
  %1626 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZL14PRIVATEUSE_KEY, i64 0, i64 0), i8* %1625) #12
  %1627 = icmp slt i32 %1626, 0
  br i1 %1627, label %1640, label %1644

1628:                                             ; preds = %1619
  %1629 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1610, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %1629, align 8
  br label %1653

1630:                                             ; preds = %1648
  %1631 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1646, i64 0, i32 2
  store %struct.ExtensionListEntry* %1610, %struct.ExtensionListEntry** %1631, align 8
  %1632 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1610, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %1632, align 8
  br label %1653

1633:                                             ; preds = %1648
  %1634 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1650, i64 0, i32 0
  %1635 = load i8*, i8** %1634, align 8
  %1636 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @_ZL14PRIVATEUSE_KEY, i64 0, i64 0), i8* %1635) #12
  %1637 = icmp slt i32 %1636, 0
  br i1 %1637, label %1638, label %1644

1638:                                             ; preds = %1633
  %1639 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1646, i64 0, i32 2
  store %struct.ExtensionListEntry* %1610, %struct.ExtensionListEntry** %1639, align 8
  br label %1640

1640:                                             ; preds = %1638, %1623
  %1641 = phi %struct.ExtensionListEntry* [ %1650, %1638 ], [ %1563, %1623 ]
  %1642 = phi %struct.ExtensionListEntry* [ %1563, %1638 ], [ %1610, %1623 ]
  %1643 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1610, i64 0, i32 2
  store %struct.ExtensionListEntry* %1641, %struct.ExtensionListEntry** %1643, align 8
  br label %1653

1644:                                             ; preds = %1623, %1633
  %1645 = phi i32 [ %1636, %1633 ], [ %1626, %1623 ]
  %1646 = phi %struct.ExtensionListEntry* [ %1650, %1633 ], [ %1563, %1623 ]
  %1647 = icmp eq i32 %1645, 0
  br i1 %1647, label %1652, label %1648

1648:                                             ; preds = %1644
  %1649 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1646, i64 0, i32 2
  %1650 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1649, align 8
  %1651 = icmp eq %struct.ExtensionListEntry* %1650, null
  br i1 %1651, label %1630, label %1633

1652:                                             ; preds = %1644
  store i32 1, i32* %4, align 4
  br label %1653

1653:                                             ; preds = %1470, %1652, %1640, %1630, %1628, %1618, %1561, %1558, %1546, %1519
  %1654 = phi i8 [ %1553, %1558 ], [ %1562, %1618 ], [ %1562, %1652 ], [ %1562, %1561 ], [ %1562, %1630 ], [ %1562, %1640 ], [ %1562, %1628 ], [ %938, %1546 ], [ %938, %1519 ], [ %1472, %1470 ]
  %1655 = phi %struct.ExtensionListEntry* [ %1552, %1558 ], [ %1563, %1618 ], [ %1563, %1652 ], [ %1563, %1561 ], [ %1563, %1630 ], [ %1642, %1640 ], [ %1610, %1628 ], [ %939, %1546 ], [ %939, %1519 ], [ %1471, %1470 ]
  %1656 = load i32, i32* %4, align 4
  %1657 = icmp slt i32 %1656, 1
  %1658 = icmp ne i8 %1654, 0
  %1659 = and i1 %1658, %1657
  br i1 %1659, label %1660, label %1666

1660:                                             ; preds = %1653
  %1661 = bitcast %"class.icu_69::ByteSink"* %2 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %1662 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1661, align 8
  %1663 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1662, i64 2
  %1664 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1663, align 8
  call void %1664(%"class.icu_69::ByteSink"* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZL6_POSIX, i64 0, i64 0), i32 6) #11
  %1665 = load i32, i32* %4, align 4
  br label %1666

1666:                                             ; preds = %1660, %1653
  %1667 = phi i32 [ %1665, %1660 ], [ %1656, %1653 ]
  %1668 = icmp slt i32 %1667, 1
  %1669 = icmp ne %struct.ExtensionListEntry* %1655, null
  %1670 = and i1 %1669, %1668
  br i1 %1670, label %1671, label %1721

1671:                                             ; preds = %1666
  %1672 = bitcast %"class.icu_69::ByteSink"* %2 to void (%"class.icu_69::ByteSink"*, i8*, i32)***
  %1673 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1672, align 8
  %1674 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1673, i64 2
  %1675 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1674, align 8
  call void %1675(%"class.icu_69::ByteSink"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.106, i64 0, i64 0), i32 1) #11
  %1676 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1655, i64 0, i32 0
  %1677 = load i8*, i8** %1676, align 8
  %1678 = call i64 @strlen(i8* %1677) #12
  %1679 = trunc i64 %1678 to i32
  %1680 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1672, align 8
  %1681 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1680, i64 2
  %1682 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1681, align 8
  call void %1682(%"class.icu_69::ByteSink"* %2, i8* %1677, i32 %1679) #11
  %1683 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1672, align 8
  %1684 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1683, i64 2
  %1685 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1684, align 8
  call void %1685(%"class.icu_69::ByteSink"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0), i32 1) #11
  %1686 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1655, i64 0, i32 1
  %1687 = load i8*, i8** %1686, align 8
  %1688 = call i64 @strlen(i8* %1687) #12
  %1689 = trunc i64 %1688 to i32
  %1690 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1672, align 8
  %1691 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1690, i64 2
  %1692 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1691, align 8
  call void %1692(%"class.icu_69::ByteSink"* %2, i8* %1687, i32 %1689) #11
  %1693 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1655, i64 0, i32 2
  %1694 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1693, align 8
  %1695 = icmp eq %struct.ExtensionListEntry* %1694, null
  br i1 %1695, label %1721, label %1696

1696:                                             ; preds = %1671, %1696
  %1697 = phi %struct.ExtensionListEntry* [ %1719, %1696 ], [ %1694, %1671 ]
  %1698 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1672, align 8
  %1699 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1698, i64 2
  %1700 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1699, align 8
  call void %1700(%"class.icu_69::ByteSink"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.107, i64 0, i64 0), i32 1) #11
  %1701 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1697, i64 0, i32 0
  %1702 = load i8*, i8** %1701, align 8
  %1703 = call i64 @strlen(i8* %1702) #12
  %1704 = trunc i64 %1703 to i32
  %1705 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1672, align 8
  %1706 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1705, i64 2
  %1707 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1706, align 8
  call void %1707(%"class.icu_69::ByteSink"* %2, i8* %1702, i32 %1704) #11
  %1708 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1672, align 8
  %1709 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1708, i64 2
  %1710 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1709, align 8
  call void %1710(%"class.icu_69::ByteSink"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.108, i64 0, i64 0), i32 1) #11
  %1711 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1697, i64 0, i32 1
  %1712 = load i8*, i8** %1711, align 8
  %1713 = call i64 @strlen(i8* %1712) #12
  %1714 = trunc i64 %1713 to i32
  %1715 = load void (%"class.icu_69::ByteSink"*, i8*, i32)**, void (%"class.icu_69::ByteSink"*, i8*, i32)*** %1672, align 8
  %1716 = getelementptr inbounds void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1715, i64 2
  %1717 = load void (%"class.icu_69::ByteSink"*, i8*, i32)*, void (%"class.icu_69::ByteSink"*, i8*, i32)** %1716, align 8
  call void %1717(%"class.icu_69::ByteSink"* %2, i8* %1712, i32 %1714) #11
  %1718 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1697, i64 0, i32 2
  %1719 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1718, align 8
  %1720 = icmp eq %struct.ExtensionListEntry* %1719, null
  br i1 %1720, label %1721, label %1696, !llvm.loop !3

1721:                                             ; preds = %1671, %1696, %1666, %885
  %1722 = load i32, i32* %894, align 8
  %1723 = icmp sgt i32 %1722, 0
  %1724 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %14, i64 0, i32 1
  br i1 %1723, label %1725, label %1727

1725:                                             ; preds = %1721
  %1726 = getelementptr inbounds %"class.icu_69::MaybeStackArray.5", %"class.icu_69::MaybeStackArray.5"* %1724, i64 0, i32 0
  br label %1733

1727:                                             ; preds = %1750, %1721
  %1728 = load i8, i8* %898, align 4
  %1729 = icmp eq i8 %1728, 0
  br i1 %1729, label %1755, label %1730

1730:                                             ; preds = %1727
  %1731 = bitcast %"class.icu_69::MaybeStackArray.5"* %1724 to i8**
  %1732 = load i8*, i8** %1731, align 8
  call void @uprv_free_69(i8* %1732) #11
  br label %1755

1733:                                             ; preds = %1750, %1725
  %1734 = phi i32 [ %1722, %1725 ], [ %1751, %1750 ]
  %1735 = phi i64 [ 0, %1725 ], [ %1752, %1750 ]
  %1736 = load %"class.icu_69::CharString"**, %"class.icu_69::CharString"*** %1726, align 8
  %1737 = getelementptr inbounds %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %1736, i64 %1735
  %1738 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %1737, align 8
  %1739 = icmp eq %"class.icu_69::CharString"* %1738, null
  br i1 %1739, label %1750, label %1740

1740:                                             ; preds = %1733
  %1741 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %1738, i64 0, i32 0, i32 2
  %1742 = load i8, i8* %1741, align 4
  %1743 = icmp eq i8 %1742, 0
  br i1 %1743, label %1747, label %1744

1744:                                             ; preds = %1740
  %1745 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %1738, i64 0, i32 0, i32 0
  %1746 = load i8*, i8** %1745, align 8
  call void @uprv_free_69(i8* %1746) #11
  br label %1747

1747:                                             ; preds = %1744, %1740
  %1748 = bitcast %"class.icu_69::CharString"* %1738 to i8*
  call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %1748) #11
  %1749 = load i32, i32* %894, align 8
  br label %1750

1750:                                             ; preds = %1747, %1733
  %1751 = phi i32 [ %1734, %1733 ], [ %1749, %1747 ]
  %1752 = add nuw nsw i64 %1735, 1
  %1753 = sext i32 %1751 to i64
  %1754 = icmp slt i64 %1752, %1753
  br i1 %1754, label %1733, label %1727

1755:                                             ; preds = %1730, %1727
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %893) #11
  %1756 = load i32, i32* %888, align 8
  %1757 = icmp sgt i32 %1756, 0
  %1758 = getelementptr inbounds %"class.icu_69::MemoryPool.2", %"class.icu_69::MemoryPool.2"* %13, i64 0, i32 1
  br i1 %1757, label %1759, label %1761

1759:                                             ; preds = %1755
  %1760 = getelementptr inbounds %"class.icu_69::MaybeStackArray.3", %"class.icu_69::MaybeStackArray.3"* %1758, i64 0, i32 0
  br label %1767

1761:                                             ; preds = %1777, %1755
  %1762 = load i8, i8* %892, align 4
  %1763 = icmp eq i8 %1762, 0
  br i1 %1763, label %1782, label %1764

1764:                                             ; preds = %1761
  %1765 = bitcast %"class.icu_69::MaybeStackArray.3"* %1758 to i8**
  %1766 = load i8*, i8** %1765, align 8
  call void @uprv_free_69(i8* %1766) #11
  br label %1782

1767:                                             ; preds = %1777, %1759
  %1768 = phi i32 [ %1756, %1759 ], [ %1778, %1777 ]
  %1769 = phi i64 [ 0, %1759 ], [ %1779, %1777 ]
  %1770 = load %struct.ExtensionListEntry**, %struct.ExtensionListEntry*** %1760, align 8
  %1771 = getelementptr inbounds %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1770, i64 %1769
  %1772 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1771, align 8
  %1773 = icmp eq %struct.ExtensionListEntry* %1772, null
  br i1 %1773, label %1777, label %1774

1774:                                             ; preds = %1767
  %1775 = bitcast %struct.ExtensionListEntry* %1772 to i8*
  call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %1775) #11
  %1776 = load i32, i32* %888, align 8
  br label %1777

1777:                                             ; preds = %1774, %1767
  %1778 = phi i32 [ %1768, %1767 ], [ %1776, %1774 ]
  %1779 = add nuw nsw i64 %1769, 1
  %1780 = sext i32 %1778 to i64
  %1781 = icmp slt i64 %1779, %1780
  br i1 %1781, label %1767, label %1761

1782:                                             ; preds = %1761, %1764
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %887) #11
  br label %1783

1783:                                             ; preds = %1782, %872, %697
  %1784 = icmp eq %struct.ULanguageTag* %699, null
  br i1 %1784, label %1808, label %1785

1785:                                             ; preds = %1783
  %1786 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 0
  %1787 = load i8*, i8** %1786, align 8
  call void @uprv_free_69(i8* %1787) #11
  %1788 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 5
  %1789 = load %struct.VariantListEntry*, %struct.VariantListEntry** %1788, align 8
  %1790 = icmp eq %struct.VariantListEntry* %1789, null
  br i1 %1790, label %1797, label %1791

1791:                                             ; preds = %1785, %1791
  %1792 = phi %struct.VariantListEntry* [ %1794, %1791 ], [ %1789, %1785 ]
  %1793 = getelementptr inbounds %struct.VariantListEntry, %struct.VariantListEntry* %1792, i64 0, i32 1
  %1794 = load %struct.VariantListEntry*, %struct.VariantListEntry** %1793, align 8
  %1795 = bitcast %struct.VariantListEntry* %1792 to i8*
  call void @uprv_free_69(i8* nonnull %1795) #11
  %1796 = icmp eq %struct.VariantListEntry* %1794, null
  br i1 %1796, label %1797, label %1791

1797:                                             ; preds = %1791, %1785
  %1798 = getelementptr inbounds %struct.ULanguageTag, %struct.ULanguageTag* %699, i64 0, i32 6
  %1799 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1798, align 8
  %1800 = icmp eq %struct.ExtensionListEntry* %1799, null
  br i1 %1800, label %1807, label %1801

1801:                                             ; preds = %1797, %1801
  %1802 = phi %struct.ExtensionListEntry* [ %1804, %1801 ], [ %1799, %1797 ]
  %1803 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1802, i64 0, i32 2
  %1804 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %1803, align 8
  %1805 = bitcast %struct.ExtensionListEntry* %1802 to i8*
  call void @uprv_free_69(i8* nonnull %1805) #11
  %1806 = icmp eq %struct.ExtensionListEntry* %1804, null
  br i1 %1806, label %1807, label %1801

1807:                                             ; preds = %1801, %1797
  call void @uprv_free_69(i8* nonnull %698) #11
  br label %1808

1808:                                             ; preds = %20, %34, %44, %1783, %1807
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

declare signext i8 @uprv_toupper_69(i8 signext) local_unnamed_addr #4

declare void @uenum_close_69(%struct.UEnumeration*) local_unnamed_addr #4

declare i32 @uloc_getLanguage_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #8

declare i32 @uloc_getScript_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

declare i32 @uloc_getCountry_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

declare i32 @uloc_getVariant_69(i8*, i8*, i32, i32*) local_unnamed_addr #4

declare signext i8 @uprv_asciitolower_69(i8 signext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRA100_cRiR10UErrorCodeEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"*, [100 x i8]* dereferenceable(100), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %7
  br i1 %10, label %11, label %43

11:                                               ; preds = %4
  %12 = icmp eq i32 %7, 8
  %13 = select i1 %12, i32 2, i32 1
  %14 = shl nsw i32 %7, %13
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %66

16:                                               ; preds = %11
  %17 = sext i32 %14 to i64
  %18 = shl nsw i64 %17, 3
  %19 = tail call noalias i8* @uprv_malloc_69(i64 %18) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %66, label %21

21:                                               ; preds = %16
  %22 = icmp sgt i32 %7, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.icu_69::MaybeStackArray.5"* %5 to i8**
  br label %35

25:                                               ; preds = %21
  %26 = load i32, i32* %6, align 8
  %27 = icmp slt i32 %26, %7
  %28 = select i1 %27, i32 %26, i32 %7
  %29 = icmp sgt i32 %28, %14
  %30 = select i1 %29, i32 %14, i32 %28
  %31 = bitcast %"class.icu_69::MaybeStackArray.5"* %5 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = sext i32 %30 to i64
  %34 = shl nsw i64 %33, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %32, i64 %34, i1 false) #11
  br label %35

35:                                               ; preds = %23, %25
  %36 = phi i8** [ %24, %23 ], [ %31, %25 ]
  %37 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 2
  %38 = load i8, i8* %37, align 4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = load i8*, i8** %36, align 8
  tail call void @uprv_free_69(i8* %41) #11
  br label %42

42:                                               ; preds = %40, %35
  store i8* %19, i8** %36, align 8
  store i32 %14, i32* %6, align 8
  store i8 1, i8* %37, align 4
  br label %43

43:                                               ; preds = %42, %4
  %44 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #11
  %45 = icmp eq i8* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %43
  %47 = bitcast i8* %44 to %"class.icu_69::CharString"*
  %48 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %49 = load i32, i32* %2, align 4
  %50 = bitcast i8* %44 to i8**
  %51 = getelementptr inbounds i8, i8* %44, i64 13
  store i8* %51, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %44, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 40, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %44, i64 12
  store i8 0, i8* %54, align 4
  %55 = getelementptr inbounds i8, i8* %44, i64 56
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 8
  store i8 0, i8* %51, align 1
  %57 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* nonnull %47, i8* %48, i32 %49, i32* dereferenceable(4) %3) #11
  br label %58

58:                                               ; preds = %46, %43
  %59 = phi %"class.icu_69::CharString"* [ %47, %46 ], [ null, %43 ]
  %60 = load i32, i32* %8, align 8
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %8, align 8
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds %"class.icu_69::MaybeStackArray.5", %"class.icu_69::MaybeStackArray.5"* %5, i64 0, i32 0
  %64 = load %"class.icu_69::CharString"**, %"class.icu_69::CharString"*** %63, align 8
  %65 = getelementptr inbounds %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %64, i64 %62
  store %"class.icu_69::CharString"* %59, %"class.icu_69::CharString"** %65, align 8
  br label %66

66:                                               ; preds = %16, %11, %58
  %67 = phi %"class.icu_69::CharString"* [ %59, %58 ], [ null, %11 ], [ null, %16 ]
  ret %"class.icu_69::CharString"* %67
}

declare i8* @uloc_toUnicodeLocaleKey_69(i8*) local_unnamed_addr #4

declare i8* @uloc_toUnicodeLocaleType_69(i8*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRS1_R10UErrorCodeEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"*, %"class.icu_69::CharString"* dereferenceable(64), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, %6
  br i1 %9, label %10, label %42

10:                                               ; preds = %3
  %11 = icmp eq i32 %6, 8
  %12 = select i1 %11, i32 2, i32 1
  %13 = shl nsw i32 %6, %12
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %67

15:                                               ; preds = %10
  %16 = sext i32 %13 to i64
  %17 = shl nsw i64 %16, 3
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #10
  %19 = icmp eq i8* %18, null
  br i1 %19, label %67, label %20

20:                                               ; preds = %15
  %21 = icmp sgt i32 %6, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %20
  %23 = bitcast %"class.icu_69::MaybeStackArray.5"* %4 to i8**
  br label %34

24:                                               ; preds = %20
  %25 = load i32, i32* %5, align 8
  %26 = icmp slt i32 %25, %6
  %27 = select i1 %26, i32 %25, i32 %6
  %28 = icmp sgt i32 %27, %13
  %29 = select i1 %28, i32 %13, i32 %27
  %30 = bitcast %"class.icu_69::MaybeStackArray.5"* %4 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = sext i32 %29 to i64
  %33 = shl nsw i64 %32, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %31, i64 %33, i1 false) #11
  br label %34

34:                                               ; preds = %22, %24
  %35 = phi i8** [ %23, %22 ], [ %30, %24 ]
  %36 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 2
  %37 = load i8, i8* %36, align 4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = load i8*, i8** %35, align 8
  tail call void @uprv_free_69(i8* %40) #11
  br label %41

41:                                               ; preds = %39, %34
  store i8* %18, i8** %35, align 8
  store i32 %13, i32* %5, align 8
  store i8 1, i8* %36, align 4
  br label %42

42:                                               ; preds = %41, %3
  %43 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #11
  %44 = icmp eq i8* %43, null
  br i1 %44, label %59, label %45

45:                                               ; preds = %42
  %46 = bitcast i8* %43 to %"class.icu_69::CharString"*
  %47 = bitcast i8* %43 to i8**
  %48 = getelementptr inbounds i8, i8* %43, i64 13
  store i8* %48, i8** %47, align 8
  %49 = getelementptr inbounds i8, i8* %43, i64 8
  %50 = bitcast i8* %49 to i32*
  store i32 40, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %43, i64 12
  store i8 0, i8* %51, align 4
  %52 = getelementptr inbounds i8, i8* %43, i64 56
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 8
  store i8 0, i8* %48, align 1
  %54 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %1, i64 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %1, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* nonnull %46, i8* %55, i32 %57, i32* dereferenceable(4) %2) #11
  br label %59

59:                                               ; preds = %45, %42
  %60 = phi %"class.icu_69::CharString"* [ %46, %45 ], [ null, %42 ]
  %61 = load i32, i32* %7, align 8
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %7, align 8
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds %"class.icu_69::MaybeStackArray.5", %"class.icu_69::MaybeStackArray.5"* %4, i64 0, i32 0
  %65 = load %"class.icu_69::CharString"**, %"class.icu_69::CharString"*** %64, align 8
  %66 = getelementptr inbounds %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %65, i64 %63
  store %"class.icu_69::CharString"* %60, %"class.icu_69::CharString"** %66, align 8
  br label %67

67:                                               ; preds = %15, %10, %59
  %68 = phi %"class.icu_69::CharString"* [ %60, %59 ], [ null, %10 ], [ null, %15 ]
  ret %"class.icu_69::CharString"* %68
}

declare i8* @T_CString_toLowerCase_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJPcRiR10UErrorCodeEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"*, i8** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %7
  br i1 %10, label %11, label %43

11:                                               ; preds = %4
  %12 = icmp eq i32 %7, 8
  %13 = select i1 %12, i32 2, i32 1
  %14 = shl nsw i32 %7, %13
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %66

16:                                               ; preds = %11
  %17 = sext i32 %14 to i64
  %18 = shl nsw i64 %17, 3
  %19 = tail call noalias i8* @uprv_malloc_69(i64 %18) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %66, label %21

21:                                               ; preds = %16
  %22 = icmp sgt i32 %7, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.icu_69::MaybeStackArray.5"* %5 to i8**
  br label %35

25:                                               ; preds = %21
  %26 = load i32, i32* %6, align 8
  %27 = icmp slt i32 %26, %7
  %28 = select i1 %27, i32 %26, i32 %7
  %29 = icmp sgt i32 %28, %14
  %30 = select i1 %29, i32 %14, i32 %28
  %31 = bitcast %"class.icu_69::MaybeStackArray.5"* %5 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = sext i32 %30 to i64
  %34 = shl nsw i64 %33, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %32, i64 %34, i1 false) #11
  br label %35

35:                                               ; preds = %23, %25
  %36 = phi i8** [ %24, %23 ], [ %31, %25 ]
  %37 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 2
  %38 = load i8, i8* %37, align 4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = load i8*, i8** %36, align 8
  tail call void @uprv_free_69(i8* %41) #11
  br label %42

42:                                               ; preds = %40, %35
  store i8* %19, i8** %36, align 8
  store i32 %14, i32* %6, align 8
  store i8 1, i8* %37, align 4
  br label %43

43:                                               ; preds = %42, %4
  %44 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #11
  %45 = icmp eq i8* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %43
  %47 = bitcast i8* %44 to %"class.icu_69::CharString"*
  %48 = load i8*, i8** %1, align 8
  %49 = load i32, i32* %2, align 4
  %50 = bitcast i8* %44 to i8**
  %51 = getelementptr inbounds i8, i8* %44, i64 13
  store i8* %51, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %44, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 40, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %44, i64 12
  store i8 0, i8* %54, align 4
  %55 = getelementptr inbounds i8, i8* %44, i64 56
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 8
  store i8 0, i8* %51, align 1
  %57 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* nonnull %47, i8* %48, i32 %49, i32* dereferenceable(4) %3) #11
  br label %58

58:                                               ; preds = %46, %43
  %59 = phi %"class.icu_69::CharString"* [ %47, %46 ], [ null, %43 ]
  %60 = load i32, i32* %8, align 8
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %8, align 8
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds %"class.icu_69::MaybeStackArray.5", %"class.icu_69::MaybeStackArray.5"* %5, i64 0, i32 0
  %64 = load %"class.icu_69::CharString"**, %"class.icu_69::CharString"*** %63, align 8
  %65 = getelementptr inbounds %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %64, i64 %62
  store %"class.icu_69::CharString"* %59, %"class.icu_69::CharString"** %65, align 8
  br label %66

66:                                               ; preds = %16, %11, %58
  %67 = phi %"class.icu_69::CharString"* [ %59, %58 ], [ null, %11 ], [ null, %16 ]
  ret %"class.icu_69::CharString"* %67
}

; Function Attrs: nofree nounwind ssp uwtable
define internal fastcc signext i8 @_ZL19_addExtensionToListPP18ExtensionListEntryS0_a(%struct.ExtensionListEntry** nocapture, %struct.ExtensionListEntry*, i8 signext) unnamed_addr #9 {
  %4 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %0, align 8
  %5 = icmp eq %struct.ExtensionListEntry* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = icmp eq i8 %2, 0
  %8 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %15

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %11, align 8
  store %struct.ExtensionListEntry* %1, %struct.ExtensionListEntry** %0, align 8
  br label %76

12:                                               ; preds = %72
  %13 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %16, i64 0, i32 2
  store %struct.ExtensionListEntry* %1, %struct.ExtensionListEntry** %13, align 8
  %14 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1, i64 0, i32 2
  store %struct.ExtensionListEntry* null, %struct.ExtensionListEntry** %14, align 8
  br label %76

15:                                               ; preds = %6, %72
  %16 = phi %struct.ExtensionListEntry* [ %4, %6 ], [ %74, %72 ]
  %17 = phi %struct.ExtensionListEntry* [ null, %6 ], [ %16, %72 ]
  br i1 %7, label %58, label %18

18:                                               ; preds = %15
  %19 = tail call i64 @strlen(i8* %9) #12
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %16, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i64 @strlen(i8* %22) #12
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i32 %20, 1
  %26 = icmp eq i32 %24, 1
  %27 = and i1 %25, %26
  br i1 %27, label %28, label %39

28:                                               ; preds = %18
  %29 = load i8, i8* %9, align 1
  %30 = sext i8 %29 to i32
  %31 = load i8, i8* %22, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp eq i8 %29, %31
  br i1 %33, label %76, label %34

34:                                               ; preds = %28
  %35 = icmp eq i8 %29, 120
  br i1 %35, label %72, label %36

36:                                               ; preds = %34
  %37 = icmp eq i8 %31, 120
  %38 = sub nsw i32 %30, %32
  br i1 %37, label %65, label %62

39:                                               ; preds = %18
  br i1 %25, label %40, label %44

40:                                               ; preds = %39
  %41 = load i8, i8* %9, align 1
  %42 = sext i8 %41 to i32
  %43 = add nsw i32 %42, -117
  br label %62

44:                                               ; preds = %39
  br i1 %26, label %45, label %49

45:                                               ; preds = %44
  %46 = load i8, i8* %22, align 1
  %47 = sext i8 %46 to i32
  %48 = sub nsw i32 117, %47
  br label %62

49:                                               ; preds = %44
  %50 = tail call i32 @strcmp(i8* %9, i8* %22) #12
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %76, label %52

52:                                               ; preds = %49
  %53 = tail call i32 @strcmp(i8* %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL20LOCALE_ATTRIBUTE_KEY, i64 0, i64 0)) #12
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %72, label %55

55:                                               ; preds = %52
  %56 = tail call i32 @strcmp(i8* %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZL20LOCALE_ATTRIBUTE_KEY, i64 0, i64 0)) #12
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %65, label %62

58:                                               ; preds = %15
  %59 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %16, i64 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = tail call i32 @strcmp(i8* %9, i8* %60) #12
  br label %62

62:                                               ; preds = %36, %55, %45, %40, %58
  %63 = phi i32 [ %61, %58 ], [ %43, %40 ], [ %48, %45 ], [ %50, %55 ], [ %38, %36 ]
  %64 = icmp slt i32 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %36, %55, %62
  %66 = icmp eq %struct.ExtensionListEntry* %17, null
  %67 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %17, i64 0, i32 2
  %68 = select i1 %66, %struct.ExtensionListEntry** %0, %struct.ExtensionListEntry** %67
  store %struct.ExtensionListEntry* %1, %struct.ExtensionListEntry** %68, align 8
  %69 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %1, i64 0, i32 2
  store %struct.ExtensionListEntry* %16, %struct.ExtensionListEntry** %69, align 8
  br label %76

70:                                               ; preds = %62
  %71 = icmp eq i32 %63, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %34, %52, %70
  %73 = getelementptr inbounds %struct.ExtensionListEntry, %struct.ExtensionListEntry* %16, i64 0, i32 2
  %74 = load %struct.ExtensionListEntry*, %struct.ExtensionListEntry** %73, align 8
  %75 = icmp eq %struct.ExtensionListEntry* %74, null
  br i1 %75, label %12, label %15

76:                                               ; preds = %49, %28, %70, %12, %65, %10
  %77 = phi i8 [ 1, %10 ], [ 1, %12 ], [ 1, %65 ], [ 0, %70 ], [ 0, %28 ], [ 0, %49 ]
  ret i8 %77
}

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #7

declare i32 @uprv_min_69(i32, i32) local_unnamed_addr #4

declare i32 @uprv_strnicmp_69(i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @T_CString_toUpperCase_69(i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, %4
  br i1 %7, label %8, label %40

8:                                                ; preds = %1
  %9 = icmp eq i32 %4, 8
  %10 = select i1 %9, i32 2, i32 1
  %11 = shl nsw i32 %4, %10
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %60

13:                                               ; preds = %8
  %14 = sext i32 %11 to i64
  %15 = shl nsw i64 %14, 3
  %16 = tail call noalias i8* @uprv_malloc_69(i64 %15) #10
  %17 = icmp eq i8* %16, null
  br i1 %17, label %60, label %18

18:                                               ; preds = %13
  %19 = icmp sgt i32 %4, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.icu_69::MaybeStackArray.5"* %2 to i8**
  br label %32

22:                                               ; preds = %18
  %23 = load i32, i32* %3, align 8
  %24 = icmp slt i32 %23, %4
  %25 = select i1 %24, i32 %23, i32 %4
  %26 = icmp sgt i32 %25, %11
  %27 = select i1 %26, i32 %11, i32 %25
  %28 = bitcast %"class.icu_69::MaybeStackArray.5"* %2 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = sext i32 %27 to i64
  %31 = shl nsw i64 %30, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 8 %29, i64 %31, i1 false) #11
  br label %32

32:                                               ; preds = %20, %22
  %33 = phi i8** [ %21, %20 ], [ %28, %22 ]
  %34 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 2
  %35 = load i8, i8* %34, align 4
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = load i8*, i8** %33, align 8
  tail call void @uprv_free_69(i8* %38) #11
  br label %39

39:                                               ; preds = %37, %32
  store i8* %16, i8** %33, align 8
  store i32 %11, i32* %3, align 8
  store i8 1, i8* %34, align 4
  br label %40

40:                                               ; preds = %39, %1
  %41 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #11
  %42 = icmp eq i8* %41, null
  br i1 %42, label %52, label %43

43:                                               ; preds = %40
  %44 = bitcast i8* %41 to %"class.icu_69::CharString"*
  %45 = bitcast i8* %41 to i8**
  %46 = getelementptr inbounds i8, i8* %41, i64 13
  store i8* %46, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %41, i64 8
  %48 = bitcast i8* %47 to i32*
  store i32 40, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %41, i64 12
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds i8, i8* %41, i64 56
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 8
  store i8 0, i8* %46, align 1
  br label %52

52:                                               ; preds = %43, %40
  %53 = phi %"class.icu_69::CharString"* [ %44, %43 ], [ null, %40 ]
  %54 = load i32, i32* %5, align 8
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 8
  %56 = sext i32 %54 to i64
  %57 = getelementptr inbounds %"class.icu_69::MaybeStackArray.5", %"class.icu_69::MaybeStackArray.5"* %2, i64 0, i32 0
  %58 = load %"class.icu_69::CharString"**, %"class.icu_69::CharString"*** %57, align 8
  %59 = getelementptr inbounds %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %58, i64 %56
  store %"class.icu_69::CharString"* %53, %"class.icu_69::CharString"** %59, align 8
  br label %60

60:                                               ; preds = %13, %8, %52
  %61 = phi %"class.icu_69::CharString"* [ %53, %52 ], [ null, %8 ], [ null, %13 ]
  ret %"class.icu_69::CharString"* %61
}

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"*, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #4

declare void @_ZN6icu_6911StringPieceC1EPKc(%"class.icu_69::StringPiece"*, i8*) unnamed_addr #4

declare i8* @uloc_toLegacyKey_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRA3_cRiR10UErrorCodeEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"*, [3 x i8]* dereferenceable(3), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %7
  br i1 %10, label %11, label %43

11:                                               ; preds = %4
  %12 = icmp eq i32 %7, 8
  %13 = select i1 %12, i32 2, i32 1
  %14 = shl nsw i32 %7, %13
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %66

16:                                               ; preds = %11
  %17 = sext i32 %14 to i64
  %18 = shl nsw i64 %17, 3
  %19 = tail call noalias i8* @uprv_malloc_69(i64 %18) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %66, label %21

21:                                               ; preds = %16
  %22 = icmp sgt i32 %7, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.icu_69::MaybeStackArray.5"* %5 to i8**
  br label %35

25:                                               ; preds = %21
  %26 = load i32, i32* %6, align 8
  %27 = icmp slt i32 %26, %7
  %28 = select i1 %27, i32 %26, i32 %7
  %29 = icmp sgt i32 %28, %14
  %30 = select i1 %29, i32 %14, i32 %28
  %31 = bitcast %"class.icu_69::MaybeStackArray.5"* %5 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = sext i32 %30 to i64
  %34 = shl nsw i64 %33, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %32, i64 %34, i1 false) #11
  br label %35

35:                                               ; preds = %23, %25
  %36 = phi i8** [ %24, %23 ], [ %31, %25 ]
  %37 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 2
  %38 = load i8, i8* %37, align 4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = load i8*, i8** %36, align 8
  tail call void @uprv_free_69(i8* %41) #11
  br label %42

42:                                               ; preds = %40, %35
  store i8* %19, i8** %36, align 8
  store i32 %14, i32* %6, align 8
  store i8 1, i8* %37, align 4
  br label %43

43:                                               ; preds = %42, %4
  %44 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #11
  %45 = icmp eq i8* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %43
  %47 = bitcast i8* %44 to %"class.icu_69::CharString"*
  %48 = getelementptr inbounds [3 x i8], [3 x i8]* %1, i64 0, i64 0
  %49 = load i32, i32* %2, align 4
  %50 = bitcast i8* %44 to i8**
  %51 = getelementptr inbounds i8, i8* %44, i64 13
  store i8* %51, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %44, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 40, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %44, i64 12
  store i8 0, i8* %54, align 4
  %55 = getelementptr inbounds i8, i8* %44, i64 56
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 8
  store i8 0, i8* %51, align 1
  %57 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* nonnull %47, i8* %48, i32 %49, i32* dereferenceable(4) %3) #11
  br label %58

58:                                               ; preds = %46, %43
  %59 = phi %"class.icu_69::CharString"* [ %47, %46 ], [ null, %43 ]
  %60 = load i32, i32* %8, align 8
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %8, align 8
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds %"class.icu_69::MaybeStackArray.5", %"class.icu_69::MaybeStackArray.5"* %5, i64 0, i32 0
  %64 = load %"class.icu_69::CharString"**, %"class.icu_69::CharString"*** %63, align 8
  %65 = getelementptr inbounds %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %64, i64 %62
  store %"class.icu_69::CharString"* %59, %"class.icu_69::CharString"** %65, align 8
  br label %66

66:                                               ; preds = %16, %11, %58
  %67 = phi %"class.icu_69::CharString"* [ %59, %58 ], [ null, %11 ], [ null, %16 ]
  ret %"class.icu_69::CharString"* %67
}

declare i8* @uloc_toLegacyType_69(i8*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.icu_69::CharString"* @_ZN6icu_6910MemoryPoolINS_10CharStringELi8EE6createIJRA128_cRiR10UErrorCodeEEEPS1_DpOT_(%"class.icu_69::MemoryPool.4"*, [128 x i8]* dereferenceable(128), i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, %7
  br i1 %10, label %11, label %43

11:                                               ; preds = %4
  %12 = icmp eq i32 %7, 8
  %13 = select i1 %12, i32 2, i32 1
  %14 = shl nsw i32 %7, %13
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %66

16:                                               ; preds = %11
  %17 = sext i32 %14 to i64
  %18 = shl nsw i64 %17, 3
  %19 = tail call noalias i8* @uprv_malloc_69(i64 %18) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %66, label %21

21:                                               ; preds = %16
  %22 = icmp sgt i32 %7, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.icu_69::MaybeStackArray.5"* %5 to i8**
  br label %35

25:                                               ; preds = %21
  %26 = load i32, i32* %6, align 8
  %27 = icmp slt i32 %26, %7
  %28 = select i1 %27, i32 %26, i32 %7
  %29 = icmp sgt i32 %28, %14
  %30 = select i1 %29, i32 %14, i32 %28
  %31 = bitcast %"class.icu_69::MaybeStackArray.5"* %5 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = sext i32 %30 to i64
  %34 = shl nsw i64 %33, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %32, i64 %34, i1 false) #11
  br label %35

35:                                               ; preds = %23, %25
  %36 = phi i8** [ %24, %23 ], [ %31, %25 ]
  %37 = getelementptr inbounds %"class.icu_69::MemoryPool.4", %"class.icu_69::MemoryPool.4"* %0, i64 0, i32 1, i32 2
  %38 = load i8, i8* %37, align 4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  %41 = load i8*, i8** %36, align 8
  tail call void @uprv_free_69(i8* %41) #11
  br label %42

42:                                               ; preds = %40, %35
  store i8* %19, i8** %36, align 8
  store i32 %14, i32* %6, align 8
  store i8 1, i8* %37, align 4
  br label %43

43:                                               ; preds = %42, %4
  %44 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #11
  %45 = icmp eq i8* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %43
  %47 = bitcast i8* %44 to %"class.icu_69::CharString"*
  %48 = getelementptr inbounds [128 x i8], [128 x i8]* %1, i64 0, i64 0
  %49 = load i32, i32* %2, align 4
  %50 = bitcast i8* %44 to i8**
  %51 = getelementptr inbounds i8, i8* %44, i64 13
  store i8* %51, i8** %50, align 8
  %52 = getelementptr inbounds i8, i8* %44, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 40, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %44, i64 12
  store i8 0, i8* %54, align 4
  %55 = getelementptr inbounds i8, i8* %44, i64 56
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 8
  store i8 0, i8* %51, align 1
  %57 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* nonnull %47, i8* %48, i32 %49, i32* dereferenceable(4) %3) #11
  br label %58

58:                                               ; preds = %46, %43
  %59 = phi %"class.icu_69::CharString"* [ %47, %46 ], [ null, %43 ]
  %60 = load i32, i32* %8, align 8
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %8, align 8
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds %"class.icu_69::MaybeStackArray.5", %"class.icu_69::MaybeStackArray.5"* %5, i64 0, i32 0
  %64 = load %"class.icu_69::CharString"**, %"class.icu_69::CharString"*** %63, align 8
  %65 = getelementptr inbounds %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %64, i64 %62
  store %"class.icu_69::CharString"* %59, %"class.icu_69::CharString"** %65, align 8
  br label %66

66:                                               ; preds = %16, %11, %58
  %67 = phi %"class.icu_69::CharString"* [ %59, %58 ], [ null, %11 ], [ null, %16 ]
  ret %"class.icu_69::CharString"* %67
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind allocsize(0) }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 (i32*, i8*, i32)* @_ZL25_isUnicodeExtensionSubtagRiPKci, i8 (i32*, i8*, i32)* @_ZL29_isTransformedExtensionSubtagRiPKci}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
