; ModuleID = '../../third_party/swiftshader/src/Vulkan/VkImage.cpp'
source_filename = "../../third_party/swiftshader/src/Vulkan/VkImage.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.vk::Image" = type { %"class.vk::DeviceMemory"*, %"class.vk::Device"*, i64, i32, i32, %"class.vk::Format", %struct.VkExtent3D, i32, i32, i32, i32, i32, %"class.vk::Image"*, i32, %"class.marl::mutex", %"class.std::__1::unordered_set.183" }
%"class.vk::DeviceMemory" = type { i8*, i64, i32, %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"* }
%"class.vk::DeviceMemory::ExternalBase" = type opaque
%"class.vk::Format" = type { i32 }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.marl::mutex" = type { %"class.std::__1::mutex" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_set.183" = type { %"class.std::__1::__hash_table.184" }
%"class.std::__1::__hash_table.184" = type <{ %"class.std::__1::unique_ptr.185", %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.202", [4 x i8] }>
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187", %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.std::__1::__hash_node_base.188"** }
%"struct.std::__1::__hash_node_base.188" = type { %"struct.std::__1::__hash_node_base.188"* }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.std::__1::__bucket_list_deallocator.190" }
%"class.std::__1::__bucket_list_deallocator.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i64 }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::__hash_node_base.188" }
%"class.std::__1::__compressed_pair.200" = type <{ %"struct.std::__1::__compressed_pair_elem.46", %"struct.std::__1::__compressed_pair_elem.201", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.vk::Image::Subresource" }
%"class.vk::Image::Subresource" = type { %struct.VkImageSubresource }
%struct.VkImageSubresource = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { float }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%"class.vk::Device" = type { %"class.vk::PhysicalDevice"*, %"class.vk::Queue"*, i32, %"class.std::__1::unique_ptr", i32, [256 x i8]*, %struct.VkPhysicalDeviceFeatures, %"class.std::__1::shared_ptr", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.145", %"class.marl::mutex", %"class.std::__1::unordered_set.159" }
%"class.vk::PhysicalDevice" = type opaque
%"class.vk::Queue" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sw::Blitter"* }
%"class.sw::Blitter" = type { i32 (...)**, %"class.marl::mutex", %"class.sw::LRUCache", %"class.marl::mutex", %"class.sw::LRUCache.59" }
%"class.sw::LRUCache" = type { %"class.std::__1::vector", %"class.std::__1::unordered_set", %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.41", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.57", [4 x i8] }>
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry" = type opaque
%"class.sw::LRUCache.59" = type { %"class.std::__1::vector.60", %"class.std::__1::unordered_set.67", %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::unordered_set.67" = type { %"class.std::__1::__hash_table.68" }
%"class.std::__1::__hash_table.68" = type <{ %"class.std::__1::unique_ptr.69", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.86", [4 x i8] }>
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71", %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::__hash_node_base.72"** }
%"struct.std::__1::__hash_node_base.72" = type { %"struct.std::__1::__hash_node_base.72"* }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.std::__1::__bucket_list_deallocator.74" }
%"class.std::__1::__bucket_list_deallocator.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::__hash_node_base.72" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry" = type opaque
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.marl::Scheduler"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::Scheduler" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.vk::Device::SamplingRoutineCache"* }
%"class.vk::Device::SamplingRoutineCache" = type { i8, [7 x i8], %"class.std::__1::unordered_map", %"class.marl::mutex", %"class.sw::LRUCache.113" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"class.sw::LRUCache.113" = type { %"class.std::__1::vector.114", %"class.std::__1::unordered_set.121", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"class.std::__1::unordered_set.121" = type { %"class.std::__1::__hash_table.122" }
%"class.std::__1::__hash_table.122" = type <{ %"class.std::__1::unique_ptr.123", %"class.std::__1::__compressed_pair.133", %"class.std::__1::__compressed_pair.138", %"class.std::__1::__compressed_pair.140", [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125", %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base.126"** }
%"struct.std::__1::__hash_node_base.126" = type { %"struct.std::__1::__hash_node_base.126"* }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::__bucket_list_deallocator.128" }
%"class.std::__1::__bucket_list_deallocator.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::__hash_node_base.126" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Keyed", %"class.std::__1::shared_ptr.213", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Keyed" = type { %"struct.vk::Device::SamplingRoutineCache::Key" }
%"struct.vk::Device::SamplingRoutineCache::Key" = type { i32, i32, i32 }
%"class.std::__1::shared_ptr.213" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.vk::Device::SamplerIndexer"* }
%"class.vk::Device::SamplerIndexer" = type <{ %"class.marl::mutex", %"class.std::__1::map", i32, [4 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::unordered_set.159" = type { %"class.std::__1::__hash_table.160" }
%"class.std::__1::__hash_table.160" = type <{ %"class.std::__1::unique_ptr.161", %"class.std::__1::__compressed_pair.171", %"class.std::__1::__compressed_pair.176", %"class.std::__1::__compressed_pair.178", [4 x i8] }>
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163", %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"struct.std::__1::__hash_node_base.164"** }
%"struct.std::__1::__hash_node_base.164" = type { %"struct.std::__1::__hash_node_base.164"* }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.std::__1::__bucket_list_deallocator.166" }
%"class.std::__1::__bucket_list_deallocator.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"struct.std::__1::__hash_node_base.164" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%class.VkNonDispatchableHandle = type { i64 }
%class.VkNonDispatchableHandle.0 = type { i64 }
%class.VkNonDispatchableHandle.1 = type { i64 }
%class.VkNonDispatchableHandle.2 = type { i64 }
%class.VkNonDispatchableHandle.3 = type { i64 }
%class.VkNonDispatchableHandle.4 = type { i64 }
%class.VkNonDispatchableHandle.5 = type { i64 }
%class.VkNonDispatchableHandle.6 = type { i64 }
%class.VkNonDispatchableHandle.7 = type { i64 }
%class.VkNonDispatchableHandle.8 = type { i64 }
%class.VkNonDispatchableHandle.9 = type { i64 }
%class.VkNonDispatchableHandle.10 = type { i64 }
%class.VkNonDispatchableHandle.11 = type { i64 }
%class.VkNonDispatchableHandle.12 = type { i64 }
%class.VkNonDispatchableHandle.13 = type { i64 }
%class.VkNonDispatchableHandle.14 = type { i64 }
%class.VkNonDispatchableHandle.15 = type { i64 }
%class.VkNonDispatchableHandle.16 = type { i64 }
%class.VkNonDispatchableHandle.17 = type { i64 }
%class.VkNonDispatchableHandle.18 = type { i64 }
%class.VkNonDispatchableHandle.19 = type { i64 }
%class.VkNonDispatchableHandle.20 = type { i64 }
%class.VkNonDispatchableHandle.21 = type { i64 }
%class.VkNonDispatchableHandle.22 = type { i64 }
%class.VkNonDispatchableHandle.23 = type { i64 }
%class.VkNonDispatchableHandle.24 = type { i64 }
%class.VkNonDispatchableHandle.25 = type { i64 }
%class.VkNonDispatchableHandle.26 = type { i64 }
%class.VkNonDispatchableHandle.27 = type { i64 }
%class.VkNonDispatchableHandle.28 = type { i64 }
%class.VkNonDispatchableHandle.29 = type { i64 }
%class.VkNonDispatchableHandle.30 = type { i64 }
%class.VkNonDispatchableHandle.31 = type { i64 }
%class.VkNonDispatchableHandle.32 = type { i64 }
%class.VkNonDispatchableHandle.33 = type { i64 }
%class.VkNonDispatchableHandle.34 = type { i64 }
%class.VkNonDispatchableHandle.35 = type { i64 }
%struct.VkBaseInStructure = type { i32, %struct.VkBaseInStructure* }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%"class.vk::Buffer" = type <{ i8*, i32, [4 x i8], i64, i32, i32, i32, [4 x i8], i32*, i32, [4 x i8] }>
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.vk::ImageView" = type <{ %"class.vk::Image"*, i32, %"class.vk::Format", %struct.VkComponentMapping, %struct.VkImageSubresourceRange, [4 x i8], %"class.vk::SamplerYcbcrConversion"*, %"union.vk::Identifier", [4 x i8] }>
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%"class.vk::SamplerYcbcrConversion" = type { i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%"union.vk::Identifier" = type { %struct.anon }
%struct.anon = type { i24 }
%struct.VkSubpassDescriptionDepthStencilResolve = type { i32, i8*, i32, i32, %struct.VkAttachmentReference2* }
%struct.VkAttachmentReference2 = type { i32, i8*, i32, i32, i32 }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkClearDepthStencilValue = type { float, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218", %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type <{ %"struct.std::__1::__hash_node_base.188", i64, %"class.vk::Image::Subresource", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.198"*, i8, [7 x i8] }>
%"class.std::__1::allocator.198" = type { i8 }

$_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm = comdat any

$_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE = comdat any

$_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE = comdat any

@.str = private unnamed_addr constant [43 x i8] c"%s:%d WARNING: UNSUPPORTED: aspectMask %X\0A\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"../../third_party/swiftshader/src/Vulkan/VkImage.cpp\00", align 1
@.str.2 = private unnamed_addr constant [58 x i8] c"%s:%d WARNING: UNSUPPORTED: srcSubresource.aspectMask %X\0A\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"%s:%d WARNING: UNSUPPORTED: dstSubresource.aspectMask %X\0A\00", align 1
@.str.4 = private unnamed_addr constant [43 x i8] c"%s:%d WARNING: UNSUPPORTED: aspectMask %x\0A\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"%s:%d WARNING: UNSUPPORTED: format %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"%s:%d WARNING: UNSUPPORTED: aspect %x\0A\00", align 1
@.str.7 = private unnamed_addr constant [40 x i8] c"%s:%d WARNING: UNSUPPORTED: format: %d\0A\00", align 1
@switch.table._ZN2vk5Image10decodeETC2ERK18VkImageSubresource = private unnamed_addr constant [10 x i32] [i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 1, i32 0, i32 3, i32 2], align 4

@_ZN2vk5ImageC1EPK17VkImageCreateInfoPvPNS_6DeviceE = hidden unnamed_addr alias void (%"class.vk::Image"*, %struct.VkImageCreateInfo*, i8*, %"class.vk::Device"*), void (%"class.vk::Image"*, %struct.VkImageCreateInfo*, i8*, %"class.vk::Device"*)* @_ZN2vk5ImageC2EPK17VkImageCreateInfoPvPNS_6DeviceE

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv(%class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm(%class.VkNonDispatchableHandle*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv(%class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.0* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm(%class.VkNonDispatchableHandle.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv(%class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.1* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm(%class.VkNonDispatchableHandle.1*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv(%class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm(%class.VkNonDispatchableHandle.2*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv(%class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.3* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm(%class.VkNonDispatchableHandle.3*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv(%class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.4* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm(%class.VkNonDispatchableHandle.4*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv(%class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.5* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm(%class.VkNonDispatchableHandle.5*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv(%class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.6* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm(%class.VkNonDispatchableHandle.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv(%class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.7* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm(%class.VkNonDispatchableHandle.7*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv(%class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm(%class.VkNonDispatchableHandle.8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv(%class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.9* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm(%class.VkNonDispatchableHandle.9*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv(%class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.10* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm(%class.VkNonDispatchableHandle.10*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv(%class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.11* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm(%class.VkNonDispatchableHandle.11*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv(%class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.12* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm(%class.VkNonDispatchableHandle.12*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv(%class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.13* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm(%class.VkNonDispatchableHandle.13*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv(%class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.14* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm(%class.VkNonDispatchableHandle.14*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv(%class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.15* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm(%class.VkNonDispatchableHandle.15*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv(%class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.16* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm(%class.VkNonDispatchableHandle.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv(%class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.17* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm(%class.VkNonDispatchableHandle.17*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv(%class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.18* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm(%class.VkNonDispatchableHandle.18*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv(%class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.19* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm(%class.VkNonDispatchableHandle.19*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv(%class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.20* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm(%class.VkNonDispatchableHandle.20*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv(%class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.21* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm(%class.VkNonDispatchableHandle.21*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv(%class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.22* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm(%class.VkNonDispatchableHandle.22*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv(%class.VkNonDispatchableHandle.23*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.23* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm(%class.VkNonDispatchableHandle.23*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.23, %class.VkNonDispatchableHandle.23* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv(%class.VkNonDispatchableHandle.24*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.24* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm(%class.VkNonDispatchableHandle.24*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.24, %class.VkNonDispatchableHandle.24* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv(%class.VkNonDispatchableHandle.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.25* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm(%class.VkNonDispatchableHandle.25*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.25, %class.VkNonDispatchableHandle.25* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv(%class.VkNonDispatchableHandle.26*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.26* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm(%class.VkNonDispatchableHandle.26*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.26, %class.VkNonDispatchableHandle.26* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv(%class.VkNonDispatchableHandle.27*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.27* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm(%class.VkNonDispatchableHandle.27*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.27, %class.VkNonDispatchableHandle.27* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv(%class.VkNonDispatchableHandle.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.28* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm(%class.VkNonDispatchableHandle.28*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.28, %class.VkNonDispatchableHandle.28* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv(%class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.29* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm(%class.VkNonDispatchableHandle.29*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv(%class.VkNonDispatchableHandle.30*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.30* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm(%class.VkNonDispatchableHandle.30*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.30, %class.VkNonDispatchableHandle.30* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv(%class.VkNonDispatchableHandle.31*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.31* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm(%class.VkNonDispatchableHandle.31*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.31, %class.VkNonDispatchableHandle.31* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv(%class.VkNonDispatchableHandle.32*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.32* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm(%class.VkNonDispatchableHandle.32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.32, %class.VkNonDispatchableHandle.32* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv(%class.VkNonDispatchableHandle.33*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.33* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm(%class.VkNonDispatchableHandle.33*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.33, %class.VkNonDispatchableHandle.33* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv(%class.VkNonDispatchableHandle.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.34* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm(%class.VkNonDispatchableHandle.34*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.34, %class.VkNonDispatchableHandle.34* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv(%class.VkNonDispatchableHandle.35*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.35* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm(%class.VkNonDispatchableHandle.35*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.35, %class.VkNonDispatchableHandle.35* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5ImageC2EPK17VkImageCreateInfoPvPNS_6DeviceE(%"class.vk::Image"*, %struct.VkImageCreateInfo* nocapture readonly, i8*, %"class.vk::Device"*) unnamed_addr #0 align 2 {
  %5 = alloca %struct.VkImageCreateInfo, align 8
  %6 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 0
  store %"class.vk::DeviceMemory"* null, %"class.vk::DeviceMemory"** %6, align 8
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  store %"class.vk::Device"* %3, %"class.vk::Device"** %7, align 8
  %8 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 2
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 1
  %16 = bitcast i8** %15 to %struct.VkBaseInStructure**
  br label %17

17:                                               ; preds = %17, %4
  %18 = phi %struct.VkBaseInStructure** [ %16, %4 ], [ %21, %17 ]
  %19 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %18, align 8
  %20 = icmp eq %struct.VkBaseInStructure* %19, null
  %21 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %19, i64 0, i32 1
  br i1 %20, label %22, label %17

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %23, i64 0, i32 0
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 6
  %28 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 5
  %29 = bitcast %struct.VkExtent3D* %27 to i8*
  %30 = bitcast %struct.VkExtent3D* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %30, i64 12, i1 false)
  %31 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 7
  %32 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 6
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %31, align 8
  %34 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %35 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 7
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %34, align 4
  %37 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 9
  %38 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 8
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 10
  %41 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 9
  %42 = load i32, i32* %41, align 4
  store i32 %42, i32* %40, align 4
  %43 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 11
  %44 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %1, i64 0, i32 10
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %43, align 8
  %46 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  store %"class.vk::Image"* null, %"class.vk::Image"** %46, align 8
  %47 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 13
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 14
  %49 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 15, i32 0, i32 3
  %50 = bitcast %"class.std::__1::__compressed_pair.202"* %49 to i32*
  %51 = bitcast %"class.marl::mutex"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 84, i1 false)
  store i32 1065353216, i32* %50, align 4
  %52 = tail call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* %23) #9
  br i1 %52, label %53, label %60

53:                                               ; preds = %22
  %54 = bitcast %struct.VkImageCreateInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %54) #10
  %55 = bitcast %struct.VkImageCreateInfo* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 %55, i64 88, i1 false)
  %56 = tail call i32 @_ZNK2vk6Format21getDecompressedFormatEv(%"class.vk::Format"* %23) #9
  %57 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %5, i64 0, i32 4
  store i32 %56, i32* %57, align 8
  %58 = bitcast i8* %2 to %"class.vk::Image"*
  call void @_ZN2vk5ImageC2EPK17VkImageCreateInfoPvPNS_6DeviceE(%"class.vk::Image"* %58, %struct.VkImageCreateInfo* nonnull %5, i8* null, %"class.vk::Device"* %3) #11
  %59 = bitcast %"class.vk::Image"** %46 to i8**
  store i8* %2, i8** %59, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %54) #10
  br label %60

60:                                               ; preds = %53, %22
  %61 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %16, align 8
  %62 = icmp eq %struct.VkBaseInStructure* %61, null
  br i1 %62, label %75, label %63

63:                                               ; preds = %60, %71
  %64 = phi %struct.VkBaseInStructure* [ %73, %71 ], [ %61, %60 ]
  %65 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 1000072001
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %64, i64 1, i32 0
  %70 = load i32, i32* %69, align 8
  store i32 %70, i32* %47, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %64, i64 0, i32 1
  %73 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %72, align 8
  %74 = icmp eq %struct.VkBaseInStructure* %73, null
  br i1 %74, label %75, label %63

75:                                               ; preds = %71, %60
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format21getDecompressedFormatEv(%"class.vk::Format"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image7destroyEPK21VkAllocationCallbacks(%"class.vk::Image"* nocapture readonly, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = icmp eq %"class.vk::Image"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.vk::Image"* %4 to i8*
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* nonnull %7, %struct.VkAllocationCallbacks* %1) #9
  br label %8

8:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8*, %struct.VkAllocationCallbacks*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZN2vk5Image29ComputeRequiredAllocationSizeEPK17VkImageCreateInfo(%struct.VkImageCreateInfo* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.vk::Format", align 4
  %3 = bitcast %"class.vk::Format"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  %4 = getelementptr inbounds %struct.VkImageCreateInfo, %struct.VkImageCreateInfo* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %2, i64 0, i32 0
  store i32 %5, i32* %6, align 4
  %7 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* nonnull %2) #9
  %8 = select i1 %7, i64 184, i64 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i64 %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk5Image21getMemoryRequirementsEv(%struct.VkMemoryRequirements* noalias nocapture sret, %"class.vk::Image"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %struct.VkMemoryRequirements* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -86, i64 24, i1 false)
  %4 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %0, i64 0, i32 1
  store i64 16, i64* %4, align 8
  %5 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %0, i64 0, i32 2
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %1, i64 0, i32 5
  %7 = tail call i32 @_ZNK2vk6Format10getAspectsEv(%"class.vk::Format"* %6) #9
  %8 = tail call i64 @_ZNK2vk5Image14getStorageSizeEj(%"class.vk::Image"* %1, i32 %7) #11
  %9 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %1, i64 0, i32 12
  %10 = load %"class.vk::Image"*, %"class.vk::Image"** %9, align 8
  %11 = icmp eq %"class.vk::Image"* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %10, i64 0, i32 5
  %14 = tail call i32 @_ZNK2vk6Format10getAspectsEv(%"class.vk::Format"* %13) #9
  %15 = tail call i64 @_ZNK2vk5Image14getStorageSizeEj(%"class.vk::Image"* nonnull %10, i32 %14) #11
  br label %16

16:                                               ; preds = %2, %12
  %17 = phi i64 [ %15, %12 ], [ 0, %2 ]
  %18 = add i64 %17, %8
  %19 = getelementptr inbounds %struct.VkMemoryRequirements, %struct.VkMemoryRequirements* %0, i64 0, i32 0
  store i64 %18, i64* %19, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image14getStorageSizeEj(%"class.vk::Image"*, i32) local_unnamed_addr #0 align 2 {
  %3 = and i32 %1, -120
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 954, i32 %1) #9
  br label %6

6:                                                ; preds = %2, %5
  %7 = and i32 %1, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 1) #11
  br label %11

11:                                               ; preds = %6, %9
  %12 = phi i64 [ %10, %9 ], [ 0, %6 ]
  %13 = and i32 %1, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 2) #11
  %17 = add i64 %16, %12
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi i64 [ %17, %15 ], [ %12, %11 ]
  %20 = and i32 %1, 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 4) #11
  %24 = add i64 %23, %19
  br label %25

25:                                               ; preds = %18, %22
  %26 = phi i64 [ %24, %22 ], [ %19, %18 ]
  %27 = and i32 %1, 16
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 16) #11
  %31 = add i64 %30, %26
  br label %32

32:                                               ; preds = %25, %29
  %33 = phi i64 [ %31, %29 ], [ %26, %25 ]
  %34 = and i32 %1, 32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 32) #11
  %38 = add i64 %37, %33
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi i64 [ %38, %36 ], [ %33, %32 ]
  %41 = and i32 %1, 64
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 64) #11
  %45 = add i64 %44, %40
  br label %46

46:                                               ; preds = %39, %43
  %47 = phi i64 [ %45, %43 ], [ %40, %39 ]
  %48 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i64
  %51 = mul i64 %47, %50
  ret i64 %51
}

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format10getAspectsEv(%"class.vk::Format"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image14getSizeInBytesERK23VkImageSubresourceRange(%"class.vk::Image"*, %struct.VkImageSubresourceRange* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  br label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, %4
  br label %13

13:                                               ; preds = %6, %9
  %14 = phi i32 [ %8, %6 ], [ %12, %9 ]
  %15 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  br label %27

23:                                               ; preds = %13
  %24 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, %16
  br label %27

27:                                               ; preds = %18, %23
  %28 = phi i32 [ %22, %18 ], [ %25, %23 ]
  %29 = phi i32 [ %20, %18 ], [ %26, %23 ]
  %30 = add i32 %29, -1
  %31 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = xor i32 %32, -1
  %34 = add i32 %14, %33
  %35 = sub i32 %14, %32
  %36 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 1
  %37 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %35, 1
  br i1 %39, label %44, label %40

40:                                               ; preds = %27
  %41 = icmp ugt i32 %28, %30
  br i1 %41, label %89, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 9
  br label %75

44:                                               ; preds = %27
  %45 = sub i32 %29, %28
  %46 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 7
  %47 = load i32, i32* %46, align 8
  %48 = icmp ult i32 %45, %47
  br i1 %48, label %49, label %71

49:                                               ; preds = %44
  %50 = zext i32 %34 to i64
  %51 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 %38) #11
  %52 = mul i64 %51, %50
  %53 = load i32, i32* %36, align 4
  %54 = icmp ugt i32 %53, %30
  br i1 %54, label %89, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 9
  br label %57

57:                                               ; preds = %55, %57
  %58 = phi i32 [ %53, %55 ], [ %69, %57 ]
  %59 = phi i64 [ %52, %55 ], [ %68, %57 ]
  %60 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %38, i32 %58) #9
  %61 = extractvalue { i64, i32 } %60, 1
  %62 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %38, i32 %58) #9
  %63 = mul i32 %61, %62
  %64 = zext i32 %63 to i64
  %65 = load i32, i32* %56, align 8
  %66 = zext i32 %65 to i64
  %67 = mul nuw i64 %64, %66
  %68 = add i64 %67, %59
  %69 = add i32 %58, 1
  %70 = icmp ugt i32 %69, %30
  br i1 %70, label %89, label %57

71:                                               ; preds = %44
  %72 = zext i32 %35 to i64
  %73 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 %38) #11
  %74 = mul i64 %73, %72
  br label %89

75:                                               ; preds = %42, %75
  %76 = phi i32 [ %28, %42 ], [ %87, %75 ]
  %77 = phi i64 [ 0, %42 ], [ %86, %75 ]
  %78 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %38, i32 %76) #9
  %79 = extractvalue { i64, i32 } %78, 1
  %80 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %38, i32 %76) #9
  %81 = mul i32 %79, %80
  %82 = zext i32 %81 to i64
  %83 = load i32, i32* %43, align 8
  %84 = zext i32 %83 to i64
  %85 = mul nuw i64 %82, %84
  %86 = add i64 %85, %77
  %87 = add i32 %76, 1
  %88 = icmp ugt i32 %87, %30
  br i1 %88, label %89, label %75

89:                                               ; preds = %75, %57, %40, %49, %71
  %90 = phi i64 [ %74, %71 ], [ %52, %49 ], [ 0, %40 ], [ %68, %57 ], [ %86, %75 ]
  ret i64 %90
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2vk5Image17getLastLayerIndexERK23VkImageSubresourceRange(%"class.vk::Image"* nocapture readonly, %struct.VkImageSubresourceRange* nocapture readonly dereferenceable(20)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 4
  br label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, %4
  br label %13

13:                                               ; preds = %9, %6
  %14 = phi i32 [ %8, %6 ], [ %12, %9 ]
  %15 = add i32 %14, -1
  ret i32 %15
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2vk5Image15getLastMipLevelERK23VkImageSubresourceRange(%"class.vk::Image"* nocapture readonly, %struct.VkImageSubresourceRange* nocapture readonly dereferenceable(20)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 7
  %8 = load i32, i32* %7, align 8
  br label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, %4
  br label %13

13:                                               ; preds = %9, %6
  %14 = phi i32 [ %8, %6 ], [ %12, %9 ]
  %15 = add i32 %14, -1
  ret i32 %15
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 9
  br label %10

8:                                                ; preds = %10, %2
  %9 = phi i64 [ 0, %2 ], [ %21, %10 ]
  ret i64 %9

10:                                               ; preds = %6, %10
  %11 = phi i32 [ 0, %6 ], [ %22, %10 ]
  %12 = phi i64 [ 0, %6 ], [ %21, %10 ]
  %13 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %11) #9
  %14 = extractvalue { i64, i32 } %13, 1
  %15 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %11) #9
  %16 = mul i32 %14, %15
  %17 = zext i32 %16 to i64
  %18 = load i32, i32* %7, align 8
  %19 = zext i32 %18 to i64
  %20 = mul nuw i64 %17, %19
  %21 = add i64 %20, %12
  %22 = add nuw i32 %11, 1
  %23 = load i32, i32* %3, align 8
  %24 = icmp ult i32 %22, %23
  br i1 %24, label %10, label %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image24getMultiSampledLevelSizeE21VkImageAspectFlagBitsj(%"class.vk::Image"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %2) #9
  %5 = extractvalue { i64, i32 } %4, 1
  %6 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %2) #9
  %7 = mul i32 %5, %6
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 9
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = mul nuw i64 %8, %11
  ret i64 %12
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk5Image15canBindToMemoryEPNS_12DeviceMemoryE(%"class.vk::Image"* nocapture readonly, %"class.vk::DeviceMemory"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 13
  %4 = load i32, i32* %3, align 8
  %5 = tail call zeroext i1 @_ZNK2vk12DeviceMemory29checkExternalMemoryHandleTypeEj(%"class.vk::DeviceMemory"* %1, i32 %4) #9
  ret i1 %5
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk12DeviceMemory29checkExternalMemoryHandleTypeEj(%"class.vk::DeviceMemory"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image4bindEPNS_12DeviceMemoryEm(%"class.vk::Image"*, %"class.vk::DeviceMemory"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 0
  store %"class.vk::DeviceMemory"* %1, %"class.vk::DeviceMemory"** %4, align 8
  %5 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 2
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  %7 = load %"class.vk::Image"*, %"class.vk::Image"** %6, align 8
  %8 = icmp eq %"class.vk::Image"* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  %10 = ptrtoint %"class.vk::DeviceMemory"* %1 to i64
  %11 = bitcast %"class.vk::Image"* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %5, align 8
  %13 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %14 = tail call i32 @_ZNK2vk6Format10getAspectsEv(%"class.vk::Format"* %13) #9
  %15 = tail call i64 @_ZNK2vk5Image14getStorageSizeEj(%"class.vk::Image"* %0, i32 %14) #11
  %16 = add i64 %15, %12
  %17 = load %"class.vk::Image"*, %"class.vk::Image"** %6, align 8
  %18 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %17, i64 0, i32 2
  store i64 %16, i64* %18, align 8
  br label %19

19:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk5Image20getSubresourceLayoutEPK18VkImageSubresourceP19VkSubresourceLayout(%"class.vk::Image"*, %struct.VkImageSubresource* nocapture readonly, %struct.VkSubresourceLayout* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %6 [
    i32 1, label %8
    i32 2, label %8
    i32 4, label %8
    i32 16, label %8
    i32 32, label %8
    i32 64, label %8
  ]

6:                                                ; preds = %3
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 337, i32 %5) #9
  %7 = load i32, i32* %4, align 4
  br label %8

8:                                                ; preds = %3, %3, %3, %3, %3, %3, %6
  %9 = phi i32 [ %5, %3 ], [ %5, %3 ], [ %5, %3 ], [ %5, %3 ], [ %5, %3 ], [ %5, %3 ], [ %7, %6 ]
  %10 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %1, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = tail call i64 @_ZNK2vk5Image14getLayerOffsetE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %9, i32 %11) #9
  %16 = mul i64 %15, %14
  %17 = tail call i64 @_ZNK2vk5Image15getMemoryOffsetE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %9, i32 %11) #9
  %18 = add i64 %16, %17
  %19 = getelementptr inbounds %struct.VkSubresourceLayout, %struct.VkSubresourceLayout* %2, i64 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = load i32, i32* %10, align 4
  %21 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %9, i32 %20) #9
  %22 = extractvalue { i64, i32 } %21, 1
  %23 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %9, i32 %20) #9
  %24 = mul i32 %22, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 9
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = mul nuw i64 %25, %28
  %30 = getelementptr inbounds %struct.VkSubresourceLayout, %struct.VkSubresourceLayout* %2, i64 0, i32 1
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %10, align 4
  %32 = tail call i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %9, i32 %31) #11
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %struct.VkSubresourceLayout, %struct.VkSubresourceLayout* %2, i64 0, i32 2
  store i64 %33, i64* %34, align 8
  %35 = load i32, i32* %10, align 4
  %36 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %9, i32 %35) #11
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %struct.VkSubresourceLayout, %struct.VkSubresourceLayout* %2, i64 0, i32 4
  store i64 %37, i64* %38, align 8
  %39 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 %9) #11
  %40 = getelementptr inbounds %struct.VkSubresourceLayout, %struct.VkSubresourceLayout* %2, i64 0, i32 3
  store i64 %39, i64* %40, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw4warnEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image15getMemoryOffsetE21VkImageAspectFlagBitsjj(%"class.vk::Image"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = zext i32 %3 to i64
  %6 = tail call i64 @_ZNK2vk5Image14getLayerOffsetE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %2) #11
  %7 = mul i64 %6, %5
  %8 = tail call i64 @_ZNK2vk5Image15getMemoryOffsetE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %2) #11
  %9 = add i64 %7, %8
  ret i64 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkExtent3D, align 8
  %5 = alloca %"class.vk::Format", align 4
  %6 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 0
  %7 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %6, align 8
  %8 = icmp eq %"class.vk::DeviceMemory"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = tail call zeroext i1 @_ZNK2vk12DeviceMemory26hasExternalImagePropertiesEv(%"class.vk::DeviceMemory"* nonnull %7) #9
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %6, align 8
  %13 = tail call i32 @_ZNK2vk12DeviceMemory26externalImageRowPitchBytesE21VkImageAspectFlagBits(%"class.vk::DeviceMemory"* %12, i32 %1) #9
  br label %51

14:                                               ; preds = %3, %9
  %15 = bitcast %struct.VkExtent3D* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %15) #10
  %16 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %4, i64 0, i32 2
  %17 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %2) #11
  %18 = extractvalue { i64, i32 } %17, 0
  %19 = extractvalue { i64, i32 } %17, 1
  %20 = bitcast %struct.VkExtent3D* %4 to i64*
  store i64 %18, i64* %20, align 8
  store i32 %19, i32* %16, align 8
  %21 = bitcast %"class.vk::Format"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #10
  %22 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %5, i64 0, i32 0
  %23 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %24 = tail call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %23, i32 %1) #9
  store i32 %24, i32* %22, align 4
  %25 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* nonnull %5) #9
  %26 = trunc i64 %18 to i32
  br i1 %25, label %27, label %33

27:                                               ; preds = %14
  %28 = call { i64, i32 } @_ZNK2vk5Image19imageExtentInBlocksERK10VkExtent3D21VkImageAspectFlagBits(%"class.vk::Image"* %0, %struct.VkExtent3D* nonnull dereferenceable(12) %4, i32 %1) #11
  %29 = extractvalue { i64, i32 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = call i32 @_ZNK2vk6Format13bytesPerBlockEv(%"class.vk::Format"* nonnull %5) #9
  %32 = mul i32 %31, %30
  br label %49

33:                                               ; preds = %14
  %34 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 16
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* %23) #9
  %44 = xor i1 %43, true
  %45 = zext i1 %44 to i32
  br label %46

46:                                               ; preds = %33, %38, %42
  %47 = phi i32 [ 0, %38 ], [ %45, %42 ], [ 0, %33 ]
  %48 = call i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"* nonnull %5, i32 %26, i32 %47, i1 zeroext true) #9
  br label %49

49:                                               ; preds = %46, %27
  %50 = phi i32 [ %32, %27 ], [ %48, %46 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %15) #10
  br label %51

51:                                               ; preds = %49, %11
  %52 = phi i32 [ %13, %11 ], [ %50, %49 ]
  ret i32 %52
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkExtent3D, align 8
  %5 = alloca %"class.vk::Format", align 4
  %6 = bitcast %struct.VkExtent3D* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #10
  %7 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %4, i64 0, i32 2
  %8 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %2) #11
  %9 = extractvalue { i64, i32 } %8, 0
  %10 = extractvalue { i64, i32 } %8, 1
  %11 = bitcast %struct.VkExtent3D* %4 to i64*
  store i64 %9, i64* %11, align 8
  store i32 %10, i32* %7, align 8
  %12 = bitcast %"class.vk::Format"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %5, i64 0, i32 0
  %14 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %15 = tail call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %14, i32 %1) #9
  store i32 %15, i32* %13, align 4
  %16 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* nonnull %5) #9
  %17 = trunc i64 %9 to i32
  %18 = lshr i64 %9, 32
  %19 = trunc i64 %18 to i32
  br i1 %16, label %20, label %29

20:                                               ; preds = %3
  %21 = call { i64, i32 } @_ZNK2vk5Image19imageExtentInBlocksERK10VkExtent3D21VkImageAspectFlagBits(%"class.vk::Image"* %0, %struct.VkExtent3D* nonnull dereferenceable(12) %4, i32 %1) #11
  %22 = extractvalue { i64, i32 } %21, 0
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = call i32 @_ZNK2vk6Format13bytesPerBlockEv(%"class.vk::Format"* nonnull %5) #9
  %27 = mul i32 %26, %23
  %28 = mul i32 %27, %25
  br label %45

29:                                               ; preds = %3
  %30 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 16
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* %14) #9
  %40 = xor i1 %39, true
  %41 = zext i1 %40 to i32
  br label %42

42:                                               ; preds = %29, %34, %38
  %43 = phi i32 [ 0, %34 ], [ %41, %38 ], [ 0, %29 ]
  %44 = call i32 @_ZNK2vk6Format6sliceBEiiib(%"class.vk::Format"* nonnull %5, i32 %17, i32 %19, i32 %43, i1 zeroext true) #9
  br label %45

45:                                               ; preds = %42, %20
  %46 = phi i32 [ %28, %20 ], [ %44, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #10
  ret i32 %46
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk5Image6copyToEPS0_RK11VkImageCopy(%"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageCopy* nocapture readonly dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.vk::Format", align 4
  %5 = alloca %"class.vk::Format", align 4
  %6 = alloca %struct.VkImageSubresource, align 4
  %7 = alloca %struct.VkImageSubresource, align 4
  %8 = alloca %struct.VkImageSubresourceRange, align 4
  %9 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %11 [
    i32 1, label %12
    i32 2, label %12
    i32 4, label %12
    i32 16, label %12
    i32 32, label %12
    i32 64, label %12
  ]

11:                                               ; preds = %3
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 360, i32 %10) #9
  br label %12

12:                                               ; preds = %3, %3, %3, %3, %3, %3, %11
  %13 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 2, i32 0
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %15 [
    i32 1, label %17
    i32 2, label %17
    i32 4, label %17
    i32 16, label %17
    i32 32, label %17
    i32 64, label %17
  ]

15:                                               ; preds = %12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 370, i32 %14) #9
  %16 = load i32, i32* %13, align 4
  br label %17

17:                                               ; preds = %12, %12, %12, %12, %12, %12, %15
  %18 = phi i32 [ %14, %12 ], [ %14, %12 ], [ %14, %12 ], [ %14, %12 ], [ %14, %12 ], [ %14, %12 ], [ %16, %15 ]
  %19 = load i32, i32* %9, align 4
  %20 = bitcast %"class.vk::Format"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %4, i64 0, i32 0
  %22 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %23 = tail call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %22, i32 %19) #9
  store i32 %23, i32* %21, align 4
  %24 = bitcast %"class.vk::Format"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %5, i64 0, i32 0
  %26 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %1, i64 0, i32 5
  %27 = tail call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %26, i32 %18) #9
  store i32 %27, i32* %25, align 4
  %28 = call i32 @_ZNK2vk6Format13bytesPerBlockEv(%"class.vk::Format"* nonnull %4) #9
  %29 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %19, i32 %30) #11
  %32 = extractvalue { i64, i32 } %31, 0
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %32, 32
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 2, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %1, i32 %18, i32 %37) #11
  %39 = extractvalue { i64, i32 } %38, 0
  %40 = trunc i64 %39 to i32
  %41 = lshr i64 %39, 32
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 4
  %44 = call { i64, i32 } @_ZNK2vk5Image19imageExtentInBlocksERK10VkExtent3D21VkImageAspectFlagBits(%"class.vk::Image"* %0, %struct.VkExtent3D* dereferenceable(12) %43, i32 %19) #11
  %45 = extractvalue { i64, i32 } %44, 0
  %46 = extractvalue { i64, i32 } %44, 1
  %47 = trunc i64 %45 to i32
  %48 = lshr i64 %45, 32
  %49 = trunc i64 %48 to i32
  %50 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %1, i64 0, i32 4
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %51, 2
  %55 = icmp eq i32 %53, 2
  %56 = xor i1 %54, %55
  %57 = and i1 %54, %55
  %58 = load i32, i32* %29, align 4
  %59 = call i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %19, i32 %58) #11
  %60 = load i32, i32* %29, align 4
  %61 = call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %19, i32 %60) #11
  %62 = load i32, i32* %36, align 4
  %63 = call i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %1, i32 %18, i32 %62) #11
  %64 = load i32, i32* %36, align 4
  %65 = call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %1, i32 %18, i32 %64) #11
  %66 = call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 %19) #11
  %67 = call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %1, i32 %18) #11
  %68 = sext i32 %61 to i64
  %69 = select i1 %54, i64 %68, i64 %66
  %70 = sext i32 %65 to i64
  %71 = select i1 %55, i64 %70, i64 %67
  %72 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = select i1 %56, i32 %46, i32 %73
  br i1 %57, label %78, label %75

75:                                               ; preds = %17
  %76 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 9
  %77 = load i32, i32* %76, align 8
  br label %78

78:                                               ; preds = %17, %75
  %79 = phi i32 [ %77, %75 ], [ %46, %17 ]
  %80 = icmp eq i32 %79, 1
  %81 = icmp eq i32 %49, 1
  %82 = and i1 %81, %80
  %83 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %43, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, %33
  %86 = icmp eq i32 %84, %40
  %87 = and i1 %85, %86
  br i1 %87, label %88, label %94

88:                                               ; preds = %78
  %89 = call i32 @_ZNK2vk6Format10blockWidthEv(%"class.vk::Format"* nonnull %5) #9
  %90 = mul nsw i32 %89, %59
  %91 = call i32 @_ZNK2vk6Format10blockWidthEv(%"class.vk::Format"* nonnull %4) #9
  %92 = mul nsw i32 %91, %63
  %93 = icmp eq i32 %90, %92
  br label %94

94:                                               ; preds = %88, %78
  %95 = phi i1 [ false, %78 ], [ %93, %88 ]
  %96 = icmp eq i32 %49, %35
  %97 = and i1 %96, %95
  %98 = icmp eq i32 %49, %42
  %99 = and i1 %98, %97
  %100 = icmp eq i32 %61, %65
  %101 = and i1 %100, %99
  %102 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 1
  %103 = bitcast %struct.VkImageSubresource* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %103) #10
  %104 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %6, i64 0, i32 0
  %105 = load i32, i32* %9, align 4
  store i32 %105, i32* %104, align 4
  %106 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %6, i64 0, i32 1
  %107 = load i32, i32* %29, align 4
  store i32 %107, i32* %106, align 4
  %108 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %6, i64 0, i32 2
  %109 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %108, align 4
  %111 = call i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkOffset3D* dereferenceable(12) %102, %struct.VkImageSubresource* nonnull dereferenceable(12) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %103) #10
  %112 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 3
  %113 = bitcast %struct.VkImageSubresource* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %113) #10
  %114 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %7, i64 0, i32 0
  %115 = load i32, i32* %13, align 4
  store i32 %115, i32* %114, align 4
  %116 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %7, i64 0, i32 1
  %117 = load i32, i32* %36, align 4
  store i32 %117, i32* %116, align 4
  %118 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %7, i64 0, i32 2
  %119 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 2, i32 2
  %120 = load i32, i32* %119, align 4
  store i32 %120, i32* %118, align 4
  %121 = call i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %1, %struct.VkOffset3D* dereferenceable(12) %112, %struct.VkImageSubresource* nonnull dereferenceable(12) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %113) #10
  %122 = icmp eq i32 %74, 0
  br i1 %122, label %135, label %123

123:                                              ; preds = %94
  %124 = and i1 %80, %95
  %125 = mul i32 %28, %47
  %126 = zext i32 %125 to i64
  %127 = icmp eq i32 %79, 0
  %128 = icmp eq i32 %49, 0
  %129 = sext i32 %59 to i64
  %130 = sext i32 %63 to i64
  %131 = mul i32 %59, %49
  %132 = zext i32 %131 to i64
  %133 = mul i32 %79, %61
  %134 = zext i32 %133 to i64
  br label %147

135:                                              ; preds = %184, %94
  %136 = bitcast %struct.VkImageSubresourceRange* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %136) #10
  %137 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %8, i64 0, i32 0
  %138 = load i32, i32* %13, align 4
  store i32 %138, i32* %137, align 4
  %139 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %8, i64 0, i32 1
  %140 = load i32, i32* %36, align 4
  store i32 %140, i32* %139, align 4
  %141 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %8, i64 0, i32 2
  store i32 1, i32* %141, align 4
  %142 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %8, i64 0, i32 3
  %143 = load i32, i32* %119, align 4
  store i32 %143, i32* %142, align 4
  %144 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %8, i64 0, i32 4
  %145 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %2, i64 0, i32 2, i32 3
  %146 = load i32, i32* %145, align 4
  store i32 %146, i32* %144, align 4
  call void @_ZN2vk5Image15contentsChangedERK23VkImageSubresourceRangeNS0_22ContentsChangedContextE(%"class.vk::Image"* %1, %struct.VkImageSubresourceRange* nonnull dereferenceable(20) %8, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %136) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #10
  ret void

147:                                              ; preds = %184, %123
  %148 = phi i32 [ 0, %123 ], [ %187, %184 ]
  %149 = phi i8* [ %121, %123 ], [ %186, %184 ]
  %150 = phi i8* [ %111, %123 ], [ %185, %184 ]
  br i1 %82, label %151, label %152

151:                                              ; preds = %147
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %149, i8* align 1 %150, i64 %126, i1 false)
  br label %184

152:                                              ; preds = %147
  br i1 %124, label %153, label %154

153:                                              ; preds = %152
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %149, i8* align 1 %150, i64 %132, i1 false)
  br label %184

154:                                              ; preds = %152
  br i1 %101, label %155, label %156

155:                                              ; preds = %154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %149, i8* align 1 %150, i64 %134, i1 false)
  br label %184

156:                                              ; preds = %154
  br i1 %95, label %157, label %166

157:                                              ; preds = %156
  br i1 %127, label %184, label %158

158:                                              ; preds = %157, %158
  %159 = phi i32 [ %164, %158 ], [ 0, %157 ]
  %160 = phi i8* [ %162, %158 ], [ %149, %157 ]
  %161 = phi i8* [ %163, %158 ], [ %150, %157 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %160, i8* align 1 %161, i64 %132, i1 false)
  %162 = getelementptr inbounds i8, i8* %160, i64 %70
  %163 = getelementptr inbounds i8, i8* %161, i64 %68
  %164 = add nuw i32 %159, 1
  %165 = icmp eq i32 %164, %79
  br i1 %165, label %184, label %158

166:                                              ; preds = %156
  br i1 %127, label %184, label %167

167:                                              ; preds = %166, %171
  %168 = phi i32 [ %174, %171 ], [ 0, %166 ]
  %169 = phi i8* [ %173, %171 ], [ %149, %166 ]
  %170 = phi i8* [ %172, %171 ], [ %150, %166 ]
  br i1 %128, label %171, label %176

171:                                              ; preds = %176, %167
  %172 = getelementptr inbounds i8, i8* %170, i64 %68
  %173 = getelementptr inbounds i8, i8* %169, i64 %70
  %174 = add nuw i32 %168, 1
  %175 = icmp eq i32 %174, %79
  br i1 %175, label %184, label %167

176:                                              ; preds = %167, %176
  %177 = phi i32 [ %182, %176 ], [ 0, %167 ]
  %178 = phi i8* [ %181, %176 ], [ %169, %167 ]
  %179 = phi i8* [ %180, %176 ], [ %170, %167 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %178, i8* align 1 %179, i64 %126, i1 false)
  %180 = getelementptr inbounds i8, i8* %179, i64 %129
  %181 = getelementptr inbounds i8, i8* %178, i64 %130
  %182 = add nuw i32 %177, 1
  %183 = icmp eq i32 %182, %49
  br i1 %183, label %171, label %176

184:                                              ; preds = %171, %158, %157, %166, %153, %155, %151
  %185 = getelementptr inbounds i8, i8* %150, i64 %69
  %186 = getelementptr inbounds i8, i8* %149, i64 %71
  %187 = add nuw i32 %148, 1
  %188 = icmp eq i32 %187, %74
  br i1 %188, label %135, label %147
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk5Image9getFormatE21VkImageAspectFlagBits(%"class.vk::Image"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %4 = tail call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %3, i32 %1) #9
  ret i32 %4
}

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format13bytesPerBlockEv(%"class.vk::Format"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 6, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = lshr i32 %5, %2
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 6, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = lshr i32 %8, %2
  %10 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 6, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = lshr i32 %11, %2
  %13 = icmp eq i32 %6, 0
  %14 = select i1 %13, i32 1, i32 %6
  %15 = icmp eq i32 %9, 0
  %16 = select i1 %15, i32 1, i32 %9
  %17 = icmp eq i32 %12, 0
  %18 = select i1 %17, i32 1, i32 %12
  switch i32 %1, label %28 [
    i32 1, label %29
    i32 2, label %29
    i32 4, label %29
    i32 16, label %29
    i32 32, label %19
    i32 64, label %19
  ]

19:                                               ; preds = %3, %3
  %20 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, -2
  %23 = icmp eq i32 %22, 1000156002
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = lshr i32 %14, 1
  %26 = lshr i32 %16, 1
  br label %29

27:                                               ; preds = %19
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 781, i32 %21) #9
  br label %29

28:                                               ; preds = %3
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 785, i32 %1) #9
  br label %29

29:                                               ; preds = %24, %27, %3, %3, %3, %3, %28
  %30 = phi i32 [ %14, %28 ], [ %25, %24 ], [ %14, %27 ], [ %14, %3 ], [ %14, %3 ], [ %14, %3 ], [ %14, %3 ]
  %31 = phi i32 [ %16, %28 ], [ %26, %24 ], [ %16, %27 ], [ %16, %3 ], [ %16, %3 ], [ %16, %3 ], [ %16, %3 ]
  %32 = zext i32 %31 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %30 to i64
  %35 = or i64 %33, %34
  %36 = insertvalue { i64, i32 } undef, i64 %35, 0
  %37 = insertvalue { i64, i32 } %36, i32 %18, 1
  ret { i64, i32 } %37
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i64, i32 } @_ZNK2vk5Image19imageExtentInBlocksERK10VkExtent3D21VkImageAspectFlagBits(%"class.vk::Image"*, %struct.VkExtent3D* nocapture readonly dereferenceable(12), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.vk::Format", align 4
  %5 = bitcast %struct.VkExtent3D* %1 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = trunc i64 %6 to i32
  %8 = lshr i64 %6, 32
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %struct.VkExtent3D, %struct.VkExtent3D* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"class.vk::Format"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %15 = tail call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %14, i32 %2) #9
  store i32 %15, i32* %13, align 4
  %16 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* nonnull %4) #9
  br i1 %16, label %17, label %26

17:                                               ; preds = %3
  %18 = call i32 @_ZNK2vk6Format10blockWidthEv(%"class.vk::Format"* nonnull %4) #9
  %19 = call i32 @_ZNK2vk6Format11blockHeightEv(%"class.vk::Format"* nonnull %4) #9
  %20 = add i32 %7, -1
  %21 = add i32 %20, %18
  %22 = udiv i32 %21, %18
  %23 = add i32 %9, -1
  %24 = add i32 %23, %19
  %25 = udiv i32 %24, %19
  br label %26

26:                                               ; preds = %17, %3
  %27 = phi i32 [ %22, %17 ], [ %7, %3 ]
  %28 = phi i32 [ %25, %17 ], [ %9, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #10
  %29 = zext i32 %28 to i64
  %30 = shl nuw i64 %29, 32
  %31 = zext i32 %27 to i64
  %32 = or i64 %30, %31
  %33 = insertvalue { i64, i32 } undef, i64 %32, 0
  %34 = insertvalue { i64, i32 } %33, i32 %11, 1
  ret { i64, i32 } %34
}

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format10blockWidthEv(%"class.vk::Format"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"*, %struct.VkOffset3D* nocapture readonly dereferenceable(12), %struct.VkImageSubresource* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 0
  %7 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %6, align 8
  %8 = tail call i64 @_ZNK2vk5Image25texelOffsetBytesInStorageERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkOffset3D* dereferenceable(12) %1, %struct.VkImageSubresource* dereferenceable(12) %2) #11
  %9 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %2, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %2, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = tail call i64 @_ZNK2vk5Image14getLayerOffsetE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %5, i32 %10) #9
  %15 = mul i64 %14, %13
  %16 = tail call i64 @_ZNK2vk5Image15getMemoryOffsetE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %5, i32 %10) #9
  %17 = add i64 %16, %8
  %18 = add i64 %17, %15
  %19 = tail call i8* @_ZNK2vk12DeviceMemory16getOffsetPointerEm(%"class.vk::DeviceMemory"* %7, i64 %18) #9
  ret i8* %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image15contentsChangedERK23VkImageSubresourceRangeNS0_22ContentsChangedContextE(%"class.vk::Image"*, %struct.VkImageSubresourceRange* nocapture readonly dereferenceable(20), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.vk::Image::Subresource", align 4
  %5 = icmp eq i32 %2, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %81, label %11

11:                                               ; preds = %6, %3
  %12 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %24

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %22, 5
  br i1 %23, label %28, label %24

24:                                               ; preds = %11, %16, %20
  %25 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  %26 = load %"class.vk::Image"*, %"class.vk::Image"** %25, align 8
  %27 = icmp eq %"class.vk::Image"* %26, null
  br i1 %27, label %81, label %28

28:                                               ; preds = %24, %20
  %29 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %34 = load i32, i32* %33, align 4
  br label %39

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = add i32 %37, %30
  br label %39

39:                                               ; preds = %32, %35
  %40 = phi i32 [ %34, %32 ], [ %38, %35 ]
  %41 = add i32 %40, -1
  %42 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 7
  %47 = load i32, i32* %46, align 8
  br label %52

48:                                               ; preds = %39
  %49 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %50, %43
  br label %52

52:                                               ; preds = %45, %48
  %53 = phi i32 [ %47, %45 ], [ %51, %48 ]
  %54 = add i32 %53, -1
  %55 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 1
  %58 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 3
  %59 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 14, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %59) #9
  %60 = load i32, i32* %58, align 4
  %61 = icmp ugt i32 %60, %41
  br i1 %61, label %80, label %62

62:                                               ; preds = %52
  %63 = bitcast %"class.vk::Image::Subresource"* %4 to i8*
  %64 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %4, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %4, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %4, i64 0, i32 0, i32 2
  %67 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 15, i32 0
  br label %68

68:                                               ; preds = %62, %77
  %69 = phi i32 [ %60, %62 ], [ %78, %77 ]
  %70 = load i32, i32* %57, align 4
  %71 = icmp ugt i32 %70, %54
  br i1 %71, label %77, label %72

72:                                               ; preds = %68, %72
  %73 = phi i32 [ %75, %72 ], [ %70, %68 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %63) #10
  store i32 %56, i32* %64, align 4
  store i32 %73, i32* %65, align 4
  store i32 %69, i32* %66, align 4
  %74 = call { %"struct.std::__1::__hash_node_base.188"*, i8 } @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.184"* %67, %"class.vk::Image::Subresource"* nonnull dereferenceable(12) %4, %"class.vk::Image::Subresource"* nonnull dereferenceable(12) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %63) #10
  %75 = add i32 %73, 1
  %76 = icmp ugt i32 %75, %54
  br i1 %76, label %77, label %72

77:                                               ; preds = %72, %68
  %78 = add i32 %69, 1
  %79 = icmp ugt i32 %78, %41
  br i1 %79, label %80, label %68

80:                                               ; preds = %77, %52
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %59) #9
  br label %81

81:                                               ; preds = %24, %6, %80
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image4copyEPNS_6BufferERK17VkBufferImageCopyb(%"class.vk::Image"*, %"class.vk::Buffer"*, %struct.VkBufferImageCopy* nocapture readonly dereferenceable(56), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.vk::Format", align 4
  %6 = alloca %struct.VkExtent2D, align 4
  %7 = alloca %struct.VkImageSubresource, align 4
  %8 = alloca %struct.VkImageSubresourceRange, align 4
  %9 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %2, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %11 [
    i32 1, label %13
    i32 2, label %13
    i32 4, label %13
    i32 16, label %13
    i32 32, label %13
    i32 64, label %13
  ]

11:                                               ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 530, i32 %10) #9
  %12 = load i32, i32* %9, align 8
  br label %13

13:                                               ; preds = %4, %4, %4, %4, %4, %4, %11
  %14 = phi i32 [ %10, %4 ], [ %10, %4 ], [ %10, %4 ], [ %10, %4 ], [ %10, %4 ], [ %10, %4 ], [ %12, %11 ]
  %15 = bitcast %"class.vk::Format"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %18 = tail call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %17, i32 %14) #9
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %2, i64 0, i32 5
  %20 = tail call { i64, i32 } @_ZNK2vk5Image19imageExtentInBlocksERK10VkExtent3D21VkImageAspectFlagBits(%"class.vk::Image"* %0, %struct.VkExtent3D* dereferenceable(12) %19, i32 %14) #11
  %21 = extractvalue { i64, i32 } %20, 0
  %22 = extractvalue { i64, i32 } %20, 1
  %23 = trunc i64 %21 to i32
  %24 = lshr i64 %21, 32
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %23, 0
  %27 = icmp eq i32 %25, 0
  %28 = or i1 %26, %27
  %29 = icmp eq i32 %22, 0
  %30 = or i1 %29, %28
  br i1 %30, label %175, label %31

31:                                               ; preds = %13
  %32 = bitcast %struct.VkExtent2D* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  %33 = getelementptr inbounds %struct.VkExtent2D, %struct.VkExtent2D* %6, i64 0, i32 0
  store i32 %23, i32* %33, align 4
  %34 = getelementptr inbounds %struct.VkExtent2D, %struct.VkExtent2D* %6, i64 0, i32 1
  store i32 %25, i32* %34, align 4
  %35 = call i64 @_ZNK2vk5Image20bufferExtentInBlocksERK10VkExtent2DRK17VkBufferImageCopy(%"class.vk::Image"* %0, %struct.VkExtent2D* nonnull dereferenceable(8) %6, %struct.VkBufferImageCopy* dereferenceable(56) %2) #11
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %35, 32
  %38 = trunc i64 %37 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  %39 = call i32 @_ZNK2vk6Format13bytesPerBlockEv(%"class.vk::Format"* nonnull %5) #9
  %40 = mul i32 %39, %36
  %41 = mul i32 %40, %38
  %42 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %2, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = call i8* @_ZNK2vk6Buffer16getOffsetPointerEm(%"class.vk::Buffer"* %1, i64 %43) #9
  %45 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %2, i64 0, i32 4
  %46 = bitcast %struct.VkImageSubresource* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %46) #10
  %47 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %7, i64 0, i32 0
  %48 = load i32, i32* %9, align 8
  store i32 %48, i32* %47, align 4
  %49 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %7, i64 0, i32 1
  %50 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %2, i64 0, i32 3, i32 1
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %49, align 4
  %52 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %7, i64 0, i32 2
  %53 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %2, i64 0, i32 3, i32 2
  %54 = load i32, i32* %53, align 8
  store i32 %54, i32* %52, align 4
  %55 = call i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkOffset3D* dereferenceable(12) %45, %struct.VkImageSubresource* nonnull dereferenceable(12) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %46) #10
  %56 = select i1 %3, i8* %44, i8* %55
  %57 = select i1 %3, i8* %55, i8* %44
  %58 = load i32, i32* %50, align 4
  %59 = call i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %14, i32 %58) #11
  %60 = load i32, i32* %50, align 4
  %61 = call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %14, i32 %60) #11
  %62 = select i1 %3, i32 %41, i32 %61
  %63 = select i1 %3, i32 %61, i32 %41
  %64 = select i1 %3, i32 %40, i32 %59
  %65 = select i1 %3, i32 %59, i32 %40
  %66 = load i32, i32* %50, align 4
  %67 = call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %14, i32 %66) #11
  %68 = extractvalue { i64, i32 } %67, 0
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %22, 1
  %73 = icmp eq i32 %25, 1
  %74 = and i1 %72, %73
  %75 = icmp eq i32 %23, %69
  %76 = icmp eq i32 %59, %40
  %77 = and i1 %76, %75
  %78 = icmp eq i32 %25, %71
  %79 = and i1 %77, %78
  %80 = icmp eq i32 %61, %41
  %81 = and i1 %80, %79
  br i1 %74, label %82, label %84

82:                                               ; preds = %31
  %83 = mul i32 %39, %23
  br label %108

84:                                               ; preds = %31
  %85 = and i1 %72, %77
  br i1 %85, label %86, label %91

86:                                               ; preds = %84
  %87 = add i32 %25, -1
  %88 = mul i32 %40, %87
  %89 = mul i32 %39, %23
  %90 = add i32 %88, %89
  br label %108

91:                                               ; preds = %84
  br i1 %81, label %92, label %100

92:                                               ; preds = %91
  %93 = add i32 %22, -1
  %94 = mul i32 %41, %93
  %95 = add i32 %25, -1
  %96 = mul i32 %40, %95
  %97 = mul i32 %39, %23
  %98 = add i32 %96, %97
  %99 = add i32 %98, %94
  br label %108

100:                                              ; preds = %91
  br i1 %77, label %101, label %106

101:                                              ; preds = %100
  %102 = add i32 %25, -1
  %103 = mul i32 %40, %102
  %104 = mul i32 %39, %23
  %105 = add i32 %103, %104
  br label %108

106:                                              ; preds = %100
  %107 = mul i32 %39, %23
  br label %108

108:                                              ; preds = %86, %101, %106, %92, %82
  %109 = phi i32 [ %83, %82 ], [ %90, %86 ], [ %99, %92 ], [ %105, %101 ], [ %107, %106 ]
  %110 = zext i32 %109 to i64
  %111 = call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 %14) #11
  %112 = sext i32 %41 to i64
  %113 = select i1 %3, i64 %112, i64 %111
  %114 = select i1 %3, i64 %111, i64 %112
  %115 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %2, i64 0, i32 3, i32 3
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %126, label %118

118:                                              ; preds = %108
  %119 = and i1 %72, %77
  %120 = or i1 %119, %81
  %121 = or i1 %74, %120
  %122 = sext i32 %64 to i64
  %123 = sext i32 %65 to i64
  %124 = sext i32 %62 to i64
  %125 = sext i32 %63 to i64
  br label %128

126:                                              ; preds = %159, %108
  %127 = phi i32 [ 0, %108 ], [ %163, %159 ]
  br i1 %3, label %165, label %175

128:                                              ; preds = %118, %159
  %129 = phi i32 [ 0, %118 ], [ %162, %159 ]
  %130 = phi i8* [ %57, %118 ], [ %161, %159 ]
  %131 = phi i8* [ %56, %118 ], [ %160, %159 ]
  br i1 %121, label %132, label %133

132:                                              ; preds = %128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %130, i8* align 1 %131, i64 %110, i1 false)
  br label %159

133:                                              ; preds = %128
  br i1 %77, label %134, label %142

134:                                              ; preds = %133, %134
  %135 = phi i32 [ %140, %134 ], [ 0, %133 ]
  %136 = phi i8* [ %139, %134 ], [ %130, %133 ]
  %137 = phi i8* [ %138, %134 ], [ %131, %133 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %136, i8* align 1 %137, i64 %110, i1 false)
  %138 = getelementptr inbounds i8, i8* %137, i64 %124
  %139 = getelementptr inbounds i8, i8* %136, i64 %125
  %140 = add nuw i32 %135, 1
  %141 = icmp eq i32 %140, %22
  br i1 %141, label %159, label %134

142:                                              ; preds = %133, %146
  %143 = phi i32 [ %149, %146 ], [ 0, %133 ]
  %144 = phi i8* [ %148, %146 ], [ %130, %133 ]
  %145 = phi i8* [ %147, %146 ], [ %131, %133 ]
  br label %151

146:                                              ; preds = %151
  %147 = getelementptr inbounds i8, i8* %145, i64 %124
  %148 = getelementptr inbounds i8, i8* %144, i64 %125
  %149 = add nuw i32 %143, 1
  %150 = icmp eq i32 %149, %22
  br i1 %150, label %159, label %142

151:                                              ; preds = %151, %142
  %152 = phi i32 [ %157, %151 ], [ 0, %142 ]
  %153 = phi i8* [ %156, %151 ], [ %144, %142 ]
  %154 = phi i8* [ %155, %151 ], [ %145, %142 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %153, i8* align 1 %154, i64 %110, i1 false)
  %155 = getelementptr inbounds i8, i8* %154, i64 %122
  %156 = getelementptr inbounds i8, i8* %153, i64 %123
  %157 = add nuw i32 %152, 1
  %158 = icmp eq i32 %157, %25
  br i1 %158, label %146, label %151

159:                                              ; preds = %146, %134, %132
  %160 = getelementptr inbounds i8, i8* %131, i64 %113
  %161 = getelementptr inbounds i8, i8* %130, i64 %114
  %162 = add nuw i32 %129, 1
  %163 = load i32, i32* %115, align 4
  %164 = icmp ult i32 %162, %163
  br i1 %164, label %128, label %126

165:                                              ; preds = %126
  %166 = bitcast %struct.VkImageSubresourceRange* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %166) #10
  %167 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %8, i64 0, i32 0
  %168 = load i32, i32* %9, align 8
  store i32 %168, i32* %167, align 4
  %169 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %8, i64 0, i32 1
  %170 = load i32, i32* %50, align 4
  store i32 %170, i32* %169, align 4
  %171 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %8, i64 0, i32 2
  store i32 1, i32* %171, align 4
  %172 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %8, i64 0, i32 3
  %173 = load i32, i32* %53, align 8
  store i32 %173, i32* %172, align 4
  %174 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %8, i64 0, i32 4
  store i32 %127, i32* %174, align 4
  call void @_ZN2vk5Image15contentsChangedERK23VkImageSubresourceRangeNS0_22ContentsChangedContextE(%"class.vk::Image"* %0, %struct.VkImageSubresourceRange* nonnull dereferenceable(20) %8, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %166) #10
  br label %175

175:                                              ; preds = %126, %165, %13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image20bufferExtentInBlocksERK10VkExtent2DRK17VkBufferImageCopy(%"class.vk::Image"*, %struct.VkExtent2D* nocapture readonly dereferenceable(8), %struct.VkBufferImageCopy* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.vk::Format", align 4
  %5 = getelementptr inbounds %struct.VkExtent2D, %struct.VkExtent2D* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.VkExtent2D, %struct.VkExtent2D* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %2, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %"class.vk::Format"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %4, i64 0, i32 0
  %13 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %14 = tail call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %13, i32 %10) #9
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %2, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %26, label %18

18:                                               ; preds = %3
  %19 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* nonnull %4) #9
  br i1 %19, label %20, label %26

20:                                               ; preds = %18
  %21 = call i32 @_ZNK2vk6Format10blockWidthEv(%"class.vk::Format"* nonnull %4) #9
  %22 = load i32, i32* %15, align 8
  %23 = add i32 %21, -1
  %24 = add i32 %23, %22
  %25 = udiv i32 %24, %21
  br label %26

26:                                               ; preds = %3, %18, %20
  %27 = phi i32 [ %25, %20 ], [ %16, %18 ], [ %6, %3 ]
  %28 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %2, i64 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %39, label %31

31:                                               ; preds = %26
  %32 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* nonnull %4) #9
  br i1 %32, label %33, label %39

33:                                               ; preds = %31
  %34 = call i32 @_ZNK2vk6Format11blockHeightEv(%"class.vk::Format"* nonnull %4) #9
  %35 = load i32, i32* %28, align 4
  %36 = add i32 %34, -1
  %37 = add i32 %36, %35
  %38 = udiv i32 %37, %34
  br label %39

39:                                               ; preds = %26, %31, %33
  %40 = phi i32 [ %38, %33 ], [ %29, %31 ], [ %8, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  %41 = zext i32 %40 to i64
  %42 = shl nuw i64 %41, 32
  %43 = zext i32 %27 to i64
  %44 = or i64 %42, %43
  ret i64 %44
}

; Function Attrs: optsize
declare i8* @_ZNK2vk6Buffer16getOffsetPointerEm(%"class.vk::Buffer"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image6copyToEPNS_6BufferERK17VkBufferImageCopy(%"class.vk::Image"*, %"class.vk::Buffer"*, %struct.VkBufferImageCopy* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2vk5Image4copyEPNS_6BufferERK17VkBufferImageCopyb(%"class.vk::Image"* %0, %"class.vk::Buffer"* %1, %struct.VkBufferImageCopy* dereferenceable(56) %2, i1 zeroext false) #11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image8copyFromEPNS_6BufferERK17VkBufferImageCopy(%"class.vk::Image"*, %"class.vk::Buffer"*, %struct.VkBufferImageCopy* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2vk5Image4copyEPNS_6BufferERK17VkBufferImageCopyb(%"class.vk::Image"* %0, %"class.vk::Buffer"* %1, %struct.VkBufferImageCopy* dereferenceable(56) %2, i1 zeroext true) #11
  ret void
}

; Function Attrs: optsize
declare i8* @_ZNK2vk12DeviceMemory16getOffsetPointerEm(%"class.vk::DeviceMemory"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image25texelOffsetBytesInStorageERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"*, %struct.VkOffset3D* nocapture readonly dereferenceable(12), %struct.VkImageSubresource* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.vk::Format", align 4
  %5 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %2, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = tail call { i64, i32 } @_ZNK2vk5Image19imageOffsetInBlocksERK10VkOffset3D21VkImageAspectFlagBits(%"class.vk::Image"* %0, %struct.VkOffset3D* dereferenceable(12) %1, i32 %6) #11
  %8 = extractvalue { i64, i32 } %7, 0
  %9 = extractvalue { i64, i32 } %7, 1
  %10 = trunc i64 %8 to i32
  %11 = lshr i64 %8, 32
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 16
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %23 = tail call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* %22) #9
  %24 = xor i1 %23, true
  %25 = zext i1 %24 to i32
  br label %26

26:                                               ; preds = %3, %17, %21
  %27 = phi i32 [ 0, %17 ], [ %25, %21 ], [ 0, %3 ]
  %28 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %2, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %6, i32 %29) #11
  %31 = mul nsw i32 %30, %9
  %32 = add nsw i32 %27, %12
  %33 = load i32, i32* %28, align 4
  %34 = tail call i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %6, i32 %33) #11
  %35 = mul nsw i32 %34, %32
  %36 = add nsw i32 %35, %31
  %37 = add nsw i32 %27, %10
  %38 = bitcast %"class.vk::Format"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #10
  %39 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %40 = tail call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %39, i32 %6) #9
  %41 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %4, i64 0, i32 0
  store i32 %40, i32* %41, align 4
  %42 = call i32 @_ZNK2vk6Format13bytesPerBlockEv(%"class.vk::Format"* nonnull %4) #9
  %43 = mul nsw i32 %42, %37
  %44 = add nsw i32 %36, %43
  %45 = sext i32 %44 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #10
  ret i64 %45
}

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format11blockHeightEv(%"class.vk::Format"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i64, i32 } @_ZNK2vk5Image19imageOffsetInBlocksERK10VkOffset3D21VkImageAspectFlagBits(%"class.vk::Image"*, %struct.VkOffset3D* nocapture readonly dereferenceable(12), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.vk::Format", align 4
  %5 = bitcast %struct.VkOffset3D* %1 to i64*
  %6 = load i64, i64* %5, align 4
  %7 = trunc i64 %6 to i32
  %8 = lshr i64 %6, 32
  %9 = trunc i64 %8 to i32
  %10 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %"class.vk::Format"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %4, i64 0, i32 0
  %14 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %15 = tail call i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* %14, i32 %2) #9
  store i32 %15, i32* %13, align 4
  %16 = call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* nonnull %4) #9
  br i1 %16, label %17, label %22

17:                                               ; preds = %3
  %18 = call i32 @_ZNK2vk6Format10blockWidthEv(%"class.vk::Format"* nonnull %4) #9
  %19 = call i32 @_ZNK2vk6Format11blockHeightEv(%"class.vk::Format"* nonnull %4) #9
  %20 = sdiv i32 %7, %18
  %21 = sdiv i32 %9, %19
  br label %22

22:                                               ; preds = %17, %3
  %23 = phi i32 [ %20, %17 ], [ %7, %3 ]
  %24 = phi i32 [ %21, %17 ], [ %9, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #10
  %25 = zext i32 %24 to i64
  %26 = shl nuw i64 %25, 32
  %27 = zext i32 %23 to i64
  %28 = or i64 %26, %27
  %29 = insertvalue { i64, i32 } undef, i64 %28, 0
  %30 = insertvalue { i64, i32 } %29, i32 %11, 1
  ret { i64, i32 } %30
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk5Image10borderSizeEv(%"class.vk::Image"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %15

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %12 = tail call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* %11) #9
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %1, %10, %6
  %16 = phi i32 [ 0, %6 ], [ %14, %10 ], [ 0, %1 ]
  ret i32 %16
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk5Image6isCubeEv(%"class.vk::Image"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i1 [ false, %1 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk12DeviceMemory26hasExternalImagePropertiesEv(%"class.vk::DeviceMemory"*) local_unnamed_addr #2

; Function Attrs: optsize
declare i32 @_ZNK2vk12DeviceMemory26externalImageRowPitchBytesE21VkImageAspectFlagBits(%"class.vk::DeviceMemory"*, i32) local_unnamed_addr #2

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"*, i32, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format6sliceBEiiib(%"class.vk::Format"*, i32, i32, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZNK2vk5Image3endEv(%"class.vk::Image"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 0
  %3 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %2, align 8
  %4 = tail call i64 @_ZNK2vk12DeviceMemory25getCommittedMemoryInBytesEv(%"class.vk::DeviceMemory"* %3) #9
  %5 = add i64 %4, 1
  %6 = tail call i8* @_ZNK2vk12DeviceMemory16getOffsetPointerEm(%"class.vk::DeviceMemory"* %3, i64 %5) #9
  ret i8* %6
}

; Function Attrs: optsize
declare i64 @_ZNK2vk12DeviceMemory25getCommittedMemoryInBytesEv(%"class.vk::DeviceMemory"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image15getMemoryOffsetE21VkImageAspectFlagBits(%"class.vk::Image"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 0
  %4 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %3, align 8
  %5 = icmp eq %"class.vk::DeviceMemory"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK2vk12DeviceMemory26hasExternalImagePropertiesEv(%"class.vk::DeviceMemory"* nonnull %4) #9
  br i1 %7, label %8, label %11

8:                                                ; preds = %6
  %9 = load %"class.vk::DeviceMemory"*, %"class.vk::DeviceMemory"** %3, align 8
  %10 = tail call i64 @_ZNK2vk12DeviceMemory25externalImageMemoryOffsetE21VkImageAspectFlagBits(%"class.vk::DeviceMemory"* %9, i32 %1) #9
  br label %55

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5, i32 0
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %52 [
    i32 128, label %14
    i32 129, label %14
    i32 130, label %14
    i32 1000156002, label %25
    i32 1000156003, label %41
  ]

14:                                               ; preds = %11, %11, %11
  %15 = icmp eq i32 %1, 4
  br i1 %15, label %16, label %52

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 2) #9
  %20 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = mul i64 %19, %22
  %24 = add i64 %23, %18
  br label %55

25:                                               ; preds = %11
  %26 = icmp eq i32 %1, 64
  br i1 %26, label %27, label %41

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 32) #9
  %31 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = mul i64 %30, %33
  %35 = add i64 %34, %29
  %36 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 16) #9
  %37 = load i32, i32* %31, align 4
  %38 = zext i32 %37 to i64
  %39 = mul i64 %36, %38
  %40 = add i64 %35, %39
  br label %55

41:                                               ; preds = %25, %11
  %42 = icmp eq i32 %1, 32
  %43 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 2
  %44 = load i64, i64* %43, align 8
  br i1 %42, label %45, label %55

45:                                               ; preds = %41
  %46 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 16) #9
  %47 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = mul i64 %46, %49
  %51 = add i64 %50, %44
  br label %55

52:                                               ; preds = %11, %14
  %53 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 2
  %54 = load i64, i64* %53, align 8
  br label %55

55:                                               ; preds = %41, %52, %45, %27, %16, %8
  %56 = phi i64 [ %10, %8 ], [ %54, %52 ], [ %51, %45 ], [ %40, %27 ], [ %24, %16 ], [ %44, %41 ]
  ret i64 %56
}

; Function Attrs: optsize
declare i64 @_ZNK2vk12DeviceMemory25externalImageMemoryOffsetE21VkImageAspectFlagBits(%"class.vk::DeviceMemory"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image15getMemoryOffsetE21VkImageAspectFlagBitsj(%"class.vk::Image"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i64 @_ZNK2vk5Image15getMemoryOffsetE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 %1) #11
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 9
  br label %10

8:                                                ; preds = %10, %3
  %9 = phi i64 [ %4, %3 ], [ %21, %10 ]
  ret i64 %9

10:                                               ; preds = %10, %6
  %11 = phi i32 [ 0, %6 ], [ %22, %10 ]
  %12 = phi i64 [ %4, %6 ], [ %21, %10 ]
  %13 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %11) #9
  %14 = extractvalue { i64, i32 } %13, 1
  %15 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %11) #9
  %16 = mul i32 %14, %15
  %17 = zext i32 %16 to i64
  %18 = load i32, i32* %7, align 8
  %19 = zext i32 %18 to i64
  %20 = mul nuw i64 %17, %19
  %21 = add i64 %20, %12
  %22 = add nuw i32 %11, 1
  %23 = icmp eq i32 %22, %2
  br i1 %23, label %8, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image14getLayerOffsetE21VkImageAspectFlagBitsj(%"class.vk::Image"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %7
  %13 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %2) #11
  %14 = sext i32 %13 to i64
  br label %17

15:                                               ; preds = %7, %3
  %16 = tail call i64 @_ZNK2vk5Image12getLayerSizeE21VkImageAspectFlagBits(%"class.vk::Image"* %0, i32 %1) #11
  br label %17

17:                                               ; preds = %15, %12
  %18 = phi i64 [ %14, %12 ], [ %16, %15 ]
  ret i64 %18
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk5Image15getMipLevelSizeE21VkImageAspectFlagBitsj(%"class.vk::Image"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %2) #11
  %5 = extractvalue { i64, i32 } %4, 1
  %6 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %1, i32 %2) #11
  %7 = mul i32 %5, %6
  %8 = zext i32 %7 to i64
  ret i64 %8
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk5Image9is3DSliceEv(%"class.vk::Image"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 32
  %9 = icmp ne i32 %8, 0
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.vk::Image"* @_ZNK2vk5Image15getSampledImageERKNS_6FormatE(%"class.vk::Image"* readonly, %"class.vk::Format"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* %1) #9
  %4 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  %5 = load %"class.vk::Image"*, %"class.vk::Image"** %4, align 8
  %6 = icmp eq %"class.vk::Image"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = select i1 %3, %"class.vk::Image"* %5, %"class.vk::Image"* %0
  ret %"class.vk::Image"* %8

9:                                                ; preds = %2
  ret %"class.vk::Image"* %0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk5Image6blitToEPS0_RK11VkImageBlit8VkFilter(%"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageBlit* nocapture readonly dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.VkImageBlit, align 8
  %6 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %7 = load %"class.vk::Device"*, %"class.vk::Device"** %6, align 8
  %8 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %8, align 8
  %10 = bitcast %struct.VkImageBlit* %5 to i8*
  %11 = bitcast %struct.VkImageBlit* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 4 %11, i64 80, i1 false)
  tail call void @_ZN2sw7Blitter4blitEPKN2vk5ImageEPS2_11VkImageBlit8VkFilter(%"class.sw::Blitter"* %9, %"class.vk::Image"* %0, %"class.vk::Image"* %1, %struct.VkImageBlit* nonnull byval(%struct.VkImageBlit) align 8 %5, i32 %3) #9
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Blitter4blitEPKN2vk5ImageEPS2_11VkImageBlit8VkFilter(%"class.sw::Blitter"*, %"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageBlit* byval(%struct.VkImageBlit) align 8, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk5Image6copyToEPhj(%"class.vk::Image"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %5 = load %"class.vk::Device"*, %"class.vk::Device"** %4, align 8
  %6 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %5, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %6, align 8
  tail call void @_ZN2sw7Blitter4copyEPKN2vk5ImageEPhj(%"class.sw::Blitter"* %7, %"class.vk::Image"* %0, i8* %1, i32 %2) #9
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Blitter4copyEPKN2vk5ImageEPhj(%"class.sw::Blitter"*, %"class.vk::Image"*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk5Image9resolveToEPS0_RK14VkImageResolve(%"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageResolve* nocapture readonly dereferenceable(68)) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkImageResolve, align 8
  %5 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %6 = load %"class.vk::Device"*, %"class.vk::Device"** %5, align 8
  %7 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %7, align 8
  %9 = bitcast %struct.VkImageResolve* %4 to i8*
  %10 = bitcast %struct.VkImageResolve* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 4 %10, i64 68, i1 false)
  tail call void @_ZN2sw7Blitter7resolveEPKN2vk5ImageEPS2_14VkImageResolve(%"class.sw::Blitter"* %8, %"class.vk::Image"* %0, %"class.vk::Image"* %1, %struct.VkImageResolve* nonnull byval(%struct.VkImageResolve) align 8 %4) #9
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Blitter7resolveEPKN2vk5ImageEPS2_14VkImageResolve(%"class.sw::Blitter"*, %"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageResolve* byval(%struct.VkImageResolve) align 8) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk5Image21resolveDepthStencilToEPKNS_9ImageViewEPS1_RK39VkSubpassDescriptionDepthStencilResolve(%"class.vk::Image"* nocapture readonly, %"class.vk::ImageView"*, %"class.vk::ImageView"*, %struct.VkSubpassDescriptionDepthStencilResolve* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %6 = load %"class.vk::Device"*, %"class.vk::Device"** %5, align 8
  %7 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %6, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %7, align 8
  tail call void @_ZN2sw7Blitter19resolveDepthStencilEPKN2vk9ImageViewEPS2_RK39VkSubpassDescriptionDepthStencilResolve(%"class.sw::Blitter"* %8, %"class.vk::ImageView"* %1, %"class.vk::ImageView"* %2, %struct.VkSubpassDescriptionDepthStencilResolve* dereferenceable(32) %3) #9
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Blitter19resolveDepthStencilEPKN2vk9ImageViewEPS2_RK39VkSubpassDescriptionDepthStencilResolve(%"class.sw::Blitter"*, %"class.vk::ImageView"*, %"class.vk::ImageView"*, %struct.VkSubpassDescriptionDepthStencilResolve* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk5Image14getClearFormatEv(%"class.vk::Image"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %3 = tail call zeroext i1 @_ZNK2vk6Format27isSignedUnnormalizedIntegerEv(%"class.vk::Format"* %2) #9
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK2vk6Format29isUnsignedUnnormalizedIntegerEv(%"class.vk::Format"* %2) #9
  %6 = select i1 %5, i32 107, i32 109
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi i32 [ 108, %1 ], [ %6, %4 ]
  ret i32 %8
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format27isSignedUnnormalizedIntegerEv(%"class.vk::Format"*) local_unnamed_addr #2

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format29isUnsignedUnnormalizedIntegerEv(%"class.vk::Format"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image5clearEPv8VkFormatRKNS_6FormatERK23VkImageSubresourceRangeRK8VkRect2D(%"class.vk::Image"*, i8*, i32, %"class.vk::Format"* dereferenceable(4), %struct.VkImageSubresourceRange* dereferenceable(20), %struct.VkRect2D* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %8 = load %"class.vk::Device"*, %"class.vk::Device"** %7, align 8
  %9 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %8, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %9, align 8
  tail call void @_ZN2sw7Blitter5clearEPvN2vk6FormatEPNS2_5ImageERKS3_RK23VkImageSubresourceRangePK8VkRect2D(%"class.sw::Blitter"* %10, i8* %1, i32 %2, %"class.vk::Image"* %0, %"class.vk::Format"* dereferenceable(4) %3, %struct.VkImageSubresourceRange* dereferenceable(20) %4, %struct.VkRect2D* %5) #9
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Blitter5clearEPvN2vk6FormatEPNS2_5ImageERKS3_RK23VkImageSubresourceRangePK8VkRect2D(%"class.sw::Blitter"*, i8*, i32, %"class.vk::Image"*, %"class.vk::Format"* dereferenceable(4), %struct.VkImageSubresourceRange* dereferenceable(20), %struct.VkRect2D*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image5clearERK17VkClearColorValueRK23VkImageSubresourceRange(%"class.vk::Image"*, %union.VkClearColorValue* dereferenceable(16), %struct.VkImageSubresourceRange* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %5 = load %"class.vk::Device"*, %"class.vk::Device"** %4, align 8
  %6 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %5, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %6, align 8
  %8 = bitcast %union.VkClearColorValue* %1 to i8*
  %9 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %10 = tail call zeroext i1 @_ZNK2vk6Format27isSignedUnnormalizedIntegerEv(%"class.vk::Format"* %9) #9
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = tail call zeroext i1 @_ZNK2vk6Format29isUnsignedUnnormalizedIntegerEv(%"class.vk::Format"* %9) #9
  %13 = select i1 %12, i32 107, i32 109
  br label %14

14:                                               ; preds = %3, %11
  %15 = phi i32 [ 108, %3 ], [ %13, %11 ]
  tail call void @_ZN2sw7Blitter5clearEPvN2vk6FormatEPNS2_5ImageERKS3_RK23VkImageSubresourceRangePK8VkRect2D(%"class.sw::Blitter"* %7, i8* %8, i32 %15, %"class.vk::Image"* %0, %"class.vk::Format"* dereferenceable(4) %9, %struct.VkImageSubresourceRange* dereferenceable(20) %2, %struct.VkRect2D* null) #9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image5clearERK24VkClearDepthStencilValueRK23VkImageSubresourceRange(%"class.vk::Image"*, %struct.VkClearDepthStencilValue* dereferenceable(8), %struct.VkImageSubresourceRange* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.VkImageSubresourceRange, align 4
  %5 = alloca %struct.VkImageSubresourceRange, align 4
  %6 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %2, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = bitcast %struct.VkImageSubresourceRange* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %11) #10
  %12 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %4, i64 0, i32 0
  %13 = bitcast %struct.VkImageSubresourceRange* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* align 4 %13, i64 20, i1 false)
  store i32 2, i32* %12, align 4
  %14 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %15 = load %"class.vk::Device"*, %"class.vk::Device"** %14, align 8
  %16 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %16, align 8
  %18 = bitcast %struct.VkClearDepthStencilValue* %1 to i8*
  %19 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  call void @_ZN2sw7Blitter5clearEPvN2vk6FormatEPNS2_5ImageERKS3_RK23VkImageSubresourceRangePK8VkRect2D(%"class.sw::Blitter"* %17, i8* %18, i32 126, %"class.vk::Image"* %0, %"class.vk::Format"* dereferenceable(4) %19, %struct.VkImageSubresourceRange* nonnull dereferenceable(20) %4, %struct.VkRect2D* null) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %11) #10
  %20 = load i32, i32* %6, align 4
  br label %21

21:                                               ; preds = %3, %10
  %22 = phi i32 [ %7, %3 ], [ %20, %10 ]
  %23 = and i32 %22, 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = bitcast %struct.VkImageSubresourceRange* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %26) #10
  %27 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %5, i64 0, i32 0
  %28 = bitcast %struct.VkImageSubresourceRange* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 %28, i64 20, i1 false)
  store i32 4, i32* %27, align 4
  %29 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %30 = load %"class.vk::Device"*, %"class.vk::Device"** %29, align 8
  %31 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %31, align 8
  %33 = getelementptr inbounds %struct.VkClearDepthStencilValue, %struct.VkClearDepthStencilValue* %1, i64 0, i32 1
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  call void @_ZN2sw7Blitter5clearEPvN2vk6FormatEPNS2_5ImageERKS3_RK23VkImageSubresourceRangePK8VkRect2D(%"class.sw::Blitter"* %32, i8* %34, i32 127, %"class.vk::Image"* %0, %"class.vk::Format"* dereferenceable(4) %35, %struct.VkImageSubresourceRange* nonnull dereferenceable(20) %5, %struct.VkRect2D* null) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %26) #10
  br label %36

36:                                               ; preds = %21, %25
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image5clearERK12VkClearValueRKNS_6FormatERK8VkRect2DRK23VkImageSubresourceRange(%"class.vk::Image"*, %union.VkClearValue* dereferenceable(16), %"class.vk::Format"* dereferenceable(4), %struct.VkRect2D* dereferenceable(16), %struct.VkImageSubresourceRange* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.VkImageSubresourceRange, align 4
  %7 = alloca %struct.VkImageSubresourceRange, align 4
  %8 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %4, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %24

11:                                               ; preds = %5
  %12 = bitcast %union.VkClearValue* %1 to i8*
  %13 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %14 = tail call zeroext i1 @_ZNK2vk6Format27isSignedUnnormalizedIntegerEv(%"class.vk::Format"* %13) #9
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = tail call zeroext i1 @_ZNK2vk6Format29isUnsignedUnnormalizedIntegerEv(%"class.vk::Format"* %13) #9
  %17 = select i1 %16, i32 107, i32 109
  br label %18

18:                                               ; preds = %11, %15
  %19 = phi i32 [ 108, %11 ], [ %17, %15 ]
  %20 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %21 = load %"class.vk::Device"*, %"class.vk::Device"** %20, align 8
  %22 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %22, align 8
  tail call void @_ZN2sw7Blitter5clearEPvN2vk6FormatEPNS2_5ImageERKS3_RK23VkImageSubresourceRangePK8VkRect2D(%"class.sw::Blitter"* %23, i8* %12, i32 %19, %"class.vk::Image"* %0, %"class.vk::Format"* dereferenceable(4) %2, %struct.VkImageSubresourceRange* dereferenceable(20) %4, %struct.VkRect2D* %3) #9
  br label %51

24:                                               ; preds = %5
  %25 = and i32 %9, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %24
  %28 = bitcast %struct.VkImageSubresourceRange* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %28) #10
  %29 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %6, i64 0, i32 0
  %30 = bitcast %struct.VkImageSubresourceRange* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 %30, i64 20, i1 false)
  store i32 2, i32* %29, align 4
  %31 = bitcast %union.VkClearValue* %1 to i8*
  %32 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %33 = load %"class.vk::Device"*, %"class.vk::Device"** %32, align 8
  %34 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %34, align 8
  call void @_ZN2sw7Blitter5clearEPvN2vk6FormatEPNS2_5ImageERKS3_RK23VkImageSubresourceRangePK8VkRect2D(%"class.sw::Blitter"* %35, i8* %31, i32 126, %"class.vk::Image"* %0, %"class.vk::Format"* dereferenceable(4) %2, %struct.VkImageSubresourceRange* nonnull dereferenceable(20) %6, %struct.VkRect2D* %3) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %28) #10
  %36 = load i32, i32* %8, align 4
  br label %37

37:                                               ; preds = %24, %27
  %38 = phi i32 [ %9, %24 ], [ %36, %27 ]
  %39 = and i32 %38, 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = bitcast %struct.VkImageSubresourceRange* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %42) #10
  %43 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %7, i64 0, i32 0
  %44 = bitcast %struct.VkImageSubresourceRange* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 %44, i64 20, i1 false)
  store i32 4, i32* %43, align 4
  %45 = getelementptr inbounds %union.VkClearValue, %union.VkClearValue* %1, i64 0, i32 0, i32 0, i64 1
  %46 = bitcast float* %45 to i8*
  %47 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %48 = load %"class.vk::Device"*, %"class.vk::Device"** %47, align 8
  %49 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %50 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %49, align 8
  call void @_ZN2sw7Blitter5clearEPvN2vk6FormatEPNS2_5ImageERKS3_RK23VkImageSubresourceRangePK8VkRect2D(%"class.sw::Blitter"* %50, i8* %46, i32 127, %"class.vk::Image"* %0, %"class.vk::Format"* dereferenceable(4) %2, %struct.VkImageSubresourceRange* nonnull dereferenceable(20) %7, %struct.VkRect2D* %3) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %42) #10
  br label %51

51:                                               ; preds = %37, %41, %18
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk5Image21requiresPreprocessingEv(%"class.vk::Image"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 16
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 4
  %13 = icmp ugt i32 %12, 5
  br i1 %13, label %18, label %14

14:                                               ; preds = %1, %10, %6
  %15 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  %16 = load %"class.vk::Image"*, %"class.vk::Image"** %15, align 8
  %17 = icmp ne %"class.vk::Image"* %16, null
  br label %18

18:                                               ; preds = %14, %10
  %19 = phi i1 [ true, %10 ], [ %17, %14 ]
  ret i1 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image18prepareForSamplingERK23VkImageSubresourceRange(%"class.vk::Image"*, %struct.VkImageSubresourceRange* nocapture readonly dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.VkImageSubresource, align 4
  %4 = alloca %"class.vk::Image::Subresource", align 4
  %5 = alloca %"class.vk::Image::Subresource", align 4
  %6 = alloca %"class.vk::Image::Subresource", align 4
  %7 = alloca %"class.vk::Image::Subresource", align 4
  %8 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %20

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %18 = load i32, i32* %17, align 4
  %19 = icmp ugt i32 %18, 5
  br i1 %19, label %24, label %20

20:                                               ; preds = %2, %12, %16
  %21 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  %22 = load %"class.vk::Image"*, %"class.vk::Image"** %21, align 8
  %23 = icmp eq %"class.vk::Image"* %22, null
  br i1 %23, label %162, label %24

24:                                               ; preds = %20, %16
  %25 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 4
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %31

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %30 = load i32, i32* %29, align 4
  br label %35

31:                                               ; preds = %24
  %32 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, %26
  br label %35

35:                                               ; preds = %28, %31
  %36 = phi i32 [ %30, %28 ], [ %34, %31 ]
  %37 = add i32 %36, -1
  %38 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %41, label %46

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 7
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  br label %50

46:                                               ; preds = %35
  %47 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, %39
  br label %50

50:                                               ; preds = %41, %46
  %51 = phi i32 [ %45, %41 ], [ %48, %46 ]
  %52 = phi i32 [ %43, %41 ], [ %49, %46 ]
  %53 = add i32 %52, -1
  %54 = bitcast %struct.VkImageSubresource* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %54) #10
  %55 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %3, i64 0, i32 0
  %56 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %3, i64 0, i32 1
  %57 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %3, i64 0, i32 2
  %58 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  store i32 %59, i32* %55, align 4
  %60 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 1
  store i32 %51, i32* %56, align 4
  %61 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %1, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %57, align 4
  %63 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 14, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %63) #9
  %64 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 15
  %65 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 15, i32 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %161, label %68

68:                                               ; preds = %50
  %69 = load i32, i32* %61, align 4
  store i32 %69, i32* %57, align 4
  %70 = icmp ugt i32 %69, %37
  br i1 %70, label %91, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.vk::Image::Subresource"* %4 to i8*
  %73 = getelementptr inbounds %"class.std::__1::unordered_set.183", %"class.std::__1::unordered_set.183"* %64, i64 0, i32 0
  br label %74

74:                                               ; preds = %71, %86
  %75 = phi i32 [ %69, %71 ], [ %87, %86 ]
  %76 = load i32, i32* %60, align 4
  store i32 %76, i32* %56, align 4
  %77 = icmp ugt i32 %76, %53
  br i1 %77, label %86, label %78

78:                                               ; preds = %74, %83
  %79 = phi i32 [ %84, %83 ], [ %76, %74 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %72) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %54, i64 12, i1 false) #10
  %80 = call %"struct.std::__1::__hash_node_base.188"* @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(%"class.std::__1::__hash_table.184"* %73, %"class.vk::Image::Subresource"* nonnull dereferenceable(12) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %72) #10
  %81 = icmp eq %"struct.std::__1::__hash_node_base.188"* %80, null
  br i1 %81, label %83, label %82

82:                                               ; preds = %78
  call void @_ZN2vk5Image10decompressERK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkImageSubresource* nonnull dereferenceable(12) %3) #11
  br label %83

83:                                               ; preds = %78, %82
  %84 = add i32 %79, 1
  store i32 %84, i32* %56, align 4
  %85 = icmp ugt i32 %84, %53
  br i1 %85, label %86, label %78

86:                                               ; preds = %83, %74
  %87 = add i32 %75, 1
  store i32 %87, i32* %57, align 4
  %88 = icmp ugt i32 %87, %37
  br i1 %88, label %89, label %74

89:                                               ; preds = %86
  %90 = load i32, i32* %61, align 4
  br label %91

91:                                               ; preds = %89, %68
  %92 = phi i32 [ %90, %89 ], [ %69, %68 ]
  store i32 %92, i32* %57, align 4
  %93 = icmp ugt i32 %92, %37
  br i1 %93, label %139, label %94

94:                                               ; preds = %91
  %95 = bitcast %"class.vk::Image::Subresource"* %5 to i8*
  %96 = getelementptr inbounds %"class.std::__1::unordered_set.183", %"class.std::__1::unordered_set.183"* %64, i64 0, i32 0
  %97 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %98 = bitcast %"class.vk::Image::Subresource"* %6 to i8*
  %99 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %6, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %6, i64 0, i32 0, i32 1
  %101 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %6, i64 0, i32 0, i32 2
  br label %102

102:                                              ; preds = %94, %134
  %103 = phi i32 [ %92, %94 ], [ %135, %134 ]
  %104 = load i32, i32* %60, align 4
  store i32 %104, i32* %56, align 4
  %105 = icmp ugt i32 %104, %53
  br i1 %105, label %134, label %106

106:                                              ; preds = %102, %131
  %107 = phi i32 [ %132, %131 ], [ %104, %102 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %95) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %95, i8* nonnull align 4 %54, i64 12, i1 false) #10
  %108 = call %"struct.std::__1::__hash_node_base.188"* @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(%"class.std::__1::__hash_table.184"* %96, %"class.vk::Image::Subresource"* nonnull dereferenceable(12) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %95) #10
  %109 = icmp eq %"struct.std::__1::__hash_node_base.188"* %108, null
  br i1 %109, label %131, label %110

110:                                              ; preds = %106
  %111 = call zeroext i1 @_ZN2vk5Image10updateCubeERK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkImageSubresource* nonnull dereferenceable(12) %3) #11
  br i1 %111, label %112, label %131

112:                                              ; preds = %110
  %113 = load i32, i32* %97, align 4
  %114 = icmp eq i32 %113, 5
  br i1 %114, label %131, label %119

115:                                              ; preds = %128
  %116 = load i32, i32* %97, align 4
  %117 = add i32 %116, -5
  %118 = icmp ult i32 %121, %117
  br i1 %118, label %119, label %131

119:                                              ; preds = %112, %115
  %120 = phi i32 [ %121, %115 ], [ 0, %112 ]
  %121 = add i32 %120, 6
  br label %122

122:                                              ; preds = %128, %119
  %123 = phi i32 [ %120, %119 ], [ %129, %128 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %98) #10
  store i32 %59, i32* %99, align 4
  store i32 %107, i32* %100, align 4
  store i32 %123, i32* %101, align 4
  %124 = call %"struct.std::__1::__hash_node_base.188"* @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(%"class.std::__1::__hash_table.184"* %96, %"class.vk::Image::Subresource"* nonnull dereferenceable(12) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %98) #10
  %125 = icmp eq %"struct.std::__1::__hash_node_base.188"* %124, null
  br i1 %125, label %128, label %126

126:                                              ; preds = %122
  %127 = call %"struct.std::__1::__hash_node_base.188"* @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::__hash_table.184"* %96, %"struct.std::__1::__hash_node_base.188"* nonnull %124) #9
  br label %128

128:                                              ; preds = %122, %126
  %129 = add i32 %123, 1
  %130 = icmp eq i32 %129, %121
  br i1 %130, label %115, label %122

131:                                              ; preds = %115, %112, %106, %110
  %132 = add i32 %107, 1
  store i32 %132, i32* %56, align 4
  %133 = icmp ugt i32 %132, %53
  br i1 %133, label %134, label %106

134:                                              ; preds = %131, %102
  %135 = add i32 %103, 1
  store i32 %135, i32* %57, align 4
  %136 = icmp ugt i32 %135, %37
  br i1 %136, label %137, label %102

137:                                              ; preds = %134
  %138 = load i32, i32* %61, align 4
  br label %139

139:                                              ; preds = %137, %91
  %140 = phi i32 [ %138, %137 ], [ %92, %91 ]
  store i32 %140, i32* %57, align 4
  %141 = icmp ugt i32 %140, %37
  br i1 %141, label %161, label %142

142:                                              ; preds = %139
  %143 = bitcast %"class.vk::Image::Subresource"* %7 to i8*
  %144 = getelementptr inbounds %"class.std::__1::unordered_set.183", %"class.std::__1::unordered_set.183"* %64, i64 0, i32 0
  br label %145

145:                                              ; preds = %142, %158
  %146 = phi i32 [ %140, %142 ], [ %159, %158 ]
  %147 = load i32, i32* %60, align 4
  store i32 %147, i32* %56, align 4
  %148 = icmp ugt i32 %147, %53
  br i1 %148, label %158, label %149

149:                                              ; preds = %145, %155
  %150 = phi i32 [ %156, %155 ], [ %147, %145 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %143) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %143, i8* nonnull align 4 %54, i64 12, i1 false) #10
  %151 = call %"struct.std::__1::__hash_node_base.188"* @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(%"class.std::__1::__hash_table.184"* %144, %"class.vk::Image::Subresource"* nonnull dereferenceable(12) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %143) #10
  %152 = icmp eq %"struct.std::__1::__hash_node_base.188"* %151, null
  br i1 %152, label %155, label %153

153:                                              ; preds = %149
  %154 = call %"struct.std::__1::__hash_node_base.188"* @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::__hash_table.184"* %144, %"struct.std::__1::__hash_node_base.188"* nonnull %151) #9
  br label %155

155:                                              ; preds = %149, %153
  %156 = add i32 %150, 1
  store i32 %156, i32* %56, align 4
  %157 = icmp ugt i32 %156, %53
  br i1 %157, label %158, label %149

158:                                              ; preds = %155, %145
  %159 = add i32 %146, 1
  store i32 %159, i32* %57, align 4
  %160 = icmp ugt i32 %159, %37
  br i1 %160, label %161, label %145

161:                                              ; preds = %158, %139, %50
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %63) #9
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %54) #10
  br label %162

162:                                              ; preds = %20, %161
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image10decompressERK18VkImageSubresource(%"class.vk::Image"*, %struct.VkImageSubresource* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = icmp eq %"class.vk::Image"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5, i32 0
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %12 [
    i32 153, label %9
    i32 154, label %9
    i32 155, label %9
    i32 156, label %9
    i32 147, label %9
    i32 148, label %9
    i32 149, label %9
    i32 150, label %9
    i32 151, label %9
    i32 152, label %9
    i32 131, label %10
    i32 132, label %10
    i32 133, label %10
    i32 134, label %10
    i32 135, label %10
    i32 136, label %10
    i32 137, label %10
    i32 138, label %10
    i32 139, label %10
    i32 140, label %10
    i32 141, label %10
    i32 142, label %10
    i32 143, label %10
    i32 144, label %10
    i32 145, label %10
    i32 146, label %10
    i32 157, label %11
    i32 159, label %11
    i32 161, label %11
    i32 163, label %11
    i32 165, label %11
    i32 167, label %11
    i32 169, label %11
    i32 171, label %11
    i32 173, label %11
    i32 175, label %11
    i32 177, label %11
    i32 179, label %11
    i32 181, label %11
    i32 183, label %11
    i32 158, label %11
    i32 160, label %11
    i32 162, label %11
    i32 164, label %11
    i32 166, label %11
    i32 168, label %11
    i32 170, label %11
    i32 172, label %11
    i32 174, label %11
    i32 176, label %11
    i32 178, label %11
    i32 180, label %11
    i32 182, label %11
    i32 184, label %11
  ]

9:                                                ; preds = %6, %6, %6, %6, %6, %6, %6, %6, %6, %6
  tail call void @_ZN2vk5Image10decodeETC2ERK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkImageSubresource* dereferenceable(12) %1) #11
  br label %12

10:                                               ; preds = %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6
  tail call void @_ZN2vk5Image8decodeBCERK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkImageSubresource* dereferenceable(12) %1) #11
  br label %12

11:                                               ; preds = %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6, %6
  tail call void @_ZN2vk5Image10decodeASTCERK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkImageSubresource* dereferenceable(12) %1) #11
  br label %12

12:                                               ; preds = %2, %9, %10, %11, %6
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN2vk5Image10updateCubeERK18VkImageSubresource(%"class.vk::Image"*, %struct.VkImageSubresource* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.VkImageSubresource, align 8
  %4 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %37, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %37

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  %15 = icmp ugt i32 %14, 5
  br i1 %15, label %16, label %37

16:                                               ; preds = %12
  %17 = bitcast %struct.VkImageSubresource* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %17) #10
  %18 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %3, i64 0, i32 2
  %19 = bitcast %struct.VkImageSubresource* %1 to i64*
  %20 = bitcast %struct.VkImageSubresource* %3 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 8
  store i32 0, i32* %18, align 8
  %22 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  br label %24

24:                                               ; preds = %16, %24
  %25 = load %"class.vk::Device"*, %"class.vk::Device"** %22, align 8
  %26 = getelementptr inbounds %"class.vk::Device", %"class.vk::Device"* %25, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.sw::Blitter"*, %"class.sw::Blitter"** %26, align 8
  %28 = load %"class.vk::Image"*, %"class.vk::Image"** %23, align 8
  %29 = icmp eq %"class.vk::Image"* %28, null
  %30 = select i1 %29, %"class.vk::Image"* %0, %"class.vk::Image"* %28
  call void @_ZN2sw7Blitter13updateBordersEPN2vk5ImageERK18VkImageSubresource(%"class.sw::Blitter"* %27, %"class.vk::Image"* %30, %struct.VkImageSubresource* nonnull dereferenceable(12) %3) #9
  %31 = load i32, i32* %18, align 8
  %32 = add i32 %31, 6
  store i32 %32, i32* %18, align 8
  %33 = load i32, i32* %13, align 4
  %34 = add i32 %33, -5
  %35 = icmp ult i32 %32, %34
  br i1 %35, label %24, label %36

36:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %17) #10
  br label %37

37:                                               ; preds = %2, %8, %12, %36
  %38 = phi i1 [ true, %36 ], [ false, %12 ], [ false, %8 ], [ false, %2 ]
  ret i1 %38
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image10decodeETC2ERK18VkImageSubresource(%"class.vk::Image"*, %struct.VkImageSubresource* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.VkOffset3D, align 4
  %4 = alloca %struct.VkOffset3D, align 4
  %5 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = add i32 %6, -147
  %8 = icmp ult i32 %7, 10
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 58, i32 %6) #9
  br label %14

10:                                               ; preds = %2
  %11 = sext i32 %7 to i64
  %12 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table._ZN2vk5Image10decodeETC2ERK18VkImageSubresource, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %10, %9
  %15 = phi i32 [ 6, %9 ], [ %13, %10 ]
  %16 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  %17 = load %"class.vk::Image"*, %"class.vk::Image"** %16, align 8
  %18 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %17, i64 0, i32 5
  %19 = tail call i32 @_ZNK2vk6Format5bytesEv(%"class.vk::Format"* %18) #9
  %20 = load i32, i32* %5, align 4
  %21 = add i32 %20, -147
  %22 = icmp ult i32 %21, 2
  %23 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %1, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %1, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %24, i32 %26) #11
  %28 = extractvalue { i64, i32 } %27, 0
  %29 = extractvalue { i64, i32 } %27, 1
  %30 = trunc i64 %28 to i32
  %31 = lshr i64 %28, 32
  %32 = trunc i64 %31 to i32
  %33 = load %"class.vk::Image"*, %"class.vk::Image"** %16, align 8
  %34 = load i32, i32* %25, align 4
  %35 = tail call i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %33, i32 1, i32 %34) #11
  br i1 %22, label %36, label %42

36:                                               ; preds = %14
  %37 = add i32 %32, -1
  %38 = mul i32 %37, %35
  %39 = mul i32 %19, %30
  %40 = add i32 %38, %39
  %41 = zext i32 %40 to i64
  br label %42

42:                                               ; preds = %36, %14
  %43 = phi i64 [ %41, %36 ], [ 0, %14 ]
  %44 = icmp sgt i32 %29, 0
  br i1 %44, label %45, label %54

45:                                               ; preds = %42
  %46 = bitcast %struct.VkOffset3D* %3 to i8*
  %47 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %3, i64 0, i32 0
  %48 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %3, i64 0, i32 1
  %49 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %3, i64 0, i32 2
  %50 = bitcast %struct.VkOffset3D* %4 to i8*
  %51 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %4, i64 0, i32 0
  %52 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %4, i64 0, i32 1
  %53 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %4, i64 0, i32 2
  br label %55

54:                                               ; preds = %61, %42
  ret void

55:                                               ; preds = %61, %45
  %56 = phi i32 [ 0, %45 ], [ %63, %61 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %46) #10
  store i32 0, i32* %47, align 4
  store i32 0, i32* %48, align 4
  store i32 %56, i32* %49, align 4
  %57 = call i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkOffset3D* nonnull dereferenceable(12) %3, %struct.VkImageSubresource* dereferenceable(12) %1) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %46) #10
  %58 = load %"class.vk::Image"*, %"class.vk::Image"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %50) #10
  store i32 0, i32* %51, align 4
  store i32 0, i32* %52, align 4
  store i32 %56, i32* %53, align 4
  %59 = call i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %58, %struct.VkOffset3D* nonnull dereferenceable(12) %4, %struct.VkImageSubresource* dereferenceable(12) %1) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %50) #10
  br i1 %22, label %60, label %61

60:                                               ; preds = %55
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %59, i8 -1, i64 %43, i1 false)
  br label %61

61:                                               ; preds = %60, %55
  %62 = tail call zeroext i1 @_ZN11ETC_Decoder6DecodeEPKhPhiiiiNS_9InputTypeE(i8* %57, i8* %59, i32 %30, i32 %32, i32 %35, i32 %19, i32 %15) #9
  %63 = add nuw nsw i32 %56, 1
  %64 = icmp eq i32 %63, %29
  br i1 %64, label %54, label %55
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image8decodeBCERK18VkImageSubresource(%"class.vk::Image"*, %struct.VkImageSubresource* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.VkOffset3D, align 4
  %4 = alloca %struct.VkOffset3D, align 4
  %5 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5, i32 0
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %12 [
    i32 131, label %17
    i32 133, label %17
    i32 132, label %17
    i32 134, label %17
    i32 135, label %14
    i32 136, label %14
    i32 137, label %7
    i32 138, label %7
    i32 139, label %8
    i32 140, label %8
    i32 141, label %9
    i32 142, label %9
    i32 143, label %10
    i32 144, label %10
    i32 145, label %11
    i32 146, label %11
  ]

7:                                                ; preds = %2, %2
  br label %14

8:                                                ; preds = %2, %2
  br label %14

9:                                                ; preds = %2, %2
  br label %14

10:                                               ; preds = %2, %2
  br label %14

11:                                               ; preds = %2, %2
  br label %14

12:                                               ; preds = %2
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 91, i32 %6) #9
  %13 = load i32, i32* %5, align 4
  br label %14

14:                                               ; preds = %2, %2, %12, %11, %10, %9, %8, %7
  %15 = phi i32 [ %6, %7 ], [ %6, %8 ], [ %6, %9 ], [ %6, %10 ], [ %6, %11 ], [ %13, %12 ], [ %6, %2 ], [ %6, %2 ]
  %16 = phi i32 [ 3, %7 ], [ 4, %8 ], [ 5, %9 ], [ 6, %10 ], [ 7, %11 ], [ 0, %12 ], [ 2, %2 ], [ 2, %2 ]
  br label %17

17:                                               ; preds = %14, %2, %2, %2, %2
  %18 = phi i32 [ %15, %14 ], [ %6, %2 ], [ %6, %2 ], [ %6, %2 ], [ %6, %2 ]
  %19 = phi i32 [ %16, %14 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ], [ 1, %2 ]
  %20 = add i32 %18, -131
  %21 = icmp ult i32 %20, 16
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 122, i32 %18) #9
  br label %28

23:                                               ; preds = %17
  %24 = trunc i32 %20 to i16
  %25 = lshr i16 5379, %24
  %26 = and i16 %25, 1
  %27 = icmp ne i16 %26, 0
  br label %28

28:                                               ; preds = %23, %22
  %29 = phi i1 [ false, %22 ], [ %27, %23 ]
  %30 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  %31 = load %"class.vk::Image"*, %"class.vk::Image"** %30, align 8
  %32 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %31, i64 0, i32 5
  %33 = tail call i32 @_ZNK2vk6Format5bytesEv(%"class.vk::Format"* %32) #9
  %34 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %1, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %1, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %35, i32 %37) #11
  %39 = extractvalue { i64, i32 } %38, 0
  %40 = extractvalue { i64, i32 } %38, 1
  %41 = trunc i64 %39 to i32
  %42 = lshr i64 %39, 32
  %43 = trunc i64 %42 to i32
  %44 = load %"class.vk::Image"*, %"class.vk::Image"** %30, align 8
  %45 = load i32, i32* %36, align 4
  %46 = tail call i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %44, i32 1, i32 %45) #11
  %47 = icmp sgt i32 %40, 0
  br i1 %47, label %48, label %57

48:                                               ; preds = %28
  %49 = bitcast %struct.VkOffset3D* %3 to i8*
  %50 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %3, i64 0, i32 0
  %51 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %3, i64 0, i32 1
  %52 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %3, i64 0, i32 2
  %53 = bitcast %struct.VkOffset3D* %4 to i8*
  %54 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %4, i64 0, i32 0
  %55 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %4, i64 0, i32 1
  %56 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %4, i64 0, i32 2
  br label %58

57:                                               ; preds = %58, %28
  ret void

58:                                               ; preds = %58, %48
  %59 = phi i32 [ 0, %48 ], [ %64, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %49) #10
  store i32 0, i32* %50, align 4
  store i32 0, i32* %51, align 4
  store i32 %59, i32* %52, align 4
  %60 = call i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkOffset3D* nonnull dereferenceable(12) %3, %struct.VkImageSubresource* dereferenceable(12) %1) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %49) #10
  %61 = load %"class.vk::Image"*, %"class.vk::Image"** %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %53) #10
  store i32 0, i32* %54, align 4
  store i32 0, i32* %55, align 4
  store i32 %59, i32* %56, align 4
  %62 = call i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %61, %struct.VkOffset3D* nonnull dereferenceable(12) %4, %struct.VkImageSubresource* dereferenceable(12) %1) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %53) #10
  %63 = tail call zeroext i1 @_ZN10BC_Decoder6DecodeEPKhPhiiiiib(i8* %60, i8* %62, i32 %41, i32 %43, i32 %46, i32 %33, i32 %19, i1 zeroext %29) #9
  %64 = add nuw nsw i32 %59, 1
  %65 = icmp eq i32 %64, %40
  br i1 %65, label %57, label %58
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk5Image10decodeASTCERK18VkImageSubresource(%"class.vk::Image"*, %struct.VkImageSubresource* nocapture readonly dereferenceable(12)) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.VkOffset3D, align 4
  %4 = alloca %struct.VkOffset3D, align 4
  %5 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 5
  %6 = tail call i32 @_ZNK2vk6Format10blockWidthEv(%"class.vk::Format"* %5) #9
  %7 = tail call i32 @_ZNK2vk6Format11blockHeightEv(%"class.vk::Format"* %5) #9
  %8 = tail call zeroext i1 @_ZNK2vk6Format19isUnsignedComponentEi(%"class.vk::Format"* %5, i32 0) #9
  %9 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %0, i64 0, i32 12
  %10 = load %"class.vk::Image"*, %"class.vk::Image"** %9, align 8
  %11 = getelementptr inbounds %"class.vk::Image", %"class.vk::Image"* %10, i64 0, i32 5
  %12 = tail call i32 @_ZNK2vk6Format5bytesEv(%"class.vk::Format"* %11) #9
  %13 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %struct.VkImageSubresource, %struct.VkImageSubresource* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = tail call { i64, i32 } @_ZNK2vk5Image17getMipLevelExtentE21VkImageAspectFlagBitsj(%"class.vk::Image"* %0, i32 %14, i32 %16) #11
  %18 = extractvalue { i64, i32 } %17, 0
  %19 = extractvalue { i64, i32 } %17, 1
  %20 = trunc i64 %18 to i32
  %21 = lshr i64 %18, 32
  %22 = trunc i64 %21 to i32
  %23 = add i32 %6, -1
  %24 = add i32 %23, %20
  %25 = udiv i32 %24, %6
  %26 = add i32 %7, -1
  %27 = add i32 %26, %22
  %28 = udiv i32 %27, %7
  %29 = icmp slt i32 %25, 1
  %30 = icmp slt i32 %28, 1
  %31 = or i1 %29, %30
  br i1 %31, label %56, label %32

32:                                               ; preds = %2
  %33 = load %"class.vk::Image"*, %"class.vk::Image"** %9, align 8
  %34 = load i32, i32* %15, align 4
  %35 = tail call i32 @_ZNK2vk5Image13rowPitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %33, i32 1, i32 %34) #11
  %36 = load %"class.vk::Image"*, %"class.vk::Image"** %9, align 8
  %37 = load i32, i32* %15, align 4
  %38 = tail call i32 @_ZNK2vk5Image15slicePitchBytesE21VkImageAspectFlagBitsj(%"class.vk::Image"* %36, i32 1, i32 %37) #11
  %39 = icmp sgt i32 %19, 0
  br i1 %39, label %40, label %56

40:                                               ; preds = %32
  %41 = bitcast %struct.VkOffset3D* %3 to i8*
  %42 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %3, i64 0, i32 0
  %43 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %3, i64 0, i32 1
  %44 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %3, i64 0, i32 2
  %45 = bitcast %struct.VkOffset3D* %4 to i8*
  %46 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %4, i64 0, i32 0
  %47 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %4, i64 0, i32 1
  %48 = getelementptr inbounds %struct.VkOffset3D, %struct.VkOffset3D* %4, i64 0, i32 2
  br label %49

49:                                               ; preds = %49, %40
  %50 = phi i32 [ 0, %40 ], [ %54, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %41) #10
  store i32 0, i32* %42, align 4
  store i32 0, i32* %43, align 4
  store i32 %50, i32* %44, align 4
  %51 = call i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %0, %struct.VkOffset3D* nonnull dereferenceable(12) %3, %struct.VkImageSubresource* dereferenceable(12) %1) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %41) #10
  %52 = load %"class.vk::Image"*, %"class.vk::Image"** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %45) #10
  store i32 0, i32* %46, align 4
  store i32 0, i32* %47, align 4
  store i32 %50, i32* %48, align 4
  %53 = call i8* @_ZNK2vk5Image15getTexelPointerERK10VkOffset3DRK18VkImageSubresource(%"class.vk::Image"* %52, %struct.VkOffset3D* nonnull dereferenceable(12) %4, %struct.VkImageSubresource* dereferenceable(12) %1) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %45) #10
  tail call void @_ZN12ASTC_Decoder6DecodeEPKhPhiiiiiiiiiiiib(i8* %51, i8* %53, i32 %20, i32 %22, i32 %19, i32 %12, i32 %35, i32 %38, i32 %6, i32 %7, i32 1, i32 %25, i32 %28, i32 1, i1 zeroext %8) #9
  %54 = add nuw nsw i32 %50, 1
  %55 = icmp eq i32 %54, %19
  br i1 %55, label %56, label %49

56:                                               ; preds = %49, %32, %2
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Blitter13updateBordersEPN2vk5ImageERK18VkImageSubresource(%"class.sw::Blitter"*, %"class.vk::Image"*, %struct.VkImageSubresource* dereferenceable(12)) local_unnamed_addr #2

; Function Attrs: optsize
declare i32 @_ZNK2vk6Format5bytesEv(%"class.vk::Format"*) local_unnamed_addr #2

; Function Attrs: optsize
declare zeroext i1 @_ZN11ETC_Decoder6DecodeEPKhPhiiiiNS_9InputTypeE(i8*, i8*, i32, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: optsize
declare zeroext i1 @_ZN10BC_Decoder6DecodeEPKhPhiiiiib(i8*, i8*, i32, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: optsize
declare zeroext i1 @_ZNK2vk6Format19isUnsignedComponentEi(%"class.vk::Format"*, i32) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN12ASTC_Decoder6DecodeEPKhPhiiiiiiiiiiiib(i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.188"*, i8 } @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.184"*, %"class.vk::Image::Subresource"* dereferenceable(12), %"class.vk::Image::Subresource"* dereferenceable(12)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %1, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = xor i32 %7, %5
  %9 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %1, i64 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = xor i32 %8, %10
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %74, label %16

16:                                               ; preds = %3
  %17 = tail call i64 @llvm.ctpop.i64(i64 %14) #10, !range !2
  %18 = icmp ugt i64 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = add i64 %14, 4294967295
  %21 = and i64 %20, %12
  br label %26

22:                                               ; preds = %16
  %23 = icmp ugt i64 %14, %12
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = urem i64 %12, %14
  br label %26

26:                                               ; preds = %19, %22, %24
  %27 = phi i64 [ %21, %19 ], [ %25, %24 ], [ %12, %22 ]
  %28 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %29, i64 %27
  %31 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.188"* %31, null
  br i1 %32, label %74, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %31, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.188"* %35, null
  br i1 %36, label %74, label %37

37:                                               ; preds = %33
  %38 = add i64 %14, -1
  br label %39

39:                                               ; preds = %37, %70
  %40 = phi %"struct.std::__1::__hash_node_base.188"* [ %35, %37 ], [ %72, %70 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %40, i64 1
  %42 = bitcast %"struct.std::__1::__hash_node_base.188"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %12
  br i1 %44, label %55, label %45

45:                                               ; preds = %39
  br i1 %18, label %48, label %46

46:                                               ; preds = %45
  %47 = and i64 %43, %38
  br label %52

48:                                               ; preds = %45
  %49 = icmp ult i64 %43, %14
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = urem i64 %43, %14
  br label %52

52:                                               ; preds = %46, %48, %50
  %53 = phi i64 [ %47, %46 ], [ %51, %50 ], [ %43, %48 ]
  %54 = icmp eq i64 %53, %27
  br i1 %54, label %55, label %74

55:                                               ; preds = %39, %52
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %40, i64 2
  %57 = bitcast %"struct.std::__1::__hash_node_base.188"* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %5
  br i1 %59, label %60, label %70

60:                                               ; preds = %55
  %61 = bitcast %"struct.std::__1::__hash_node_base.188"* %56 to %"class.vk::Image::Subresource"*
  %62 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %61, i64 0, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %7
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %40, i64 3
  %67 = bitcast %"struct.std::__1::__hash_node_base.188"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %10
  br i1 %69, label %160, label %70

70:                                               ; preds = %60, %55, %65
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %40, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.188"* %72, null
  br i1 %73, label %74, label %39

74:                                               ; preds = %52, %70, %33, %26, %3
  %75 = phi i64 [ %27, %26 ], [ -6148914691236517206, %3 ], [ %27, %33 ], [ %27, %70 ], [ %27, %52 ]
  %76 = tail call i8* @_Znwm(i64 32) #12, !noalias !3
  %77 = getelementptr inbounds i8, i8* %76, i64 16
  %78 = bitcast %"class.vk::Image::Subresource"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 12, i1 false) #10, !noalias !3
  %79 = getelementptr inbounds i8, i8* %76, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %12, i64* %80, align 8, !noalias !3
  %81 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base.188"**
  store %"struct.std::__1::__hash_node_base.188"* null, %"struct.std::__1::__hash_node_base.188"** %81, align 8, !noalias !3
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %14 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %15, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %74
  %93 = shl i64 %14, 1
  %94 = icmp ult i64 %14, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %14) #10, !range !2
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #10
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.184"* %0, i64 %104) #11
  %105 = load i64, i64* %13, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #10, !range !2
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, 4294967295
  %110 = and i64 %109, %12
  br label %115

111:                                              ; preds = %92
  %112 = icmp ugt i64 %105, %12
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %12, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %74
  %116 = phi i64 [ %14, %74 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %75, %74 ], [ %110, %108 ], [ %12, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.188"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.188"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %76 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.188"* %124 to i8**
  store i8* %76, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.188"* %124, %"struct.std::__1::__hash_node_base.188"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.188"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.188"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #10, !range !2
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.188"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.188"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %76 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.188"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %76, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base.188"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %65, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %65 ]
  %162 = phi %"struct.std::__1::__hash_node_base.188"* [ %157, %156 ], [ %40, %65 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.188"*, i8 } undef, %"struct.std::__1::__hash_node_base.188"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.188"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.188"*, i8 } %164
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table.184"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.184"* %0, i64 %10) #11
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.184"* %0, i64 %42) #11
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: optsize
declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table.184"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %123, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.184"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.188"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.188"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.190", %"class.std::__1::__bucket_list_deallocator.190"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  br label %24

19:                                               ; preds = %24
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %20, i64 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.188"* %22, null
  br i1 %23, label %131, label %30

24:                                               ; preds = %24, %17
  %25 = phi i64 [ %28, %24 ], [ 0, %17 ]
  %26 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %11, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %26, i64 %25
  store %"struct.std::__1::__hash_node_base.188"* null, %"struct.std::__1::__hash_node_base.188"** %27, align 8
  %28 = add nuw i64 %25, 1
  %29 = icmp eq i64 %28, %1
  br i1 %29, label %19, label %24

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %22, i64 1
  %32 = bitcast %"struct.std::__1::__hash_node_base.188"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !2
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = add i64 %1, -1
  %38 = and i64 %33, %37
  br label %43

39:                                               ; preds = %30
  %40 = icmp ult i64 %33, %1
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %33, %1
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %33, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %11, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.188"* %20, %"struct.std::__1::__hash_node_base.188"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %22, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.188"* %48, null
  br i1 %49, label %131, label %50

50:                                               ; preds = %43
  %51 = add i64 %1, -1
  br label %52

52:                                               ; preds = %50, %117
  %53 = phi %"struct.std::__1::__hash_node_base.188"* [ %48, %50 ], [ %121, %117 ]
  %54 = phi i64 [ %44, %50 ], [ %119, %117 ]
  %55 = phi %"struct.std::__1::__hash_node_base.188"* [ %22, %50 ], [ %118, %117 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.188"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  br i1 %35, label %61, label %59

59:                                               ; preds = %52
  %60 = and i64 %58, %51
  br label %65

61:                                               ; preds = %52
  %62 = icmp ult i64 %58, %1
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %58, %1
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %58, %61 ]
  %67 = icmp eq i64 %66, %54
  br i1 %67, label %117, label %68

68:                                               ; preds = %65
  %69 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %11, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %69, i64 %66
  %71 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.188"* %71, null
  br i1 %72, label %80, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %53, i64 2
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %53, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.188"* %75 to i32*
  %77 = bitcast %"struct.std::__1::__hash_node_base.188"* %74 to i32*
  %78 = bitcast %"struct.std::__1::__hash_node_base.188"* %74 to %"class.vk::Image::Subresource"*
  %79 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %78, i64 0, i32 0, i32 1
  br label %81

80:                                               ; preds = %68
  store %"struct.std::__1::__hash_node_base.188"* %55, %"struct.std::__1::__hash_node_base.188"** %70, align 8
  br label %117

81:                                               ; preds = %73, %98
  %82 = phi %"struct.std::__1::__hash_node_base.188"* [ %84, %98 ], [ %53, %73 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %83, align 8
  %85 = icmp eq %"struct.std::__1::__hash_node_base.188"* %84, null
  br i1 %85, label %104, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %84, i64 2
  %88 = load i32, i32* %77, align 4
  %89 = bitcast %"struct.std::__1::__hash_node_base.188"* %87 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %88, %90
  br i1 %91, label %92, label %104

92:                                               ; preds = %86
  %93 = bitcast %"struct.std::__1::__hash_node_base.188"* %87 to %"class.vk::Image::Subresource"*
  %94 = load i32, i32* %79, align 4
  %95 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %93, i64 0, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = load i32, i32* %76, align 4
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %84, i64 3
  %101 = bitcast %"struct.std::__1::__hash_node_base.188"* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %99, %102
  br i1 %103, label %81, label %104

104:                                              ; preds = %86, %92, %81, %98
  %105 = ptrtoint %"struct.std::__1::__hash_node_base.188"* %84 to i64
  %106 = bitcast %"struct.std::__1::__hash_node_base.188"* %82 to i64*
  %107 = bitcast %"struct.std::__1::__hash_node_base.188"* %55 to i64*
  store i64 %105, i64* %107, align 8
  %108 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %11, align 8
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %108, i64 %66
  %110 = bitcast %"struct.std::__1::__hash_node_base.188"** %109 to i64**
  %111 = load i64*, i64** %110, align 8
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %106, align 8
  %113 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %11, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %113, i64 %66
  %115 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %115, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.188"* %53, %"struct.std::__1::__hash_node_base.188"** %116, align 8
  br label %117

117:                                              ; preds = %65, %104, %80
  %118 = phi %"struct.std::__1::__hash_node_base.188"* [ %53, %80 ], [ %55, %104 ], [ %53, %65 ]
  %119 = phi i64 [ %66, %80 ], [ %54, %104 ], [ %54, %65 ]
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %118, i64 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.188"* %121, null
  br i1 %122, label %131, label %52

123:                                              ; preds = %2
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %124, align 8
  store %"struct.std::__1::__hash_node_base.188"** null, %"struct.std::__1::__hash_node_base.188"*** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base.188"** %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.std::__1::__hash_node_base.188"** %125 to i8*
  tail call void @_ZdlPv(i8* %128) #12
  br label %129

129:                                              ; preds = %123, %127
  %130 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.190", %"class.std::__1::__bucket_list_deallocator.190"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %130, align 8
  br label %131

131:                                              ; preds = %117, %43, %19, %129
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.188"* @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(%"class.std::__1::__hash_table.184"*, %"class.vk::Image::Subresource"* dereferenceable(12)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %1, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = xor i32 %6, %4
  %8 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %1, i64 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = xor i32 %7, %9
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %73, label %15

15:                                               ; preds = %2
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #10, !range !2
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, 4294967295
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ugt i64 %13, %11
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %18, %21, %23
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.188"* %30, null
  br i1 %31, label %73, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %30, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.188"* %34, null
  br i1 %35, label %73, label %36

36:                                               ; preds = %32
  %37 = add i64 %13, -1
  br label %38

38:                                               ; preds = %36, %69
  %39 = phi %"struct.std::__1::__hash_node_base.188"* [ %34, %36 ], [ %71, %69 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %39, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base.188"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %11
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  br i1 %17, label %47, label %45

45:                                               ; preds = %44
  %46 = and i64 %42, %37
  br label %51

47:                                               ; preds = %44
  %48 = icmp ult i64 %42, %13
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %42, %13
  br label %51

51:                                               ; preds = %45, %47, %49
  %52 = phi i64 [ %46, %45 ], [ %50, %49 ], [ %42, %47 ]
  %53 = icmp eq i64 %52, %26
  br i1 %53, label %69, label %73

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %39, i64 2
  %56 = bitcast %"struct.std::__1::__hash_node_base.188"* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %4
  br i1 %58, label %59, label %69

59:                                               ; preds = %54
  %60 = bitcast %"struct.std::__1::__hash_node_base.188"* %55 to %"class.vk::Image::Subresource"*
  %61 = getelementptr inbounds %"class.vk::Image::Subresource", %"class.vk::Image::Subresource"* %60, i64 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, %6
  br i1 %63, label %64, label %69

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %39, i64 3
  %66 = bitcast %"struct.std::__1::__hash_node_base.188"* %65 to i32*
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, %9
  br i1 %68, label %73, label %69

69:                                               ; preds = %54, %59, %51, %64
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %39, i64 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.188"* %71, null
  br i1 %72, label %73, label %38

73:                                               ; preds = %64, %69, %51, %32, %2, %25
  %74 = phi %"struct.std::__1::__hash_node_base.188"* [ null, %25 ], [ null, %2 ], [ null, %32 ], [ %39, %64 ], [ null, %69 ], [ null, %51 ]
  ret %"struct.std::__1::__hash_node_base.188"* %74
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.188"* @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::__hash_table.184"*, %"struct.std::__1::__hash_node_base.188"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.216", align 8
  %4 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %1, i64 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %4, align 8
  call void @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::unique_ptr.216"* nonnull sret %3, %"class.std::__1::__hash_table.184"* %0, %"struct.std::__1::__hash_node_base.188"* %1) #9
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.216"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %6, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %6, align 8
  %8 = icmp eq %"struct.std::__1::__hash_node"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = bitcast %"struct.std::__1::__hash_node"* %7 to i8*
  call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %2, %9
  ret %"struct.std::__1::__hash_node_base.188"* %5
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::unique_ptr.216"* noalias sret, %"class.std::__1::__hash_table.184"*, %"struct.std::__1::__hash_node_base.188"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.188"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #10, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.188"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.188"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.195", %"class.std::__1::__compressed_pair.195"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.188"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.188"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.188"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.188"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.188"* null, %"struct.std::__1::__hash_node_base.188"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.188"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.188"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188", %"struct.std::__1::__hash_node_base.188"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.188"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.188"**, %"struct.std::__1::__hash_node_base.188"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.188"*, %"struct.std::__1::__hash_node_base.188"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.188"* %25, %"struct.std::__1::__hash_node_base.188"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.188"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.188"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.188"* null, %"struct.std::__1::__hash_node_base.188"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.184", %"class.std::__1::__hash_table.184"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.188"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.216"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.216"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.198"** %98 to %"class.std::__1::__compressed_pair.195"**
  store %"class.std::__1::__compressed_pair.195"* %30, %"class.std::__1::__compressed_pair.195"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.216"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind optsize }
attributes #10 = { nounwind }
attributes #11 = { optsize }
attributes #12 = { builtin nounwind optsize }
attributes #13 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE21__construct_node_hashIS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS6_ISD_EEEEEEmOT_DpOT0_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__112__hash_tableIN2vk5Image11SubresourceES3_NS_8equal_toIS3_EENS_9allocatorIS3_EEE21__construct_node_hashIS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS6_ISD_EEEEEEmOT_DpOT0_"}
