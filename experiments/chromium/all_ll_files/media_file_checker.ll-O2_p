; ModuleID = '../../media/filters/media_file_checker.cc'
source_filename = "../../media/filters/media_file_checker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::MediaFileChecker" = type { %"class.base::File" }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%struct.AVCodecContext = type { %struct.AVClass*, i32, i32, %struct.AVCodec*, i32, i32, i8*, %struct.AVCodecInternal*, i8*, i64, i32, i32, i32, i32, i32, i8*, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, void (%struct.AVCodecContext*, %struct.AVFrame*, i32*, i32, i32, i32)*, i32 (%struct.AVCodecContext*, i32*)*, i32, float, i32, float, i32, i32, float, float, float, float, float, float, float, i32, i32, i32*, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16*, i16*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*, i32)*, i32, float, float, i32, i32, i32, i32, i32, %struct.RcOverride*, i64, i64, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, void (%struct.AVCodecContext*, i8*, i32, i32)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i32, i32, i32, i32, i32, i64, %struct.AVHWAccel*, i8*, [8 x i64], i32, i32, i32, i32, i32, %struct.AVFrame*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*)*, i8*, i32*, i32, i32)*, i32 (%struct.AVCodecContext*, i32 (%struct.AVCodecContext*, i8*, i32, i32)*, i8*, i32*, i32)*, i32, i32, i32, i32, i32, i32, i8*, i32, i64, i32, i32, %struct.AVRational, i32, %struct.AVRational, %struct.AVCodecDescriptor*, i64, i64, i64, i64, i8*, i32, i32, i32, i32, i16*, i8*, i8*, i32, %struct.AVPacketSideData*, i32, %struct.AVBufferRef*, i32, i32, i64, %struct.AVBufferRef*, i32, i32, i32, i32, i64, i32 }
%struct.AVClass = type { i8*, i8* (i8*)*, %struct.AVOption*, i32, i32, i32, i8* (i8*, i8*)*, %struct.AVClass* (%struct.AVClass*)*, i32, i32 (i8*)*, i32 (%struct.AVOptionRanges**, i8*, i8*, i32)*, %struct.AVClass* (i8**)* }
%struct.AVOption = type { i8*, i8*, i32, i32, %union.anon.9, double, double, i32, i8* }
%union.anon.9 = type { i64 }
%struct.AVOptionRanges = type { %struct.AVOptionRange**, i32, i32 }
%struct.AVOptionRange = type { i8*, double, double, double, double, i32 }
%struct.AVCodec = type { i8*, i8*, i32, i32, i32, %struct.AVRational*, i32*, i32*, i32*, i64*, i8, %struct.AVClass*, %struct.AVProfile*, i8*, i32, %struct.AVCodec*, i32 (%struct.AVCodecContext*, %struct.AVCodecContext*)*, %struct.AVCodecDefault*, void (%struct.AVCodec*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, i8*, i32, %struct.AVSubtitle*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*, %struct.AVFrame*, i32*)*, i32 (%struct.AVCodecContext*, i8*, i32*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*, %struct.AVPacket*)*, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, void (%struct.AVCodecContext*)*, i32, i8*, %struct.AVCodecHWConfigInternal**, i32* }
%struct.AVProfile = type { i32, i8* }
%struct.AVCodecDefault = type opaque
%struct.AVSubtitle = type { i16, i32, i32, i32, %struct.AVSubtitleRect**, i64 }
%struct.AVSubtitleRect = type { i32, i32, i32, i32, i32, %struct.AVPicture, [4 x i8*], [4 x i32], i32, i8*, i8*, i32 }
%struct.AVPicture = type { [8 x i8*], [8 x i32] }
%struct.AVPacket = type { %struct.AVBufferRef*, i64, i64, i8*, i32, i32, i32, %struct.AVPacketSideData*, i32, i64, i64, i64 }
%struct.AVCodecHWConfigInternal = type opaque
%struct.AVCodecInternal = type opaque
%struct.RcOverride = type { i32, i32, i32, float }
%struct.AVHWAccel = type { i8*, i32, i32, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVFrame*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*, i32, i8*, i32)*, i32 (%struct.AVCodecContext*, i8*, i32)*, i32 (%struct.AVCodecContext*)*, i32, void (%struct.MpegEncContext*)*, i32 (%struct.AVCodecContext*)*, i32 (%struct.AVCodecContext*)*, i32, i32, i32 (%struct.AVCodecContext*, %struct.AVBufferRef*)* }
%struct.MpegEncContext = type opaque
%struct.AVFrame = type { [8 x i8*], [8 x i32], i8**, i32, i32, i32, i32, i32, i32, %struct.AVRational, i64, i64, i64, i32, i32, i32, i8*, [8 x i64], i32, i32, i32, i32, i64, i32, i64, [8 x %struct.AVBufferRef*], %struct.AVBufferRef**, i32, %struct.AVFrameSideData**, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, %struct.AVDictionary*, i32, i32, i32, i8*, i32, i32, %struct.AVBufferRef*, %struct.AVBufferRef*, %struct.AVBufferRef*, i64, i64, i64, i64, %struct.AVBufferRef* }
%struct.AVFrameSideData = type { i32, i8*, i32, %struct.AVDictionary*, %struct.AVBufferRef* }
%struct.AVDictionary = type opaque
%struct.AVRational = type { i32, i32 }
%struct.AVCodecDescriptor = type { i32, i32, i8*, i8*, i32, i8**, %struct.AVProfile* }
%struct.AVPacketSideData = type { i8*, i32, i32 }
%struct.AVBufferRef = type { %struct.AVBuffer*, i8*, i32 }
%struct.AVBuffer = type opaque
%"class.media::FileDataSource" = type { %"class.media::DataSource", %"class.base::MemoryMappedFile", i8, i8, i64 }
%"class.media::DataSource" = type { i32 (...)** }
%"class.base::MemoryMappedFile" = type { %"class.base::File", i8*, i64 }
%"class.media::BlockingUrlProtocol" = type { %"class.media::FFmpegURLProtocol", %"class.base::Lock", %"class.media::DataSource"*, %"class.base::RepeatingCallback", i8, [7 x i8], %"class.base::WaitableEvent", %"class.base::WaitableEvent", i32, i64 }
%"class.media::FFmpegURLProtocol" = type { i32 (...)** }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2, i8, [7 x i8] }>
%class.scoped_refptr.2 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.3", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.media::FFmpegGlue" = type <{ i8, i8, [6 x i8], %struct.AVFormatContext*, %"class.std::__1::unique_ptr", i32, [4 x i8] }>
%struct.AVFormatContext = type { %struct.AVClass*, %struct.AVInputFormat*, %struct.AVOutputFormat*, i8*, %struct.AVIOContext*, i32, i32, %struct.AVStream**, [1024 x i8], i8*, i64, i64, i64, i32, i32, i32, i64, i64, i8*, i32, i32, %struct.AVProgram**, i32, i32, i32, i32, i32, i32, %struct.AVChapter**, %struct.AVDictionary*, i64, i32, i32, %struct.AVIOInterruptCB, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i8*, i8*, %struct.AVFormatInternal*, i32, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, %struct.AVCodec*, i32, i8*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i64, i8*, i32, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVIOInterruptCB*, %struct.AVDictionary**)*, i8*, i32 (%struct.AVFormatContext*, %struct.AVIOContext**, i8*, i32, %struct.AVDictionary**)*, void (%struct.AVFormatContext*, %struct.AVIOContext*)*, i8*, i32, i32, i32 }
%struct.AVInputFormat = type { i8*, i8*, i32, i8*, %struct.AVCodecTag**, %struct.AVClass*, i8*, %struct.AVInputFormat*, i32, i32, i32 (%struct.AVProbeData*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i32)*, i64 (%struct.AVFormatContext*, i32, i64*, i64)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, i32, i64, i64, i64, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)* }
%struct.AVCodecTag = type opaque
%struct.AVProbeData = type { i8*, i8*, i32, i8* }
%struct.AVDeviceInfoList = type opaque
%struct.AVDeviceCapabilitiesQuery = type opaque
%struct.AVOutputFormat = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct.AVCodecTag**, %struct.AVClass*, %struct.AVOutputFormat*, i32, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)*, i32 (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*, %struct.AVPacket*, i32)*, i32 (i32, i32)*, void (%struct.AVFormatContext*, i32, i64*, i64*)*, i32 (%struct.AVFormatContext*, i32, i8*, i64)*, i32 (%struct.AVFormatContext*, i32, %struct.AVFrame**, i32)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceInfoList*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32 (%struct.AVFormatContext*, %struct.AVDeviceCapabilitiesQuery*)*, i32, i32 (%struct.AVFormatContext*)*, void (%struct.AVFormatContext*)*, i32 (%struct.AVFormatContext*, %struct.AVPacket*)* }
%struct.AVIOContext = type { %struct.AVClass*, i8*, i32, i8*, i8*, i8*, i32 (i8*, i8*, i32)*, i32 (i8*, i8*, i32)*, i64 (i8*, i64, i32)*, i64, i32, i32, i32, i64, i8*, i64 (i64, i8*, i32)*, i32, i32 (i8*, i32)*, i64 (i8*, i32, i64, i32)*, i32, i64, i32, i64, i32, i32, i32, i32, i8*, i8*, i32 (i8*, i8*, i32, i32, i64)*, i32, i32, i64, i32 (i8*)*, i64, i8*, i32 }
%struct.AVStream = type { i32, i32, %struct.AVCodecContext*, i8*, %struct.AVRational, i64, i64, i64, i32, i32, %struct.AVRational, %struct.AVDictionary*, %struct.AVRational, %struct.AVPacket, %struct.AVPacketSideData*, i32, i32, %struct.AVRational, i8*, %struct.AVCodecParameters*, i8*, i32, i64, i64, i64, i32, i32, i32, i32, %struct.AVCodecParserContext*, i8*, %struct.AVProbeData, [17 x i64], i8*, i32, i32, i32, i32, i32, i32, %struct.AVStreamInternal* }
%struct.AVCodecParameters = type { i32, i32, i32, i8*, i32, i32, i64, i32, i32, i32, i32, i32, i32, %struct.AVRational, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParserContext = type { i8*, %struct.AVCodecParser*, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32, i32, [4 x i64], [4 x i64], [4 x i64], i32, i64, [4 x i64], i32, i64, i32, i32, i32, [4 x i64], i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.AVCodecParser = type { [5 x i32], i32, i32 (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecParserContext*, %struct.AVCodecContext*, i8**, i32*, i8*, i32)*, void (%struct.AVCodecParserContext*)*, i32 (%struct.AVCodecContext*, i8*, i32)*, %struct.AVCodecParser* }
%struct.AVStreamInternal = type opaque
%struct.AVProgram = type { i32, i32, i32, i32*, i32, %struct.AVDictionary*, i32, i32, i32, i32, i64, i64, i64, i32 }
%struct.AVChapter = type { i32, %struct.AVRational, i64, i64, %struct.AVDictionary* }
%struct.AVIOInterruptCB = type { i32 (i8*)*, i8* }
%struct.AVFormatInternal = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %struct.AVIOContext* }
%"class.base::RepeatingCallback.30" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.media::(anonymous namespace)::Decoder" = type { %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %struct.AVCodecContext* }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.media::FFmpegDecodingLoop"* }
%"class.media::FFmpegDecodingLoop" = type <{ i8, [7 x i8], %struct.AVCodecContext*, %"class.std::__1::unique_ptr.20", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %struct.AVFrame* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

$_ZN4base8internal7InvokerINS0_9BindStateIPFvPbEJS3_EEEFvvEE3RunEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvPbEJS2_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN5media16MediaFileCheckerC1EN4base4FileE = hidden unnamed_addr alias void (%"class.media::MediaFileChecker"*, %"class.base::File"*), void (%"class.media::MediaFileChecker"*, %"class.base::File"*)* @_ZN5media16MediaFileCheckerC2EN4base4FileE
@_ZN5media16MediaFileCheckerD1Ev = hidden unnamed_addr alias void (%"class.media::MediaFileChecker"*), void (%"class.media::MediaFileChecker"*)* @_ZN5media16MediaFileCheckerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16MediaFileCheckerC2EN4base4FileE(%"class.media::MediaFileChecker"*, %"class.base::File"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::MediaFileChecker", %"class.media::MediaFileChecker"* %0, i64 0, i32 0
  tail call void @_ZN4base4FileC1EOS0_(%"class.base::File"* %3, %"class.base::File"* dereferenceable(56) %1) #9
  ret void
}

declare void @_ZN4base4FileC1EOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media16MediaFileCheckerD2Ev(%"class.media::MediaFileChecker"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::MediaFileChecker", %"class.media::MediaFileChecker"* %0, i64 0, i32 0
  tail call void @_ZN4base4FileD1Ev(%"class.base::File"* %2) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media16MediaFileChecker5StartEN4base9TimeDeltaE(%"class.media::MediaFileChecker"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %struct.AVCodecContext*, align 8
  %5 = alloca %struct.AVCodecContext*, align 8
  %6 = alloca %struct.AVCodecContext*, align 8
  %7 = alloca %struct.AVCodecContext*, align 8
  %8 = alloca %"class.media::FileDataSource", align 8
  %9 = alloca %"class.base::File", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.media::BlockingUrlProtocol", align 8
  %12 = alloca %"class.base::RepeatingCallback", align 8
  %13 = alloca %"class.media::FFmpegGlue", align 8
  %14 = alloca %struct.AVPacket, align 8
  %15 = alloca %"class.base::RepeatingCallback.30", align 8
  %16 = alloca %"class.base::RepeatingCallback.30", align 8
  %17 = bitcast %"class.media::FileDataSource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %17) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 96, i1 false)
  call void @_ZN5media14FileDataSourceC1Ev(%"class.media::FileDataSource"* nonnull %8) #9
  %18 = getelementptr inbounds %"class.media::MediaFileChecker", %"class.media::MediaFileChecker"* %0, i64 0, i32 0
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %9, %"class.base::File"* dereferenceable(56) %18) #9
  %19 = call zeroext i1 @_ZN5media14FileDataSource10InitializeEN4base4FileE(%"class.media::FileDataSource"* nonnull %8, %"class.base::File"* nonnull %9) #9
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %9) #9
  br i1 %19, label %20, label %227

20:                                               ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #9
  store i8 1, i8* %10, align 1
  %21 = bitcast %"class.media::BlockingUrlProtocol"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %21) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 120, i1 false)
  %22 = getelementptr inbounds %"class.media::FileDataSource", %"class.media::FileDataSource"* %8, i64 0, i32 0
  %23 = bitcast %"class.base::RepeatingCallback"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = ptrtoint i8* %10 to i64
  %25 = call i8* @_Znwm(i64 48) #10, !noalias !2
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvPbEJS3_EEEFvvEE3RunEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvPbEJS2_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !2
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to i64*
  store i64 ptrtoint (void (i8*)* @_ZN5media12_GLOBAL__N_123OnMediaFileCheckerErrorEPb to i64), i64* %28, align 8, !noalias !2
  %29 = getelementptr inbounds i8, i8* %25, i64 40
  %30 = bitcast i8* %29 to i64*
  store i64 %24, i64* %30, align 8, !noalias !2
  %31 = bitcast %"class.base::RepeatingCallback"* %12 to i8**
  store i8* %25, i8** %31, align 8, !alias.scope !2
  call void @_ZN5media19BlockingUrlProtocolC1EPNS_10DataSourceERKN4base17RepeatingCallbackIFvvEEE(%"class.media::BlockingUrlProtocol"* nonnull %11, %"class.media::DataSource"* nonnull %22, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %12) #9
  %32 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %33 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #9
  %34 = getelementptr inbounds %"class.media::FFmpegGlue", %"class.media::FFmpegGlue"* %13, i64 0, i32 3
  %35 = getelementptr inbounds %"class.media::BlockingUrlProtocol", %"class.media::BlockingUrlProtocol"* %11, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 32, i1 false)
  call void @_ZN5media10FFmpegGlueC1EPNS_17FFmpegURLProtocolE(%"class.media::FFmpegGlue"* nonnull %13, %"class.media::FFmpegURLProtocol"* nonnull %35) #9
  %36 = load %struct.AVFormatContext*, %struct.AVFormatContext** %34, align 8
  %37 = call zeroext i1 @_ZN5media10FFmpegGlue11OpenContextEb(%"class.media::FFmpegGlue"* nonnull %13, i1 zeroext false) #9
  br i1 %37, label %38, label %225

38:                                               ; preds = %20
  %39 = call i32 @avformat_find_stream_info(%struct.AVFormatContext* %36, %struct.AVDictionary** null) #9
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %225, label %41

41:                                               ; preds = %38
  %42 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %36, i64 0, i32 6
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = icmp eq i32 %43, 0
  br i1 %45, label %225, label %46

46:                                               ; preds = %41
  %47 = shl nuw nsw i64 %44, 4
  %48 = call i8* @_Znwm(i64 %47) #10
  %49 = bitcast i8* %48 to %"struct.media::(anonymous namespace)::Decoder"*
  %50 = ptrtoint i8* %48 to i64
  %51 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %49, i64 %44
  %52 = add nsw i64 %44, -1
  %53 = getelementptr %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %49, i64 %52, i32 0, i32 0, i32 0, i32 0
  %54 = ptrtoint %struct.AVCodecContext** %53 to i64
  %55 = sub i64 16, %50
  %56 = add i64 %55, %54
  %57 = and i64 %56, -16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 %57, i1 false) #9
  %58 = ptrtoint %"struct.media::(anonymous namespace)::Decoder"* %51 to i64
  %59 = load i32, i32* %42, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %202, label %61

61:                                               ; preds = %46
  %62 = getelementptr inbounds %struct.AVFormatContext, %struct.AVFormatContext* %36, i64 0, i32 7
  %63 = bitcast %struct.AVCodecContext** %5 to i8*
  %64 = bitcast %struct.AVCodecContext** %4 to i8*
  br label %68

65:                                               ; preds = %110
  %66 = and i8 %111, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %202, label %116

68:                                               ; preds = %61, %110
  %69 = phi i64 [ 0, %61 ], [ %112, %110 ]
  %70 = phi i8 [ 0, %61 ], [ %111, %110 ]
  %71 = load %struct.AVStream**, %struct.AVStream*** %62, align 8
  %72 = getelementptr inbounds %struct.AVStream*, %struct.AVStream** %71, i64 %69
  %73 = load %struct.AVStream*, %struct.AVStream** %72, align 8
  %74 = getelementptr inbounds %struct.AVStream, %struct.AVStream* %73, i64 0, i32 19
  %75 = load %struct.AVCodecParameters*, %struct.AVCodecParameters** %74, align 8
  %76 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp ult i32 %77, 2
  br i1 %78, label %79, label %110

79:                                               ; preds = %68
  %80 = call %struct.AVCodecContext* @_ZN5media24AVStreamToAVCodecContextEPK8AVStream(%struct.AVStream* %73) #9
  %81 = ptrtoint %struct.AVCodecContext* %80 to i64
  %82 = icmp eq %struct.AVCodecContext* %80, null
  br i1 %82, label %110, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.AVCodecParameters, %struct.AVCodecParameters* %75, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = call %struct.AVCodec* @avcodec_find_decoder(i32 %85) #9
  %87 = icmp eq %struct.AVCodec* %86, null
  br i1 %87, label %109, label %88

88:                                               ; preds = %83
  %89 = call i32 @avcodec_open2(%struct.AVCodecContext* nonnull %80, %struct.AVCodec* nonnull %86, %struct.AVDictionary** null) #9
  %90 = icmp sgt i32 %89, -1
  br i1 %90, label %91, label %109

91:                                               ; preds = %88
  %92 = call i8* @_Znwm(i64 32) #10
  %93 = bitcast i8* %92 to %"class.media::FFmpegDecodingLoop"*
  call void @_ZN5media18FFmpegDecodingLoopC1EP14AVCodecContextb(%"class.media::FFmpegDecodingLoop"* nonnull %93, %struct.AVCodecContext* nonnull %80, i1 zeroext false) #9
  %94 = ptrtoint i8* %92 to i64
  %95 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %49, i64 %69
  %96 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %struct.AVCodecContext*, %struct.AVCodecContext** %96, align 8
  %98 = bitcast %"struct.media::(anonymous namespace)::Decoder"* %95 to i64*
  store i64 %81, i64* %98, align 8
  %99 = icmp eq %struct.AVCodecContext* %97, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9
  store %struct.AVCodecContext* %97, %struct.AVCodecContext** %5, align 8
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9
  br label %101

101:                                              ; preds = %100, %91
  %102 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %49, i64 %69, i32 1
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.17"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.media::FFmpegDecodingLoop"*, %"class.media::FFmpegDecodingLoop"** %103, align 8
  %105 = bitcast %"class.std::__1::unique_ptr.17"* %102 to i64*
  store i64 %94, i64* %105, align 8
  %106 = icmp eq %"class.media::FFmpegDecodingLoop"* %104, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %101
  call void @_ZN5media18FFmpegDecodingLoopD1Ev(%"class.media::FFmpegDecodingLoop"* nonnull %104) #9
  %108 = getelementptr inbounds %"class.media::FFmpegDecodingLoop", %"class.media::FFmpegDecodingLoop"* %104, i64 0, i32 0
  call void @_ZdlPv(i8* %108) #10
  br label %110

109:                                              ; preds = %83, %88
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #9
  store %struct.AVCodecContext* %80, %struct.AVCodecContext** %4, align 8
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #9
  br label %110

110:                                              ; preds = %79, %101, %107, %109, %68
  %111 = phi i8 [ %70, %68 ], [ %70, %109 ], [ 1, %107 ], [ 1, %101 ], [ %70, %79 ]
  %112 = add nuw nsw i64 %69, 1
  %113 = load i32, i32* %42, align 4
  %114 = zext i32 %113 to i64
  %115 = icmp ult i64 %112, %114
  br i1 %115, label %68, label %65

116:                                              ; preds = %65
  %117 = bitcast %struct.AVPacket* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %117) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 88, i1 false)
  %118 = bitcast %"class.base::RepeatingCallback.30"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #9
  %119 = call i8* @_Znwm(i64 40) #10, !noalias !7
  %120 = bitcast i8* %119 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %120, void ()* bitcast (i1 (%"class.base::internal::BindStateBase"*, %struct.AVFrame*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media16MediaFileChecker5StartENS_9TimeDeltaEE3$_0JEEEFbP7AVFrameEE3RunEPNS0_13BindStateBaseES9_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5media16MediaFileChecker5StartENS_9TimeDeltaEE3$_0JEE7DestroyEPKNS0_13BindStateBaseE") #9, !noalias !7
  %121 = bitcast %"class.base::RepeatingCallback.30"* %15 to i8**
  store i8* %119, i8** %121, align 8, !alias.scope !7
  %122 = call i64 @_ZN4base9TimeTicks3NowEv() #9
  %123 = icmp slt i64 %1, 5000000
  %124 = select i1 %123, i64 %1, i64 5000000
  %125 = add i64 %124, -9223372036854775807
  %126 = icmp ult i64 %125, 2
  br i1 %126, label %134, label %127

127:                                              ; preds = %116
  %128 = icmp slt i64 %124, 0
  %129 = select i1 %128, i64 -9223372036854775808, i64 9223372036854775807
  %130 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %122, i64 %124) #9
  %131 = extractvalue { i64, i1 } %130, 1
  %132 = extractvalue { i64, i1 } %130, 0
  %133 = select i1 %131, i64 %129, i64 %132, !prof !12
  br label %142

134:                                              ; preds = %116
  %135 = add i64 %122, -9223372036854775807
  %136 = icmp ugt i64 %135, 1
  %137 = icmp eq i64 %122, %124
  %138 = or i1 %136, %137
  br i1 %138, label %142, label %139

139:                                              ; preds = %134
  %140 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #9
  br label %142

142:                                              ; preds = %127, %134, %139
  %143 = phi i64 [ %133, %127 ], [ %1, %134 ], [ %1, %139 ]
  %144 = getelementptr inbounds %struct.AVPacket, %struct.AVPacket* %14, i64 0, i32 5
  %145 = getelementptr inbounds %"class.base::RepeatingCallback.30", %"class.base::RepeatingCallback.30"* %16, i64 0, i32 0
  %146 = getelementptr inbounds %"class.base::RepeatingCallback.30", %"class.base::RepeatingCallback.30"* %15, i64 0, i32 0
  %147 = getelementptr inbounds %"class.base::RepeatingCallback.30", %"class.base::RepeatingCallback.30"* %16, i64 0, i32 0, i32 0
  br label %148

148:                                              ; preds = %169, %142
  %149 = load %struct.AVFormatContext*, %struct.AVFormatContext** %34, align 8
  %150 = call i32 @av_read_frame(%struct.AVFormatContext* %149, %struct.AVPacket* nonnull %14) #9
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %171, label %152

152:                                              ; preds = %148
  %153 = load i32, i32* %144, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %49, i64 %154, i32 1, i32 0, i32 0, i32 0
  %156 = load %"class.media::FFmpegDecodingLoop"*, %"class.media::FFmpegDecodingLoop"** %155, align 8
  %157 = icmp eq %"class.media::FFmpegDecodingLoop"* %156, null
  br i1 %157, label %162, label %158

158:                                              ; preds = %152
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %145, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %146) #9
  %159 = call i32 @_ZN5media18FFmpegDecodingLoop12DecodePacketEPK8AVPacketN4base17RepeatingCallbackIFbP7AVFrameEEE(%"class.media::FFmpegDecodingLoop"* nonnull %156, %struct.AVPacket* nonnull %14, %"class.base::RepeatingCallback.30"* nonnull %16) #9
  %160 = icmp ne i32 %159, 0
  %161 = sext i1 %160 to i32
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %147) #9
  br label %162

162:                                              ; preds = %152, %158
  %163 = phi i32 [ %161, %158 ], [ %150, %152 ]
  call void @av_packet_unref(%struct.AVPacket* nonnull %14) #9
  %164 = call i64 @_ZN4base9TimeTicks3NowEv() #9
  %165 = icmp sge i64 %164, %143
  %166 = load i8, i8* %10, align 1
  %167 = icmp eq i8 %166, 0
  %168 = or i1 %165, %167
  br i1 %168, label %171, label %169

169:                                              ; preds = %162
  %170 = icmp sgt i32 %163, -1
  br i1 %170, label %148, label %171

171:                                              ; preds = %162, %148, %169
  %172 = phi i32 [ %150, %148 ], [ -1, %169 ], [ %163, %162 ]
  %173 = icmp eq %"struct.media::(anonymous namespace)::Decoder"* %51, %49
  br i1 %173, label %191, label %174

174:                                              ; preds = %171
  %175 = bitcast %struct.AVCodecContext** %6 to i8*
  br label %176

176:                                              ; preds = %189, %174
  %177 = phi %"struct.media::(anonymous namespace)::Decoder"* [ %51, %174 ], [ %178, %189 ]
  %178 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %177, i64 -1
  %179 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %177, i64 -1, i32 1, i32 0, i32 0, i32 0
  %180 = load %"class.media::FFmpegDecodingLoop"*, %"class.media::FFmpegDecodingLoop"** %179, align 8
  store %"class.media::FFmpegDecodingLoop"* null, %"class.media::FFmpegDecodingLoop"** %179, align 8
  %181 = icmp eq %"class.media::FFmpegDecodingLoop"* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %176
  call void @_ZN5media18FFmpegDecodingLoopD1Ev(%"class.media::FFmpegDecodingLoop"* nonnull %180) #9
  %183 = getelementptr inbounds %"class.media::FFmpegDecodingLoop", %"class.media::FFmpegDecodingLoop"* %180, i64 0, i32 0
  call void @_ZdlPv(i8* %183) #10
  br label %184

184:                                              ; preds = %182, %176
  %185 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %178, i64 0, i32 0, i32 0, i32 0, i32 0
  %186 = load %struct.AVCodecContext*, %struct.AVCodecContext** %185, align 8
  store %struct.AVCodecContext* null, %struct.AVCodecContext** %185, align 8
  %187 = icmp eq %struct.AVCodecContext* %186, null
  br i1 %187, label %189, label %188

188:                                              ; preds = %184
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #9
  store %struct.AVCodecContext* %186, %struct.AVCodecContext** %6, align 8
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #9
  br label %189

189:                                              ; preds = %188, %184
  %190 = icmp eq %"struct.media::(anonymous namespace)::Decoder"* %178, %49
  br i1 %190, label %191, label %176

191:                                              ; preds = %189, %171
  %192 = ptrtoint i8* %48 to i64
  %193 = load i8, i8* %10, align 1, !range !13
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %199, label %195

195:                                              ; preds = %191
  %196 = icmp eq i32 %172, -541478725
  %197 = icmp sgt i32 %172, -1
  %198 = or i1 %196, %197
  br label %199

199:                                              ; preds = %191, %195
  %200 = phi i1 [ false, %191 ], [ %198, %195 ]
  %201 = getelementptr inbounds %"class.base::RepeatingCallback.30", %"class.base::RepeatingCallback.30"* %15, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %201) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #9
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %117) #9
  br label %202

202:                                              ; preds = %199, %65, %46
  %203 = phi i1 [ false, %46 ], [ %200, %199 ], [ false, %65 ]
  %204 = phi i64 [ %58, %46 ], [ %192, %199 ], [ %58, %65 ]
  %205 = inttoptr i64 %204 to %"struct.media::(anonymous namespace)::Decoder"*
  %206 = icmp eq %"struct.media::(anonymous namespace)::Decoder"* %49, %205
  br i1 %206, label %224, label %207

207:                                              ; preds = %202
  %208 = bitcast %struct.AVCodecContext** %7 to i8*
  br label %209

209:                                              ; preds = %222, %207
  %210 = phi %"struct.media::(anonymous namespace)::Decoder"* [ %205, %207 ], [ %211, %222 ]
  %211 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %210, i64 -1
  %212 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %210, i64 -1, i32 1, i32 0, i32 0, i32 0
  %213 = load %"class.media::FFmpegDecodingLoop"*, %"class.media::FFmpegDecodingLoop"** %212, align 8
  store %"class.media::FFmpegDecodingLoop"* null, %"class.media::FFmpegDecodingLoop"** %212, align 8
  %214 = icmp eq %"class.media::FFmpegDecodingLoop"* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %209
  call void @_ZN5media18FFmpegDecodingLoopD1Ev(%"class.media::FFmpegDecodingLoop"* nonnull %213) #9
  %216 = getelementptr inbounds %"class.media::FFmpegDecodingLoop", %"class.media::FFmpegDecodingLoop"* %213, i64 0, i32 0
  call void @_ZdlPv(i8* %216) #10
  br label %217

217:                                              ; preds = %215, %209
  %218 = getelementptr inbounds %"struct.media::(anonymous namespace)::Decoder", %"struct.media::(anonymous namespace)::Decoder"* %211, i64 0, i32 0, i32 0, i32 0, i32 0
  %219 = load %struct.AVCodecContext*, %struct.AVCodecContext** %218, align 8
  store %struct.AVCodecContext* null, %struct.AVCodecContext** %218, align 8
  %220 = icmp eq %struct.AVCodecContext* %219, null
  br i1 %220, label %222, label %221

221:                                              ; preds = %217
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #9
  store %struct.AVCodecContext* %219, %struct.AVCodecContext** %7, align 8
  call void @avcodec_free_context(%struct.AVCodecContext** nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #9
  br label %222

222:                                              ; preds = %221, %217
  %223 = icmp eq %"struct.media::(anonymous namespace)::Decoder"* %211, %49
  br i1 %223, label %224, label %209

224:                                              ; preds = %222, %202
  call void @_ZdlPv(i8* %48) #10
  br label %225

225:                                              ; preds = %41, %224, %38, %20
  %226 = phi i1 [ false, %20 ], [ false, %38 ], [ %203, %224 ], [ false, %41 ]
  call void @_ZN5media10FFmpegGlueD1Ev(%"class.media::FFmpegGlue"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #9
  call void @_ZN5media19BlockingUrlProtocolD1Ev(%"class.media::BlockingUrlProtocol"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #9
  br label %227

227:                                              ; preds = %2, %225
  %228 = phi i1 [ %226, %225 ], [ false, %2 ]
  call void @_ZN5media14FileDataSourceD1Ev(%"class.media::FileDataSource"* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %17) #9
  ret i1 %228
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5media14FileDataSourceC1Ev(%"class.media::FileDataSource"*) unnamed_addr #1

declare zeroext i1 @_ZN5media14FileDataSource10InitializeEN4base4FileE(%"class.media::FileDataSource"*, %"class.base::File"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN5media12_GLOBAL__N_123OnMediaFileCheckerErrorEPb(i8* nocapture) #4 {
  store i8 0, i8* %0, align 1
  ret void
}

declare void @_ZN5media19BlockingUrlProtocolC1EPNS_10DataSourceERKN4base17RepeatingCallbackIFvvEEE(%"class.media::BlockingUrlProtocol"*, %"class.media::DataSource"*, %"class.base::RepeatingCallback"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN5media10FFmpegGlueC1EPNS_17FFmpegURLProtocolE(%"class.media::FFmpegGlue"*, %"class.media::FFmpegURLProtocol"*) unnamed_addr #1

declare zeroext i1 @_ZN5media10FFmpegGlue11OpenContextEb(%"class.media::FFmpegGlue"*, i1 zeroext) local_unnamed_addr #1

declare i32 @avformat_find_stream_info(%struct.AVFormatContext*, %struct.AVDictionary**) local_unnamed_addr #1

declare %struct.AVCodecContext* @_ZN5media24AVStreamToAVCodecContextEPK8AVStream(%struct.AVStream*) local_unnamed_addr #1

declare %struct.AVCodec* @avcodec_find_decoder(i32) local_unnamed_addr #1

declare i32 @avcodec_open2(%struct.AVCodecContext*, %struct.AVCodec*, %struct.AVDictionary**) local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare i32 @av_read_frame(%struct.AVFormatContext*, %struct.AVPacket*) local_unnamed_addr #1

declare i32 @_ZN5media18FFmpegDecodingLoop12DecodePacketEPK8AVPacketN4base17RepeatingCallbackIFbP7AVFrameEEE(%"class.media::FFmpegDecodingLoop"*, %struct.AVPacket*, %"class.base::RepeatingCallback.30"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

declare void @av_packet_unref(%struct.AVPacket*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5media10FFmpegGlueD1Ev(%"class.media::FFmpegGlue"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media19BlockingUrlProtocolD1Ev(%"class.media::BlockingUrlProtocol"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media14FileDataSourceD1Ev(%"class.media::FileDataSource"*) unnamed_addr #2

declare void @avcodec_free_context(%struct.AVCodecContext**) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5media18FFmpegDecodingLoopD1Ev(%"class.media::FFmpegDecodingLoop"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvPbEJS3_EEEFvvEE3RunEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = bitcast %"class.base::internal::BindStateBase"* %2 to void (i8*)**
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i8**
  %6 = load void (i8*)*, void (i8*)** %3, align 8
  %7 = load i8*, i8** %5, align 8
  tail call void %6(i8* %7) #9
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvPbEJS2_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN5media18FFmpegDecodingLoopC1EP14AVCodecContextb(%"class.media::FFmpegDecodingLoop"*, %struct.AVCodecContext*, i1 zeroext) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @"_ZN4base8internal7InvokerINS0_9BindStateIZN5media16MediaFileChecker5StartENS_9TimeDeltaEE3$_0JEEEFbP7AVFrameEE3RunEPNS0_13BindStateBaseES9_"(%"class.base::internal::BindStateBase"* nocapture readnone, %struct.AVFrame*) #8 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5media16MediaFileChecker5StartENS_9TimeDeltaEE3$_0JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvPbEJS3_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvPbEJS3_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIPFvPbEJS1_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIPFvPbEJS1_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN5media16MediaFileChecker5StartENS_9TimeDeltaEE3$_0JEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN5media16MediaFileChecker5StartENS_9TimeDeltaEE3$_0JEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base13BindRepeatingIZN5media16MediaFileChecker5StartENS_9TimeDeltaEE3$_0JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_: argument 0"}
!11 = distinct !{!11, !"_ZN4base13BindRepeatingIZN5media16MediaFileChecker5StartENS_9TimeDeltaEE3$_0JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS8_DpOS9_"}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{i8 0, i8 2}
