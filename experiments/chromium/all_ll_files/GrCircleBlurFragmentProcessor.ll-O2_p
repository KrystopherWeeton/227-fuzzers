; ModuleID = '../../third_party/skia/src/gpu/effects/generated/GrCircleBlurFragmentProcessor.cpp'
source_filename = "../../third_party/skia/src/gpu/effects/generated/GrCircleBlurFragmentProcessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrCircleBlurFragmentProcessor = type { %class.GrFragmentProcessor.base, %struct.SkRect, float, float, [4 x i8] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.2", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.189" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.5, %class.SkTHashMap, %class.SkTHashMap.13, %class.SkTArray.22, %class.SkTArray.24, i32, i8, [3 x i8] }>
%class.SkTArray.5 = type { %"class.std::__1::unique_ptr.6"*, i64 }
%"class.std::__1::unique_ptr.6" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.24, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.25 }
%class.sk_sp.25 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.13 = type { %class.SkTHashTable.14 }
%class.SkTHashTable.14 = type { i32, i32, %class.SkAutoTArray.15 }
%class.SkAutoTArray.15 = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.223" }
%"struct.std::__1::pair.223" = type { i32, %class.SkTArray.224* }
%class.SkTArray.224 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.22 = type { %"class.std::__1::unique_ptr.23"*, i64 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.224, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.24 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.38 }
%class.SkFibBlockSizes.38 = type { i32 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type { %class.GrRecordingContext*, %"struct.GrPathRendererChain::Options", %class.sk_sp.45, %class.SkTArray.54, %class.GrOpsTask*, %class.SkSTArray.154, %class.SkSTArray.157, %"class.std::__1::unique_ptr.159", %class.sk_sp.175, %class.GrTokenTracker, i8, i8, %class.SkTArray.176, %class.GrHashMapWithCache }
%"struct.GrPathRendererChain::Options" = type { i8, i32 }
%class.sk_sp.45 = type { %"class.GrBufferAllocPool::CpuBufferCache"* }
%"class.GrBufferAllocPool::CpuBufferCache" = type <{ %class.GrNonAtomicRef, [4 x i8], %"class.std::__1::unique_ptr.46", i32, [4 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.GrBufferAllocPool::CpuBufferCache::Buffer"* }
%"struct.GrBufferAllocPool::CpuBufferCache::Buffer" = type <{ %class.sk_sp.49, i8, [7 x i8] }>
%class.sk_sp.49 = type { %class.GrCpuBuffer* }
%class.GrCpuBuffer = type { %class.GrBuffer, %class.GrNonAtomicRef.50, i8*, i64 }
%class.GrBuffer = type { i32 (...)** }
%class.GrNonAtomicRef.50 = type { i32 }
%class.SkTArray.54 = type { %class.sk_sp.55*, i64 }
%class.sk_sp.55 = type { %class.GrRenderTask* }
%class.GrRenderTask = type { %class.SkRefCnt.base, %class.GrRenderTask*, %class.GrRenderTask*, %class.SkSTArray.56, %class.SkTArray.130, i32, i32, %class.SkSTArray.137, %class.SkSTArray.137, %class.GrTextureResolveRenderTask* }
%class.SkSTArray.56 = type { %class.SkAlignedSTStorage.57, %class.SkTArray.58 }
%class.SkAlignedSTStorage.57 = type { [8 x i8] }
%class.SkTArray.58 = type { %class.sk_sp.59*, i64 }
%class.sk_sp.59 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.60, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.125" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.60 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.63 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.61, i8* }
%class.sk_sp.61 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.62, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.62 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.63 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.64, void (i8*)*, i8* }
%class.SkNVRefCnt.64 = type { %"struct.std::__1::atomic" }
%class.GrBackendFormat = type { i32, i8, %union.anon.65, i32, [4 x i8] }
%union.anon.65 = type { %struct.anon }
%struct.anon = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%struct.SkISize = type { i32, i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.60, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.122, %class.sk_sp.124, %class.sk_sp.124 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.97, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.113, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type { %class.SkTDynamicHash, %class.GrImageContext* }
%class.SkTDynamicHash = type { %class.SkTHashTable.67 }
%class.SkTHashTable.67 = type { i32, i32, %class.SkAutoTArray.68 }
%class.SkAutoTArray.68 = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrTextureProxy *, GrUniqueKey, SkTDynamicHash<GrTextureProxy, GrUniqueKey, GrProxyProvider::UniquelyKeyedProxyHashTraits>::AdaptedTraits>::Slot" = type opaque
%class.GrImageContext = type <{ %class.GrContext_Base, %class.GrSingleOwner, [7 x i8] }>
%class.GrThreadSafeCache = type { %class.SkSpinlock, %class.SkTDynamicHash.79, %class.SkTInternalLList, [6656 x i8], %class.SkArenaAlloc, %"struct.GrThreadSafeCache::Entry"* }
%class.SkSpinlock = type { %"struct.std::__1::atomic.75" }
%"struct.std::__1::atomic.75" = type { %"struct.std::__1::__atomic_base.76" }
%"struct.std::__1::__atomic_base.76" = type { %"struct.std::__1::__cxx_atomic_impl.77" }
%"struct.std::__1::__cxx_atomic_impl.77" = type { %"struct.std::__1::__cxx_atomic_base_impl.78" }
%"struct.std::__1::__cxx_atomic_base_impl.78" = type { i8 }
%class.SkTDynamicHash.79 = type { %class.SkTHashTable.80 }
%class.SkTHashTable.80 = type { i32, i32, %class.SkAutoTArray.81 }
%class.SkAutoTArray.81 = type { %"class.std::__1::unique_ptr.82" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"struct.SkTHashTable<GrThreadSafeCache::Entry *, GrUniqueKey, SkTDynamicHash<GrThreadSafeCache::Entry, GrUniqueKey, GrThreadSafeCache::Entry>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrThreadSafeCache::Entry *, GrUniqueKey, SkTDynamicHash<GrThreadSafeCache::Entry, GrUniqueKey, GrThreadSafeCache::Entry>::AdaptedTraits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.GrThreadSafeCache::Entry"*, %"struct.GrThreadSafeCache::Entry"* }
%"struct.GrThreadSafeCache::Entry" = type <{ %"class.std::__1::chrono::time_point", %"struct.GrThreadSafeCache::Entry"*, %"struct.GrThreadSafeCache::Entry"*, %class.GrUniqueKey, %union.anon.195, i32, [4 x i8] }>
%union.anon.195 = type { %class.sk_sp.196, [8 x i8] }
%class.sk_sp.196 = type { %"class.GrThreadSafeCache::VertexData"* }
%"class.GrThreadSafeCache::VertexData" = type { %class.SkNVRefCnt.197, i8*, i32, i64, %class.sk_sp.198 }
%class.SkNVRefCnt.197 = type { %"struct.std::__1::atomic" }
%class.sk_sp.198 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash.88, i32, [4 x i8] }>
%class.SkTDynamicHash.88 = type { %class.SkTHashTable.89 }
%class.SkTHashTable.89 = type { i32, i32, %class.SkAutoTArray.90 }
%class.SkAutoTArray.90 = type { %"class.std::__1::unique_ptr.91" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.97 = type { %class.SkTHashTable.98 }
%class.SkTHashTable.98 = type { i32, i32, %class.SkAutoTArray.99 }
%class.SkAutoTArray.99 = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.106, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.106 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.107" }
%"struct.std::__1::atomic.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__cxx_atomic_impl.110" }
%"struct.std::__1::__cxx_atomic_impl.110" = type { %"struct.std::__1::__cxx_atomic_base_impl.111" }
%"struct.std::__1::__cxx_atomic_base_impl.111" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.112, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.112 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap.113 = type { %class.SkTHashTable.114 }
%class.SkTHashTable.114 = type { i32, i32, %class.SkAutoTArray.115 }
%class.SkAutoTArray.115 = type { %"class.std::__1::unique_ptr.116" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.sk_sp.122 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.123, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.123 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.124 = type { %class.GrGpuBuffer* }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.125" = type { %"struct.std::__1::__atomic_base.126" }
%"struct.std::__1::__atomic_base.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { i64 }
%class.SkTArray.130 = type { %class.GrTextureProxy**, i64 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.131", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%class.SkSTArray.137 = type { %class.SkAlignedSTStorage.138, %class.SkTArray.139 }
%class.SkAlignedSTStorage.138 = type { [8 x i8] }
%class.SkTArray.139 = type { %class.GrRenderTask**, i64 }
%class.GrTextureResolveRenderTask = type opaque
%class.GrOpsTask = type { %class.GrRenderTask, %class.GrAuditTrail*, i8, %class.GrSwizzle, i32, i32, %"struct.std::__1::array", i32, i8, i32, %struct.SkIRect, i32, i32, %class.SkSTArray.140, %class.sk_sp.151, %class.SkTArray.153, %struct.SkRect, %struct.SkIRect }
%class.GrSwizzle = type { i16 }
%"struct.std::__1::array" = type { [4 x float] }
%class.SkSTArray.140 = type { %class.SkAlignedSTStorage.141, %class.SkTArray.142 }
%class.SkAlignedSTStorage.141 = type { [2000 x i8] }
%class.SkTArray.142 = type { %"class.GrOpsTask::OpChain"*, i64 }
%"class.GrOpsTask::OpChain" = type { %"class.GrOpsTask::OpChain::List", %"class.GrProcessorSet::Analysis", [4 x i8], %"class.GrXferProcessor::DstProxyView", %class.GrAppliedClip*, %struct.SkRect }
%"class.GrOpsTask::OpChain::List" = type { %"class.std::__1::unique_ptr.143", %class.GrOp* }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %class.GrOp* }
%class.GrOp = type { i32 (...)**, %"class.std::__1::unique_ptr.143", %class.GrOp*, i16, i16, i32, %struct.SkRect }
%"class.GrProcessorSet::Analysis" = type { i16, [2 x i8] }
%"class.GrXferProcessor::DstProxyView" = type { %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8] }
%class.GrSurfaceProxyView = type <{ %class.sk_sp.59, i32, %class.GrSwizzle, [2 x i8] }>
%struct.SkIPoint = type { i32, i32 }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.149 }
%union.anon.149 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.150, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.150 = type { i32 }
%class.sk_sp.151 = type { %class.GrArenas* }
%class.GrArenas = type { %class.SkNVRefCnt.152, [4 x i8], %class.SkArenaAlloc, %class.GrSubRunAllocator }
%class.SkNVRefCnt.152 = type { %"struct.std::__1::atomic" }
%class.SkTArray.153 = type { %class.GrSurfaceProxy**, i64 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkSTArray.154 = type { %class.SkAlignedSTStorage.155, %class.SkTArray.156 }
%class.SkAlignedSTStorage.155 = type { [32 x i8] }
%class.SkTArray.156 = type { i32*, i64 }
%class.SkSTArray.157 = type { %class.SkAlignedSTStorage.158, %class.SkTArray.54 }
%class.SkAlignedSTStorage.158 = type { [32 x i8] }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %class.GrPathRendererChain* }
%class.GrPathRendererChain = type { %class.SkSTArray.162, %"class.std::__1::unique_ptr.166", %class.GrPathRenderer* }
%class.SkSTArray.162 = type { %class.SkAlignedSTStorage.163, %class.SkTArray.164 }
%class.SkAlignedSTStorage.163 = type { [64 x i8] }
%class.SkTArray.164 = type { %class.sk_sp.165*, i64 }
%class.sk_sp.165 = type { %class.GrPathRenderer* }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %class.GrCoverageCountingPathRenderer* }
%class.GrCoverageCountingPathRenderer = type opaque
%class.GrPathRenderer = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.175 = type { %class.GrSoftwarePathRenderer* }
%class.GrSoftwarePathRenderer = type opaque
%class.GrTokenTracker = type { %class.GrDeferredUploadToken, %class.GrDeferredUploadToken }
%class.GrDeferredUploadToken = type { i64 }
%class.SkTArray.176 = type { %class.GrOnFlushCallbackObject**, i64 }
%class.GrOnFlushCallbackObject = type opaque
%class.GrHashMapWithCache = type { %class.SkTHashMap.177, i32, %class.GrRenderTask** }
%class.SkTHashMap.177 = type { %class.SkTHashTable.178 }
%class.SkTHashTable.178 = type { i32, i32, %class.SkAutoTArray.179 }
%class.SkAutoTArray.179 = type { %"class.std::__1::unique_ptr.180" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrRenderTask *, GrCheapHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %class.GrProxyProvider* }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkBitmap = type { %class.sk_sp.230, %class.SkPixmap, %class.sk_sp.233 }
%class.sk_sp.230 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.231, i32, i32 }
%class.sk_sp.231 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.232, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.232 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.sk_sp.233 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.234", [4 x i8] }
%"class.std::__1::__tuple_leaf" = type { %class.GrSurfaceProxyView }
%"class.std::__1::__tuple_leaf.234" = type { i32 }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.24, %class.SkTArray.202 }
%class.SkTArray.202 = type { %"class.std::__1::unique_ptr.199"*, i64 }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %class.GrGLSLFragmentProcessor* }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.156*, i32, i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrGLSLCircleBlurFragmentProcessor = type <{ %class.GrGLSLFragmentProcessor, %class.GrResourceHandle, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%"struct.GrGLSLFragmentProcessor::EmitArgs" = type { %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrFragmentProcessor*, i8*, i8*, %"class.GrGLSLFragmentProcessor::BuilderInputProvider"* }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.248, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.250, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.259], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.280", %"class.std::__1::vector", i32, %class.SkSTArray.291 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.261, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.261 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.262, i32, [4 x i8] }>
%class.SkSTArray.262 = type { %class.SkAlignedSTStorage.263, %class.SkTArray.156 }
%class.SkAlignedSTStorage.263 = type { [132 x i8] }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.264, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.264 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.265, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.265 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.266"*, [24 x i8] }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %class.GrFragmentProcessor* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.272, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.272 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.276 }
%class.SkTArray.276 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.199"*, %"class.std::__1::unique_ptr.199"*, %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.std::__1::unique_ptr.199"* }
%class.SkSTArray.291 = type { %class.SkAlignedSTStorage.292, %class.SkTArray.293 }
%class.SkAlignedSTStorage.292 = type { [160 x i8] }
%class.SkTArray.293 = type { %class.GrShaderVar*, i64 }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.245 }
%union.anon.245 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.248 = type { %class.SkAlignedSTStorage.249, %class.SkTArray.24 }
%class.SkAlignedSTStorage.249 = type { [120 x i8] }
%class.SkSTArray.250 = type { %class.SkAlignedSTStorage.251, %class.SkTArray.252 }
%class.SkAlignedSTStorage.251 = type { [16 x i8] }
%class.SkTArray.252 = type { %"class.std::__1::unique_ptr.253"*, i64 }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.259 = type { %class.SkAlignedSTStorage.260, %class.SkTArray.24 }
%class.SkAlignedSTStorage.260 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%"class.GrGLSLFragmentProcessor::BuilderInputProvider" = type opaque
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.248, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.250, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.259], i32, i8, [3 x i8], i32, [12 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.246 }
%struct.anon.246 = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN19GrFragmentProcessorD2Ev = comdat any

$_ZN29GrCircleBlurFragmentProcessorD0Ev = comdat any

$_ZNK29GrCircleBlurFragmentProcessor4nameEv = comdat any

$_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE = comdat any

$_ZN19GrFragmentProcessorD0Ev = comdat any

$_ZN33GrGLSLCircleBlurFragmentProcessorD0Ev = comdat any

$_ZN33GrGLSLCircleBlurFragmentProcessor8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE = comdat any

$_ZN33GrGLSLCircleBlurFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN23GrGLSLFragmentProcessorD2Ev = comdat any

$_ZN23GrGLSLFragmentProcessorD0Ev = comdat any

$_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV19GrFragmentProcessor = comdat any

$_ZTV33GrGLSLCircleBlurFragmentProcessor = comdat any

$_ZTV23GrGLSLFragmentProcessor = comdat any

@_ZTV29GrCircleBlurFragmentProcessor = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrCircleBlurFragmentProcessor*)* @_ZN29GrCircleBlurFragmentProcessorD0Ev to i8*), i8* bitcast (i8* (%class.GrCircleBlurFragmentProcessor*)* @_ZNK29GrCircleBlurFragmentProcessor4nameEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.GrCircleBlurFragmentProcessor*)* @_ZNK29GrCircleBlurFragmentProcessor5cloneEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (%class.GrGLSLFragmentProcessor* (%class.GrCircleBlurFragmentProcessor*)* @_ZNK29GrCircleBlurFragmentProcessor17onMakeProgramImplEv to i8*), i8* bitcast (void (%class.GrCircleBlurFragmentProcessor*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK29GrCircleBlurFragmentProcessor21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrCircleBlurFragmentProcessor*, %class.GrFragmentProcessor*)* @_ZNK29GrCircleBlurFragmentProcessor9onIsEqualERK19GrFragmentProcessor to i8*)] }, align 8
@_ZZL21create_profile_effectP18GrRecordingContextRK6SkRectfPfS4_E7kDomain = internal global i32 0, align 4
@_ZGVZL21create_profile_effectP18GrRecordingContextRK6SkRectfPfS4_E7kDomain = internal global i64 0, align 8
@.str = private unnamed_addr constant [18 x i8] c"1-D Circular Blur\00", align 1
@_ZTV19GrFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFragmentProcessor*)* @_ZN19GrFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.GrFragmentProcessor*, %struct.SkRGBA4f*)* @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [28 x i8] c"CircleBlurFragmentProcessor\00", align 1
@.str.2 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrFragmentProcessor.h\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"Subclass must override this if advertising this optimization.\00", align 1
@_ZTV33GrGLSLCircleBlurFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLCircleBlurFragmentProcessor*)* @_ZN33GrGLSLCircleBlurFragmentProcessorD0Ev to i8*), i8* bitcast (void (%class.GrGLSLCircleBlurFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"*)* @_ZN33GrGLSLCircleBlurFragmentProcessor8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLCircleBlurFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN33GrGLSLCircleBlurFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@_ZTV23GrGLSLFragmentProcessor = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager*, %class.GrFragmentProcessor*)* @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor to i8*)] }, comdat, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"circleData\00", align 1
@.str.5 = private unnamed_addr constant [115 x i8] c"half2 vec = half2((sk_FragCoord.xy - float2(%s.xy)) * float(%s.w));\0Ahalf dist = length(vec) + (0.5 - %s.z) * %s.w;\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"\0Ahalf4 inputColor = %s;\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"float2(half2(dist, 0.5))\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"\0Areturn inputColor * %s.w;\0A\00", align 1

@_ZN29GrCircleBlurFragmentProcessorC1ERKS_ = hidden unnamed_addr alias void (%class.GrCircleBlurFragmentProcessor*, %class.GrCircleBlurFragmentProcessor*), void (%class.GrCircleBlurFragmentProcessor*, %class.GrCircleBlurFragmentProcessor*)* @_ZN29GrCircleBlurFragmentProcessorC2ERKS_

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_Z17apply_kernel_in_yPfiffiPKf(float* nocapture, i32, float, float, i32, float* nocapture readonly) local_unnamed_addr #0 {
  %7 = icmp sgt i32 %1, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %6
  %9 = fsub float -0.000000e+00, %3
  %10 = fmul float %3, %3
  %11 = add nsw i32 %4, -1
  %12 = zext i32 %1 to i64
  br label %14

13:                                               ; preds = %52, %6
  ret void

14:                                               ; preds = %52, %8
  %15 = phi i64 [ 0, %8 ], [ %55, %52 ]
  %16 = phi float [ %2, %8 ], [ %56, %52 ]
  %17 = fcmp olt float %16, %9
  %18 = fcmp ogt float %16, %3
  %19 = or i1 %17, %18
  br i1 %19, label %52, label %20

20:                                               ; preds = %14
  %21 = fmul float %16, %16
  %22 = fsub float %10, %21
  %23 = tail call float @sqrtf(float %22) #16
  %24 = fadd float %23, -5.000000e-01
  %25 = tail call float @llvm.floor.f32(float %24)
  %26 = fcmp olt float %25, 0x41DFFFFFE0000000
  %27 = select i1 %26, float %25, float 0x41DFFFFFE0000000
  %28 = fcmp ogt float %27, 0xC1DFFFFFE0000000
  %29 = select i1 %28, float %27, float 0xC1DFFFFFE0000000
  %30 = fptosi float %29 to i32
  %31 = fcmp olt float %24, 0.000000e+00
  br i1 %31, label %32, label %36

32:                                               ; preds = %20
  %33 = fadd float %24, 5.000000e-01
  %34 = load float, float* %5, align 4
  %35 = fmul float %33, %34
  br label %52

36:                                               ; preds = %20
  %37 = icmp sgt i32 %11, %30
  br i1 %37, label %38, label %52

38:                                               ; preds = %36
  %39 = sitofp i32 %30 to float
  %40 = fsub float %24, %39
  %41 = fsub float 1.000000e+00, %40
  %42 = sext i32 %30 to i64
  %43 = getelementptr inbounds float, float* %5, i64 %42
  %44 = load float, float* %43, align 4
  %45 = fmul float %41, %44
  %46 = add nsw i32 %30, 1
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds float, float* %5, i64 %47
  %49 = load float, float* %48, align 4
  %50 = fmul float %40, %49
  %51 = fadd float %45, %50
  br label %52

52:                                               ; preds = %36, %14, %32, %38
  %53 = phi float [ %35, %32 ], [ %51, %38 ], [ 0.000000e+00, %14 ], [ 5.000000e-01, %36 ]
  %54 = getelementptr inbounds float, float* %0, i64 %15
  store float %53, float* %54, align 4
  %55 = add nuw nsw i64 %15, 1
  %56 = fadd float %16, 1.000000e+00
  %57 = icmp eq i64 %55, %12
  br i1 %57, label %13, label %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZN29GrCircleBlurFragmentProcessor4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK6SkRectf(%class.GrFragmentProcessor*, %class.GrRecordingContext*, %struct.SkRect* nocapture readonly dereferenceable(16), float) local_unnamed_addr #4 align 2 {
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %class.GrUniqueKey, align 8
  %7 = alloca %class.GrSurfaceProxyView, align 8
  %8 = alloca %class.GrSurfaceProxyView, align 8
  %9 = alloca %class.SkBitmap, align 8
  %10 = alloca %struct.SkImageInfo, align 16
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %class.GrSurfaceProxyView, align 8
  %13 = alloca %class.GrSurfaceProxyView, align 8
  %14 = ptrtoint %class.GrFragmentProcessor* %0 to i64
  %15 = fcmp ugt float %3, 0x3F9EB851E0000000
  br i1 %15, label %16, label %632

16:                                               ; preds = %4
  %17 = bitcast %class.GrSurfaceProxyView* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17)
  %18 = bitcast %class.GrSurfaceProxyView* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18)
  %19 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  %22 = load float, float* %21, align 4
  %23 = fsub float %20, %22
  %24 = fmul float %23, 5.000000e-01
  %25 = bitcast float %24 to i32
  %26 = and i32 %25, 2139095040
  %27 = icmp eq i32 %26, 2139095040
  %28 = fcmp olt float %24, 0x3F30000000000000
  %29 = or i1 %28, %27
  br i1 %29, label %30, label %31

30:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18)
  br label %625

31:                                               ; preds = %16
  %32 = tail call %class.GrThreadSafeCache* @_ZN18GrRecordingContext15threadSafeCacheEv(%class.GrRecordingContext* %1) #16
  %33 = fdiv float %3, %24
  %34 = fcmp ogt float %33, 8.000000e+00
  %35 = select i1 %34, float 8.000000e+00, float %33
  %36 = fcmp ugt float %35, 0x3FB99999A0000000
  br i1 %36, label %41, label %37

37:                                               ; preds = %31
  %38 = fmul float %3, 3.000000e+00
  %39 = fsub float %24, %38
  %40 = fmul float %3, 6.000000e+00
  br label %54

41:                                               ; preds = %31
  %42 = fmul float %35, 6.553600e+04
  %43 = fcmp olt float %42, 0x41DFFFFFE0000000
  %44 = select i1 %43, float %42, float 0x41DFFFFFE0000000
  %45 = fcmp ogt float %44, 0xC1DFFFFFE0000000
  %46 = select i1 %45, float %44, float 0xC1DFFFFFE0000000
  %47 = fptosi float %46 to i32
  %48 = and i32 %47, -256
  %49 = sitofp i32 %48 to float
  %50 = fmul float %49, 0x3EF0000000000000
  %51 = fmul float %24, %50
  %52 = fmul float %51, 3.000000e+00
  %53 = fadd float %24, %52
  br label %54

54:                                               ; preds = %41, %37
  %55 = phi float [ 0.000000e+00, %41 ], [ %39, %37 ]
  %56 = phi float [ %53, %41 ], [ %40, %37 ]
  %57 = phi i32 [ %48, %41 ], [ 0, %37 ]
  %58 = phi i1 [ false, %41 ], [ true, %37 ]
  %59 = phi float [ %51, %41 ], [ %3, %37 ]
  %60 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %60) #16
  %61 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %62 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %62, align 16, !alias.scope !2
  %63 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %64 = bitcast float* %63 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %64, align 16, !alias.scope !2
  %65 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %65, align 16, !alias.scope !2
  store i32 16, i32* %61, align 4, !alias.scope !2
  %66 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %5, float 5.120000e+02, float 1.000000e+00) #16
  %67 = load atomic i8, i8* bitcast (i64* @_ZGVZL21create_profile_effectP18GrRecordingContextRK6SkRectfPfS4_E7kDomain to i8*) acquire, align 8
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %75, !prof !5

69:                                               ; preds = %54
  %70 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL21create_profile_effectP18GrRecordingContextRK6SkRectfPfS4_E7kDomain) #16
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %69
  %73 = call i32 @_ZN11GrUniqueKey14GenerateDomainEv() #16
  store i32 %73, i32* @_ZZL21create_profile_effectP18GrRecordingContextRK6SkRectfPfS4_E7kDomain, align 4
  %74 = call {}* @llvm.invariant.start.p0i8(i64 4, i8* bitcast (i32* @_ZZL21create_profile_effectP18GrRecordingContextRK6SkRectfPfS4_E7kDomain to i8*)) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZL21create_profile_effectP18GrRecordingContextRK6SkRectfPfS4_E7kDomain) #16
  br label %75

75:                                               ; preds = %72, %69, %54
  %76 = bitcast %class.GrUniqueKey* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %76) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 40, i1 false) #16
  %77 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %6, i64 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i64 0
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i64 1
  %80 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %6, i64 0, i32 1, i32 0
  %81 = bitcast %class.SkData** %80 to i64*
  store i64 0, i64* %81, align 8
  %82 = load i32, i32* @_ZZL21create_profile_effectP18GrRecordingContextRK6SkRectfPfS4_E7kDomain, align 4
  store i32* %78, i32** %77, align 8
  %83 = or i32 %82, 786432
  store i32 %83, i32* %79, align 4
  %84 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %6, i64 0, i32 2
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8** %84, align 8
  %85 = getelementptr inbounds %class.GrUniqueKey, %class.GrUniqueKey* %6, i64 0, i32 0, i32 0, i32 1, i32 0, i64 2
  store i32 %57, i32* %85, align 8
  %86 = lshr i32 %83, 16
  %87 = zext i32 %86 to i64
  %88 = add nsw i64 %87, -4
  %89 = call i32 @_Z17GrResourceKeyHashPKjm(i32* %79, i64 %88) #16
  store i32 %89, i32* %78, align 8
  %90 = bitcast %class.GrSurfaceProxyView* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #16
  %91 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 1
  %93 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %7, i64 0, i32 2, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 16, i1 false) #16
  call void @_ZN17GrThreadSafeCache4findERK11GrUniqueKey(%class.GrSurfaceProxyView* nonnull sret %7, %class.GrThreadSafeCache* %32, %class.GrUniqueKey* nonnull dereferenceable(56) %6) #16
  %94 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %91, align 8
  %95 = icmp eq %class.GrSurfaceProxy* %94, null
  br i1 %95, label %120, label %96

96:                                               ; preds = %75
  %97 = ptrtoint %class.GrSurfaceProxy* %94 to i64
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %91, align 8
  %98 = bitcast %class.GrSurfaceProxyView* %8 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 1
  %100 = load i32, i32* %92, align 8
  store i32 %100, i32* %99, align 8
  %101 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 2, i32 0
  %102 = load i16, i16* %93, align 4
  store i16 %102, i16* %101, align 4
  %103 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %8, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %5, i32 0, i32 0) #16
  %104 = ptrtoint %class.GrFragmentProcessor* %103 to i64
  %105 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %8, i64 0, i32 0, i32 0
  %106 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %105, align 8
  %107 = icmp eq %class.GrSurfaceProxy* %106, null
  br i1 %107, label %556, label %108

108:                                              ; preds = %96
  %109 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %106, i64 0, i32 1
  %110 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = atomicrmw add i32* %110, i32 -1 acq_rel
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %556

113:                                              ; preds = %108
  %114 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %109, i64 -2
  %115 = bitcast %class.SkNVRefCnt* %114 to %class.GrSurfaceProxy*
  %116 = bitcast %class.SkNVRefCnt* %114 to void (%class.GrSurfaceProxy*)***
  %117 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %116, align 8
  %118 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %117, i64 1
  %119 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %118, align 8
  call void %119(%class.GrSurfaceProxy* nonnull %115) #16
  br label %556

120:                                              ; preds = %75
  %121 = bitcast %class.SkBitmap* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %121) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %121, i8 -86, i64 56, i1 false) #16
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %9) #16
  %122 = bitcast %struct.SkImageInfo* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #16
  %123 = bitcast %struct.SkImageInfo* %10 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934593>, <2 x i64>* %123, align 16, !alias.scope !6
  %124 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %10, i64 0, i32 1
  %125 = bitcast %struct.SkISize* %124 to i64*
  store i64 4294967808, i64* %125, align 16, !alias.scope !6
  %126 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %10, i64 0, i32 0
  %127 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %126) #16
  %128 = sext i32 %127 to i64
  %129 = shl nsw i64 %128, 9
  %130 = icmp ult i64 %129, 2147483648
  %131 = select i1 %130, i64 %129, i64 0
  %132 = call zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap* nonnull %9, %struct.SkImageInfo* nonnull dereferenceable(24) %10, i64 %131) #16
  %133 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %10, i64 0, i32 0, i32 0, i32 0
  %134 = load %class.SkColorSpace*, %class.SkColorSpace** %133, align 16
  %135 = icmp eq %class.SkColorSpace* %134, null
  br i1 %135, label %142, label %136

136:                                              ; preds = %120
  %137 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = atomicrmw add i32* %137, i32 -1 acq_rel
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = bitcast %class.SkColorSpace* %134 to i8*
  call void @_ZdlPv(i8* %141) #18
  br label %142

142:                                              ; preds = %140, %136, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #16
  br i1 %132, label %143, label %554

143:                                              ; preds = %142
  br i1 %58, label %144, label %205

144:                                              ; preds = %143
  %145 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %9, i64 0, i32 1, i32 0
  %146 = load i8*, i8** %145, align 8
  %147 = call i8* @_Znam(i64 1024) #18
  %148 = bitcast i8* %147 to float*
  br label %149

149:                                              ; preds = %149, %144
  %150 = phi i64 [ 0, %144 ], [ %159, %149 ]
  %151 = phi float [ 5.000000e-01, %144 ], [ %158, %149 ]
  %152 = phi float [ 0.000000e+00, %144 ], [ %156, %149 ]
  %153 = fmul float %151, %151
  %154 = fmul float %153, 0xBF12000000000000
  %155 = call float @expf(float %154) #16
  %156 = fadd float %152, %155
  %157 = getelementptr inbounds float, float* %148, i64 %150
  store float %155, float* %157, align 4
  %158 = fadd float %151, 1.000000e+00
  %159 = add nuw nsw i64 %150, 1
  %160 = icmp eq i64 %159, 256
  br i1 %160, label %161, label %149

161:                                              ; preds = %149
  %162 = fmul float %156, 2.000000e+00
  br label %163

163:                                              ; preds = %163, %161
  %164 = phi i64 [ 0, %161 ], [ %182, %163 ]
  %165 = phi float [ 0.000000e+00, %161 ], [ %170, %163 ]
  %166 = sub nuw nsw i64 255, %164
  %167 = getelementptr inbounds float, float* %148, i64 %166
  %168 = load float, float* %167, align 4
  %169 = fdiv float %168, %162
  store float %169, float* %167, align 4
  %170 = fadd float %165, %169
  %171 = fcmp ogt float %170, 1.000000e+00
  %172 = select i1 %171, float 1.000000e+00, float %170
  %173 = fcmp ogt float %172, 0.000000e+00
  %174 = select i1 %173, float %172, float 0.000000e+00
  %175 = fmul float %174, 2.550000e+02
  %176 = fpext float %175 to double
  %177 = fadd double %176, 5.000000e-01
  %178 = fptoui double %177 to i32
  %179 = trunc i32 %178 to i8
  %180 = sub nuw nsw i64 511, %164
  %181 = getelementptr inbounds i8, i8* %146, i64 %180
  store i8 %179, i8* %181, align 1
  %182 = add nuw nsw i64 %164, 1
  %183 = icmp eq i64 %182, 256
  br i1 %183, label %184, label %163

184:                                              ; preds = %163, %184
  %185 = phi i64 [ %201, %184 ], [ 0, %163 ]
  %186 = phi float [ %189, %184 ], [ %170, %163 ]
  %187 = getelementptr inbounds float, float* %148, i64 %185
  %188 = load float, float* %187, align 4
  %189 = fadd float %186, %188
  %190 = fcmp ogt float %189, 1.000000e+00
  %191 = select i1 %190, float 1.000000e+00, float %189
  %192 = fcmp ogt float %191, 0.000000e+00
  %193 = select i1 %192, float %191, float 0.000000e+00
  %194 = fmul float %193, 2.550000e+02
  %195 = fpext float %194 to double
  %196 = fadd double %195, 5.000000e-01
  %197 = fptoui double %196 to i32
  %198 = trunc i32 %197 to i8
  %199 = sub nuw nsw i64 255, %185
  %200 = getelementptr inbounds i8, i8* %146, i64 %199
  store i8 %198, i8* %200, align 1
  %201 = add nuw nsw i64 %185, 1
  %202 = icmp eq i64 %201, 256
  br i1 %202, label %203, label %184

203:                                              ; preds = %184
  %204 = getelementptr inbounds i8, i8* %146, i64 511
  store i8 0, i8* %204, align 1
  call void @_ZdaPv(i8* nonnull %147) #18
  br label %446

205:                                              ; preds = %143
  %206 = fdiv float 5.120000e+02, %56
  %207 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %9, i64 0, i32 1, i32 0
  %208 = load i8*, i8** %207, align 8
  %209 = fmul float %206, %59
  %210 = fmul float %24, %206
  %211 = fmul float %209, 6.000000e+00
  %212 = call float @llvm.ceil.f32(float %211) #16
  %213 = fcmp olt float %212, 0x41DFFFFFE0000000
  %214 = select i1 %213, float %212, float 0x41DFFFFFE0000000
  %215 = fcmp ogt float %214, 0xC1DFFFFFE0000000
  %216 = select i1 %215, float %214, float 0xC1DFFFFFE0000000
  %217 = fptosi float %216 to i32
  %218 = add nsw i32 %217, 1
  %219 = ashr i32 %218, 1
  %220 = and i32 %218, -2
  %221 = add nsw i32 %220, 512
  %222 = add nsw i32 %221, %220
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %232, label %224

224:                                              ; preds = %205
  %225 = sext i32 %222 to i64
  %226 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %225, i64 4) #16
  %227 = extractvalue { i64, i1 } %226, 1
  %228 = extractvalue { i64, i1 } %226, 0
  %229 = select i1 %227, i64 -1, i64 %228
  %230 = call i8* @_Znam(i64 %229) #18
  %231 = bitcast i8* %230 to float*
  br label %232

232:                                              ; preds = %224, %205
  %233 = phi i8* [ null, %205 ], [ %230, %224 ]
  %234 = phi float* [ null, %205 ], [ %231, %224 ]
  %235 = sext i32 %219 to i64
  %236 = getelementptr inbounds float, float* %234, i64 %235
  %237 = sext i32 %220 to i64
  %238 = getelementptr inbounds float, float* %234, i64 %237
  %239 = fdiv float 1.000000e+00, %209
  %240 = fmul float %239, -5.000000e-01
  %241 = fmul float %239, %240
  %242 = icmp sgt i32 %217, 0
  br i1 %242, label %243, label %291

243:                                              ; preds = %232
  %244 = zext i32 %219 to i64
  br label %245

245:                                              ; preds = %245, %243
  %246 = phi i64 [ 0, %243 ], [ %255, %245 ]
  %247 = phi float [ 5.000000e-01, %243 ], [ %254, %245 ]
  %248 = phi float [ 0.000000e+00, %243 ], [ %252, %245 ]
  %249 = fmul float %247, %247
  %250 = fmul float %241, %249
  %251 = call float @expf(float %250) #16
  %252 = fadd float %248, %251
  %253 = getelementptr inbounds float, float* %234, i64 %246
  store float %251, float* %253, align 4
  %254 = fadd float %247, 1.000000e+00
  %255 = add nuw nsw i64 %246, 1
  %256 = icmp eq i64 %255, %244
  br i1 %256, label %257, label %245

257:                                              ; preds = %245
  %258 = fmul float %252, 2.000000e+00
  %259 = and i64 %244, 1
  %260 = icmp eq i32 %219, 1
  br i1 %260, label %281, label %261

261:                                              ; preds = %257
  %262 = sub nsw i64 %244, %259
  br label %263

263:                                              ; preds = %263, %261
  %264 = phi i64 [ 0, %261 ], [ %278, %263 ]
  %265 = phi float [ 0.000000e+00, %261 ], [ %276, %263 ]
  %266 = phi i64 [ %262, %261 ], [ %279, %263 ]
  %267 = getelementptr inbounds float, float* %234, i64 %264
  %268 = load float, float* %267, align 4
  %269 = fdiv float %268, %258
  store float %269, float* %267, align 4
  %270 = fadd float %265, %269
  %271 = getelementptr inbounds float, float* %236, i64 %264
  store float %270, float* %271, align 4
  %272 = or i64 %264, 1
  %273 = getelementptr inbounds float, float* %234, i64 %272
  %274 = load float, float* %273, align 4
  %275 = fdiv float %274, %258
  store float %275, float* %273, align 4
  %276 = fadd float %270, %275
  %277 = getelementptr inbounds float, float* %236, i64 %272
  store float %276, float* %277, align 4
  %278 = add nuw nsw i64 %264, 2
  %279 = add i64 %266, -2
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %281, label %263

281:                                              ; preds = %263, %257
  %282 = phi i64 [ 0, %257 ], [ %278, %263 ]
  %283 = phi float [ 0.000000e+00, %257 ], [ %276, %263 ]
  %284 = icmp eq i64 %259, 0
  br i1 %284, label %291, label %285

285:                                              ; preds = %281
  %286 = getelementptr inbounds float, float* %234, i64 %282
  %287 = load float, float* %286, align 4
  %288 = fdiv float %287, %258
  store float %288, float* %286, align 4
  %289 = fadd float %283, %288
  %290 = getelementptr inbounds float, float* %236, i64 %282
  store float %289, float* %290, align 4
  br label %291

291:                                              ; preds = %285, %281, %232
  %292 = icmp sgt i32 %221, 0
  br i1 %292, label %295, label %293

293:                                              ; preds = %291
  %294 = fsub float -0.000000e+00, %210
  br label %347

295:                                              ; preds = %291
  %296 = sub nsw i32 0, %219
  %297 = sitofp i32 %296 to float
  %298 = fadd float %297, 5.000000e-01
  %299 = fsub float -0.000000e+00, %210
  %300 = fmul float %210, %210
  %301 = add nsw i32 %219, -1
  %302 = zext i32 %221 to i64
  br label %303

303:                                              ; preds = %341, %295
  %304 = phi i64 [ 0, %295 ], [ %344, %341 ]
  %305 = phi float [ %298, %295 ], [ %345, %341 ]
  %306 = fcmp olt float %305, %299
  %307 = fcmp ogt float %305, %210
  %308 = or i1 %306, %307
  br i1 %308, label %341, label %309

309:                                              ; preds = %303
  %310 = fmul float %305, %305
  %311 = fsub float %300, %310
  %312 = call float @sqrtf(float %311) #16
  %313 = fadd float %312, -5.000000e-01
  %314 = call float @llvm.floor.f32(float %313) #16
  %315 = fcmp olt float %314, 0x41DFFFFFE0000000
  %316 = select i1 %315, float %314, float 0x41DFFFFFE0000000
  %317 = fcmp ogt float %316, 0xC1DFFFFFE0000000
  %318 = select i1 %317, float %316, float 0xC1DFFFFFE0000000
  %319 = fptosi float %318 to i32
  %320 = fcmp olt float %313, 0.000000e+00
  br i1 %320, label %321, label %325

321:                                              ; preds = %309
  %322 = fadd float %313, 5.000000e-01
  %323 = load float, float* %236, align 4
  %324 = fmul float %322, %323
  br label %341

325:                                              ; preds = %309
  %326 = icmp sgt i32 %301, %319
  br i1 %326, label %327, label %341

327:                                              ; preds = %325
  %328 = sitofp i32 %319 to float
  %329 = fsub float %313, %328
  %330 = fsub float 1.000000e+00, %329
  %331 = sext i32 %319 to i64
  %332 = getelementptr inbounds float, float* %236, i64 %331
  %333 = load float, float* %332, align 4
  %334 = fmul float %330, %333
  %335 = add nsw i32 %319, 1
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds float, float* %236, i64 %336
  %338 = load float, float* %337, align 4
  %339 = fmul float %329, %338
  %340 = fadd float %334, %339
  br label %341

341:                                              ; preds = %325, %303, %327, %321
  %342 = phi float [ %340, %327 ], [ %324, %321 ], [ 0.000000e+00, %303 ], [ 5.000000e-01, %325 ]
  %343 = getelementptr inbounds float, float* %238, i64 %304
  store float %342, float* %343, align 4
  %344 = add nuw nsw i64 %304, 1
  %345 = fadd float %305, 1.000000e+00
  %346 = icmp eq i64 %344, %302
  br i1 %346, label %347, label %303

347:                                              ; preds = %341, %293
  %348 = phi float [ %294, %293 ], [ %299, %341 ]
  %349 = sitofp i32 %219 to float
  %350 = zext i32 %219 to i64
  %351 = and i64 %350, 1
  %352 = icmp eq i32 %219, 1
  %353 = sub nsw i64 %350, %351
  %354 = icmp eq i64 %351, 0
  br label %359

355:                                              ; preds = %431
  %356 = getelementptr inbounds i8, i8* %208, i64 511
  store i8 0, i8* %356, align 1
  %357 = icmp eq float* %234, null
  br i1 %357, label %446, label %358

358:                                              ; preds = %355
  call void @_ZdaPv(i8* %233) #18
  br label %446

359:                                              ; preds = %431, %347
  %360 = phi i64 [ 0, %347 ], [ %444, %431 ]
  %361 = getelementptr inbounds float, float* %238, i64 %360
  br i1 %242, label %362, label %431

362:                                              ; preds = %359
  %363 = trunc i64 %360 to i32
  %364 = sitofp i32 %363 to float
  %365 = fadd float %364, 5.000000e-01
  %366 = fsub float %365, %349
  br label %367

367:                                              ; preds = %385, %362
  %368 = phi i64 [ 0, %362 ], [ %387, %385 ]
  %369 = phi float [ 0.000000e+00, %362 ], [ %386, %385 ]
  %370 = phi float [ %366, %362 ], [ %388, %385 ]
  %371 = fcmp olt float %370, %348
  %372 = fcmp ogt float %370, %210
  %373 = or i1 %371, %372
  br i1 %373, label %385, label %374

374:                                              ; preds = %367
  %375 = getelementptr inbounds float, float* %361, i64 %368
  %376 = load float, float* %375, align 4
  %377 = trunc i64 %368 to i32
  %378 = xor i32 %377, -1
  %379 = add i32 %219, %378
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds float, float* %234, i64 %380
  %382 = load float, float* %381, align 4
  %383 = fmul float %376, %382
  %384 = fadd float %369, %383
  br label %385

385:                                              ; preds = %374, %367
  %386 = phi float [ %369, %367 ], [ %384, %374 ]
  %387 = add nuw nsw i64 %368, 1
  %388 = fadd float %370, 1.000000e+00
  %389 = icmp eq i64 %387, %350
  br i1 %389, label %390, label %367

390:                                              ; preds = %385
  br i1 %352, label %414, label %391

391:                                              ; preds = %390, %643
  %392 = phi i64 [ %645, %643 ], [ 0, %390 ]
  %393 = phi float [ %644, %643 ], [ %386, %390 ]
  %394 = phi float [ %646, %643 ], [ %388, %390 ]
  %395 = phi i64 [ %647, %643 ], [ %353, %390 ]
  %396 = fcmp olt float %394, %348
  %397 = fcmp ogt float %394, %210
  %398 = or i1 %396, %397
  br i1 %398, label %407, label %399

399:                                              ; preds = %391
  %400 = add nsw i64 %392, %235
  %401 = getelementptr inbounds float, float* %361, i64 %400
  %402 = load float, float* %401, align 4
  %403 = getelementptr inbounds float, float* %234, i64 %392
  %404 = load float, float* %403, align 4
  %405 = fmul float %402, %404
  %406 = fadd float %393, %405
  br label %407

407:                                              ; preds = %399, %391
  %408 = phi float [ %393, %391 ], [ %406, %399 ]
  %409 = or i64 %392, 1
  %410 = fadd float %394, 1.000000e+00
  %411 = fcmp olt float %410, %348
  %412 = fcmp ogt float %410, %210
  %413 = or i1 %411, %412
  br i1 %413, label %643, label %635

414:                                              ; preds = %643, %390
  %415 = phi float [ undef, %390 ], [ %644, %643 ]
  %416 = phi i64 [ 0, %390 ], [ %645, %643 ]
  %417 = phi float [ %386, %390 ], [ %644, %643 ]
  %418 = phi float [ %388, %390 ], [ %646, %643 ]
  br i1 %354, label %431, label %419

419:                                              ; preds = %414
  %420 = fcmp olt float %418, %348
  %421 = fcmp ogt float %418, %210
  %422 = or i1 %420, %421
  br i1 %422, label %431, label %423

423:                                              ; preds = %419
  %424 = add nsw i64 %416, %235
  %425 = getelementptr inbounds float, float* %361, i64 %424
  %426 = load float, float* %425, align 4
  %427 = getelementptr inbounds float, float* %234, i64 %416
  %428 = load float, float* %427, align 4
  %429 = fmul float %426, %428
  %430 = fadd float %417, %429
  br label %431

431:                                              ; preds = %414, %419, %423, %359
  %432 = phi float [ 0.000000e+00, %359 ], [ %415, %414 ], [ %417, %419 ], [ %430, %423 ]
  %433 = fmul float %432, 2.000000e+00
  %434 = fcmp ogt float %433, 1.000000e+00
  %435 = select i1 %434, float 1.000000e+00, float %433
  %436 = fcmp ogt float %435, 0.000000e+00
  %437 = select i1 %436, float %435, float 0.000000e+00
  %438 = fmul float %437, 2.550000e+02
  %439 = fpext float %438 to double
  %440 = fadd double %439, 5.000000e-01
  %441 = fptoui double %440 to i32
  %442 = trunc i32 %441 to i8
  %443 = getelementptr inbounds i8, i8* %208, i64 %360
  store i8 %442, i8* %443, align 1
  %444 = add nuw nsw i64 %360, 1
  %445 = icmp eq i64 %444, 511
  br i1 %445, label %355, label %359

446:                                              ; preds = %358, %355, %203
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %9) #16
  %447 = bitcast %"class.std::__1::tuple"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %447) #16
  call void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple"* nonnull sret %11, %class.GrRecordingContext* %1, %class.SkBitmap* nonnull dereferenceable(56) %9, i1 zeroext false, i32 1, i1 zeroext true) #16
  %448 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %449 = bitcast %"class.std::__1::tuple"* %11 to i64*
  %450 = load i64, i64* %449, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %448, align 8
  %451 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %91, align 8
  %452 = bitcast %class.GrSurfaceProxyView* %7 to i64*
  store i64 %450, i64* %452, align 8
  %453 = icmp eq %class.GrSurfaceProxy* %451, null
  br i1 %453, label %468, label %454

454:                                              ; preds = %446
  %455 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %451, i64 0, i32 1
  %456 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %455, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %457 = atomicrmw add i32* %456, i32 -1 acq_rel
  %458 = icmp eq i32 %457, 1
  br i1 %458, label %459, label %466

459:                                              ; preds = %454
  %460 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %455, i64 -2
  %461 = bitcast %class.SkNVRefCnt* %460 to %class.GrSurfaceProxy*
  %462 = bitcast %class.SkNVRefCnt* %460 to void (%class.GrSurfaceProxy*)***
  %463 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %462, align 8
  %464 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %463, i64 1
  %465 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %464, align 8
  call void %465(%class.GrSurfaceProxy* nonnull %461) #16
  br label %466

466:                                              ; preds = %459, %454
  %467 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %448, align 8
  br label %468

468:                                              ; preds = %466, %446
  %469 = phi %class.GrSurfaceProxy* [ %467, %466 ], [ null, %446 ]
  %470 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %471 = load i32, i32* %470, align 8
  store i32 %471, i32* %92, align 8
  %472 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %473 = load i16, i16* %472, align 4
  store i16 %473, i16* %93, align 4
  %474 = icmp eq %class.GrSurfaceProxy* %469, null
  br i1 %474, label %487, label %475

475:                                              ; preds = %468
  %476 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %469, i64 0, i32 1
  %477 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %476, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = atomicrmw add i32* %477, i32 -1 acq_rel
  %479 = icmp eq i32 %478, 1
  br i1 %479, label %480, label %487

480:                                              ; preds = %475
  %481 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %476, i64 -2
  %482 = bitcast %class.SkNVRefCnt* %481 to %class.GrSurfaceProxy*
  %483 = bitcast %class.SkNVRefCnt* %481 to void (%class.GrSurfaceProxy*)***
  %484 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %483, align 8
  %485 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %484, i64 1
  %486 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %485, align 8
  call void %486(%class.GrSurfaceProxy* nonnull %482) #16
  br label %487

487:                                              ; preds = %480, %475, %468
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %447) #16
  %488 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %91, align 8
  %489 = icmp eq %class.GrSurfaceProxy* %488, null
  br i1 %489, label %554, label %490

490:                                              ; preds = %487
  %491 = bitcast %class.GrSurfaceProxyView* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %491) #16
  call void @_ZN17GrThreadSafeCache3addERK11GrUniqueKeyRK18GrSurfaceProxyView(%class.GrSurfaceProxyView* nonnull sret %12, %class.GrThreadSafeCache* %32, %class.GrUniqueKey* nonnull dereferenceable(56) %6, %class.GrSurfaceProxyView* nonnull dereferenceable(16) %7) #16
  %492 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 0, i32 0
  %493 = bitcast %class.GrSurfaceProxyView* %12 to i64*
  %494 = load i64, i64* %493, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %492, align 8
  %495 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %91, align 8
  store i64 %494, i64* %452, align 8
  %496 = icmp eq %class.GrSurfaceProxy* %495, null
  br i1 %496, label %511, label %497

497:                                              ; preds = %490
  %498 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %495, i64 0, i32 1
  %499 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %498, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = atomicrmw add i32* %499, i32 -1 acq_rel
  %501 = icmp eq i32 %500, 1
  br i1 %501, label %502, label %509

502:                                              ; preds = %497
  %503 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %498, i64 -2
  %504 = bitcast %class.SkNVRefCnt* %503 to %class.GrSurfaceProxy*
  %505 = bitcast %class.SkNVRefCnt* %503 to void (%class.GrSurfaceProxy*)***
  %506 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %505, align 8
  %507 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %506, i64 1
  %508 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %507, align 8
  call void %508(%class.GrSurfaceProxy* nonnull %504) #16
  br label %509

509:                                              ; preds = %502, %497
  %510 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %492, align 8
  br label %511

511:                                              ; preds = %509, %490
  %512 = phi %class.GrSurfaceProxy* [ %510, %509 ], [ null, %490 ]
  %513 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 1
  %514 = load i32, i32* %513, align 8
  store i32 %514, i32* %92, align 8
  %515 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %12, i64 0, i32 2, i32 0
  %516 = load i16, i16* %515, align 4
  store i16 %516, i16* %93, align 4
  %517 = icmp eq %class.GrSurfaceProxy* %512, null
  br i1 %517, label %530, label %518

518:                                              ; preds = %511
  %519 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %512, i64 0, i32 1
  %520 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %519, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %521 = atomicrmw add i32* %520, i32 -1 acq_rel
  %522 = icmp eq i32 %521, 1
  br i1 %522, label %523, label %530

523:                                              ; preds = %518
  %524 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %519, i64 -2
  %525 = bitcast %class.SkNVRefCnt* %524 to %class.GrSurfaceProxy*
  %526 = bitcast %class.SkNVRefCnt* %524 to void (%class.GrSurfaceProxy*)***
  %527 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %526, align 8
  %528 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %527, i64 1
  %529 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %528, align 8
  call void %529(%class.GrSurfaceProxy* nonnull %525) #16
  br label %530

530:                                              ; preds = %523, %518, %511
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %491) #16
  %531 = load i64, i64* %452, align 8
  store %class.GrSurfaceProxy* null, %class.GrSurfaceProxy** %91, align 8
  %532 = bitcast %class.GrSurfaceProxyView* %13 to i64*
  store i64 %531, i64* %532, align 8
  %533 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 1
  %534 = load i32, i32* %92, align 8
  store i32 %534, i32* %533, align 8
  %535 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 2, i32 0
  %536 = load i16, i16* %93, align 4
  store i16 %536, i16* %535, align 4
  %537 = call %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView* nonnull %13, i32 2, %class.SkMatrix* nonnull dereferenceable(40) %5, i32 0, i32 0) #16
  %538 = ptrtoint %class.GrFragmentProcessor* %537 to i64
  %539 = getelementptr inbounds %class.GrSurfaceProxyView, %class.GrSurfaceProxyView* %13, i64 0, i32 0, i32 0
  %540 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %539, align 8
  %541 = icmp eq %class.GrSurfaceProxy* %540, null
  br i1 %541, label %554, label %542

542:                                              ; preds = %530
  %543 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %540, i64 0, i32 1
  %544 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %543, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %545 = atomicrmw add i32* %544, i32 -1 acq_rel
  %546 = icmp eq i32 %545, 1
  br i1 %546, label %547, label %554

547:                                              ; preds = %542
  %548 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %543, i64 -2
  %549 = bitcast %class.SkNVRefCnt* %548 to %class.GrSurfaceProxy*
  %550 = bitcast %class.SkNVRefCnt* %548 to void (%class.GrSurfaceProxy*)***
  %551 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %550, align 8
  %552 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %551, i64 1
  %553 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %552, align 8
  call void %553(%class.GrSurfaceProxy* nonnull %549) #16
  br label %554

554:                                              ; preds = %547, %542, %530, %487, %142
  %555 = phi i64 [ 0, %142 ], [ 0, %487 ], [ %538, %530 ], [ %538, %542 ], [ %538, %547 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %121) #16
  br label %556

556:                                              ; preds = %554, %113, %108, %96
  %557 = phi i64 [ %555, %554 ], [ %104, %96 ], [ %104, %108 ], [ %104, %113 ]
  %558 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %91, align 8
  %559 = icmp eq %class.GrSurfaceProxy* %558, null
  br i1 %559, label %572, label %560

560:                                              ; preds = %556
  %561 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %558, i64 0, i32 1
  %562 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %561, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %563 = atomicrmw add i32* %562, i32 -1 acq_rel
  %564 = icmp eq i32 %563, 1
  br i1 %564, label %565, label %572

565:                                              ; preds = %560
  %566 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %561, i64 -2
  %567 = bitcast %class.SkNVRefCnt* %566 to %class.GrSurfaceProxy*
  %568 = bitcast %class.SkNVRefCnt* %566 to void (%class.GrSurfaceProxy*)***
  %569 = load void (%class.GrSurfaceProxy*)**, void (%class.GrSurfaceProxy*)*** %568, align 8
  %570 = getelementptr inbounds void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %569, i64 1
  %571 = load void (%class.GrSurfaceProxy*)*, void (%class.GrSurfaceProxy*)** %570, align 8
  call void %571(%class.GrSurfaceProxy* nonnull %567) #16
  br label %572

572:                                              ; preds = %565, %560, %556
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #16
  %573 = load %class.SkData*, %class.SkData** %80, align 8
  %574 = icmp eq %class.SkData* %573, null
  br i1 %574, label %581, label %575

575:                                              ; preds = %572
  %576 = getelementptr inbounds %class.SkData, %class.SkData* %573, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %577 = atomicrmw add i32* %576, i32 -1 acq_rel
  %578 = icmp eq i32 %577, 1
  br i1 %578, label %579, label %581

579:                                              ; preds = %575
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %573) #16
  %580 = bitcast %class.SkData* %573 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %580) #16
  br label %581

581:                                              ; preds = %579, %575, %572
  %582 = load i32*, i32** %77, align 8
  %583 = icmp eq i32* %582, %78
  br i1 %583, label %586, label %584

584:                                              ; preds = %581
  %585 = bitcast i32* %582 to i8*
  call void @_Z7sk_freePv(i8* %585) #16
  br label %586

586:                                              ; preds = %581, %584
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %76) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %60) #16
  %587 = inttoptr i64 %557 to %class.GrFragmentProcessor*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18)
  %588 = icmp eq i64 %557, 0
  br i1 %588, label %625, label %589

589:                                              ; preds = %586
  %590 = call i8* @_ZN11GrProcessornwEm(i64 88) #16
  %591 = bitcast %struct.SkRect* %2 to <2 x i64>*
  %592 = load <2 x i64>, <2 x i64>* %591, align 4
  %593 = bitcast i8* %590 to %class.GrFragmentProcessor*
  %594 = icmp eq %class.GrFragmentProcessor* %0, null
  br i1 %594, label %599, label %595

595:                                              ; preds = %589
  %596 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 3
  %597 = load i32, i32* %596, align 8
  %598 = and i32 %597, 1
  br label %599

599:                                              ; preds = %595, %589
  %600 = phi i32 [ %598, %595 ], [ 1, %589 ]
  %601 = bitcast i8* %590 to i32 (...)***
  %602 = getelementptr inbounds i8, i8* %590, i64 8
  %603 = bitcast i8* %602 to i32*
  store i32 28, i32* %603, align 8
  %604 = getelementptr inbounds i8, i8* %590, i64 12
  %605 = bitcast i8* %604 to i32*
  store i32 0, i32* %605, align 4
  %606 = getelementptr inbounds i8, i8* %590, i64 24
  %607 = getelementptr inbounds i8, i8* %590, i64 16
  %608 = getelementptr inbounds i8, i8* %590, i64 32
  %609 = bitcast i8* %608 to i64*
  %610 = bitcast i8* %606 to i8**
  store i8* %607, i8** %610, align 8
  store i64 8589934592, i64* %609, align 8
  %611 = getelementptr inbounds i8, i8* %590, i64 40
  %612 = bitcast i8* %611 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %612, align 8
  %613 = getelementptr inbounds i8, i8* %590, i64 48
  %614 = bitcast i8* %613 to i32*
  store i32 %600, i32* %614, align 8
  %615 = getelementptr inbounds i8, i8* %590, i64 52
  %616 = bitcast i8* %615 to i32*
  store i32 0, i32* %616, align 4
  %617 = getelementptr inbounds i8, i8* %590, i64 56
  store i8 0, i8* %617, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV29GrCircleBlurFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %601, align 8
  %618 = getelementptr inbounds i8, i8* %590, i64 60
  %619 = bitcast i8* %618 to <2 x i64>*
  store <2 x i64> %592, <2 x i64>* %619, align 4
  %620 = getelementptr inbounds i8, i8* %590, i64 76
  %621 = bitcast i8* %620 to float*
  store float %55, float* %621, align 4
  %622 = getelementptr inbounds i8, i8* %590, i64 80
  %623 = bitcast i8* %622 to float*
  store float %56, float* %623, align 8
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %593, %class.GrFragmentProcessor* %0, i64 1) #16
  call void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor* %593, %class.GrFragmentProcessor* nonnull %587, i64 3) #16
  %624 = ptrtoint i8* %590 to i64
  br label %632

625:                                              ; preds = %586, %30
  %626 = icmp eq %class.GrFragmentProcessor* %0, null
  br i1 %626, label %632, label %627

627:                                              ; preds = %625
  %628 = bitcast %class.GrFragmentProcessor* %0 to void (%class.GrFragmentProcessor*)***
  %629 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %628, align 8
  %630 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %629, i64 1
  %631 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %630, align 8
  call void %631(%class.GrFragmentProcessor* nonnull %0) #16
  br label %632

632:                                              ; preds = %4, %599, %625, %627
  %633 = phi i64 [ 0, %625 ], [ 0, %627 ], [ %14, %4 ], [ %624, %599 ]
  %634 = inttoptr i64 %633 to %class.GrFragmentProcessor*
  ret %class.GrFragmentProcessor* %634

635:                                              ; preds = %407
  %636 = add nsw i64 %409, %235
  %637 = getelementptr inbounds float, float* %361, i64 %636
  %638 = load float, float* %637, align 4
  %639 = getelementptr inbounds float, float* %234, i64 %409
  %640 = load float, float* %639, align 4
  %641 = fmul float %638, %640
  %642 = fadd float %408, %641
  br label %643

643:                                              ; preds = %635, %407
  %644 = phi float [ %408, %407 ], [ %642, %635 ]
  %645 = add nuw nsw i64 %392, 2
  %646 = fadd float %410, 1.000000e+00
  %647 = add i64 %395, -2
  %648 = icmp eq i64 %647, 0
  br i1 %648, label %414, label %391
}

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLSLFragmentProcessor* @_ZNK29GrCircleBlurFragmentProcessor17onMakeProgramImplEv(%class.GrCircleBlurFragmentProcessor* nocapture readnone) unnamed_addr #6 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #18
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = bitcast i8* %6 to %class.SkString**
  store %class.SkString* null, %class.SkString** %7, align 8
  store i64 1, i64* %5, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 32
  %9 = bitcast i8* %8 to i64*
  %10 = getelementptr inbounds i8, i8* %2, i64 24
  %11 = bitcast i8* %10 to %"class.std::__1::unique_ptr.199"**
  store %"class.std::__1::unique_ptr.199"* null, %"class.std::__1::unique_ptr.199"** %11, align 8
  store i64 1, i64* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV33GrGLSLCircleBlurFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %12 = getelementptr inbounds i8, i8* %2, i64 40
  %13 = bitcast i8* %12 to i32*
  store i32 -1, i32* %13, align 4
  %14 = bitcast i8* %2 to %class.GrGLSLFragmentProcessor*
  ret %class.GrGLSLFragmentProcessor* %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK29GrCircleBlurFragmentProcessor21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrCircleBlurFragmentProcessor* nocapture, %class.GrShaderCaps* nocapture dereferenceable(144), %class.GrProcessorKeyBuilder* nocapture) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK29GrCircleBlurFragmentProcessor9onIsEqualERK19GrFragmentProcessor(%class.GrCircleBlurFragmentProcessor* nocapture readonly, %class.GrFragmentProcessor* nocapture readonly dereferenceable(64)) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 0, i32 5
  %4 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 1, i32 0
  %5 = bitcast [4 x i8]* %3 to float*
  %6 = load float, float* %4, align 4
  %7 = load float, float* %5, align 4
  %8 = fcmp une float %6, %7
  br i1 %8, label %44, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds float, float* %4, i64 1
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 1
  %13 = bitcast [4 x i8]* %12 to float*
  %14 = load float, float* %13, align 4
  %15 = fcmp une float %11, %14
  br i1 %15, label %44, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds float, float* %4, i64 2
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 2
  %20 = bitcast [4 x i8]* %19 to float*
  %21 = load float, float* %20, align 4
  %22 = fcmp une float %18, %21
  br i1 %22, label %44, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds float, float* %4, i64 3
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 3
  %27 = bitcast [4 x i8]* %26 to float*
  %28 = load float, float* %27, align 4
  %29 = fcmp une float %25, %28
  br i1 %29, label %44, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 2
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 0, i32 2
  %34 = bitcast i32* %33 to float*
  %35 = load float, float* %34, align 4
  %36 = fcmp une float %32, %35
  br i1 %36, label %44, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 3
  %39 = load float, float* %38, align 8
  %40 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %1, i64 1, i32 1
  %41 = bitcast %class.SkSTArray* %40 to float*
  %42 = load float, float* %41, align 8
  %43 = fcmp oeq float %39, %42
  br label %44

44:                                               ; preds = %23, %16, %9, %2, %37, %30
  %45 = phi i1 [ false, %30 ], [ %43, %37 ], [ false, %2 ], [ false, %9 ], [ false, %16 ], [ false, %23 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29GrCircleBlurFragmentProcessorC2ERKS_(%class.GrCircleBlurFragmentProcessor*, %class.GrCircleBlurFragmentProcessor* dereferenceable(88)) unnamed_addr #6 align 2 {
  %3 = bitcast %class.GrCircleBlurFragmentProcessor* %0 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrCircleBlurFragmentProcessor* %1 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %1, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 1
  store i32 28, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %12 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %14 = bitcast %class.SkTArray* %11 to i8**
  store i8* %12, i8** %14, align 8
  store i64 8589934592, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %15, align 8
  %16 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 3
  store i32 %7, i32* %16, align 8
  %17 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 4, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 4, i32 1
  store i8 0, i8* %18, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV29GrCircleBlurFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %19 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 1
  %20 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %1, i64 0, i32 1
  %21 = bitcast %struct.SkRect* %19 to i8*
  %22 = bitcast %struct.SkRect* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %21, i8* align 4 %22, i64 16, i1 false)
  %23 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 2
  %24 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %1, i64 0, i32 2
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = bitcast float* %23 to i32*
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 3
  %29 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %1, i64 0, i32 3
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 8
  %32 = bitcast float* %28 to i32*
  store i32 %31, i32* %32, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #16
  ret void
}

declare void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK29GrCircleBlurFragmentProcessor5cloneEv(%class.GrCircleBlurFragmentProcessor*) unnamed_addr #6 align 2 {
  %2 = tail call i8* @_ZN11GrProcessornwEm(i64 88) #16
  %3 = bitcast i8* %2 to %class.GrFragmentProcessor*
  %4 = bitcast %class.GrCircleBlurFragmentProcessor* %0 to %class.GrFragmentProcessor*
  %5 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 7
  %8 = bitcast i8* %2 to i32 (...)***
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 28, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = getelementptr inbounds i8, i8* %2, i64 16
  %15 = getelementptr inbounds i8, i8* %2, i64 32
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 8589934592, i64* %16, align 8
  %18 = getelementptr inbounds i8, i8* %2, i64 40
  %19 = bitcast i8* %18 to %class.GrFragmentProcessor**
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %19, align 8
  %20 = getelementptr inbounds i8, i8* %2, i64 48
  %21 = bitcast i8* %20 to i32*
  store i32 %7, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 52
  %23 = bitcast i8* %22 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %2, i64 56
  store i8 0, i8* %24, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV29GrCircleBlurFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %25 = getelementptr inbounds i8, i8* %2, i64 60
  %26 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 1
  %27 = bitcast %struct.SkRect* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %27, i64 16, i1 false) #16
  %28 = getelementptr inbounds i8, i8* %2, i64 76
  %29 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 2
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = bitcast i8* %28 to i32*
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %2, i64 80
  %34 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 3
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = bitcast i8* %33 to i32*
  store i32 %36, i32* %37, align 8
  tail call void @_ZN19GrFragmentProcessor34cloneAndRegisterAllChildProcessorsERKS_(%class.GrFragmentProcessor* %3, %class.GrFragmentProcessor* dereferenceable(64) %4) #16
  ret %class.GrFragmentProcessor* %3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD2Ev(%class.GrFragmentProcessor*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 8
  %4 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = bitcast i8* %3 to %"class.std::__1::unique_ptr"**
  br label %15

11:                                               ; preds = %26, %1
  %12 = phi i64 [ %6, %1 ], [ %28, %26 ]
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %35, label %32

15:                                               ; preds = %26, %9
  %16 = phi i64 [ 0, %9 ], [ %27, %26 ]
  %17 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %10, align 8
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 %16, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp eq %class.GrFragmentProcessor* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %class.GrFragmentProcessor* %19 to void (%class.GrFragmentProcessor*)***
  %23 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, i64 1
  %25 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %24, align 8
  tail call void %25(%class.GrFragmentProcessor* nonnull %19) #16
  br label %26

26:                                               ; preds = %21, %15
  %27 = add nuw nsw i64 %16, 1
  %28 = load i64, i64* %5, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %15, label %11

32:                                               ; preds = %11
  %33 = bitcast i8* %3 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #16
  br label %35

35:                                               ; preds = %11, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN29GrCircleBlurFragmentProcessorD0Ev(%class.GrCircleBlurFragmentProcessor*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV19GrFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1
  %4 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %0, i64 0, i32 0, i32 1, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %17, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrFragmentProcessor* %18 to void (%class.GrFragmentProcessor*)***
  %22 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrFragmentProcessor* nonnull %18) #16
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #16
  br label %34

34:                                               ; preds = %10, %31
  %35 = bitcast %class.GrCircleBlurFragmentProcessor* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %35) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK29GrCircleBlurFragmentProcessor4nameEv(%class.GrCircleBlurFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  ret i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK19GrFragmentProcessor30constantOutputForConstantInputERK8SkRGBA4fIL11SkAlphaType2EE(%class.GrFragmentProcessor*, %struct.SkRGBA4f* dereferenceable(16)) unnamed_addr #6 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2, i64 0, i64 0), i32 397, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0)) #19
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

declare i32 @_ZN11GrUniqueKey14GenerateDomainEv() local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare void @_ZN17GrThreadSafeCache4findERK11GrUniqueKey(%class.GrSurfaceProxyView* sret, %class.GrThreadSafeCache*, %class.GrUniqueKey* dereferenceable(56)) local_unnamed_addr #5

declare %class.GrFragmentProcessor* @_ZN15GrTextureEffect4MakeE18GrSurfaceProxyView11SkAlphaTypeRK8SkMatrix12SkFilterMode12SkMipmapMode(%class.GrSurfaceProxyView*, i32, %class.SkMatrix* dereferenceable(40), i32, i32) local_unnamed_addr #5

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #5

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #5

declare void @_Z29GrMakeUncachedBitmapProxyViewP18GrRecordingContextRK8SkBitmap11GrMipmapped12SkBackingFit10SkBudgeted(%"class.std::__1::tuple"* sret, %class.GrRecordingContext*, %class.SkBitmap* dereferenceable(56), i1 zeroext, i32, i1 zeroext) local_unnamed_addr #5

declare void @_ZN17GrThreadSafeCache3addERK11GrUniqueKeyRK18GrSurfaceProxyView(%class.GrSurfaceProxyView* sret, %class.GrThreadSafeCache*, %class.GrUniqueKey* dereferenceable(56), %class.GrSurfaceProxyView* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #11

declare %class.GrThreadSafeCache* @_ZN18GrRecordingContext15threadSafeCacheEv(%class.GrRecordingContext*) local_unnamed_addr #5

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

declare i32 @_Z17GrResourceKeyHashPKjm(i32*, i64) local_unnamed_addr #5

declare zeroext i1 @_ZN8SkBitmap14tryAllocPixelsERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #5

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #13

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #12

; Function Attrs: nofree nounwind
declare float @expf(float) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #11

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #11

declare void @_ZN19GrFragmentProcessor13registerChildENSt3__110unique_ptrIS_NS0_14default_deleteIS_EEEEN4SkSL11SampleUsageE(%class.GrFragmentProcessor*, %class.GrFragmentProcessor*, i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrFragmentProcessorD0Ev(%class.GrFragmentProcessor*) unnamed_addr #9 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #15

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN33GrGLSLCircleBlurFragmentProcessorD0Ev(%class.GrGLSLCircleBlurFragmentProcessor*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLCircleBlurFragmentProcessor, %class.GrGLSLCircleBlurFragmentProcessor* %0, i64 0, i32 0
  tail call void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor* %2) #16
  %3 = bitcast %class.GrGLSLCircleBlurFragmentProcessor* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN33GrGLSLCircleBlurFragmentProcessor8emitCodeERN23GrGLSLFragmentProcessor8EmitArgsE(%class.GrGLSLCircleBlurFragmentProcessor*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56)) unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %"class.SkSL::String", align 8
  %7 = alloca %class.SkString, align 8
  %8 = alloca %class.SkString, align 8
  %9 = alloca %"class.SkSL::String", align 8
  %10 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 0
  %11 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %10, align 8
  %12 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 3
  %13 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %12, align 8
  %14 = getelementptr inbounds %"struct.GrGLSLFragmentProcessor::EmitArgs", %"struct.GrGLSLFragmentProcessor::EmitArgs"* %1, i64 0, i32 1
  %15 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %16 = bitcast %class.GrGLSLUniformHandler* %15 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %17 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %16, align 8
  %18 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %17, i64 13
  %19 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %18, align 8
  %20 = tail call i32 %19(%class.GrGLSLUniformHandler* %15, %class.GrFragmentProcessor* %13, i32 16, i32 31, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i1 zeroext true, i32 0, i8** null) #16
  %21 = getelementptr inbounds %class.GrGLSLCircleBlurFragmentProcessor, %class.GrGLSLCircleBlurFragmentProcessor* %0, i64 0, i32 1, i32 0
  store i32 %20, i32* %21, align 8
  %22 = bitcast %class.GrGLSLFPFragmentBuilder* %11 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr i8, i8* %23, i64 -24
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %class.GrGLSLFPFragmentBuilder* %11 to i8*
  %28 = getelementptr inbounds i8, i8* %27, i64 %26
  %29 = bitcast i8* %28 to %class.GrGLSLShaderBuilder*
  %30 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %31 = bitcast %class.GrGLSLUniformHandler* %30 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %32 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %31, align 8
  %33 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %32, i64 3
  %34 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %33, align 8
  %35 = tail call i8* %34(%class.GrGLSLUniformHandler* %30, i32 %20) #16
  %36 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %37 = load i32, i32* %21, align 8
  %38 = bitcast %class.GrGLSLUniformHandler* %36 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %39 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %38, align 8
  %40 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %39, i64 3
  %41 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %40, align 8
  %42 = tail call i8* %41(%class.GrGLSLUniformHandler* %36, i32 %37) #16
  %43 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %44 = load i32, i32* %21, align 8
  %45 = bitcast %class.GrGLSLUniformHandler* %43 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %46 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %45, align 8
  %47 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %46, i64 3
  %48 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %47, align 8
  %49 = tail call i8* %48(%class.GrGLSLUniformHandler* %43, i32 %44) #16
  %50 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %14, align 8
  %51 = load i32, i32* %21, align 8
  %52 = bitcast %class.GrGLSLUniformHandler* %50 to i8* (%class.GrGLSLUniformHandler*, i32)***
  %53 = load i8* (%class.GrGLSLUniformHandler*, i32)**, i8* (%class.GrGLSLUniformHandler*, i32)*** %52, align 8
  %54 = getelementptr inbounds i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %53, i64 3
  %55 = load i8* (%class.GrGLSLUniformHandler*, i32)*, i8* (%class.GrGLSLUniformHandler*, i32)** %54, align 8
  %56 = tail call i8* %55(%class.GrGLSLUniformHandler* %50, i32 %51) #16
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %29, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.5, i64 0, i64 0), i8* %35, i8* %42, i8* %49, i8* %56)
  %57 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #16
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %58, align 8
  %59 = getelementptr inbounds %class.GrGLSLCircleBlurFragmentProcessor, %class.GrGLSLCircleBlurFragmentProcessor* %0, i64 0, i32 0
  %60 = bitcast %"class.SkSL::String"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 0, i8* %61, align 1
  %62 = bitcast %"class.SkSL::String"* %6 to i8*
  store i8 0, i8* %62, align 8
  %63 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %63, i8* nonnull align 8 %62, i64 24, i1 false) #16, !noalias !11
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %5, %class.GrGLSLFragmentProcessor* %59, i32 0, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %4) #16
  %64 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1, !noalias !11
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %2
  %69 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8, !noalias !11
  call void @_ZdlPv(i8* %70) #18
  br label %71

71:                                               ; preds = %2, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63)
  %72 = load i8*, i8** %22, align 8
  %73 = getelementptr i8, i8* %72, i64 -24
  %74 = bitcast i8* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %58, align 8
  %77 = getelementptr inbounds i8, i8* %27, i64 %75
  %78 = bitcast i8* %77 to %class.GrGLSLShaderBuilder*
  %79 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %76, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %78, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i8* %79)
  %80 = bitcast %class.SkString* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #16
  %81 = getelementptr inbounds %class.SkString, %class.SkString* %7, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %81, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0)) #16
  %82 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #16
  %83 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %83, align 8
  %84 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %81, align 8
  %85 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %84, i64 0, i32 2
  %86 = call i64 @strlen(i8* %85) #16
  %87 = icmp ugt i64 %86, -17
  br i1 %87, label %88, label %90

88:                                               ; preds = %71
  %89 = bitcast %"class.SkSL::String"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %89) #19
  unreachable

90:                                               ; preds = %71
  %91 = icmp ult i64 %86, 23
  br i1 %91, label %101, label %92

92:                                               ; preds = %90
  %93 = add nuw i64 %86, 16
  %94 = and i64 %93, -16
  %95 = call i8* @_Znwm(i64 %94) #18
  %96 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %95, i8** %96, align 8
  %97 = or i64 %94, -9223372036854775808
  %98 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %86, i64* %99, align 8
  %100 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %107

101:                                              ; preds = %90
  %102 = trunc i64 %86 to i8
  %103 = bitcast %"class.SkSL::String"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %103, i64 0, i32 1, i32 0
  store i8 %102, i8* %104, align 1
  %105 = bitcast %"class.SkSL::String"* %9 to i8*
  %106 = icmp eq i64 %86, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %101, %92
  %108 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %103, %101 ], [ %100, %92 ]
  %109 = phi i8* [ %105, %101 ], [ %95, %92 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* align 1 %85, i64 %86, i1 false) #16
  br label %110

110:                                              ; preds = %101, %107
  %111 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %103, %101 ], [ %108, %107 ]
  %112 = phi i8* [ %105, %101 ], [ %109, %107 ]
  %113 = getelementptr inbounds i8, i8* %112, i64 %86
  store i8 0, i8* %113, align 1
  %114 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114)
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %116 = load i8, i8* %115, align 1, !noalias !14
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %110
  %119 = bitcast %"class.SkSL::String"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %114, i8* nonnull align 8 %119, i64 24, i1 false) #16, !noalias !14
  br label %126

120:                                              ; preds = %110
  %121 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0
  %122 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8, !noalias !14
  %124 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %125 = load i64, i64* %124, align 8, !noalias !14
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %121, i8* %123, i64 %125) #16
  br label %126

126:                                              ; preds = %120, %118
  call void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* nonnull sret %8, %class.GrGLSLFragmentProcessor* %59, i32 1, i8* null, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56) %1, %"class.SkSL::String"* nonnull %3) #16
  %127 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1, !noalias !14
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8, !noalias !14
  call void @_ZdlPv(i8* %133) #18
  br label %134

134:                                              ; preds = %126, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114)
  %135 = load i8, i8* %115, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %134
  %138 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %139) #18
  br label %140

140:                                              ; preds = %134, %137
  %141 = load i8*, i8** %22, align 8
  %142 = getelementptr i8, i8* %141, i64 -24
  %143 = bitcast i8* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds i8, i8* %27, i64 %144
  %146 = bitcast i8* %145 to %class.GrGLSLShaderBuilder*
  %147 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %83, align 8
  %148 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %147, i64 0, i32 2
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %146, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0), i8* %148)
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #16
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #16
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN33GrGLSLCircleBlurFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLCircleBlurFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #6 comdat align 2 {
  %4 = bitcast %class.GrFragmentProcessor* %2 to %class.GrCircleBlurFragmentProcessor*
  %5 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 0, i32 5
  %6 = bitcast [4 x i8]* %5 to float*
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1
  %9 = bitcast %class.GrFragmentProcessor* %8 to float*
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %class.GrCircleBlurFragmentProcessor, %class.GrCircleBlurFragmentProcessor* %4, i64 0, i32 1, i32 2
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 1
  %14 = bitcast i32* %13 to float*
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 0, i32 2
  %17 = bitcast i32* %16 to float*
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %2, i64 1, i32 1
  %20 = bitcast %class.SkSTArray* %19 to float*
  %21 = load float, float* %20, align 8
  %22 = getelementptr inbounds %class.GrGLSLCircleBlurFragmentProcessor, %class.GrGLSLCircleBlurFragmentProcessor* %0, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = fmul float %7, 5.000000e-01
  %25 = fmul float %12, 5.000000e-01
  %26 = fadd float %24, %25
  %27 = fmul float %10, 5.000000e-01
  %28 = fmul float %15, 5.000000e-01
  %29 = fadd float %27, %28
  %30 = fdiv float 1.000000e+00, %21
  %31 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)***
  %32 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*** %31, align 8
  %33 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %32, i64 16
  %34 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %33, align 8
  tail call void %34(%class.GrGLSLProgramDataManager* %1, i32 %23, float %26, float %29, float %18, float %30) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD2Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV23GrGLSLFragmentProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 2, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray.202, %class.SkTArray.202* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %25, %1
  %11 = phi i64 [ %5, %1 ], [ %27, %25 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %34, label %31

14:                                               ; preds = %25, %8
  %15 = phi i64 [ 0, %8 ], [ %26, %25 ]
  %16 = load %"class.std::__1::unique_ptr.199"*, %"class.std::__1::unique_ptr.199"** %9, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199"* %16, i64 %15, i32 0, i32 0, i32 0
  %18 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %17, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %17, align 8
  %19 = icmp eq %class.GrGLSLFragmentProcessor* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = bitcast %class.GrGLSLFragmentProcessor* %18 to void (%class.GrGLSLFragmentProcessor*)***
  %22 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %22, i64 1
  %24 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %23, align 8
  tail call void %24(%class.GrGLSLFragmentProcessor* nonnull %18) #16
  br label %25

25:                                               ; preds = %20, %14
  %26 = add nuw nsw i64 %15, 1
  %27 = load i64, i64* %4, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = icmp ult i64 %26, %29
  br i1 %30, label %14, label %10

31:                                               ; preds = %10
  %32 = bitcast %class.SkTArray.202* %3 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_Z7sk_freePv(i8* %33) #16
  br label %34

34:                                               ; preds = %10, %31
  %35 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.GrGLSLFragmentProcessor, %class.GrGLSLFragmentProcessor* %0, i64 0, i32 1, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 4294967294
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %class.SkTArray.24, %class.SkTArray.24* %35, i64 0, i32 0
  br label %46

42:                                               ; preds = %46, %34
  %43 = phi i64 [ %37, %34 ], [ %51, %46 ]
  %44 = and i64 %43, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %55

46:                                               ; preds = %46, %40
  %47 = phi i64 [ 0, %40 ], [ %50, %46 ]
  %48 = load %class.SkString*, %class.SkString** %41, align 8
  %49 = getelementptr inbounds %class.SkString, %class.SkString* %48, i64 %47
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %49) #16
  %50 = add nuw nsw i64 %47, 1
  %51 = load i64, i64* %36, align 8
  %52 = lshr i64 %51, 1
  %53 = and i64 %52, 2147483647
  %54 = icmp ult i64 %50, %53
  br i1 %54, label %46, label %42

55:                                               ; preds = %42
  %56 = bitcast %class.SkTArray.24* %35 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #16
  br label %58

58:                                               ; preds = %42, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessorD0Ev(%class.GrGLSLFragmentProcessor*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLFragmentProcessor9onSetDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) unnamed_addr #6 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #16
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret void
}

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #16

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #16

declare void @_ZN23GrGLSLFragmentProcessor11invokeChildEiPKcRNS_8EmitArgsEN4SkSL6StringE(%class.SkString* sret, %class.GrGLSLFragmentProcessor*, i32, i8*, %"struct.GrGLSLFragmentProcessor::EmitArgs"* dereferenceable(56), %"class.SkSL::String"*) local_unnamed_addr #5

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #15

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #17

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!4 = distinct !{!4, !"_ZN8SkMatrix5ScaleEff"}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!8 = distinct !{!8, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!9 = distinct !{!9, !10, !"_ZN11SkImageInfo6MakeA8Eii: argument 0"}
!10 = distinct !{!10, !"_ZN11SkImageInfo6MakeA8Eii"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!13 = distinct !{!13, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE: argument 0"}
!16 = distinct !{!16, !"_ZN23GrGLSLFragmentProcessor11invokeChildEiRNS_8EmitArgsEN4SkSL6StringE"}
