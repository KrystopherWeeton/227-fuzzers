; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_video_encoder_config.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_video_encoder_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.78", i32, [4 x i8], %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.214", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.255", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.194", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__atomic_base.116" }
%"struct.std::__1::__atomic_base.116" = type { %"struct.std::__1::__cxx_atomic_impl.117" }
%"struct.std::__1::__cxx_atomic_impl.117" = type { %"struct.std::__1::__cxx_atomic_base_impl.118" }
%"struct.std::__1::__cxx_atomic_base_impl.118" = type { i64 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist.125"* }
%"class.blink::Worklist.125" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::Worklist.132"* }
%"class.blink::Worklist.132" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::Worklist.139"* }
%"class.blink::Worklist.139" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Worklist.146"* }
%"class.blink::Worklist.146" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist.153"* }
%"class.blink::Worklist.153" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist.160"* }
%"class.blink::Worklist.160" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist.167"* }
%"class.blink::Worklist.167" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.114" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.174", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.188", [4 x i8] }>
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176", %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { i64 }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { float }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.197", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.206" }
%"class.WTF::Vector.206" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.125"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.132"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.139"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.146"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.153"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.288" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.254 }
%class.scoped_refptr.254 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__cxx_atomic_impl.257" }
%"struct.std::__1::__cxx_atomic_impl.257" = type { %"struct.std::__1::__cxx_atomic_base_impl.258" }
%"struct.std::__1::__cxx_atomic_base_impl.258" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::VideoEncoderConfig" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.WTF::String", %"class.blink::Member", i64, %"class.WTF::String", i32, i32, double, %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::AvcEncoderConfig"* }
%"class.blink::AvcEncoderConfig" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.25", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.72", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.259", %"class.std::__1::unique_ptr.264", %"class.blink::Persistent.270", %"class.blink::Persistent.274", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.9", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", i32, i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.25" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ %"struct.WTF::KeyValuePair.29"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.29" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.38", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.33", i8* }
%"class.WTF::HashMap.33" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ %"struct.WTF::KeyValuePair.37"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.37" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.38" = type { %"class.v8::PersistentValueMapBase.39" }
%"class.v8::PersistentValueMapBase.39" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.40", i8* }
%"class.WTF::HashMap.40" = type { %"class.WTF::HashTable.41" }
%"class.WTF::HashTable.41" = type <{ %"struct.WTF::KeyValuePair.44"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.44" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.45" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.56", %"class.WTF::Vector.62", i8, i32 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.295, %"class.blink::Member.314", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.295 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.296", i32, i32, %"class.blink::Persistent.298" }
%"class.WTF::RefCounted.296" = type { %"class.base::RefCounted.297" }
%"class.base::RefCounted.297" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.298" = type { %"class.blink::PersistentBase.299" }
%"class.blink::PersistentBase.299" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.304" }
%"class.WTF::HashMap.304" = type { %"class.WTF::HashTable.305" }
%"class.WTF::HashTable.305" = type <{ %"struct.WTF::KeyValuePair.307"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.307" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.311" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.311" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.311" = type { %"class.v8::TracedReference.312" }
%"class.v8::TracedReference.312" = type { %"class.v8::BasicTracedReference.313" }
%"class.v8::BasicTracedReference.313" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.274" = type { %"class.blink::PersistentBase.275" }
%"class.blink::PersistentBase.275" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.280" }
%"class.WTF::Vector.280" = type { %"class.WTF::VectorBuffer.281" }
%"class.WTF::VectorBuffer.281" = type { %"class.WTF::VectorBufferBase.282" }
%"class.WTF::VectorBufferBase.282" = type { %"struct.std::__1::pair.283"*, i32, i32 }
%"struct.std::__1::pair.283" = type { %"class.blink::UntracedMember", %"class.blink::Member.285" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.316" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.v8::Uint32" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Number" = type { i8 }
%"class.v8::Integer" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [50 x i8] c"Missing required member(s): codec, height, width.\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink20V8VideoEncoderConfig6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoEncoderConfigERNS_14ExceptionStateEE12kValidValues = internal constant [2 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.2 = private unnamed_addr constant [8 x i8] c"discard\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"keep\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"AlphaOption\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"required member codec is undefined.\00", align 1
@_ZZN5blink20V8VideoEncoderConfig6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoEncoderConfigERNS_14ExceptionStateEE12kValidValues_0 = internal constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0)], align 16
@.str.6 = private unnamed_addr constant [6 x i8] c"allow\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"deny\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"require\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"HardwarePreference\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"required member height is undefined.\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"required member width is undefined.\00", align 1
@_ZZN5blinkL31eternalV8VideoEncoderConfigKeysEPN2v87IsolateEE5kKeys = internal constant [11 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i32 0, i32 0)], align 16
@.str.12 = private unnamed_addr constant [6 x i8] c"alpha\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"avc\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"bitrate\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"codec\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"displayHeight\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"displayWidth\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"framerate\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"hardwareAcceleration\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"scalabilityMode\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 11, i8** getelementptr inbounds ([11 x i8*], [11 x i8*]* @_ZZN5blinkL31eternalV8VideoEncoderConfigKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.23 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.24 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.25 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20V8VideoEncoderConfig6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoEncoderConfigERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::VideoEncoderConfig"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::V8StringResource", align 8
  %10 = alloca %"class.blink::V8StringResource", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::V8StringResource", align 8
  %14 = icmp eq %"class.v8::Value"* %1, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.v8::Value"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 3
  %19 = icmp eq i64 %18, 1
  br i1 %19, label %20, label %37

20:                                               ; preds = %15
  %21 = add i64 %17, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = and i64 %17, -4294967296
  %25 = zext i32 %23 to i64
  %26 = or i64 %24, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load i16, i16* %28, align 2
  %30 = icmp eq i16 %29, 67
  br i1 %30, label %31, label %37

31:                                               ; preds = %20
  %32 = add i64 %17, 23
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = ashr i32 %34, 1
  switch i32 %35, label %37 [
    i32 5, label %36
    i32 3, label %36
  ]

36:                                               ; preds = %31, %31, %4
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0)) #7
  br label %1215

37:                                               ; preds = %31, %20, %15
  %38 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %38, label %40, label %39

39:                                               ; preds = %37
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %1215

40:                                               ; preds = %37
  %41 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %42 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to %"class.blink::V8PerIsolateData"**
  %45 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %44, align 8
  %46 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %45, i8* bitcast ([11 x i8*]* @_ZZN5blinkL31eternalV8VideoEncoderConfigKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.316"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.316"*)) #7
  %47 = extractvalue { i64, %"class.v8::Eternal"* } %46, 1
  %48 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %48) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #7
  %49 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %50 = bitcast %"class.v8::Eternal"* %47 to %"class.v8::Value"**
  %51 = load %"class.v8::Value"*, %"class.v8::Value"** %50, align 8
  %52 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %51) #7
  %53 = icmp eq %"class.v8::Value"* %52, null
  br i1 %53, label %54, label %60

54:                                               ; preds = %40
  %55 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %56 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %57 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %57, i64 5
  %59 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %58, align 8
  call void %59(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %55) #7
  br label %1214

60:                                               ; preds = %40
  %61 = bitcast %"class.v8::Value"* %52 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 3
  %64 = icmp eq i64 %63, 1
  br i1 %64, label %65, label %82

65:                                               ; preds = %60
  %66 = add i64 %62, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = and i64 %62, -4294967296
  %70 = zext i32 %68 to i64
  %71 = or i64 %69, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load i16, i16* %73, align 2
  %75 = icmp eq i16 %74, 67
  br i1 %75, label %76, label %82

76:                                               ; preds = %65
  %77 = add i64 %62, 23
  %78 = inttoptr i64 %77 to i32*
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, -2
  %81 = icmp eq i32 %80, 10
  br i1 %81, label %288, label %82

82:                                               ; preds = %65, %60, %76
  %83 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %83) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 152, i1 false)
  %84 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %52, %"class.v8::Value"** %84, align 8
  %85 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %87 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %88 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %89, label %90, label %266

90:                                               ; preds = %82
  %91 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #7
  %92 = load %"class.v8::Value"*, %"class.v8::Value"** %84, align 8
  %93 = icmp eq %"class.v8::Value"* %92, null
  br i1 %93, label %98, label %94, !prof !2

94:                                               ; preds = %90
  %95 = bitcast %"class.v8::Value"* %92 to %"class.v8::String"*
  %96 = load i32, i32* %85, align 8
  %97 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %95, i32 %96) #7
  br label %118

98:                                               ; preds = %90
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %118, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = zext i32 %108 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #7
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %106
  call void @llvm.trap() #7
  unreachable

116:                                              ; preds = %106
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %107, align 4
  br label %118

118:                                              ; preds = %94, %98, %101, %116
  %119 = phi %"class.WTF::StringImpl"* [ %97, %94 ], [ null, %98 ], [ %99, %101 ], [ %99, %116 ]
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"** %120, align 8
  %121 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i64 11) #7
  %122 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %7, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink20V8VideoEncoderConfig6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoEncoderConfigERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #7
  br label %139

139:                                              ; preds = %118, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #7
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #7
  br label %155

155:                                              ; preds = %139, %151, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #7
  br i1 %122, label %156, label %266

156:                                              ; preds = %155
  %157 = load %"class.v8::Value"*, %"class.v8::Value"** %84, align 8
  %158 = icmp eq %"class.v8::Value"* %157, null
  br i1 %158, label %159, label %183, !prof !2

159:                                              ; preds = %156
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %162, label %164

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 8
  br label %208

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %181

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = zext i32 %171 to i33
  %173 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %172, i33 1) #7
  %174 = extractvalue { i33, i1 } %173, 1
  %175 = extractvalue { i33, i1 } %173, 0
  %176 = icmp slt i33 %175, 0
  %177 = or i1 %174, %176
  br i1 %177, label %178, label %179, !prof !2

178:                                              ; preds = %169
  call void @llvm.trap() #7
  unreachable

179:                                              ; preds = %169
  %180 = trunc i33 %175 to i32
  store i32 %180, i32* %170, align 4
  br label %181

181:                                              ; preds = %164, %179
  %182 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 8
  br label %189

183:                                              ; preds = %156
  %184 = bitcast %"class.v8::Value"* %157 to %"class.v8::String"*
  %185 = load i32, i32* %85, align 8
  %186 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %184, i32 %185) #7
  %187 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 8
  %188 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %188, label %208, label %189

189:                                              ; preds = %181, %183
  %190 = phi %"class.WTF::String"* [ %182, %181 ], [ %187, %183 ]
  %191 = phi %"class.WTF::StringImpl"* [ %160, %181 ], [ %186, %183 ]
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %208

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = zext i32 %198 to i33
  %200 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %199, i33 1) #7
  %201 = extractvalue { i33, i1 } %200, 1
  %202 = extractvalue { i33, i1 } %200, 0
  %203 = icmp slt i33 %202, 0
  %204 = or i1 %201, %203
  br i1 %204, label %205, label %206, !prof !2

205:                                              ; preds = %196
  call void @llvm.trap() #7
  unreachable

206:                                              ; preds = %196
  %207 = trunc i33 %202 to i32
  store i32 %207, i32* %197, align 4
  br label %208

208:                                              ; preds = %162, %206, %189, %183
  %209 = phi i1 [ false, %206 ], [ false, %189 ], [ true, %183 ], [ true, %162 ]
  %210 = phi %"class.WTF::String"* [ %190, %206 ], [ %190, %189 ], [ %187, %183 ], [ %163, %162 ]
  %211 = phi %"class.WTF::StringImpl"* [ %191, %206 ], [ %191, %189 ], [ null, %183 ], [ null, %162 ]
  %212 = ptrtoint %"class.WTF::StringImpl"* %211 to i64
  %213 = bitcast %"class.WTF::String"* %210 to i64*
  %214 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %210, i64 0, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  store i64 %212, i64* %213, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %208
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #7
  br label %230

230:                                              ; preds = %208, %226, %229
  br i1 %209, label %244, label %231

231:                                              ; preds = %230
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #7
  br label %244

244:                                              ; preds = %230, %240, %243
  %245 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %246 = load i8*, i8** %245, align 8
  store i8* null, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %249, label %248

248:                                              ; preds = %244
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %246) #7
  br label %249

249:                                              ; preds = %248, %244
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %265, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %250) #7
  br label %265

265:                                              ; preds = %249, %261, %264
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %83) #7
  br label %288

266:                                              ; preds = %155, %82
  %267 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  store i8* null, i8** %267, align 8
  %269 = icmp eq i8* %268, null
  br i1 %269, label %271, label %270

270:                                              ; preds = %266
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %268) #7
  br label %271

271:                                              ; preds = %270, %266
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %272, null
  br i1 %273, label %287, label %274

274:                                              ; preds = %271
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  br i1 %278, label %281, label %283

281:                                              ; preds = %274
  %282 = add i32 %280, -1
  store i32 %282, i32* %279, align 4
  br label %283

283:                                              ; preds = %281, %274
  %284 = phi i32 [ %282, %281 ], [ %280, %274 ]
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %283
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %272) #7
  br label %287

287:                                              ; preds = %271, %283, %286
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %83) #7
  br label %1214

288:                                              ; preds = %265, %76
  %289 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 1, i32 0
  %290 = bitcast %"class.v8::Name"** %289 to %"class.v8::Value"**
  %291 = load %"class.v8::Value"*, %"class.v8::Value"** %290, align 8
  %292 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %291) #7
  %293 = icmp eq %"class.v8::Value"* %292, null
  br i1 %293, label %294, label %300

294:                                              ; preds = %288
  %295 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %296 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %297 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %296, align 8
  %298 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %297, i64 5
  %299 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %298, align 8
  call void %299(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %295) #7
  br label %1214

300:                                              ; preds = %288
  %301 = bitcast %"class.v8::Value"* %292 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = and i64 %302, 3
  %304 = icmp eq i64 %303, 1
  br i1 %304, label %305, label %322

305:                                              ; preds = %300
  %306 = add i64 %302, -1
  %307 = inttoptr i64 %306 to i32*
  %308 = load i32, i32* %307, align 4
  %309 = and i64 %302, -4294967296
  %310 = zext i32 %308 to i64
  %311 = or i64 %309, %310
  %312 = add i64 %311, 7
  %313 = inttoptr i64 %312 to i16*
  %314 = load i16, i16* %313, align 2
  %315 = icmp eq i16 %314, 67
  br i1 %315, label %316, label %322

316:                                              ; preds = %305
  %317 = add i64 %302, 23
  %318 = inttoptr i64 %317 to i32*
  %319 = load i32, i32* %318, align 4
  %320 = and i32 %319, -2
  %321 = icmp eq i32 %320, 10
  br i1 %321, label %328, label %322

322:                                              ; preds = %305, %300, %316
  %323 = call %"class.blink::AvcEncoderConfig"* @_ZN5blink17NativeValueTraitsINS_16AvcEncoderConfigEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %292, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %324 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %325 = load i32, i32* %324, align 8
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %1214

327:                                              ; preds = %322
  call void @_ZN5blink18VideoEncoderConfig6setAvcEPNS_16AvcEncoderConfigE(%"class.blink::VideoEncoderConfig"* %2, %"class.blink::AvcEncoderConfig"* %323) #7
  br label %328

328:                                              ; preds = %327, %316
  %329 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 2, i32 0
  %330 = bitcast %"class.v8::Name"** %329 to %"class.v8::Value"**
  %331 = load %"class.v8::Value"*, %"class.v8::Value"** %330, align 8
  %332 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %331) #7
  %333 = icmp eq %"class.v8::Value"* %332, null
  br i1 %333, label %334, label %340

334:                                              ; preds = %328
  %335 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %336 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %337 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %336, align 8
  %338 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %337, i64 5
  %339 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %338, align 8
  call void %339(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %335) #7
  br label %1214

340:                                              ; preds = %328
  %341 = bitcast %"class.v8::Value"* %332 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = and i64 %342, 3
  %344 = icmp eq i64 %343, 1
  br i1 %344, label %345, label %362

345:                                              ; preds = %340
  %346 = add i64 %342, -1
  %347 = inttoptr i64 %346 to i32*
  %348 = load i32, i32* %347, align 4
  %349 = and i64 %342, -4294967296
  %350 = zext i32 %348 to i64
  %351 = or i64 %349, %350
  %352 = add i64 %351, 7
  %353 = inttoptr i64 %352 to i16*
  %354 = load i16, i16* %353, align 2
  %355 = icmp eq i16 %354, 67
  br i1 %355, label %356, label %362

356:                                              ; preds = %345
  %357 = add i64 %342, 23
  %358 = inttoptr i64 %357 to i32*
  %359 = load i32, i32* %358, align 4
  %360 = and i32 %359, -2
  %361 = icmp eq i32 %360, 10
  br i1 %361, label %384, label %362

362:                                              ; preds = %345, %340, %356
  %363 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %332) #7
  br i1 %363, label %364, label %368, !prof !3

364:                                              ; preds = %362
  %365 = bitcast %"class.v8::Value"* %332 to %"class.v8::Uint32"*
  %366 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %365) #7
  %367 = zext i32 %366 to i64
  br label %376

368:                                              ; preds = %362
  %369 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %332) #7
  br i1 %369, label %370, label %374, !prof !3

370:                                              ; preds = %368
  %371 = bitcast %"class.v8::Value"* %332 to %"class.v8::Int32"*
  %372 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %371) #7
  %373 = sext i32 %372 to i64
  br label %376

374:                                              ; preds = %368
  %375 = call i64 @_ZN5blink12ToUInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %332, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %376

376:                                              ; preds = %364, %370, %374
  %377 = phi i64 [ %367, %364 ], [ %373, %370 ], [ %375, %374 ]
  %378 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %379 = load i32, i32* %378, align 8
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %1214

381:                                              ; preds = %376
  %382 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 10
  store i64 %377, i64* %382, align 8
  %383 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 1
  store i8 1, i8* %383, align 8
  br label %384

384:                                              ; preds = %381, %356
  %385 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 3, i32 0
  %386 = bitcast %"class.v8::Name"** %385 to %"class.v8::Value"**
  %387 = load %"class.v8::Value"*, %"class.v8::Value"** %386, align 8
  %388 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %387) #7
  %389 = icmp eq %"class.v8::Value"* %388, null
  br i1 %389, label %390, label %396

390:                                              ; preds = %384
  %391 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %392 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %393 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %392, align 8
  %394 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %393, i64 5
  %395 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %394, align 8
  call void %395(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %391) #7
  br label %1214

396:                                              ; preds = %384
  %397 = bitcast %"class.v8::Value"* %388 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = and i64 %398, 3
  %400 = icmp eq i64 %399, 1
  br i1 %400, label %401, label %419

401:                                              ; preds = %396
  %402 = add i64 %398, -1
  %403 = inttoptr i64 %402 to i32*
  %404 = load i32, i32* %403, align 4
  %405 = and i64 %398, -4294967296
  %406 = zext i32 %404 to i64
  %407 = or i64 %405, %406
  %408 = add i64 %407, 7
  %409 = inttoptr i64 %408 to i16*
  %410 = load i16, i16* %409, align 2
  %411 = icmp eq i16 %410, 67
  br i1 %411, label %412, label %419

412:                                              ; preds = %401
  %413 = add i64 %398, 23
  %414 = inttoptr i64 %413 to i32*
  %415 = load i32, i32* %414, align 4
  %416 = and i32 %415, -2
  %417 = icmp eq i32 %416, 10
  br i1 %417, label %418, label %419

418:                                              ; preds = %412
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0)) #7
  br label %1214

419:                                              ; preds = %401, %396, %412
  %420 = bitcast %"class.blink::V8StringResource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %420) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %420, i8 -86, i64 152, i1 false)
  %421 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %388, %"class.v8::Value"** %421, align 8
  %422 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 1
  store i32 0, i32* %422, align 8
  %423 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %423, align 8
  %424 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1
  %425 = bitcast %"class.std::__1::unique_ptr"* %424 to i64*
  store i64 0, i64* %425, align 8
  %426 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %426, label %427, label %542

427:                                              ; preds = %419
  %428 = load %"class.v8::Value"*, %"class.v8::Value"** %421, align 8
  %429 = icmp eq %"class.v8::Value"* %428, null
  br i1 %429, label %430, label %454, !prof !2

430:                                              ; preds = %427
  %431 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %423, align 8
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %433, label %435

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 11
  br label %479

435:                                              ; preds = %430
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %440, label %452

440:                                              ; preds = %435
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %442 = load i32, i32* %441, align 4
  %443 = zext i32 %442 to i33
  %444 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %443, i33 1) #7
  %445 = extractvalue { i33, i1 } %444, 1
  %446 = extractvalue { i33, i1 } %444, 0
  %447 = icmp slt i33 %446, 0
  %448 = or i1 %445, %447
  br i1 %448, label %449, label %450, !prof !2

449:                                              ; preds = %440
  call void @llvm.trap() #7
  unreachable

450:                                              ; preds = %440
  %451 = trunc i33 %446 to i32
  store i32 %451, i32* %441, align 4
  br label %452

452:                                              ; preds = %435, %450
  %453 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 11
  br label %460

454:                                              ; preds = %427
  %455 = bitcast %"class.v8::Value"* %428 to %"class.v8::String"*
  %456 = load i32, i32* %422, align 8
  %457 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %455, i32 %456) #7
  %458 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 11
  %459 = icmp eq %"class.WTF::StringImpl"* %457, null
  br i1 %459, label %479, label %460

460:                                              ; preds = %452, %454
  %461 = phi %"class.WTF::String"* [ %453, %452 ], [ %458, %454 ]
  %462 = phi %"class.WTF::StringImpl"* [ %431, %452 ], [ %457, %454 ]
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %462, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %464 = load atomic i32, i32* %463 monotonic, align 4
  %465 = and i32 %464, 2
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %467, label %479

467:                                              ; preds = %460
  %468 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %462, i64 0, i32 0
  %469 = load i32, i32* %468, align 4
  %470 = zext i32 %469 to i33
  %471 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %470, i33 1) #7
  %472 = extractvalue { i33, i1 } %471, 1
  %473 = extractvalue { i33, i1 } %471, 0
  %474 = icmp slt i33 %473, 0
  %475 = or i1 %472, %474
  br i1 %475, label %476, label %477, !prof !2

476:                                              ; preds = %467
  call void @llvm.trap() #7
  unreachable

477:                                              ; preds = %467
  %478 = trunc i33 %473 to i32
  store i32 %478, i32* %468, align 4
  br label %479

479:                                              ; preds = %433, %477, %460, %454
  %480 = phi i1 [ false, %477 ], [ false, %460 ], [ true, %454 ], [ true, %433 ]
  %481 = phi %"class.WTF::String"* [ %461, %477 ], [ %461, %460 ], [ %458, %454 ], [ %434, %433 ]
  %482 = phi %"class.WTF::StringImpl"* [ %462, %477 ], [ %462, %460 ], [ null, %454 ], [ null, %433 ]
  %483 = ptrtoint %"class.WTF::StringImpl"* %482 to i64
  %484 = bitcast %"class.WTF::String"* %481 to i64*
  %485 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %481, i64 0, i32 0, i32 0
  %486 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %485, align 8
  store i64 %483, i64* %484, align 8
  %487 = icmp eq %"class.WTF::StringImpl"* %486, null
  br i1 %487, label %501, label %488

488:                                              ; preds = %479
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = and i32 %490, 2
  %492 = icmp eq i32 %491, 0
  %493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %486, i64 0, i32 0
  %494 = load i32, i32* %493, align 4
  br i1 %492, label %495, label %497

495:                                              ; preds = %488
  %496 = add i32 %494, -1
  store i32 %496, i32* %493, align 4
  br label %497

497:                                              ; preds = %495, %488
  %498 = phi i32 [ %496, %495 ], [ %494, %488 ]
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %501

500:                                              ; preds = %497
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %486) #7
  br label %501

501:                                              ; preds = %479, %497, %500
  br i1 %480, label %515, label %502

502:                                              ; preds = %501
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %482, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load atomic i32, i32* %503 monotonic, align 4
  %505 = and i32 %504, 2
  %506 = icmp eq i32 %505, 0
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %482, i64 0, i32 0
  %508 = load i32, i32* %507, align 4
  br i1 %506, label %509, label %511

509:                                              ; preds = %502
  %510 = add i32 %508, -1
  store i32 %510, i32* %507, align 4
  br label %511

511:                                              ; preds = %509, %502
  %512 = phi i32 [ %510, %509 ], [ %508, %502 ]
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %514, label %515

514:                                              ; preds = %511
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %482) #7
  br label %515

515:                                              ; preds = %501, %511, %514
  %516 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %517 = load i8*, i8** %516, align 8
  store i8* null, i8** %516, align 8
  %518 = icmp eq i8* %517, null
  br i1 %518, label %520, label %519

519:                                              ; preds = %515
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %517) #7
  br label %520

520:                                              ; preds = %519, %515
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %423, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %521, null
  br i1 %522, label %536, label %523

523:                                              ; preds = %520
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %525 = load atomic i32, i32* %524 monotonic, align 4
  %526 = and i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 0
  %529 = load i32, i32* %528, align 4
  br i1 %527, label %530, label %532

530:                                              ; preds = %523
  %531 = add i32 %529, -1
  store i32 %531, i32* %528, align 4
  br label %532

532:                                              ; preds = %530, %523
  %533 = phi i32 [ %531, %530 ], [ %529, %523 ]
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %536

535:                                              ; preds = %532
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %521) #7
  br label %536

536:                                              ; preds = %520, %532, %535
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %420) #7
  %537 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 4, i32 0
  %538 = bitcast %"class.v8::Name"** %537 to %"class.v8::Value"**
  %539 = load %"class.v8::Value"*, %"class.v8::Value"** %538, align 8
  %540 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %539) #7
  %541 = icmp eq %"class.v8::Value"* %540, null
  br i1 %541, label %564, label %570

542:                                              ; preds = %419
  %543 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %544 = load i8*, i8** %543, align 8
  store i8* null, i8** %543, align 8
  %545 = icmp eq i8* %544, null
  br i1 %545, label %547, label %546

546:                                              ; preds = %542
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %544) #7
  br label %547

547:                                              ; preds = %546, %542
  %548 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %423, align 8
  %549 = icmp eq %"class.WTF::StringImpl"* %548, null
  br i1 %549, label %563, label %550

550:                                              ; preds = %547
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %548, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %552 = load atomic i32, i32* %551 monotonic, align 4
  %553 = and i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %548, i64 0, i32 0
  %556 = load i32, i32* %555, align 4
  br i1 %554, label %557, label %559

557:                                              ; preds = %550
  %558 = add i32 %556, -1
  store i32 %558, i32* %555, align 4
  br label %559

559:                                              ; preds = %557, %550
  %560 = phi i32 [ %558, %557 ], [ %556, %550 ]
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %562, label %563

562:                                              ; preds = %559
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %548) #7
  br label %563

563:                                              ; preds = %547, %559, %562
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %420) #7
  br label %1214

564:                                              ; preds = %536
  %565 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %566 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %567 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %566, align 8
  %568 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %567, i64 5
  %569 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %568, align 8
  call void %569(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %565) #7
  br label %1214

570:                                              ; preds = %536
  %571 = bitcast %"class.v8::Value"* %540 to i64*
  %572 = load i64, i64* %571, align 8
  %573 = and i64 %572, 3
  %574 = icmp eq i64 %573, 1
  br i1 %574, label %575, label %592

575:                                              ; preds = %570
  %576 = add i64 %572, -1
  %577 = inttoptr i64 %576 to i32*
  %578 = load i32, i32* %577, align 4
  %579 = and i64 %572, -4294967296
  %580 = zext i32 %578 to i64
  %581 = or i64 %579, %580
  %582 = add i64 %581, 7
  %583 = inttoptr i64 %582 to i16*
  %584 = load i16, i16* %583, align 2
  %585 = icmp eq i16 %584, 67
  br i1 %585, label %586, label %592

586:                                              ; preds = %575
  %587 = add i64 %572, 23
  %588 = inttoptr i64 %587 to i32*
  %589 = load i32, i32* %588, align 4
  %590 = and i32 %589, -2
  %591 = icmp eq i32 %590, 10
  br i1 %591, label %608, label %592

592:                                              ; preds = %575, %570, %586
  %593 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %540) #7
  br i1 %593, label %594, label %597, !prof !3

594:                                              ; preds = %592
  %595 = bitcast %"class.v8::Value"* %540 to %"class.v8::Uint32"*
  %596 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %595) #7
  br label %600

597:                                              ; preds = %592
  %598 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %540) #7
  %599 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %540, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %600

600:                                              ; preds = %594, %597
  %601 = phi i32 [ %596, %594 ], [ %599, %597 ]
  %602 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %603 = load i32, i32* %602, align 8
  %604 = icmp eq i32 %603, 0
  br i1 %604, label %605, label %1214

605:                                              ; preds = %600
  %606 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 12
  store i32 %601, i32* %606, align 8
  %607 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 2
  store i8 1, i8* %607, align 1
  br label %608

608:                                              ; preds = %605, %586
  %609 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 5, i32 0
  %610 = bitcast %"class.v8::Name"** %609 to %"class.v8::Value"**
  %611 = load %"class.v8::Value"*, %"class.v8::Value"** %610, align 8
  %612 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %611) #7
  %613 = icmp eq %"class.v8::Value"* %612, null
  br i1 %613, label %614, label %620

614:                                              ; preds = %608
  %615 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %616 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %617 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %616, align 8
  %618 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %617, i64 5
  %619 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %618, align 8
  call void %619(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %615) #7
  br label %1214

620:                                              ; preds = %608
  %621 = bitcast %"class.v8::Value"* %612 to i64*
  %622 = load i64, i64* %621, align 8
  %623 = and i64 %622, 3
  %624 = icmp eq i64 %623, 1
  br i1 %624, label %625, label %642

625:                                              ; preds = %620
  %626 = add i64 %622, -1
  %627 = inttoptr i64 %626 to i32*
  %628 = load i32, i32* %627, align 4
  %629 = and i64 %622, -4294967296
  %630 = zext i32 %628 to i64
  %631 = or i64 %629, %630
  %632 = add i64 %631, 7
  %633 = inttoptr i64 %632 to i16*
  %634 = load i16, i16* %633, align 2
  %635 = icmp eq i16 %634, 67
  br i1 %635, label %636, label %642

636:                                              ; preds = %625
  %637 = add i64 %622, 23
  %638 = inttoptr i64 %637 to i32*
  %639 = load i32, i32* %638, align 4
  %640 = and i32 %639, -2
  %641 = icmp eq i32 %640, 10
  br i1 %641, label %658, label %642

642:                                              ; preds = %625, %620, %636
  %643 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %612) #7
  br i1 %643, label %644, label %647, !prof !3

644:                                              ; preds = %642
  %645 = bitcast %"class.v8::Value"* %612 to %"class.v8::Uint32"*
  %646 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %645) #7
  br label %650

647:                                              ; preds = %642
  %648 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %612) #7
  %649 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %612, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %650

650:                                              ; preds = %644, %647
  %651 = phi i32 [ %646, %644 ], [ %649, %647 ]
  %652 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %653 = load i32, i32* %652, align 8
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %655, label %1214

655:                                              ; preds = %650
  %656 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 13
  store i32 %651, i32* %656, align 4
  %657 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 3
  store i8 1, i8* %657, align 2
  br label %658

658:                                              ; preds = %655, %636
  %659 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 6, i32 0
  %660 = bitcast %"class.v8::Name"** %659 to %"class.v8::Value"**
  %661 = load %"class.v8::Value"*, %"class.v8::Value"** %660, align 8
  %662 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %661) #7
  %663 = icmp eq %"class.v8::Value"* %662, null
  br i1 %663, label %664, label %670

664:                                              ; preds = %658
  %665 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %666 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %667 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %666, align 8
  %668 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %667, i64 5
  %669 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %668, align 8
  call void %669(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %665) #7
  br label %1214

670:                                              ; preds = %658
  %671 = bitcast %"class.v8::Value"* %662 to i64*
  %672 = load i64, i64* %671, align 8
  %673 = and i64 %672, 3
  %674 = icmp eq i64 %673, 1
  br i1 %674, label %675, label %692

675:                                              ; preds = %670
  %676 = add i64 %672, -1
  %677 = inttoptr i64 %676 to i32*
  %678 = load i32, i32* %677, align 4
  %679 = and i64 %672, -4294967296
  %680 = zext i32 %678 to i64
  %681 = or i64 %679, %680
  %682 = add i64 %681, 7
  %683 = inttoptr i64 %682 to i16*
  %684 = load i16, i16* %683, align 2
  %685 = icmp eq i16 %684, 67
  br i1 %685, label %686, label %692

686:                                              ; preds = %675
  %687 = add i64 %672, 23
  %688 = inttoptr i64 %687 to i32*
  %689 = load i32, i32* %688, align 4
  %690 = and i32 %689, -2
  %691 = icmp eq i32 %690, 10
  br i1 %691, label %700, label %692

692:                                              ; preds = %675, %670, %686
  %693 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %662, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %694 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %695 = load i32, i32* %694, align 8
  %696 = icmp eq i32 %695, 0
  br i1 %696, label %697, label %1214

697:                                              ; preds = %692
  %698 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 14
  store double %693, double* %698, align 8
  %699 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 4
  store i8 1, i8* %699, align 1
  br label %700

700:                                              ; preds = %697, %686
  %701 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 7, i32 0
  %702 = bitcast %"class.v8::Name"** %701 to %"class.v8::Value"**
  %703 = load %"class.v8::Value"*, %"class.v8::Value"** %702, align 8
  %704 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %703) #7
  %705 = icmp eq %"class.v8::Value"* %704, null
  br i1 %705, label %706, label %712

706:                                              ; preds = %700
  %707 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %708 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %709 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %708, align 8
  %710 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %709, i64 5
  %711 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %710, align 8
  call void %711(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %707) #7
  br label %1214

712:                                              ; preds = %700
  %713 = bitcast %"class.v8::Value"* %704 to i64*
  %714 = load i64, i64* %713, align 8
  %715 = and i64 %714, 3
  %716 = icmp eq i64 %715, 1
  br i1 %716, label %717, label %734

717:                                              ; preds = %712
  %718 = add i64 %714, -1
  %719 = inttoptr i64 %718 to i32*
  %720 = load i32, i32* %719, align 4
  %721 = and i64 %714, -4294967296
  %722 = zext i32 %720 to i64
  %723 = or i64 %721, %722
  %724 = add i64 %723, 7
  %725 = inttoptr i64 %724 to i16*
  %726 = load i16, i16* %725, align 2
  %727 = icmp eq i16 %726, 67
  br i1 %727, label %728, label %734

728:                                              ; preds = %717
  %729 = add i64 %714, 23
  %730 = inttoptr i64 %729 to i32*
  %731 = load i32, i32* %730, align 4
  %732 = and i32 %731, -2
  %733 = icmp eq i32 %732, 10
  br i1 %733, label %940, label %734

734:                                              ; preds = %717, %712, %728
  %735 = bitcast %"class.blink::V8StringResource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %735) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %735, i8 -86, i64 152, i1 false)
  %736 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %704, %"class.v8::Value"** %736, align 8
  %737 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 1
  store i32 0, i32* %737, align 8
  %738 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %738, align 8
  %739 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1
  %740 = bitcast %"class.std::__1::unique_ptr"* %739 to i64*
  store i64 0, i64* %740, align 8
  %741 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %10, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %741, label %742, label %918

742:                                              ; preds = %734
  %743 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %743) #7
  %744 = load %"class.v8::Value"*, %"class.v8::Value"** %736, align 8
  %745 = icmp eq %"class.v8::Value"* %744, null
  br i1 %745, label %750, label %746, !prof !2

746:                                              ; preds = %742
  %747 = bitcast %"class.v8::Value"* %744 to %"class.v8::String"*
  %748 = load i32, i32* %737, align 8
  %749 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %747, i32 %748) #7
  br label %770

750:                                              ; preds = %742
  %751 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %738, align 8
  %752 = icmp eq %"class.WTF::StringImpl"* %751, null
  br i1 %752, label %770, label %753

753:                                              ; preds = %750
  %754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %751, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load atomic i32, i32* %754 monotonic, align 4
  %756 = and i32 %755, 2
  %757 = icmp eq i32 %756, 0
  br i1 %757, label %758, label %770

758:                                              ; preds = %753
  %759 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %751, i64 0, i32 0
  %760 = load i32, i32* %759, align 4
  %761 = zext i32 %760 to i33
  %762 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %761, i33 1) #7
  %763 = extractvalue { i33, i1 } %762, 1
  %764 = extractvalue { i33, i1 } %762, 0
  %765 = icmp slt i33 %764, 0
  %766 = or i1 %763, %765
  br i1 %766, label %767, label %768, !prof !2

767:                                              ; preds = %758
  call void @llvm.trap() #7
  unreachable

768:                                              ; preds = %758
  %769 = trunc i33 %764 to i32
  store i32 %769, i32* %759, align 4
  br label %770

770:                                              ; preds = %746, %750, %753, %768
  %771 = phi %"class.WTF::StringImpl"* [ %749, %746 ], [ null, %750 ], [ %751, %753 ], [ %751, %768 ]
  %772 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %771, %"class.WTF::StringImpl"** %772, align 8
  %773 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %773) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i64 18) #7
  %774 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %11, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink20V8VideoEncoderConfig6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoEncoderConfigERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %775 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %776 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %775, align 8
  %777 = icmp eq %"class.WTF::StringImpl"* %776, null
  br i1 %777, label %791, label %778

778:                                              ; preds = %770
  %779 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %776, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %780 = load atomic i32, i32* %779 monotonic, align 4
  %781 = and i32 %780, 2
  %782 = icmp eq i32 %781, 0
  %783 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %776, i64 0, i32 0
  %784 = load i32, i32* %783, align 4
  br i1 %782, label %785, label %787

785:                                              ; preds = %778
  %786 = add i32 %784, -1
  store i32 %786, i32* %783, align 4
  br label %787

787:                                              ; preds = %785, %778
  %788 = phi i32 [ %786, %785 ], [ %784, %778 ]
  %789 = icmp eq i32 %788, 0
  br i1 %789, label %790, label %791

790:                                              ; preds = %787
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %776) #7
  br label %791

791:                                              ; preds = %770, %787, %790
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %773) #7
  %792 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %772, align 8
  %793 = icmp eq %"class.WTF::StringImpl"* %792, null
  br i1 %793, label %807, label %794

794:                                              ; preds = %791
  %795 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %792, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %796 = load atomic i32, i32* %795 monotonic, align 4
  %797 = and i32 %796, 2
  %798 = icmp eq i32 %797, 0
  %799 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %792, i64 0, i32 0
  %800 = load i32, i32* %799, align 4
  br i1 %798, label %801, label %803

801:                                              ; preds = %794
  %802 = add i32 %800, -1
  store i32 %802, i32* %799, align 4
  br label %803

803:                                              ; preds = %801, %794
  %804 = phi i32 [ %802, %801 ], [ %800, %794 ]
  %805 = icmp eq i32 %804, 0
  br i1 %805, label %806, label %807

806:                                              ; preds = %803
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %792) #7
  br label %807

807:                                              ; preds = %791, %803, %806
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %743) #7
  br i1 %774, label %808, label %918

808:                                              ; preds = %807
  %809 = load %"class.v8::Value"*, %"class.v8::Value"** %736, align 8
  %810 = icmp eq %"class.v8::Value"* %809, null
  br i1 %810, label %811, label %835, !prof !2

811:                                              ; preds = %808
  %812 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %738, align 8
  %813 = icmp eq %"class.WTF::StringImpl"* %812, null
  br i1 %813, label %814, label %816

814:                                              ; preds = %811
  %815 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 15
  br label %860

816:                                              ; preds = %811
  %817 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %812, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %818 = load atomic i32, i32* %817 monotonic, align 4
  %819 = and i32 %818, 2
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %821, label %833

821:                                              ; preds = %816
  %822 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %812, i64 0, i32 0
  %823 = load i32, i32* %822, align 4
  %824 = zext i32 %823 to i33
  %825 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %824, i33 1) #7
  %826 = extractvalue { i33, i1 } %825, 1
  %827 = extractvalue { i33, i1 } %825, 0
  %828 = icmp slt i33 %827, 0
  %829 = or i1 %826, %828
  br i1 %829, label %830, label %831, !prof !2

830:                                              ; preds = %821
  call void @llvm.trap() #7
  unreachable

831:                                              ; preds = %821
  %832 = trunc i33 %827 to i32
  store i32 %832, i32* %822, align 4
  br label %833

833:                                              ; preds = %816, %831
  %834 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 15
  br label %841

835:                                              ; preds = %808
  %836 = bitcast %"class.v8::Value"* %809 to %"class.v8::String"*
  %837 = load i32, i32* %737, align 8
  %838 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %836, i32 %837) #7
  %839 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 15
  %840 = icmp eq %"class.WTF::StringImpl"* %838, null
  br i1 %840, label %860, label %841

841:                                              ; preds = %833, %835
  %842 = phi %"class.WTF::String"* [ %834, %833 ], [ %839, %835 ]
  %843 = phi %"class.WTF::StringImpl"* [ %812, %833 ], [ %838, %835 ]
  %844 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %843, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %845 = load atomic i32, i32* %844 monotonic, align 4
  %846 = and i32 %845, 2
  %847 = icmp eq i32 %846, 0
  br i1 %847, label %848, label %860

848:                                              ; preds = %841
  %849 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %843, i64 0, i32 0
  %850 = load i32, i32* %849, align 4
  %851 = zext i32 %850 to i33
  %852 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %851, i33 1) #7
  %853 = extractvalue { i33, i1 } %852, 1
  %854 = extractvalue { i33, i1 } %852, 0
  %855 = icmp slt i33 %854, 0
  %856 = or i1 %853, %855
  br i1 %856, label %857, label %858, !prof !2

857:                                              ; preds = %848
  call void @llvm.trap() #7
  unreachable

858:                                              ; preds = %848
  %859 = trunc i33 %854 to i32
  store i32 %859, i32* %849, align 4
  br label %860

860:                                              ; preds = %814, %858, %841, %835
  %861 = phi i1 [ false, %858 ], [ false, %841 ], [ true, %835 ], [ true, %814 ]
  %862 = phi %"class.WTF::String"* [ %842, %858 ], [ %842, %841 ], [ %839, %835 ], [ %815, %814 ]
  %863 = phi %"class.WTF::StringImpl"* [ %843, %858 ], [ %843, %841 ], [ null, %835 ], [ null, %814 ]
  %864 = ptrtoint %"class.WTF::StringImpl"* %863 to i64
  %865 = bitcast %"class.WTF::String"* %862 to i64*
  %866 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %862, i64 0, i32 0, i32 0
  %867 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %866, align 8
  store i64 %864, i64* %865, align 8
  %868 = icmp eq %"class.WTF::StringImpl"* %867, null
  br i1 %868, label %882, label %869

869:                                              ; preds = %860
  %870 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %867, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %871 = load atomic i32, i32* %870 monotonic, align 4
  %872 = and i32 %871, 2
  %873 = icmp eq i32 %872, 0
  %874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %867, i64 0, i32 0
  %875 = load i32, i32* %874, align 4
  br i1 %873, label %876, label %878

876:                                              ; preds = %869
  %877 = add i32 %875, -1
  store i32 %877, i32* %874, align 4
  br label %878

878:                                              ; preds = %876, %869
  %879 = phi i32 [ %877, %876 ], [ %875, %869 ]
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %881, label %882

881:                                              ; preds = %878
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %867) #7
  br label %882

882:                                              ; preds = %860, %878, %881
  br i1 %861, label %896, label %883

883:                                              ; preds = %882
  %884 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %863, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %885 = load atomic i32, i32* %884 monotonic, align 4
  %886 = and i32 %885, 2
  %887 = icmp eq i32 %886, 0
  %888 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %863, i64 0, i32 0
  %889 = load i32, i32* %888, align 4
  br i1 %887, label %890, label %892

890:                                              ; preds = %883
  %891 = add i32 %889, -1
  store i32 %891, i32* %888, align 4
  br label %892

892:                                              ; preds = %890, %883
  %893 = phi i32 [ %891, %890 ], [ %889, %883 ]
  %894 = icmp eq i32 %893, 0
  br i1 %894, label %895, label %896

895:                                              ; preds = %892
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %863) #7
  br label %896

896:                                              ; preds = %882, %892, %895
  %897 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %898 = load i8*, i8** %897, align 8
  store i8* null, i8** %897, align 8
  %899 = icmp eq i8* %898, null
  br i1 %899, label %901, label %900

900:                                              ; preds = %896
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %898) #7
  br label %901

901:                                              ; preds = %900, %896
  %902 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %738, align 8
  %903 = icmp eq %"class.WTF::StringImpl"* %902, null
  br i1 %903, label %917, label %904

904:                                              ; preds = %901
  %905 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %902, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %906 = load atomic i32, i32* %905 monotonic, align 4
  %907 = and i32 %906, 2
  %908 = icmp eq i32 %907, 0
  %909 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %902, i64 0, i32 0
  %910 = load i32, i32* %909, align 4
  br i1 %908, label %911, label %913

911:                                              ; preds = %904
  %912 = add i32 %910, -1
  store i32 %912, i32* %909, align 4
  br label %913

913:                                              ; preds = %911, %904
  %914 = phi i32 [ %912, %911 ], [ %910, %904 ]
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %916, label %917

916:                                              ; preds = %913
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %902) #7
  br label %917

917:                                              ; preds = %901, %913, %916
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %735) #7
  br label %940

918:                                              ; preds = %807, %734
  %919 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %920 = load i8*, i8** %919, align 8
  store i8* null, i8** %919, align 8
  %921 = icmp eq i8* %920, null
  br i1 %921, label %923, label %922

922:                                              ; preds = %918
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %920) #7
  br label %923

923:                                              ; preds = %922, %918
  %924 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %738, align 8
  %925 = icmp eq %"class.WTF::StringImpl"* %924, null
  br i1 %925, label %939, label %926

926:                                              ; preds = %923
  %927 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %924, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %928 = load atomic i32, i32* %927 monotonic, align 4
  %929 = and i32 %928, 2
  %930 = icmp eq i32 %929, 0
  %931 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %924, i64 0, i32 0
  %932 = load i32, i32* %931, align 4
  br i1 %930, label %933, label %935

933:                                              ; preds = %926
  %934 = add i32 %932, -1
  store i32 %934, i32* %931, align 4
  br label %935

935:                                              ; preds = %933, %926
  %936 = phi i32 [ %934, %933 ], [ %932, %926 ]
  %937 = icmp eq i32 %936, 0
  br i1 %937, label %938, label %939

938:                                              ; preds = %935
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %924) #7
  br label %939

939:                                              ; preds = %923, %935, %938
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %735) #7
  br label %1214

940:                                              ; preds = %917, %728
  %941 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 8, i32 0
  %942 = bitcast %"class.v8::Name"** %941 to %"class.v8::Value"**
  %943 = load %"class.v8::Value"*, %"class.v8::Value"** %942, align 8
  %944 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %943) #7
  %945 = icmp eq %"class.v8::Value"* %944, null
  br i1 %945, label %946, label %952

946:                                              ; preds = %940
  %947 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %948 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %949 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %948, align 8
  %950 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %949, i64 5
  %951 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %950, align 8
  call void %951(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %947) #7
  br label %1214

952:                                              ; preds = %940
  %953 = bitcast %"class.v8::Value"* %944 to i64*
  %954 = load i64, i64* %953, align 8
  %955 = and i64 %954, 3
  %956 = icmp eq i64 %955, 1
  br i1 %956, label %957, label %975

957:                                              ; preds = %952
  %958 = add i64 %954, -1
  %959 = inttoptr i64 %958 to i32*
  %960 = load i32, i32* %959, align 4
  %961 = and i64 %954, -4294967296
  %962 = zext i32 %960 to i64
  %963 = or i64 %961, %962
  %964 = add i64 %963, 7
  %965 = inttoptr i64 %964 to i16*
  %966 = load i16, i16* %965, align 2
  %967 = icmp eq i16 %966, 67
  br i1 %967, label %968, label %975

968:                                              ; preds = %957
  %969 = add i64 %954, 23
  %970 = inttoptr i64 %969 to i32*
  %971 = load i32, i32* %970, align 4
  %972 = and i32 %971, -2
  %973 = icmp eq i32 %972, 10
  br i1 %973, label %974, label %975

974:                                              ; preds = %968
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0)) #7
  br label %1214

975:                                              ; preds = %957, %952, %968
  %976 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %944) #7
  br i1 %976, label %977, label %980, !prof !3

977:                                              ; preds = %975
  %978 = bitcast %"class.v8::Value"* %944 to %"class.v8::Uint32"*
  %979 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %978) #7
  br label %983

980:                                              ; preds = %975
  %981 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %944) #7
  %982 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %944, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %983

983:                                              ; preds = %977, %980
  %984 = phi i32 [ %979, %977 ], [ %982, %980 ]
  %985 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %986 = load i32, i32* %985, align 8
  %987 = icmp eq i32 %986, 0
  br i1 %987, label %988, label %1214

988:                                              ; preds = %983
  %989 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 16
  store i32 %984, i32* %989, align 8
  %990 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 5
  store i8 1, i8* %990, align 4
  %991 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 9, i32 0
  %992 = bitcast %"class.v8::Name"** %991 to %"class.v8::Value"**
  %993 = load %"class.v8::Value"*, %"class.v8::Value"** %992, align 8
  %994 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %993) #7
  %995 = icmp eq %"class.v8::Value"* %994, null
  br i1 %995, label %996, label %1002

996:                                              ; preds = %988
  %997 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %998 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %999 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %998, align 8
  %1000 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %999, i64 5
  %1001 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1000, align 8
  call void %1001(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %997) #7
  br label %1214

1002:                                             ; preds = %988
  %1003 = bitcast %"class.v8::Value"* %994 to i64*
  %1004 = load i64, i64* %1003, align 8
  %1005 = and i64 %1004, 3
  %1006 = icmp eq i64 %1005, 1
  br i1 %1006, label %1007, label %1024

1007:                                             ; preds = %1002
  %1008 = add i64 %1004, -1
  %1009 = inttoptr i64 %1008 to i32*
  %1010 = load i32, i32* %1009, align 4
  %1011 = and i64 %1004, -4294967296
  %1012 = zext i32 %1010 to i64
  %1013 = or i64 %1011, %1012
  %1014 = add i64 %1013, 7
  %1015 = inttoptr i64 %1014 to i16*
  %1016 = load i16, i16* %1015, align 2
  %1017 = icmp eq i16 %1016, 67
  br i1 %1017, label %1018, label %1024

1018:                                             ; preds = %1007
  %1019 = add i64 %1004, 23
  %1020 = inttoptr i64 %1019 to i32*
  %1021 = load i32, i32* %1020, align 4
  %1022 = and i32 %1021, -2
  %1023 = icmp eq i32 %1022, 10
  br i1 %1023, label %1164, label %1024

1024:                                             ; preds = %1007, %1002, %1018
  %1025 = bitcast %"class.blink::V8StringResource"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1025) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1025, i8 -86, i64 152, i1 false)
  %1026 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %994, %"class.v8::Value"** %1026, align 8
  %1027 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 1
  store i32 0, i32* %1027, align 8
  %1028 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1028, align 8
  %1029 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1
  %1030 = bitcast %"class.std::__1::unique_ptr"* %1029 to i64*
  store i64 0, i64* %1030, align 8
  %1031 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %13, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1031, label %1032, label %1142

1032:                                             ; preds = %1024
  %1033 = load %"class.v8::Value"*, %"class.v8::Value"** %1026, align 8
  %1034 = icmp eq %"class.v8::Value"* %1033, null
  br i1 %1034, label %1035, label %1059, !prof !2

1035:                                             ; preds = %1032
  %1036 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1028, align 8
  %1037 = icmp eq %"class.WTF::StringImpl"* %1036, null
  br i1 %1037, label %1038, label %1040

1038:                                             ; preds = %1035
  %1039 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 18
  br label %1084

1040:                                             ; preds = %1035
  %1041 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1036, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1042 = load atomic i32, i32* %1041 monotonic, align 4
  %1043 = and i32 %1042, 2
  %1044 = icmp eq i32 %1043, 0
  br i1 %1044, label %1045, label %1057

1045:                                             ; preds = %1040
  %1046 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1036, i64 0, i32 0
  %1047 = load i32, i32* %1046, align 4
  %1048 = zext i32 %1047 to i33
  %1049 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1048, i33 1) #7
  %1050 = extractvalue { i33, i1 } %1049, 1
  %1051 = extractvalue { i33, i1 } %1049, 0
  %1052 = icmp slt i33 %1051, 0
  %1053 = or i1 %1050, %1052
  br i1 %1053, label %1054, label %1055, !prof !2

1054:                                             ; preds = %1045
  call void @llvm.trap() #7
  unreachable

1055:                                             ; preds = %1045
  %1056 = trunc i33 %1051 to i32
  store i32 %1056, i32* %1046, align 4
  br label %1057

1057:                                             ; preds = %1040, %1055
  %1058 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 18
  br label %1065

1059:                                             ; preds = %1032
  %1060 = bitcast %"class.v8::Value"* %1033 to %"class.v8::String"*
  %1061 = load i32, i32* %1027, align 8
  %1062 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1060, i32 %1061) #7
  %1063 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 18
  %1064 = icmp eq %"class.WTF::StringImpl"* %1062, null
  br i1 %1064, label %1084, label %1065

1065:                                             ; preds = %1057, %1059
  %1066 = phi %"class.WTF::String"* [ %1058, %1057 ], [ %1063, %1059 ]
  %1067 = phi %"class.WTF::StringImpl"* [ %1036, %1057 ], [ %1062, %1059 ]
  %1068 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1067, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1069 = load atomic i32, i32* %1068 monotonic, align 4
  %1070 = and i32 %1069, 2
  %1071 = icmp eq i32 %1070, 0
  br i1 %1071, label %1072, label %1084

1072:                                             ; preds = %1065
  %1073 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1067, i64 0, i32 0
  %1074 = load i32, i32* %1073, align 4
  %1075 = zext i32 %1074 to i33
  %1076 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1075, i33 1) #7
  %1077 = extractvalue { i33, i1 } %1076, 1
  %1078 = extractvalue { i33, i1 } %1076, 0
  %1079 = icmp slt i33 %1078, 0
  %1080 = or i1 %1077, %1079
  br i1 %1080, label %1081, label %1082, !prof !2

1081:                                             ; preds = %1072
  call void @llvm.trap() #7
  unreachable

1082:                                             ; preds = %1072
  %1083 = trunc i33 %1078 to i32
  store i32 %1083, i32* %1073, align 4
  br label %1084

1084:                                             ; preds = %1038, %1082, %1065, %1059
  %1085 = phi i1 [ false, %1082 ], [ false, %1065 ], [ true, %1059 ], [ true, %1038 ]
  %1086 = phi %"class.WTF::String"* [ %1066, %1082 ], [ %1066, %1065 ], [ %1063, %1059 ], [ %1039, %1038 ]
  %1087 = phi %"class.WTF::StringImpl"* [ %1067, %1082 ], [ %1067, %1065 ], [ null, %1059 ], [ null, %1038 ]
  %1088 = ptrtoint %"class.WTF::StringImpl"* %1087 to i64
  %1089 = bitcast %"class.WTF::String"* %1086 to i64*
  %1090 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1086, i64 0, i32 0, i32 0
  %1091 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1090, align 8
  store i64 %1088, i64* %1089, align 8
  %1092 = icmp eq %"class.WTF::StringImpl"* %1091, null
  br i1 %1092, label %1106, label %1093

1093:                                             ; preds = %1084
  %1094 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1091, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1095 = load atomic i32, i32* %1094 monotonic, align 4
  %1096 = and i32 %1095, 2
  %1097 = icmp eq i32 %1096, 0
  %1098 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1091, i64 0, i32 0
  %1099 = load i32, i32* %1098, align 4
  br i1 %1097, label %1100, label %1102

1100:                                             ; preds = %1093
  %1101 = add i32 %1099, -1
  store i32 %1101, i32* %1098, align 4
  br label %1102

1102:                                             ; preds = %1100, %1093
  %1103 = phi i32 [ %1101, %1100 ], [ %1099, %1093 ]
  %1104 = icmp eq i32 %1103, 0
  br i1 %1104, label %1105, label %1106

1105:                                             ; preds = %1102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1091) #7
  br label %1106

1106:                                             ; preds = %1084, %1102, %1105
  br i1 %1085, label %1120, label %1107

1107:                                             ; preds = %1106
  %1108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1087, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1109 = load atomic i32, i32* %1108 monotonic, align 4
  %1110 = and i32 %1109, 2
  %1111 = icmp eq i32 %1110, 0
  %1112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1087, i64 0, i32 0
  %1113 = load i32, i32* %1112, align 4
  br i1 %1111, label %1114, label %1116

1114:                                             ; preds = %1107
  %1115 = add i32 %1113, -1
  store i32 %1115, i32* %1112, align 4
  br label %1116

1116:                                             ; preds = %1114, %1107
  %1117 = phi i32 [ %1115, %1114 ], [ %1113, %1107 ]
  %1118 = icmp eq i32 %1117, 0
  br i1 %1118, label %1119, label %1120

1119:                                             ; preds = %1116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1087) #7
  br label %1120

1120:                                             ; preds = %1106, %1116, %1119
  %1121 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1122 = load i8*, i8** %1121, align 8
  store i8* null, i8** %1121, align 8
  %1123 = icmp eq i8* %1122, null
  br i1 %1123, label %1125, label %1124

1124:                                             ; preds = %1120
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1122) #7
  br label %1125

1125:                                             ; preds = %1124, %1120
  %1126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1028, align 8
  %1127 = icmp eq %"class.WTF::StringImpl"* %1126, null
  br i1 %1127, label %1141, label %1128

1128:                                             ; preds = %1125
  %1129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1130 = load atomic i32, i32* %1129 monotonic, align 4
  %1131 = and i32 %1130, 2
  %1132 = icmp eq i32 %1131, 0
  %1133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1126, i64 0, i32 0
  %1134 = load i32, i32* %1133, align 4
  br i1 %1132, label %1135, label %1137

1135:                                             ; preds = %1128
  %1136 = add i32 %1134, -1
  store i32 %1136, i32* %1133, align 4
  br label %1137

1137:                                             ; preds = %1135, %1128
  %1138 = phi i32 [ %1136, %1135 ], [ %1134, %1128 ]
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1140, label %1141

1140:                                             ; preds = %1137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1126) #7
  br label %1141

1141:                                             ; preds = %1125, %1137, %1140
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1025) #7
  br label %1164

1142:                                             ; preds = %1024
  %1143 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1144 = load i8*, i8** %1143, align 8
  store i8* null, i8** %1143, align 8
  %1145 = icmp eq i8* %1144, null
  br i1 %1145, label %1147, label %1146

1146:                                             ; preds = %1142
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1144) #7
  br label %1147

1147:                                             ; preds = %1146, %1142
  %1148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1028, align 8
  %1149 = icmp eq %"class.WTF::StringImpl"* %1148, null
  br i1 %1149, label %1163, label %1150

1150:                                             ; preds = %1147
  %1151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1152 = load atomic i32, i32* %1151 monotonic, align 4
  %1153 = and i32 %1152, 2
  %1154 = icmp eq i32 %1153, 0
  %1155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1148, i64 0, i32 0
  %1156 = load i32, i32* %1155, align 4
  br i1 %1154, label %1157, label %1159

1157:                                             ; preds = %1150
  %1158 = add i32 %1156, -1
  store i32 %1158, i32* %1155, align 4
  br label %1159

1159:                                             ; preds = %1157, %1150
  %1160 = phi i32 [ %1158, %1157 ], [ %1156, %1150 ]
  %1161 = icmp eq i32 %1160, 0
  br i1 %1161, label %1162, label %1163

1162:                                             ; preds = %1159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1148) #7
  br label %1163

1163:                                             ; preds = %1147, %1159, %1162
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1025) #7
  br label %1214

1164:                                             ; preds = %1141, %1018
  %1165 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %47, i64 10, i32 0
  %1166 = bitcast %"class.v8::Name"** %1165 to %"class.v8::Value"**
  %1167 = load %"class.v8::Value"*, %"class.v8::Value"** %1166, align 8
  %1168 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %41, %"class.v8::Context"* %49, %"class.v8::Value"* %1167) #7
  %1169 = icmp eq %"class.v8::Value"* %1168, null
  br i1 %1169, label %1170, label %1176

1170:                                             ; preds = %1164
  %1171 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1172 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1173 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1172, align 8
  %1174 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1173, i64 5
  %1175 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1174, align 8
  call void %1175(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1171) #7
  br label %1214

1176:                                             ; preds = %1164
  %1177 = bitcast %"class.v8::Value"* %1168 to i64*
  %1178 = load i64, i64* %1177, align 8
  %1179 = and i64 %1178, 3
  %1180 = icmp eq i64 %1179, 1
  br i1 %1180, label %1181, label %1199

1181:                                             ; preds = %1176
  %1182 = add i64 %1178, -1
  %1183 = inttoptr i64 %1182 to i32*
  %1184 = load i32, i32* %1183, align 4
  %1185 = and i64 %1178, -4294967296
  %1186 = zext i32 %1184 to i64
  %1187 = or i64 %1185, %1186
  %1188 = add i64 %1187, 7
  %1189 = inttoptr i64 %1188 to i16*
  %1190 = load i16, i16* %1189, align 2
  %1191 = icmp eq i16 %1190, 67
  br i1 %1191, label %1192, label %1199

1192:                                             ; preds = %1181
  %1193 = add i64 %1178, 23
  %1194 = inttoptr i64 %1193 to i32*
  %1195 = load i32, i32* %1194, align 4
  %1196 = and i32 %1195, -2
  %1197 = icmp eq i32 %1196, 10
  br i1 %1197, label %1198, label %1199

1198:                                             ; preds = %1192
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0)) #7
  br label %1214

1199:                                             ; preds = %1181, %1176, %1192
  %1200 = call zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"* nonnull %1168) #7
  br i1 %1200, label %1201, label %1204, !prof !3

1201:                                             ; preds = %1199
  %1202 = bitcast %"class.v8::Value"* %1168 to %"class.v8::Uint32"*
  %1203 = call i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"* nonnull %1202) #7
  br label %1207

1204:                                             ; preds = %1199
  %1205 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %1168) #7
  %1206 = call i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1168, i32 2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %1207

1207:                                             ; preds = %1201, %1204
  %1208 = phi i32 [ %1203, %1201 ], [ %1206, %1204 ]
  %1209 = load i32, i32* %985, align 8
  %1210 = icmp eq i32 %1209, 0
  br i1 %1210, label %1211, label %1214

1211:                                             ; preds = %1207
  %1212 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 19
  store i32 %1208, i32* %1212, align 8
  %1213 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %2, i64 0, i32 6
  store i8 1, i8* %1213, align 1
  br label %1214

1214:                                             ; preds = %1207, %983, %692, %650, %600, %376, %322, %294, %390, %418, %563, %614, %706, %939, %996, %1163, %1211, %1198, %1170, %974, %946, %664, %564, %334, %287, %54
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %48) #7
  br label %1215

1215:                                             ; preds = %1214, %36, %39
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #7
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #7
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #7
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #7
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::AvcEncoderConfig"* @_ZN5blink17NativeValueTraitsINS_16AvcEncoderConfigEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink18VideoEncoderConfig6setAvcEPNS_16AvcEncoderConfigE(%"class.blink::VideoEncoderConfig"*, %"class.blink::AvcEncoderConfig"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink18VideoEncoderConfig8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::VideoEncoderConfig"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink22toV8VideoEncoderConfigEPKNS_18VideoEncoderConfigEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::VideoEncoderConfig"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22toV8VideoEncoderConfigEPKNS_18VideoEncoderConfigEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::VideoEncoderConfig"* readonly, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %10 = add i64 %9, 8
  %11 = inttoptr i64 %10 to %"class.blink::V8PerIsolateData"**
  %12 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %11, align 8
  %13 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %12, i8* bitcast ([11 x i8*]* @_ZZN5blinkL31eternalV8VideoEncoderConfigKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.316"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.316"*)) #7
  %14 = extractvalue { i64, %"class.v8::Eternal"* } %13, 1
  %15 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %16 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 8, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #7
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %26 = bitcast i8** %25 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %23, i32* %27, align 8
  %28 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7
  br label %33

29:                                               ; preds = %4
  %30 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 7) #7
  %31 = icmp eq %"class.v8::String"* %30, null
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %29
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %33

33:                                               ; preds = %32, %29, %19
  %34 = phi %"class.v8::String"* [ %28, %19 ], [ %30, %29 ], [ null, %32 ]
  %35 = bitcast %"class.v8::String"* %34 to %"class.v8::Value"*
  %36 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 0, i32 0
  %37 = load %"class.v8::Name"*, %"class.v8::Name"** %36, align 8
  %38 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %37, %"class.v8::Value"* %35) #7
  %39 = trunc i16 %38 to i8
  %40 = icmp ne i8 %39, 0
  %41 = icmp ugt i16 %38, 255
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %231

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 9, i32 0, i32 0
  %45 = load %"class.blink::AvcEncoderConfig"*, %"class.blink::AvcEncoderConfig"** %44, align 8
  %46 = icmp eq %"class.blink::AvcEncoderConfig"* %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::AvcEncoderConfig", %"class.blink::AvcEncoderConfig"* %45, i64 0, i32 0
  %49 = bitcast %"class.blink::AvcEncoderConfig"* %45 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %50 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %50, i64 2
  %52 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %51, align 8
  %53 = call %"class.v8::Value"* %52(%"class.blink::IDLDictionaryBase"* nonnull %48, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  %54 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 1, i32 0
  %55 = load %"class.v8::Name"*, %"class.v8::Name"** %54, align 8
  %56 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %55, %"class.v8::Value"* %53) #7
  %57 = trunc i16 %56 to i8
  %58 = icmp ne i8 %57, 0
  %59 = icmp ugt i16 %56, 255
  %60 = and i1 %59, %58
  br i1 %60, label %61, label %231

61:                                               ; preds = %43, %47
  %62 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 10
  %67 = load i64, i64* %66, align 8
  %68 = uitofp i64 %67 to double
  %69 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %68) #7
  %70 = bitcast %"class.v8::Number"* %69 to %"class.v8::Value"*
  %71 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 2, i32 0
  %72 = load %"class.v8::Name"*, %"class.v8::Name"** %71, align 8
  %73 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %72, %"class.v8::Value"* %70) #7
  %74 = trunc i16 %73 to i8
  %75 = icmp ne i8 %74, 0
  %76 = icmp ugt i16 %73, 255
  %77 = and i1 %76, %75
  br i1 %77, label %78, label %231

78:                                               ; preds = %61, %65
  %79 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 11, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %100, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #7
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %80, %"class.WTF::StringImpl"** %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 1
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %89 = bitcast i8** %88 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %86, i32* %90, align 8
  %91 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #7
  %92 = bitcast %"class.v8::String"* %91 to %"class.v8::Value"*
  %93 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 3, i32 0
  %94 = load %"class.v8::Name"*, %"class.v8::Name"** %93, align 8
  %95 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %94, %"class.v8::Value"* %92) #7
  %96 = trunc i16 %95 to i8
  %97 = icmp ne i8 %96, 0
  %98 = icmp ugt i16 %95, 255
  %99 = and i1 %98, %97
  br i1 %99, label %100, label %231

100:                                              ; preds = %78, %82
  %101 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 2
  %102 = load i8, i8* %101, align 1, !range !4
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %116, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 12
  %106 = load i32, i32* %105, align 8
  %107 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %106) #7
  %108 = bitcast %"class.v8::Integer"* %107 to %"class.v8::Value"*
  %109 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 4, i32 0
  %110 = load %"class.v8::Name"*, %"class.v8::Name"** %109, align 8
  %111 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %110, %"class.v8::Value"* %108) #7
  %112 = trunc i16 %111 to i8
  %113 = icmp ne i8 %112, 0
  %114 = icmp ugt i16 %111, 255
  %115 = and i1 %114, %113
  br i1 %115, label %116, label %231

116:                                              ; preds = %100, %104
  %117 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 3
  %118 = load i8, i8* %117, align 2, !range !4
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %132, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 13
  %122 = load i32, i32* %121, align 4
  %123 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %122) #7
  %124 = bitcast %"class.v8::Integer"* %123 to %"class.v8::Value"*
  %125 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 5, i32 0
  %126 = load %"class.v8::Name"*, %"class.v8::Name"** %125, align 8
  %127 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %126, %"class.v8::Value"* %124) #7
  %128 = trunc i16 %127 to i8
  %129 = icmp ne i8 %128, 0
  %130 = icmp ugt i16 %127, 255
  %131 = and i1 %130, %129
  br i1 %131, label %132, label %231

132:                                              ; preds = %116, %120
  %133 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 4
  %134 = load i8, i8* %133, align 1, !range !4
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %148, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 14
  %138 = load double, double* %137, align 8
  %139 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %138) #7
  %140 = bitcast %"class.v8::Number"* %139 to %"class.v8::Value"*
  %141 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 6, i32 0
  %142 = load %"class.v8::Name"*, %"class.v8::Name"** %141, align 8
  %143 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %142, %"class.v8::Value"* %140) #7
  %144 = trunc i16 %143 to i8
  %145 = icmp ne i8 %144, 0
  %146 = icmp ugt i16 %143, 255
  %147 = and i1 %146, %145
  br i1 %147, label %148, label %231

148:                                              ; preds = %132, %136
  %149 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 15, i32 0, i32 0
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %149, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %162, label %152

152:                                              ; preds = %148
  %153 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %153) #7
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %150, %"class.WTF::StringImpl"** %154, align 8
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 1
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %159 = bitcast i8** %158 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %157, %"class.WTF::StringImpl"** %159, align 8
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %156, i32* %160, align 8
  %161 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %153) #7
  br label %166

162:                                              ; preds = %148
  %163 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i32 0, i32 5) #7
  %164 = icmp eq %"class.v8::String"* %163, null
  br i1 %164, label %165, label %166, !prof !2

165:                                              ; preds = %162
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %166

166:                                              ; preds = %165, %162, %152
  %167 = phi %"class.v8::String"* [ %161, %152 ], [ %163, %162 ], [ null, %165 ]
  %168 = bitcast %"class.v8::String"* %167 to %"class.v8::Value"*
  %169 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 7, i32 0
  %170 = load %"class.v8::Name"*, %"class.v8::Name"** %169, align 8
  %171 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %170, %"class.v8::Value"* %168) #7
  %172 = trunc i16 %171 to i8
  %173 = icmp ne i8 %172, 0
  %174 = icmp ugt i16 %171, 255
  %175 = and i1 %174, %173
  br i1 %175, label %176, label %231

176:                                              ; preds = %166
  %177 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 5
  %178 = load i8, i8* %177, align 4, !range !4
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %192, label %180

180:                                              ; preds = %176
  %181 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 16
  %182 = load i32, i32* %181, align 8
  %183 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %182) #7
  %184 = bitcast %"class.v8::Integer"* %183 to %"class.v8::Value"*
  %185 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 8, i32 0
  %186 = load %"class.v8::Name"*, %"class.v8::Name"** %185, align 8
  %187 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %186, %"class.v8::Value"* %184) #7
  %188 = trunc i16 %187 to i8
  %189 = icmp ne i8 %188, 0
  %190 = icmp ugt i16 %187, 255
  %191 = and i1 %190, %189
  br i1 %191, label %192, label %231

192:                                              ; preds = %176, %180
  %193 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 18, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %214, label %196

196:                                              ; preds = %192
  %197 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #7
  %198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"** %198, align 8
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 1
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %203 = bitcast i8** %202 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %201, %"class.WTF::StringImpl"** %203, align 8
  %204 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %200, i32* %204, align 8
  %205 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #7
  %206 = bitcast %"class.v8::String"* %205 to %"class.v8::Value"*
  %207 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 9, i32 0
  %208 = load %"class.v8::Name"*, %"class.v8::Name"** %207, align 8
  %209 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %208, %"class.v8::Value"* %206) #7
  %210 = trunc i16 %209 to i8
  %211 = icmp ne i8 %210, 0
  %212 = icmp ugt i16 %209, 255
  %213 = and i1 %212, %211
  br i1 %213, label %214, label %231

214:                                              ; preds = %192, %196
  %215 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 6
  %216 = load i8, i8* %215, align 1, !range !4
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %230, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.blink::VideoEncoderConfig", %"class.blink::VideoEncoderConfig"* %0, i64 0, i32 19
  %220 = load i32, i32* %219, align 8
  %221 = call %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"* %3, i32 %220) #7
  %222 = bitcast %"class.v8::Integer"* %221 to %"class.v8::Value"*
  %223 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %14, i64 10, i32 0
  %224 = load %"class.v8::Name"*, %"class.v8::Name"** %223, align 8
  %225 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %15, %"class.v8::Name"* %224, %"class.v8::Value"* %222) #7
  %226 = trunc i16 %225 to i8
  %227 = icmp ne i8 %226, 0
  %228 = icmp ugt i16 %225, 255
  %229 = and i1 %228, %227
  br i1 %229, label %230, label %231

230:                                              ; preds = %214, %218
  br label %231

231:                                              ; preds = %47, %82, %120, %166, %196, %218, %230, %180, %136, %104, %65, %33
  %232 = phi i1 [ false, %33 ], [ false, %47 ], [ false, %65 ], [ false, %82 ], [ false, %104 ], [ false, %120 ], [ false, %136 ], [ false, %166 ], [ false, %180 ], [ false, %196 ], [ true, %230 ], [ false, %218 ]
  ret i1 %232
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #1

declare %"class.v8::Integer"* @_ZN2v87Integer15NewFromUnsignedEPNS_7IsolateEj(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::VideoEncoderConfig"* @_ZN5blink17NativeValueTraitsINS_18VideoEncoderConfigEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 96) #7
  %5 = bitcast i8* %4 to %"class.blink::VideoEncoderConfig"*
  tail call void @_ZN5blink18VideoEncoderConfigC1Ev(%"class.blink::VideoEncoderConfig"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink20V8VideoEncoderConfig6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18VideoEncoderConfigERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::VideoEncoderConfig"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::VideoEncoderConfig"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.316"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink18VideoEncoderConfigC1Ev(%"class.blink::VideoEncoderConfig"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.23, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.24, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !3

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !3

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsUint32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v86Uint325ValueEv(%"class.v8::Uint32"*) local_unnamed_addr #1

declare i64 @_ZN5blink12ToUInt64SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare i32 @_ZN5blink12ToUInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
