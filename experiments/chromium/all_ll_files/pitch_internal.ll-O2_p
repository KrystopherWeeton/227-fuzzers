; ModuleID = '../../third_party/webrtc/modules/audio_processing/vad/pitch_internal.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/vad/pitch_internal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6webrtc27GetSubframesPitchParametersEiPdS0_iiS0_S0_S0_S0_(i32, double* nocapture, double* nocapture readonly, i32, i32, double* nocapture, double* nocapture, double* nocapture, double* nocapture) local_unnamed_addr #0 {
  %10 = icmp sgt i32 %3, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = zext i32 %3 to i64
  br label %110

13:                                               ; preds = %110, %9
  %14 = load double, double* %5, align 8
  %15 = fmul double %14, 0x3FC5555555555555
  %16 = load double, double* %1, align 8
  %17 = fmul double %16, 0x3FEAAAAAAAAAAAAB
  %18 = fadd double %15, %17
  store double %18, double* %7, align 8
  %19 = getelementptr inbounds double, double* %1, i64 1
  %20 = load double, double* %19, align 8
  %21 = fmul double %20, 0x3FEAAAAAAAAAAAAB
  %22 = getelementptr inbounds double, double* %1, i64 2
  %23 = load double, double* %22, align 8
  %24 = fmul double %23, 0x3FC5555555555555
  %25 = fadd double %21, %24
  %26 = getelementptr inbounds double, double* %7, i64 1
  store double %25, double* %26, align 8
  %27 = load double, double* %22, align 8
  %28 = fmul double %27, 5.000000e-01
  %29 = getelementptr inbounds double, double* %1, i64 3
  %30 = load double, double* %29, align 8
  %31 = fmul double %30, 5.000000e-01
  %32 = fadd double %28, %31
  %33 = getelementptr inbounds double, double* %7, i64 2
  store double %32, double* %33, align 8
  %34 = add nsw i32 %3, -1
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds double, double* %1, i64 %35
  %37 = bitcast double* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast double* %5 to i64*
  store i64 %38, i64* %39, align 8
  %40 = load double, double* %6, align 8
  %41 = fmul double %40, 0x3FC5555555555555
  %42 = load double, double* %2, align 8
  %43 = fmul double %42, 0x3FEAAAAAAAAAAAAB
  %44 = fadd double %41, %43
  store double %44, double* %8, align 8
  %45 = getelementptr inbounds double, double* %2, i64 1
  %46 = load double, double* %45, align 8
  %47 = fmul double %46, 0x3FEAAAAAAAAAAAAB
  %48 = getelementptr inbounds double, double* %2, i64 2
  %49 = load double, double* %48, align 8
  %50 = fmul double %49, 0x3FC5555555555555
  %51 = fadd double %47, %50
  %52 = getelementptr inbounds double, double* %8, i64 1
  store double %51, double* %52, align 8
  %53 = load double, double* %48, align 8
  %54 = fmul double %53, 5.000000e-01
  %55 = getelementptr inbounds double, double* %2, i64 3
  %56 = load double, double* %55, align 8
  %57 = fmul double %56, 5.000000e-01
  %58 = fadd double %54, %57
  %59 = getelementptr inbounds double, double* %8, i64 2
  store double %58, double* %59, align 8
  %60 = getelementptr inbounds double, double* %2, i64 %35
  %61 = bitcast double* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast double* %6 to i64*
  store i64 %62, i64* %63, align 8
  %64 = icmp sgt i32 %4, 0
  br i1 %64, label %65, label %118

65:                                               ; preds = %13
  %66 = sitofp i32 %0 to double
  %67 = zext i32 %4 to i64
  %68 = icmp eq i32 %4, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %108, %65
  %70 = phi i64 [ 0, %65 ], [ %72, %108 ]
  br label %119

71:                                               ; preds = %65
  %72 = and i64 %67, 4294967294
  %73 = insertelement <2 x double> undef, double %66, i32 0
  %74 = shufflevector <2 x double> %73, <2 x double> undef, <2 x i32> zeroinitializer
  %75 = add nsw i64 %72, -2
  %76 = lshr exact i64 %75, 1
  %77 = add nuw i64 %76, 1
  %78 = and i64 %77, 1
  %79 = icmp eq i64 %75, 0
  br i1 %79, label %99, label %80

80:                                               ; preds = %71
  %81 = sub nuw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %96, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %97, %82 ]
  %85 = getelementptr inbounds double, double* %8, i64 %83
  %86 = bitcast double* %85 to <2 x double>*
  %87 = load <2 x double>, <2 x double>* %86, align 8
  %88 = fdiv <2 x double> %74, %87
  %89 = bitcast double* %85 to <2 x double>*
  store <2 x double> %88, <2 x double>* %89, align 8
  %90 = or i64 %83, 2
  %91 = getelementptr inbounds double, double* %8, i64 %90
  %92 = bitcast double* %91 to <2 x double>*
  %93 = load <2 x double>, <2 x double>* %92, align 8
  %94 = fdiv <2 x double> %74, %93
  %95 = bitcast double* %91 to <2 x double>*
  store <2 x double> %94, <2 x double>* %95, align 8
  %96 = add i64 %83, 4
  %97 = add i64 %84, -2
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %82, !llvm.loop !2

99:                                               ; preds = %82, %71
  %100 = phi i64 [ 0, %71 ], [ %96, %82 ]
  %101 = icmp eq i64 %78, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds double, double* %8, i64 %100
  %104 = bitcast double* %103 to <2 x double>*
  %105 = load <2 x double>, <2 x double>* %104, align 8
  %106 = fdiv <2 x double> %74, %105
  %107 = bitcast double* %103 to <2 x double>*
  store <2 x double> %106, <2 x double>* %107, align 8
  br label %108

108:                                              ; preds = %99, %102
  %109 = icmp eq i64 %72, %67
  br i1 %109, label %118, label %69

110:                                              ; preds = %110, %11
  %111 = phi i64 [ 0, %11 ], [ %116, %110 ]
  %112 = getelementptr inbounds double, double* %1, i64 %111
  %113 = load double, double* %112, align 8
  %114 = fadd double %113, 0x3D719799812DEA11
  %115 = tail call double @log(double %114) #2
  store double %115, double* %112, align 8
  %116 = add nuw nsw i64 %111, 1
  %117 = icmp eq i64 %116, %12
  br i1 %117, label %13, label %110

118:                                              ; preds = %119, %108, %13
  ret void

119:                                              ; preds = %69, %119
  %120 = phi i64 [ %124, %119 ], [ %70, %69 ]
  %121 = getelementptr inbounds double, double* %8, i64 %120
  %122 = load double, double* %121, align 8
  %123 = fdiv double %66, %122
  store double %123, double* %121, align 8
  %124 = add nuw nsw i64 %120, 1
  %125 = icmp eq i64 %124, %67
  br i1 %125, label %118, label %119, !llvm.loop !4
}

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #1

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
