; ModuleID = '../../media/mojo/mojom/video_encoder_info_mojom_traits.cc'
source_filename = "../../media/mojo/mojom/video_encoder_info_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::mojom::internal::ResolutionBitrateLimit_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", i32, i32, i32, [4 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%"struct.media::ResolutionBitrateLimit" = type { %"class.gfx::Size", i32, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.media::mojom::internal::VideoEncoderInfo_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.20", i8, [7 x i8], %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.22" }
%"struct.mojo::internal::Pointer.20" = type { i64 }
%"struct.mojo::internal::Pointer.21" = type { i64 }
%"struct.mojo::internal::Pointer.22" = type { i64 }
%"struct.media::VideoEncoderInfo" = type { %"class.std::__1::basic_string", i8, i8, i8, i8, [5 x %"class.std::__1::vector.28"], %"class.std::__1::vector.35" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i8*, i8*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.media::ResolutionBitrateLimit"*, %"struct.media::ResolutionBitrateLimit"*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.media::ResolutionBitrateLimit"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.std::__1::vector.28"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::Array_Data.42" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.mojo::internal::Array_Data.47" = type { %"struct.mojo::internal::ArrayHeader" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS2_IhEEEEN4base4spanINSt3__16vectorIhNS7_9allocatorIhEEEELm18446744073709551615EEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSI_IhEEEEEEPSC_PNS_7MessageE = comdat any

$_ZNK4base4spanINSt3__16vectorIhNS1_9allocatorIhEEEELm18446744073709551615EE7subspanEmm = comdat any

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5media5mojom30ResolutionBitrateLimitDataViewEEENSt3__16vectorINS3_22ResolutionBitrateLimitENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal27ResolutionBitrateLimit_DataEEEEEPSC_PNS_7MessageE = comdat any

@.str = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"offset <= size()\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"count == dynamic_extent || count <= size() - offset\00", align 1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5media5mojom30ResolutionBitrateLimitDataViewENS1_22ResolutionBitrateLimitEE4ReadES3_PS4_(%"class.media::mojom::internal::ResolutionBitrateLimit_Data"*, %"class.mojo::Message"*, %"struct.media::ResolutionBitrateLimit"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::mojom::internal::ResolutionBitrateLimit_Data", %"class.media::mojom::internal::ResolutionBitrateLimit_Data"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %4, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = bitcast %"struct.mojo::internal::Pointer"* %4 to i8*
  %9 = getelementptr inbounds i8, i8* %8, i64 %6
  br i1 %7, label %25, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i32*
  %13 = load i32, i32* %12, align 1
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %35, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds i8, i8* %9, i64 12
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 1
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %15
  %21 = icmp sgt i32 %13, 0
  %22 = select i1 %21, i32 %13, i32 0
  %23 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %2, i64 0, i32 0, i32 0
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %2, i64 0, i32 0, i32 1
  store i32 %18, i32* %24, align 4
  br label %25

25:                                               ; preds = %3, %20
  %26 = getelementptr inbounds %"class.media::mojom::internal::ResolutionBitrateLimit_Data", %"class.media::mojom::internal::ResolutionBitrateLimit_Data"* %0, i64 0, i32 2
  %27 = load i32, i32* %26, align 1
  %28 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %2, i64 0, i32 1
  store i32 %27, i32* %28, align 4
  %29 = getelementptr inbounds %"class.media::mojom::internal::ResolutionBitrateLimit_Data", %"class.media::mojom::internal::ResolutionBitrateLimit_Data"* %0, i64 0, i32 3
  %30 = load i32, i32* %29, align 1
  %31 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %2, i64 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"class.media::mojom::internal::ResolutionBitrateLimit_Data", %"class.media::mojom::internal::ResolutionBitrateLimit_Data"* %0, i64 0, i32 4
  %33 = load i32, i32* %32, align 1
  %34 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %2, i64 0, i32 3
  store i32 %33, i32* %34, align 4
  br label %35

35:                                               ; preds = %15, %10, %25
  %36 = phi i1 [ true, %25 ], [ false, %10 ], [ false, %15 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN5media5mojom24VideoEncoderInfoDataViewENS1_16VideoEncoderInfoEE4ReadES3_PS4_(%"class.media::mojom::internal::VideoEncoderInfo_Data"*, %"class.mojo::Message"*, %"struct.media::VideoEncoderInfo"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = getelementptr inbounds %"class.media::mojom::internal::VideoEncoderInfo_Data", %"class.media::mojom::internal::VideoEncoderInfo_Data"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = and i8 %6, 1
  %8 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 1
  store i8 %7, i8* %8, align 8
  %9 = load i8, i8* %5, align 1
  %10 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 2
  %11 = lshr i8 %9, 1
  %12 = and i8 %11, 1
  store i8 %12, i8* %10, align 1
  %13 = load i8, i8* %5, align 1
  %14 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 3
  %15 = lshr i8 %13, 2
  %16 = and i8 %15, 1
  store i8 %16, i8* %14, align 2
  %17 = load i8, i8* %5, align 1
  %18 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 4
  %19 = lshr i8 %17, 3
  %20 = and i8 %19, 1
  store i8 %20, i8* %18, align 1
  %21 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 0
  %22 = getelementptr inbounds %"class.media::mojom::internal::VideoEncoderInfo_Data", %"class.media::mojom::internal::VideoEncoderInfo_Data"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.mojo::internal::Pointer.20", %"struct.mojo::internal::Pointer.20"* %22, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  %26 = bitcast %"struct.mojo::internal::Pointer.20"* %22 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 %24
  br i1 %25, label %73, label %28

28:                                               ; preds = %3
  %29 = getelementptr inbounds i8, i8* %27, i64 8
  %30 = getelementptr inbounds i8, i8* %27, i64 4
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = zext i32 %32 to i64
  %34 = tail call i1 @llvm.is.constant.i64(i64 %33) #8
  %35 = icmp ult i32 %32, 23
  %36 = and i1 %35, %34
  br i1 %36, label %37, label %55

37:                                               ; preds = %28
  %38 = bitcast %"struct.media::VideoEncoderInfo"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  br label %49

46:                                               ; preds = %37
  %47 = trunc i32 %32 to i8
  store i8 %47, i8* %39, align 1
  %48 = bitcast %"struct.media::VideoEncoderInfo"* %2 to i8*
  br label %49

49:                                               ; preds = %46, %42
  %50 = phi i8* [ %45, %42 ], [ %48, %46 ]
  %51 = icmp eq i32 %32, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %29, i64 %33, i1 false) #8
  br label %53

53:                                               ; preds = %52, %49
  %54 = getelementptr inbounds i8, i8* %50, i64 %33
  store i8 0, i8* %54, align 1
  br label %58

55:                                               ; preds = %28
  %56 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %29, i64 %33) #8
  %57 = bitcast %"struct.media::VideoEncoderInfo"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %58

58:                                               ; preds = %55, %53
  %59 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %57, %55 ], [ %38, %53 ]
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"struct.media::VideoEncoderInfo"* %2 to i8*
  %66 = select i1 %62, i8* %64, i8* %65
  %67 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %61 to i64
  %70 = select i1 %62, i64 %68, i64 %69
  %71 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %66, i64 %70) #8
  br i1 %71, label %73, label %72

72:                                               ; preds = %58
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #8
  br label %73

73:                                               ; preds = %72, %58, %3
  %74 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #8
  %75 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 5, i64 0
  store i64 5, i64* %75, align 8
  store %"class.std::__1::vector.28"* %77, %"class.std::__1::vector.28"** %76, align 8
  %78 = getelementptr inbounds %"class.media::mojom::internal::VideoEncoderInfo_Data", %"class.media::mojom::internal::VideoEncoderInfo_Data"* %0, i64 0, i32 4
  %79 = getelementptr inbounds %"struct.mojo::internal::Pointer.21", %"struct.mojo::internal::Pointer.21"* %78, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %73
  %83 = bitcast %"struct.mojo::internal::Pointer.21"* %78 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 %80
  %85 = bitcast i8* %84 to %"class.mojo::internal::Array_Data.42"*
  %86 = call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS2_IhEEEEN4base4spanINSt3__16vectorIhNS7_9allocatorIhEEEELm18446744073709551615EEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSI_IhEEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.42"* nonnull %85, %"class.base::span"* nonnull %4, %"class.mojo::Message"* %1) #8
  br i1 %86, label %87, label %110

87:                                               ; preds = %73, %82
  %88 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 6
  %89 = getelementptr inbounds %"class.media::mojom::internal::VideoEncoderInfo_Data", %"class.media::mojom::internal::VideoEncoderInfo_Data"* %0, i64 0, i32 5
  %90 = getelementptr inbounds %"struct.mojo::internal::Pointer.22", %"struct.mojo::internal::Pointer.22"* %89, i64 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %104

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %88, i64 0, i32 0, i32 0
  %95 = load %"struct.media::ResolutionBitrateLimit"*, %"struct.media::ResolutionBitrateLimit"** %94, align 8
  %96 = getelementptr inbounds %"struct.media::VideoEncoderInfo", %"struct.media::VideoEncoderInfo"* %2, i64 0, i32 6, i32 0, i32 1
  %97 = load %"struct.media::ResolutionBitrateLimit"*, %"struct.media::ResolutionBitrateLimit"** %96, align 8
  %98 = icmp eq %"struct.media::ResolutionBitrateLimit"* %97, %95
  br i1 %98, label %103, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"struct.media::ResolutionBitrateLimit"* [ %101, %99 ], [ %97, %93 ]
  %101 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %100, i64 -1
  call void @_ZN5media22ResolutionBitrateLimitD1Ev(%"struct.media::ResolutionBitrateLimit"* %101) #8
  %102 = icmp eq %"struct.media::ResolutionBitrateLimit"* %101, %95
  br i1 %102, label %103, label %99

103:                                              ; preds = %99, %93
  store %"struct.media::ResolutionBitrateLimit"* %95, %"struct.media::ResolutionBitrateLimit"** %96, align 8
  br label %109

104:                                              ; preds = %87
  %105 = bitcast %"struct.mojo::internal::Pointer.22"* %89 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 %91
  %107 = bitcast i8* %106 to %"class.mojo::internal::Array_Data.47"*
  %108 = call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5media5mojom30ResolutionBitrateLimitDataViewEEENSt3__16vectorINS3_22ResolutionBitrateLimitENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal27ResolutionBitrateLimit_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.47"* nonnull %107, %"class.std::__1::vector.35"* %88, %"class.mojo::Message"* %1) #8
  br i1 %108, label %109, label %110

109:                                              ; preds = %103, %104
  br label %110

110:                                              ; preds = %82, %104, %109
  %111 = phi i1 [ false, %82 ], [ true, %109 ], [ false, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #8
  ret i1 %111
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewINS2_IhEEEEN4base4spanINSt3__16vectorIhNS7_9allocatorIhEEEELm18446744073709551615EEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINSI_IhEEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.42"*, %"class.base::span"*, %"class.mojo::Message"*) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.42", %"class.mojo::internal::Array_Data.42"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %97, label %10

10:                                               ; preds = %3
  %11 = tail call { i64, %"class.std::__1::vector.28"* } @_ZNK4base4spanINSt3__16vectorIhNS1_9allocatorIhEEEELm18446744073709551615EE7subspanEmm(%"class.base::span"* %1, i64 0, i64 %6) #8
  %12 = extractvalue { i64, %"class.std::__1::vector.28"* } %11, 0
  %13 = extractvalue { i64, %"class.std::__1::vector.28"* } %11, 1
  store i64 %12, i64* %7, align 8
  %14 = getelementptr inbounds %"class.base::span", %"class.base::span"* %1, i64 0, i32 1
  store %"class.std::__1::vector.28"* %13, %"class.std::__1::vector.28"** %14, align 8
  %15 = load i32, i32* %4, align 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %97, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.mojo::internal::Array_Data.42", %"class.mojo::internal::Array_Data.42"* %0, i64 1
  br label %19

19:                                               ; preds = %95, %17
  %20 = phi %"class.std::__1::vector.28"* [ %13, %17 ], [ %96, %95 ]
  %21 = phi i64 [ 0, %17 ], [ %28, %95 ]
  %22 = getelementptr inbounds %"class.mojo::internal::Array_Data.42", %"class.mojo::internal::Array_Data.42"* %18, i64 %21
  %23 = bitcast %"class.mojo::internal::Array_Data.42"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  %26 = bitcast %"class.mojo::internal::Array_Data.42"* %22 to i8*
  %27 = getelementptr inbounds i8, i8* %26, i64 %24
  %28 = add nuw nsw i64 %21, 1
  %29 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %20, i64 %21
  %30 = icmp eq i8* %27, null
  %31 = or i1 %25, %30
  br i1 %31, label %32, label %37

32:                                               ; preds = %19
  %33 = bitcast %"class.std::__1::vector.28"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %20, i64 %21, i32 0, i32 1
  %36 = bitcast i8** %35 to i64*
  store i64 %34, i64* %36, align 8
  br label %91

37:                                               ; preds = %19
  %38 = getelementptr inbounds i8, i8* %27, i64 4
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %20, i64 %21, i32 0, i32 1
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector.28"* %29 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = icmp eq i64 %47, %41
  br i1 %48, label %67, label %49

49:                                               ; preds = %37
  %50 = icmp eq i32 %40, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %49
  %52 = tail call i8* @_Znwm(i64 %41) #9
  %53 = getelementptr inbounds i8, i8* %52, i64 %41
  %54 = ptrtoint i8* %52 to i64
  %55 = sub i64 %41, %54
  %56 = getelementptr i8, i8* %52, i64 %55
  %57 = ptrtoint i8* %56 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %52, i8 0, i64 %57, i1 false) #8
  %58 = ptrtoint i8* %53 to i64
  br label %59

59:                                               ; preds = %49, %51
  %60 = phi i64 [ %58, %51 ], [ 0, %49 ]
  %61 = phi i64 [ %54, %51 ], [ 0, %49 ]
  store i64 %61, i64* %45, align 8
  store i64 %60, i64* %43, align 8
  %62 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %20, i64 %21, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast i8** %62 to i64*
  store i64 %60, i64* %63, align 8
  %64 = icmp eq i64 %46, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = inttoptr i64 %46 to i8*
  tail call void @_ZdlPv(i8* nonnull %66) #9
  br label %67

67:                                               ; preds = %37, %65, %59
  %68 = load i32, i32* %39, align 1
  %69 = zext i32 %68 to i64
  %70 = icmp eq i32 %68, 0
  br i1 %70, label %91, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %29, i64 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = icmp eq i8* %73, null
  %75 = getelementptr inbounds i8, i8* %27, i64 8
  br i1 %74, label %76, label %80

76:                                               ; preds = %71
  %77 = load i8, i8* %75, align 1
  store i8 %77, i8* null, align 536870912
  %78 = load i32, i32* %39, align 1
  %79 = icmp ugt i32 %78, 1
  br i1 %79, label %81, label %91

80:                                               ; preds = %71
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* align 1 %75, i64 %69, i1 false) #8
  br label %91

81:                                               ; preds = %76, %81
  %82 = phi i64 [ %86, %81 ], [ 1, %76 ]
  %83 = load i8*, i8** %72, align 8
  %84 = getelementptr inbounds i8, i8* %75, i64 %82
  %85 = load i8, i8* %84, align 1
  %86 = add nuw nsw i64 %82, 1
  %87 = getelementptr inbounds i8, i8* %83, i64 %82
  store i8 %85, i8* %87, align 1
  %88 = load i32, i32* %39, align 1
  %89 = zext i32 %88 to i64
  %90 = icmp ult i64 %86, %89
  br i1 %90, label %81, label %91

91:                                               ; preds = %81, %80, %76, %67, %32
  %92 = load i32, i32* %4, align 1
  %93 = zext i32 %92 to i64
  %94 = icmp ult i64 %28, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = load %"class.std::__1::vector.28"*, %"class.std::__1::vector.28"** %14, align 8
  br label %19

97:                                               ; preds = %91, %10, %3
  %98 = phi i1 [ false, %3 ], [ true, %10 ], [ true, %91 ]
  ret i1 %98
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, %"class.std::__1::vector.28"* } @_ZNK4base4spanINSt3__16vectorIhNS1_9allocatorIhEEEELm18446744073709551615EE7subspanEmm(%"class.base::span"*, i64, i64) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #8
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  %12 = load i64, i64* %6, align 8
  br label %13

13:                                               ; preds = %3, %9
  %14 = phi i64 [ %7, %3 ], [ %12, %9 ]
  %15 = icmp eq i64 %2, -1
  %16 = sub i64 %14, %1
  br i1 %15, label %22, label %17

17:                                               ; preds = %13
  %18 = icmp ult i64 %16, %2
  br i1 %18, label %19, label %22

19:                                               ; preds = %17
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 404, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0)) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %13, %19, %17
  %23 = phi i64 [ %2, %17 ], [ %2, %19 ], [ %16, %13 ]
  %24 = getelementptr inbounds %"class.base::span", %"class.base::span"* %0, i64 0, i32 1
  %25 = load %"class.std::__1::vector.28"*, %"class.std::__1::vector.28"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %25, i64 %1
  %27 = insertvalue { i64, %"class.std::__1::vector.28"* } undef, i64 %23, 0
  %28 = insertvalue { i64, %"class.std::__1::vector.28"* } %27, %"class.std::__1::vector.28"* %26, 1
  ret { i64, %"class.std::__1::vector.28"* } %28
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN5media5mojom30ResolutionBitrateLimitDataViewEEENSt3__16vectorINS3_22ResolutionBitrateLimitENS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal27ResolutionBitrateLimit_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.47"*, %"class.std::__1::vector.35"*, %"class.mojo::Message"*) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.47", %"class.mojo::internal::Array_Data.47"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.media::ResolutionBitrateLimit"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.35"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 20
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %49, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 20
  %19 = tail call i8* @_Znwm(i64 %18) #9
  %20 = bitcast i8* %19 to %"struct.media::ResolutionBitrateLimit"*
  %21 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %"struct.media::ResolutionBitrateLimit"* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN5media22ResolutionBitrateLimitC1Ev(%"struct.media::ResolutionBitrateLimit"* %24) #8
  %25 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %24, i64 1
  %26 = icmp eq %"struct.media::ResolutionBitrateLimit"* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %"struct.media::ResolutionBitrateLimit"* %21 to i64
  %29 = load i64, i64* %10, align 8
  %30 = load i64, i64* %8, align 8
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %30, %27 ], [ %9, %15 ]
  %34 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %35 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %34, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.media::ResolutionBitrateLimit"** %36 to i64*
  store i64 %32, i64* %37, align 8
  %38 = inttoptr i64 %35 to %"struct.media::ResolutionBitrateLimit"*
  %39 = icmp eq i64 %35, 0
  %40 = inttoptr i64 %33 to %"struct.media::ResolutionBitrateLimit"*
  br i1 %39, label %49, label %41

41:                                               ; preds = %31
  %42 = icmp eq %"struct.media::ResolutionBitrateLimit"* %40, %38
  br i1 %42, label %47, label %43

43:                                               ; preds = %41, %43
  %44 = phi %"struct.media::ResolutionBitrateLimit"* [ %45, %43 ], [ %40, %41 ]
  %45 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %44, i64 -1
  tail call void @_ZN5media22ResolutionBitrateLimitD1Ev(%"struct.media::ResolutionBitrateLimit"* %45) #8
  %46 = icmp eq %"struct.media::ResolutionBitrateLimit"* %45, %38
  br i1 %46, label %47, label %43

47:                                               ; preds = %43, %41
  %48 = inttoptr i64 %35 to i8*
  tail call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %3, %47, %31
  %50 = getelementptr inbounds %"class.mojo::internal::Array_Data.47", %"class.mojo::internal::Array_Data.47"* %0, i64 1
  %51 = load i32, i32* %4, align 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %107, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %1, i64 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %53, %103
  %56 = phi i32 [ %51, %53 ], [ %104, %103 ]
  %57 = phi i64 [ 0, %53 ], [ %64, %103 ]
  %58 = getelementptr inbounds %"class.mojo::internal::Array_Data.47", %"class.mojo::internal::Array_Data.47"* %50, i64 %57
  %59 = bitcast %"class.mojo::internal::Array_Data.47"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  %62 = bitcast %"class.mojo::internal::Array_Data.47"* %58 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %60
  %64 = add nuw nsw i64 %57, 1
  %65 = load %"struct.media::ResolutionBitrateLimit"*, %"struct.media::ResolutionBitrateLimit"** %54, align 8
  %66 = icmp eq i8* %63, null
  %67 = or i1 %61, %66
  br i1 %67, label %103, label %68

68:                                               ; preds = %55
  %69 = getelementptr inbounds i8, i8* %63, i64 8
  %70 = bitcast i8* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  %73 = getelementptr inbounds i8, i8* %69, i64 %71
  br i1 %72, label %89, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds i8, i8* %73, i64 8
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 1
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %107, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds i8, i8* %73, i64 12
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 1
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %107, label %84

84:                                               ; preds = %79
  %85 = icmp sgt i32 %77, 0
  %86 = select i1 %85, i32 %77, i32 0
  %87 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %65, i64 %57, i32 0, i32 0
  store i32 %86, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %65, i64 %57, i32 0, i32 1
  store i32 %82, i32* %88, align 4
  br label %89

89:                                               ; preds = %84, %68
  %90 = getelementptr inbounds i8, i8* %63, i64 16
  %91 = bitcast i8* %90 to i32*
  %92 = load i32, i32* %91, align 1
  %93 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %65, i64 %57, i32 1
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds i8, i8* %63, i64 20
  %95 = bitcast i8* %94 to i32*
  %96 = load i32, i32* %95, align 1
  %97 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %65, i64 %57, i32 2
  store i32 %96, i32* %97, align 4
  %98 = getelementptr inbounds i8, i8* %63, i64 24
  %99 = bitcast i8* %98 to i32*
  %100 = load i32, i32* %99, align 1
  %101 = getelementptr inbounds %"struct.media::ResolutionBitrateLimit", %"struct.media::ResolutionBitrateLimit"* %65, i64 %57, i32 3
  store i32 %100, i32* %101, align 4
  %102 = load i32, i32* %4, align 1
  br label %103

103:                                              ; preds = %55, %89
  %104 = phi i32 [ %56, %55 ], [ %102, %89 ]
  %105 = zext i32 %104 to i64
  %106 = icmp ult i64 %64, %105
  br i1 %106, label %55, label %107

107:                                              ; preds = %103, %74, %79, %49
  %108 = phi i1 [ true, %49 ], [ false, %79 ], [ false, %74 ], [ true, %103 ]
  ret i1 %108
}

; Function Attrs: nounwind
declare void @_ZN5media22ResolutionBitrateLimitD1Ev(%"struct.media::ResolutionBitrateLimit"*) unnamed_addr #5

declare void @_ZN5media22ResolutionBitrateLimitC1Ev(%"struct.media::ResolutionBitrateLimit"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
