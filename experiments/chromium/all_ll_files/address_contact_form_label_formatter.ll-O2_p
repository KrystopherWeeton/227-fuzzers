; ModuleID = '../../components/autofill/core/browser/ui/address_contact_form_label_formatter.cc'
source_filename = "../../components/autofill/core/browser/ui/address_contact_form_label_formatter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.autofill::AddressContactFormLabelFormatter" = type <{ %"class.autofill::LabelFormatter", i8, i8, i8, [5 x i8] }>
%"class.autofill::LabelFormatter" = type { i32 (...)**, %"class.std::__1::vector"*, %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.65" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { i32*, i32*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { i32* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.autofill::AutofillProfile"**, %"class.autofill::AutofillProfile"**, %"class.std::__1::__compressed_pair.60" }
%"class.autofill::AutofillProfile" = type { %"class.autofill::AutofillDataModel", %"class.autofill::NameInfo", %"class.autofill::EmailInfo", %"class.autofill::CompanyInfo", %"class.autofill::PhoneNumber", %"class.autofill::Address", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.base::Time", i32, i8, i8, %"class.std::__1::map", %"class.std::__1::map", %"class.base::WeakPtrFactory" }
%"class.autofill::AutofillDataModel" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.base::Time", %"class.base::Time" }
%"class.autofill::FormGroup" = type { i32 (...)** }
%"class.autofill::NameInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.autofill::structured_address::AddressComponent"* }
%"class.autofill::structured_address::AddressComponent" = type <{ i32 (...)**, %"class.absl::optional", i32, i32, %"class.std::__1::vector.13", %"class.absl::optional.20", %"class.autofill::structured_address::AddressComponent"*, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"class.std::__1::basic_string.1" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.autofill::structured_address::AddressComponent"**, %"class.autofill::structured_address::AddressComponent"**, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.autofill::structured_address::AddressComponent"** }
%"class.absl::optional.20" = type { %"class.absl::optional_internal::optional_data.21" }
%"class.absl::optional_internal::optional_data.21" = type { %"class.absl::optional_internal::optional_data_base.22" }
%"class.absl::optional_internal::optional_data_base.22" = type { %"class.absl::optional_internal::optional_data_dtor_base.23" }
%"class.absl::optional_internal::optional_data_dtor_base.23" = type { i8, %union.anon.24 }
%union.anon.24 = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.autofill::structured_address::AddressToken"*, %"struct.autofill::structured_address::AddressToken"*, %"class.std::__1::__compressed_pair.27" }
%"struct.autofill::structured_address::AddressToken" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.autofill::structured_address::AddressToken"* }
%"class.autofill::EmailInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.1" }
%"class.autofill::CompanyInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.1", %"class.autofill::AutofillProfile"* }
%"class.autofill::PhoneNumber" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.1", %"class.autofill::AutofillProfile"*, %"class.autofill::i18n::PhoneObject" }
%"class.autofill::i18n::PhoneObject" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.33", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.i18n::phonenumbers::PhoneNumber"* }
%"class.i18n::phonenumbers::PhoneNumber" = type opaque
%"class.autofill::Address" = type { %"class.autofill::FormGroup", %"class.std::__1::vector.39", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", %"class.std::__1::basic_string", %"class.autofill::structured_address::Address" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::basic_string.1"* }
%"class.autofill::structured_address::Address" = type { %"class.autofill::structured_address::AddressComponent.base", %"class.autofill::structured_address::StreetAddress", %"class.autofill::structured_address::PostalCode", %"class.autofill::structured_address::SortingCode", %"class.autofill::structured_address::DependentLocality", %"class.autofill::structured_address::City", %"class.autofill::structured_address::State", %"class.autofill::structured_address::CountryCode" }
%"class.autofill::structured_address::AddressComponent.base" = type <{ i32 (...)**, %"class.absl::optional", i32, i32, %"class.std::__1::vector.13", %"class.absl::optional.20", %"class.autofill::structured_address::AddressComponent"*, i32 }>
%"class.autofill::structured_address::StreetAddress" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8], %"class.autofill::structured_address::StreetAndDependentStreetName", %"class.autofill::structured_address::HouseNumber", %"class.autofill::structured_address::Premise", %"class.autofill::structured_address::SubPremise", %"class.std::__1::vector.39" }
%"class.autofill::structured_address::AddressComponentWithRewriter.base" = type { %"class.autofill::structured_address::AddressComponent.base" }
%"class.autofill::structured_address::StreetAndDependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::StreetName", %"class.autofill::structured_address::DependentStreetName" }
%"class.autofill::structured_address::StreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::HouseNumber" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Premise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::SubPremise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::Floor", %"class.autofill::structured_address::Apartment" }
%"class.autofill::structured_address::Floor" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Apartment" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::PostalCode" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::SortingCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentLocality" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::City" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::State" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::CountryCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.55" }
%"struct.std::__1::atomic.55" = type { %"struct.std::__1::__atomic_base.56" }
%"struct.std::__1::__atomic_base.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__cxx_atomic_impl.58" }
%"struct.std::__1::__cxx_atomic_impl.58" = type { %"struct.std::__1::__cxx_atomic_base_impl.59" }
%"struct.std::__1::__cxx_atomic_base_impl.59" = type { i8 }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.autofill::AutofillProfile"** }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.5 }
%struct.anon.5 = type { %"struct.std::__1::__padding.6", i8 }
%"struct.std::__1::__padding.6" = type { [1 x i8] }

@_ZTVN8autofill32AddressContactFormLabelFormatterE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.autofill::AddressContactFormLabelFormatter"*)* @_ZN8autofill32AddressContactFormLabelFormatterD2Ev to i8*), i8* bitcast (void (%"class.autofill::AddressContactFormLabelFormatter"*)* @_ZN8autofill32AddressContactFormLabelFormatterD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string.1"*, %"class.autofill::AddressContactFormLabelFormatter"*, %"class.autofill::AutofillProfile"*, i32)* @_ZNK8autofill32AddressContactFormLabelFormatter18GetLabelForProfileERKNS_15AutofillProfileENS_14FieldTypeGroupE to i8*)] }, align 8

@_ZN8autofill32AddressContactFormLabelFormatterC1ERKNSt3__16vectorIPNS_15AutofillProfileENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEENS_15ServerFieldTypeEjRKNS2_ISH_NS5_ISH_EEEE = hidden unnamed_addr alias void (%"class.autofill::AddressContactFormLabelFormatter"*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*, i32, i32, %"class.std::__1::vector.65"*), void (%"class.autofill::AddressContactFormLabelFormatter"*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*, i32, i32, %"class.std::__1::vector.65"*)* @_ZN8autofill32AddressContactFormLabelFormatterC2ERKNSt3__16vectorIPNS_15AutofillProfileENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEENS_15ServerFieldTypeEjRKNS2_ISH_NS5_ISH_EEEE
@_ZN8autofill32AddressContactFormLabelFormatterD1Ev = hidden unnamed_addr alias void (%"class.autofill::AddressContactFormLabelFormatter"*), void (%"class.autofill::AddressContactFormLabelFormatter"*)* @_ZN8autofill32AddressContactFormLabelFormatterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill32AddressContactFormLabelFormatterC2ERKNSt3__16vectorIPNS_15AutofillProfileENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEENS_15ServerFieldTypeEjRKNS2_ISH_NS5_ISH_EEEE(%"class.autofill::AddressContactFormLabelFormatter"*, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, %"class.std::__1::vector.65"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %0, i64 0, i32 0
  tail call void @_ZN8autofill14LabelFormatterC2ERKNSt3__16vectorIPNS_15AutofillProfileENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEENS_15ServerFieldTypeEjRKNS2_ISH_NS5_ISH_EEEE(%"class.autofill::LabelFormatter"* %7, %"class.std::__1::vector"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2, i32 %3, i32 %4, %"class.std::__1::vector.65"* dereferenceable(24) %5) #5
  %8 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8autofill32AddressContactFormLabelFormatterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %0, i64 0, i32 0, i32 5
  %11 = tail call zeroext i1 @_ZN8autofill16HasStreetAddressERKNSt3__16vectorINS_15ServerFieldTypeENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.65"* dereferenceable(24) %10) #5
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %9, align 8
  %13 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %0, i64 0, i32 2
  %14 = tail call zeroext i1 @_ZN8autofill22HaveSameEmailAddressesERKNSt3__16vectorIPNS_15AutofillProfileENS0_9allocatorIS3_EEEERKNS0_12basic_stringIcNS0_11char_traitsIcEENS4_IcEEEE(%"class.std::__1::vector"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #5
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %13, align 1
  %17 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %0, i64 0, i32 3
  %18 = tail call zeroext i1 @_ZN8autofill20HaveSamePhoneNumbersERKNSt3__16vectorIPNS_15AutofillProfileENS0_9allocatorIS3_EEEERKNS0_12basic_stringIcNS0_11char_traitsIcEENS4_IcEEEE(%"class.std::__1::vector"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #5
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i8
  store i8 %20, i8* %17, align 2
  ret void
}

declare void @_ZN8autofill14LabelFormatterC2ERKNSt3__16vectorIPNS_15AutofillProfileENS1_9allocatorIS4_EEEERKNS1_12basic_stringIcNS1_11char_traitsIcEENS5_IcEEEENS_15ServerFieldTypeEjRKNS2_ISH_NS5_ISH_EEEE(%"class.autofill::LabelFormatter"*, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, %"class.std::__1::vector.65"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN8autofill16HasStreetAddressERKNSt3__16vectorINS_15ServerFieldTypeENS0_9allocatorIS2_EEEE(%"class.std::__1::vector.65"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN8autofill22HaveSameEmailAddressesERKNSt3__16vectorIPNS_15AutofillProfileENS0_9allocatorIS3_EEEERKNS0_12basic_stringIcNS0_11char_traitsIcEENS4_IcEEEE(%"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN8autofill20HaveSamePhoneNumbersERKNSt3__16vectorIPNS_15AutofillProfileENS0_9allocatorIS3_EEEERKNS0_12basic_stringIcNS0_11char_traitsIcEENS4_IcEEEE(%"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8autofill14LabelFormatterD2Ev(%"class.autofill::LabelFormatter"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill32AddressContactFormLabelFormatterD2Ev(%"class.autofill::AddressContactFormLabelFormatter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %0, i64 0, i32 0
  tail call void @_ZN8autofill14LabelFormatterD2Ev(%"class.autofill::LabelFormatter"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill32AddressContactFormLabelFormatterD0Ev(%"class.autofill::AddressContactFormLabelFormatter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %0, i64 0, i32 0
  tail call void @_ZN8autofill14LabelFormatterD2Ev(%"class.autofill::LabelFormatter"* %2) #5
  %3 = bitcast %"class.autofill::AddressContactFormLabelFormatter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill32AddressContactFormLabelFormatter18GetLabelForProfileERKNS_15AutofillProfileENS_14FieldTypeGroupE(%"class.std::__1::basic_string.1"* noalias sret, %"class.autofill::AddressContactFormLabelFormatter"*, %"class.autofill::AutofillProfile"* dereferenceable(2856), i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.39", align 8
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = alloca %"class.std::__1::basic_string.1", align 8
  %9 = alloca %"class.std::__1::basic_string.1", align 8
  %10 = alloca %"class.std::__1::basic_string.1", align 8
  %11 = bitcast %"class.std::__1::vector.39"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #5
  %12 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #5
  %14 = icmp eq i32 %3, 5
  br i1 %14, label %15, label %22

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = tail call zeroext i1 @_ZN8autofill19IsStreetAddressPartENS_15ServerFieldTypeE(i32 %17) #5
  %19 = load i32, i32* %16, align 8
  %20 = tail call zeroext i1 @_ZN8autofill19IsStreetAddressPartENS_15ServerFieldTypeE(i32 %19) #5
  %21 = xor i1 %20, true
  br label %22

22:                                               ; preds = %4, %15
  %23 = phi i1 [ %18, %15 ], [ false, %4 ]
  %24 = phi i1 [ %21, %15 ], [ false, %4 ]
  %25 = icmp eq i32 %3, 1
  %26 = or i1 %25, %24
  br i1 %26, label %43, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = tail call zeroext i1 @_ZN8autofill9data_util12ContainsNameEj(i32 %29) #5
  br i1 %30, label %31, label %43

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #5
  %33 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 0, i32 5
  %34 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 0, i32 2
  call void @_ZN8autofill12GetLabelNameERKNSt3__16vectorINS_15ServerFieldTypeENS0_9allocatorIS2_EEEERKNS_15AutofillProfileERKNS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEE(%"class.std::__1::basic_string.1"* nonnull sret %6, %"class.std::__1::vector.65"* dereferenceable(24) %33, %"class.autofill::AutofillProfile"* dereferenceable(2856) %2, %"class.std::__1::basic_string"* dereferenceable(24) %34) #5
  call void @_ZN8autofill22AddLabelPartIfNotEmptyERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %6, %"class.std::__1::vector.39"* nonnull %5) #5
  %35 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %31
  %40 = bitcast %"class.std::__1::basic_string.1"* %6 to i8**
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #6
  br label %42

42:                                               ; preds = %31, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #5
  br label %43

43:                                               ; preds = %22, %42, %27
  br i1 %23, label %59, label %44

44:                                               ; preds = %43
  %45 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #5
  %46 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 1
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp ne i8 %47, 0
  %49 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 0, i32 5
  call void @_ZN8autofill15GetLabelAddressEbRKNS_15AutofillProfileERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS3_6vectorINS_15ServerFieldTypeENS7_ISD_EEEE(%"class.std::__1::basic_string.1"* nonnull sret %7, i1 zeroext %48, %"class.autofill::AutofillProfile"* dereferenceable(2856) %2, %"class.std::__1::basic_string"* dereferenceable(24) %49, %"class.std::__1::vector.65"* dereferenceable(24) %50) #5
  call void @_ZN8autofill22AddLabelPartIfNotEmptyERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %7, %"class.std::__1::vector.39"* nonnull %5) #5
  %51 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %44
  %56 = bitcast %"class.std::__1::basic_string.1"* %7 to i8**
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #6
  br label %58

58:                                               ; preds = %44, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #5
  br label %59

59:                                               ; preds = %58, %43
  %60 = icmp eq i32 %3, 7
  br i1 %60, label %78, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 3
  %63 = load i8, i8* %62, align 2, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %61
  %66 = bitcast %"class.std::__1::basic_string.1"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #5
  %67 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 0, i32 2
  call void @_ZN8autofill13GetLabelPhoneERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string.1"* nonnull sret %8, %"class.autofill::AutofillProfile"* dereferenceable(2856) %2, %"class.std::__1::basic_string"* dereferenceable(24) %67) #5
  call void @_ZN8autofill22AddLabelPartIfNotEmptyERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %8, %"class.std::__1::vector.39"* nonnull %5) #5
  %68 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string.1"* %8 to i8**
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #6
  br label %75

75:                                               ; preds = %65, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #5
  br label %76

76:                                               ; preds = %61, %75
  %77 = icmp eq i32 %3, 3
  br i1 %77, label %93, label %78

78:                                               ; preds = %59, %76
  %79 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 2
  %80 = load i8, i8* %79, align 1, !range !2
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %93, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.std::__1::basic_string.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #5
  %84 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 0, i32 2
  call void @_ZN8autofill13GetLabelEmailERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string.1"* nonnull sret %9, %"class.autofill::AutofillProfile"* dereferenceable(2856) %2, %"class.std::__1::basic_string"* dereferenceable(24) %84) #5
  call void @_ZN8autofill22AddLabelPartIfNotEmptyERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %9, %"class.std::__1::vector.39"* nonnull %5) #5
  %85 = bitcast %"class.std::__1::basic_string.1"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %85, i64 0, i32 1, i32 1
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %82
  %90 = bitcast %"class.std::__1::basic_string.1"* %9 to i8**
  %91 = load i8*, i8** %90, align 8
  call void @_ZdlPv(i8* %91) #6
  br label %92

92:                                               ; preds = %82, %89
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #5
  br label %93

93:                                               ; preds = %78, %76, %92
  br i1 %23, label %94, label %109

94:                                               ; preds = %93
  %95 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %12, align 8
  %96 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %13, align 8
  %97 = icmp eq %"class.std::__1::basic_string.1"* %95, %96
  br i1 %97, label %98, label %109

98:                                               ; preds = %94
  %99 = bitcast %"class.std::__1::basic_string.1"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #5
  %100 = getelementptr inbounds %"class.autofill::AddressContactFormLabelFormatter", %"class.autofill::AddressContactFormLabelFormatter"* %1, i64 0, i32 0, i32 2
  call void @_ZN8autofill13GetLabelPhoneERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string.1"* nonnull sret %10, %"class.autofill::AutofillProfile"* dereferenceable(2856) %2, %"class.std::__1::basic_string"* dereferenceable(24) %100) #5
  call void @_ZN8autofill22AddLabelPartIfNotEmptyERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %10, %"class.std::__1::vector.39"* nonnull %5) #5
  %101 = bitcast %"class.std::__1::basic_string.1"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %101, i64 0, i32 1, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = bitcast %"class.std::__1::basic_string.1"* %10 to i8**
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #6
  br label %108

108:                                              ; preds = %98, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #5
  br label %109

109:                                              ; preds = %108, %94, %93
  call void @_ZN8autofill18ConstructLabelLineERKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEE(%"class.std::__1::basic_string.1"* sret %0, %"class.std::__1::vector.39"* nonnull dereferenceable(24) %5) #5
  %110 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %12, align 8
  %111 = icmp eq %"class.std::__1::basic_string.1"* %110, null
  br i1 %111, label %133, label %112

112:                                              ; preds = %109
  %113 = bitcast %"class.std::__1::basic_string.1"* %110 to i8*
  %114 = load %"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"** %13, align 8
  %115 = icmp eq %"class.std::__1::basic_string.1"* %114, %110
  br i1 %115, label %131, label %116

116:                                              ; preds = %112, %126
  %117 = phi %"class.std::__1::basic_string.1"* [ %118, %126 ], [ %114, %112 ]
  %118 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %117, i64 -1
  %119 = bitcast %"class.std::__1::basic_string.1"* %118 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %119, i64 0, i32 1, i32 1
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %116
  %124 = bitcast %"class.std::__1::basic_string.1"* %118 to i8**
  %125 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %125) #6
  br label %126

126:                                              ; preds = %123, %116
  %127 = icmp eq %"class.std::__1::basic_string.1"* %118, %110
  br i1 %127, label %128, label %116

128:                                              ; preds = %126
  %129 = bitcast %"class.std::__1::vector.39"* %5 to i8**
  %130 = load i8*, i8** %129, align 8
  br label %131

131:                                              ; preds = %128, %112
  %132 = phi i8* [ %130, %128 ], [ %113, %112 ]
  store %"class.std::__1::basic_string.1"* %110, %"class.std::__1::basic_string.1"** %13, align 8
  call void @_ZdlPv(i8* %132) #6
  br label %133

133:                                              ; preds = %109, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN8autofill19IsStreetAddressPartENS_15ServerFieldTypeE(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN8autofill9data_util12ContainsNameEj(i32) local_unnamed_addr #1

declare void @_ZN8autofill22AddLabelPartIfNotEmptyERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPNS0_6vectorIS6_NS4_IS6_EEEE(%"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::vector.39"*) local_unnamed_addr #1

declare void @_ZN8autofill12GetLabelNameERKNSt3__16vectorINS_15ServerFieldTypeENS0_9allocatorIS2_EEEERKNS_15AutofillProfileERKNS0_12basic_stringIcNS0_11char_traitsIcEENS3_IcEEEE(%"class.std::__1::basic_string.1"* sret, %"class.std::__1::vector.65"* dereferenceable(24), %"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN8autofill15GetLabelAddressEbRKNS_15AutofillProfileERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEERKNS3_6vectorINS_15ServerFieldTypeENS7_ISD_EEEE(%"class.std::__1::basic_string.1"* sret, i1 zeroext, %"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.65"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN8autofill13GetLabelPhoneERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string.1"* sret, %"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN8autofill13GetLabelEmailERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.std::__1::basic_string.1"* sret, %"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN8autofill18ConstructLabelLineERKNSt3__16vectorINS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEE(%"class.std::__1::basic_string.1"* sret, %"class.std::__1::vector.39"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
