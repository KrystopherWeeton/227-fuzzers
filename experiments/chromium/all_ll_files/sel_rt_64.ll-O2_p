; ModuleID = '../../native_client/src/trusted/service_runtime/arch/x86_64/sel_rt_64.c'
source_filename = "../../native_client/src/trusted/service_runtime/arch/x86_64/sel_rt_64.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClAppThread = type { %struct.NaClThreadContext, %struct.NaClMutex, %struct.NaClApp*, i32, i32, %struct.NaClThread, %struct.NaClMutex, i32, %struct.NaClAppThreadSuspendedRegisters*, i32, i64, i8*, i32, i32, i32, %struct.NaClListNode, i32, %struct.NaClCondVar }
%struct.NaClThreadContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i16, i16, i64, i32, i32 }
%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClSyscallTableEntry = type { i32 (%struct.NaClAppThread*)* }
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type opaque
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque
%struct.NaClThread = type { i64 }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClAppThreadSuspendedRegisters = type opaque
%struct.NaClListNode = type { %struct.NaClListNode*, %struct.NaClListNode* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClSignalContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str.30 = private unnamed_addr constant [50 x i8] c"NaClUserToSys: uaddr 0x%08lx, addr space %d bits\0A\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @NaClInitGlobals() local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClAppThreadInitArchSpecific(%struct.NaClAppThread*, i64, i64) local_unnamed_addr #1 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %6 = load %struct.NaClApp*, %struct.NaClApp** %5, align 8
  %7 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 4
  %8 = bitcast %struct.NaClAppThread* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 184, i1 false)
  store i64 %2, i64* %7, align 8
  %9 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 5
  %10 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 7
  %11 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  store i64 %2, i64* %10, align 8
  %12 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 8
  %13 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 3
  %14 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 56, i1 false)
  %15 = load i64, i64* %13, align 8
  %16 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 15
  store i64 %15, i64* %16, align 8
  %17 = icmp eq i64 %1, 0
  %18 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 0
  %19 = load i8, i8* %18, align 8
  br i1 %17, label %24, label %20

20:                                               ; preds = %3
  %21 = zext i8 %19 to i64
  %22 = lshr i64 %1, %21
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20, %3
  %25 = zext i8 %19 to i32
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.30, i64 0, i64 0), i64 %1, i32 %25) #7
  br label %26

26:                                               ; preds = %20, %24
  %27 = load i64, i64* %13, align 8
  %28 = add i64 %27, %1
  %29 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 16
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 17
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 0, i64 -22>, <2 x i64>* %31, align 8
  %32 = tail call i32 @NaClTlsAllocate(%struct.NaClAppThread* %0) #7
  %33 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 21
  store i32 %32, i32* %33, align 8
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 22
  store i16 895, i16* %36, align 4
  %37 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 19
  store i32 8064, i32* %37, align 8
  %38 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 23
  tail call void asm sideeffect "fnstcw $0", "=*m,~{dirflag},~{fpsr},~{flags}"(i16* %38) #7, !srcloc !2
  %39 = bitcast i32* %4 to i8*
  call void @llvm.x86.sse.stmxcsr(i8* nonnull %39)
  %40 = load i32, i32* %4, align 4
  %41 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 0, i32 20
  store i32 %40, i32* %41, align 4
  br label %42

42:                                               ; preds = %26, %35
  %43 = phi i32 [ 1, %35 ], [ 0, %26 ]
  ret i32 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @NaClTlsAllocate(%struct.NaClAppThread*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind writeonly
declare void @llvm.x86.sse.stmxcsr(i8*) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @NaClThreadContextToSignalContext(%struct.NaClThreadContext* nocapture readonly, %struct.NaClSignalContext*) local_unnamed_addr #5 {
  %3 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %struct.NaClThreadContext, %struct.NaClThreadContext* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 1
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 2
  %8 = getelementptr inbounds %struct.NaClThreadContext, %struct.NaClThreadContext* %0, i64 0, i32 4
  %9 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  %10 = load i64, i64* %8, align 8
  %11 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 6
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %struct.NaClThreadContext, %struct.NaClThreadContext* %0, i64 0, i32 7
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 7
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 8
  %16 = getelementptr inbounds %struct.NaClThreadContext, %struct.NaClThreadContext* %0, i64 0, i32 12
  %17 = bitcast i64* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false)
  %18 = load i64, i64* %16, align 8
  %19 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 12
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %struct.NaClThreadContext, %struct.NaClThreadContext* %0, i64 0, i32 13
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 13
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %struct.NaClThreadContext, %struct.NaClThreadContext* %0, i64 0, i32 14
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 14
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %struct.NaClThreadContext, %struct.NaClThreadContext* %0, i64 0, i32 15
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 15
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %struct.NaClThreadContext, %struct.NaClThreadContext* %0, i64 0, i32 17
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 16
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %1, i64 0, i32 17
  %33 = bitcast i32* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @NaClSignalContextUnsetClobberedRegisters(%struct.NaClSignalContext* nocapture) local_unnamed_addr #6 {
  %2 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %0, i64 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %0, i64 0, i32 2
  %4 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %0, i64 0, i32 8
  %5 = getelementptr inbounds %struct.NaClSignalContext, %struct.NaClSignalContext* %0, i64 0, i32 17
  store i32 0, i32* %5, align 8
  %6 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  %7 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  ret void
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind writeonly }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 2146}
