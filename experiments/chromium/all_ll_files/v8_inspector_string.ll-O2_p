; ModuleID = '../../third_party/blink/renderer/core/inspector/v8_inspector_string.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/v8_inspector_string.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8_inspector::StringView" = type { i8, i64, %union.anon }
%union.anon = type { i8* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.v8_inspector::StringBuffer" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::protocol::Binary" = type { %"class.crdtp::Serializable", %class.scoped_refptr.2 }
%"class.crdtp::Serializable" = type { i32 (...)** }
%class.scoped_refptr.2 = type { %"class.blink::protocol::Binary::Impl"* }
%"class.blink::protocol::Binary::Impl" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i8* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.8", i64, %"class.WTF::Vector", %"class.WTF::Vector.10" }
%"class.WTF::RefCounted.8" = type { %"class.base::RefCounted.9" }
%"class.base::RefCounted.9" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.10" = type { %"class.WTF::VectorBuffer.11" }
%"class.WTF::VectorBuffer.11" = type { %"class.WTF::VectorBufferBase.12" }
%"class.WTF::VectorBufferBase.12" = type { %"class.std::__1::unique_ptr.13"*, i32, i32 }
%"class.std::__1::unique_ptr.13" = type opaque
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18" }
%"class.WTF::VectorBufferBase.18" = type { i8*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.30 }
%union.anon.30 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.v8::ScriptCompiler::CachedData" = type <{ i8*, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.crdtp::DeserializerState" = type { %"class.std::__1::shared_ptr", %"class.crdtp::cbor::CBORTokenizer", %"struct.crdtp::Status", %"class.std::__1::vector.35" }
%"class.std::__1::shared_ptr" = type { %"class.std::__1::vector"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.crdtp::cbor::CBORTokenizer" = type { %"class.crdtp::span", i32, %"struct.crdtp::Status", i64, i32, i64 }
%"class.crdtp::span" = type { i8*, i64 }
%"struct.crdtp::Status" = type { i32, i64 }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.crdtp::span.37"*, %"class.crdtp::span.37"*, %"class.std::__1::__compressed_pair.38" }
%"class.crdtp::span.37" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.crdtp::span.37"* }
%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer" = type { %"class.blink::protocol::Binary::Impl.base", %class.scoped_refptr.7 }
%"class.blink::protocol::Binary::Impl.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%class.scoped_refptr.7 = type { %"class.WTF::SharedBuffer"* }
%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector" = type { %"class.blink::protocol::Binary::Impl.base", %"class.WTF::Vector.16" }
%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData" = type { %"class.blink::protocol::Binary::Impl.base", %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.v8::ScriptCompiler::CachedData"* }

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZN5blink8protocol6BinaryD2Ev = comdat any

$_ZN5blink8protocol6BinaryD0Ev = comdat any

$_ZZN7logging15CheckOpValueStrIN2v814ScriptCompiler10CachedData12BufferPolicyEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

@.str = private unnamed_addr constant [67 x i8] c"data->buffer_policy == v8::ScriptCompiler::CachedData::BufferOwned\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/core/inspector/v8_inspector_string.cc\00", align 1
@_ZTVN5blink8protocol6BinaryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::protocol::Binary"*, %"class.std::__1::vector"*)* @_ZNK5blink8protocol6Binary16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE to i8*), i8* bitcast (void (%"class.blink::protocol::Binary"*)* @_ZN5blink8protocol6BinaryD2Ev to i8*), i8* bitcast (void (%"class.blink::protocol::Binary"*)* @_ZN5blink8protocol6BinaryD0Ev to i8*)] }, align 8
@_ZTVN5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBufferE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"*)* @_ZN5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBufferD2Ev to i8*), i8* bitcast (void (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"*)* @_ZN5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBufferD0Ev to i8*), i8* bitcast (i8* (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"*)* @_ZNK5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBuffer4dataEv to i8*), i8* bitcast (i64 (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"*)* @_ZNK5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBuffer4sizeEv to i8*)] }, align 8
@_ZTVN5blink8protocol12_GLOBAL__N_119BinaryBasedOnVectorE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"*)* @_ZN5blink8protocol12_GLOBAL__N_119BinaryBasedOnVectorD2Ev to i8*), i8* bitcast (void (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"*)* @_ZN5blink8protocol12_GLOBAL__N_119BinaryBasedOnVectorD0Ev to i8*), i8* bitcast (i8* (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"*)* @_ZNK5blink8protocol12_GLOBAL__N_119BinaryBasedOnVector4dataEv to i8*), i8* bitcast (i64 (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"*)* @_ZNK5blink8protocol12_GLOBAL__N_119BinaryBasedOnVector4sizeEv to i8*)] }, align 8
@_ZTVN5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedDataE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"*)* @_ZN5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedDataD2Ev to i8*), i8* bitcast (void (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"*)* @_ZN5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedDataD0Ev to i8*), i8* bitcast (i8* (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"*)* @_ZNK5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedData4dataEv to i8*), i8* bitcast (i64 (%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"*)* @_ZNK5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedData4sizeEv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE(%"class.v8_inspector::StringView"* noalias nocapture sret, %"class.WTF::StringView"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = ptrtoint i8* %4 to i64
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 0
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  %10 = bitcast i64* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #9
  br label %29

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 0
  br i1 %17, label %25, label %22

22:                                               ; preds = %11
  store i8 1, i8* %21, align 8
  %23 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  store i64 %20, i64* %23, align 8
  %24 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2, i32 0
  store i8* %4, i8** %24, align 8
  br label %29

25:                                               ; preds = %11
  store i8 0, i8* %21, align 8
  %26 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  store i64 %20, i64* %26, align 8
  %27 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2
  %28 = bitcast %union.anon* %27 to i64*
  store i64 %6, i64* %28, align 8
  br label %29

29:                                               ; preds = %25, %22, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8_inspector::StringBuffer"* @_ZN5blink25ToV8InspectorStringBufferERKN3WTF10StringViewE(%"class.WTF::StringView"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.v8_inspector::StringView", align 8
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8, !noalias !2
  %5 = icmp eq i8* %4, null
  %6 = ptrtoint i8* %4 to i64
  br i1 %5, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %2, i64 0, i32 0
  store i8 1, i8* %8, align 8, !alias.scope !2
  %9 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %2, i64 0, i32 1
  %10 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #9, !alias.scope !2
  br label %29

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4, !noalias !2
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8, !noalias !2
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %2, i64 0, i32 0
  br i1 %17, label %25, label %22

22:                                               ; preds = %11
  store i8 1, i8* %21, align 8, !alias.scope !2
  %23 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %2, i64 0, i32 1
  store i64 %20, i64* %23, align 8, !alias.scope !2
  %24 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %2, i64 0, i32 2, i32 0
  store i8* %4, i8** %24, align 8, !alias.scope !2
  br label %29

25:                                               ; preds = %11
  store i8 0, i8* %21, align 8, !alias.scope !2
  %26 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %2, i64 0, i32 1
  store i64 %20, i64* %26, align 8, !alias.scope !2
  %27 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %2, i64 0, i32 2
  %28 = bitcast %union.anon* %27 to i64*
  store i64 %6, i64* %28, align 8, !alias.scope !2
  br label %29

29:                                               ; preds = %7, %22, %25
  %30 = tail call %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector12StringBuffer6createENS_10StringViewE(%"class.v8_inspector::StringView"* nonnull byval(%"class.v8_inspector::StringView") align 8 %2) #9
  ret %"class.v8_inspector::StringBuffer"* %30
}

declare %"class.v8_inspector::StringBuffer"* @_ZN12v8_inspector12StringBuffer6createENS_10StringViewE(%"class.v8_inspector::StringView"* byval(%"class.v8_inspector::StringView") align 8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringERKN12v8_inspector10StringViewE(%"class.v8_inspector::StringView"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !5
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, 4294967296
  br i1 %5, label %15, label %9

9:                                                ; preds = %1
  br i1 %8, label %11, label %10, !prof !6

10:                                               ; preds = %9
  tail call void @llvm.trap() #9
  unreachable

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = trunc i64 %7 to i32
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %2, i8* %13, i32 %14) #9
  br label %22

15:                                               ; preds = %1
  br i1 %8, label %17, label %16, !prof !6

16:                                               ; preds = %15
  tail call void @llvm.trap() #9
  unreachable

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %0, i64 0, i32 2
  %19 = bitcast %union.anon* %18 to i16**
  %20 = load i16*, i16** %19, align 8
  %21 = trunc i64 %7 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %2, i16* %20, i32 %21) #9
  br label %22

22:                                               ; preds = %17, %11
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  ret %"class.WTF::StringImpl"* %24
}

declare void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"*, i8*, i32) unnamed_addr #1

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink12ToCoreStringENSt3__110unique_ptrIN12v8_inspector12StringBufferENS0_14default_deleteIS3_EEEE(%"class.v8_inspector::StringBuffer"*) local_unnamed_addr #0 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.v8_inspector::StringView", align 8
  %4 = icmp eq %"class.v8_inspector::StringBuffer"* %0, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = bitcast %"class.v8_inspector::StringBuffer"* %0 to void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)***
  %8 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %8, i64 2
  %10 = load void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringView"*, %"class.v8_inspector::StringBuffer"*)** %9, align 8
  call void %10(%"class.v8_inspector::StringView"* nonnull sret %3, %"class.v8_inspector::StringBuffer"* nonnull %0) #9
  %11 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = load i8, i8* %6, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %3, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 4294967296
  br i1 %13, label %23, label %17

17:                                               ; preds = %5
  br i1 %16, label %19, label %18, !prof !6

18:                                               ; preds = %17
  call void @llvm.trap() #9
  unreachable

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %3, i64 0, i32 2, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = trunc i64 %15 to i32
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %2, i8* %21, i32 %22) #9
  br label %30

23:                                               ; preds = %5
  br i1 %16, label %25, label %24, !prof !6

24:                                               ; preds = %23
  call void @llvm.trap() #9
  unreachable

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.v8_inspector::StringView", %"class.v8_inspector::StringView"* %3, i64 0, i32 2
  %27 = bitcast %union.anon* %26 to i16**
  %28 = load i16*, i16** %27, align 8
  %29 = trunc i64 %15 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %2, i16* %28, i32 %29) #9
  br label %30

30:                                               ; preds = %19, %25
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  %33 = bitcast %"class.v8_inspector::StringBuffer"* %0 to void (%"class.v8_inspector::StringBuffer"*)***
  %34 = load void (%"class.v8_inspector::StringBuffer"*)**, void (%"class.v8_inspector::StringBuffer"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %34, i64 1
  %36 = load void (%"class.v8_inspector::StringBuffer"*)*, void (%"class.v8_inspector::StringBuffer"*)** %35, align 8
  call void %36(%"class.v8_inspector::StringBuffer"* nonnull %0) #9
  br label %37

37:                                               ; preds = %1, %30
  %38 = phi %"class.WTF::StringImpl"* [ %32, %30 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink8protocol10StringUtil11fromUTF16LEEPKtm(i16*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = trunc i64 %1 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %3, i16* %0, i32 %4) #9
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  ret %"class.WTF::StringImpl"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8protocol6Binary16AppendSerializedEPNSt3__16vectorIhNS2_9allocatorIhEEEE(%"class.blink::protocol::Binary"* nocapture readonly, %"class.std::__1::vector"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Binary::Impl"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::protocol::Binary::Impl"* %4 to i8* (%"class.blink::protocol::Binary::Impl"*)***
  %8 = load i8* (%"class.blink::protocol::Binary::Impl"*)**, i8* (%"class.blink::protocol::Binary::Impl"*)*** %7, align 8
  %9 = getelementptr inbounds i8* (%"class.blink::protocol::Binary::Impl"*)*, i8* (%"class.blink::protocol::Binary::Impl"*)** %8, i64 2
  %10 = load i8* (%"class.blink::protocol::Binary::Impl"*)*, i8* (%"class.blink::protocol::Binary::Impl"*)** %9, align 8
  %11 = tail call i8* %10(%"class.blink::protocol::Binary::Impl"* nonnull %4) #9
  %12 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %3, align 8
  %13 = icmp eq %"class.blink::protocol::Binary::Impl"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %6
  %15 = bitcast %"class.blink::protocol::Binary::Impl"* %12 to i64 (%"class.blink::protocol::Binary::Impl"*)***
  %16 = load i64 (%"class.blink::protocol::Binary::Impl"*)**, i64 (%"class.blink::protocol::Binary::Impl"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.blink::protocol::Binary::Impl"*)*, i64 (%"class.blink::protocol::Binary::Impl"*)** %16, i64 3
  %18 = load i64 (%"class.blink::protocol::Binary::Impl"*)*, i64 (%"class.blink::protocol::Binary::Impl"*)** %17, align 8
  %19 = tail call i64 %18(%"class.blink::protocol::Binary::Impl"* nonnull %12) #9
  br label %20

20:                                               ; preds = %2, %6, %14
  %21 = phi i8* [ %11, %14 ], [ %11, %6 ], [ null, %2 ]
  %22 = phi i64 [ %19, %14 ], [ 0, %6 ], [ 0, %2 ]
  tail call void @_ZN5crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %21, i64 %22, %"class.std::__1::vector"* %1) #9
  ret void
}

declare void @_ZN5crdtp4cbor12EncodeBinaryENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8protocol6Binary8toBase64Ev(%"class.blink::protocol::Binary"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %2, align 8
  %4 = icmp eq %"class.blink::protocol::Binary::Impl"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::protocol::Binary::Impl"* %3 to i8* (%"class.blink::protocol::Binary::Impl"*)***
  %7 = load i8* (%"class.blink::protocol::Binary::Impl"*)**, i8* (%"class.blink::protocol::Binary::Impl"*)*** %6, align 8
  %8 = getelementptr inbounds i8* (%"class.blink::protocol::Binary::Impl"*)*, i8* (%"class.blink::protocol::Binary::Impl"*)** %7, i64 2
  %9 = load i8* (%"class.blink::protocol::Binary::Impl"*)*, i8* (%"class.blink::protocol::Binary::Impl"*)** %8, align 8
  %10 = tail call i8* %9(%"class.blink::protocol::Binary::Impl"* nonnull %3) #9
  %11 = bitcast %"class.blink::protocol::Binary::Impl"* %3 to i64 (%"class.blink::protocol::Binary::Impl"*)***
  %12 = load i64 (%"class.blink::protocol::Binary::Impl"*)**, i64 (%"class.blink::protocol::Binary::Impl"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.blink::protocol::Binary::Impl"*)*, i64 (%"class.blink::protocol::Binary::Impl"*)** %12, i64 3
  %14 = load i64 (%"class.blink::protocol::Binary::Impl"*)*, i64 (%"class.blink::protocol::Binary::Impl"*)** %13, align 8
  %15 = tail call i64 %14(%"class.blink::protocol::Binary::Impl"* nonnull %3) #9
  %16 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64 %15, i8* %10, i32 0) #9
  br label %17

17:                                               ; preds = %1, %5
  %18 = phi %"class.WTF::StringImpl"* [ %16, %5 ], [ null, %1 ]
  ret %"class.WTF::StringImpl"* %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12Base64EncodeEN4base4spanIKhLm18446744073709551615EEENS_18Base64EncodePolicyE(i64, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8protocol6Binary10fromBase64ERKN3WTF6StringEPb(%"class.blink::protocol::Binary"* noalias nocapture sret, %"class.WTF::String"* dereferenceable(8), i8* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #9
  %8 = call zeroext i1 @_ZN3WTF12Base64DecodeERKNS_6StringERNS_6VectorIcLj0ENS_18PartitionAllocatorEEEPFbDsENS_18Base64DecodePolicyE(%"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::Vector"* nonnull dereferenceable(16) %4, i1 (i16)* null, i32 0) #9
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %2, align 1
  %10 = call noalias i8* @malloc(i64 24) #9
  %11 = call %"class.WTF::SharedBuffer"* @_ZN3WTF12SharedBuffer11AdoptVectorERNS_6VectorIcLj0ENS_18PartitionAllocatorEEE(%"class.WTF::Vector"* nonnull dereferenceable(16) %4) #9
  %12 = ptrtoint %"class.WTF::SharedBuffer"* %11 to i64
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 16
  %17 = bitcast i8* %16 to i64*
  store i64 %12, i64* %17, align 8
  %18 = ptrtoint i8* %10 to i64
  %19 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 1
  %21 = bitcast %class.scoped_refptr.2* %20 to i64*
  store i64 %18, i64* %21, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %29, label %24, !prof !6

24:                                               ; preds = %3
  %25 = load i32, i32* %7, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %28, label %27, !prof !7

27:                                               ; preds = %24
  store i32 0, i32* %7, align 4
  br label %28

28:                                               ; preds = %27, %24
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %22) #9
  store i8* null, i8** %6, align 8
  br label %29

29:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret void
}

declare zeroext i1 @_ZN3WTF12Base64DecodeERKNS_6StringERNS_6VectorIcLj0ENS_18PartitionAllocatorEEEPFbDsENS_18Base64DecodePolicyE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector"* dereferenceable(16), i1 (i16)*, i32) local_unnamed_addr #1

declare %"class.WTF::SharedBuffer"* @_ZN3WTF12SharedBuffer11AdoptVectorERNS_6VectorIcLj0ENS_18PartitionAllocatorEEE(%"class.WTF::Vector"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8protocol6Binary16fromSharedBufferE13scoped_refptrIN3WTF12SharedBufferEE(%"class.blink::protocol::Binary"* noalias nocapture sret, %"class.WTF::SharedBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.WTF::SharedBuffer"* %1 to i64
  %4 = tail call noalias i8* @malloc(i64 24) #9
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 1, i32* %6, align 4
  %7 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 16
  %9 = bitcast i8* %8 to i64*
  store i64 %3, i64* %9, align 8
  %10 = ptrtoint i8* %4 to i64
  %11 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 1
  %13 = bitcast %class.scoped_refptr.2* %12 to i64*
  store i64 %10, i64* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8protocol6Binary10fromVectorEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE(%"class.blink::protocol::Binary"* noalias nocapture sret, %"class.WTF::Vector.16"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = tail call noalias i8* @malloc(i64 32) #9
  %4 = bitcast %"class.WTF::Vector.16"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store atomic i64 0, i64* %4 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.16", %"class.WTF::Vector.16"* %1, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  store i32 0, i32* %6, align 4
  %8 = getelementptr inbounds %"class.WTF::Vector.16", %"class.WTF::Vector.16"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  store i32 0, i32* %8, align 4
  %10 = getelementptr inbounds i8, i8* %3, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_119BinaryBasedOnVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %3, i64 16
  %14 = getelementptr inbounds i8, i8* %3, i64 24
  %15 = bitcast i8* %14 to i32*
  %16 = getelementptr inbounds i8, i8* %3, i64 28
  %17 = bitcast i8* %16 to i32*
  %18 = bitcast i8* %13 to i64*
  store atomic i64 %5, i64* %18 monotonic, align 8
  store i32 %7, i32* %15, align 4
  store i32 %9, i32* %17, align 4
  %19 = ptrtoint i8* %3 to i64
  %20 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 1
  %22 = bitcast %class.scoped_refptr.2* %21 to i64*
  store i64 %19, i64* %22, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8protocol6Binary8fromSpanEPKhm(%"class.blink::protocol::Binary"* noalias nocapture sret, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.16", align 8
  %5 = bitcast %"class.WTF::Vector.16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.WTF::Vector.16", %"class.WTF::Vector.16"* %4, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Vector.16", %"class.WTF::Vector.16"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #9
  %8 = trunc i64 %2 to i32
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.16"* nonnull %4, i8* %1, i32 %8)
  %9 = bitcast %"class.WTF::Vector.16"* %4 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 0, i64* %9 monotonic, align 8
  %11 = load i32, i32* %6, align 8
  store i32 0, i32* %6, align 8
  %12 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %13 = call noalias i8* @malloc(i64 32) #9, !noalias !8
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 1, i32* %15, align 4, !noalias !8
  %16 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_119BinaryBasedOnVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8, !noalias !8
  %17 = getelementptr inbounds i8, i8* %13, i64 16
  %18 = getelementptr inbounds i8, i8* %13, i64 24
  %19 = bitcast i8* %18 to i32*
  %20 = getelementptr inbounds i8, i8* %13, i64 28
  %21 = bitcast i8* %20 to i32*
  %22 = bitcast i8* %17 to i64*
  store atomic i64 %10, i64* %22 monotonic, align 8, !noalias !8
  store i32 %11, i32* %19, align 4, !noalias !8
  store i32 %12, i32* %21, align 4, !noalias !8
  %23 = ptrtoint i8* %13 to i64
  %24 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !alias.scope !8
  %25 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 1
  %26 = bitcast %class.scoped_refptr.2* %25 to i64*
  store i64 %23, i64* %26, align 8, !alias.scope !8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.16"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.16", %"class.WTF::Vector.16"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.16", %"class.WTF::Vector.16"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.16", %"class.WTF::Vector.16"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !6

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %32) #9
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.16"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !6

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #9
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #9
  %50 = bitcast %"class.WTF::Vector.16"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !6

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %66) #9
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %67, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #9
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !6

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #9
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #9
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.16"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #9
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %96, i8* %97) #9
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #9
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #9
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #9
  %105 = getelementptr inbounds %"class.WTF::Vector.16", %"class.WTF::Vector.16"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !6

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #9
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8protocol6Binary14fromCachedDataENSt3__110unique_ptrIN2v814ScriptCompiler10CachedDataENS2_14default_deleteIS6_EEEE(%"class.blink::protocol::Binary"* noalias nocapture sret, %"struct.v8::ScriptCompiler::CachedData"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = ptrtoint %"struct.v8::ScriptCompiler::CachedData"* %1 to i64
  %8 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %10 = getelementptr inbounds %"struct.v8::ScriptCompiler::CachedData", %"struct.v8::ScriptCompiler::CachedData"* %1, i64 0, i32 4
  %11 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  store i32 1, i32* %5, align 4
  %12 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = load i32, i32* %10, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %16

15:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* null, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  br label %26

16:                                               ; preds = %2
  %17 = bitcast i32* %10 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN2v814ScriptCompiler10CachedData12BufferPolicyEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  %19 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %11, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN2v814ScriptCompiler10CachedData12BufferPolicyEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i8* %18, i8* %19) #9
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  store i8* %21, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 135, %"class.logging::CheckOpResult"* nonnull %4) #9
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %26

26:                                               ; preds = %15, %16, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  %27 = call noalias i8* @malloc(i64 24) #9
  %28 = getelementptr inbounds i8, i8* %27, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 1, i32* %29, align 4
  %30 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds i8, i8* %27, i64 16
  %32 = bitcast i8* %31 to i64*
  store i64 %7, i64* %32, align 8
  %33 = ptrtoint i8* %27 to i64
  %34 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 1
  %36 = bitcast %class.scoped_refptr.2* %35 to i64*
  store i64 %33, i64* %36, align 8
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5crdtp18ProtocolTypeTraitsIN3WTF6StringEvE11DeserializeEPNS_17DeserializerStateEPS2_(%"class.crdtp::DeserializerState"*, %"class.WTF::String"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %0, i64 0, i32 1
  %5 = tail call i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"* %4) #9
  %6 = icmp eq i32 %5, 6
  br i1 %6, label %7, label %30

7:                                                ; preds = %2
  %8 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.crdtp::cbor::CBORTokenizer"* %4) #9
  %9 = extractvalue { i8*, i64 } %8, 0
  %10 = extractvalue { i8*, i64 } %8, 1
  %11 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %9, i64 %10) #9
  %12 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %13 = bitcast %"class.WTF::String"* %1 to i64*
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  store i64 %12, i64* %13, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %61, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %61

29:                                               ; preds = %26
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #9
  br label %61

30:                                               ; preds = %2
  %31 = tail call i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"* %4) #9
  %32 = icmp eq i32 %31, 7
  br i1 %32, label %33, label %60

33:                                               ; preds = %30
  %34 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer18GetString16WireRepEv(%"class.crdtp::cbor::CBORTokenizer"* %4) #9
  %35 = extractvalue { i8*, i64 } %34, 0
  %36 = extractvalue { i8*, i64 } %34, 1
  %37 = bitcast i8* %35 to i16*
  %38 = lshr i64 %36, 1
  %39 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = trunc i64 %38 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %3, i16* %37, i32 %40) #9
  %41 = bitcast %"class.WTF::String"* %3 to i64*
  %42 = load i64, i64* %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %43 = bitcast %"class.WTF::String"* %1 to i64*
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  store i64 %42, i64* %43, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #9
  br label %61

60:                                               ; preds = %30
  tail call void @_ZN5crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.crdtp::DeserializerState"* %0, i32 52) #9
  br label %61

61:                                               ; preds = %33, %56, %59, %7, %26, %29, %60
  %62 = phi i1 [ false, %60 ], [ true, %29 ], [ true, %26 ], [ true, %7 ], [ true, %59 ], [ true, %56 ], [ true, %33 ]
  ret i1 %62
}

declare i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #1

declare { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #1

declare { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer18GetString16WireRepEv(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #1

declare void @_ZN5crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.crdtp::DeserializerState"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5crdtp18ProtocolTypeTraitsIN3WTF6StringEvE9SerializeERKS2_PNSt3__16vectorIhNS6_9allocatorIhEEEE(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %2, %6
  tail call void @_ZN5crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* null, i64 0, %"class.std::__1::vector"* %1) #9
  br label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  br i1 %15, label %20, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.WTF::StringImpl"* %16 to i8*
  %19 = zext i32 %8 to i64
  tail call void @_ZN5crdtp4cbor16EncodeFromLatin1ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8* %18, i64 %19, %"class.std::__1::vector"* %1) #9
  br label %23

20:                                               ; preds = %11
  %21 = bitcast %"class.WTF::StringImpl"* %16 to i16*
  %22 = zext i32 %8 to i64
  tail call void @_ZN5crdtp4cbor15EncodeFromUTF16ENS_4spanItEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i16* %21, i64 %22, %"class.std::__1::vector"* %1) #9
  br label %23

23:                                               ; preds = %20, %17, %10
  ret void
}

declare void @_ZN5crdtp4cbor13EncodeString8ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #1

declare void @_ZN5crdtp4cbor16EncodeFromLatin1ENS_4spanIhEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i8*, i64, %"class.std::__1::vector"*) local_unnamed_addr #1

declare void @_ZN5crdtp4cbor15EncodeFromUTF16ENS_4spanItEEPNSt3__16vectorIhNS3_9allocatorIhEEEE(i16*, i64, %"class.std::__1::vector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5crdtp18ProtocolTypeTraitsIN5blink8protocol6BinaryEvE11DeserializeEPNS_17DeserializerStateEPS3_(%"class.crdtp::DeserializerState"*, %"class.blink::protocol::Binary"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = alloca %"class.WTF::Vector.16", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.crdtp::DeserializerState", %"class.crdtp::DeserializerState"* %0, i64 0, i32 1
  %7 = tail call i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"* %6) #9
  %8 = icmp eq i32 %7, 8
  br i1 %8, label %9, label %50

9:                                                ; preds = %2
  %10 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer9GetBinaryEv(%"class.crdtp::cbor::CBORTokenizer"* %6) #9
  %11 = extractvalue { i8*, i64 } %10, 0
  %12 = extractvalue { i8*, i64 } %10, 1
  %13 = bitcast %"class.WTF::Vector.16"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #9, !noalias !11
  %14 = getelementptr inbounds %"class.WTF::Vector.16", %"class.WTF::Vector.16"* %4, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.16", %"class.WTF::Vector.16"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #9, !noalias !11
  %16 = trunc i64 %12 to i32
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.16"* nonnull %4, i8* %11, i32 %16) #9, !noalias !11
  %17 = bitcast %"class.WTF::Vector.16"* %4 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !11
  store atomic i64 0, i64* %17 monotonic, align 8, !noalias !11
  %19 = load i32, i32* %14, align 8, !noalias !11
  store i32 0, i32* %14, align 8, !noalias !11
  %20 = load i32, i32* %15, align 4, !noalias !11
  store i32 0, i32* %15, align 4, !noalias !11
  %21 = call noalias i8* @malloc(i64 32) #9, !noalias !14
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = bitcast i8* %22 to i32*
  store i32 1, i32* %23, align 4, !noalias !14
  %24 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_119BinaryBasedOnVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !noalias !14
  %25 = getelementptr inbounds i8, i8* %21, i64 16
  %26 = getelementptr inbounds i8, i8* %21, i64 24
  %27 = bitcast i8* %26 to i32*
  %28 = getelementptr inbounds i8, i8* %21, i64 28
  %29 = bitcast i8* %28 to i32*
  %30 = bitcast i8* %25 to i64*
  store atomic i64 %18, i64* %30 monotonic, align 8, !noalias !14
  store i32 %19, i32* %27, align 4, !noalias !14
  store i32 %20, i32* %29, align 4, !noalias !14
  %31 = ptrtoint i8* %21 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #9, !noalias !11
  %32 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %1, i64 0, i32 1
  %33 = bitcast %class.scoped_refptr.2* %32 to i64*
  %34 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %32, i64 0, i32 0
  %35 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %34, align 8
  store i64 %31, i64* %33, align 8
  %36 = icmp eq %"class.blink::protocol::Binary::Impl"* %35, null
  br i1 %36, label %117, label %37

37:                                               ; preds = %9
  %38 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %38, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #9
  %40 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %117

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %38, i64 -2
  %45 = bitcast %"class.base::RefCounted"* %44 to %"class.blink::protocol::Binary::Impl"*
  %46 = bitcast %"class.base::RefCounted"* %44 to void (%"class.blink::protocol::Binary::Impl"*)***
  %47 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %47, i64 1
  %49 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %48, align 8
  call void %49(%"class.blink::protocol::Binary::Impl"* nonnull %45) #9
  br label %117

50:                                               ; preds = %2
  %51 = tail call i32 @_ZNK5crdtp4cbor13CBORTokenizer8TokenTagEv(%"class.crdtp::cbor::CBORTokenizer"* %6) #9
  %52 = icmp eq i32 %51, 6
  br i1 %52, label %53, label %116

53:                                               ; preds = %50
  %54 = tail call { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer10GetString8Ev(%"class.crdtp::cbor::CBORTokenizer"* %6) #9
  %55 = extractvalue { i8*, i64 } %54, 0
  %56 = extractvalue { i8*, i64 } %54, 1
  %57 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #9
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %59 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %55, i64 %56) #9
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %58, align 8
  %60 = bitcast %"class.WTF::Vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #9, !noalias !17
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 16, i1 false) #9, !noalias !17
  %63 = call zeroext i1 @_ZN3WTF12Base64DecodeERKNS_6StringERNS_6VectorIcLj0ENS_18PartitionAllocatorEEEPFbDsENS_18Base64DecodePolicyE(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::Vector"* nonnull dereferenceable(16) %3, i1 (i16)* null, i32 0) #9, !noalias !17
  %64 = call noalias i8* @malloc(i64 24) #9, !noalias !17
  %65 = call %"class.WTF::SharedBuffer"* @_ZN3WTF12SharedBuffer11AdoptVectorERNS_6VectorIcLj0ENS_18PartitionAllocatorEEE(%"class.WTF::Vector"* nonnull dereferenceable(16) %3) #9, !noalias !17
  %66 = ptrtoint %"class.WTF::SharedBuffer"* %65 to i64
  %67 = getelementptr inbounds i8, i8* %64, i64 8
  %68 = bitcast i8* %67 to i32*
  store i32 1, i32* %68, align 4, !noalias !17
  %69 = bitcast i8* %64 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %69, align 8, !noalias !17
  %70 = getelementptr inbounds i8, i8* %64, i64 16
  %71 = bitcast i8* %70 to i64*
  store i64 %66, i64* %71, align 8, !noalias !17
  %72 = ptrtoint i8* %64 to i64
  %73 = load i8*, i8** %61, align 8, !noalias !17
  %74 = icmp eq i8* %73, null
  br i1 %74, label %80, label %75, !prof !6

75:                                               ; preds = %53
  %76 = load i32, i32* %62, align 4, !noalias !17
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %79, label %78, !prof !7

78:                                               ; preds = %75
  store i32 0, i32* %62, align 4, !noalias !17
  br label %79

79:                                               ; preds = %78, %75
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %73) #9, !noalias !17
  store i8* null, i8** %61, align 8, !noalias !17
  br label %80

80:                                               ; preds = %53, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #9, !noalias !17
  %81 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %1, i64 0, i32 1
  %82 = bitcast %class.scoped_refptr.2* %81 to i64*
  %83 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %81, i64 0, i32 0
  %84 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %83, align 8
  store i64 %72, i64* %82, align 8
  %85 = icmp eq %"class.blink::protocol::Binary::Impl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %84, i64 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %87, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #9
  %89 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %87, i64 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %99

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %87, i64 -2
  %94 = bitcast %"class.base::RefCounted"* %93 to %"class.blink::protocol::Binary::Impl"*
  %95 = bitcast %"class.base::RefCounted"* %93 to void (%"class.blink::protocol::Binary::Impl"*)***
  %96 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %96, i64 1
  %98 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %97, align 8
  call void %98(%"class.blink::protocol::Binary::Impl"* nonnull %94) #9
  br label %99

99:                                               ; preds = %92, %86, %80
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #9
  br label %115

115:                                              ; preds = %99, %111, %114
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #9
  br label %117

116:                                              ; preds = %50
  tail call void @_ZN5crdtp17DeserializerState13RegisterErrorENS_5ErrorE(%"class.crdtp::DeserializerState"* %0, i32 54) #9
  br label %117

117:                                              ; preds = %9, %37, %43, %116, %115
  %118 = phi i1 [ %63, %115 ], [ false, %116 ], [ true, %43 ], [ true, %37 ], [ true, %9 ]
  ret i1 %118
}

declare { i8*, i64 } @_ZNK5crdtp4cbor13CBORTokenizer9GetBinaryEv(%"class.crdtp::cbor::CBORTokenizer"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8protocol6BinaryD2Ev(%"class.blink::protocol::Binary"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Binary::Impl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #9
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.blink::protocol::Binary::Impl"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.blink::protocol::Binary::Impl"*)***
  %16 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %16, i64 1
  %18 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %17, align 8
  tail call void %18(%"class.blink::protocol::Binary::Impl"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %6, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5crdtp18ProtocolTypeTraitsIN5blink8protocol6BinaryEvE9SerializeERKS3_PNSt3__16vectorIhNS7_9allocatorIhEEEE(%"class.blink::protocol::Binary"* dereferenceable(16), %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::protocol::Binary"* %0 to void (%"class.blink::protocol::Binary"*, %"class.std::__1::vector"*)***
  %4 = load void (%"class.blink::protocol::Binary"*, %"class.std::__1::vector"*)**, void (%"class.blink::protocol::Binary"*, %"class.std::__1::vector"*)*** %3, align 8
  %5 = load void (%"class.blink::protocol::Binary"*, %"class.std::__1::vector"*)*, void (%"class.blink::protocol::Binary"*, %"class.std::__1::vector"*)** %4, align 8
  tail call void %5(%"class.blink::protocol::Binary"* %0, %"class.std::__1::vector"* %1) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8protocol6BinaryD0Ev(%"class.blink::protocol::Binary"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol6BinaryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::protocol::Binary", %"class.blink::protocol::Binary"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::protocol::Binary::Impl"*, %"class.blink::protocol::Binary::Impl"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::Binary::Impl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::protocol::Binary::Impl", %"class.blink::protocol::Binary::Impl"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #9
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.blink::protocol::Binary::Impl"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.blink::protocol::Binary::Impl"*)***
  %16 = load void (%"class.blink::protocol::Binary::Impl"*)**, void (%"class.blink::protocol::Binary::Impl"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %16, i64 1
  %18 = load void (%"class.blink::protocol::Binary::Impl"*)*, void (%"class.blink::protocol::Binary::Impl"*)** %17, align 8
  tail call void %18(%"class.blink::protocol::Binary::Impl"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = bitcast %"class.blink::protocol::Binary"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBufferD2Ev(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %3, align 8
  %5 = icmp eq %"class.WTF::SharedBuffer"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #9
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %4) #9
  %12 = bitcast %"class.WTF::SharedBuffer"* %4 to i8*
  tail call void @free(i8* %12) #9
  br label %13

13:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBufferD0Ev(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %3, align 8
  %5 = icmp eq %"class.WTF::SharedBuffer"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #9
  %8 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %4) #9
  %12 = bitcast %"class.WTF::SharedBuffer"* %4 to i8*
  tail call void @free(i8* %12) #9
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = bitcast %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* %0 to i8*
  tail call void @free(i8* %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZNK5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBuffer4dataEv(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %2, align 8
  %4 = tail call i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"* %3) #9
  ret i8* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK5blink8protocol12_GLOBAL__N_125BinaryBasedOnSharedBuffer4sizeEv(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnSharedBuffer"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %3, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  ret i64 %5
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare i8* @_ZN3WTF12SharedBuffer4DataEv(%"class.WTF::SharedBuffer"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink8protocol12_GLOBAL__N_119BinaryBasedOnVectorD2Ev(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_119BinaryBasedOnVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %12, label %6, !prof !6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !7

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %4) #9
  store i8* null, i8** %3, align 8
  br label %12

12:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink8protocol12_GLOBAL__N_119BinaryBasedOnVectorD0Ev(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_119BinaryBasedOnVectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %12, label %6, !prof !6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !7

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %4) #9
  br label %12

12:                                               ; preds = %1, %11
  %13 = bitcast %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* %0 to i8*
  tail call void @free(i8* %13) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @_ZNK5blink8protocol12_GLOBAL__N_119BinaryBasedOnVector4dataEv(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK5blink8protocol12_GLOBAL__N_119BinaryBasedOnVector4sizeEv(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnVector"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = zext i32 %3 to i64
  ret i64 %4
}

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN2v814ScriptCompiler10CachedData12BufferPolicyEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to i32*
  %4 = load i32, i32* %3, align 4
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %0, i32 %4) #9
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedDataD2Ev(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.v8::ScriptCompiler::CachedData"*, %"struct.v8::ScriptCompiler::CachedData"** %3, align 8
  store %"struct.v8::ScriptCompiler::CachedData"* null, %"struct.v8::ScriptCompiler::CachedData"** %3, align 8
  %5 = icmp eq %"struct.v8::ScriptCompiler::CachedData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2v814ScriptCompiler10CachedDataD1Ev(%"struct.v8::ScriptCompiler::CachedData"* nonnull %4) #9
  %7 = bitcast %"struct.v8::ScriptCompiler::CachedData"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedDataD0Ev(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.v8::ScriptCompiler::CachedData"*, %"struct.v8::ScriptCompiler::CachedData"** %3, align 8
  store %"struct.v8::ScriptCompiler::CachedData"* null, %"struct.v8::ScriptCompiler::CachedData"** %3, align 8
  %5 = icmp eq %"struct.v8::ScriptCompiler::CachedData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2v814ScriptCompiler10CachedDataD1Ev(%"struct.v8::ScriptCompiler::CachedData"* nonnull %4) #9
  %7 = bitcast %"struct.v8::ScriptCompiler::CachedData"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* %0 to i8*
  tail call void @free(i8* %9) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i8* @_ZNK5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedData4dataEv(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.v8::ScriptCompiler::CachedData"*, %"struct.v8::ScriptCompiler::CachedData"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::ScriptCompiler::CachedData", %"struct.v8::ScriptCompiler::CachedData"* %3, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK5blink8protocol12_GLOBAL__N_123BinaryBasedOnCachedData4sizeEv(%"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData", %"class.blink::protocol::(anonymous namespace)::BinaryBasedOnCachedData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.v8::ScriptCompiler::CachedData"*, %"struct.v8::ScriptCompiler::CachedData"** %2, align 8
  %4 = getelementptr inbounds %"struct.v8::ScriptCompiler::CachedData", %"struct.v8::ScriptCompiler::CachedData"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  ret i64 %6
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #9
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v814ScriptCompiler10CachedDataD1Ev(%"struct.v8::ScriptCompiler::CachedData"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink23ToV8InspectorStringViewERKN3WTF10StringViewE"}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink8protocol6Binary10fromVectorEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink8protocol6Binary10fromVectorEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink8protocol6Binary8fromSpanEPKhm: argument 0"}
!13 = distinct !{!13, !"_ZN5blink8protocol6Binary8fromSpanEPKhm"}
!14 = !{!15, !12}
!15 = distinct !{!15, !16, !"_ZN5blink8protocol6Binary10fromVectorEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink8protocol6Binary10fromVectorEN3WTF6VectorIhLj0ENS2_18PartitionAllocatorEEE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink8protocol6Binary10fromBase64ERKN3WTF6StringEPb: argument 0"}
!19 = distinct !{!19, !"_ZN5blink8protocol6Binary10fromBase64ERKN3WTF6StringEPb"}
