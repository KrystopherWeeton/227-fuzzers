; ModuleID = '../../third_party/libvpx/source/libvpx/vpx_scale/vpx_scale_rtcd.c'
source_filename = "../../third_party/libvpx/source/libvpx/vpx_scale/vpx_scale_rtcd.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@once.lock = internal global i32 0, align 4
@.str = private unnamed_addr constant [14 x i8] c"VPX_SIMD_CAPS\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"VPX_SIMD_CAPS_MASK\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @vpx_scale_rtcd() local_unnamed_addr #0 {
  %1 = tail call i32 @pthread_once(i32* nonnull @once.lock, void ()* nonnull @setup_rtcd_internal) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @setup_rtcd_internal() #0 {
  %1 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #4
  %2 = icmp eq i8* %1, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = load i8, i8* %1, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 0) #4
  br label %39

8:                                                ; preds = %3, %0
  %9 = tail call i8* @getenv(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #4
  %10 = icmp eq i8* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = load i8, i8* %9, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call i64 @strtoul(i8* nocapture nonnull %9, i8** null, i32 0) #4
  br label %16

16:                                               ; preds = %14, %11, %8
  %17 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid           \0A\09", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0, i32 0) #4, !srcloc !2
  %18 = extractvalue { i32, i32, i32, i32 } %17, 0
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %39, label %20

20:                                               ; preds = %16
  %21 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid           \0A\09", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 1, i32 0) #4, !srcloc !3
  %22 = extractvalue { i32, i32, i32, i32 } %21, 2
  %23 = and i32 %22, 402653184
  %24 = icmp eq i32 %23, 402653184
  br i1 %24, label %25, label %39

25:                                               ; preds = %20
  %26 = tail call { i32, i32 } asm sideeffect ".byte 0x0f, 0x01, 0xd0\0A", "={ax},={dx},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0) #4, !srcloc !4
  %27 = extractvalue { i32, i32 } %26, 0
  %28 = and i32 %27, 6
  %29 = icmp eq i32 %28, 6
  %30 = icmp ugt i32 %18, 6
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %39

32:                                               ; preds = %25
  %33 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid           \0A\09", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 7, i32 0) #4, !srcloc !5
  %34 = extractvalue { i32, i32, i32, i32 } %33, 1
  %35 = and i32 %34, -805109760
  %36 = icmp eq i32 %35, -805109760
  br i1 %36, label %37, label %39

37:                                               ; preds = %32
  %38 = tail call { i32, i32 } asm sideeffect ".byte 0x0f, 0x01, 0xd0\0A", "={ax},={dx},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0) #4, !srcloc !4
  br label %39

39:                                               ; preds = %6, %16, %20, %25, %32, %37
  ret void
}

declare i32 @pthread_once(i32*, void ()*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @strtoul(i8* readonly, i8** nocapture, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2147202515, i32 -2147202496}
!3 = !{i32 -2147202294, i32 -2147202275}
!4 = !{i32 23429}
!5 = !{i32 -2147201889, i32 -2147201870}
