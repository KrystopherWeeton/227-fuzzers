; ModuleID = '../../storage/browser/file_system/quota/open_file_handle.cc'
source_filename = "../../storage/browser/file_system/quota/open_file_handle.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.storage::OpenFileHandle" = type <{ %class.scoped_refptr, %class.scoped_refptr.8, %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%class.scoped_refptr = type { %"class.storage::QuotaReservation"* }
%"class.storage::QuotaReservation" = type { i32 (...)**, %"class.base::RefCounted", i8, i8, i64, %class.scoped_refptr.0, %"class.base::SequenceCheckerDoNothing", %"class.base::WeakPtrFactory" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.0 = type { %"class.storage::QuotaReservationBuffer"* }
%"class.storage::QuotaReservationBuffer" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.scoped_refptr.8 = type { %"class.storage::OpenFileHandleContext"* }
%"class.storage::OpenFileHandleContext" = type <{ i32 (...)**, %"class.base::RefCounted.9", [4 x i8], i64, i64, i64, %"class.base::FilePath", %class.scoped_refptr.0, %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::RefCounted.9" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }

@_ZN7storage14OpenFileHandleD1Ev = hidden unnamed_addr alias void (%"class.storage::OpenFileHandle"*), void (%"class.storage::OpenFileHandle"*)* @_ZN7storage14OpenFileHandleD2Ev
@_ZN7storage14OpenFileHandleC1EPNS_16QuotaReservationEPNS_21OpenFileHandleContextE = hidden unnamed_addr alias void (%"class.storage::OpenFileHandle"*, %"class.storage::QuotaReservation"*, %"class.storage::OpenFileHandleContext"*), void (%"class.storage::OpenFileHandle"*, %"class.storage::QuotaReservation"*, %"class.storage::OpenFileHandleContext"*)* @_ZN7storage14OpenFileHandleC2EPNS_16QuotaReservationEPNS_21OpenFileHandleContextE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage14OpenFileHandleD2Ev(%"class.storage::OpenFileHandle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.storage::OpenFileHandleContext"*, %"class.storage::OpenFileHandleContext"** %2, align 8
  %4 = icmp eq %"class.storage::OpenFileHandleContext"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCounted.9", %"class.base::RefCounted.9"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #3
  %8 = getelementptr inbounds %"class.base::RefCounted.9", %"class.base::RefCounted.9"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.9", %"class.base::RefCounted.9"* %6, i64 -2
  %13 = bitcast %"class.base::RefCounted.9"* %12 to %"class.storage::OpenFileHandleContext"*
  %14 = bitcast %"class.base::RefCounted.9"* %12 to void (%"class.storage::OpenFileHandleContext"*)***
  %15 = load void (%"class.storage::OpenFileHandleContext"*)**, void (%"class.storage::OpenFileHandleContext"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.storage::OpenFileHandleContext"*)*, void (%"class.storage::OpenFileHandleContext"*)** %15, i64 1
  %17 = load void (%"class.storage::OpenFileHandleContext"*)*, void (%"class.storage::OpenFileHandleContext"*)** %16, align 8
  tail call void %17(%"class.storage::OpenFileHandleContext"* nonnull %13) #3
  br label %18

18:                                               ; preds = %1, %5, %11
  %19 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 0, i32 0
  %20 = load %"class.storage::QuotaReservation"*, %"class.storage::QuotaReservation"** %19, align 8
  %21 = icmp eq %"class.storage::QuotaReservation"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.storage::QuotaReservation", %"class.storage::QuotaReservation"* %20, i64 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #3
  %25 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 -2
  %30 = bitcast %"class.base::RefCounted"* %29 to %"class.storage::QuotaReservation"*
  %31 = bitcast %"class.base::RefCounted"* %29 to void (%"class.storage::QuotaReservation"*)***
  %32 = load void (%"class.storage::QuotaReservation"*)**, void (%"class.storage::QuotaReservation"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.storage::QuotaReservation"*)*, void (%"class.storage::QuotaReservation"*)** %32, i64 1
  %34 = load void (%"class.storage::QuotaReservation"*)*, void (%"class.storage::QuotaReservation"*)** %33, align 8
  tail call void %34(%"class.storage::QuotaReservation"* nonnull %30) #3
  br label %35

35:                                               ; preds = %18, %22, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage14OpenFileHandle22UpdateMaxWrittenOffsetEl(%"class.storage::OpenFileHandle"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.storage::OpenFileHandleContext"*, %"class.storage::OpenFileHandleContext"** %3, align 8
  %5 = tail call i64 @_ZN7storage21OpenFileHandleContext22UpdateMaxWrittenOffsetEl(%"class.storage::OpenFileHandleContext"* %4, i64 %1) #3
  %6 = icmp sgt i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.storage::QuotaReservation"*, %"class.storage::QuotaReservation"** %8, align 8
  tail call void @_ZN7storage16QuotaReservation18ConsumeReservationEl(%"class.storage::QuotaReservation"* %9, i64 %5) #3
  br label %10

10:                                               ; preds = %7, %2
  ret void
}

declare i64 @_ZN7storage21OpenFileHandleContext22UpdateMaxWrittenOffsetEl(%"class.storage::OpenFileHandleContext"*, i64) local_unnamed_addr #1

declare void @_ZN7storage16QuotaReservation18ConsumeReservationEl(%"class.storage::QuotaReservation"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage14OpenFileHandle24AddAppendModeWriteAmountEl(%"class.storage::OpenFileHandle"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.storage::OpenFileHandleContext"*, %"class.storage::OpenFileHandleContext"** %5, align 8
  tail call void @_ZN7storage21OpenFileHandleContext24AddAppendModeWriteAmountEl(%"class.storage::OpenFileHandleContext"* %6, i64 %1) #3
  %7 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.storage::QuotaReservation"*, %"class.storage::QuotaReservation"** %7, align 8
  tail call void @_ZN7storage16QuotaReservation18ConsumeReservationEl(%"class.storage::QuotaReservation"* %8, i64 %1) #3
  br label %9

9:                                                ; preds = %2, %4
  ret void
}

declare void @_ZN7storage21OpenFileHandleContext24AddAppendModeWriteAmountEl(%"class.storage::OpenFileHandleContext"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7storage14OpenFileHandle20GetEstimatedFileSizeEv(%"class.storage::OpenFileHandle"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.storage::OpenFileHandleContext"*, %"class.storage::OpenFileHandleContext"** %2, align 8
  %4 = tail call i64 @_ZNK7storage21OpenFileHandleContext20GetEstimatedFileSizeEv(%"class.storage::OpenFileHandleContext"* %3) #3
  ret i64 %4
}

declare i64 @_ZNK7storage21OpenFileHandleContext20GetEstimatedFileSizeEv(%"class.storage::OpenFileHandleContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK7storage14OpenFileHandle19GetMaxWrittenOffsetEv(%"class.storage::OpenFileHandle"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.storage::OpenFileHandleContext"*, %"class.storage::OpenFileHandleContext"** %2, align 8
  %4 = tail call i64 @_ZNK7storage21OpenFileHandleContext19GetMaxWrittenOffsetEv(%"class.storage::OpenFileHandleContext"* %3) #3
  ret i64 %4
}

declare i64 @_ZNK7storage21OpenFileHandleContext19GetMaxWrittenOffsetEv(%"class.storage::OpenFileHandleContext"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.base::FilePath"* @_ZNK7storage14OpenFileHandle13platform_pathEv(%"class.storage::OpenFileHandle"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.storage::OpenFileHandleContext"*, %"class.storage::OpenFileHandleContext"** %2, align 8
  %4 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %3, i64 0, i32 6
  ret %"class.base::FilePath"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage14OpenFileHandleC2EPNS_16QuotaReservationEPNS_21OpenFileHandleContextE(%"class.storage::OpenFileHandle"* nocapture, %"class.storage::QuotaReservation"*, %"class.storage::OpenFileHandleContext"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 0, i32 0
  store %"class.storage::QuotaReservation"* %1, %"class.storage::QuotaReservation"** %4, align 8
  %5 = icmp eq %"class.storage::QuotaReservation"* %1, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.storage::QuotaReservation", %"class.storage::QuotaReservation"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #3
  br label %8

8:                                                ; preds = %3, %6
  %9 = getelementptr inbounds %"class.storage::OpenFileHandle", %"class.storage::OpenFileHandle"* %0, i64 0, i32 1, i32 0
  store %"class.storage::OpenFileHandleContext"* %2, %"class.storage::OpenFileHandleContext"** %9, align 8
  %10 = icmp eq %"class.storage::OpenFileHandleContext"* %2, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %2, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %12) #3
  br label %13

13:                                               ; preds = %8, %11
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
