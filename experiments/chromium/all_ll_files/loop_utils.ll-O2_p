; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_utils.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_utils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spvtools::opt::(anonymous namespace)::LCSSARewriter" = type { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::DominatorTree"*, %"class.std::__1::unordered_set.976"*, i32, [4 x i8], %"class.std::__1::unordered_map.304" }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::DominatorTree" = type <{ %"class.std::__1::vector.1019", %"class.std::__1::map.1026", i8, [7 x i8] }>
%"class.std::__1::vector.1019" = type { %"class.std::__1::__vector_base.1020" }
%"class.std::__1::__vector_base.1020" = type { %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"**, %"class.std::__1::__compressed_pair.1021" }
%"struct.spvtools::opt::DominatorTreeNode" = type { %"class.spvtools::opt::BasicBlock"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::vector.1019", i32, i32 }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::map.1026" = type { %"class.std::__1::__tree.1027" }
%"class.std::__1::__tree.1027" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1028", %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set.976" = type { %"class.std::__1::__hash_table.977" }
%"class.std::__1::__hash_table.977" = type <{ %"class.std::__1::unique_ptr.978", %"class.std::__1::__compressed_pair.988", %"class.std::__1::__compressed_pair.993", %"class.std::__1::__compressed_pair.997", [4 x i8] }>
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980", %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"struct.std::__1::__hash_node_base.981"** }
%"struct.std::__1::__hash_node_base.981" = type { %"struct.std::__1::__hash_node_base.981"* }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.std::__1::__bucket_list_deallocator.983" }
%"class.std::__1::__bucket_list_deallocator.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"struct.std::__1::__hash_node_base.981" }
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter" = type { %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_set.1231" }
%"class.std::__1::unordered_set.1231" = type { %"class.std::__1::__hash_table.1232" }
%"class.std::__1::__hash_table.1232" = type <{ %"class.std::__1::unique_ptr.1233", %"class.std::__1::__compressed_pair.1243", %"class.std::__1::__compressed_pair.1248", %"class.std::__1::__compressed_pair.1250", [4 x i8] }>
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235", %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.std::__1::__hash_node_base.1236"** }
%"struct.std::__1::__hash_node_base.1236" = type { %"struct.std::__1::__hash_node_base.1236"* }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.std::__1::__bucket_list_deallocator.1238" }
%"class.std::__1::__bucket_list_deallocator.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1243" = type { %"struct.std::__1::__compressed_pair_elem.1244" }
%"struct.std::__1::__compressed_pair_elem.1244" = type { %"struct.std::__1::__hash_node_base.1236" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::LoopUtils" = type { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::LoopDescriptor" = type { %"class.std::__1::vector.910", %"class.spvtools::opt::Loop", %"class.std::__1::unordered_map.939", %"class.std::__1::vector.963" }
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.spvtools::opt::Loop"** }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.910", %"class.std::__1::unordered_set.917", i8, [7 x i8] }>
%"class.std::__1::unordered_set.917" = type { %"class.std::__1::__hash_table.918" }
%"class.std::__1::__hash_table.918" = type <{ %"class.std::__1::unique_ptr.919", %"class.std::__1::__compressed_pair.929", %"class.std::__1::__compressed_pair.934", %"class.std::__1::__compressed_pair.936", [4 x i8] }>
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921", %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::__hash_node_base.922"** }
%"struct.std::__1::__hash_node_base.922" = type { %"struct.std::__1::__hash_node_base.922"* }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.std::__1::__bucket_list_deallocator.924" }
%"class.std::__1::__bucket_list_deallocator.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::__hash_node_base.922" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.939" = type { %"class.std::__1::__hash_table.940" }
%"class.std::__1::__hash_table.940" = type <{ %"class.std::__1::unique_ptr.941", %"class.std::__1::__compressed_pair.951", %"class.std::__1::__compressed_pair.956", %"class.std::__1::__compressed_pair.959", [4 x i8] }>
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943", %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::__hash_node_base.944"** }
%"struct.std::__1::__hash_node_base.944" = type { %"struct.std::__1::__hash_node_base.944"* }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.std::__1::__bucket_list_deallocator.946" }
%"class.std::__1::__bucket_list_deallocator.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::__hash_node_base.944" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.971" }
%"struct.std::__1::pair" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::unique_ptr.965" }
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.std::__1::pair"* }
%"class.std::__1::function.1200" = type { %"class.std::__1::__function::__policy_func.1204" }
%"class.std::__1::__function::__policy_func.1204" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1205", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1205" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::tuple.1182" = type { %"struct.std::__1::__tuple_impl.1183" }
%"struct.std::__1::__tuple_impl.1183" = type { %"class.std::__1::__tuple_leaf.1184" }
%"class.std::__1::__tuple_leaf.1184" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::tuple.1172" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::function.1005" = type { %"class.std::__1::__function::__policy_func.1009" }
%"class.std::__1::__function::__policy_func.1009" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1010", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1010" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.1012" = type { %"class.std::__1::__function::__policy_func.1016" }
%"class.std::__1::__function::__policy_func.1016" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1017", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1017" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"struct.std::__1::default_delete.44" = type { i8 }
%"struct.std::__1::__hash_node.1169" = type <{ %"struct.std::__1::__hash_node_base.922", i64, i32, [4 x i8] }>
%"struct.std::__1::__hash_node.1259" = type { %"struct.std::__1::__hash_node_base.981", i64, %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::DominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.spvtools::opt::DominatorAnalysisBase" = type { %"class.spvtools::opt::DominatorTree" }
%"class.std::__1::function.1067" = type { %"class.std::__1::__function::__policy_func.1071" }
%"class.std::__1::__function::__policy_func.1071" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1072", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1072" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* }
%"struct.std::__1::__hash_node.1296" = type { %"struct.std::__1::__hash_node_base.1236", i64, %"class.spvtools::opt::Instruction"* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"struct.spvtools::opt::LoopUtils::LoopCloningResult" = type { %"class.std::__1::unordered_map.1035", %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.328", %"class.std::__1::vector.38" }
%"class.std::__1::unordered_map.1035" = type { %"class.std::__1::__hash_table.1036" }
%"class.std::__1::__hash_table.1036" = type <{ %"class.std::__1::unique_ptr.1037", %"class.std::__1::__compressed_pair.1047", %"class.std::__1::__compressed_pair.1052", %"class.std::__1::__compressed_pair.1055", [4 x i8] }>
%"class.std::__1::unique_ptr.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039", %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"struct.std::__1::__hash_node_base.1040"** }
%"struct.std::__1::__hash_node_base.1040" = type { %"struct.std::__1::__hash_node_base.1040"* }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.std::__1::__bucket_list_deallocator.1042" }
%"class.std::__1::__bucket_list_deallocator.1042" = type { %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"struct.std::__1::__hash_node_base.1040" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.1059" = type { %"class.std::__1::__vector_base.1060" }
%"class.std::__1::__vector_base.1060" = type { %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"**, %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::tuple.1363" = type { %"struct.std::__1::__tuple_impl.1364" }
%"struct.std::__1::__tuple_impl.1364" = type { %"class.std::__1::__tuple_leaf.1365" }
%"class.std::__1::__tuple_leaf.1365" = type { i32* }
%"class.std::__1::tuple.1382" = type { %"struct.std::__1::__tuple_impl.1383" }
%"struct.std::__1::__tuple_impl.1383" = type { %"class.std::__1::__tuple_leaf.1384" }
%"class.std::__1::__tuple_leaf.1384" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::function.1304" = type { %"class.std::__1::__function::__policy_func.1308" }
%"class.std::__1::__function::__policy_func.1308" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1309", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1309" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"struct.std::__1::pair.1371" = type { i32, i32 }
%"class.std::__1::tuple.1416" = type { %"struct.std::__1::__tuple_impl.1417" }
%"struct.std::__1::__tuple_impl.1417" = type { %"class.std::__1::__tuple_leaf.1418" }
%"class.std::__1::__tuple_leaf.1418" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::tuple.1404" = type { %"struct.std::__1::__tuple_impl.1405" }
%"struct.std::__1::__tuple_impl.1405" = type { %"class.std::__1::__tuple_leaf.1406" }
%"class.std::__1::__tuple_leaf.1406" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::unordered_map.1077" = type { %"class.std::__1::__hash_table.1078" }
%"class.std::__1::__hash_table.1078" = type <{ %"class.std::__1::unique_ptr.1079", %"class.std::__1::__compressed_pair.1089", %"class.std::__1::__compressed_pair.1094", %"class.std::__1::__compressed_pair.1099", [4 x i8] }>
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081", %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"struct.std::__1::__hash_node_base.1082"** }
%"struct.std::__1::__hash_node_base.1082" = type { %"struct.std::__1::__hash_node_base.1082"* }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.std::__1::__bucket_list_deallocator.1084" }
%"class.std::__1::__bucket_list_deallocator.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"struct.std::__1::__hash_node_base.1082" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::IteratorRange" = type { %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator" }
%"class.spvtools::opt::TreeDFIterator" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1111" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"**, %"class.std::__1::__compressed_pair.1106" }
%"struct.std::__1::pair.1105" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::__wrap_iter.1148" }
%"class.std::__1::__wrap_iter.1148" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::pair.1105"** }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.spvtools::opt::CodeMetrics" = type { %"class.std::__1::unordered_map.1117", i64 }
%"class.std::__1::unordered_map.1117" = type { %"class.std::__1::__hash_table.1118" }
%"class.std::__1::__hash_table.1118" = type <{ %"class.std::__1::unique_ptr.1119", %"class.std::__1::__compressed_pair.1129", %"class.std::__1::__compressed_pair.1134", %"class.std::__1::__compressed_pair.1137", [4 x i8] }>
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121", %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"struct.std::__1::__hash_node_base.1122"** }
%"struct.std::__1::__hash_node_base.1122" = type { %"struct.std::__1::__hash_node_base.1122"* }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.std::__1::__bucket_list_deallocator.1124" }
%"class.std::__1::__bucket_list_deallocator.1124" = type { %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"struct.std::__1::__hash_node_base.1122" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::function.1320" = type { %"class.std::__1::__function::__policy_func.1324" }
%"class.std::__1::__function::__policy_func.1324" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1325", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1325" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.1141" = type { %"class.std::__1::__function::__policy_func.1145" }
%"class.std::__1::__function::__policy_func.1145" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1146", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1146" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1158" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.1158" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__function::__default_alloc_func.1258" = type { %class.anon.1253 }
%class.anon.1253 = type { %"class.std::__1::unordered_set.917"*, %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"*, %"class.std::__1::unordered_set.976"*, %"class.spvtools::opt::IRContext"* }
%"struct.std::__1::__split_buffer.1332" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.1333" }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.std::__1::allocator.49"* }
%"class.std::__1::allocator.49" = type { i8 }
%"class.std::__1::unique_ptr.1225" = type { %"class.std::__1::__compressed_pair.1226" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227", %"struct.std::__1::__compressed_pair_elem.1228" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"struct.std::__1::__hash_node.1169"* }
%"struct.std::__1::__compressed_pair_elem.1228" = type { %"class.std::__1::__hash_node_destructor.1229" }
%"class.std::__1::__hash_node_destructor.1229" = type <{ %"class.std::__1::allocator.932"*, i8, [7 x i8] }>
%"class.std::__1::allocator.932" = type { i8 }
%"struct.std::__1::__split_buffer.1335" = type { %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"**, %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1107", %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.std::__1::allocator.1109"* }
%"class.std::__1::allocator.1109" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1354" = type { %class.anon.1018 }
%class.anon.1018 = type { %"class.spvtools::opt::InstructionBuilder"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::LoopUtils"* }
%"class.std::__1::__function::__default_alloc_func.1357" = type { %class.anon.1066 }
%class.anon.1066 = type { i32, i32 }

$_ZN8spvtools3opt18InstructionBuilder9AddBranchEj = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEj = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_10BasicBlock11ForEachInstERKNS_8functionIFvS6_EEEbEUlS6_E_S7_EEEEbPKNS0_16__policy_storageES6_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_ = comdat any

$_ZN8spvtools3opt14TreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt11Instruction15RemoveInOperandEj = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJRPS4_EEEvDpOT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEEC2ERKS4_S7_ = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPKNS5_11InstructionEEEEbEUlSA_E_FbSA_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@__const._ZN8spvtools3opt9LoopUtils17MakeLoopClosedSSAEv.lcssa_rewriter = private unnamed_addr constant %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter" { %"class.spvtools::opt::IRContext"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::IRContext"*), %"class.spvtools::opt::CFG"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::CFG"*), %"class.spvtools::opt::DominatorTree"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::DominatorTree"*), %"class.std::__1::unordered_set.976"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unordered_set.976"*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unordered_map.304" { %"class.std::__1::__hash_table.305" <{ %"class.std::__1::unique_ptr.306" { %"class.std::__1::__compressed_pair.307" { %"struct.std::__1::__compressed_pair_elem.308" { %"struct.std::__1::__hash_node_base.309"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.309"**) }, %"struct.std::__1::__compressed_pair_elem.310" { %"class.std::__1::__bucket_list_deallocator.311" { %"class.std::__1::__compressed_pair.312" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.316" { %"struct.std::__1::__compressed_pair_elem.317" { %"struct.std::__1::__hash_node_base.309" { %"struct.std::__1::__hash_node_base.309"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.309"*) } } }, %"class.std::__1::__compressed_pair.321" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.324" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@__const._ZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS0_9IRContextEPNS0_8FunctionERKNSt3__113unordered_setIjNS6_4hashIjEENS6_8equal_toIjEENS6_9allocatorIjEEEERKNS7_IPNS0_10BasicBlockENS8_ISI_EENSA_ISI_EENSC_ISI_EEEEPNS1_13LCSSARewriterE.rewriter = private unnamed_addr constant %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter" { %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*), %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.65" { %"class.std::__1::__compressed_pair.66" { %"struct.std::__1::__compressed_pair_elem.67" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.68" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.74" { %"struct.std::__1::__compressed_pair_elem.75" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.79" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_set.1231" { %"class.std::__1::__hash_table.1232" <{ %"class.std::__1::unique_ptr.1233" { %"class.std::__1::__compressed_pair.1234" { %"struct.std::__1::__compressed_pair_elem.1235" { %"struct.std::__1::__hash_node_base.1236"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1236"**) }, %"struct.std::__1::__compressed_pair_elem.1237" { %"class.std::__1::__bucket_list_deallocator.1238" { %"class.std::__1::__compressed_pair.1239" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.1243" { %"struct.std::__1::__compressed_pair_elem.1244" { %"struct.std::__1::__hash_node_base.1236" { %"struct.std::__1::__hash_node_base.1236"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.1236"*) } } }, %"class.std::__1::__compressed_pair.1248" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.1250" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter11UseRewriter18GetOrBuildIncomingEjEUlPNS5_11InstructionEE_FbSA_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS5_9IRContextEPNS5_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSB_IPNS5_10BasicBlockENSC_ISM_EENSE_ISM_EENSG_ISM_EEEEPNS6_13LCSSARewriterEEUlPNS5_11InstructionEjE_FvSW_jEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_ = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS5_9IRContextEPNS5_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSB_IPNS5_10BasicBlockENSC_ISM_EENSE_ISM_EENSG_ISM_EEEEPNS6_13LCSSARewriterEEUlPNS5_11InstructionEjE_FvSW_jEEEEEPvPKv, void (i8*)* @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS5_9IRContextEPNS5_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSB_IPNS5_10BasicBlockENSC_ISM_EENSE_ISM_EENSG_ISM_EEEEPNS6_13LCSSARewriterEEUlPNS5_11InstructionEjE_FvSW_jEEEEEvPv, i8 0, %"class.std::type_info"* null }, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPKNS5_11InstructionEEEEbEUlSA_E_FbSA_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_1FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_2FvPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_2FvPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS6_17LoopCloningResultEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS6_17LoopCloningResultEE3$_4FvPNS5_11InstructionEjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS6_17LoopCloningResultEE3$_5FvPNS5_11InstructionEjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt9LoopUtils9CloneLoopEPNS6_17LoopCloningResultERKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISB_EEEEE3$_6FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11CodeMetrics7AnalyzeERKNS5_4LoopEE3$_7FvPKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEv(%"class.spvtools::opt::LoopUtils"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.1200", align 8
  %3 = alloca %"class.std::__1::tuple.1182", align 8
  %4 = alloca %"class.std::__1::tuple.1172", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.1172", align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::unique_ptr.40", align 8
  %10 = alloca %"class.std::__1::tuple", align 8
  %11 = alloca %"class.std::__1::tuple.1172", align 1
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %"class.std::__1::unordered_set.917", align 8
  %15 = alloca %"class.std::__1::unordered_set.976", align 8
  %16 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %17 = alloca %"class.std::__1::vector", align 8
  %18 = alloca %"class.std::__1::function.1005", align 8
  %19 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %20 = alloca %"class.std::__1::function.1012", align 8
  %21 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 2
  %23 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %23, i64 0, i32 1
  %25 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %25, i64 0, i32 0
  %27 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 0
  %29 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %28, align 8
  %30 = tail call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %29, %"class.spvtools::opt::Function"* %27) #11
  %31 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %28, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 11
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %55

36:                                               ; preds = %1
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %37, align 8
  %39 = tail call i8* @_Znwm(i64 400) #12
  %40 = bitcast i8* %39 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %40, %"class.spvtools::opt::Module"* %38) #11
  %41 = ptrtoint i8* %39 to i64
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 15
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %43, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.273"* %42 to i64*
  store i64 %41, i64* %45, align 8
  %46 = icmp eq %"class.spvtools::opt::CFG"* %44, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %36
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %44) #11
  %48 = bitcast %"class.spvtools::opt::CFG"* %44 to i8*
  tail call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %47, %36
  %50 = load i32, i32* %32, align 8
  %51 = or i32 %50, 16
  store i32 %51, i32* %32, align 8
  %52 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %28, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %52, i64 0, i32 11
  %54 = load i32, i32* %53, align 8
  br label %55

55:                                               ; preds = %1, %49
  %56 = phi i32 [ %33, %1 ], [ %54, %49 ]
  %57 = phi %"class.spvtools::opt::IRContext"* [ %31, %1 ], [ %52, %49 ]
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 15, i32 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %57, i64 0, i32 11
  %61 = and i32 %56, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %87

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %64, align 8
  %66 = tail call i8* @_Znwm(i64 104) #12
  %67 = bitcast i8* %66 to %"class.spvtools::opt::analysis::DefUseManager"*
  %68 = getelementptr inbounds i8, i8* %66, i64 32
  %69 = bitcast i8* %68 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %69, align 4
  %70 = getelementptr inbounds i8, i8* %66, i64 48
  %71 = getelementptr inbounds i8, i8* %66, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #11
  %72 = bitcast i8* %71 to i8**
  store i8* %70, i8** %72, align 8
  %73 = getelementptr inbounds i8, i8* %66, i64 64
  %74 = getelementptr inbounds i8, i8* %66, i64 96
  %75 = bitcast i8* %74 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %75, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %67, %"class.spvtools::opt::Module"* %65) #11
  %76 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %57, i64 0, i32 6
  %77 = ptrtoint i8* %66 to i64
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %76, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %78, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.62"* %76 to i64*
  store i64 %77, i64* %80, align 8
  %81 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %79, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %63
  %83 = bitcast %"class.std::__1::unique_ptr.62"* %76 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %83, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %79) #11
  br label %84

84:                                               ; preds = %82, %63
  %85 = load i32, i32* %60, align 8
  %86 = or i32 %85, 1
  store i32 %86, i32* %60, align 8
  br label %87

87:                                               ; preds = %55, %84
  %88 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %57, i64 0, i32 6, i32 0, i32 0, i32 0
  %89 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %88, align 8
  %90 = bitcast %"class.std::__1::unordered_set.917"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %90) #11
  %91 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %14, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %14, i64 0, i32 0, i32 4, i64 0
  %94 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %14, i64 0, i32 0, i32 3
  %95 = bitcast %"class.std::__1::__compressed_pair.936"* %94 to i32*
  %96 = bitcast i8* %93 to i32*
  store i32 -1431655766, i32* %96, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %95, align 8
  %97 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %22, align 8
  call void @_ZNK8spvtools3opt4Loop13GetExitBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"* %97, %"class.std::__1::unordered_set.917"* nonnull %14) #11
  %98 = bitcast %"class.std::__1::unordered_set.976"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %98) #11
  %99 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %15, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %15, i64 0, i32 0, i32 4, i64 0
  %103 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %15, i64 0, i32 0, i32 3
  %104 = bitcast %"class.std::__1::__compressed_pair.997"* %103 to i32*
  %105 = bitcast i8* %102 to i32*
  store i32 -1431655766, i32* %105, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %104, align 8
  %106 = bitcast %"struct.std::__1::__hash_node_base.922"** %92 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %821, label %109

109:                                              ; preds = %87
  %110 = bitcast %"class.spvtools::opt::BasicBlock"** %16 to i8*
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %59, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %59, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %59, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %59, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %27, i64 0, i32 3
  %116 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %115, i64 0, i32 0, i32 0
  %117 = bitcast %"class.std::__1::vector.38"* %115 to i64*
  %118 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %27, i64 0, i32 3, i32 0, i32 1
  %119 = bitcast %"class.std::__1::vector"* %17 to i8*
  %120 = bitcast %"class.std::__1::unique_ptr.40"* %9 to i8*
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %9, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr.40"* %9 to i8**
  %123 = bitcast %"class.std::__1::unique_ptr.40"* %9 to %"struct.std::__1::default_delete.44"*
  %124 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 1
  %126 = bitcast %"class.std::__1::vector"* %17 to i8**
  %127 = bitcast %"class.std::__1::function.1005"* %18 to i8*
  %128 = bitcast %"class.spvtools::opt::BasicBlock"** %16 to i64*
  %129 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %18, i64 0, i32 0, i32 1, i32 0
  %130 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %18, i64 0, i32 0, i32 2
  %131 = bitcast %"class.std::__1::function.1005"* %18 to i64*
  %132 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %18, i64 0, i32 0, i32 0, i32 1
  %133 = bitcast [8 x i8]* %132 to %"class.spvtools::opt::BasicBlock"**
  %134 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %18, i64 0, i32 0, i32 0, i32 0
  %135 = bitcast i32* %12 to i8*
  %136 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %59, i64 0, i32 5, i32 0
  %137 = bitcast %"class.std::__1::tuple"* %10 to i8*
  %138 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %11, i64 0, i32 0
  %140 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  %141 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  %142 = bitcast %"class.std::__1::tuple.1182"* %3 to i8*
  %143 = getelementptr inbounds %"class.std::__1::tuple.1182", %"class.std::__1::tuple.1182"* %3, i64 0, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %4, i64 0, i32 0
  %145 = bitcast %"class.spvtools::opt::InstructionBuilder"* %19 to i8*
  %146 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %19, i64 0, i32 0
  %147 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %19, i64 0, i32 1
  %148 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %19, i64 0, i32 3
  %149 = bitcast %"class.spvtools::opt::LoopUtils"* %0 to i64*
  %150 = bitcast %"class.spvtools::opt::InstructionBuilder"* %19 to i64*
  %151 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %19, i64 0, i32 2
  %152 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %151 to i64*
  %153 = bitcast %"class.std::__1::function.1012"* %20 to i8*
  %154 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %20, i64 0, i32 0, i32 1, i32 0
  %155 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %20, i64 0, i32 0, i32 2
  %156 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %20, i64 0, i32 0, i32 0, i32 0
  %157 = bitcast %"class.std::__1::function.1200"* %2 to i8*
  %158 = ptrtoint %"class.std::__1::function.1012"* %20 to i64
  %159 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %2, i64 0, i32 0, i32 1, i32 0
  %160 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %2, i64 0, i32 0, i32 2
  %161 = bitcast %"class.std::__1::function.1200"* %2 to i64*
  %162 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %2, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %2, i64 0, i32 0, i32 0, i32 0
  %164 = bitcast i32* %8 to i8*
  %165 = bitcast %"class.std::__1::tuple"* %6 to i8*
  %166 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %7, i64 0, i32 0
  %168 = bitcast %"class.spvtools::opt::BasicBlock"** %21 to i8*
  %169 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %15, i64 0, i32 0
  %170 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %171 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = bitcast i32* %13 to i8*
  %173 = bitcast %"class.spvtools::opt::InstructionBuilder"* %19 to i8*
  br label %177

174:                                              ; preds = %805
  %175 = load i64, i64* %101, align 8
  %176 = icmp eq i64 %175, 1
  br i1 %176, label %810, label %816

177:                                              ; preds = %109, %805
  %178 = phi i64 [ %107, %109 ], [ %808, %805 ]
  %179 = phi i8 [ 0, %109 ], [ %806, %805 ]
  %180 = inttoptr i64 %178 to %"struct.std::__1::__hash_node.1169"*
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node.1169", %"struct.std::__1::__hash_node.1169"* %180, i64 0, i32 2
  %182 = load i32, i32* %181, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #11
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %16, align 8
  %183 = zext i32 %182 to i64
  %184 = load i64, i64* %111, align 8
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %233, label %186

186:                                              ; preds = %177
  %187 = call i64 @llvm.ctpop.i64(i64 %184) #11, !range !2
  %188 = icmp ugt i64 %187, 1
  br i1 %188, label %192, label %189

189:                                              ; preds = %186
  %190 = add i64 %184, 4294967295
  %191 = and i64 %190, %183
  br label %196

192:                                              ; preds = %186
  %193 = icmp ugt i64 %184, %183
  br i1 %193, label %196, label %194

194:                                              ; preds = %192
  %195 = urem i64 %183, %184
  br label %196

196:                                              ; preds = %194, %192, %189
  %197 = phi i64 [ %191, %189 ], [ %195, %194 ], [ %183, %192 ]
  %198 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %112, align 8
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %198, i64 %197
  %200 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %199, align 8
  %201 = icmp eq %"struct.std::__1::__hash_node_base.333"* %200, null
  br i1 %201, label %233, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %200, i64 0, i32 0
  %204 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %203, align 8
  %205 = icmp eq %"struct.std::__1::__hash_node_base.333"* %204, null
  br i1 %205, label %233, label %206

206:                                              ; preds = %202
  %207 = add i64 %184, -1
  br label %208

208:                                              ; preds = %229, %206
  %209 = phi %"struct.std::__1::__hash_node_base.333"* [ %204, %206 ], [ %231, %229 ]
  %210 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %209, i64 1
  %211 = bitcast %"struct.std::__1::__hash_node_base.333"* %210 to i64*
  %212 = load i64, i64* %211, align 8
  %213 = icmp eq i64 %212, %183
  br i1 %213, label %224, label %214

214:                                              ; preds = %208
  br i1 %188, label %217, label %215

215:                                              ; preds = %214
  %216 = and i64 %212, %207
  br label %221

217:                                              ; preds = %214
  %218 = icmp ult i64 %212, %184
  br i1 %218, label %221, label %219

219:                                              ; preds = %217
  %220 = urem i64 %212, %184
  br label %221

221:                                              ; preds = %219, %217, %215
  %222 = phi i64 [ %216, %215 ], [ %220, %219 ], [ %212, %217 ]
  %223 = icmp eq i64 %222, %197
  br i1 %223, label %229, label %233

224:                                              ; preds = %208
  %225 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %209, i64 2
  %226 = bitcast %"struct.std::__1::__hash_node_base.333"* %225 to i32*
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, %182
  br i1 %228, label %234, label %229

229:                                              ; preds = %224, %221
  %230 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %209, i64 0, i32 0
  %231 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %230, align 8
  %232 = icmp eq %"struct.std::__1::__hash_node_base.333"* %231, null
  br i1 %232, label %233, label %208

233:                                              ; preds = %202, %196, %177, %229, %221
  call void @abort() #13
  unreachable

234:                                              ; preds = %224
  %235 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %209, i64 3
  %236 = bitcast %"struct.std::__1::__hash_node_base.333"* %235 to %"class.spvtools::opt::BasicBlock"**
  %237 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %236, align 8
  store %"class.spvtools::opt::BasicBlock"* %237, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %238 = load i64, i64* %113, align 8
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %287, label %240

240:                                              ; preds = %234
  %241 = call i64 @llvm.ctpop.i64(i64 %238) #11, !range !2
  %242 = icmp ugt i64 %241, 1
  br i1 %242, label %246, label %243

243:                                              ; preds = %240
  %244 = add i64 %238, 4294967295
  %245 = and i64 %244, %183
  br label %250

246:                                              ; preds = %240
  %247 = icmp ugt i64 %238, %183
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = urem i64 %183, %238
  br label %250

250:                                              ; preds = %248, %246, %243
  %251 = phi i64 [ %245, %243 ], [ %249, %248 ], [ %183, %246 ]
  %252 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %114, align 8
  %253 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %252, i64 %251
  %254 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %253, align 8
  %255 = icmp eq %"struct.std::__1::__hash_node_base.309"* %254, null
  br i1 %255, label %287, label %256

256:                                              ; preds = %250
  %257 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %254, i64 0, i32 0
  %258 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %257, align 8
  %259 = icmp eq %"struct.std::__1::__hash_node_base.309"* %258, null
  br i1 %259, label %287, label %260

260:                                              ; preds = %256
  %261 = add i64 %238, -1
  br label %262

262:                                              ; preds = %283, %260
  %263 = phi %"struct.std::__1::__hash_node_base.309"* [ %258, %260 ], [ %285, %283 ]
  %264 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %263, i64 1
  %265 = bitcast %"struct.std::__1::__hash_node_base.309"* %264 to i64*
  %266 = load i64, i64* %265, align 8
  %267 = icmp eq i64 %266, %183
  br i1 %267, label %278, label %268

268:                                              ; preds = %262
  br i1 %242, label %271, label %269

269:                                              ; preds = %268
  %270 = and i64 %266, %261
  br label %275

271:                                              ; preds = %268
  %272 = icmp ult i64 %266, %238
  br i1 %272, label %275, label %273

273:                                              ; preds = %271
  %274 = urem i64 %266, %238
  br label %275

275:                                              ; preds = %273, %271, %269
  %276 = phi i64 [ %270, %269 ], [ %274, %273 ], [ %266, %271 ]
  %277 = icmp eq i64 %276, %251
  br i1 %277, label %283, label %287

278:                                              ; preds = %262
  %279 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %263, i64 2
  %280 = bitcast %"struct.std::__1::__hash_node_base.309"* %279 to i32*
  %281 = load i32, i32* %280, align 4
  %282 = icmp eq i32 %281, %182
  br i1 %282, label %288, label %283

283:                                              ; preds = %278, %275
  %284 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %263, i64 0, i32 0
  %285 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %284, align 8
  %286 = icmp eq %"struct.std::__1::__hash_node_base.309"* %285, null
  br i1 %286, label %287, label %262

287:                                              ; preds = %256, %250, %234, %283, %275
  call void @abort() #13
  unreachable

288:                                              ; preds = %278
  %289 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %263, i64 3
  %290 = bitcast %"struct.std::__1::__hash_node_base.309"* %289 to i32**
  %291 = load i32*, i32** %290, align 8
  %292 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %263, i64 4
  %293 = bitcast %"struct.std::__1::__hash_node_base.309"* %292 to i32**
  %294 = load i32*, i32** %293, align 8
  %295 = icmp eq i32* %291, %294
  br i1 %295, label %355, label %296

296:                                              ; preds = %288
  %297 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %22, align 8
  %298 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %297, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %299 = load i64, i64* %298, align 8
  %300 = icmp eq i64 %299, 0
  %301 = call i64 @llvm.ctpop.i64(i64 %299) #11, !range !2
  %302 = icmp ugt i64 %301, 1
  %303 = add i64 %299, 4294967295
  %304 = add i64 %299, -1
  br i1 %300, label %357, label %305

305:                                              ; preds = %296
  %306 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %297, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %306, align 8
  br label %308

308:                                              ; preds = %305, %352
  %309 = phi i32* [ %353, %352 ], [ %291, %305 ]
  %310 = load i32, i32* %309, align 4
  %311 = zext i32 %310 to i64
  br i1 %302, label %314, label %312

312:                                              ; preds = %308
  %313 = and i64 %303, %311
  br label %318

314:                                              ; preds = %308
  %315 = icmp ugt i64 %299, %311
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = urem i64 %311, %299
  br label %318

318:                                              ; preds = %316, %314, %312
  %319 = phi i64 [ %313, %312 ], [ %317, %316 ], [ %311, %314 ]
  %320 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %307, i64 %319
  %321 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %320, align 8
  %322 = icmp eq %"struct.std::__1::__hash_node_base.922"* %321, null
  br i1 %322, label %357, label %323

323:                                              ; preds = %318
  %324 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %321, i64 0, i32 0
  %325 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %324, align 8
  %326 = icmp eq %"struct.std::__1::__hash_node_base.922"* %325, null
  br i1 %326, label %357, label %327

327:                                              ; preds = %323, %348
  %328 = phi %"struct.std::__1::__hash_node_base.922"* [ %350, %348 ], [ %325, %323 ]
  %329 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %328, i64 1
  %330 = bitcast %"struct.std::__1::__hash_node_base.922"* %329 to i64*
  %331 = load i64, i64* %330, align 8
  %332 = icmp eq i64 %331, %311
  br i1 %332, label %343, label %333

333:                                              ; preds = %327
  br i1 %302, label %336, label %334

334:                                              ; preds = %333
  %335 = and i64 %331, %304
  br label %340

336:                                              ; preds = %333
  %337 = icmp ult i64 %331, %299
  br i1 %337, label %340, label %338

338:                                              ; preds = %336
  %339 = urem i64 %331, %299
  br label %340

340:                                              ; preds = %338, %336, %334
  %341 = phi i64 [ %335, %334 ], [ %339, %338 ], [ %331, %336 ]
  %342 = icmp eq i64 %341, %319
  br i1 %342, label %348, label %357

343:                                              ; preds = %327
  %344 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %328, i64 2
  %345 = bitcast %"struct.std::__1::__hash_node_base.922"* %344 to i32*
  %346 = load i32, i32* %345, align 4
  %347 = icmp eq i32 %346, %310
  br i1 %347, label %352, label %348

348:                                              ; preds = %343, %340
  %349 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %328, i64 0, i32 0
  %350 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %349, align 8
  %351 = icmp eq %"struct.std::__1::__hash_node_base.922"* %350, null
  br i1 %351, label %357, label %327

352:                                              ; preds = %343
  %353 = getelementptr inbounds i32, i32* %309, i64 1
  %354 = icmp eq i32* %353, %294
  br i1 %354, label %355, label %308

355:                                              ; preds = %352, %288
  %356 = call { %"struct.std::__1::__hash_node_base.981"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.977"* nonnull %169, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %16, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %16) #11
  br label %805

357:                                              ; preds = %323, %318, %348, %340, %296
  %358 = load i64, i64* %117, align 8
  %359 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %118, align 8
  %360 = inttoptr i64 %358 to %"class.std::__1::unique_ptr.40"*
  %361 = icmp eq %"class.std::__1::unique_ptr.40"* %359, %360
  br i1 %361, label %374, label %362

362:                                              ; preds = %357, %368
  %363 = phi i64 [ %370, %368 ], [ %358, %357 ]
  %364 = inttoptr i64 %363 to %"class.std::__1::unique_ptr.40"*
  %365 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %364, i64 0, i32 0, i32 0, i32 0
  %366 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %365, align 8
  %367 = icmp eq %"class.spvtools::opt::BasicBlock"* %366, %237
  br i1 %367, label %374, label %368

368:                                              ; preds = %362
  %369 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %364, i64 1
  %370 = ptrtoint %"class.std::__1::unique_ptr.40"* %369 to i64
  %371 = icmp eq %"class.std::__1::unique_ptr.40"* %359, %369
  br i1 %371, label %372, label %362

372:                                              ; preds = %368
  %373 = ptrtoint %"class.std::__1::unique_ptr.40"* %359 to i64
  br label %374

374:                                              ; preds = %362, %372, %357
  %375 = phi i64 [ %373, %372 ], [ %358, %357 ], [ %363, %362 ]
  %376 = call i8* @_Znwm(i64 136) #12
  %377 = call i8* @_Znwm(i64 112) #12
  %378 = bitcast i8* %377 to %"class.spvtools::opt::Instruction"*
  %379 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %28, align 8
  %380 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %379, i64 0, i32 4, i32 0, i32 0, i32 0
  %381 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %380, align 8
  %382 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %381) #11
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %396

384:                                              ; preds = %374
  %385 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %379, i64 0, i32 5, i32 0, i32 2
  %386 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %385, align 8
  %387 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %386, i64 0, i32 2
  %388 = load i8, i8* %387, align 8, !range !3
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %390, label %396

390:                                              ; preds = %384
  %391 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %391, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i1 false) #11
  %392 = getelementptr inbounds i8, i8* %391, i64 37
  store i8 0, i8* %392, align 1
  %393 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %379, i64 0, i32 5, i32 0, i32 1, i32 0
  %394 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %393, align 8
  %395 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %379, i64 0, i32 5, i32 0, i32 0
  call void %394(%"union.std::__1::__function::__policy_storage"* %395, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %391) #11
  call void @_ZdlPv(i8* nonnull %391) #12
  br label %396

396:                                              ; preds = %374, %384, %390
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %119) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 0, i64 24, i1 false) #11
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %378, %"class.spvtools::opt::IRContext"* %379, i32 248, i32 0, i32 %382, %"class.std::__1::vector"* nonnull dereferenceable(24) %17) #11
  %397 = ptrtoint i8* %377 to i64
  %398 = bitcast i8* %376 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %398, align 8
  %399 = getelementptr inbounds i8, i8* %376, i64 8
  %400 = bitcast i8* %399 to i64*
  store i64 %397, i64* %400, align 8
  %401 = getelementptr inbounds i8, i8* %376, i64 16
  %402 = bitcast i8* %401 to i32 (...)***
  %403 = getelementptr inbounds i8, i8* %376, i64 24
  %404 = bitcast i8* %403 to i32 (...)***
  %405 = getelementptr inbounds i8, i8* %376, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %404, align 8
  %406 = getelementptr inbounds i8, i8* %376, i64 56
  %407 = getelementptr inbounds i8, i8* %376, i64 72
  %408 = bitcast i8* %407 to i32*
  store i32 0, i32* %408, align 8
  %409 = getelementptr inbounds i8, i8* %376, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %406, i8 0, i64 14, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %409, i8 0, i64 56, i1 false) #11
  %410 = bitcast i8* %405 to i8**
  store i8* %403, i8** %410, align 8
  %411 = getelementptr inbounds i8, i8* %376, i64 40
  %412 = bitcast i8* %411 to i8**
  store i8* %403, i8** %412, align 8
  %413 = getelementptr inbounds i8, i8* %376, i64 48
  store i8 1, i8* %413, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %402, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120)
  store i8* %376, i8** %122, align 8
  %414 = load i64, i64* %117, align 8
  %415 = sub i64 %375, %414
  %416 = ashr exact i64 %415, 3
  %417 = inttoptr i64 %375 to %"class.std::__1::unique_ptr.40"*
  %418 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"* %115, %"class.std::__1::unique_ptr.40"* %417, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %9) #11
  %419 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %116, align 8
  %420 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %121, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %121, align 8
  %421 = icmp eq %"class.spvtools::opt::BasicBlock"* %420, null
  br i1 %421, label %423, label %422

422:                                              ; preds = %396
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %123, %"class.spvtools::opt::BasicBlock"* nonnull %420) #11
  br label %423

423:                                              ; preds = %396, %422
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120)
  %424 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %419, i64 %416, i32 0, i32 0, i32 0
  %425 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %424, align 8
  %426 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %124, align 8
  %427 = icmp eq %"struct.spvtools::opt::Operand"* %426, null
  br i1 %427, label %456, label %428

428:                                              ; preds = %423
  %429 = bitcast %"struct.spvtools::opt::Operand"* %426 to i8*
  %430 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %125, align 8
  %431 = icmp eq %"struct.spvtools::opt::Operand"* %430, %426
  br i1 %431, label %454, label %432

432:                                              ; preds = %428, %450
  %433 = phi %"struct.spvtools::opt::Operand"* [ %434, %450 ], [ %430, %428 ]
  %434 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %433, i64 -1
  %435 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %433, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %435, align 8
  %436 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %433, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %437 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %436, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %436, align 8
  %438 = icmp eq %"class.std::__1::vector.3"* %437, null
  br i1 %438, label %450, label %439

439:                                              ; preds = %432
  %440 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %437, i64 0, i32 0, i32 0
  %441 = load i32*, i32** %440, align 8
  %442 = icmp eq i32* %441, null
  br i1 %442, label %448, label %443

443:                                              ; preds = %439
  %444 = ptrtoint i32* %441 to i64
  %445 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %437, i64 0, i32 0, i32 1
  %446 = bitcast i32** %445 to i64*
  store i64 %444, i64* %446, align 8
  %447 = bitcast i32* %441 to i8*
  call void @_ZdlPv(i8* %447) #12
  br label %448

448:                                              ; preds = %443, %439
  %449 = bitcast %"class.std::__1::vector.3"* %437 to i8*
  call void @_ZdlPv(i8* %449) #12
  br label %450

450:                                              ; preds = %448, %432
  %451 = icmp eq %"struct.spvtools::opt::Operand"* %434, %426
  br i1 %451, label %452, label %432

452:                                              ; preds = %450
  %453 = load i8*, i8** %126, align 8
  br label %454

454:                                              ; preds = %452, %428
  %455 = phi i8* [ %453, %452 ], [ %429, %428 ]
  store %"struct.spvtools::opt::Operand"* %426, %"struct.spvtools::opt::Operand"** %125, align 8
  call void @_ZdlPv(i8* %455) #12
  br label %456

456:                                              ; preds = %423, %454
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %119) #11
  %457 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %425, i64 0, i32 0
  store %"class.spvtools::opt::Function"* %27, %"class.spvtools::opt::Function"** %457, align 8
  %458 = load i32*, i32** %290, align 8
  %459 = load i32*, i32** %293, align 8
  %460 = icmp eq i32* %458, %459
  br i1 %460, label %461, label %646

461:                                              ; preds = %781, %456
  %462 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %425, i64 0, i32 1, i32 0, i32 0, i32 0
  %463 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %462, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %89, %"class.spvtools::opt::Instruction"* %463) #11
  %464 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %28, align 8
  %465 = bitcast %"class.spvtools::opt::Instruction"** %462 to i64*
  %466 = load i64, i64* %465, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140)
  store i64 %466, i64* %141, align 8
  %467 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %464, i64 0, i32 11
  %468 = load i32, i32* %467, align 8
  %469 = and i32 %468, 2
  %470 = icmp eq i32 %469, 0
  %471 = ptrtoint %"class.spvtools::opt::IRContext"* %464 to i64
  br i1 %470, label %479, label %472

472:                                              ; preds = %461
  %473 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %464, i64 0, i32 9, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #11
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %143, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %144) #11
  %474 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %473, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1182"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %4) #11
  %475 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %474, 0
  %476 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %475, i64 3
  %477 = bitcast %"struct.std::__1::__hash_node_base.178"* %476 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %144) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #11
  store %"class.spvtools::opt::BasicBlock"* %425, %"class.spvtools::opt::BasicBlock"** %477, align 8
  %478 = load i64, i64* %149, align 8
  br label %479

479:                                              ; preds = %461, %472
  %480 = phi i64 [ %471, %461 ], [ %478, %472 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %145) #11
  %481 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %425, i64 0, i32 2, i32 0, i32 1
  %482 = ptrtoint %"class.spvtools::opt::Instruction"* %481 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 32, i1 false)
  store i64 %480, i64* %150, align 8
  store %"class.spvtools::opt::BasicBlock"* %425, %"class.spvtools::opt::BasicBlock"** %147, align 8
  store i64 %482, i64* %152, align 8
  store i32 3, i32* %148, align 8
  %483 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %484 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %483, i64 0, i32 1, i32 0, i32 0, i32 0
  %485 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %484, align 8
  %486 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %485, i64 0, i32 4
  %487 = load i8, i8* %486, align 1, !range !3
  %488 = icmp eq i8 %487, 0
  br i1 %488, label %494, label %489

489:                                              ; preds = %479
  %490 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %485, i64 0, i32 3
  %491 = load i8, i8* %490, align 4, !range !3
  %492 = zext i8 %491 to i32
  %493 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %485, i32 %492) #11
  br label %494

494:                                              ; preds = %479, %489
  %495 = phi i32 [ %493, %489 ], [ 0, %479 ]
  %496 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %19, i32 %495)
  %497 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %146, align 8
  %498 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %497, %"class.spvtools::opt::Instruction"* %496) #11
  store %"class.spvtools::opt::BasicBlock"* %498, %"class.spvtools::opt::BasicBlock"** %147, align 8
  %499 = ptrtoint %"class.spvtools::opt::Instruction"* %496 to i64
  store i64 %499, i64* %152, align 8
  %500 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %153) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9LoopUtils24CreateLoopDedicatedExitsEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %154, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %155, align 8
  %501 = call i8* @_Znwm(i64 32) #12, !noalias !4
  %502 = bitcast i8* %501 to %"class.spvtools::opt::InstructionBuilder"**
  store %"class.spvtools::opt::InstructionBuilder"* %19, %"class.spvtools::opt::InstructionBuilder"** %502, align 8
  %503 = getelementptr inbounds i8, i8* %501, i64 8
  %504 = bitcast i8* %503 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %425, %"class.spvtools::opt::BasicBlock"** %504, align 8
  %505 = getelementptr inbounds i8, i8* %501, i64 16
  %506 = bitcast i8* %505 to %"class.spvtools::opt::analysis::DefUseManager"**
  store %"class.spvtools::opt::analysis::DefUseManager"* %89, %"class.spvtools::opt::analysis::DefUseManager"** %506, align 8
  %507 = getelementptr inbounds i8, i8* %501, i64 24
  %508 = bitcast i8* %507 to %"class.spvtools::opt::LoopUtils"**
  store %"class.spvtools::opt::LoopUtils"* %0, %"class.spvtools::opt::LoopUtils"** %508, align 8
  store i8* %501, i8** %156, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %159, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %160, align 8
  store i64 %158, i64* %161, align 8
  %509 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %500, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %510 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %509, align 8
  %511 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %510, i64 0, i32 0, i32 3
  %512 = load i8, i8* %511, align 8, !range !3
  %513 = icmp ne i8 %512, 0
  %514 = icmp eq %"class.spvtools::opt::Instruction"* %510, null
  %515 = or i1 %514, %513
  br i1 %515, label %534, label %516

516:                                              ; preds = %494, %525
  %517 = phi %"class.spvtools::opt::Instruction"* [ %529, %525 ], [ %510, %494 ]
  %518 = icmp eq %"class.spvtools::opt::Instruction"* %517, null
  br i1 %518, label %532, label %519

519:                                              ; preds = %516
  %520 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %517, i64 0, i32 0, i32 1
  %521 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %520, align 8
  %522 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %517, i64 0, i32 2
  %523 = load i32, i32* %522, align 8
  %524 = icmp eq i32 %523, 245
  br i1 %524, label %525, label %532

525:                                              ; preds = %519
  %526 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %521, i64 0, i32 0, i32 3
  %527 = load i8, i8* %526, align 8, !range !3
  %528 = icmp eq i8 %527, 0
  %529 = select i1 %528, %"class.spvtools::opt::Instruction"* %521, %"class.spvtools::opt::Instruction"* null
  %530 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %159, align 8
  %531 = call zeroext i1 %530(%"union.std::__1::__function::__policy_storage"* nonnull %162, %"class.spvtools::opt::Instruction"* nonnull %517) #11
  br i1 %531, label %516, label %532

532:                                              ; preds = %516, %519, %525
  %533 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %160, align 8
  br label %534

534:                                              ; preds = %532, %494
  %535 = phi %"struct.std::__1::__function::__policy"* [ %533, %532 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %494 ]
  %536 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %535, i64 0, i32 1
  %537 = load void (i8*)*, void (i8*)** %536, align 8
  %538 = icmp eq void (i8*)* %537, null
  br i1 %538, label %541, label %539

539:                                              ; preds = %534
  %540 = load i8*, i8** %163, align 8
  call void %537(i8* %540) #11
  br label %541

541:                                              ; preds = %534, %539
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #11
  %542 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %155, align 8
  %543 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %542, i64 0, i32 1
  %544 = load void (i8*)*, void (i8*)** %543, align 8
  %545 = icmp eq void (i8*)* %544, null
  br i1 %545, label %548, label %546

546:                                              ; preds = %541
  %547 = load i8*, i8** %156, align 8
  call void %544(i8* %547) #11
  br label %548

548:                                              ; preds = %541, %546
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %153) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %164) #11
  store i32 -1431655766, i32* %8, align 4
  %549 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %462, align 8
  %550 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %549, i64 0, i32 4
  %551 = load i8, i8* %550, align 1, !range !3
  %552 = icmp eq i8 %551, 0
  br i1 %552, label %558, label %553

553:                                              ; preds = %548
  %554 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %549, i64 0, i32 3
  %555 = load i8, i8* %554, align 4, !range !3
  %556 = zext i8 %555 to i32
  %557 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %549, i32 %556) #11
  br label %558

558:                                              ; preds = %548, %553
  %559 = phi i32 [ %557, %553 ], [ 0, %548 ]
  store i32 %559, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #11
  store i32* %8, i32** %166, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %167) #11
  %560 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %136, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %7) #11
  %561 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %560, 0
  %562 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %561, i64 3
  %563 = bitcast %"struct.std::__1::__hash_node_base.333"* %562 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %167) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #11
  store %"class.spvtools::opt::BasicBlock"* %425, %"class.spvtools::opt::BasicBlock"** %563, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %59, %"class.spvtools::opt::BasicBlock"* %425) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %164) #11
  %564 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %565 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %564, i64 0, i32 1, i32 0, i32 0, i32 0
  %566 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %565, align 8
  %567 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %566, i64 0, i32 4
  %568 = load i8, i8* %567, align 1, !range !3
  %569 = icmp eq i8 %568, 0
  br i1 %569, label %575, label %570

570:                                              ; preds = %558
  %571 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %566, i64 0, i32 3
  %572 = load i8, i8* %571, align 4, !range !3
  %573 = zext i8 %572 to i32
  %574 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %566, i32 %573) #11
  br label %575

575:                                              ; preds = %558, %570
  %576 = phi i32 [ %574, %570 ], [ 0, %558 ]
  call void @_ZN8spvtools3opt3CFG22RemoveNonExistingEdgesEj(%"class.spvtools::opt::CFG"* %59, i32 %576) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #11
  store %"class.spvtools::opt::BasicBlock"* %425, %"class.spvtools::opt::BasicBlock"** %21, align 8
  %577 = call { %"struct.std::__1::__hash_node_base.981"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.977"* nonnull %169, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %21, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #11
  %578 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %579 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %578, i64 0, i32 1, i32 0, i32 0, i32 0
  %580 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %579, align 8
  %581 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %580, i64 0, i32 4
  %582 = load i8, i8* %581, align 1, !range !3
  %583 = icmp eq i8 %582, 0
  br i1 %583, label %589, label %584

584:                                              ; preds = %575
  %585 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %580, i64 0, i32 3
  %586 = load i8, i8* %585, align 4, !range !3
  %587 = zext i8 %586 to i32
  %588 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %580, i32 %587) #11
  br label %589

589:                                              ; preds = %584, %575
  %590 = phi i32 [ %588, %584 ], [ 0, %575 ]
  %591 = zext i32 %590 to i64
  %592 = load i64, i64* %170, align 8
  %593 = icmp eq i64 %592, 0
  br i1 %593, label %804, label %594

594:                                              ; preds = %589
  %595 = call i64 @llvm.ctpop.i64(i64 %592) #11, !range !2
  %596 = icmp ugt i64 %595, 1
  br i1 %596, label %600, label %597

597:                                              ; preds = %594
  %598 = add i64 %592, 4294967295
  %599 = and i64 %598, %591
  br label %604

600:                                              ; preds = %594
  %601 = icmp ugt i64 %592, %591
  br i1 %601, label %604, label %602

602:                                              ; preds = %600
  %603 = urem i64 %591, %592
  br label %604

604:                                              ; preds = %602, %600, %597
  %605 = phi i64 [ %599, %597 ], [ %603, %602 ], [ %591, %600 ]
  %606 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %171, align 8
  %607 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %606, i64 %605
  %608 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %607, align 8
  %609 = icmp eq %"struct.std::__1::__hash_node_base.944"* %608, null
  br i1 %609, label %804, label %610

610:                                              ; preds = %604
  %611 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %608, i64 0, i32 0
  %612 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %611, align 8
  %613 = icmp eq %"struct.std::__1::__hash_node_base.944"* %612, null
  br i1 %613, label %804, label %614

614:                                              ; preds = %610
  %615 = add i64 %592, -1
  br label %616

616:                                              ; preds = %637, %614
  %617 = phi %"struct.std::__1::__hash_node_base.944"* [ %612, %614 ], [ %639, %637 ]
  %618 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %617, i64 1
  %619 = bitcast %"struct.std::__1::__hash_node_base.944"* %618 to i64*
  %620 = load i64, i64* %619, align 8
  %621 = icmp eq i64 %620, %591
  br i1 %621, label %632, label %622

622:                                              ; preds = %616
  br i1 %596, label %625, label %623

623:                                              ; preds = %622
  %624 = and i64 %620, %615
  br label %629

625:                                              ; preds = %622
  %626 = icmp ult i64 %620, %592
  br i1 %626, label %629, label %627

627:                                              ; preds = %625
  %628 = urem i64 %620, %592
  br label %629

629:                                              ; preds = %627, %625, %623
  %630 = phi i64 [ %624, %623 ], [ %628, %627 ], [ %620, %625 ]
  %631 = icmp eq i64 %630, %605
  br i1 %631, label %637, label %804

632:                                              ; preds = %616
  %633 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %617, i64 2
  %634 = bitcast %"struct.std::__1::__hash_node_base.944"* %633 to i32*
  %635 = load i32, i32* %634, align 4
  %636 = icmp eq i32 %635, %590
  br i1 %636, label %641, label %637

637:                                              ; preds = %632, %629
  %638 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %617, i64 0, i32 0
  %639 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %638, align 8
  %640 = icmp eq %"struct.std::__1::__hash_node_base.944"* %639, null
  br i1 %640, label %804, label %616

641:                                              ; preds = %632
  %642 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %617, i64 3
  %643 = bitcast %"struct.std::__1::__hash_node_base.944"* %642 to %"class.spvtools::opt::Loop"**
  %644 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %643, align 8
  %645 = icmp eq %"class.spvtools::opt::Loop"* %644, null
  br i1 %645, label %804, label %784

646:                                              ; preds = %456, %781
  %647 = phi i32* [ %782, %781 ], [ %458, %456 ]
  %648 = load i32, i32* %647, align 4
  %649 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %22, align 8
  %650 = zext i32 %648 to i64
  %651 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %649, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %652 = load i64, i64* %651, align 8
  %653 = icmp eq i64 %652, 0
  br i1 %653, label %781, label %654

654:                                              ; preds = %646
  %655 = call i64 @llvm.ctpop.i64(i64 %652) #11, !range !2
  %656 = icmp ugt i64 %655, 1
  br i1 %656, label %660, label %657

657:                                              ; preds = %654
  %658 = add i64 %652, 4294967295
  %659 = and i64 %658, %650
  br label %664

660:                                              ; preds = %654
  %661 = icmp ugt i64 %652, %650
  br i1 %661, label %664, label %662

662:                                              ; preds = %660
  %663 = urem i64 %650, %652
  br label %664

664:                                              ; preds = %662, %660, %657
  %665 = phi i64 [ %659, %657 ], [ %663, %662 ], [ %650, %660 ]
  %666 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %649, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %666, align 8
  %668 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %667, i64 %665
  %669 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %668, align 8
  %670 = icmp eq %"struct.std::__1::__hash_node_base.922"* %669, null
  br i1 %670, label %781, label %671

671:                                              ; preds = %664
  %672 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %669, i64 0, i32 0
  %673 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %672, align 8
  %674 = icmp eq %"struct.std::__1::__hash_node_base.922"* %673, null
  br i1 %674, label %781, label %675

675:                                              ; preds = %671
  %676 = add i64 %652, -1
  br label %677

677:                                              ; preds = %698, %675
  %678 = phi %"struct.std::__1::__hash_node_base.922"* [ %673, %675 ], [ %700, %698 ]
  %679 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %678, i64 1
  %680 = bitcast %"struct.std::__1::__hash_node_base.922"* %679 to i64*
  %681 = load i64, i64* %680, align 8
  %682 = icmp eq i64 %681, %650
  br i1 %682, label %693, label %683

683:                                              ; preds = %677
  br i1 %656, label %686, label %684

684:                                              ; preds = %683
  %685 = and i64 %681, %676
  br label %690

686:                                              ; preds = %683
  %687 = icmp ult i64 %681, %652
  br i1 %687, label %690, label %688

688:                                              ; preds = %686
  %689 = urem i64 %681, %652
  br label %690

690:                                              ; preds = %688, %686, %684
  %691 = phi i64 [ %685, %684 ], [ %689, %688 ], [ %681, %686 ]
  %692 = icmp eq i64 %691, %665
  br i1 %692, label %698, label %781

693:                                              ; preds = %677
  %694 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %678, i64 2
  %695 = bitcast %"struct.std::__1::__hash_node_base.922"* %694 to i32*
  %696 = load i32, i32* %695, align 4
  %697 = icmp eq i32 %696, %648
  br i1 %697, label %702, label %698

698:                                              ; preds = %693, %690
  %699 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %678, i64 0, i32 0
  %700 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %699, align 8
  %701 = icmp eq %"struct.std::__1::__hash_node_base.922"* %700, null
  br i1 %701, label %781, label %677

702:                                              ; preds = %693
  %703 = load i64, i64* %111, align 8
  %704 = icmp eq i64 %703, 0
  br i1 %704, label %752, label %705

705:                                              ; preds = %702
  %706 = call i64 @llvm.ctpop.i64(i64 %703) #11, !range !2
  %707 = icmp ugt i64 %706, 1
  br i1 %707, label %711, label %708

708:                                              ; preds = %705
  %709 = add i64 %703, 4294967295
  %710 = and i64 %709, %650
  br label %715

711:                                              ; preds = %705
  %712 = icmp ugt i64 %703, %650
  br i1 %712, label %715, label %713

713:                                              ; preds = %711
  %714 = urem i64 %650, %703
  br label %715

715:                                              ; preds = %713, %711, %708
  %716 = phi i64 [ %710, %708 ], [ %714, %713 ], [ %650, %711 ]
  %717 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %112, align 8
  %718 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %717, i64 %716
  %719 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %718, align 8
  %720 = icmp eq %"struct.std::__1::__hash_node_base.333"* %719, null
  br i1 %720, label %752, label %721

721:                                              ; preds = %715
  %722 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %719, i64 0, i32 0
  %723 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %722, align 8
  %724 = icmp eq %"struct.std::__1::__hash_node_base.333"* %723, null
  br i1 %724, label %752, label %725

725:                                              ; preds = %721
  %726 = add i64 %703, -1
  br label %727

727:                                              ; preds = %748, %725
  %728 = phi %"struct.std::__1::__hash_node_base.333"* [ %723, %725 ], [ %750, %748 ]
  %729 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %728, i64 1
  %730 = bitcast %"struct.std::__1::__hash_node_base.333"* %729 to i64*
  %731 = load i64, i64* %730, align 8
  %732 = icmp eq i64 %731, %650
  br i1 %732, label %743, label %733

733:                                              ; preds = %727
  br i1 %707, label %736, label %734

734:                                              ; preds = %733
  %735 = and i64 %731, %726
  br label %740

736:                                              ; preds = %733
  %737 = icmp ult i64 %731, %703
  br i1 %737, label %740, label %738

738:                                              ; preds = %736
  %739 = urem i64 %731, %703
  br label %740

740:                                              ; preds = %738, %736, %734
  %741 = phi i64 [ %735, %734 ], [ %739, %738 ], [ %731, %736 ]
  %742 = icmp eq i64 %741, %716
  br i1 %742, label %748, label %752

743:                                              ; preds = %727
  %744 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %728, i64 2
  %745 = bitcast %"struct.std::__1::__hash_node_base.333"* %744 to i32*
  %746 = load i32, i32* %745, align 4
  %747 = icmp eq i32 %746, %648
  br i1 %747, label %753, label %748

748:                                              ; preds = %743, %740
  %749 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %728, i64 0, i32 0
  %750 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %749, align 8
  %751 = icmp eq %"struct.std::__1::__hash_node_base.333"* %750, null
  br i1 %751, label %752, label %727

752:                                              ; preds = %721, %715, %702, %748, %740
  call void @abort() #13
  unreachable

753:                                              ; preds = %743
  %754 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %728, i64 3
  %755 = bitcast %"struct.std::__1::__hash_node_base.333"* %754 to %"class.spvtools::opt::BasicBlock"**
  %756 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %755, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #11
  %757 = load i64, i64* %128, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_1S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %129, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_1FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %130, align 8
  store i64 %757, i64* %131, align 8
  store %"class.spvtools::opt::BasicBlock"* %425, %"class.spvtools::opt::BasicBlock"** %133, align 8
  call void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"* %756, %"class.std::__1::function.1005"* nonnull dereferenceable(32) %18) #11
  %758 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %130, align 8
  %759 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %758, i64 0, i32 1
  %760 = load void (i8*)*, void (i8*)** %759, align 8
  %761 = icmp eq void (i8*)* %760, null
  br i1 %761, label %764, label %762

762:                                              ; preds = %753
  %763 = load i8*, i8** %134, align 8
  call void %760(i8* %763) #11
  br label %764

764:                                              ; preds = %753, %762
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135) #11
  store i32 -1431655766, i32* %12, align 4
  %765 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %756, i64 0, i32 1, i32 0, i32 0, i32 0
  %766 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %765, align 8
  %767 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %766, i64 0, i32 4
  %768 = load i8, i8* %767, align 1, !range !3
  %769 = icmp eq i8 %768, 0
  br i1 %769, label %775, label %770

770:                                              ; preds = %764
  %771 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %766, i64 0, i32 3
  %772 = load i8, i8* %771, align 4, !range !3
  %773 = zext i8 %772 to i32
  %774 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %766, i32 %773) #11
  br label %775

775:                                              ; preds = %764, %770
  %776 = phi i32 [ %774, %770 ], [ 0, %764 ]
  store i32 %776, i32* %12, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #11
  store i32* %12, i32** %138, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %139) #11
  %777 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %136, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %11) #11
  %778 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %777, 0
  %779 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %778, i64 3
  %780 = bitcast %"struct.std::__1::__hash_node_base.333"* %779 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %139) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #11
  store %"class.spvtools::opt::BasicBlock"* %756, %"class.spvtools::opt::BasicBlock"** %780, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %59, %"class.spvtools::opt::BasicBlock"* %756) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #11
  br label %781

781:                                              ; preds = %698, %690, %671, %646, %664, %775
  %782 = getelementptr inbounds i32, i32* %647, i64 1
  %783 = icmp eq i32* %782, %459
  br i1 %783, label %461, label %646

784:                                              ; preds = %641
  %785 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %462, align 8
  %786 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %785, i64 0, i32 4
  %787 = load i8, i8* %786, align 1, !range !3
  %788 = icmp eq i8 %787, 0
  br i1 %788, label %794, label %789

789:                                              ; preds = %784
  %790 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %785, i64 0, i32 3
  %791 = load i8, i8* %790, align 4, !range !3
  %792 = zext i8 %791 to i32
  %793 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %785, i32 %792) #11
  br label %794

794:                                              ; preds = %789, %784
  %795 = phi i32 [ %793, %789 ], [ 0, %784 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #11
  store i32 %795, i32* %13, align 4
  br label %796

796:                                              ; preds = %794, %796
  %797 = phi %"class.spvtools::opt::Loop"* [ %801, %796 ], [ %644, %794 ]
  %798 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %797, i64 0, i32 8, i32 0
  %799 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %798, i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %13) #11
  %800 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %797, i64 0, i32 6
  %801 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %800, align 8
  %802 = icmp eq %"class.spvtools::opt::Loop"* %801, null
  br i1 %802, label %803, label %796

803:                                              ; preds = %796
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #11
  br label %804

804:                                              ; preds = %629, %637, %610, %589, %604, %641, %803
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %145) #11
  br label %805

805:                                              ; preds = %804, %355
  %806 = phi i8 [ %179, %355 ], [ 1, %804 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #11
  %807 = inttoptr i64 %178 to i64*
  %808 = load i64, i64* %807, align 8
  %809 = icmp eq i64 %808, 0
  br i1 %809, label %174, label %177

810:                                              ; preds = %174
  %811 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %22, align 8
  %812 = bitcast %"struct.std::__1::__hash_node_base.981"** %100 to %"struct.std::__1::__hash_node.1259"**
  %813 = load %"struct.std::__1::__hash_node.1259"*, %"struct.std::__1::__hash_node.1259"** %812, align 8
  %814 = getelementptr inbounds %"struct.std::__1::__hash_node.1259", %"struct.std::__1::__hash_node.1259"* %813, i64 0, i32 2
  %815 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %814, align 8
  call void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %811, %"class.spvtools::opt::BasicBlock"* %815) #11
  br label %816

816:                                              ; preds = %810, %174
  %817 = and i8 %806, 1
  %818 = icmp eq i8 %817, 0
  br i1 %818, label %821, label %819

819:                                              ; preds = %816
  %820 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %28, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %820, i32 83) #11
  br label %821

821:                                              ; preds = %87, %816, %819
  %822 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %100, align 8
  %823 = icmp eq %"struct.std::__1::__hash_node_base.981"* %822, null
  br i1 %823, label %830, label %824

824:                                              ; preds = %821, %824
  %825 = phi %"struct.std::__1::__hash_node_base.981"* [ %827, %824 ], [ %822, %821 ]
  %826 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %825, i64 0, i32 0
  %827 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %826, align 8
  %828 = bitcast %"struct.std::__1::__hash_node_base.981"* %825 to i8*
  call void @_ZdlPv(i8* %828) #12
  %829 = icmp eq %"struct.std::__1::__hash_node_base.981"* %827, null
  br i1 %829, label %830, label %824

830:                                              ; preds = %824, %821
  %831 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %99, align 8
  store %"struct.std::__1::__hash_node_base.981"** null, %"struct.std::__1::__hash_node_base.981"*** %99, align 8
  %832 = icmp eq %"struct.std::__1::__hash_node_base.981"** %831, null
  br i1 %832, label %835, label %833

833:                                              ; preds = %830
  %834 = bitcast %"struct.std::__1::__hash_node_base.981"** %831 to i8*
  call void @_ZdlPv(i8* %834) #12
  br label %835

835:                                              ; preds = %830, %833
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %98) #11
  %836 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %92, align 8
  %837 = icmp eq %"struct.std::__1::__hash_node_base.922"* %836, null
  br i1 %837, label %844, label %838

838:                                              ; preds = %835, %838
  %839 = phi %"struct.std::__1::__hash_node_base.922"* [ %841, %838 ], [ %836, %835 ]
  %840 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %839, i64 0, i32 0
  %841 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %840, align 8
  %842 = bitcast %"struct.std::__1::__hash_node_base.922"* %839 to i8*
  call void @_ZdlPv(i8* %842) #12
  %843 = icmp eq %"struct.std::__1::__hash_node_base.922"* %841, null
  br i1 %843, label %844, label %838

844:                                              ; preds = %838, %835
  %845 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %91, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %91, align 8
  %846 = icmp eq %"struct.std::__1::__hash_node_base.922"** %845, null
  br i1 %846, label %849, label %847

847:                                              ; preds = %844
  %848 = bitcast %"struct.std::__1::__hash_node_base.922"** %845 to i8*
  call void @_ZdlPv(i8* %848) #12
  br label %849

849:                                              ; preds = %844, %847
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %90) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt4Loop13GetExitBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"*, %"class.std::__1::unordered_set.917"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

declare void @_ZN8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvPjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1005"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.21", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 112) #12
  %10 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  %14 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %19 = bitcast i32** %17 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %18, %"struct.std::__1::aligned_storage<4, 4>::type"** %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.0"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %18 to i32*
  store i64 1, i64* %16, align 8
  store i32 %1, i32* %22, align 8
  %23 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %24, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %24, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %33 = call i8* @_Znwm(i64 48) #12
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 48
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.spvtools::opt::Operand"** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = bitcast i8* %33 to i32*
  %40 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 8
  %43 = bitcast i8* %42 to %"class.spvtools::utils::SmallVector"*
  %44 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %45 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %33, i64 24
  %49 = getelementptr inbounds i8, i8* %33, i64 32
  %50 = bitcast i8* %48 to i8**
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %33, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %43, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %44) #11
  %54 = getelementptr inbounds i8, i8* %33, i64 48
  %55 = bitcast i8* %9 to %"class.spvtools::opt::Instruction"*
  %56 = bitcast %"struct.spvtools::opt::Operand"** %34 to i64*
  %57 = ptrtoint i8* %54 to i64
  store i64 %57, i64* %56, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %55, %"class.spvtools::opt::IRContext"* %11, i32 249, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #11
  %58 = ptrtoint i8* %9 to i64
  %59 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %61 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %60, align 8
  %62 = icmp eq %"struct.spvtools::opt::Operand"* %61, null
  br i1 %62, label %91, label %63

63:                                               ; preds = %2
  %64 = bitcast %"struct.spvtools::opt::Operand"* %61 to i8*
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %34, align 8
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %65, %61
  br i1 %66, label %89, label %67

67:                                               ; preds = %63, %85
  %68 = phi %"struct.spvtools::opt::Operand"* [ %69, %85 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %71, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %71, align 8
  %73 = icmp eq %"class.std::__1::vector.3"* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i32* %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast i32* %76 to i8*
  call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %78, %74
  %84 = bitcast %"class.std::__1::vector.3"* %72 to i8*
  call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %83, %67
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %69, %61
  br i1 %86, label %87, label %67

87:                                               ; preds = %85
  %88 = load i8*, i8** %35, align 8
  br label %89

89:                                               ; preds = %87, %63
  %90 = phi i8* [ %88, %87 ], [ %64, %63 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %34, align 8
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %2, %89
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %93, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %93, align 8
  %95 = icmp eq %"class.std::__1::vector.3"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i32* %98 to i64
  %102 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 1
  %103 = bitcast i32** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %100, %96
  %106 = bitcast %"class.std::__1::vector.3"* %94 to i8*
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %91, %105
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %108 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %107, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %123 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %3)
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %8, align 8
  %125 = icmp eq %"class.spvtools::opt::Instruction"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.spvtools::opt::Instruction"* %124 to void (%"class.spvtools::opt::Instruction"*)***
  %128 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %128, i64 1
  %130 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %129, align 8
  call void %130(%"class.spvtools::opt::Instruction"* nonnull %124) #11
  br label %131

131:                                              ; preds = %122, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret %"class.spvtools::opt::Instruction"* %123
}

declare void @_ZN8spvtools3opt3CFG22RemoveNonExistingEdgesEj(%"class.spvtools::opt::CFG"*, i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9LoopUtils17MakeLoopClosedSSAEv(%"class.spvtools::opt::LoopUtils"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unordered_set.976", align 8
  %3 = alloca %"class.std::__1::unordered_set.917", align 8
  %4 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %5 = alloca %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", align 8
  %6 = alloca %"class.std::__1::unordered_set.917", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  tail call void @_ZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEv(%"class.spvtools::opt::LoopUtils"* %0)
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 2
  %10 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %10, i64 0, i32 1
  %12 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %12, i64 0, i32 0
  %14 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 0
  %16 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %38

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %22, align 8
  %24 = tail call i8* @_Znwm(i64 400) #12
  %25 = bitcast i8* %24 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %25, %"class.spvtools::opt::Module"* %23) #11
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 15
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %28, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.273"* %27 to i64*
  store i64 %26, i64* %30, align 8
  %31 = icmp eq %"class.spvtools::opt::CFG"* %29, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %21
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %29) #11
  %33 = bitcast %"class.spvtools::opt::CFG"* %29 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %32, %21
  %35 = load i32, i32* %17, align 8
  %36 = or i32 %35, 16
  store i32 %36, i32* %17, align 8
  %37 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  br label %38

38:                                               ; preds = %1, %34
  %39 = phi %"class.spvtools::opt::IRContext"* [ %16, %1 ], [ %37, %34 ]
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 15, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %40, align 8
  %42 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %39, %"class.spvtools::opt::Function"* %14) #11
  %43 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %42, i64 0, i32 0, i32 0
  %44 = bitcast %"class.std::__1::unordered_set.976"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %2, i64 0, i32 0, i32 4, i64 0
  %50 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %2, i64 0, i32 0, i32 3
  %51 = bitcast %"class.std::__1::__compressed_pair.997"* %50 to i32*
  %52 = bitcast i8* %49 to i32*
  store i32 -1431655766, i32* %52, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %51, align 8
  %53 = bitcast %"class.std::__1::unordered_set.917"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #11
  %54 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 4, i64 0
  %57 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %3, i64 0, i32 0, i32 3
  %58 = bitcast %"class.std::__1::__compressed_pair.936"* %57 to i32*
  %59 = bitcast i8* %56 to i32*
  store i32 -1431655766, i32* %59, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %58, align 8
  %60 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  call void @_ZNK8spvtools3opt4Loop13GetExitBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"* %60, %"class.std::__1::unordered_set.917"* nonnull %3) #11
  %61 = bitcast %"struct.std::__1::__hash_node_base.922"** %55 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  %64 = inttoptr i64 %62 to %"struct.std::__1::__hash_node_base.922"*
  br i1 %63, label %73, label %65

65:                                               ; preds = %38
  %66 = bitcast %"class.spvtools::opt::BasicBlock"** %4 to i8*
  %67 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %41, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %41, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.spvtools::opt::BasicBlock"** %4 to i64*
  %70 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %2, i64 0, i32 0
  br label %148

71:                                               ; preds = %204
  %72 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %55, align 8
  br label %73

73:                                               ; preds = %71, %38
  %74 = phi %"struct.std::__1::__hash_node_base.922"* [ %72, %71 ], [ %64, %38 ]
  %75 = icmp eq %"struct.std::__1::__hash_node_base.922"* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %73, %76
  %77 = phi %"struct.std::__1::__hash_node_base.922"* [ %79, %76 ], [ %74, %73 ]
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %77, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %78, align 8
  %80 = bitcast %"struct.std::__1::__hash_node_base.922"* %77 to i8*
  call void @_ZdlPv(i8* %80) #12
  %81 = icmp eq %"struct.std::__1::__hash_node_base.922"* %79, null
  br i1 %81, label %82, label %76

82:                                               ; preds = %76, %73
  %83 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %54, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %54, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.922"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast %"struct.std::__1::__hash_node_base.922"** %83 to i8*
  call void @_ZdlPv(i8* %86) #12
  br label %87

87:                                               ; preds = %82, %85
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #11
  %88 = bitcast %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %88) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %88, i8* align 8 bitcast (%"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* @__const._ZN8spvtools3opt9LoopUtils17MakeLoopClosedSSAEv.lcssa_rewriter to i8*), i64 80, i1 false)
  %89 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %90 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %90, i64 0, i32 3
  %92 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %91, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %5, i64 0, i32 0
  store %"class.spvtools::opt::IRContext"* %89, %"class.spvtools::opt::IRContext"** %93, align 8
  %94 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %5, i64 0, i32 1
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 11
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 16
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %115

99:                                               ; preds = %87
  %100 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 4, i32 0, i32 0, i32 0
  %101 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %100, align 8
  %102 = call i8* @_Znwm(i64 400) #12
  %103 = bitcast i8* %102 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %103, %"class.spvtools::opt::Module"* %101) #11
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 15
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %106, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.273"* %105 to i64*
  store i64 %104, i64* %108, align 8
  %109 = icmp eq %"class.spvtools::opt::CFG"* %107, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %99
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %107) #11
  %111 = bitcast %"class.spvtools::opt::CFG"* %107 to i8*
  call void @_ZdlPv(i8* %111) #12
  br label %112

112:                                              ; preds = %110, %99
  %113 = load i32, i32* %95, align 8
  %114 = or i32 %113, 16
  store i32 %114, i32* %95, align 8
  br label %115

115:                                              ; preds = %112, %87
  %116 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 15, i32 0, i32 0, i32 0
  %117 = bitcast %"class.spvtools::opt::CFG"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::CFG"** %94 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %5, i64 0, i32 2
  store %"class.spvtools::opt::DominatorTree"* %43, %"class.spvtools::opt::DominatorTree"** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %5, i64 0, i32 3
  store %"class.std::__1::unordered_set.976"* %2, %"class.std::__1::unordered_set.976"** %121, align 8
  %122 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %5, i64 0, i32 4
  %123 = icmp eq %"class.spvtools::opt::BasicBlock"* %92, null
  br i1 %123, label %135, label %124

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %92, i64 0, i32 1, i32 0, i32 0, i32 0
  %126 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %125, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 4
  %128 = load i8, i8* %127, align 1, !range !3
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 3
  %132 = load i8, i8* %131, align 4, !range !3
  %133 = zext i8 %132 to i32
  %134 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %126, i32 %133) #11
  br label %135

135:                                              ; preds = %115, %124, %130
  %136 = phi i32 [ 0, %115 ], [ %134, %130 ], [ 0, %124 ]
  store i32 %136, i32* %122, align 8
  %137 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %5, i64 0, i32 6
  %138 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %5, i64 0, i32 6, i32 0, i32 3
  %139 = bitcast %"class.std::__1::__compressed_pair.324"* %138 to i32*
  %140 = bitcast %"class.std::__1::unordered_map.304"* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %139, align 8
  %141 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %142 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %143 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %142, i64 0, i32 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS0_9IRContextEPNS0_8FunctionERKNSt3__113unordered_setIjNS6_4hashIjEENS6_8equal_toIjEENS6_9allocatorIjEEEERKNS7_IPNS0_10BasicBlockENS8_ISI_EENSA_ISI_EENSC_ISI_EEEEPNS1_13LCSSARewriterE(%"class.spvtools::opt::IRContext"* %141, %"class.spvtools::opt::Function"* %14, %"class.std::__1::unordered_set.917"* dereferenceable(40) %143, %"class.std::__1::unordered_set.976"* nonnull dereferenceable(40) %2, %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* nonnull %5)
  %144 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %145 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %144, i64 0, i32 3
  %146 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %145, align 8
  %147 = icmp eq %"class.spvtools::opt::BasicBlock"* %146, null
  br i1 %147, label %311, label %212

148:                                              ; preds = %65, %204
  %149 = phi i64 [ %62, %65 ], [ %210, %204 ]
  %150 = inttoptr i64 %149 to %"struct.std::__1::__hash_node.1169"*
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node.1169", %"struct.std::__1::__hash_node.1169"* %150, i64 0, i32 2
  %152 = load i32, i32* %151, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  %153 = zext i32 %152 to i64
  %154 = load i64, i64* %67, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %203, label %156

156:                                              ; preds = %148
  %157 = call i64 @llvm.ctpop.i64(i64 %154) #11, !range !2
  %158 = icmp ugt i64 %157, 1
  br i1 %158, label %162, label %159

159:                                              ; preds = %156
  %160 = add i64 %154, 4294967295
  %161 = and i64 %160, %153
  br label %166

162:                                              ; preds = %156
  %163 = icmp ugt i64 %154, %153
  br i1 %163, label %166, label %164

164:                                              ; preds = %162
  %165 = urem i64 %153, %154
  br label %166

166:                                              ; preds = %164, %162, %159
  %167 = phi i64 [ %161, %159 ], [ %165, %164 ], [ %153, %162 ]
  %168 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %68, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %168, i64 %167
  %170 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %169, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base.333"* %170, null
  br i1 %171, label %203, label %172

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %170, i64 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base.333"* %174, null
  br i1 %175, label %203, label %176

176:                                              ; preds = %172
  %177 = add i64 %154, -1
  br label %178

178:                                              ; preds = %199, %176
  %179 = phi %"struct.std::__1::__hash_node_base.333"* [ %174, %176 ], [ %201, %199 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %179, i64 1
  %181 = bitcast %"struct.std::__1::__hash_node_base.333"* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %182, %153
  br i1 %183, label %194, label %184

184:                                              ; preds = %178
  br i1 %158, label %187, label %185

185:                                              ; preds = %184
  %186 = and i64 %182, %177
  br label %191

187:                                              ; preds = %184
  %188 = icmp ult i64 %182, %154
  br i1 %188, label %191, label %189

189:                                              ; preds = %187
  %190 = urem i64 %182, %154
  br label %191

191:                                              ; preds = %189, %187, %185
  %192 = phi i64 [ %186, %185 ], [ %190, %189 ], [ %182, %187 ]
  %193 = icmp eq i64 %192, %167
  br i1 %193, label %199, label %203

194:                                              ; preds = %178
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %179, i64 2
  %196 = bitcast %"struct.std::__1::__hash_node_base.333"* %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, %152
  br i1 %198, label %204, label %199

199:                                              ; preds = %194, %191
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %179, i64 0, i32 0
  %201 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %200, align 8
  %202 = icmp eq %"struct.std::__1::__hash_node_base.333"* %201, null
  br i1 %202, label %203, label %178

203:                                              ; preds = %172, %166, %148, %199, %191
  call void @abort() #13
  unreachable

204:                                              ; preds = %194
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %179, i64 3
  %206 = bitcast %"struct.std::__1::__hash_node_base.333"* %205 to i64*
  %207 = load i64, i64* %206, align 8
  store i64 %207, i64* %69, align 8
  %208 = call { %"struct.std::__1::__hash_node_base.981"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.977"* nonnull %70, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %4, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  %209 = inttoptr i64 %149 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %71, label %148

212:                                              ; preds = %135
  %213 = bitcast %"class.std::__1::unordered_set.917"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %213) #11
  %214 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %216 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %6, i64 0, i32 0, i32 4, i64 0
  %217 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %6, i64 0, i32 0, i32 3
  %218 = bitcast %"class.std::__1::__compressed_pair.936"* %217 to i32*
  %219 = bitcast i8* %216 to i32*
  store i32 -1431655766, i32* %219, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %218, align 8
  call void @_ZNK8spvtools3opt4Loop16GetMergingBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"* %144, %"class.std::__1::unordered_set.917"* nonnull %6) #11
  %220 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #11
  %221 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %222 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %221, i64 0, i32 3
  %223 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %222, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %223, i64 0, i32 1, i32 0, i32 0, i32 0
  %225 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %224, align 8
  %226 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %225, i64 0, i32 4
  %227 = load i8, i8* %226, align 1, !range !3
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %234, label %229

229:                                              ; preds = %212
  %230 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %225, i64 0, i32 3
  %231 = load i8, i8* %230, align 4, !range !3
  %232 = zext i8 %231 to i32
  %233 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %225, i32 %232) #11
  br label %234

234:                                              ; preds = %212, %229
  %235 = phi i32 [ %233, %229 ], [ 0, %212 ]
  store i32 %235, i32* %7, align 4
  %236 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %6, i64 0, i32 0
  %237 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.918"* nonnull %236, i32* nonnull dereferenceable(4) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #11
  %238 = load i64, i64* %48, align 8
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %287, label %240

240:                                              ; preds = %234
  %241 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %47, align 8
  %242 = icmp eq %"struct.std::__1::__hash_node_base.981"* %241, null
  br i1 %242, label %249, label %243

243:                                              ; preds = %240, %243
  %244 = phi %"struct.std::__1::__hash_node_base.981"* [ %246, %243 ], [ %241, %240 ]
  %245 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %244, i64 0, i32 0
  %246 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %245, align 8
  %247 = bitcast %"struct.std::__1::__hash_node_base.981"* %244 to i8*
  call void @_ZdlPv(i8* %247) #12
  %248 = icmp eq %"struct.std::__1::__hash_node_base.981"* %246, null
  br i1 %248, label %249, label %243

249:                                              ; preds = %243, %240
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %47, align 8
  %250 = load i64, i64* %46, align 8
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %269, label %252

252:                                              ; preds = %249
  %253 = add i64 %250, -1
  %254 = and i64 %250, 3
  %255 = icmp ult i64 %253, 3
  br i1 %255, label %258, label %256

256:                                              ; preds = %252
  %257 = sub i64 %250, %254
  br label %270

258:                                              ; preds = %270, %252
  %259 = phi i64 [ 0, %252 ], [ %284, %270 ]
  %260 = icmp eq i64 %254, 0
  br i1 %260, label %269, label %261

261:                                              ; preds = %258, %261
  %262 = phi i64 [ %266, %261 ], [ %259, %258 ]
  %263 = phi i64 [ %267, %261 ], [ %254, %258 ]
  %264 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %45, align 8
  %265 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %264, i64 %262
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %265, align 8
  %266 = add nuw i64 %262, 1
  %267 = add i64 %263, -1
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %261, !llvm.loop !9

269:                                              ; preds = %258, %261, %249
  store i64 0, i64* %48, align 8
  br label %287

270:                                              ; preds = %270, %256
  %271 = phi i64 [ 0, %256 ], [ %284, %270 ]
  %272 = phi i64 [ %257, %256 ], [ %285, %270 ]
  %273 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %45, align 8
  %274 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %273, i64 %271
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %274, align 8
  %275 = or i64 %271, 1
  %276 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %45, align 8
  %277 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %276, i64 %275
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %277, align 8
  %278 = or i64 %271, 2
  %279 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %45, align 8
  %280 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %279, i64 %278
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %280, align 8
  %281 = or i64 %271, 3
  %282 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %45, align 8
  %283 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %282, i64 %281
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %283, align 8
  %284 = add nuw i64 %271, 4
  %285 = add i64 %272, -4
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %258, label %270

287:                                              ; preds = %234, %269
  %288 = bitcast %"class.spvtools::opt::BasicBlock"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %288) #11
  %289 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %290 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %289, i64 0, i32 3
  %291 = bitcast %"class.spvtools::opt::BasicBlock"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"class.spvtools::opt::BasicBlock"** %8 to i64*
  store i64 %292, i64* %293, align 8
  %294 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %2, i64 0, i32 0
  %295 = call { %"struct.std::__1::__hash_node_base.981"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.977"* nonnull %294, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %8, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288) #11
  %296 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS0_9IRContextEPNS0_8FunctionERKNSt3__113unordered_setIjNS6_4hashIjEENS6_8equal_toIjEENS6_9allocatorIjEEEERKNS7_IPNS0_10BasicBlockENS8_ISI_EENSA_ISI_EENSC_ISI_EEEEPNS1_13LCSSARewriterE(%"class.spvtools::opt::IRContext"* %296, %"class.spvtools::opt::Function"* %14, %"class.std::__1::unordered_set.917"* nonnull dereferenceable(40) %6, %"class.std::__1::unordered_set.976"* nonnull dereferenceable(40) %2, %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* nonnull %5)
  %297 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %215, align 8
  %298 = icmp eq %"struct.std::__1::__hash_node_base.922"* %297, null
  br i1 %298, label %305, label %299

299:                                              ; preds = %287, %299
  %300 = phi %"struct.std::__1::__hash_node_base.922"* [ %302, %299 ], [ %297, %287 ]
  %301 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %300, i64 0, i32 0
  %302 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %301, align 8
  %303 = bitcast %"struct.std::__1::__hash_node_base.922"* %300 to i8*
  call void @_ZdlPv(i8* %303) #12
  %304 = icmp eq %"struct.std::__1::__hash_node_base.922"* %302, null
  br i1 %304, label %305, label %299

305:                                              ; preds = %299, %287
  %306 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %214, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %214, align 8
  %307 = icmp eq %"struct.std::__1::__hash_node_base.922"** %306, null
  br i1 %307, label %310, label %308

308:                                              ; preds = %305
  %309 = bitcast %"struct.std::__1::__hash_node_base.922"** %306 to i8*
  call void @_ZdlPv(i8* %309) #12
  br label %310

310:                                              ; preds = %305, %308
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %213) #11
  br label %311

311:                                              ; preds = %135, %310
  %312 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %312, i32 112) #11
  %313 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %5, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %314 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %313, align 8
  %315 = icmp eq %"struct.std::__1::__hash_node_base.309"* %314, null
  br i1 %315, label %332, label %316

316:                                              ; preds = %311, %329
  %317 = phi %"struct.std::__1::__hash_node_base.309"* [ %319, %329 ], [ %314, %311 ]
  %318 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %317, i64 0, i32 0
  %319 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %318, align 8
  %320 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %317, i64 3
  %321 = bitcast %"struct.std::__1::__hash_node_base.309"* %320 to i32**
  %322 = load i32*, i32** %321, align 8
  %323 = icmp eq i32* %322, null
  br i1 %323, label %329, label %324

324:                                              ; preds = %316
  %325 = ptrtoint i32* %322 to i64
  %326 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %317, i64 4
  %327 = bitcast %"struct.std::__1::__hash_node_base.309"* %326 to i64*
  store i64 %325, i64* %327, align 8
  %328 = bitcast i32* %322 to i8*
  call void @_ZdlPv(i8* %328) #12
  br label %329

329:                                              ; preds = %324, %316
  %330 = bitcast %"struct.std::__1::__hash_node_base.309"* %317 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = icmp eq %"struct.std::__1::__hash_node_base.309"* %319, null
  br i1 %331, label %332, label %316

332:                                              ; preds = %329, %311
  %333 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %5, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %333, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %333, align 8
  %335 = icmp eq %"struct.std::__1::__hash_node_base.309"** %334, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %332
  %337 = bitcast %"struct.std::__1::__hash_node_base.309"** %334 to i8*
  call void @_ZdlPv(i8* %337) #12
  br label %338

338:                                              ; preds = %332, %336
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %88) #11
  %339 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %47, align 8
  %340 = icmp eq %"struct.std::__1::__hash_node_base.981"* %339, null
  br i1 %340, label %347, label %341

341:                                              ; preds = %338, %341
  %342 = phi %"struct.std::__1::__hash_node_base.981"* [ %344, %341 ], [ %339, %338 ]
  %343 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %342, i64 0, i32 0
  %344 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %343, align 8
  %345 = bitcast %"struct.std::__1::__hash_node_base.981"* %342 to i8*
  call void @_ZdlPv(i8* %345) #12
  %346 = icmp eq %"struct.std::__1::__hash_node_base.981"* %344, null
  br i1 %346, label %347, label %341

347:                                              ; preds = %341, %338
  %348 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.981"** null, %"struct.std::__1::__hash_node_base.981"*** %45, align 8
  %349 = icmp eq %"struct.std::__1::__hash_node_base.981"** %348, null
  br i1 %349, label %352, label %350

350:                                              ; preds = %347
  %351 = bitcast %"struct.std::__1::__hash_node_base.981"** %348 to i8*
  call void @_ZdlPv(i8* %351) #12
  br label %352

352:                                              ; preds = %347, %350
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #11
  ret void
}

declare %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS0_9IRContextEPNS0_8FunctionERKNSt3__113unordered_setIjNS6_4hashIjEENS6_8equal_toIjEENS6_9allocatorIjEEEERKNS7_IPNS0_10BasicBlockENS8_ISI_EENSA_ISI_EENSC_ISI_EEEEPNS1_13LCSSARewriterE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*, %"class.std::__1::unordered_set.917"* dereferenceable(40), %"class.std::__1::unordered_set.976"* dereferenceable(40), %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*) unnamed_addr #4 {
  %6 = alloca %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", align 8
  %7 = alloca %"class.std::__1::function.1067", align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 400) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %16, %"class.spvtools::opt::Module"* %14) #11
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 15
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.273"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::CFG"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %20) #11
  %24 = bitcast %"class.spvtools::opt::CFG"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %12
  %26 = load i32, i32* %8, align 8
  %27 = or i32 %26, 16
  store i32 %27, i32* %8, align 8
  br label %28

28:                                               ; preds = %5, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %29, align 8
  %31 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::Function"* %1) #11
  %32 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %31, i64 0, i32 0, i32 0
  %33 = load i32, i32* %8, align 8
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %60

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %37, align 8
  %39 = tail call i8* @_Znwm(i64 104) #12
  %40 = bitcast i8* %39 to %"class.spvtools::opt::analysis::DefUseManager"*
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  %42 = bitcast i8* %41 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %39, i64 48
  %44 = getelementptr inbounds i8, i8* %39, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #11
  %45 = bitcast i8* %44 to i8**
  store i8* %43, i8** %45, align 8
  %46 = getelementptr inbounds i8, i8* %39, i64 64
  %47 = getelementptr inbounds i8, i8* %39, i64 96
  %48 = bitcast i8* %47 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %48, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %40, %"class.spvtools::opt::Module"* %38) #11
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6
  %50 = ptrtoint i8* %39 to i64
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %49, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.62"* %49 to i64*
  store i64 %50, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %36
  %56 = bitcast %"class.std::__1::unique_ptr.62"* %49 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %56, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %52) #11
  br label %57

57:                                               ; preds = %55, %36
  %58 = load i32, i32* %8, align 8
  %59 = or i32 %58, 1
  store i32 %59, i32* %8, align 8
  br label %60

60:                                               ; preds = %28, %57
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %64 = bitcast %"struct.std::__1::__hash_node_base.922"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %92, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %30, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %30, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = bitcast %"struct.std::__1::__hash_node_base.981"** %70 to i64*
  %72 = bitcast %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6 to i8*
  %73 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, i64 0, i32 0
  %74 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, i64 0, i32 1
  %75 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, i64 0, i32 2
  %76 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, i64 0, i32 2, i32 0, i32 3
  %77 = bitcast %"class.std::__1::__compressed_pair.81"* %76 to i32*
  %78 = bitcast %"class.std::__1::unordered_map"* %75 to i8*
  %79 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, i64 0, i32 3
  %80 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, i64 0, i32 3, i32 0, i32 3
  %81 = bitcast %"class.std::__1::__compressed_pair.1250"* %80 to i32*
  %82 = bitcast %"class.std::__1::unordered_set.1231"* %79 to i8*
  %83 = bitcast %"class.std::__1::function.1067"* %7 to i8*
  %84 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %7, i64 0, i32 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %7, i64 0, i32 0, i32 2
  %86 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %7, i64 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %88 = bitcast %"struct.std::__1::__hash_node_base.1236"** %87 to i64*
  %89 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %93

92:                                               ; preds = %284, %60
  ret void

93:                                               ; preds = %67, %284
  %94 = phi i64 [ %65, %67 ], [ %286, %284 ]
  %95 = inttoptr i64 %94 to %"struct.std::__1::__hash_node.1169"*
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node.1169", %"struct.std::__1::__hash_node.1169"* %95, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i64
  %99 = load i64, i64* %68, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %148, label %101

101:                                              ; preds = %93
  %102 = call i64 @llvm.ctpop.i64(i64 %99) #11, !range !2
  %103 = icmp ugt i64 %102, 1
  br i1 %103, label %107, label %104

104:                                              ; preds = %101
  %105 = add i64 %99, 4294967295
  %106 = and i64 %105, %98
  br label %111

107:                                              ; preds = %101
  %108 = icmp ugt i64 %99, %98
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = urem i64 %98, %99
  br label %111

111:                                              ; preds = %109, %107, %104
  %112 = phi i64 [ %106, %104 ], [ %110, %109 ], [ %98, %107 ]
  %113 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %69, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %113, i64 %112
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %148, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.333"* %119, null
  br i1 %120, label %148, label %121

121:                                              ; preds = %117
  %122 = add i64 %99, -1
  br label %123

123:                                              ; preds = %144, %121
  %124 = phi %"struct.std::__1::__hash_node_base.333"* [ %119, %121 ], [ %146, %144 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %124, i64 1
  %126 = bitcast %"struct.std::__1::__hash_node_base.333"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, %98
  br i1 %128, label %139, label %129

129:                                              ; preds = %123
  br i1 %103, label %132, label %130

130:                                              ; preds = %129
  %131 = and i64 %127, %122
  br label %136

132:                                              ; preds = %129
  %133 = icmp ult i64 %127, %99
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = urem i64 %127, %99
  br label %136

136:                                              ; preds = %134, %132, %130
  %137 = phi i64 [ %131, %130 ], [ %135, %134 ], [ %127, %132 ]
  %138 = icmp eq i64 %137, %112
  br i1 %138, label %144, label %148

139:                                              ; preds = %123
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %124, i64 2
  %141 = bitcast %"struct.std::__1::__hash_node_base.333"* %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %142, %97
  br i1 %143, label %149, label %144

144:                                              ; preds = %139, %136
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %124, i64 0, i32 0
  %146 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %145, align 8
  %147 = icmp eq %"struct.std::__1::__hash_node_base.333"* %146, null
  br i1 %147, label %148, label %123

148:                                              ; preds = %117, %111, %93, %144, %136
  call void @abort() #13
  unreachable

149:                                              ; preds = %139
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %124, i64 3
  %151 = bitcast %"struct.std::__1::__hash_node_base.333"* %150 to %"class.spvtools::opt::BasicBlock"**
  %152 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %151, align 8
  %153 = load i64, i64* %71, align 8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %284, label %155

155:                                              ; preds = %149, %161
  %156 = phi i64 [ %163, %161 ], [ %153, %149 ]
  %157 = inttoptr i64 %156 to %"struct.std::__1::__hash_node.1259"*
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node.1259", %"struct.std::__1::__hash_node.1259"* %157, i64 0, i32 2
  %159 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %158, align 8
  %160 = call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEPKNS0_10BasicBlockES4_(%"class.spvtools::opt::DominatorTree"* %32, %"class.spvtools::opt::BasicBlock"* %152, %"class.spvtools::opt::BasicBlock"* %159) #11
  br i1 %160, label %165, label %161

161:                                              ; preds = %155
  %162 = inttoptr i64 %156 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %284, label %155

165:                                              ; preds = %155
  %166 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %152, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %167 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %152, i64 0, i32 2, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %166 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = inttoptr i64 %169 to %"class.spvtools::opt::Instruction"*
  %171 = icmp eq %"class.spvtools::opt::Instruction"* %167, %170
  br i1 %171, label %284, label %172

172:                                              ; preds = %165, %277
  %173 = phi %"class.spvtools::opt::Instruction"* [ %282, %277 ], [ %170, %165 ]
  %174 = phi i64 [ %281, %277 ], [ %169, %165 ]
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %72) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 bitcast (%"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* @__const._ZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS0_9IRContextEPNS0_8FunctionERKNSt3__113unordered_setIjNS6_4hashIjEENS6_8equal_toIjEENS6_9allocatorIjEEEERKNS7_IPNS0_10BasicBlockENS8_ISI_EENSA_ISI_EENSC_ISI_EEEEPNS1_13LCSSARewriterE.rewriter to i8*), i64 96, i1 false)
  store %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %4, %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"** %73, align 8
  store %"class.spvtools::opt::Instruction"* %173, %"class.spvtools::opt::Instruction"** %74, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %77, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %81, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_116MakeSetClosedSSAEPNS3_9IRContextEPNS3_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSF_IPNS3_10BasicBlockENSG_ISQ_EENSI_ISQ_EENSK_ISQ_EEEEPNSA_13LCSSARewriterEEUlS5_jE_S6_EEEEvPKNS0_16__policy_storageES5_j, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)** %84, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS5_9IRContextEPNS5_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSB_IPNS5_10BasicBlockENSC_ISM_EENSE_ISM_EENSG_ISM_EEEEPNS6_13LCSSARewriterEEUlPNS5_11InstructionEjE_FvSW_jEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_, %"struct.std::__1::__function::__policy"** %85, align 8
  %175 = call i8* @_Znwm(i64 32) #12, !noalias !11
  %176 = bitcast i8* %175 to %"class.std::__1::unordered_set.917"**
  store %"class.std::__1::unordered_set.917"* %2, %"class.std::__1::unordered_set.917"** %176, align 8
  %177 = getelementptr inbounds i8, i8* %175, i64 8
  %178 = bitcast i8* %177 to %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"**
  store %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %6, %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"** %178, align 8
  %179 = getelementptr inbounds i8, i8* %175, i64 16
  %180 = bitcast i8* %179 to %"class.std::__1::unordered_set.976"**
  store %"class.std::__1::unordered_set.976"* %3, %"class.std::__1::unordered_set.976"** %180, align 8
  %181 = getelementptr inbounds i8, i8* %175, i64 24
  %182 = bitcast i8* %181 to %"class.spvtools::opt::IRContext"**
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %182, align 8
  store i8* %175, i8** %86, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEPKNS0_11InstructionERKNSt3__18functionIFvPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"* %62, %"class.spvtools::opt::Instruction"* %173, %"class.std::__1::function.1067"* nonnull dereferenceable(32) %7) #11
  %183 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %85, align 8
  %184 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %183, i64 0, i32 1
  %185 = load void (i8*)*, void (i8*)** %184, align 8
  %186 = icmp eq void (i8*)* %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %172
  %188 = load i8*, i8** %86, align 8
  call void %185(i8* %188) #11
  br label %189

189:                                              ; preds = %172, %187
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #11
  %190 = load %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*, %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"** %73, align 8
  %191 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %190, i64 0, i32 0
  %192 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %191, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %192, i64 0, i32 11
  %194 = load i32, i32* %193, align 8
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %221

197:                                              ; preds = %189
  %198 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %192, i64 0, i32 4, i32 0, i32 0, i32 0
  %199 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %198, align 8
  %200 = call i8* @_Znwm(i64 104) #12
  %201 = bitcast i8* %200 to %"class.spvtools::opt::analysis::DefUseManager"*
  %202 = getelementptr inbounds i8, i8* %200, i64 32
  %203 = bitcast i8* %202 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %203, align 4
  %204 = getelementptr inbounds i8, i8* %200, i64 48
  %205 = getelementptr inbounds i8, i8* %200, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %204, i8 0, i64 16, i1 false) #11
  %206 = bitcast i8* %205 to i8**
  store i8* %204, i8** %206, align 8
  %207 = getelementptr inbounds i8, i8* %200, i64 64
  %208 = getelementptr inbounds i8, i8* %200, i64 96
  %209 = bitcast i8* %208 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %207, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %209, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %201, %"class.spvtools::opt::Module"* %199) #11
  %210 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %192, i64 0, i32 6
  %211 = ptrtoint i8* %200 to i64
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %210, i64 0, i32 0, i32 0, i32 0
  %213 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %212, align 8
  %214 = bitcast %"class.std::__1::unique_ptr.62"* %210 to i64*
  store i64 %211, i64* %214, align 8
  %215 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %213, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %197
  %217 = bitcast %"class.std::__1::unique_ptr.62"* %210 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %217, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %213) #11
  br label %218

218:                                              ; preds = %216, %197
  %219 = load i32, i32* %193, align 8
  %220 = or i32 %219, 1
  store i32 %220, i32* %193, align 8
  br label %221

221:                                              ; preds = %218, %189
  %222 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %192, i64 0, i32 6, i32 0, i32 0, i32 0
  %223 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %222, align 8
  %224 = load i64, i64* %88, align 8
  %225 = icmp eq i64 %224, 0
  %226 = inttoptr i64 %224 to %"struct.std::__1::__hash_node_base.1236"*
  br i1 %225, label %249, label %231

227:                                              ; preds = %231
  %228 = load i64, i64* %88, align 8
  %229 = icmp eq i64 %228, 0
  %230 = inttoptr i64 %228 to %"struct.std::__1::__hash_node_base.1236"*
  br i1 %229, label %249, label %239

231:                                              ; preds = %221, %231
  %232 = phi i64 [ %237, %231 ], [ %224, %221 ]
  %233 = inttoptr i64 %232 to %"struct.std::__1::__hash_node.1296"*
  %234 = getelementptr inbounds %"struct.std::__1::__hash_node.1296", %"struct.std::__1::__hash_node.1296"* %233, i64 0, i32 2
  %235 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %234, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %223, %"class.spvtools::opt::Instruction"* %235) #11
  %236 = inttoptr i64 %232 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %227, label %231

239:                                              ; preds = %227, %239
  %240 = phi i64 [ %245, %239 ], [ %228, %227 ]
  %241 = inttoptr i64 %240 to %"struct.std::__1::__hash_node.1296"*
  %242 = getelementptr inbounds %"struct.std::__1::__hash_node.1296", %"struct.std::__1::__hash_node.1296"* %241, i64 0, i32 2
  %243 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %242, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %223, %"class.spvtools::opt::Instruction"* %243) #11
  %244 = inttoptr i64 %240 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %239

247:                                              ; preds = %239
  %248 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %87, align 8
  br label %249

249:                                              ; preds = %247, %221, %227
  %250 = phi %"struct.std::__1::__hash_node_base.1236"* [ %248, %247 ], [ %226, %221 ], [ %230, %227 ]
  %251 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %249, %252
  %253 = phi %"struct.std::__1::__hash_node_base.1236"* [ %255, %252 ], [ %250, %249 ]
  %254 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %253, i64 0, i32 0
  %255 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %254, align 8
  %256 = bitcast %"struct.std::__1::__hash_node_base.1236"* %253 to i8*
  call void @_ZdlPv(i8* %256) #12
  %257 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %255, null
  br i1 %257, label %258, label %252

258:                                              ; preds = %252, %249
  %259 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %89, align 8
  store %"struct.std::__1::__hash_node_base.1236"** null, %"struct.std::__1::__hash_node_base.1236"*** %89, align 8
  %260 = icmp eq %"struct.std::__1::__hash_node_base.1236"** %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %258
  %262 = bitcast %"struct.std::__1::__hash_node_base.1236"** %259 to i8*
  call void @_ZdlPv(i8* %262) #12
  br label %263

263:                                              ; preds = %261, %258
  %264 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %90, align 8
  %265 = icmp eq %"struct.std::__1::__hash_node_base"* %264, null
  br i1 %265, label %272, label %266

266:                                              ; preds = %263, %266
  %267 = phi %"struct.std::__1::__hash_node_base"* [ %269, %266 ], [ %264, %263 ]
  %268 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %267, i64 0, i32 0
  %269 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %268, align 8
  %270 = bitcast %"struct.std::__1::__hash_node_base"* %267 to i8*
  call void @_ZdlPv(i8* %270) #12
  %271 = icmp eq %"struct.std::__1::__hash_node_base"* %269, null
  br i1 %271, label %272, label %266

272:                                              ; preds = %266, %263
  %273 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %91, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %91, align 8
  %274 = icmp eq %"struct.std::__1::__hash_node_base"** %273, null
  br i1 %274, label %277, label %275

275:                                              ; preds = %272
  %276 = bitcast %"struct.std::__1::__hash_node_base"** %273 to i8*
  call void @_ZdlPv(i8* %276) #12
  br label %277

277:                                              ; preds = %272, %275
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %72) #11
  %278 = inttoptr i64 %174 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %279 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %278, i64 0, i32 1
  %280 = bitcast %"class.spvtools::opt::Instruction"** %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = inttoptr i64 %281 to %"class.spvtools::opt::Instruction"*
  %283 = icmp eq %"class.spvtools::opt::Instruction"* %167, %282
  br i1 %283, label %284, label %172

284:                                              ; preds = %161, %277, %165, %149
  %285 = inttoptr i64 %94 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %92, label %93
}

declare void @_ZNK8spvtools3opt4Loop16GetMergingBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"*, %"class.std::__1::unordered_set.917"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Loop"* @_ZNK8spvtools3opt9LoopUtils9CloneLoopEPNS1_17LoopCloningResultE(%"class.spvtools::opt::LoopUtils"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.1059", align 8
  %4 = bitcast %"class.std::__1::vector.1059"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.std::__1::vector.1059", %"class.std::__1::vector.1059"* %3, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 2
  %7 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %6, align 8
  call void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"* %7, %"class.std::__1::vector.1059"* nonnull %3, i1 zeroext false, i1 zeroext false) #11
  %8 = call %"class.spvtools::opt::Loop"* @_ZNK8spvtools3opt9LoopUtils9CloneLoopEPNS1_17LoopCloningResultERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::LoopUtils"* %0, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, %"class.std::__1::vector.1059"* nonnull dereferenceable(24) %3)
  %9 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %5, align 8
  %10 = icmp eq %"class.spvtools::opt::BasicBlock"** %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.1059", %"class.std::__1::vector.1059"* %3, i64 0, i32 0, i32 1
  %13 = ptrtoint %"class.spvtools::opt::BasicBlock"** %9 to i64
  %14 = bitcast %"class.spvtools::opt::BasicBlock"*** %12 to i64*
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"class.spvtools::opt::BasicBlock"** %9 to i8*
  call void @_ZdlPv(i8* %15) #12
  br label %16

16:                                               ; preds = %2, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret %"class.spvtools::opt::Loop"* %8
}

declare void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"*, %"class.std::__1::vector.1059"*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Loop"* @_ZNK8spvtools3opt9LoopUtils9CloneLoopEPNS1_17LoopCloningResultERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::LoopUtils"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"class.std::__1::vector.1059"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.1363", align 8
  %5 = alloca %"class.std::__1::tuple.1172", align 1
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"class.std::__1::tuple.1382", align 8
  %8 = alloca %"class.std::__1::tuple.1172", align 1
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple.1172", align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::__1::tuple.1363", align 8
  %14 = alloca %"class.std::__1::tuple.1172", align 1
  %15 = alloca %"class.std::__1::tuple.1363", align 8
  %16 = alloca %"class.std::__1::tuple.1172", align 1
  %17 = alloca %"class.std::__1::tuple.1363", align 8
  %18 = alloca %"class.std::__1::tuple.1172", align 1
  %19 = alloca %"class.std::__1::tuple.1182", align 8
  %20 = alloca %"class.std::__1::tuple.1172", align 1
  %21 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %22 = alloca %"class.spvtools::utils::SmallVector", align 8
  %23 = alloca %"class.std::__1::function.1304", align 8
  %24 = alloca %"class.std::__1::tuple.1182", align 8
  %25 = alloca %"class.std::__1::tuple.1172", align 1
  %26 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %27 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %32 = alloca i32, align 4
  %33 = alloca %"class.std::__1::function.1005", align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 0
  %35 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 11
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %64

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %41, align 8
  %43 = tail call i8* @_Znwm(i64 104) #12
  %44 = bitcast i8* %43 to %"class.spvtools::opt::analysis::DefUseManager"*
  %45 = getelementptr inbounds i8, i8* %43, i64 32
  %46 = bitcast i8* %45 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %43, i64 48
  %48 = getelementptr inbounds i8, i8* %43, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #11
  %49 = bitcast i8* %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = getelementptr inbounds i8, i8* %43, i64 64
  %51 = getelementptr inbounds i8, i8* %43, i64 96
  %52 = bitcast i8* %51 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %52, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %44, %"class.spvtools::opt::Module"* %42) #11
  %53 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 6
  %54 = ptrtoint i8* %43 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %53, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.62"* %53 to i64*
  store i64 %54, i64* %57, align 8
  %58 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %56, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %40
  %60 = bitcast %"class.std::__1::unique_ptr.62"* %53 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %60, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %56) #11
  br label %61

61:                                               ; preds = %59, %40
  %62 = load i32, i32* %36, align 8
  %63 = or i32 %62, 1
  store i32 %63, i32* %36, align 8
  br label %64

64:                                               ; preds = %3, %61
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 6, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %65, align 8
  %67 = tail call i8* @_Znwm(i64 128) #12
  %68 = bitcast i8* %67 to %"class.spvtools::opt::Loop"*
  %69 = bitcast %"class.spvtools::opt::LoopUtils"* %0 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast i8* %67 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds i8, i8* %67, i64 8
  %73 = getelementptr inbounds i8, i8* %67, i64 112
  %74 = bitcast i8* %73 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 104, i1 false) #11
  store i32 1065353216, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %67, i64 120
  store i8 0, i8* %75, align 8
  %76 = inttoptr i64 %70 to %"class.spvtools::opt::IRContext"*
  %77 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %76, i64 0, i32 11
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, 16
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %97

81:                                               ; preds = %64
  %82 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %76, i64 0, i32 4, i32 0, i32 0, i32 0
  %83 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %82, align 8
  %84 = tail call i8* @_Znwm(i64 400) #12
  %85 = bitcast i8* %84 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %85, %"class.spvtools::opt::Module"* %83) #11
  %86 = ptrtoint i8* %84 to i64
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %76, i64 0, i32 15
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %88, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.273"* %87 to i64*
  store i64 %86, i64* %90, align 8
  %91 = icmp eq %"class.spvtools::opt::CFG"* %89, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %81
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %89) #11
  %93 = bitcast %"class.spvtools::opt::CFG"* %89 to i8*
  tail call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %92, %81
  %95 = load i32, i32* %77, align 8
  %96 = or i32 %95, 16
  store i32 %96, i32* %77, align 8
  br label %97

97:                                               ; preds = %64, %94
  %98 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %76, i64 0, i32 15, i32 0, i32 0, i32 0
  %99 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::vector.1059", %"class.std::__1::vector.1059"* %2, i64 0, i32 0, i32 0
  %101 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::vector.1059", %"class.std::__1::vector.1059"* %2, i64 0, i32 0, i32 1
  %103 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %102, align 8
  %104 = icmp eq %"class.spvtools::opt::BasicBlock"** %101, %103
  br i1 %104, label %165, label %105

105:                                              ; preds = %97
  %106 = bitcast %"class.spvtools::opt::BasicBlock"** %27 to i8*
  %107 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 3
  %108 = bitcast %"class.spvtools::opt::Function"** %107 to i64*
  %109 = bitcast %"class.spvtools::utils::SmallVector"* %22 to i8*
  %110 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %22, i64 0, i32 0
  %111 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %22, i64 0, i32 1
  %112 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %22, i64 0, i32 2
  %113 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %22, i64 0, i32 3, i64 0
  %114 = bitcast i32** %112 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %115 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %22, i64 0, i32 4
  %116 = bitcast %"class.std::__1::unique_ptr.0"* %115 to i64*
  %117 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %113 to i32*
  %118 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %119 = bitcast %"class.spvtools::opt::Instruction"** %21 to i8*
  %120 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  %121 = bitcast %"class.std::__1::tuple.1182"* %19 to i8*
  %122 = getelementptr inbounds %"class.std::__1::tuple.1182", %"class.std::__1::tuple.1182"* %19, i64 0, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %20, i64 0, i32 0
  %124 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 4, i32 0, i32 1
  %125 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 4
  %127 = bitcast %"class.spvtools::opt::BasicBlock"** %27 to i64*
  %128 = bitcast %"class.std::__1::unique_ptr.40"** %124 to i64*
  %129 = bitcast i32* %28 to i8*
  %130 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 2, i32 0
  %131 = bitcast %"class.std::__1::tuple.1363"* %17 to i8*
  %132 = getelementptr inbounds %"class.std::__1::tuple.1363", %"class.std::__1::tuple.1363"* %17, i64 0, i32 0, i32 0, i32 0
  %133 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %18, i64 0, i32 0
  %134 = bitcast i32* %29 to i8*
  %135 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 3, i32 0
  %136 = bitcast %"class.std::__1::tuple.1363"* %15 to i8*
  %137 = getelementptr inbounds %"class.std::__1::tuple.1363", %"class.std::__1::tuple.1363"* %15, i64 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %16, i64 0, i32 0
  %139 = bitcast i32* %30 to i8*
  %140 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 1, i32 0
  %141 = bitcast %"class.std::__1::tuple.1363"* %13 to i8*
  %142 = getelementptr inbounds %"class.std::__1::tuple.1363", %"class.std::__1::tuple.1363"* %13, i64 0, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %14, i64 0, i32 0
  %144 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 2
  %145 = bitcast i32* %12 to i8*
  %146 = bitcast %"class.spvtools::opt::Instruction"** %31 to i8*
  %147 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::tuple.1382"* %7 to i8*
  %149 = getelementptr inbounds %"class.std::__1::tuple.1382", %"class.std::__1::tuple.1382"* %7, i64 0, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %8, i64 0, i32 0
  %151 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  %152 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  %153 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %154 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %155 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %156 = bitcast i32** %154 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %157 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %158 = bitcast %"class.std::__1::unique_ptr.0"* %157 to i64*
  %159 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %155 to i32*
  %160 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %161 = bitcast i32* %32 to i8*
  %162 = bitcast %"class.std::__1::tuple.1363"* %4 to i8*
  %163 = getelementptr inbounds %"class.std::__1::tuple.1363", %"class.std::__1::tuple.1363"* %4, i64 0, i32 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %5, i64 0, i32 0
  br label %194

165:                                              ; preds = %431, %97
  %166 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 4, i32 0, i32 0
  %167 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %166, align 8
  %168 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 4, i32 0, i32 1
  %169 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %168, align 8
  %170 = icmp eq %"class.std::__1::unique_ptr.40"* %167, %169
  br i1 %170, label %522, label %171

171:                                              ; preds = %165
  %172 = bitcast %"class.std::__1::function.1005"* %33 to i8*
  %173 = ptrtoint %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1 to i64
  %174 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %33, i64 0, i32 0, i32 1, i32 0
  %175 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %33, i64 0, i32 0, i32 2
  %176 = bitcast %"class.std::__1::function.1005"* %33 to i64*
  %177 = bitcast %"class.std::__1::function.1304"* %23 to i8*
  %178 = ptrtoint %"class.std::__1::function.1005"* %33 to i64
  %179 = getelementptr inbounds %"class.std::__1::function.1304", %"class.std::__1::function.1304"* %23, i64 0, i32 0, i32 1, i32 0
  %180 = getelementptr inbounds %"class.std::__1::function.1304", %"class.std::__1::function.1304"* %23, i64 0, i32 0, i32 2
  %181 = bitcast %"class.std::__1::function.1304"* %23 to i64*
  %182 = getelementptr inbounds %"class.std::__1::function.1304", %"class.std::__1::function.1304"* %23, i64 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.std::__1::function.1304", %"class.std::__1::function.1304"* %23, i64 0, i32 0, i32 0, i32 0
  %184 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %33, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.spvtools::opt::Instruction"** %26 to i8*
  %186 = bitcast %"class.std::__1::tuple.1182"* %24 to i8*
  %187 = getelementptr inbounds %"class.std::__1::tuple.1182", %"class.std::__1::tuple.1182"* %24, i64 0, i32 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %25, i64 0, i32 0
  %189 = bitcast i32* %11 to i8*
  %190 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %99, i64 0, i32 5, i32 0
  %191 = bitcast %"class.std::__1::tuple"* %9 to i8*
  %192 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  %193 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %10, i64 0, i32 0
  br label %523

194:                                              ; preds = %105, %431
  %195 = phi %"class.spvtools::opt::BasicBlock"** [ %101, %105 ], [ %432, %431 ]
  %196 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %195, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #11
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %27, align 8
  %197 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %198 = call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt10BasicBlock5CloneEPNS0_9IRContextE(%"class.spvtools::opt::BasicBlock"* %196, %"class.spvtools::opt::IRContext"* %197) #11
  store %"class.spvtools::opt::BasicBlock"* %198, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %199 = load i64, i64* %108, align 8
  %200 = bitcast %"class.spvtools::opt::BasicBlock"* %198 to i64*
  store i64 %199, i64* %200, align 8
  %201 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %202 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %201, i64 0, i32 1, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %202, align 8
  %204 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %205 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %204, i64 0, i32 4, i32 0, i32 0, i32 0
  %206 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %205, align 8
  %207 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %206) #11
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %221

209:                                              ; preds = %194
  %210 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %204, i64 0, i32 5, i32 0, i32 2
  %211 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %210, align 8
  %212 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %211, i64 0, i32 2
  %213 = load i8, i8* %212, align 8, !range !3
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %215, label %221

215:                                              ; preds = %209
  %216 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %216, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i1 false) #11
  %217 = getelementptr inbounds i8, i8* %216, i64 37
  store i8 0, i8* %217, align 1
  %218 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %204, i64 0, i32 5, i32 0, i32 1, i32 0
  %219 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %218, align 8
  %220 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %204, i64 0, i32 5, i32 0, i32 0
  call void %219(%"union.std::__1::__function::__policy_storage"* %220, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %216) #11
  call void @_ZdlPv(i8* nonnull %216) #12
  br label %221

221:                                              ; preds = %194, %209, %215
  %222 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %203, i64 0, i32 3
  %223 = load i8, i8* %222, align 4, !range !3
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %109) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %113, %"struct.std::__1::aligned_storage<4, 4>::type"** %114, align 8
  store i64 0, i64* %116, align 8
  store i64 1, i64* %111, align 8
  store i32 %207, i32* %117, align 8
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %203, i64 0, i32 6, i32 0, i32 0
  %226 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %225, align 8
  %227 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %226, i64 %224, i32 1
  %228 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %227, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %22) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %229 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %118, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %118, align 8
  %230 = icmp eq %"class.std::__1::vector.3"* %229, null
  br i1 %230, label %242, label %231

231:                                              ; preds = %221
  %232 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %229, i64 0, i32 0, i32 0
  %233 = load i32*, i32** %232, align 8
  %234 = icmp eq i32* %233, null
  br i1 %234, label %240, label %235

235:                                              ; preds = %231
  %236 = ptrtoint i32* %233 to i64
  %237 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %229, i64 0, i32 0, i32 1
  %238 = bitcast i32** %237 to i64*
  store i64 %236, i64* %238, align 8
  %239 = bitcast i32* %233 to i8*
  call void @_ZdlPv(i8* %239) #12
  br label %240

240:                                              ; preds = %235, %231
  %241 = bitcast %"class.std::__1::vector.3"* %229 to i8*
  call void @_ZdlPv(i8* %241) #12
  br label %242

242:                                              ; preds = %221, %240
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %109) #11
  %243 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %244 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %243, i64 0, i32 1, i32 0, i32 0, i32 0
  %245 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %244, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %66, %"class.spvtools::opt::Instruction"* %245) #11
  %246 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %247 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %248 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %247, i64 0, i32 1, i32 0, i32 0, i32 0
  %249 = bitcast %"class.spvtools::opt::Instruction"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119)
  store i64 %250, i64* %120, align 8
  %251 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %246, i64 0, i32 11
  %252 = load i32, i32* %251, align 8
  %253 = and i32 %252, 2
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %261, label %255

255:                                              ; preds = %242
  %256 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %246, i64 0, i32 9, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #11
  store %"class.spvtools::opt::Instruction"** %21, %"class.spvtools::opt::Instruction"*** %122, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %123) #11
  %257 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %256, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %21, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1182"* nonnull dereferenceable(8) %19, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %20) #11
  %258 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %257, 0
  %259 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %258, i64 3
  %260 = bitcast %"struct.std::__1::__hash_node_base.178"* %259 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %123) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #11
  store %"class.spvtools::opt::BasicBlock"* %247, %"class.spvtools::opt::BasicBlock"** %260, align 8
  br label %261

261:                                              ; preds = %242, %255
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119)
  %262 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %124, align 8
  %263 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %125, align 8
  %264 = icmp ult %"class.std::__1::unique_ptr.40"* %262, %263
  br i1 %264, label %265, label %270

265:                                              ; preds = %261
  %266 = load i64, i64* %127, align 8
  %267 = bitcast %"class.std::__1::unique_ptr.40"* %262 to i64*
  store i64 %266, i64* %267, align 8
  %268 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %262, i64 1
  %269 = ptrtoint %"class.std::__1::unique_ptr.40"* %268 to i64
  store i64 %269, i64* %128, align 8
  br label %271

270:                                              ; preds = %261
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJRPS4_EEEvDpOT_(%"class.std::__1::vector.38"* %126, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %27) #11
  br label %271

271:                                              ; preds = %265, %270
  %272 = load i64, i64* %127, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129) #11
  %273 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %196, i64 0, i32 1, i32 0, i32 0, i32 0
  %274 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %273, align 8
  %275 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %274, i64 0, i32 4
  %276 = load i8, i8* %275, align 1, !range !3
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %283, label %278

278:                                              ; preds = %271
  %279 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %274, i64 0, i32 3
  %280 = load i8, i8* %279, align 4, !range !3
  %281 = zext i8 %280 to i32
  %282 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %274, i32 %281) #11
  br label %283

283:                                              ; preds = %271, %278
  %284 = phi i32 [ %282, %278 ], [ 0, %271 ]
  store i32 %284, i32* %28, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #11
  store i32* %28, i32** %132, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %133) #11
  %285 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %130, i32* nonnull dereferenceable(4) %28, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1363"* nonnull dereferenceable(8) %17, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %18) #11
  %286 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %285, 0
  %287 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %286, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %133) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #11
  %288 = bitcast %"struct.std::__1::__hash_node_base.333"* %287 to i64*
  store i64 %272, i64* %288, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129) #11
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134) #11
  %289 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %290 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %289, i64 0, i32 1, i32 0, i32 0, i32 0
  %291 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %290, align 8
  %292 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %291, i64 0, i32 4
  %293 = load i8, i8* %292, align 1, !range !3
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %300, label %295

295:                                              ; preds = %283
  %296 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %291, i64 0, i32 3
  %297 = load i8, i8* %296, align 4, !range !3
  %298 = zext i8 %297 to i32
  %299 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %291, i32 %298) #11
  br label %300

300:                                              ; preds = %283, %295
  %301 = phi i32 [ %299, %295 ], [ 0, %283 ]
  store i32 %301, i32* %29, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #11
  store i32* %29, i32** %137, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %138) #11
  %302 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %135, i32* nonnull dereferenceable(4) %29, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1363"* nonnull dereferenceable(8) %15, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %16) #11
  %303 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %302, 0
  %304 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %303, i64 3
  %305 = bitcast %"struct.std::__1::__hash_node_base.333"* %304 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %138) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #11
  store %"class.spvtools::opt::BasicBlock"* %196, %"class.spvtools::opt::BasicBlock"** %305, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134) #11
  %306 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %306, i64 0, i32 1, i32 0, i32 0, i32 0
  %308 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %307, align 8
  %309 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %308, i64 0, i32 4
  %310 = load i8, i8* %309, align 1, !range !3
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %317, label %312

312:                                              ; preds = %300
  %313 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %308, i64 0, i32 3
  %314 = load i8, i8* %313, align 4, !range !3
  %315 = zext i8 %314 to i32
  %316 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %308, i32 %315) #11
  br label %317

317:                                              ; preds = %300, %312
  %318 = phi i32 [ %316, %312 ], [ 0, %300 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %139) #11
  %319 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %273, align 8
  %320 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %319, i64 0, i32 4
  %321 = load i8, i8* %320, align 1, !range !3
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %328, label %323

323:                                              ; preds = %317
  %324 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %319, i64 0, i32 3
  %325 = load i8, i8* %324, align 4, !range !3
  %326 = zext i8 %325 to i32
  %327 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %319, i32 %326) #11
  br label %328

328:                                              ; preds = %317, %323
  %329 = phi i32 [ %327, %323 ], [ 0, %317 ]
  store i32 %329, i32* %30, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #11
  store i32* %30, i32** %142, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %143) #11
  %330 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %140, i32* nonnull dereferenceable(4) %30, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1363"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %14) #11
  %331 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %330, 0
  %332 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %331, i64 2
  %333 = bitcast %"struct.std::__1::__hash_node_base.254"* %332 to %"struct.std::__1::pair.1371"*
  %334 = getelementptr inbounds %"struct.std::__1::pair.1371", %"struct.std::__1::pair.1371"* %333, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %143) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #11
  store i32 %318, i32* %334, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %139) #11
  %335 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %144, align 8
  %336 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %273, align 8
  %337 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %336, i64 0, i32 4
  %338 = load i8, i8* %337, align 1, !range !3
  %339 = icmp eq i8 %338, 0
  br i1 %339, label %345, label %340

340:                                              ; preds = %328
  %341 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %336, i64 0, i32 3
  %342 = load i8, i8* %341, align 4, !range !3
  %343 = zext i8 %342 to i32
  %344 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %336, i32 %343) #11
  br label %345

345:                                              ; preds = %340, %328
  %346 = phi i32 [ %344, %340 ], [ 0, %328 ]
  %347 = zext i32 %346 to i64
  %348 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %335, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %349 = load i64, i64* %348, align 8
  %350 = icmp eq i64 %349, 0
  br i1 %350, label %421, label %351

351:                                              ; preds = %345
  %352 = call i64 @llvm.ctpop.i64(i64 %349) #11, !range !2
  %353 = icmp ugt i64 %352, 1
  br i1 %353, label %357, label %354

354:                                              ; preds = %351
  %355 = add i64 %349, 4294967295
  %356 = and i64 %355, %347
  br label %361

357:                                              ; preds = %351
  %358 = icmp ugt i64 %349, %347
  br i1 %358, label %361, label %359

359:                                              ; preds = %357
  %360 = urem i64 %347, %349
  br label %361

361:                                              ; preds = %359, %357, %354
  %362 = phi i64 [ %356, %354 ], [ %360, %359 ], [ %347, %357 ]
  %363 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %335, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %363, align 8
  %365 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %364, i64 %362
  %366 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %365, align 8
  %367 = icmp eq %"struct.std::__1::__hash_node_base.922"* %366, null
  br i1 %367, label %421, label %368

368:                                              ; preds = %361
  %369 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %366, i64 0, i32 0
  %370 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %369, align 8
  %371 = icmp eq %"struct.std::__1::__hash_node_base.922"* %370, null
  br i1 %371, label %421, label %372

372:                                              ; preds = %368
  %373 = add i64 %349, -1
  br label %374

374:                                              ; preds = %395, %372
  %375 = phi %"struct.std::__1::__hash_node_base.922"* [ %370, %372 ], [ %397, %395 ]
  %376 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %375, i64 1
  %377 = bitcast %"struct.std::__1::__hash_node_base.922"* %376 to i64*
  %378 = load i64, i64* %377, align 8
  %379 = icmp eq i64 %378, %347
  br i1 %379, label %390, label %380

380:                                              ; preds = %374
  br i1 %353, label %383, label %381

381:                                              ; preds = %380
  %382 = and i64 %378, %373
  br label %387

383:                                              ; preds = %380
  %384 = icmp ult i64 %378, %349
  br i1 %384, label %387, label %385

385:                                              ; preds = %383
  %386 = urem i64 %378, %349
  br label %387

387:                                              ; preds = %385, %383, %381
  %388 = phi i64 [ %382, %381 ], [ %386, %385 ], [ %378, %383 ]
  %389 = icmp eq i64 %388, %362
  br i1 %389, label %395, label %421

390:                                              ; preds = %374
  %391 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %375, i64 2
  %392 = bitcast %"struct.std::__1::__hash_node_base.922"* %391 to i32*
  %393 = load i32, i32* %392, align 4
  %394 = icmp eq i32 %393, %346
  br i1 %394, label %399, label %395

395:                                              ; preds = %390, %387
  %396 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %375, i64 0, i32 0
  %397 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %396, align 8
  %398 = icmp eq %"struct.std::__1::__hash_node_base.922"* %397, null
  br i1 %398, label %421, label %374

399:                                              ; preds = %390
  %400 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %401 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %400, i64 0, i32 1, i32 0, i32 0, i32 0
  %402 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %401, align 8
  %403 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %402, i64 0, i32 4
  %404 = load i8, i8* %403, align 1, !range !3
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %411, label %406

406:                                              ; preds = %399
  %407 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %402, i64 0, i32 3
  %408 = load i8, i8* %407, align 4, !range !3
  %409 = zext i8 %408 to i32
  %410 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %402, i32 %409) #11
  br label %411

411:                                              ; preds = %406, %399
  %412 = phi i32 [ %410, %406 ], [ 0, %399 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #11
  store i32 %412, i32* %12, align 4
  br label %413

413:                                              ; preds = %411, %413
  %414 = phi %"class.spvtools::opt::Loop"* [ %418, %413 ], [ %68, %411 ]
  %415 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %414, i64 0, i32 8, i32 0
  %416 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %415, i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %12) #11
  %417 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %414, i64 0, i32 6
  %418 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %417, align 8
  %419 = icmp eq %"class.spvtools::opt::Loop"* %418, null
  br i1 %419, label %420, label %413

420:                                              ; preds = %413
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #11
  br label %421

421:                                              ; preds = %387, %395, %368, %345, %361, %420
  %422 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %423 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %422, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %424 = bitcast %"class.spvtools::opt::Instruction"** %423 to i64*
  %425 = load i64, i64* %424, align 8
  %426 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %422, i64 0, i32 2, i32 0, i32 1
  %427 = inttoptr i64 %425 to %"class.spvtools::opt::Instruction"*
  %428 = icmp eq %"class.spvtools::opt::Instruction"* %426, %427
  br i1 %428, label %431, label %429

429:                                              ; preds = %421
  %430 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %196, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  br label %434

431:                                              ; preds = %511, %421
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #11
  %432 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %195, i64 1
  %433 = icmp eq %"class.spvtools::opt::BasicBlock"** %432, %103
  br i1 %433, label %165, label %194

434:                                              ; preds = %429, %511
  %435 = phi %"class.spvtools::opt::Instruction"* [ %520, %511 ], [ %427, %429 ]
  %436 = phi i64 [ %517, %511 ], [ %425, %429 ]
  %437 = phi %"class.spvtools::opt::Instruction"** [ %515, %511 ], [ %430, %429 ]
  %438 = bitcast %"class.spvtools::opt::Instruction"** %437 to i64*
  %439 = load i64, i64* %438, align 8
  %440 = inttoptr i64 %439 to %"class.spvtools::opt::Instruction"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #11
  store %"class.spvtools::opt::Instruction"* %435, %"class.spvtools::opt::Instruction"** %31, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #11
  store %"class.spvtools::opt::Instruction"** %31, %"class.spvtools::opt::Instruction"*** %149, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %150) #11
  %441 = call { %"struct.std::__1::__hash_node_base.1040"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1036"* %147, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %31, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1382"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %8) #11
  %442 = extractvalue { %"struct.std::__1::__hash_node_base.1040"*, i8 } %441, 0
  %443 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %442, i64 3
  %444 = bitcast %"struct.std::__1::__hash_node_base.1040"* %443 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %150) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #11
  store %"class.spvtools::opt::Instruction"* %440, %"class.spvtools::opt::Instruction"** %444, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #11
  %445 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %435, i64 0, i32 4
  %446 = load i8, i8* %445, align 1, !range !3
  %447 = icmp eq i8 %446, 0
  br i1 %447, label %511, label %448

448:                                              ; preds = %434
  %449 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %450 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %449, i64 0, i32 4, i32 0, i32 0, i32 0
  %451 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %450, align 8
  %452 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %451) #11
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %466

454:                                              ; preds = %448
  %455 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %449, i64 0, i32 5, i32 0, i32 2
  %456 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %455, align 8
  %457 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %456, i64 0, i32 2
  %458 = load i8, i8* %457, align 8, !range !3
  %459 = icmp eq i8 %458, 0
  br i1 %459, label %460, label %466

460:                                              ; preds = %454
  %461 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %461, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i1 false) #11
  %462 = getelementptr inbounds i8, i8* %461, i64 37
  store i8 0, i8* %462, align 1
  %463 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %449, i64 0, i32 5, i32 0, i32 1, i32 0
  %464 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %463, align 8
  %465 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %449, i64 0, i32 5, i32 0, i32 0
  call void %464(%"union.std::__1::__function::__policy_storage"* %465, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %461) #11
  call void @_ZdlPv(i8* nonnull %461) #12
  br label %466

466:                                              ; preds = %448, %454, %460
  %467 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %435, i64 0, i32 3
  %468 = load i8, i8* %467, align 4, !range !3
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %151) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %152, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %155, %"struct.std::__1::aligned_storage<4, 4>::type"** %156, align 8
  store i64 0, i64* %158, align 8
  store i64 1, i64* %153, align 8
  store i32 %452, i32* %159, align 8
  %469 = zext i8 %468 to i64
  %470 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %435, i64 0, i32 6, i32 0, i32 0
  %471 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %470, align 8
  %472 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %471, i64 %469, i32 1
  %473 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %472, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %152, align 8
  %474 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %160, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %160, align 8
  %475 = icmp eq %"class.std::__1::vector.3"* %474, null
  br i1 %475, label %487, label %476

476:                                              ; preds = %466
  %477 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %474, i64 0, i32 0, i32 0
  %478 = load i32*, i32** %477, align 8
  %479 = icmp eq i32* %478, null
  br i1 %479, label %485, label %480

480:                                              ; preds = %476
  %481 = ptrtoint i32* %478 to i64
  %482 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %474, i64 0, i32 0, i32 1
  %483 = bitcast i32** %482 to i64*
  store i64 %481, i64* %483, align 8
  %484 = bitcast i32* %478 to i8*
  call void @_ZdlPv(i8* %484) #12
  br label %485

485:                                              ; preds = %480, %476
  %486 = bitcast %"class.std::__1::vector.3"* %474 to i8*
  call void @_ZdlPv(i8* %486) #12
  br label %487

487:                                              ; preds = %466, %485
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %151) #11
  %488 = load i8, i8* %445, align 1, !range !3
  %489 = icmp eq i8 %488, 0
  br i1 %489, label %494, label %490

490:                                              ; preds = %487
  %491 = load i8, i8* %467, align 4, !range !3
  %492 = zext i8 %491 to i32
  %493 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %435, i32 %492) #11
  br label %494

494:                                              ; preds = %487, %490
  %495 = phi i32 [ %493, %490 ], [ 0, %487 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %161) #11
  %496 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %440, i64 0, i32 4
  %497 = load i8, i8* %496, align 1, !range !3
  %498 = icmp eq i8 %497, 0
  br i1 %498, label %504, label %499

499:                                              ; preds = %494
  %500 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %440, i64 0, i32 3
  %501 = load i8, i8* %500, align 4, !range !3
  %502 = zext i8 %501 to i32
  %503 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %440, i32 %502) #11
  br label %504

504:                                              ; preds = %494, %499
  %505 = phi i32 [ %503, %499 ], [ 0, %494 ]
  store i32 %505, i32* %32, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #11
  store i32* %32, i32** %163, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %164) #11
  %506 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %140, i32* nonnull dereferenceable(4) %32, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1363"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %5) #11
  %507 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %506, 0
  %508 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %507, i64 2
  %509 = bitcast %"struct.std::__1::__hash_node_base.254"* %508 to %"struct.std::__1::pair.1371"*
  %510 = getelementptr inbounds %"struct.std::__1::pair.1371", %"struct.std::__1::pair.1371"* %509, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %164) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #11
  store i32 %495, i32* %510, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %161) #11
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %66, %"class.spvtools::opt::Instruction"* %435) #11
  br label %511

511:                                              ; preds = %434, %504
  %512 = inttoptr i64 %436 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %513 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %512, i64 0, i32 1
  %514 = inttoptr i64 %439 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %515 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %514, i64 0, i32 1
  %516 = bitcast %"class.spvtools::opt::Instruction"** %513 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %519 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %518, i64 0, i32 2, i32 0, i32 1
  %520 = inttoptr i64 %517 to %"class.spvtools::opt::Instruction"*
  %521 = icmp eq %"class.spvtools::opt::Instruction"* %519, %520
  br i1 %521, label %431, label %434

522:                                              ; preds = %544, %165
  call void @_ZNK8spvtools3opt9LoopUtils16PopulateLoopNestEPNS0_4LoopERKNS1_17LoopCloningResultE(%"class.spvtools::opt::LoopUtils"* %0, %"class.spvtools::opt::Loop"* nonnull %68, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* dereferenceable(184) %1)
  ret %"class.spvtools::opt::Loop"* %68

523:                                              ; preds = %171, %544
  %524 = phi %"class.std::__1::unique_ptr.40"* [ %167, %171 ], [ %550, %544 ]
  %525 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %524, i64 0, i32 0, i32 0, i32 0
  %526 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %525, align 8
  %527 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %526, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %528 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %526, i64 0, i32 2, i32 0, i32 1
  %529 = bitcast %"class.spvtools::opt::Instruction"** %527 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = inttoptr i64 %530 to %"class.spvtools::opt::Instruction"*
  %532 = icmp eq %"class.spvtools::opt::Instruction"* %528, %531
  br i1 %532, label %533, label %552

533:                                              ; preds = %606, %523
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %189) #11
  store i32 -1431655766, i32* %11, align 4
  %534 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %526, i64 0, i32 1, i32 0, i32 0, i32 0
  %535 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %534, align 8
  %536 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %535, i64 0, i32 4
  %537 = load i8, i8* %536, align 1, !range !3
  %538 = icmp eq i8 %537, 0
  br i1 %538, label %544, label %539

539:                                              ; preds = %533
  %540 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %535, i64 0, i32 3
  %541 = load i8, i8* %540, align 4, !range !3
  %542 = zext i8 %541 to i32
  %543 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %535, i32 %542) #11
  br label %544

544:                                              ; preds = %533, %539
  %545 = phi i32 [ %543, %539 ], [ 0, %533 ]
  store i32 %545, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #11
  store i32* %11, i32** %192, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %193) #11
  %546 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %190, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %10) #11
  %547 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %546, 0
  %548 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %547, i64 3
  %549 = bitcast %"struct.std::__1::__hash_node_base.333"* %548 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %193) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #11
  store %"class.spvtools::opt::BasicBlock"* %526, %"class.spvtools::opt::BasicBlock"** %549, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %99, %"class.spvtools::opt::BasicBlock"* %526) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %189) #11
  %550 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %524, i64 1
  %551 = icmp eq %"class.std::__1::unique_ptr.40"* %550, %169
  br i1 %551, label %522, label %523

552:                                              ; preds = %523, %606
  %553 = phi %"class.spvtools::opt::Instruction"* [ %611, %606 ], [ %531, %523 ]
  %554 = phi i64 [ %610, %606 ], [ %530, %523 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %172) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt9LoopUtils9CloneLoopEPNS9_17LoopCloningResultERKNS_6vectorIPNS8_10BasicBlockENS_9allocatorISE_EEEEE3$_6S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %174, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt9LoopUtils9CloneLoopEPNS6_17LoopCloningResultERKNS_6vectorIPNS5_10BasicBlockENS_9allocatorISB_EEEEE3$_6FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %175, align 8
  store i64 %173, i64* %176, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %177) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %179, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %180, align 8
  store i64 %178, i64* %181, align 8
  %555 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %553, i64 0, i32 6, i32 0, i32 0
  %556 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %555, align 8
  %557 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %553, i64 0, i32 6, i32 0, i32 1
  %558 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %557, align 8
  %559 = icmp eq %"struct.spvtools::opt::Operand"* %556, %558
  br i1 %559, label %580, label %560

560:                                              ; preds = %552, %575
  %561 = phi %"struct.spvtools::opt::Operand"* [ %576, %575 ], [ %556, %552 ]
  %562 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %561, i64 0, i32 0
  %563 = load i32, i32* %562, align 8
  %564 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %563) #11
  br i1 %564, label %565, label %575

565:                                              ; preds = %560
  %566 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %561, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %567 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %566, align 8
  %568 = icmp eq %"class.std::__1::vector.3"* %567, null
  %569 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %567, i64 0, i32 0, i32 0
  %570 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %561, i64 0, i32 1, i32 2
  %571 = select i1 %568, i32** %570, i32** %569
  %572 = load i32*, i32** %571, align 8
  %573 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %179, align 8
  %574 = call zeroext i1 %573(%"union.std::__1::__function::__policy_storage"* nonnull %182, i32* %572) #11
  br i1 %574, label %575, label %578

575:                                              ; preds = %565, %560
  %576 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %561, i64 1
  %577 = icmp eq %"struct.spvtools::opt::Operand"* %576, %558
  br i1 %577, label %578, label %560

578:                                              ; preds = %575, %565
  %579 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %180, align 8
  br label %580

580:                                              ; preds = %578, %552
  %581 = phi %"struct.std::__1::__function::__policy"* [ %579, %578 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %552 ]
  %582 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %581, i64 0, i32 1
  %583 = load void (i8*)*, void (i8*)** %582, align 8
  %584 = icmp eq void (i8*)* %583, null
  br i1 %584, label %587, label %585

585:                                              ; preds = %580
  %586 = load i8*, i8** %183, align 8
  call void %583(i8* %586) #11
  br label %587

587:                                              ; preds = %580, %585
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %177) #11
  %588 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %175, align 8
  %589 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %588, i64 0, i32 1
  %590 = load void (i8*)*, void (i8*)** %589, align 8
  %591 = icmp eq void (i8*)* %590, null
  br i1 %591, label %594, label %592

592:                                              ; preds = %587
  %593 = load i8*, i8** %184, align 8
  call void %590(i8* %593) #11
  br label %594

594:                                              ; preds = %587, %592
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %172) #11
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %66, %"class.spvtools::opt::Instruction"* %553) #11
  %595 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185)
  store %"class.spvtools::opt::Instruction"* %553, %"class.spvtools::opt::Instruction"** %26, align 8
  %596 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %595, i64 0, i32 11
  %597 = load i32, i32* %596, align 8
  %598 = and i32 %597, 2
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %606, label %600

600:                                              ; preds = %594
  %601 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %595, i64 0, i32 9, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #11
  store %"class.spvtools::opt::Instruction"** %26, %"class.spvtools::opt::Instruction"*** %187, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %188) #11
  %602 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %601, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %26, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1182"* nonnull dereferenceable(8) %24, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %25) #11
  %603 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %602, 0
  %604 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %603, i64 3
  %605 = bitcast %"struct.std::__1::__hash_node_base.178"* %604 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %188) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #11
  store %"class.spvtools::opt::BasicBlock"* %526, %"class.spvtools::opt::BasicBlock"** %605, align 8
  br label %606

606:                                              ; preds = %594, %600
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185)
  %607 = inttoptr i64 %554 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %608 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %607, i64 0, i32 1
  %609 = bitcast %"class.spvtools::opt::Instruction"** %608 to i64*
  %610 = load i64, i64* %609, align 8
  %611 = inttoptr i64 %610 to %"class.spvtools::opt::Instruction"*
  %612 = icmp eq %"class.spvtools::opt::Instruction"* %528, %611
  br i1 %612, label %533, label %552
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS1_17LoopCloningResultE(%"class.spvtools::opt::LoopUtils"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1304", align 8
  %4 = alloca %"class.std::__1::vector.1059", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::unique_ptr.40", align 8
  %7 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %8 = alloca %"class.std::__1::function.1005", align 8
  %9 = alloca %"class.std::__1::function.1067", align 8
  %10 = alloca %"class.std::__1::function.1067", align 8
  %11 = bitcast %"class.std::__1::vector.1059"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::vector.1059", %"class.std::__1::vector.1059"* %4, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #11
  %13 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 2
  %14 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %13, align 8
  call void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"* %14, %"class.std::__1::vector.1059"* nonnull %4, i1 zeroext false, i1 zeroext false) #11
  %15 = call %"class.spvtools::opt::Loop"* @_ZNK8spvtools3opt9LoopUtils9CloneLoopEPNS1_17LoopCloningResultERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::LoopUtils"* %0, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, %"class.std::__1::vector.1059"* nonnull dereferenceable(24) %4) #11
  %16 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %12, align 8
  %17 = icmp eq %"class.spvtools::opt::BasicBlock"** %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.std::__1::vector.1059", %"class.std::__1::vector.1059"* %4, i64 0, i32 0, i32 1
  %20 = ptrtoint %"class.spvtools::opt::BasicBlock"** %16 to i64
  %21 = bitcast %"class.spvtools::opt::BasicBlock"*** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.spvtools::opt::BasicBlock"** %16 to i8*
  call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %24 = call i8* @_Znwm(i64 112) #12
  %25 = bitcast i8* %24 to %"class.spvtools::opt::Instruction"*
  %26 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 0
  %27 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %27, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %28, align 8
  %30 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %29) #11
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %27, i64 0, i32 5, i32 0, i32 2
  %34 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %34, i64 0, i32 2
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %32
  %39 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %39, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i1 false) #11
  %40 = getelementptr inbounds i8, i8* %39, i64 37
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %27, i64 0, i32 5, i32 0, i32 1, i32 0
  %42 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %41, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %27, i64 0, i32 5, i32 0, i32 0
  call void %42(%"union.std::__1::__function::__policy_storage"* %43, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %39) #11
  call void @_ZdlPv(i8* nonnull %39) #12
  br label %44

44:                                               ; preds = %23, %32, %38
  %45 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #11
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %25, %"class.spvtools::opt::IRContext"* %27, i32 248, i32 0, i32 %30, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #11
  %46 = ptrtoint i8* %24 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %48 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %47, align 8
  %49 = icmp eq %"struct.spvtools::opt::Operand"* %48, null
  br i1 %49, label %80, label %50

50:                                               ; preds = %44
  %51 = bitcast %"struct.spvtools::opt::Operand"* %48 to i8*
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = icmp eq %"struct.spvtools::opt::Operand"* %53, %48
  br i1 %54, label %78, label %55

55:                                               ; preds = %50, %73
  %56 = phi %"struct.spvtools::opt::Operand"* [ %57, %73 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %56, i64 -1
  %58 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %56, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %56, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %59, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %59, align 8
  %61 = icmp eq %"class.std::__1::vector.3"* %60, null
  br i1 %61, label %73, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %60, i64 0, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = icmp eq i32* %64, null
  br i1 %65, label %71, label %66

66:                                               ; preds = %62
  %67 = ptrtoint i32* %64 to i64
  %68 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %60, i64 0, i32 0, i32 1
  %69 = bitcast i32** %68 to i64*
  store i64 %67, i64* %69, align 8
  %70 = bitcast i32* %64 to i8*
  call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %66, %62
  %72 = bitcast %"class.std::__1::vector.3"* %60 to i8*
  call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %71, %55
  %74 = icmp eq %"struct.spvtools::opt::Operand"* %57, %48
  br i1 %74, label %75, label %55

75:                                               ; preds = %73
  %76 = bitcast %"class.std::__1::vector"* %5 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %50
  %79 = phi i8* [ %77, %75 ], [ %51, %50 ]
  store %"struct.spvtools::opt::Operand"* %48, %"struct.spvtools::opt::Operand"** %52, align 8
  call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %44, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #11
  %81 = bitcast %"class.std::__1::unique_ptr.40"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #11
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = call i8* @_Znwm(i64 136) #12
  %84 = bitcast i8* %83 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %84, align 8
  %85 = getelementptr inbounds i8, i8* %83, i64 8
  %86 = bitcast i8* %85 to i64*
  store i64 %46, i64* %86, align 8
  %87 = getelementptr inbounds i8, i8* %83, i64 16
  %88 = bitcast i8* %87 to i32 (...)***
  %89 = getelementptr inbounds i8, i8* %83, i64 24
  %90 = bitcast i8* %89 to i32 (...)***
  %91 = getelementptr inbounds i8, i8* %83, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %92 = getelementptr inbounds i8, i8* %83, i64 56
  %93 = getelementptr inbounds i8, i8* %83, i64 72
  %94 = bitcast i8* %93 to i32*
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds i8, i8* %83, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 14, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 56, i1 false) #11
  %96 = bitcast i8* %91 to i8**
  store i8* %89, i8** %96, align 8
  %97 = getelementptr inbounds i8, i8* %83, i64 40
  %98 = bitcast i8* %97 to i8**
  store i8* %89, i8** %98, align 8
  %99 = getelementptr inbounds i8, i8* %83, i64 48
  store i8 1, i8* %99, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %88, align 8
  %100 = ptrtoint i8* %83 to i64
  %101 = bitcast %"class.std::__1::unique_ptr.40"* %6 to i64*
  store i64 %100, i64* %101, align 8
  %102 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %13, align 8
  %103 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %102, i64 0, i32 3
  %104 = bitcast %"class.spvtools::opt::BasicBlock"** %103 to i64**
  %105 = load i64*, i64** %104, align 8
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %83 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"class.spvtools::opt::InstructionBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %7, i64 0, i32 1
  %110 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %7, i64 0, i32 3
  %111 = bitcast %"class.spvtools::opt::LoopUtils"* %0 to i64*
  %112 = bitcast %"class.spvtools::opt::InstructionBuilder"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false)
  %113 = load i64, i64* %111, align 8
  %114 = getelementptr inbounds i8, i8* %83, i64 24
  %115 = ptrtoint i8* %114 to i64
  %116 = bitcast %"class.spvtools::opt::InstructionBuilder"* %7 to i64*
  store i64 %113, i64* %116, align 8
  %117 = bitcast %"class.spvtools::opt::BasicBlock"** %109 to i8**
  store i8* %83, i8** %117, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %7, i64 0, i32 2
  %119 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %118 to i64*
  store i64 %115, i64* %119, align 8
  store i32 0, i32* %110, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %102, i64 0, i32 1
  %121 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %120, align 8
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %121, i64 0, i32 1, i32 0, i32 0, i32 0
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %122, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 4
  %125 = load i8, i8* %124, align 1, !range !3
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %132, label %127

127:                                              ; preds = %80
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 3
  %129 = load i8, i8* %128, align 4, !range !3
  %130 = zext i8 %129 to i32
  %131 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %123, i32 %130) #11
  br label %132

132:                                              ; preds = %80, %127
  %133 = phi i32 [ %131, %127 ], [ 0, %80 ]
  %134 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %7, i32 %133)
  %135 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %13, align 8
  %136 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %135, i64 0, i32 3
  %137 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %136, align 8
  %138 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %137, i64 0, i32 1, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %138, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %139, i64 0, i32 4
  %141 = load i8, i8* %140, align 1, !range !3
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %149, label %143

143:                                              ; preds = %132
  %144 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %139, i64 0, i32 3
  %145 = load i8, i8* %144, align 4, !range !3
  %146 = zext i8 %145 to i32
  %147 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %139, i32 %146) #11
  %148 = zext i32 %147 to i64
  br label %149

149:                                              ; preds = %132, %143
  %150 = phi i64 [ %148, %143 ], [ 0, %132 ]
  %151 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %151, i64 0, i32 1, i32 0, i32 0, i32 0
  %153 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %152, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %153, i64 0, i32 4
  %155 = load i8, i8* %154, align 1, !range !3
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %162, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %153, i64 0, i32 3
  %159 = load i8, i8* %158, align 4, !range !3
  %160 = zext i8 %159 to i32
  %161 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %153, i32 %160) #11
  br label %162

162:                                              ; preds = %149, %157
  %163 = phi i32 [ %161, %157 ], [ 0, %149 ]
  %164 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 4
  %165 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %164, i64 0, i32 0, i32 0
  %166 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %165, align 8
  %167 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 4, i32 0, i32 1
  %168 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %167, align 8
  %169 = icmp eq %"class.std::__1::unique_ptr.40"* %166, %168
  br i1 %169, label %186, label %170

170:                                              ; preds = %162
  %171 = bitcast %"class.std::__1::function.1005"* %8 to i8*
  %172 = zext i32 %163 to i64
  %173 = shl nuw i64 %172, 32
  %174 = or i64 %173, %150
  %175 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %8, i64 0, i32 0, i32 1, i32 0
  %176 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %8, i64 0, i32 0, i32 2
  %177 = bitcast %"class.std::__1::function.1005"* %8 to i64*
  %178 = bitcast %"class.std::__1::function.1304"* %3 to i8*
  %179 = ptrtoint %"class.std::__1::function.1005"* %8 to i64
  %180 = getelementptr inbounds %"class.std::__1::function.1304", %"class.std::__1::function.1304"* %3, i64 0, i32 0, i32 1, i32 0
  %181 = getelementptr inbounds %"class.std::__1::function.1304", %"class.std::__1::function.1304"* %3, i64 0, i32 0, i32 2
  %182 = bitcast %"class.std::__1::function.1304"* %3 to i64*
  %183 = getelementptr inbounds %"class.std::__1::function.1304", %"class.std::__1::function.1304"* %3, i64 0, i32 0, i32 0
  %184 = getelementptr inbounds %"class.std::__1::function.1304", %"class.std::__1::function.1304"* %3, i64 0, i32 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %8, i64 0, i32 0, i32 0, i32 0
  br label %311

186:                                              ; preds = %321, %162
  %187 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %13, align 8
  %188 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %187, i64 0, i32 1
  %189 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %188, align 8
  %190 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %189, i64 0, i32 1, i32 0, i32 0, i32 0
  %191 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %190, align 8
  %192 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %191, i64 0, i32 4
  %193 = load i8, i8* %192, align 1, !range !3
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %200, label %195

195:                                              ; preds = %186
  %196 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %191, i64 0, i32 3
  %197 = load i8, i8* %196, align 4, !range !3
  %198 = zext i8 %197 to i32
  %199 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %191, i32 %198) #11
  br label %200

200:                                              ; preds = %186, %195
  %201 = phi i32 [ %199, %195 ], [ 0, %186 ]
  %202 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %15, i64 0, i32 1
  %203 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %202, align 8
  %204 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %203, i64 0, i32 1, i32 0, i32 0, i32 0
  %205 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %204, align 8
  %206 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %205, i64 0, i32 4
  %207 = load i8, i8* %206, align 1, !range !3
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %214, label %209

209:                                              ; preds = %200
  %210 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %205, i64 0, i32 3
  %211 = load i8, i8* %210, align 4, !range !3
  %212 = zext i8 %211 to i32
  %213 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %205, i32 %212) #11
  br label %214

214:                                              ; preds = %200, %209
  %215 = phi i32 [ %213, %209 ], [ 0, %200 ]
  %216 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %26, align 8
  %217 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %216, i64 0, i32 11
  %218 = load i32, i32* %217, align 8
  %219 = and i32 %218, 1
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %245

221:                                              ; preds = %214
  %222 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %216, i64 0, i32 4, i32 0, i32 0, i32 0
  %223 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %222, align 8
  %224 = call i8* @_Znwm(i64 104) #12
  %225 = bitcast i8* %224 to %"class.spvtools::opt::analysis::DefUseManager"*
  %226 = getelementptr inbounds i8, i8* %224, i64 32
  %227 = bitcast i8* %226 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %224, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %227, align 4
  %228 = getelementptr inbounds i8, i8* %224, i64 48
  %229 = getelementptr inbounds i8, i8* %224, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %228, i8 0, i64 16, i1 false) #11
  %230 = bitcast i8* %229 to i8**
  store i8* %228, i8** %230, align 8
  %231 = getelementptr inbounds i8, i8* %224, i64 64
  %232 = getelementptr inbounds i8, i8* %224, i64 96
  %233 = bitcast i8* %232 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %231, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %233, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %225, %"class.spvtools::opt::Module"* %223) #11
  %234 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %216, i64 0, i32 6
  %235 = ptrtoint i8* %224 to i64
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %234, i64 0, i32 0, i32 0, i32 0
  %237 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %236, align 8
  %238 = bitcast %"class.std::__1::unique_ptr.62"* %234 to i64*
  store i64 %235, i64* %238, align 8
  %239 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %237, null
  br i1 %239, label %242, label %240

240:                                              ; preds = %221
  %241 = bitcast %"class.std::__1::unique_ptr.62"* %234 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %241, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %237) #11
  br label %242

242:                                              ; preds = %240, %221
  %243 = load i32, i32* %217, align 8
  %244 = or i32 %243, 1
  store i32 %244, i32* %217, align 8
  br label %245

245:                                              ; preds = %214, %242
  %246 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %216, i64 0, i32 6, i32 0, i32 0, i32 0
  %247 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %246, align 8
  %248 = bitcast %"class.std::__1::function.1067"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %248) #11
  %249 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %9, i64 0, i32 0, i32 1, i32 0
  %250 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %9, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_9LoopUtils26CloneAndAttachLoopToHeaderEPNSA_17LoopCloningResultEE3$_4S6_EEEEvPKNS0_16__policy_storageES5_j", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)** %249, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS6_17LoopCloningResultEE3$_4FvPNS5_11InstructionEjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %250, align 8
  %251 = bitcast %"class.std::__1::function.1067"* %9 to i32*
  store i32 %215, i32* %251, align 8
  %252 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %9, i64 0, i32 0, i32 0, i32 1
  %253 = bitcast [8 x i8]* %252 to %"class.spvtools::opt::LoopUtils"**
  store %"class.spvtools::opt::LoopUtils"* %0, %"class.spvtools::opt::LoopUtils"** %253, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEjRKNSt3__18functionIFvPNS0_11InstructionEjEEE(%"class.spvtools::opt::analysis::DefUseManager"* %247, i32 %201, %"class.std::__1::function.1067"* nonnull dereferenceable(32) %9) #11
  %254 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %250, align 8
  %255 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %254, i64 0, i32 1
  %256 = load void (i8*)*, void (i8*)** %255, align 8
  %257 = icmp eq void (i8*)* %256, null
  br i1 %257, label %261, label %258

258:                                              ; preds = %245
  %259 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %9, i64 0, i32 0, i32 0, i32 0
  %260 = load i8*, i8** %259, align 8
  call void %256(i8* %260) #11
  br label %261

261:                                              ; preds = %245, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %248) #11
  %262 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %13, align 8
  %263 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"* %262) #11
  %264 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %263, i64 0, i32 1, i32 0, i32 0, i32 0
  %265 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %264, align 8
  %266 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 4
  %267 = load i8, i8* %266, align 1, !range !3
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %274, label %269

269:                                              ; preds = %261
  %270 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 3
  %271 = load i8, i8* %270, align 4, !range !3
  %272 = zext i8 %271 to i32
  %273 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %265, i32 %272) #11
  br label %274

274:                                              ; preds = %261, %269
  %275 = phi i32 [ %273, %269 ], [ 0, %261 ]
  %276 = bitcast %"class.std::__1::function.1067"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %276) #11
  %277 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %10, i64 0, i32 0, i32 1, i32 0
  %278 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %10, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_9LoopUtils26CloneAndAttachLoopToHeaderEPNSA_17LoopCloningResultEE3$_5S6_EEEEvPKNS0_16__policy_storageES5_j", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)** %277, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS6_17LoopCloningResultEE3$_5FvPNS5_11InstructionEjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %278, align 8
  %279 = bitcast %"class.std::__1::function.1067"* %10 to i32*
  store i32 %163, i32* %279, align 8
  %280 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %10, i64 0, i32 0, i32 0, i32 1
  %281 = bitcast [8 x i8]* %280 to %"class.spvtools::opt::LoopUtils"**
  store %"class.spvtools::opt::LoopUtils"* %0, %"class.spvtools::opt::LoopUtils"** %281, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEjRKNSt3__18functionIFvPNS0_11InstructionEjEEE(%"class.spvtools::opt::analysis::DefUseManager"* %247, i32 %275, %"class.std::__1::function.1067"* nonnull dereferenceable(32) %10) #11
  %282 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %278, align 8
  %283 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %282, i64 0, i32 1
  %284 = load void (i8*)*, void (i8*)** %283, align 8
  %285 = icmp eq void (i8*)* %284, null
  br i1 %285, label %289, label %286

286:                                              ; preds = %274
  %287 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %10, i64 0, i32 0, i32 0, i32 0
  %288 = load i8*, i8** %287, align 8
  call void %284(i8* %288) #11
  br label %289

289:                                              ; preds = %274, %286
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %276) #11
  %290 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %82, align 8
  call void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %15, %"class.spvtools::opt::BasicBlock"* %290) #11
  %291 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %13, align 8
  %292 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %291, i64 0, i32 4
  %293 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %292, align 8
  call void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %15, %"class.spvtools::opt::BasicBlock"* %293) #11
  %294 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %167, align 8
  %295 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %296 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %295, align 8
  %297 = icmp ult %"class.std::__1::unique_ptr.40"* %294, %296
  br i1 %297, label %298, label %304

298:                                              ; preds = %289
  %299 = ptrtoint %"class.spvtools::opt::BasicBlock"* %290 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %300 = bitcast %"class.std::__1::unique_ptr.40"* %294 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %294, i64 1
  %302 = ptrtoint %"class.std::__1::unique_ptr.40"* %301 to i64
  %303 = bitcast %"class.std::__1::unique_ptr.40"** %167 to i64*
  store i64 %302, i64* %303, align 8
  br label %305

304:                                              ; preds = %289
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %164, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %6) #11
  br label %305

305:                                              ; preds = %298, %304
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #11
  %306 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %82, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %307 = icmp eq %"class.spvtools::opt::BasicBlock"* %306, null
  br i1 %307, label %310, label %308

308:                                              ; preds = %305
  %309 = bitcast %"class.std::__1::unique_ptr.40"* %6 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %309, %"class.spvtools::opt::BasicBlock"* nonnull %306) #11
  br label %310

310:                                              ; preds = %308, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #11
  ret %"class.spvtools::opt::Loop"* %15

311:                                              ; preds = %170, %321
  %312 = phi %"class.std::__1::unique_ptr.40"* [ %166, %170 ], [ %322, %321 ]
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %312, i64 0, i32 0, i32 0, i32 0
  %314 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %313, align 8
  %315 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %314, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %316 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %314, i64 0, i32 2, i32 0, i32 1
  %317 = bitcast %"class.spvtools::opt::Instruction"** %315 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = inttoptr i64 %318 to %"class.spvtools::opt::Instruction"*
  %320 = icmp eq %"class.spvtools::opt::Instruction"* %316, %319
  br i1 %320, label %321, label %324

321:                                              ; preds = %367, %311
  %322 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %312, i64 1
  %323 = icmp eq %"class.std::__1::unique_ptr.40"* %322, %168
  br i1 %323, label %186, label %311

324:                                              ; preds = %311, %367
  %325 = phi %"class.spvtools::opt::Instruction"* [ %372, %367 ], [ %319, %311 ]
  %326 = phi i64 [ %371, %367 ], [ %318, %311 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %171) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS9_17LoopCloningResultEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %175, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS6_17LoopCloningResultEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %176, align 8
  store i64 %174, i64* %177, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %178) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %180, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %181, align 8
  store i64 %179, i64* %182, align 8
  %327 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %325, i64 0, i32 6, i32 0, i32 0
  %328 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %327, align 8
  %329 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %325, i64 0, i32 6, i32 0, i32 1
  %330 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %329, align 8
  %331 = icmp eq %"struct.spvtools::opt::Operand"* %328, %330
  br i1 %331, label %353, label %332

332:                                              ; preds = %324, %348
  %333 = phi %"struct.spvtools::opt::Operand"* [ %349, %348 ], [ %328, %324 ]
  %334 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %333, i64 0, i32 0
  %335 = load i32, i32* %334, align 8
  %336 = and i32 %335, -2
  %337 = icmp eq i32 %336, 2
  br i1 %337, label %348, label %338

338:                                              ; preds = %332
  %339 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %333, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %340 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %339, align 8
  %341 = icmp eq %"class.std::__1::vector.3"* %340, null
  %342 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %340, i64 0, i32 0, i32 0
  %343 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %333, i64 0, i32 1, i32 2
  %344 = select i1 %341, i32** %343, i32** %342
  %345 = load i32*, i32** %344, align 8
  %346 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %180, align 8
  %347 = call zeroext i1 %346(%"union.std::__1::__function::__policy_storage"* nonnull %183, i32* %345) #11
  br i1 %347, label %348, label %351

348:                                              ; preds = %338, %332
  %349 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %333, i64 1
  %350 = icmp eq %"struct.spvtools::opt::Operand"* %349, %330
  br i1 %350, label %351, label %332

351:                                              ; preds = %348, %338
  %352 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %181, align 8
  br label %353

353:                                              ; preds = %351, %324
  %354 = phi %"struct.std::__1::__function::__policy"* [ %352, %351 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %324 ]
  %355 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %354, i64 0, i32 1
  %356 = load void (i8*)*, void (i8*)** %355, align 8
  %357 = icmp eq void (i8*)* %356, null
  br i1 %357, label %360, label %358

358:                                              ; preds = %353
  %359 = load i8*, i8** %184, align 8
  call void %356(i8* %359) #11
  br label %360

360:                                              ; preds = %353, %358
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %178) #11
  %361 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %176, align 8
  %362 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %361, i64 0, i32 1
  %363 = load void (i8*)*, void (i8*)** %362, align 8
  %364 = icmp eq void (i8*)* %363, null
  br i1 %364, label %367, label %365

365:                                              ; preds = %360
  %366 = load i8*, i8** %185, align 8
  call void %363(i8* %366) #11
  br label %367

367:                                              ; preds = %360, %365
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %171) #11
  %368 = inttoptr i64 %326 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %369 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %368, i64 0, i32 1
  %370 = bitcast %"class.spvtools::opt::Instruction"** %369 to i64*
  %371 = load i64, i64* %370, align 8
  %372 = inttoptr i64 %371 to %"class.spvtools::opt::Instruction"*
  %373 = icmp eq %"class.spvtools::opt::Instruction"* %316, %372
  br i1 %373, label %321, label %324
}

declare void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEjRKNSt3__18functionIFvPNS0_11InstructionEjEEE(%"class.spvtools::opt::analysis::DefUseManager"*, i32, %"class.std::__1::function.1067"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt10BasicBlock5CloneEPNS0_9IRContextE(%"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3opt9LoopUtils16PopulateLoopNestEPNS0_4LoopERKNS1_17LoopCloningResultE(%"class.spvtools::opt::LoopUtils"*, %"class.spvtools::opt::Loop"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.1416", align 8
  %5 = alloca %"class.std::__1::tuple.1172", align 1
  %6 = alloca %"class.std::__1::tuple.1416", align 8
  %7 = alloca %"class.std::__1::tuple.1172", align 1
  %8 = alloca %"class.std::__1::tuple.1404", align 8
  %9 = alloca %"class.std::__1::tuple.1172", align 1
  %10 = alloca %"class.std::__1::unordered_map.1077", align 8
  %11 = alloca %"class.spvtools::opt::IteratorRange", align 8
  %12 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %13 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %14 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %15 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %16 = alloca %"class.spvtools::opt::Loop"*, align 8
  %17 = alloca %"class.spvtools::opt::Loop"*, align 8
  %18 = bitcast %"class.std::__1::unordered_map.1077"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.std::__1::unordered_map.1077", %"class.std::__1::unordered_map.1077"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::unordered_map.1077", %"class.std::__1::unordered_map.1077"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::unordered_map.1077", %"class.std::__1::unordered_map.1077"* %10, i64 0, i32 0, i32 4, i64 0
  %22 = getelementptr inbounds %"class.std::__1::unordered_map.1077", %"class.std::__1::unordered_map.1077"* %10, i64 0, i32 0, i32 3
  %23 = bitcast %"class.std::__1::__compressed_pair.1099"* %22 to i32*
  %24 = bitcast i8* %21 to i32*
  store i32 -1431655766, i32* %24, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 2
  %26 = getelementptr inbounds %"class.std::__1::unordered_map.1077", %"class.std::__1::unordered_map.1077"* %10, i64 0, i32 0
  %27 = bitcast %"class.std::__1::tuple.1404"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.std::__1::tuple.1404", %"class.std::__1::tuple.1404"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Loop"** %25, %"class.spvtools::opt::Loop"*** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %29) #11
  %30 = call { %"struct.std::__1::__hash_node_base.1082"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1078"* nonnull %26, %"class.spvtools::opt::Loop"** dereferenceable(8) %25, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1404"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %9) #11
  %31 = extractvalue { %"struct.std::__1::__hash_node_base.1082"*, i8 } %30, 0
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %31, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.1082"* %32 to %"class.spvtools::opt::Loop"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  store %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Loop"** %33, align 8
  %34 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %25, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %34, i64 0, i32 6
  %36 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::Loop"* %36, null
  br i1 %37, label %112, label %38

38:                                               ; preds = %3
  %39 = ptrtoint %"class.spvtools::opt::Loop"* %1 to i64
  %40 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %36, i64 0, i32 7
  %41 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %36, i64 0, i32 7, i32 0, i32 1
  %42 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %41, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %36, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %44 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %43, align 8
  %45 = icmp eq %"class.spvtools::opt::Loop"** %42, %44
  %46 = ptrtoint %"class.spvtools::opt::Loop"** %44 to i64
  br i1 %45, label %52, label %47

47:                                               ; preds = %38
  %48 = bitcast %"class.spvtools::opt::Loop"** %42 to i64*
  store i64 %39, i64* %48, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %42, i64 1
  %50 = ptrtoint %"class.spvtools::opt::Loop"** %49 to i64
  %51 = bitcast %"class.spvtools::opt::Loop"*** %41 to i64*
  store i64 %50, i64* %51, align 8
  br label %109

52:                                               ; preds = %38
  %53 = ptrtoint %"class.spvtools::opt::Loop"** %42 to i64
  %54 = bitcast %"class.spvtools::opt::Loop"*** %41 to i64*
  %55 = bitcast %"class.std::__1::vector.910"* %40 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %53, %56
  %58 = ashr exact i64 %57, 3
  %59 = add nsw i64 %58, 1
  %60 = icmp ugt i64 %59, 2305843009213693951
  br i1 %60, label %61, label %63

61:                                               ; preds = %52
  %62 = bitcast %"class.std::__1::vector.910"* %40 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %62) #13
  unreachable

63:                                               ; preds = %52
  %64 = bitcast %"class.spvtools::opt::Loop"*** %43 to i64*
  %65 = sub i64 %46, %56
  %66 = ashr exact i64 %65, 3
  %67 = icmp ult i64 %66, 1152921504606846975
  br i1 %67, label %68, label %76

68:                                               ; preds = %63
  %69 = ashr exact i64 %65, 2
  %70 = icmp ult i64 %69, %59
  %71 = select i1 %70, i64 %59, i64 %69
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %81, label %73

73:                                               ; preds = %68
  %74 = icmp ugt i64 %71, 2305843009213693951
  br i1 %74, label %75, label %76

75:                                               ; preds = %73
  call void @abort() #13
  unreachable

76:                                               ; preds = %73, %63
  %77 = phi i64 [ %71, %73 ], [ 2305843009213693951, %63 ]
  %78 = shl i64 %77, 3
  %79 = call i8* @_Znwm(i64 %78) #12
  %80 = bitcast i8* %79 to %"class.spvtools::opt::Loop"**
  br label %81

81:                                               ; preds = %76, %68
  %82 = phi i64 [ %77, %76 ], [ 0, %68 ]
  %83 = phi %"class.spvtools::opt::Loop"** [ %80, %76 ], [ null, %68 ]
  %84 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %83, i64 %58
  %85 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %83, i64 %82
  %86 = ptrtoint %"class.spvtools::opt::Loop"** %85 to i64
  %87 = bitcast %"class.spvtools::opt::Loop"** %84 to i64*
  store i64 %39, i64* %87, align 8
  %88 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %84, i64 1
  %89 = ptrtoint %"class.spvtools::opt::Loop"** %88 to i64
  %90 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %40, i64 0, i32 0, i32 0
  %91 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %90, align 8
  %92 = load i64, i64* %54, align 8
  %93 = ptrtoint %"class.spvtools::opt::Loop"** %91 to i64
  %94 = sub i64 %92, %93
  %95 = ashr exact i64 %94, 3
  %96 = sub nsw i64 0, %95
  %97 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %84, i64 %96
  %98 = ptrtoint %"class.spvtools::opt::Loop"** %97 to i64
  %99 = icmp sgt i64 %94, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %81
  %101 = bitcast %"class.spvtools::opt::Loop"** %97 to i8*
  %102 = bitcast %"class.spvtools::opt::Loop"** %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 %94, i1 false) #11
  %103 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %90, align 8
  br label %104

104:                                              ; preds = %100, %81
  %105 = phi %"class.spvtools::opt::Loop"** [ %91, %81 ], [ %103, %100 ]
  store i64 %98, i64* %55, align 8
  store i64 %89, i64* %54, align 8
  store i64 %86, i64* %64, align 8
  %106 = icmp eq %"class.spvtools::opt::Loop"** %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.spvtools::opt::Loop"** %105 to i8*
  call void @_ZdlPv(i8* %108) #12
  br label %109

109:                                              ; preds = %47, %104, %107
  %110 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 6
  store %"class.spvtools::opt::Loop"* %36, %"class.spvtools::opt::Loop"** %110, align 8
  %111 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %25, align 8
  br label %112

112:                                              ; preds = %3, %109
  %113 = phi %"class.spvtools::opt::Loop"* [ %34, %3 ], [ %111, %109 ]
  call void @_ZNK8spvtools3opt9LoopUtils16PopulateLoopDescEPNS0_4LoopES3_RKNS1_17LoopCloningResultE(%"class.spvtools::opt::LoopUtils"* undef, %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Loop"* %113, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* dereferenceable(184) %2)
  %114 = bitcast %"class.spvtools::opt::IteratorRange"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %114) #11
  %115 = bitcast %"class.spvtools::opt::TreeDFIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %115) #11
  %116 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %25, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 0
  store %"class.spvtools::opt::Loop"* %116, %"class.spvtools::opt::Loop"** %117, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1
  %119 = bitcast %"class.std::__1::stack"* %118 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 48, i1 false) #11
  %120 = icmp eq %"class.spvtools::opt::Loop"* %116, null
  br i1 %120, label %153, label %121

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 0
  %123 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %122, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 1
  %125 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %124, align 8
  %126 = icmp eq %"class.spvtools::opt::Loop"** %123, %125
  br i1 %126, label %153, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %129 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1, i32 0, i32 0, i32 1
  %130 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %131 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %132 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %118, i64 0, i32 0
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %132) #11
  %133 = load i64, i64* %128, align 8
  %134 = load i64, i64* %129, align 8
  %135 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %130, align 8
  %136 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %131, align 8
  %137 = add i64 %134, %133
  %138 = icmp eq %"struct.std::__1::pair.1105"** %136, %135
  br i1 %138, label %146, label %139

139:                                              ; preds = %127
  %140 = lshr i64 %137, 8
  %141 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %135, i64 %140
  %142 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %141, align 8
  %143 = and i64 %137, 255
  %144 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %142, i64 %143
  %145 = bitcast %"struct.std::__1::pair.1105"* %144 to i8*
  br label %146

146:                                              ; preds = %139, %127
  %147 = phi i8* [ %145, %139 ], [ null, %127 ]
  %148 = bitcast i8* %147 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %116, %"class.spvtools::opt::Loop"** %148, align 8
  %149 = getelementptr inbounds i8, i8* %147, i64 8
  %150 = bitcast i8* %149 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %123, %"class.spvtools::opt::Loop"*** %150, align 8
  %151 = load i64, i64* %128, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %128, align 8
  br label %153

153:                                              ; preds = %112, %121, %146
  call void @_ZN8spvtools3opt14TreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"* nonnull %12) #11
  %154 = bitcast %"class.spvtools::opt::TreeDFIterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %154) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 0, i64 56, i1 false) #11
  call void @_ZN8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEEC2ERKS4_S7_(%"class.spvtools::opt::IteratorRange"* nonnull %11, %"class.spvtools::opt::TreeDFIterator"* nonnull dereferenceable(56) %12, %"class.spvtools::opt::TreeDFIterator"* nonnull dereferenceable(56) %13) #11
  %155 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %156 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %155, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %13, i64 0, i32 1, i32 0, i32 0, i32 1
  %158 = load i64, i64* %157, align 8
  %159 = lshr i64 %158, 8
  %160 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %156, i64 %159
  %161 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %162 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %161, align 8
  %163 = icmp eq %"struct.std::__1::pair.1105"** %162, %156
  %164 = ptrtoint %"struct.std::__1::pair.1105"** %162 to i64
  %165 = ptrtoint %"struct.std::__1::pair.1105"** %156 to i64
  br i1 %163, label %166, label %168

166:                                              ; preds = %153
  %167 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %13, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %181

168:                                              ; preds = %153
  %169 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %160, align 8
  %170 = and i64 %158, 255
  %171 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %169, i64 %170
  %172 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %13, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %173 = load i64, i64* %172, align 8
  %174 = add i64 %173, %158
  %175 = lshr i64 %174, 8
  %176 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %156, i64 %175
  %177 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %176, align 8
  %178 = and i64 %174, 255
  %179 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %177, i64 %178
  %180 = icmp eq %"struct.std::__1::pair.1105"* %179, %171
  br i1 %180, label %181, label %187

181:                                              ; preds = %200, %168, %166
  %182 = phi i64* [ %167, %166 ], [ %172, %168 ], [ %172, %200 ]
  store i64 0, i64* %182, align 8
  %183 = bitcast %"struct.std::__1::pair.1105"*** %161 to i64*
  %184 = sub i64 %164, %165
  %185 = ashr exact i64 %184, 3
  %186 = icmp ugt i64 %185, 2
  br i1 %186, label %205, label %218

187:                                              ; preds = %168, %200
  %188 = phi %"struct.std::__1::pair.1105"* [ %203, %200 ], [ %171, %168 ]
  %189 = phi %"struct.std::__1::pair.1105"** [ %202, %200 ], [ %160, %168 ]
  %190 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %188, i64 1
  %191 = ptrtoint %"struct.std::__1::pair.1105"* %190 to i64
  %192 = bitcast %"struct.std::__1::pair.1105"** %189 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %191, %193
  %195 = icmp eq i64 %194, 4096
  br i1 %195, label %196, label %200

196:                                              ; preds = %187
  %197 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %189, i64 1
  %198 = bitcast %"struct.std::__1::pair.1105"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  br label %200

200:                                              ; preds = %196, %187
  %201 = phi i64 [ %199, %196 ], [ %191, %187 ]
  %202 = phi %"struct.std::__1::pair.1105"** [ %197, %196 ], [ %189, %187 ]
  %203 = inttoptr i64 %201 to %"struct.std::__1::pair.1105"*
  %204 = icmp eq %"struct.std::__1::pair.1105"* %179, %203
  br i1 %204, label %181, label %187

205:                                              ; preds = %181, %205
  %206 = phi %"struct.std::__1::pair.1105"** [ %210, %205 ], [ %156, %181 ]
  %207 = bitcast %"struct.std::__1::pair.1105"** %206 to i8**
  %208 = load i8*, i8** %207, align 8
  call void @_ZdlPv(i8* %208) #12
  %209 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %155, align 8
  %210 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %209, i64 1
  store %"struct.std::__1::pair.1105"** %210, %"struct.std::__1::pair.1105"*** %155, align 8
  %211 = load i64, i64* %183, align 8
  %212 = ptrtoint %"struct.std::__1::pair.1105"** %210 to i64
  %213 = sub i64 %211, %212
  %214 = ashr exact i64 %213, 3
  %215 = icmp ugt i64 %214, 2
  br i1 %215, label %205, label %216

216:                                              ; preds = %205
  %217 = inttoptr i64 %211 to %"struct.std::__1::pair.1105"**
  br label %218

218:                                              ; preds = %216, %181
  %219 = phi %"struct.std::__1::pair.1105"** [ %162, %181 ], [ %217, %216 ]
  %220 = phi %"struct.std::__1::pair.1105"** [ %156, %181 ], [ %210, %216 ]
  %221 = phi i64 [ %185, %181 ], [ %214, %216 ]
  switch i64 %221, label %225 [
    i64 1, label %223
    i64 2, label %222
  ]

222:                                              ; preds = %218
  br label %223

223:                                              ; preds = %218, %222
  %224 = phi i64 [ 256, %222 ], [ 128, %218 ]
  store i64 %224, i64* %157, align 8
  br label %225

225:                                              ; preds = %223, %218
  %226 = icmp eq %"struct.std::__1::pair.1105"** %220, %219
  br i1 %226, label %245, label %227

227:                                              ; preds = %225, %227
  %228 = phi %"struct.std::__1::pair.1105"** [ %231, %227 ], [ %220, %225 ]
  %229 = bitcast %"struct.std::__1::pair.1105"** %228 to i8**
  %230 = load i8*, i8** %229, align 8
  call void @_ZdlPv(i8* %230) #12
  %231 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %228, i64 1
  %232 = icmp eq %"struct.std::__1::pair.1105"** %231, %219
  br i1 %232, label %233, label %227

233:                                              ; preds = %227
  %234 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %155, align 8
  %235 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %161, align 8
  %236 = icmp eq %"struct.std::__1::pair.1105"** %235, %234
  br i1 %236, label %245, label %237

237:                                              ; preds = %233
  %238 = ptrtoint %"struct.std::__1::pair.1105"** %234 to i64
  %239 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %235, i64 -1
  %240 = ptrtoint %"struct.std::__1::pair.1105"** %239 to i64
  %241 = sub i64 %240, %238
  %242 = lshr i64 %241, 3
  %243 = xor i64 %242, -1
  %244 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %235, i64 %243
  store %"struct.std::__1::pair.1105"** %244, %"struct.std::__1::pair.1105"*** %161, align 8
  br label %245

245:                                              ; preds = %237, %233, %225
  %246 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %247 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %246, align 8
  %248 = icmp eq %"struct.std::__1::pair.1105"** %247, null
  br i1 %248, label %251, label %249

249:                                              ; preds = %245
  %250 = bitcast %"struct.std::__1::pair.1105"** %247 to i8*
  call void @_ZdlPv(i8* %250) #12
  br label %251

251:                                              ; preds = %245, %249
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %154) #11
  %252 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %253 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %252, align 8
  %254 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1, i32 0, i32 0, i32 1
  %255 = load i64, i64* %254, align 8
  %256 = lshr i64 %255, 8
  %257 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %253, i64 %256
  %258 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %259 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %258, align 8
  %260 = icmp eq %"struct.std::__1::pair.1105"** %259, %253
  %261 = ptrtoint %"struct.std::__1::pair.1105"** %259 to i64
  %262 = ptrtoint %"struct.std::__1::pair.1105"** %253 to i64
  br i1 %260, label %263, label %265

263:                                              ; preds = %251
  %264 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %278

265:                                              ; preds = %251
  %266 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %257, align 8
  %267 = and i64 %255, 255
  %268 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %266, i64 %267
  %269 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %270 = load i64, i64* %269, align 8
  %271 = add i64 %270, %255
  %272 = lshr i64 %271, 8
  %273 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %253, i64 %272
  %274 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %273, align 8
  %275 = and i64 %271, 255
  %276 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %274, i64 %275
  %277 = icmp eq %"struct.std::__1::pair.1105"* %276, %268
  br i1 %277, label %278, label %284

278:                                              ; preds = %297, %265, %263
  %279 = phi i64* [ %264, %263 ], [ %269, %265 ], [ %269, %297 ]
  store i64 0, i64* %279, align 8
  %280 = bitcast %"struct.std::__1::pair.1105"*** %258 to i64*
  %281 = sub i64 %261, %262
  %282 = ashr exact i64 %281, 3
  %283 = icmp ugt i64 %282, 2
  br i1 %283, label %302, label %315

284:                                              ; preds = %265, %297
  %285 = phi %"struct.std::__1::pair.1105"* [ %300, %297 ], [ %268, %265 ]
  %286 = phi %"struct.std::__1::pair.1105"** [ %299, %297 ], [ %257, %265 ]
  %287 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %285, i64 1
  %288 = ptrtoint %"struct.std::__1::pair.1105"* %287 to i64
  %289 = bitcast %"struct.std::__1::pair.1105"** %286 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = sub i64 %288, %290
  %292 = icmp eq i64 %291, 4096
  br i1 %292, label %293, label %297

293:                                              ; preds = %284
  %294 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %286, i64 1
  %295 = bitcast %"struct.std::__1::pair.1105"** %294 to i64*
  %296 = load i64, i64* %295, align 8
  br label %297

297:                                              ; preds = %293, %284
  %298 = phi i64 [ %296, %293 ], [ %288, %284 ]
  %299 = phi %"struct.std::__1::pair.1105"** [ %294, %293 ], [ %286, %284 ]
  %300 = inttoptr i64 %298 to %"struct.std::__1::pair.1105"*
  %301 = icmp eq %"struct.std::__1::pair.1105"* %276, %300
  br i1 %301, label %278, label %284

302:                                              ; preds = %278, %302
  %303 = phi %"struct.std::__1::pair.1105"** [ %307, %302 ], [ %253, %278 ]
  %304 = bitcast %"struct.std::__1::pair.1105"** %303 to i8**
  %305 = load i8*, i8** %304, align 8
  call void @_ZdlPv(i8* %305) #12
  %306 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %252, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %306, i64 1
  store %"struct.std::__1::pair.1105"** %307, %"struct.std::__1::pair.1105"*** %252, align 8
  %308 = load i64, i64* %280, align 8
  %309 = ptrtoint %"struct.std::__1::pair.1105"** %307 to i64
  %310 = sub i64 %308, %309
  %311 = ashr exact i64 %310, 3
  %312 = icmp ugt i64 %311, 2
  br i1 %312, label %302, label %313

313:                                              ; preds = %302
  %314 = inttoptr i64 %308 to %"struct.std::__1::pair.1105"**
  br label %315

315:                                              ; preds = %313, %278
  %316 = phi %"struct.std::__1::pair.1105"** [ %259, %278 ], [ %314, %313 ]
  %317 = phi %"struct.std::__1::pair.1105"** [ %253, %278 ], [ %307, %313 ]
  %318 = phi i64 [ %282, %278 ], [ %311, %313 ]
  switch i64 %318, label %322 [
    i64 1, label %320
    i64 2, label %319
  ]

319:                                              ; preds = %315
  br label %320

320:                                              ; preds = %315, %319
  %321 = phi i64 [ 256, %319 ], [ 128, %315 ]
  store i64 %321, i64* %254, align 8
  br label %322

322:                                              ; preds = %320, %315
  %323 = icmp eq %"struct.std::__1::pair.1105"** %317, %316
  br i1 %323, label %342, label %324

324:                                              ; preds = %322, %324
  %325 = phi %"struct.std::__1::pair.1105"** [ %328, %324 ], [ %317, %322 ]
  %326 = bitcast %"struct.std::__1::pair.1105"** %325 to i8**
  %327 = load i8*, i8** %326, align 8
  call void @_ZdlPv(i8* %327) #12
  %328 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %325, i64 1
  %329 = icmp eq %"struct.std::__1::pair.1105"** %328, %316
  br i1 %329, label %330, label %324

330:                                              ; preds = %324
  %331 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %252, align 8
  %332 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %258, align 8
  %333 = icmp eq %"struct.std::__1::pair.1105"** %332, %331
  br i1 %333, label %342, label %334

334:                                              ; preds = %330
  %335 = ptrtoint %"struct.std::__1::pair.1105"** %331 to i64
  %336 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %332, i64 -1
  %337 = ptrtoint %"struct.std::__1::pair.1105"** %336 to i64
  %338 = sub i64 %337, %335
  %339 = lshr i64 %338, 3
  %340 = xor i64 %339, -1
  %341 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %332, i64 %340
  store %"struct.std::__1::pair.1105"** %341, %"struct.std::__1::pair.1105"*** %258, align 8
  br label %342

342:                                              ; preds = %334, %330, %322
  %343 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %344 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %343, align 8
  %345 = icmp eq %"struct.std::__1::pair.1105"** %344, null
  br i1 %345, label %348, label %346

346:                                              ; preds = %342
  %347 = bitcast %"struct.std::__1::pair.1105"** %344 to i8*
  call void @_ZdlPv(i8* %347) #12
  br label %348

348:                                              ; preds = %342, %346
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %115) #11
  %349 = bitcast %"class.spvtools::opt::TreeDFIterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %349) #11
  %350 = bitcast %"class.spvtools::opt::IteratorRange"* %11 to i64*
  %351 = load i64, i64* %350, align 8, !noalias !16
  %352 = bitcast %"class.spvtools::opt::TreeDFIterator"* %14 to i64*
  store i64 %351, i64* %352, align 8, !alias.scope !16
  %353 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %14, i64 0, i32 1
  %354 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %353, i64 0, i32 0
  %355 = bitcast %"class.std::__1::stack"* %353 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %355, i8 0, i64 48, i1 false) #11, !alias.scope !16
  %356 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %357 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %356, align 8, !noalias !16
  %358 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %359 = load i64, i64* %358, align 8, !noalias !16
  %360 = lshr i64 %359, 8
  %361 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %357, i64 %360
  %362 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %363 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %362, align 8, !noalias !16
  %364 = icmp eq %"struct.std::__1::pair.1105"** %363, %357
  br i1 %364, label %365, label %371

365:                                              ; preds = %348
  %366 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %367 = load i64, i64* %366, align 8, !noalias !16
  %368 = add i64 %367, %359
  %369 = lshr i64 %368, 8
  %370 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %357, i64 %369
  br label %383

371:                                              ; preds = %348
  %372 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %361, align 8
  %373 = and i64 %359, 255
  %374 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %372, i64 %373
  %375 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %376 = load i64, i64* %375, align 8, !noalias !16
  %377 = add i64 %376, %359
  %378 = lshr i64 %377, 8
  %379 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %357, i64 %378
  %380 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %379, align 8
  %381 = and i64 %377, 255
  %382 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %380, i64 %381
  br label %383

383:                                              ; preds = %365, %371
  %384 = phi %"struct.std::__1::pair.1105"** [ %379, %371 ], [ %370, %365 ]
  %385 = phi %"struct.std::__1::pair.1105"* [ %374, %371 ], [ null, %365 ]
  %386 = phi %"struct.std::__1::pair.1105"* [ %382, %371 ], [ null, %365 ]
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"* %354, %"struct.std::__1::pair.1105"** %361, %"struct.std::__1::pair.1105"* %385, %"struct.std::__1::pair.1105"** %384, %"struct.std::__1::pair.1105"* %386, i8* null) #11
  %387 = bitcast %"class.spvtools::opt::TreeDFIterator"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %387) #11
  %388 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 1
  %389 = bitcast %"class.spvtools::opt::TreeDFIterator"* %388 to i64*
  %390 = load i64, i64* %389, align 8, !noalias !19
  %391 = bitcast %"class.spvtools::opt::TreeDFIterator"* %15 to i64*
  store i64 %390, i64* %391, align 8, !alias.scope !19
  %392 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %15, i64 0, i32 1
  %393 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %392, i64 0, i32 0
  %394 = bitcast %"class.std::__1::stack"* %392 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %394, i8 0, i64 48, i1 false) #11, !alias.scope !19
  %395 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 1
  %396 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %395, align 8, !noalias !19
  %397 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %398 = load i64, i64* %397, align 8, !noalias !19
  %399 = lshr i64 %398, 8
  %400 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %396, i64 %399
  %401 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 2
  %402 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %401, align 8, !noalias !19
  %403 = icmp eq %"struct.std::__1::pair.1105"** %402, %396
  br i1 %403, label %404, label %410

404:                                              ; preds = %383
  %405 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %406 = load i64, i64* %405, align 8, !noalias !19
  %407 = add i64 %406, %398
  %408 = lshr i64 %407, 8
  %409 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %396, i64 %408
  br label %422

410:                                              ; preds = %383
  %411 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %400, align 8
  %412 = and i64 %398, 255
  %413 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %411, i64 %412
  %414 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %415 = load i64, i64* %414, align 8, !noalias !19
  %416 = add i64 %415, %398
  %417 = lshr i64 %416, 8
  %418 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %396, i64 %417
  %419 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %418, align 8
  %420 = and i64 %416, 255
  %421 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %419, i64 %420
  br label %422

422:                                              ; preds = %404, %410
  %423 = phi %"struct.std::__1::pair.1105"** [ %418, %410 ], [ %409, %404 ]
  %424 = phi %"struct.std::__1::pair.1105"* [ %413, %410 ], [ null, %404 ]
  %425 = phi %"struct.std::__1::pair.1105"* [ %421, %410 ], [ null, %404 ]
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"* %393, %"struct.std::__1::pair.1105"** %400, %"struct.std::__1::pair.1105"* %424, %"struct.std::__1::pair.1105"** %423, %"struct.std::__1::pair.1105"* %425, i8* null) #11
  %426 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %14, i64 0, i32 0
  %427 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %426, align 8
  %428 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %15, i64 0, i32 0
  %429 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %428, align 8
  %430 = icmp eq %"class.spvtools::opt::Loop"* %427, %429
  br i1 %430, label %442, label %431

431:                                              ; preds = %422
  %432 = bitcast %"class.spvtools::opt::LoopUtils"* %0 to i64*
  %433 = bitcast %"class.spvtools::opt::Loop"** %16 to i8*
  %434 = bitcast %"class.spvtools::opt::Loop"** %16 to i64*
  %435 = bitcast %"class.std::__1::tuple.1416"* %4 to i8*
  %436 = getelementptr inbounds %"class.std::__1::tuple.1416", %"class.std::__1::tuple.1416"* %4, i64 0, i32 0, i32 0, i32 0
  %437 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %5, i64 0, i32 0
  %438 = bitcast %"class.spvtools::opt::Loop"** %17 to i8*
  %439 = bitcast %"class.std::__1::tuple.1416"* %6 to i8*
  %440 = getelementptr inbounds %"class.std::__1::tuple.1416", %"class.std::__1::tuple.1416"* %6, i64 0, i32 0, i32 0, i32 0
  %441 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %7, i64 0, i32 0
  br label %842

442:                                              ; preds = %935, %422
  %443 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %444 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %443, align 8
  %445 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %15, i64 0, i32 1, i32 0, i32 0, i32 1
  %446 = load i64, i64* %445, align 8
  %447 = lshr i64 %446, 8
  %448 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %444, i64 %447
  %449 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %450 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %449, align 8
  %451 = icmp eq %"struct.std::__1::pair.1105"** %450, %444
  %452 = ptrtoint %"struct.std::__1::pair.1105"** %450 to i64
  %453 = ptrtoint %"struct.std::__1::pair.1105"** %444 to i64
  br i1 %451, label %454, label %456

454:                                              ; preds = %442
  %455 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %15, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %469

456:                                              ; preds = %442
  %457 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %448, align 8
  %458 = and i64 %446, 255
  %459 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %457, i64 %458
  %460 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %15, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %461 = load i64, i64* %460, align 8
  %462 = add i64 %461, %446
  %463 = lshr i64 %462, 8
  %464 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %444, i64 %463
  %465 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %464, align 8
  %466 = and i64 %462, 255
  %467 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %465, i64 %466
  %468 = icmp eq %"struct.std::__1::pair.1105"* %467, %459
  br i1 %468, label %469, label %475

469:                                              ; preds = %488, %456, %454
  %470 = phi i64* [ %455, %454 ], [ %460, %456 ], [ %460, %488 ]
  store i64 0, i64* %470, align 8
  %471 = bitcast %"struct.std::__1::pair.1105"*** %449 to i64*
  %472 = sub i64 %452, %453
  %473 = ashr exact i64 %472, 3
  %474 = icmp ugt i64 %473, 2
  br i1 %474, label %493, label %506

475:                                              ; preds = %456, %488
  %476 = phi %"struct.std::__1::pair.1105"* [ %491, %488 ], [ %459, %456 ]
  %477 = phi %"struct.std::__1::pair.1105"** [ %490, %488 ], [ %448, %456 ]
  %478 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %476, i64 1
  %479 = ptrtoint %"struct.std::__1::pair.1105"* %478 to i64
  %480 = bitcast %"struct.std::__1::pair.1105"** %477 to i64*
  %481 = load i64, i64* %480, align 8
  %482 = sub i64 %479, %481
  %483 = icmp eq i64 %482, 4096
  br i1 %483, label %484, label %488

484:                                              ; preds = %475
  %485 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %477, i64 1
  %486 = bitcast %"struct.std::__1::pair.1105"** %485 to i64*
  %487 = load i64, i64* %486, align 8
  br label %488

488:                                              ; preds = %484, %475
  %489 = phi i64 [ %487, %484 ], [ %479, %475 ]
  %490 = phi %"struct.std::__1::pair.1105"** [ %485, %484 ], [ %477, %475 ]
  %491 = inttoptr i64 %489 to %"struct.std::__1::pair.1105"*
  %492 = icmp eq %"struct.std::__1::pair.1105"* %467, %491
  br i1 %492, label %469, label %475

493:                                              ; preds = %469, %493
  %494 = phi %"struct.std::__1::pair.1105"** [ %498, %493 ], [ %444, %469 ]
  %495 = bitcast %"struct.std::__1::pair.1105"** %494 to i8**
  %496 = load i8*, i8** %495, align 8
  call void @_ZdlPv(i8* %496) #12
  %497 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %443, align 8
  %498 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %497, i64 1
  store %"struct.std::__1::pair.1105"** %498, %"struct.std::__1::pair.1105"*** %443, align 8
  %499 = load i64, i64* %471, align 8
  %500 = ptrtoint %"struct.std::__1::pair.1105"** %498 to i64
  %501 = sub i64 %499, %500
  %502 = ashr exact i64 %501, 3
  %503 = icmp ugt i64 %502, 2
  br i1 %503, label %493, label %504

504:                                              ; preds = %493
  %505 = inttoptr i64 %499 to %"struct.std::__1::pair.1105"**
  br label %506

506:                                              ; preds = %504, %469
  %507 = phi %"struct.std::__1::pair.1105"** [ %450, %469 ], [ %505, %504 ]
  %508 = phi %"struct.std::__1::pair.1105"** [ %444, %469 ], [ %498, %504 ]
  %509 = phi i64 [ %473, %469 ], [ %502, %504 ]
  switch i64 %509, label %513 [
    i64 1, label %511
    i64 2, label %510
  ]

510:                                              ; preds = %506
  br label %511

511:                                              ; preds = %506, %510
  %512 = phi i64 [ 256, %510 ], [ 128, %506 ]
  store i64 %512, i64* %445, align 8
  br label %513

513:                                              ; preds = %511, %506
  %514 = icmp eq %"struct.std::__1::pair.1105"** %508, %507
  br i1 %514, label %533, label %515

515:                                              ; preds = %513, %515
  %516 = phi %"struct.std::__1::pair.1105"** [ %519, %515 ], [ %508, %513 ]
  %517 = bitcast %"struct.std::__1::pair.1105"** %516 to i8**
  %518 = load i8*, i8** %517, align 8
  call void @_ZdlPv(i8* %518) #12
  %519 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %516, i64 1
  %520 = icmp eq %"struct.std::__1::pair.1105"** %519, %507
  br i1 %520, label %521, label %515

521:                                              ; preds = %515
  %522 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %443, align 8
  %523 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %449, align 8
  %524 = icmp eq %"struct.std::__1::pair.1105"** %523, %522
  br i1 %524, label %533, label %525

525:                                              ; preds = %521
  %526 = ptrtoint %"struct.std::__1::pair.1105"** %522 to i64
  %527 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %523, i64 -1
  %528 = ptrtoint %"struct.std::__1::pair.1105"** %527 to i64
  %529 = sub i64 %528, %526
  %530 = lshr i64 %529, 3
  %531 = xor i64 %530, -1
  %532 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %523, i64 %531
  store %"struct.std::__1::pair.1105"** %532, %"struct.std::__1::pair.1105"*** %449, align 8
  br label %533

533:                                              ; preds = %525, %521, %513
  %534 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %535 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %534, align 8
  %536 = icmp eq %"struct.std::__1::pair.1105"** %535, null
  br i1 %536, label %539, label %537

537:                                              ; preds = %533
  %538 = bitcast %"struct.std::__1::pair.1105"** %535 to i8*
  call void @_ZdlPv(i8* %538) #12
  br label %539

539:                                              ; preds = %533, %537
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %387) #11
  %540 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %541 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %540, align 8
  %542 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %14, i64 0, i32 1, i32 0, i32 0, i32 1
  %543 = load i64, i64* %542, align 8
  %544 = lshr i64 %543, 8
  %545 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %541, i64 %544
  %546 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %547 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %546, align 8
  %548 = icmp eq %"struct.std::__1::pair.1105"** %547, %541
  %549 = ptrtoint %"struct.std::__1::pair.1105"** %547 to i64
  %550 = ptrtoint %"struct.std::__1::pair.1105"** %541 to i64
  br i1 %548, label %551, label %553

551:                                              ; preds = %539
  %552 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %14, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %566

553:                                              ; preds = %539
  %554 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %545, align 8
  %555 = and i64 %543, 255
  %556 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %554, i64 %555
  %557 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %14, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %558 = load i64, i64* %557, align 8
  %559 = add i64 %558, %543
  %560 = lshr i64 %559, 8
  %561 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %541, i64 %560
  %562 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %561, align 8
  %563 = and i64 %559, 255
  %564 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %562, i64 %563
  %565 = icmp eq %"struct.std::__1::pair.1105"* %564, %556
  br i1 %565, label %566, label %572

566:                                              ; preds = %585, %553, %551
  %567 = phi i64* [ %552, %551 ], [ %557, %553 ], [ %557, %585 ]
  store i64 0, i64* %567, align 8
  %568 = bitcast %"struct.std::__1::pair.1105"*** %546 to i64*
  %569 = sub i64 %549, %550
  %570 = ashr exact i64 %569, 3
  %571 = icmp ugt i64 %570, 2
  br i1 %571, label %590, label %603

572:                                              ; preds = %553, %585
  %573 = phi %"struct.std::__1::pair.1105"* [ %588, %585 ], [ %556, %553 ]
  %574 = phi %"struct.std::__1::pair.1105"** [ %587, %585 ], [ %545, %553 ]
  %575 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %573, i64 1
  %576 = ptrtoint %"struct.std::__1::pair.1105"* %575 to i64
  %577 = bitcast %"struct.std::__1::pair.1105"** %574 to i64*
  %578 = load i64, i64* %577, align 8
  %579 = sub i64 %576, %578
  %580 = icmp eq i64 %579, 4096
  br i1 %580, label %581, label %585

581:                                              ; preds = %572
  %582 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %574, i64 1
  %583 = bitcast %"struct.std::__1::pair.1105"** %582 to i64*
  %584 = load i64, i64* %583, align 8
  br label %585

585:                                              ; preds = %581, %572
  %586 = phi i64 [ %584, %581 ], [ %576, %572 ]
  %587 = phi %"struct.std::__1::pair.1105"** [ %582, %581 ], [ %574, %572 ]
  %588 = inttoptr i64 %586 to %"struct.std::__1::pair.1105"*
  %589 = icmp eq %"struct.std::__1::pair.1105"* %564, %588
  br i1 %589, label %566, label %572

590:                                              ; preds = %566, %590
  %591 = phi %"struct.std::__1::pair.1105"** [ %595, %590 ], [ %541, %566 ]
  %592 = bitcast %"struct.std::__1::pair.1105"** %591 to i8**
  %593 = load i8*, i8** %592, align 8
  call void @_ZdlPv(i8* %593) #12
  %594 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %540, align 8
  %595 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %594, i64 1
  store %"struct.std::__1::pair.1105"** %595, %"struct.std::__1::pair.1105"*** %540, align 8
  %596 = load i64, i64* %568, align 8
  %597 = ptrtoint %"struct.std::__1::pair.1105"** %595 to i64
  %598 = sub i64 %596, %597
  %599 = ashr exact i64 %598, 3
  %600 = icmp ugt i64 %599, 2
  br i1 %600, label %590, label %601

601:                                              ; preds = %590
  %602 = inttoptr i64 %596 to %"struct.std::__1::pair.1105"**
  br label %603

603:                                              ; preds = %601, %566
  %604 = phi %"struct.std::__1::pair.1105"** [ %547, %566 ], [ %602, %601 ]
  %605 = phi %"struct.std::__1::pair.1105"** [ %541, %566 ], [ %595, %601 ]
  %606 = phi i64 [ %570, %566 ], [ %599, %601 ]
  switch i64 %606, label %610 [
    i64 1, label %608
    i64 2, label %607
  ]

607:                                              ; preds = %603
  br label %608

608:                                              ; preds = %603, %607
  %609 = phi i64 [ 256, %607 ], [ 128, %603 ]
  store i64 %609, i64* %542, align 8
  br label %610

610:                                              ; preds = %608, %603
  %611 = icmp eq %"struct.std::__1::pair.1105"** %605, %604
  br i1 %611, label %630, label %612

612:                                              ; preds = %610, %612
  %613 = phi %"struct.std::__1::pair.1105"** [ %616, %612 ], [ %605, %610 ]
  %614 = bitcast %"struct.std::__1::pair.1105"** %613 to i8**
  %615 = load i8*, i8** %614, align 8
  call void @_ZdlPv(i8* %615) #12
  %616 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %613, i64 1
  %617 = icmp eq %"struct.std::__1::pair.1105"** %616, %604
  br i1 %617, label %618, label %612

618:                                              ; preds = %612
  %619 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %540, align 8
  %620 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %546, align 8
  %621 = icmp eq %"struct.std::__1::pair.1105"** %620, %619
  br i1 %621, label %630, label %622

622:                                              ; preds = %618
  %623 = ptrtoint %"struct.std::__1::pair.1105"** %619 to i64
  %624 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %620, i64 -1
  %625 = ptrtoint %"struct.std::__1::pair.1105"** %624 to i64
  %626 = sub i64 %625, %623
  %627 = lshr i64 %626, 3
  %628 = xor i64 %627, -1
  %629 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %620, i64 %628
  store %"struct.std::__1::pair.1105"** %629, %"struct.std::__1::pair.1105"*** %546, align 8
  br label %630

630:                                              ; preds = %622, %618, %610
  %631 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %632 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %631, align 8
  %633 = icmp eq %"struct.std::__1::pair.1105"** %632, null
  br i1 %633, label %636, label %634

634:                                              ; preds = %630
  %635 = bitcast %"struct.std::__1::pair.1105"** %632 to i8*
  call void @_ZdlPv(i8* %635) #12
  br label %636

636:                                              ; preds = %630, %634
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %349) #11
  %637 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %395, align 8
  %638 = load i64, i64* %397, align 8
  %639 = lshr i64 %638, 8
  %640 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %637, i64 %639
  %641 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %401, align 8
  %642 = icmp eq %"struct.std::__1::pair.1105"** %641, %637
  %643 = ptrtoint %"struct.std::__1::pair.1105"** %641 to i64
  %644 = ptrtoint %"struct.std::__1::pair.1105"** %637 to i64
  br i1 %642, label %645, label %647

645:                                              ; preds = %636
  %646 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %660

647:                                              ; preds = %636
  %648 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %640, align 8
  %649 = and i64 %638, 255
  %650 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %648, i64 %649
  %651 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %652 = load i64, i64* %651, align 8
  %653 = add i64 %652, %638
  %654 = lshr i64 %653, 8
  %655 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %637, i64 %654
  %656 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %655, align 8
  %657 = and i64 %653, 255
  %658 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %656, i64 %657
  %659 = icmp eq %"struct.std::__1::pair.1105"* %658, %650
  br i1 %659, label %660, label %666

660:                                              ; preds = %679, %647, %645
  %661 = phi i64* [ %646, %645 ], [ %651, %647 ], [ %651, %679 ]
  store i64 0, i64* %661, align 8
  %662 = bitcast %"struct.std::__1::pair.1105"*** %401 to i64*
  %663 = sub i64 %643, %644
  %664 = ashr exact i64 %663, 3
  %665 = icmp ugt i64 %664, 2
  br i1 %665, label %684, label %697

666:                                              ; preds = %647, %679
  %667 = phi %"struct.std::__1::pair.1105"* [ %682, %679 ], [ %650, %647 ]
  %668 = phi %"struct.std::__1::pair.1105"** [ %681, %679 ], [ %640, %647 ]
  %669 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %667, i64 1
  %670 = ptrtoint %"struct.std::__1::pair.1105"* %669 to i64
  %671 = bitcast %"struct.std::__1::pair.1105"** %668 to i64*
  %672 = load i64, i64* %671, align 8
  %673 = sub i64 %670, %672
  %674 = icmp eq i64 %673, 4096
  br i1 %674, label %675, label %679

675:                                              ; preds = %666
  %676 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %668, i64 1
  %677 = bitcast %"struct.std::__1::pair.1105"** %676 to i64*
  %678 = load i64, i64* %677, align 8
  br label %679

679:                                              ; preds = %675, %666
  %680 = phi i64 [ %678, %675 ], [ %670, %666 ]
  %681 = phi %"struct.std::__1::pair.1105"** [ %676, %675 ], [ %668, %666 ]
  %682 = inttoptr i64 %680 to %"struct.std::__1::pair.1105"*
  %683 = icmp eq %"struct.std::__1::pair.1105"* %658, %682
  br i1 %683, label %660, label %666

684:                                              ; preds = %660, %684
  %685 = phi %"struct.std::__1::pair.1105"** [ %689, %684 ], [ %637, %660 ]
  %686 = bitcast %"struct.std::__1::pair.1105"** %685 to i8**
  %687 = load i8*, i8** %686, align 8
  call void @_ZdlPv(i8* %687) #12
  %688 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %395, align 8
  %689 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %688, i64 1
  store %"struct.std::__1::pair.1105"** %689, %"struct.std::__1::pair.1105"*** %395, align 8
  %690 = load i64, i64* %662, align 8
  %691 = ptrtoint %"struct.std::__1::pair.1105"** %689 to i64
  %692 = sub i64 %690, %691
  %693 = ashr exact i64 %692, 3
  %694 = icmp ugt i64 %693, 2
  br i1 %694, label %684, label %695

695:                                              ; preds = %684
  %696 = inttoptr i64 %690 to %"struct.std::__1::pair.1105"**
  br label %697

697:                                              ; preds = %695, %660
  %698 = phi %"struct.std::__1::pair.1105"** [ %641, %660 ], [ %696, %695 ]
  %699 = phi %"struct.std::__1::pair.1105"** [ %637, %660 ], [ %689, %695 ]
  %700 = phi i64 [ %664, %660 ], [ %693, %695 ]
  switch i64 %700, label %704 [
    i64 1, label %702
    i64 2, label %701
  ]

701:                                              ; preds = %697
  br label %702

702:                                              ; preds = %697, %701
  %703 = phi i64 [ 256, %701 ], [ 128, %697 ]
  store i64 %703, i64* %397, align 8
  br label %704

704:                                              ; preds = %702, %697
  %705 = icmp eq %"struct.std::__1::pair.1105"** %699, %698
  br i1 %705, label %724, label %706

706:                                              ; preds = %704, %706
  %707 = phi %"struct.std::__1::pair.1105"** [ %710, %706 ], [ %699, %704 ]
  %708 = bitcast %"struct.std::__1::pair.1105"** %707 to i8**
  %709 = load i8*, i8** %708, align 8
  call void @_ZdlPv(i8* %709) #12
  %710 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %707, i64 1
  %711 = icmp eq %"struct.std::__1::pair.1105"** %710, %698
  br i1 %711, label %712, label %706

712:                                              ; preds = %706
  %713 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %395, align 8
  %714 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %401, align 8
  %715 = icmp eq %"struct.std::__1::pair.1105"** %714, %713
  br i1 %715, label %724, label %716

716:                                              ; preds = %712
  %717 = ptrtoint %"struct.std::__1::pair.1105"** %713 to i64
  %718 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %714, i64 -1
  %719 = ptrtoint %"struct.std::__1::pair.1105"** %718 to i64
  %720 = sub i64 %719, %717
  %721 = lshr i64 %720, 3
  %722 = xor i64 %721, -1
  %723 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %714, i64 %722
  store %"struct.std::__1::pair.1105"** %723, %"struct.std::__1::pair.1105"*** %401, align 8
  br label %724

724:                                              ; preds = %716, %712, %704
  %725 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %726 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %725, align 8
  %727 = icmp eq %"struct.std::__1::pair.1105"** %726, null
  br i1 %727, label %730, label %728

728:                                              ; preds = %724
  %729 = bitcast %"struct.std::__1::pair.1105"** %726 to i8*
  call void @_ZdlPv(i8* %729) #12
  br label %730

730:                                              ; preds = %724, %728
  %731 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %356, align 8
  %732 = load i64, i64* %358, align 8
  %733 = lshr i64 %732, 8
  %734 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %731, i64 %733
  %735 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %362, align 8
  %736 = icmp eq %"struct.std::__1::pair.1105"** %735, %731
  %737 = ptrtoint %"struct.std::__1::pair.1105"** %735 to i64
  %738 = ptrtoint %"struct.std::__1::pair.1105"** %731 to i64
  br i1 %736, label %739, label %741

739:                                              ; preds = %730
  %740 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %754

741:                                              ; preds = %730
  %742 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %734, align 8
  %743 = and i64 %732, 255
  %744 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %742, i64 %743
  %745 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %746 = load i64, i64* %745, align 8
  %747 = add i64 %746, %732
  %748 = lshr i64 %747, 8
  %749 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %731, i64 %748
  %750 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %749, align 8
  %751 = and i64 %747, 255
  %752 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %750, i64 %751
  %753 = icmp eq %"struct.std::__1::pair.1105"* %752, %744
  br i1 %753, label %754, label %760

754:                                              ; preds = %773, %741, %739
  %755 = phi i64* [ %740, %739 ], [ %745, %741 ], [ %745, %773 ]
  store i64 0, i64* %755, align 8
  %756 = bitcast %"struct.std::__1::pair.1105"*** %362 to i64*
  %757 = sub i64 %737, %738
  %758 = ashr exact i64 %757, 3
  %759 = icmp ugt i64 %758, 2
  br i1 %759, label %778, label %791

760:                                              ; preds = %741, %773
  %761 = phi %"struct.std::__1::pair.1105"* [ %776, %773 ], [ %744, %741 ]
  %762 = phi %"struct.std::__1::pair.1105"** [ %775, %773 ], [ %734, %741 ]
  %763 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %761, i64 1
  %764 = ptrtoint %"struct.std::__1::pair.1105"* %763 to i64
  %765 = bitcast %"struct.std::__1::pair.1105"** %762 to i64*
  %766 = load i64, i64* %765, align 8
  %767 = sub i64 %764, %766
  %768 = icmp eq i64 %767, 4096
  br i1 %768, label %769, label %773

769:                                              ; preds = %760
  %770 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %762, i64 1
  %771 = bitcast %"struct.std::__1::pair.1105"** %770 to i64*
  %772 = load i64, i64* %771, align 8
  br label %773

773:                                              ; preds = %769, %760
  %774 = phi i64 [ %772, %769 ], [ %764, %760 ]
  %775 = phi %"struct.std::__1::pair.1105"** [ %770, %769 ], [ %762, %760 ]
  %776 = inttoptr i64 %774 to %"struct.std::__1::pair.1105"*
  %777 = icmp eq %"struct.std::__1::pair.1105"* %752, %776
  br i1 %777, label %754, label %760

778:                                              ; preds = %754, %778
  %779 = phi %"struct.std::__1::pair.1105"** [ %783, %778 ], [ %731, %754 ]
  %780 = bitcast %"struct.std::__1::pair.1105"** %779 to i8**
  %781 = load i8*, i8** %780, align 8
  call void @_ZdlPv(i8* %781) #12
  %782 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %356, align 8
  %783 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %782, i64 1
  store %"struct.std::__1::pair.1105"** %783, %"struct.std::__1::pair.1105"*** %356, align 8
  %784 = load i64, i64* %756, align 8
  %785 = ptrtoint %"struct.std::__1::pair.1105"** %783 to i64
  %786 = sub i64 %784, %785
  %787 = ashr exact i64 %786, 3
  %788 = icmp ugt i64 %787, 2
  br i1 %788, label %778, label %789

789:                                              ; preds = %778
  %790 = inttoptr i64 %784 to %"struct.std::__1::pair.1105"**
  br label %791

791:                                              ; preds = %789, %754
  %792 = phi %"struct.std::__1::pair.1105"** [ %735, %754 ], [ %790, %789 ]
  %793 = phi %"struct.std::__1::pair.1105"** [ %731, %754 ], [ %783, %789 ]
  %794 = phi i64 [ %758, %754 ], [ %787, %789 ]
  switch i64 %794, label %798 [
    i64 1, label %796
    i64 2, label %795
  ]

795:                                              ; preds = %791
  br label %796

796:                                              ; preds = %791, %795
  %797 = phi i64 [ 256, %795 ], [ 128, %791 ]
  store i64 %797, i64* %358, align 8
  br label %798

798:                                              ; preds = %796, %791
  %799 = icmp eq %"struct.std::__1::pair.1105"** %793, %792
  br i1 %799, label %818, label %800

800:                                              ; preds = %798, %800
  %801 = phi %"struct.std::__1::pair.1105"** [ %804, %800 ], [ %793, %798 ]
  %802 = bitcast %"struct.std::__1::pair.1105"** %801 to i8**
  %803 = load i8*, i8** %802, align 8
  call void @_ZdlPv(i8* %803) #12
  %804 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %801, i64 1
  %805 = icmp eq %"struct.std::__1::pair.1105"** %804, %792
  br i1 %805, label %806, label %800

806:                                              ; preds = %800
  %807 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %356, align 8
  %808 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %362, align 8
  %809 = icmp eq %"struct.std::__1::pair.1105"** %808, %807
  br i1 %809, label %818, label %810

810:                                              ; preds = %806
  %811 = ptrtoint %"struct.std::__1::pair.1105"** %807 to i64
  %812 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %808, i64 -1
  %813 = ptrtoint %"struct.std::__1::pair.1105"** %812 to i64
  %814 = sub i64 %813, %811
  %815 = lshr i64 %814, 3
  %816 = xor i64 %815, -1
  %817 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %808, i64 %816
  store %"struct.std::__1::pair.1105"** %817, %"struct.std::__1::pair.1105"*** %362, align 8
  br label %818

818:                                              ; preds = %810, %806, %798
  %819 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %820 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %819, align 8
  %821 = icmp eq %"struct.std::__1::pair.1105"** %820, null
  br i1 %821, label %824, label %822

822:                                              ; preds = %818
  %823 = bitcast %"struct.std::__1::pair.1105"** %820 to i8*
  call void @_ZdlPv(i8* %823) #12
  br label %824

824:                                              ; preds = %818, %822
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %114) #11
  %825 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 1
  %826 = load %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::LoopDescriptor"** %825, align 8
  %827 = call %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt14LoopDescriptor11AddLoopNestENSt3__110unique_ptrINS0_4LoopENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::LoopDescriptor"* %826, %"class.spvtools::opt::Loop"* %1) #11
  %828 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %20, align 8
  %829 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %828, null
  br i1 %829, label %836, label %830

830:                                              ; preds = %824, %830
  %831 = phi %"struct.std::__1::__hash_node_base.1082"* [ %833, %830 ], [ %828, %824 ]
  %832 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %831, i64 0, i32 0
  %833 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %832, align 8
  %834 = bitcast %"struct.std::__1::__hash_node_base.1082"* %831 to i8*
  call void @_ZdlPv(i8* %834) #12
  %835 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %833, null
  br i1 %835, label %836, label %830

836:                                              ; preds = %830, %824
  %837 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %19, align 8
  store %"struct.std::__1::__hash_node_base.1082"** null, %"struct.std::__1::__hash_node_base.1082"*** %19, align 8
  %838 = icmp eq %"struct.std::__1::__hash_node_base.1082"** %837, null
  br i1 %838, label %841, label %839

839:                                              ; preds = %836
  %840 = bitcast %"struct.std::__1::__hash_node_base.1082"** %837 to i8*
  call void @_ZdlPv(i8* %840) #12
  br label %841

841:                                              ; preds = %836, %839
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #11
  ret void

842:                                              ; preds = %431, %935
  %843 = phi %"class.spvtools::opt::Loop"* [ %427, %431 ], [ %940, %935 ]
  %844 = call i8* @_Znwm(i64 128) #12
  %845 = bitcast i8* %844 to %"class.spvtools::opt::Loop"*
  %846 = load i64, i64* %432, align 8
  %847 = bitcast i8* %844 to i64*
  store i64 %846, i64* %847, align 8
  %848 = getelementptr inbounds i8, i8* %844, i64 8
  %849 = getelementptr inbounds i8, i8* %844, i64 112
  %850 = bitcast i8* %849 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %848, i8 0, i64 104, i1 false) #11
  store i32 1065353216, i32* %850, align 4
  %851 = getelementptr inbounds i8, i8* %844, i64 120
  store i8 0, i8* %851, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %433) #11
  %852 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %843, i64 0, i32 6
  %853 = bitcast %"class.spvtools::opt::Loop"** %852 to i64*
  %854 = load i64, i64* %853, align 8
  store i64 %854, i64* %434, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %435) #11
  store %"class.spvtools::opt::Loop"** %16, %"class.spvtools::opt::Loop"*** %436, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %437) #11
  %855 = call { %"struct.std::__1::__hash_node_base.1082"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1078"* nonnull %26, %"class.spvtools::opt::Loop"** nonnull dereferenceable(8) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1416"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %5) #11
  %856 = extractvalue { %"struct.std::__1::__hash_node_base.1082"*, i8 } %855, 0
  %857 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %856, i64 3
  %858 = bitcast %"struct.std::__1::__hash_node_base.1082"* %857 to %"class.spvtools::opt::Loop"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %437) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %435) #11
  %859 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %858, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %433) #11
  %860 = icmp eq %"class.spvtools::opt::Loop"* %859, null
  br i1 %860, label %935, label %861

861:                                              ; preds = %842
  %862 = ptrtoint i8* %844 to i64
  %863 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %859, i64 0, i32 7
  %864 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %859, i64 0, i32 7, i32 0, i32 1
  %865 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %864, align 8
  %866 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %859, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %867 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %866, align 8
  %868 = icmp eq %"class.spvtools::opt::Loop"** %865, %867
  %869 = ptrtoint %"class.spvtools::opt::Loop"** %867 to i64
  br i1 %868, label %875, label %870

870:                                              ; preds = %861
  %871 = bitcast %"class.spvtools::opt::Loop"** %865 to i64*
  store i64 %862, i64* %871, align 8
  %872 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %865, i64 1
  %873 = ptrtoint %"class.spvtools::opt::Loop"** %872 to i64
  %874 = bitcast %"class.spvtools::opt::Loop"*** %864 to i64*
  store i64 %873, i64* %874, align 8
  br label %932

875:                                              ; preds = %861
  %876 = ptrtoint %"class.spvtools::opt::Loop"** %865 to i64
  %877 = bitcast %"class.spvtools::opt::Loop"*** %864 to i64*
  %878 = bitcast %"class.std::__1::vector.910"* %863 to i64*
  %879 = load i64, i64* %878, align 8
  %880 = sub i64 %876, %879
  %881 = ashr exact i64 %880, 3
  %882 = add nsw i64 %881, 1
  %883 = icmp ugt i64 %882, 2305843009213693951
  br i1 %883, label %884, label %886

884:                                              ; preds = %875
  %885 = bitcast %"class.std::__1::vector.910"* %863 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %885) #13
  unreachable

886:                                              ; preds = %875
  %887 = bitcast %"class.spvtools::opt::Loop"*** %866 to i64*
  %888 = sub i64 %869, %879
  %889 = ashr exact i64 %888, 3
  %890 = icmp ult i64 %889, 1152921504606846975
  br i1 %890, label %891, label %899

891:                                              ; preds = %886
  %892 = ashr exact i64 %888, 2
  %893 = icmp ult i64 %892, %882
  %894 = select i1 %893, i64 %882, i64 %892
  %895 = icmp eq i64 %894, 0
  br i1 %895, label %904, label %896

896:                                              ; preds = %891
  %897 = icmp ugt i64 %894, 2305843009213693951
  br i1 %897, label %898, label %899

898:                                              ; preds = %896
  call void @abort() #13
  unreachable

899:                                              ; preds = %896, %886
  %900 = phi i64 [ %894, %896 ], [ 2305843009213693951, %886 ]
  %901 = shl i64 %900, 3
  %902 = call i8* @_Znwm(i64 %901) #12
  %903 = bitcast i8* %902 to %"class.spvtools::opt::Loop"**
  br label %904

904:                                              ; preds = %899, %891
  %905 = phi i64 [ %900, %899 ], [ 0, %891 ]
  %906 = phi %"class.spvtools::opt::Loop"** [ %903, %899 ], [ null, %891 ]
  %907 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %906, i64 %881
  %908 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %906, i64 %905
  %909 = ptrtoint %"class.spvtools::opt::Loop"** %908 to i64
  %910 = bitcast %"class.spvtools::opt::Loop"** %907 to i64*
  store i64 %862, i64* %910, align 8
  %911 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %907, i64 1
  %912 = ptrtoint %"class.spvtools::opt::Loop"** %911 to i64
  %913 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %863, i64 0, i32 0, i32 0
  %914 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %913, align 8
  %915 = load i64, i64* %877, align 8
  %916 = ptrtoint %"class.spvtools::opt::Loop"** %914 to i64
  %917 = sub i64 %915, %916
  %918 = ashr exact i64 %917, 3
  %919 = sub nsw i64 0, %918
  %920 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %907, i64 %919
  %921 = ptrtoint %"class.spvtools::opt::Loop"** %920 to i64
  %922 = icmp sgt i64 %917, 0
  br i1 %922, label %923, label %927

923:                                              ; preds = %904
  %924 = bitcast %"class.spvtools::opt::Loop"** %920 to i8*
  %925 = bitcast %"class.spvtools::opt::Loop"** %914 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %924, i8* align 8 %925, i64 %917, i1 false) #11
  %926 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %913, align 8
  br label %927

927:                                              ; preds = %923, %904
  %928 = phi %"class.spvtools::opt::Loop"** [ %914, %904 ], [ %926, %923 ]
  store i64 %921, i64* %878, align 8
  store i64 %912, i64* %877, align 8
  store i64 %909, i64* %887, align 8
  %929 = icmp eq %"class.spvtools::opt::Loop"** %928, null
  br i1 %929, label %932, label %930

930:                                              ; preds = %927
  %931 = bitcast %"class.spvtools::opt::Loop"** %928 to i8*
  call void @_ZdlPv(i8* %931) #12
  br label %932

932:                                              ; preds = %870, %927, %930
  %933 = getelementptr inbounds i8, i8* %844, i64 48
  %934 = bitcast i8* %933 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %859, %"class.spvtools::opt::Loop"** %934, align 8
  br label %935

935:                                              ; preds = %842, %932
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %438) #11
  store %"class.spvtools::opt::Loop"* %843, %"class.spvtools::opt::Loop"** %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %439) #11
  store %"class.spvtools::opt::Loop"** %17, %"class.spvtools::opt::Loop"*** %440, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %441) #11
  %936 = call { %"struct.std::__1::__hash_node_base.1082"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1078"* nonnull %26, %"class.spvtools::opt::Loop"** nonnull dereferenceable(8) %17, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1416"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %7) #11
  %937 = extractvalue { %"struct.std::__1::__hash_node_base.1082"*, i8 } %936, 0
  %938 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %937, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %441) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %439) #11
  %939 = bitcast %"struct.std::__1::__hash_node_base.1082"* %938 to i8**
  store i8* %844, i8** %939, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %438) #11
  call void @_ZNK8spvtools3opt9LoopUtils16PopulateLoopDescEPNS0_4LoopES3_RKNS1_17LoopCloningResultE(%"class.spvtools::opt::LoopUtils"* undef, %"class.spvtools::opt::Loop"* nonnull %845, %"class.spvtools::opt::Loop"* %843, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* dereferenceable(184) %2)
  call void @_ZN8spvtools3opt14TreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"* nonnull %14) #11
  %940 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %426, align 8
  %941 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %428, align 8
  %942 = icmp eq %"class.spvtools::opt::Loop"* %940, %941
  br i1 %942, label %442, label %842
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3opt9LoopUtils16PopulateLoopDescEPNS0_4LoopES3_RKNS1_17LoopCloningResultE(%"class.spvtools::opt::LoopUtils"* nocapture readnone, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"* nocapture readonly, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* nocapture readonly dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = bitcast %"struct.std::__1::__hash_node_base.922"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast i32* %5 to i8*
  %14 = icmp eq %"class.spvtools::opt::Loop"* %1, null
  br label %92

15:                                               ; preds = %171, %4
  %16 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2, i64 0, i32 1
  %17 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %19, i64 0, i32 4
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %19, i64 0, i32 3
  %25 = load i8, i8* %24, align 4, !range !3
  %26 = zext i8 %25 to i32
  %27 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %19, i32 %26) #11
  br label %28

28:                                               ; preds = %15, %23
  %29 = phi i32 [ %27, %23 ], [ 0, %15 ]
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %82, label %34

34:                                               ; preds = %28
  %35 = call i64 @llvm.ctpop.i64(i64 %32) #11, !range !2
  %36 = icmp ugt i64 %35, 1
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  %38 = add i64 %32, 4294967295
  %39 = and i64 %38, %30
  br label %44

40:                                               ; preds = %34
  %41 = icmp ugt i64 %32, %30
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %30, %32
  br label %44

44:                                               ; preds = %42, %40, %37
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %30, %40 ]
  %46 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %47, i64 %45
  %49 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.333"* %49, null
  br i1 %50, label %82, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %49, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.333"* %53, null
  br i1 %54, label %82, label %55

55:                                               ; preds = %51
  %56 = add i64 %32, -1
  br label %57

57:                                               ; preds = %78, %55
  %58 = phi %"struct.std::__1::__hash_node_base.333"* [ %53, %55 ], [ %80, %78 ]
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %58, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.333"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, %30
  br i1 %62, label %73, label %63

63:                                               ; preds = %57
  br i1 %36, label %66, label %64

64:                                               ; preds = %63
  %65 = and i64 %61, %56
  br label %70

66:                                               ; preds = %63
  %67 = icmp ult i64 %61, %32
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %61, %32
  br label %70

70:                                               ; preds = %68, %66, %64
  %71 = phi i64 [ %65, %64 ], [ %69, %68 ], [ %61, %66 ]
  %72 = icmp eq i64 %71, %45
  br i1 %72, label %78, label %82

73:                                               ; preds = %57
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %58, i64 2
  %75 = bitcast %"struct.std::__1::__hash_node_base.333"* %74 to i32*
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, %29
  br i1 %77, label %83, label %78

78:                                               ; preds = %73, %70
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %58, i64 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.333"* %80, null
  br i1 %81, label %82, label %57

82:                                               ; preds = %78, %70, %51, %44, %28
  call void @abort() #13
  unreachable

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %58, i64 3
  %85 = bitcast %"struct.std::__1::__hash_node_base.333"* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 1
  %88 = bitcast %"class.spvtools::opt::BasicBlock"** %87 to i64*
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2, i64 0, i32 5
  %90 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %89, align 8
  %91 = icmp eq %"class.spvtools::opt::BasicBlock"* %90, null
  br i1 %91, label %243, label %175

92:                                               ; preds = %10, %171
  %93 = phi i64 [ %8, %10 ], [ %173, %171 ]
  %94 = inttoptr i64 %93 to %"struct.std::__1::__hash_node.1169"*
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node.1169", %"struct.std::__1::__hash_node.1169"* %94, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i64
  %98 = load i64, i64* %11, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %147, label %100

100:                                              ; preds = %92
  %101 = call i64 @llvm.ctpop.i64(i64 %98) #11, !range !2
  %102 = icmp ugt i64 %101, 1
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  %104 = add i64 %98, 4294967295
  %105 = and i64 %104, %97
  br label %110

106:                                              ; preds = %100
  %107 = icmp ugt i64 %98, %97
  br i1 %107, label %110, label %108

108:                                              ; preds = %106
  %109 = urem i64 %97, %98
  br label %110

110:                                              ; preds = %108, %106, %103
  %111 = phi i64 [ %105, %103 ], [ %109, %108 ], [ %97, %106 ]
  %112 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %112, i64 %111
  %114 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.333"* %114, null
  br i1 %115, label %147, label %116

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %114, i64 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %117, align 8
  %119 = icmp eq %"struct.std::__1::__hash_node_base.333"* %118, null
  br i1 %119, label %147, label %120

120:                                              ; preds = %116
  %121 = add i64 %98, -1
  br label %122

122:                                              ; preds = %143, %120
  %123 = phi %"struct.std::__1::__hash_node_base.333"* [ %118, %120 ], [ %145, %143 ]
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %123, i64 1
  %125 = bitcast %"struct.std::__1::__hash_node_base.333"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, %97
  br i1 %127, label %138, label %128

128:                                              ; preds = %122
  br i1 %102, label %131, label %129

129:                                              ; preds = %128
  %130 = and i64 %126, %121
  br label %135

131:                                              ; preds = %128
  %132 = icmp ult i64 %126, %98
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = urem i64 %126, %98
  br label %135

135:                                              ; preds = %133, %131, %129
  %136 = phi i64 [ %130, %129 ], [ %134, %133 ], [ %126, %131 ]
  %137 = icmp eq i64 %136, %111
  br i1 %137, label %143, label %147

138:                                              ; preds = %122
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %123, i64 2
  %140 = bitcast %"struct.std::__1::__hash_node_base.333"* %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = icmp eq i32 %141, %96
  br i1 %142, label %148, label %143

143:                                              ; preds = %138, %135
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %123, i64 0, i32 0
  %145 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.333"* %145, null
  br i1 %146, label %147, label %122

147:                                              ; preds = %116, %110, %92, %143, %135
  call void @abort() #13
  unreachable

148:                                              ; preds = %138
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %123, i64 3
  %150 = bitcast %"struct.std::__1::__hash_node_base.333"* %149 to %"class.spvtools::opt::BasicBlock"**
  %151 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %150, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %151, i64 0, i32 1, i32 0, i32 0, i32 0
  %153 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %152, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %153, i64 0, i32 4
  %155 = load i8, i8* %154, align 1, !range !3
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %162, label %157

157:                                              ; preds = %148
  %158 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %153, i64 0, i32 3
  %159 = load i8, i8* %158, align 4, !range !3
  %160 = zext i8 %159 to i32
  %161 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %153, i32 %160) #11
  br label %162

162:                                              ; preds = %157, %148
  %163 = phi i32 [ %161, %157 ], [ 0, %148 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 %163, i32* %5, align 4
  br i1 %14, label %171, label %164

164:                                              ; preds = %162, %164
  %165 = phi %"class.spvtools::opt::Loop"* [ %169, %164 ], [ %1, %162 ]
  %166 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %165, i64 0, i32 8, i32 0
  %167 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %166, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %5) #11
  %168 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %165, i64 0, i32 6
  %169 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %168, align 8
  %170 = icmp eq %"class.spvtools::opt::Loop"* %169, null
  br i1 %170, label %171, label %164

171:                                              ; preds = %164, %162
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  %172 = inttoptr i64 %93 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %15, label %92

175:                                              ; preds = %83
  %176 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %90, i64 0, i32 1, i32 0, i32 0, i32 0
  %177 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %176, align 8
  %178 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %177, i64 0, i32 4
  %179 = load i8, i8* %178, align 1, !range !3
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %186, label %181

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %177, i64 0, i32 3
  %183 = load i8, i8* %182, align 4, !range !3
  %184 = zext i8 %183 to i32
  %185 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %177, i32 %184) #11
  br label %186

186:                                              ; preds = %175, %181
  %187 = phi i32 [ %185, %181 ], [ 0, %175 ]
  %188 = zext i32 %187 to i64
  %189 = load i64, i64* %31, align 8
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %238, label %191

191:                                              ; preds = %186
  %192 = call i64 @llvm.ctpop.i64(i64 %189) #11, !range !2
  %193 = icmp ugt i64 %192, 1
  br i1 %193, label %197, label %194

194:                                              ; preds = %191
  %195 = add i64 %189, 4294967295
  %196 = and i64 %195, %188
  br label %201

197:                                              ; preds = %191
  %198 = icmp ugt i64 %189, %188
  br i1 %198, label %201, label %199

199:                                              ; preds = %197
  %200 = urem i64 %188, %189
  br label %201

201:                                              ; preds = %199, %197, %194
  %202 = phi i64 [ %196, %194 ], [ %200, %199 ], [ %188, %197 ]
  %203 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %46, align 8
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %203, i64 %202
  %205 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %204, align 8
  %206 = icmp eq %"struct.std::__1::__hash_node_base.333"* %205, null
  br i1 %206, label %238, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %205, i64 0, i32 0
  %209 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %208, align 8
  %210 = icmp eq %"struct.std::__1::__hash_node_base.333"* %209, null
  br i1 %210, label %238, label %211

211:                                              ; preds = %207
  %212 = add i64 %189, -1
  br label %213

213:                                              ; preds = %234, %211
  %214 = phi %"struct.std::__1::__hash_node_base.333"* [ %209, %211 ], [ %236, %234 ]
  %215 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %214, i64 1
  %216 = bitcast %"struct.std::__1::__hash_node_base.333"* %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = icmp eq i64 %217, %188
  br i1 %218, label %229, label %219

219:                                              ; preds = %213
  br i1 %193, label %222, label %220

220:                                              ; preds = %219
  %221 = and i64 %217, %212
  br label %226

222:                                              ; preds = %219
  %223 = icmp ult i64 %217, %189
  br i1 %223, label %226, label %224

224:                                              ; preds = %222
  %225 = urem i64 %217, %189
  br label %226

226:                                              ; preds = %224, %222, %220
  %227 = phi i64 [ %221, %220 ], [ %225, %224 ], [ %217, %222 ]
  %228 = icmp eq i64 %227, %202
  br i1 %228, label %234, label %238

229:                                              ; preds = %213
  %230 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %214, i64 2
  %231 = bitcast %"struct.std::__1::__hash_node_base.333"* %230 to i32*
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, %187
  br i1 %233, label %239, label %234

234:                                              ; preds = %229, %226
  %235 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %214, i64 0, i32 0
  %236 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %235, align 8
  %237 = icmp eq %"struct.std::__1::__hash_node_base.333"* %236, null
  br i1 %237, label %238, label %213

238:                                              ; preds = %234, %226, %207, %201, %186
  call void @abort() #13
  unreachable

239:                                              ; preds = %229
  %240 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %214, i64 3
  %241 = bitcast %"struct.std::__1::__hash_node_base.333"* %240 to %"class.spvtools::opt::BasicBlock"**
  %242 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %241, align 8
  call void @_ZN8spvtools3opt4Loop13SetLatchBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::BasicBlock"* %242) #11
  br label %243

243:                                              ; preds = %83, %239
  %244 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2, i64 0, i32 2
  %245 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %244, align 8
  %246 = icmp eq %"class.spvtools::opt::BasicBlock"* %245, null
  br i1 %246, label %315, label %247

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %245, i64 0, i32 1, i32 0, i32 0, i32 0
  %249 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %248, align 8
  %250 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %249, i64 0, i32 4
  %251 = load i8, i8* %250, align 1, !range !3
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %258, label %253

253:                                              ; preds = %247
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %249, i64 0, i32 3
  %255 = load i8, i8* %254, align 4, !range !3
  %256 = zext i8 %255 to i32
  %257 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %249, i32 %256) #11
  br label %258

258:                                              ; preds = %247, %253
  %259 = phi i32 [ %257, %253 ], [ 0, %247 ]
  %260 = zext i32 %259 to i64
  %261 = load i64, i64* %31, align 8
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %310, label %263

263:                                              ; preds = %258
  %264 = call i64 @llvm.ctpop.i64(i64 %261) #11, !range !2
  %265 = icmp ugt i64 %264, 1
  br i1 %265, label %269, label %266

266:                                              ; preds = %263
  %267 = add i64 %261, 4294967295
  %268 = and i64 %267, %260
  br label %273

269:                                              ; preds = %263
  %270 = icmp ugt i64 %261, %260
  br i1 %270, label %273, label %271

271:                                              ; preds = %269
  %272 = urem i64 %260, %261
  br label %273

273:                                              ; preds = %271, %269, %266
  %274 = phi i64 [ %268, %266 ], [ %272, %271 ], [ %260, %269 ]
  %275 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %46, align 8
  %276 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %275, i64 %274
  %277 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %276, align 8
  %278 = icmp eq %"struct.std::__1::__hash_node_base.333"* %277, null
  br i1 %278, label %310, label %279

279:                                              ; preds = %273
  %280 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %277, i64 0, i32 0
  %281 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %280, align 8
  %282 = icmp eq %"struct.std::__1::__hash_node_base.333"* %281, null
  br i1 %282, label %310, label %283

283:                                              ; preds = %279
  %284 = add i64 %261, -1
  br label %285

285:                                              ; preds = %306, %283
  %286 = phi %"struct.std::__1::__hash_node_base.333"* [ %281, %283 ], [ %308, %306 ]
  %287 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %286, i64 1
  %288 = bitcast %"struct.std::__1::__hash_node_base.333"* %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = icmp eq i64 %289, %260
  br i1 %290, label %301, label %291

291:                                              ; preds = %285
  br i1 %265, label %294, label %292

292:                                              ; preds = %291
  %293 = and i64 %289, %284
  br label %298

294:                                              ; preds = %291
  %295 = icmp ult i64 %289, %261
  br i1 %295, label %298, label %296

296:                                              ; preds = %294
  %297 = urem i64 %289, %261
  br label %298

298:                                              ; preds = %296, %294, %292
  %299 = phi i64 [ %293, %292 ], [ %297, %296 ], [ %289, %294 ]
  %300 = icmp eq i64 %299, %274
  br i1 %300, label %306, label %310

301:                                              ; preds = %285
  %302 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %286, i64 2
  %303 = bitcast %"struct.std::__1::__hash_node_base.333"* %302 to i32*
  %304 = load i32, i32* %303, align 4
  %305 = icmp eq i32 %304, %259
  br i1 %305, label %311, label %306

306:                                              ; preds = %301, %298
  %307 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %286, i64 0, i32 0
  %308 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %307, align 8
  %309 = icmp eq %"struct.std::__1::__hash_node_base.333"* %308, null
  br i1 %309, label %310, label %285

310:                                              ; preds = %306, %298, %279, %273, %258
  call void @abort() #13
  unreachable

311:                                              ; preds = %301
  %312 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %286, i64 3
  %313 = bitcast %"struct.std::__1::__hash_node_base.333"* %312 to %"class.spvtools::opt::BasicBlock"**
  %314 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %313, align 8
  call void @_ZN8spvtools3opt4Loop16SetContinueBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::BasicBlock"* %314) #11
  br label %315

315:                                              ; preds = %243, %311
  %316 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2, i64 0, i32 3
  %317 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %316, align 8
  %318 = icmp eq %"class.spvtools::opt::BasicBlock"* %317, null
  br i1 %318, label %388, label %319

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %317, i64 0, i32 1, i32 0, i32 0, i32 0
  %321 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %320, align 8
  %322 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %321, i64 0, i32 4
  %323 = load i8, i8* %322, align 1, !range !3
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %330, label %325

325:                                              ; preds = %319
  %326 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %321, i64 0, i32 3
  %327 = load i8, i8* %326, align 4, !range !3
  %328 = zext i8 %327 to i32
  %329 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %321, i32 %328) #11
  br label %330

330:                                              ; preds = %319, %325
  %331 = phi i32 [ %329, %325 ], [ 0, %319 ]
  %332 = zext i32 %331 to i64
  %333 = load i64, i64* %31, align 8
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %385, label %335

335:                                              ; preds = %330
  %336 = call i64 @llvm.ctpop.i64(i64 %333) #11, !range !2
  %337 = icmp ugt i64 %336, 1
  br i1 %337, label %341, label %338

338:                                              ; preds = %335
  %339 = add i64 %333, 4294967295
  %340 = and i64 %339, %332
  br label %345

341:                                              ; preds = %335
  %342 = icmp ugt i64 %333, %332
  br i1 %342, label %345, label %343

343:                                              ; preds = %341
  %344 = urem i64 %332, %333
  br label %345

345:                                              ; preds = %343, %341, %338
  %346 = phi i64 [ %340, %338 ], [ %344, %343 ], [ %332, %341 ]
  %347 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %46, align 8
  %348 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %347, i64 %346
  %349 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %348, align 8
  %350 = icmp eq %"struct.std::__1::__hash_node_base.333"* %349, null
  br i1 %350, label %385, label %351

351:                                              ; preds = %345
  %352 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %349, i64 0, i32 0
  %353 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %352, align 8
  %354 = icmp eq %"struct.std::__1::__hash_node_base.333"* %353, null
  br i1 %354, label %385, label %355

355:                                              ; preds = %351
  %356 = add i64 %333, -1
  br label %357

357:                                              ; preds = %378, %355
  %358 = phi %"struct.std::__1::__hash_node_base.333"* [ %353, %355 ], [ %380, %378 ]
  %359 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %358, i64 1
  %360 = bitcast %"struct.std::__1::__hash_node_base.333"* %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = icmp eq i64 %361, %332
  br i1 %362, label %373, label %363

363:                                              ; preds = %357
  br i1 %337, label %366, label %364

364:                                              ; preds = %363
  %365 = and i64 %361, %356
  br label %370

366:                                              ; preds = %363
  %367 = icmp ult i64 %361, %333
  br i1 %367, label %370, label %368

368:                                              ; preds = %366
  %369 = urem i64 %361, %333
  br label %370

370:                                              ; preds = %368, %366, %364
  %371 = phi i64 [ %365, %364 ], [ %369, %368 ], [ %361, %366 ]
  %372 = icmp eq i64 %371, %346
  br i1 %372, label %378, label %385

373:                                              ; preds = %357
  %374 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %358, i64 2
  %375 = bitcast %"struct.std::__1::__hash_node_base.333"* %374 to i32*
  %376 = load i32, i32* %375, align 4
  %377 = icmp eq i32 %376, %331
  br i1 %377, label %382, label %378

378:                                              ; preds = %373, %370
  %379 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %358, i64 0, i32 0
  %380 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %379, align 8
  %381 = icmp eq %"struct.std::__1::__hash_node_base.333"* %380, null
  br i1 %381, label %385, label %357

382:                                              ; preds = %373
  %383 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %358, i64 3
  %384 = bitcast %"struct.std::__1::__hash_node_base.333"* %383 to %"class.spvtools::opt::BasicBlock"**
  br label %385

385:                                              ; preds = %378, %370, %351, %330, %345, %382
  %386 = phi %"class.spvtools::opt::BasicBlock"** [ %384, %382 ], [ %316, %345 ], [ %316, %330 ], [ %316, %351 ], [ %316, %370 ], [ %316, %378 ]
  %387 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %386, align 8
  call void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::BasicBlock"* %387) #11
  br label %388

388:                                              ; preds = %315, %385
  %389 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %2, i64 0, i32 4
  %390 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %389, align 8
  %391 = icmp eq %"class.spvtools::opt::BasicBlock"* %390, null
  br i1 %391, label %459, label %392

392:                                              ; preds = %388
  %393 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %390, i64 0, i32 1, i32 0, i32 0, i32 0
  %394 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %393, align 8
  %395 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %394, i64 0, i32 4
  %396 = load i8, i8* %395, align 1, !range !3
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %403, label %398

398:                                              ; preds = %392
  %399 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %394, i64 0, i32 3
  %400 = load i8, i8* %399, align 4, !range !3
  %401 = zext i8 %400 to i32
  %402 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %394, i32 %401) #11
  br label %403

403:                                              ; preds = %392, %398
  %404 = phi i32 [ %402, %398 ], [ 0, %392 ]
  %405 = zext i32 %404 to i64
  %406 = load i64, i64* %31, align 8
  %407 = icmp eq i64 %406, 0
  br i1 %407, label %459, label %408

408:                                              ; preds = %403
  %409 = call i64 @llvm.ctpop.i64(i64 %406) #11, !range !2
  %410 = icmp ugt i64 %409, 1
  br i1 %410, label %414, label %411

411:                                              ; preds = %408
  %412 = add i64 %406, 4294967295
  %413 = and i64 %412, %405
  br label %418

414:                                              ; preds = %408
  %415 = icmp ugt i64 %406, %405
  br i1 %415, label %418, label %416

416:                                              ; preds = %414
  %417 = urem i64 %405, %406
  br label %418

418:                                              ; preds = %416, %414, %411
  %419 = phi i64 [ %413, %411 ], [ %417, %416 ], [ %405, %414 ]
  %420 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %46, align 8
  %421 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %420, i64 %419
  %422 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %421, align 8
  %423 = icmp eq %"struct.std::__1::__hash_node_base.333"* %422, null
  br i1 %423, label %459, label %424

424:                                              ; preds = %418
  %425 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %422, i64 0, i32 0
  %426 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %425, align 8
  %427 = icmp eq %"struct.std::__1::__hash_node_base.333"* %426, null
  br i1 %427, label %459, label %428

428:                                              ; preds = %424
  %429 = add i64 %406, -1
  br label %430

430:                                              ; preds = %451, %428
  %431 = phi %"struct.std::__1::__hash_node_base.333"* [ %426, %428 ], [ %453, %451 ]
  %432 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %431, i64 1
  %433 = bitcast %"struct.std::__1::__hash_node_base.333"* %432 to i64*
  %434 = load i64, i64* %433, align 8
  %435 = icmp eq i64 %434, %405
  br i1 %435, label %446, label %436

436:                                              ; preds = %430
  br i1 %410, label %439, label %437

437:                                              ; preds = %436
  %438 = and i64 %434, %429
  br label %443

439:                                              ; preds = %436
  %440 = icmp ult i64 %434, %406
  br i1 %440, label %443, label %441

441:                                              ; preds = %439
  %442 = urem i64 %434, %406
  br label %443

443:                                              ; preds = %441, %439, %437
  %444 = phi i64 [ %438, %437 ], [ %442, %441 ], [ %434, %439 ]
  %445 = icmp eq i64 %444, %419
  br i1 %445, label %451, label %459

446:                                              ; preds = %430
  %447 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %431, i64 2
  %448 = bitcast %"struct.std::__1::__hash_node_base.333"* %447 to i32*
  %449 = load i32, i32* %448, align 4
  %450 = icmp eq i32 %449, %404
  br i1 %450, label %455, label %451

451:                                              ; preds = %446, %443
  %452 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %431, i64 0, i32 0
  %453 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %452, align 8
  %454 = icmp eq %"struct.std::__1::__hash_node_base.333"* %453, null
  br i1 %454, label %459, label %430

455:                                              ; preds = %446
  %456 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %431, i64 3
  %457 = bitcast %"struct.std::__1::__hash_node_base.333"* %456 to %"class.spvtools::opt::BasicBlock"**
  %458 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %457, align 8
  call void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::BasicBlock"* %458) #11
  br label %459

459:                                              ; preds = %451, %443, %424, %403, %418, %455, %388
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt14LoopDescriptor11AddLoopNestENSt3__110unique_ptrINS0_4LoopENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt4Loop13SetLatchBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt4Loop16SetContinueBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt11CodeMetrics7AnalyzeERKNS0_4LoopE(%"struct.spvtools::opt::CodeMetrics"*, %"class.spvtools::opt::Loop"* nocapture readonly dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1320", align 8
  %4 = alloca %"class.std::__1::tuple.1363", align 8
  %5 = alloca %"class.std::__1::tuple.1172", align 1
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__1::function.1141", align 8
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 0
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 16
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %31

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 400) #12
  %19 = bitcast i8* %18 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %19, %"class.spvtools::opt::Module"* %17) #11
  %20 = ptrtoint i8* %18 to i64
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 15
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.273"* %21 to i64*
  store i64 %20, i64* %24, align 8
  %25 = icmp eq %"class.spvtools::opt::CFG"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %15
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %23) #11
  %27 = bitcast %"class.spvtools::opt::CFG"* %23 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %26, %15
  %29 = load i32, i32* %11, align 8
  %30 = or i32 %29, 16
  store i32 %30, i32* %11, align 8
  br label %31

31:                                               ; preds = %2, %28
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 15, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %32, align 8
  %34 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %0, i64 0, i32 1
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %88, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %38, %42
  %43 = phi %"struct.std::__1::__hash_node_base.1122"* [ %45, %42 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %44, align 8
  %46 = bitcast %"struct.std::__1::__hash_node_base.1122"* %43 to i8*
  tail call void @_ZdlPv(i8* %46) #12
  %47 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %45, null
  br i1 %47, label %48, label %42

48:                                               ; preds = %42, %38
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %39, align 8
  %49 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %70, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = add i64 %50, -1
  %55 = and i64 %50, 3
  %56 = icmp ult i64 %54, 3
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  %58 = sub i64 %50, %55
  br label %71

59:                                               ; preds = %71, %52
  %60 = phi i64 [ 0, %52 ], [ %85, %71 ]
  %61 = icmp eq i64 %55, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %59, %62
  %63 = phi i64 [ %67, %62 ], [ %60, %59 ]
  %64 = phi i64 [ %68, %62 ], [ %55, %59 ]
  %65 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %53, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %65, i64 %63
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %66, align 8
  %67 = add nuw i64 %63, 1
  %68 = add i64 %64, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %62, !llvm.loop !22

70:                                               ; preds = %59, %62, %48
  store i64 0, i64* %35, align 8
  br label %88

71:                                               ; preds = %71, %57
  %72 = phi i64 [ 0, %57 ], [ %85, %71 ]
  %73 = phi i64 [ %58, %57 ], [ %86, %71 ]
  %74 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %53, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %74, i64 %72
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %75, align 8
  %76 = or i64 %72, 1
  %77 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %53, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %77, i64 %76
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %78, align 8
  %79 = or i64 %72, 2
  %80 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %53, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %80, i64 %79
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %81, align 8
  %82 = or i64 %72, 3
  %83 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %53, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %83, i64 %82
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %84, align 8
  %85 = add nuw i64 %72, 4
  %86 = add i64 %73, -4
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %59, label %71

88:                                               ; preds = %31, %70
  %89 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %90 = bitcast %"struct.std::__1::__hash_node_base.922"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %115, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %33, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %33, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = bitcast i64* %6 to i8*
  %97 = bitcast %"class.std::__1::function.1141"* %7 to i8*
  %98 = ptrtoint i64* %6 to i64
  %99 = getelementptr inbounds %"class.std::__1::function.1141", %"class.std::__1::function.1141"* %7, i64 0, i32 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.std::__1::function.1141", %"class.std::__1::function.1141"* %7, i64 0, i32 0, i32 2
  %101 = bitcast %"class.std::__1::function.1141"* %7 to i64*
  %102 = bitcast %"class.std::__1::function.1320"* %3 to i8*
  %103 = ptrtoint %"class.std::__1::function.1141"* %7 to i64
  %104 = getelementptr inbounds %"class.std::__1::function.1320", %"class.std::__1::function.1320"* %3, i64 0, i32 0, i32 1, i32 0
  %105 = getelementptr inbounds %"class.std::__1::function.1320", %"class.std::__1::function.1320"* %3, i64 0, i32 0, i32 2
  %106 = bitcast %"class.std::__1::function.1320"* %3 to i64*
  %107 = getelementptr inbounds %"class.std::__1::function.1320", %"class.std::__1::function.1320"* %3, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds %"class.std::__1::function.1320", %"class.std::__1::function.1320"* %3, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::function.1141", %"class.std::__1::function.1141"* %7, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast i32* %8 to i8*
  %111 = getelementptr inbounds %"struct.spvtools::opt::CodeMetrics", %"struct.spvtools::opt::CodeMetrics"* %0, i64 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::tuple.1363"* %4 to i8*
  %113 = getelementptr inbounds %"class.std::__1::tuple.1363", %"class.std::__1::tuple.1363"* %4, i64 0, i32 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %5, i64 0, i32 0
  br label %116

115:                                              ; preds = %244, %88
  ret void

116:                                              ; preds = %93, %244
  %117 = phi i64 [ %91, %93 ], [ %254, %244 ]
  %118 = inttoptr i64 %117 to %"struct.std::__1::__hash_node.1169"*
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node.1169", %"struct.std::__1::__hash_node.1169"* %118, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i64
  %122 = load i64, i64* %94, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %171, label %124

124:                                              ; preds = %116
  %125 = call i64 @llvm.ctpop.i64(i64 %122) #11, !range !2
  %126 = icmp ugt i64 %125, 1
  br i1 %126, label %130, label %127

127:                                              ; preds = %124
  %128 = add i64 %122, 4294967295
  %129 = and i64 %128, %121
  br label %134

130:                                              ; preds = %124
  %131 = icmp ugt i64 %122, %121
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = urem i64 %121, %122
  br label %134

134:                                              ; preds = %132, %130, %127
  %135 = phi i64 [ %129, %127 ], [ %133, %132 ], [ %121, %130 ]
  %136 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %95, align 8
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %136, i64 %135
  %138 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %137, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.333"* %138, null
  br i1 %139, label %171, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %138, i64 0, i32 0
  %142 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %141, align 8
  %143 = icmp eq %"struct.std::__1::__hash_node_base.333"* %142, null
  br i1 %143, label %171, label %144

144:                                              ; preds = %140
  %145 = add i64 %122, -1
  br label %146

146:                                              ; preds = %167, %144
  %147 = phi %"struct.std::__1::__hash_node_base.333"* [ %142, %144 ], [ %169, %167 ]
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %147, i64 1
  %149 = bitcast %"struct.std::__1::__hash_node_base.333"* %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = icmp eq i64 %150, %121
  br i1 %151, label %162, label %152

152:                                              ; preds = %146
  br i1 %126, label %155, label %153

153:                                              ; preds = %152
  %154 = and i64 %150, %145
  br label %159

155:                                              ; preds = %152
  %156 = icmp ult i64 %150, %122
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = urem i64 %150, %122
  br label %159

159:                                              ; preds = %157, %155, %153
  %160 = phi i64 [ %154, %153 ], [ %158, %157 ], [ %150, %155 ]
  %161 = icmp eq i64 %160, %135
  br i1 %161, label %167, label %171

162:                                              ; preds = %146
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %147, i64 2
  %164 = bitcast %"struct.std::__1::__hash_node_base.333"* %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = icmp eq i32 %165, %120
  br i1 %166, label %172, label %167

167:                                              ; preds = %162, %159
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %147, i64 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %168, align 8
  %170 = icmp eq %"struct.std::__1::__hash_node_base.333"* %169, null
  br i1 %170, label %171, label %146

171:                                              ; preds = %140, %134, %116, %167, %159
  call void @abort() #13
  unreachable

172:                                              ; preds = %162
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %147, i64 3
  %174 = bitcast %"struct.std::__1::__hash_node_base.333"* %173 to %"class.spvtools::opt::BasicBlock"**
  %175 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %174, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #11
  store i64 0, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11CodeMetrics7AnalyzeERKNS3_4LoopEE3$_7S7_EEEEvPKNS0_16__policy_storageES6_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %99, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11CodeMetrics7AnalyzeERKNS5_4LoopEE3$_7FvPKNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %100, align 8
  store i64 %98, i64* %101, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_10BasicBlock11ForEachInstERKNS_8functionIFvS6_EEEbEUlS6_E_S7_EEEEbPKNS0_16__policy_storageES6_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %104, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPKNS5_11InstructionEEEEbEUlSA_E_FbSA_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %105, align 8
  store i64 %103, i64* %106, align 8
  %176 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %175, i64 0, i32 1, i32 0, i32 0, i32 0
  %177 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %176, align 8
  %178 = icmp eq %"class.spvtools::opt::Instruction"* %177, null
  br i1 %178, label %197, label %179

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %177, i64 0, i32 2
  %181 = load i32, i32* %180, align 8
  switch i32 %181, label %196 [
    i32 248, label %197
    i32 0, label %182
    i32 245, label %197
  ]

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %177, i64 0, i32 3
  %184 = load i8, i8* %183, align 4, !range !3
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %196

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %177, i64 0, i32 4
  %188 = load i8, i8* %187, align 1, !range !3
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %196

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %177, i64 0, i32 6, i32 0, i32 0
  %192 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %191, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %177, i64 0, i32 6, i32 0, i32 1
  %194 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %193, align 8
  %195 = icmp eq %"struct.spvtools::opt::Operand"* %192, %194
  br i1 %195, label %197, label %196

196:                                              ; preds = %179, %182, %186, %190
  store i64 1, i64* %6, align 8
  br label %197

197:                                              ; preds = %179, %179, %196, %190, %172
  %198 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %175, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %199 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %175, i64 0, i32 2, i32 0, i32 1
  %200 = bitcast %"class.spvtools::opt::Instruction"** %198 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = inttoptr i64 %201 to %"class.spvtools::opt::Instruction"*
  %203 = icmp eq %"class.spvtools::opt::Instruction"* %199, %202
  br i1 %203, label %219, label %204

204:                                              ; preds = %197
  %205 = call zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_10BasicBlock11ForEachInstERKNS_8functionIFvS6_EEEbEUlS6_E_S7_EEEEbPKNS0_16__policy_storageES6_(%"union.std::__1::__function::__policy_storage"* nonnull %107, %"class.spvtools::opt::Instruction"* %202) #11
  br i1 %205, label %206, label %217

206:                                              ; preds = %204, %214
  %207 = phi i64 [ %211, %214 ], [ %201, %204 ]
  %208 = inttoptr i64 %207 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %209 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %208, i64 0, i32 1
  %210 = bitcast %"class.spvtools::opt::Instruction"** %209 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = inttoptr i64 %211 to %"class.spvtools::opt::Instruction"*
  %213 = icmp eq %"class.spvtools::opt::Instruction"* %199, %212
  br i1 %213, label %217, label %214

214:                                              ; preds = %206
  %215 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %104, align 8
  %216 = call zeroext i1 %215(%"union.std::__1::__function::__policy_storage"* nonnull %107, %"class.spvtools::opt::Instruction"* %212) #11
  br i1 %216, label %206, label %217

217:                                              ; preds = %206, %214, %204
  %218 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %105, align 8
  br label %219

219:                                              ; preds = %217, %197
  %220 = phi %"struct.std::__1::__function::__policy"* [ %218, %217 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPKNS5_11InstructionEEEEbEUlSA_E_FbSA_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %197 ]
  %221 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %220, i64 0, i32 1
  %222 = load void (i8*)*, void (i8*)** %221, align 8
  %223 = icmp eq void (i8*)* %222, null
  br i1 %223, label %226, label %224

224:                                              ; preds = %219
  %225 = load i8*, i8** %108, align 8
  call void %222(i8* %225) #11
  br label %226

226:                                              ; preds = %219, %224
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #11
  %227 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %100, align 8
  %228 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %227, i64 0, i32 1
  %229 = load void (i8*)*, void (i8*)** %228, align 8
  %230 = icmp eq void (i8*)* %229, null
  br i1 %230, label %233, label %231

231:                                              ; preds = %226
  %232 = load i8*, i8** %109, align 8
  call void %229(i8* %232) #11
  br label %233

233:                                              ; preds = %226, %231
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #11
  %234 = load i64, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #11
  %235 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %176, align 8
  %236 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %235, i64 0, i32 4
  %237 = load i8, i8* %236, align 1, !range !3
  %238 = icmp eq i8 %237, 0
  br i1 %238, label %244, label %239

239:                                              ; preds = %233
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %235, i64 0, i32 3
  %241 = load i8, i8* %240, align 4, !range !3
  %242 = zext i8 %241 to i32
  %243 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %235, i32 %242) #11
  br label %244

244:                                              ; preds = %233, %239
  %245 = phi i32 [ %243, %239 ], [ 0, %233 ]
  store i32 %245, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #11
  store i32* %8, i32** %113, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %114) #11
  %246 = call { %"struct.std::__1::__hash_node_base.1122"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1118"* %111, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1363"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %5) #11
  %247 = extractvalue { %"struct.std::__1::__hash_node_base.1122"*, i8 } %246, 0
  %248 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %247, i64 3
  %249 = bitcast %"struct.std::__1::__hash_node_base.1122"* %248 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %114) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #11
  store i64 %234, i64* %249, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #11
  %250 = load i64, i64* %6, align 8
  %251 = load i64, i64* %34, align 8
  %252 = add i64 %251, %250
  store i64 %252, i64* %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #11
  %253 = inttoptr i64 %117 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %115, label %116
}

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !3
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #11
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !3
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !3
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #11
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !3
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #11
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #11
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !3
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #11
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #11
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !3
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !3
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #11
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !3
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #11
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #11
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #12
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !3
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !3
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !3
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !3
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !3
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !3
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #11
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !3
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !3
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #11
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.333"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.333"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !23
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !23
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !23
  store i32 %62, i32* %61, align 8, !noalias !23
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !23
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !23
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"**
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8, !noalias !23
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !2
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.333"* %110, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.333"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !2
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.333"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.333"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } undef, %"struct.std::__1::__hash_node_base.333"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.333"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.329"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !26

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.333"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.333"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.333"* %36, %"struct.std::__1::__hash_node_base.333"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.333"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.333"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.333"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.333"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.333"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.333"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.333"* %82, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.333"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.333"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.333"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.333"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.333"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.333"* %80, %"struct.std::__1::__hash_node_base.333"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.333"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.333"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.333"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1182"* dereferenceable(8), %"class.std::__1::tuple.1172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !27
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1182"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !27
  %75 = load i64, i64* %74, align 8, !noalias !27
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !27
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !27
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !27
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !27
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !2
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !2
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !30

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #11, !range !2
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple.1182", align 8
  %3 = alloca %"class.std::__1::tuple.1172", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1200", align 8
  %6 = alloca %"class.std::__1::function.1012", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !31

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1012"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1012"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1200"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1012"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1200"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple.1182"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple.1182", %"class.std::__1::tuple.1182"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #11
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1182"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %3) #11
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !3
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !3
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #11
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #11
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #11
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #11
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #11
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1012"**
  %4 = load %"class.std::__1::function.1012"*, %"class.std::__1::function.1012"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1182", align 8
  %4 = alloca %"class.std::__1::tuple.1172", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple.1182"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::tuple.1182", %"class.std::__1::tuple.1182"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1182"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %4) #11
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1182", align 8
  %4 = alloca %"class.std::__1::tuple.1172", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple.1182"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::tuple.1182", %"class.std::__1::tuple.1182"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1182"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %4) #11
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #11
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #11
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #13
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #12
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #11
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1012"**
  %4 = load %"class.std::__1::function.1012"*, %"class.std::__1::function.1012"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1012", %"class.std::__1::function.1012"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.922"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.922"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #12, !noalias !32
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !32
  store i32 %58, i32* %57, align 4, !noalias !32
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !32
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"**
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %61, align 8, !noalias !32
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !2
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #11
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #11, !range !2
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.922"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.922"* %104, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.922"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.922"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #11, !range !2
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.922"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.922"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } undef, %"struct.std::__1::__hash_node_base.922"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.922"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.918"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.922"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.922"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !35

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.922"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.922"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.922"* %36, %"struct.std::__1::__hash_node_base.922"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.922"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.922"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.922"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.922"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.922"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.922"* %82, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.922"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.922"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.922"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.922"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.922"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.922"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.922"* %80, %"struct.std::__1::__hash_node_base.922"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.922"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.922"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.922"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.922"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

declare void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEPKNS0_11InstructionERKNSt3__18functionIFvPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.1067"* dereferenceable(32)) local_unnamed_addr #2

declare zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEPKNS0_10BasicBlockES4_(%"class.spvtools::opt::DominatorTree"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_116MakeSetClosedSSAEPNS3_9IRContextEPNS3_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSF_IPNS3_10BasicBlockENSG_ISQ_EENSI_ISQ_EENSK_ISQ_EEEEPNSA_13LCSSARewriterEEUlS5_jE_S6_EEEEvPKNS0_16__policy_storageES5_j(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32) #0 align 2 {
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1258"**
  %7 = load %"class.std::__1::__function::__default_alloc_func.1258"*, %"class.std::__1::__function::__default_alloc_func.1258"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1258", %"class.std::__1::__function::__default_alloc_func.1258"* %7, i64 0, i32 0, i32 3
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %9, %"class.spvtools::opt::Instruction"* %1) #11
  %11 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1258", %"class.std::__1::__function::__default_alloc_func.1258"* %7, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::unordered_set.917"*, %"class.std::__1::unordered_set.917"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !3
  %21 = zext i8 %20 to i32
  %22 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %14, i32 %21) #11
  br label %23

23:                                               ; preds = %18, %3
  %24 = phi i32 [ %22, %18 ], [ 0, %3 ]
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %77, label %29

29:                                               ; preds = %23
  %30 = tail call i64 @llvm.ctpop.i64(i64 %27) #11, !range !2
  %31 = icmp ugt i64 %30, 1
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = add i64 %27, 4294967295
  %34 = and i64 %33, %25
  br label %39

35:                                               ; preds = %29
  %36 = icmp ugt i64 %27, %25
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  %38 = urem i64 %25, %27
  br label %39

39:                                               ; preds = %37, %35, %32
  %40 = phi i64 [ %34, %32 ], [ %38, %37 ], [ %25, %35 ]
  %41 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %42, i64 %40
  %44 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.922"* %44, null
  br i1 %45, label %77, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %44, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.922"* %48, null
  br i1 %49, label %77, label %50

50:                                               ; preds = %46
  %51 = add i64 %27, -1
  br label %52

52:                                               ; preds = %73, %50
  %53 = phi %"struct.std::__1::__hash_node_base.922"* [ %48, %50 ], [ %75, %73 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base.922"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %25
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %31, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %51
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %27
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %27
  br label %65

65:                                               ; preds = %63, %61, %59
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %40
  br i1 %67, label %73, label %77

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.922"* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, %24
  br i1 %72, label %213, label %73

73:                                               ; preds = %68, %65
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %53, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.922"* %75, null
  br i1 %76, label %77, label %52

77:                                               ; preds = %73, %65, %46, %39, %23
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 245
  br i1 %80, label %81, label %154

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1258", %"class.std::__1::__function::__default_alloc_func.1258"* %7, i64 0, i32 0, i32 2
  %83 = load %"class.std::__1::unordered_set.976"*, %"class.std::__1::unordered_set.976"** %82, align 8
  %84 = ptrtoint %"class.spvtools::opt::BasicBlock"* %10 to i64
  %85 = lshr i64 %84, 32
  %86 = shl i64 %84, 3
  %87 = and i64 %86, 4294967288
  %88 = add nuw nsw i64 %87, 8
  %89 = xor i64 %88, %85
  %90 = mul i64 %89, -7070675565921424023
  %91 = lshr i64 %90, 47
  %92 = xor i64 %90, %85
  %93 = xor i64 %92, %91
  %94 = mul i64 %93, -7070675565921424023
  %95 = lshr i64 %94, 47
  %96 = xor i64 %95, %94
  %97 = mul i64 %96, -7070675565921424023
  %98 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %83, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %149, label %101

101:                                              ; preds = %81
  %102 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !2
  %103 = icmp ugt i64 %102, 1
  br i1 %103, label %107, label %104

104:                                              ; preds = %101
  %105 = add i64 %99, -1
  %106 = and i64 %105, %97
  br label %111

107:                                              ; preds = %101
  %108 = icmp ult i64 %97, %99
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = urem i64 %97, %99
  br label %111

111:                                              ; preds = %109, %107, %104
  %112 = phi i64 [ %106, %104 ], [ %110, %109 ], [ %97, %107 ]
  %113 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %83, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %114, i64 %112
  %116 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.981"* %116, null
  br i1 %117, label %149, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %116, i64 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.981"* %120, null
  br i1 %121, label %149, label %122

122:                                              ; preds = %118
  %123 = add i64 %99, -1
  br label %124

124:                                              ; preds = %145, %122
  %125 = phi %"struct.std::__1::__hash_node_base.981"* [ %120, %122 ], [ %147, %145 ]
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %125, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.981"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq i64 %97, %128
  br i1 %129, label %140, label %130

130:                                              ; preds = %124
  br i1 %103, label %133, label %131

131:                                              ; preds = %130
  %132 = and i64 %128, %123
  br label %137

133:                                              ; preds = %130
  %134 = icmp ult i64 %128, %99
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  %136 = urem i64 %128, %99
  br label %137

137:                                              ; preds = %135, %133, %131
  %138 = phi i64 [ %132, %131 ], [ %136, %135 ], [ %128, %133 ]
  %139 = icmp eq i64 %138, %112
  br i1 %139, label %145, label %149

140:                                              ; preds = %124
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %125, i64 2
  %142 = bitcast %"struct.std::__1::__hash_node_base.981"* %141 to %"class.spvtools::opt::BasicBlock"**
  %143 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::BasicBlock"* %143, %10
  br i1 %144, label %213, label %145

145:                                              ; preds = %140, %137
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %125, i64 0, i32 0
  %147 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %146, align 8
  %148 = icmp eq %"struct.std::__1::__hash_node_base.981"* %147, null
  br i1 %148, label %149, label %124

149:                                              ; preds = %145, %137, %118, %111, %81
  %150 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %151 = add i32 %2, 1
  %152 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %151) #11
  %153 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %150, i32 %152) #11
  br label %154

154:                                              ; preds = %149, %77
  %155 = phi %"class.spvtools::opt::BasicBlock"* [ %153, %149 ], [ %10, %77 ]
  %156 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1258", %"class.std::__1::__function::__default_alloc_func.1258"* %7, i64 0, i32 0, i32 1
  %157 = load %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"*, %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"** %156, align 8
  %158 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #11
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %4, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %155, i64 0, i32 1, i32 0, i32 0, i32 0
  %160 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %159, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %160, i64 0, i32 4
  %162 = load i8, i8* %161, align 1, !range !3
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %169, label %164

164:                                              ; preds = %154
  %165 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %160, i64 0, i32 3
  %166 = load i8, i8* %165, align 4, !range !3
  %167 = zext i8 %166 to i32
  %168 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %160, i32 %167) #11
  br label %169

169:                                              ; preds = %164, %154
  %170 = phi i32 [ %168, %164 ], [ 0, %154 ]
  %171 = tail call fastcc %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter11UseRewriter18GetOrBuildIncomingEj(%"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %157, i32 %170) #11
  %172 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %172) #11
  %173 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %171, i64 0, i32 4
  %174 = load i8, i8* %173, align 1, !range !3
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %181, label %176

176:                                              ; preds = %169
  %177 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %171, i64 0, i32 3
  %178 = load i8, i8* %177, align 4, !range !3
  %179 = zext i8 %178 to i32
  %180 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %171, i32 %179) #11
  br label %181

181:                                              ; preds = %176, %169
  %182 = phi i32 [ %180, %176 ], [ 0, %169 ]
  %183 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %184 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %185 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %186 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %187 = bitcast i32** %185 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %186, %"struct.std::__1::aligned_storage<4, 4>::type"** %187, align 8
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %189 = bitcast %"class.std::__1::unique_ptr.0"* %188 to i64*
  store i64 0, i64* %189, align 8
  %190 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %186 to i32*
  store i64 1, i64* %184, align 8
  store i32 %182, i32* %190, align 8
  %191 = zext i32 %2 to i64
  %192 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %193 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %192, align 8
  %194 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %193, i64 %191, i32 1
  %195 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %194, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %196 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %197 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %196, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %196, align 8
  %198 = icmp eq %"class.std::__1::vector.3"* %197, null
  br i1 %198, label %210, label %199

199:                                              ; preds = %181
  %200 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %197, i64 0, i32 0, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = icmp eq i32* %201, null
  br i1 %202, label %208, label %203

203:                                              ; preds = %199
  %204 = ptrtoint i32* %201 to i64
  %205 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %197, i64 0, i32 0, i32 1
  %206 = bitcast i32** %205 to i64*
  store i64 %204, i64* %206, align 8
  %207 = bitcast i32* %201 to i8*
  call void @_ZdlPv(i8* %207) #12
  br label %208

208:                                              ; preds = %203, %199
  %209 = bitcast %"class.std::__1::vector.3"* %197 to i8*
  call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %208, %181
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %172) #11
  %211 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %157, i64 0, i32 3, i32 0
  %212 = call { %"struct.std::__1::__hash_node_base.1236"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1232"* %211, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #11
  br label %213

213:                                              ; preds = %68, %140, %210
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %8, align 8
  %10 = tail call i8* @_Znwm(i64 104) #12
  %11 = bitcast i8* %10 to %"class.spvtools::opt::analysis::DefUseManager"*
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = getelementptr inbounds i8, i8* %10, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #11
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 64
  %18 = getelementptr inbounds i8, i8* %10, i64 96
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %19, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %11, %"class.spvtools::opt::Module"* %9) #11
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6
  %21 = ptrtoint i8* %10 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.62"* %20 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %7
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %20 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %27, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %23) #11
  br label %28

28:                                               ; preds = %26, %7
  %29 = load i32, i32* %3, align 8
  %30 = or i32 %29, 1
  store i32 %30, i32* %3, align 8
  br label %31

31:                                               ; preds = %2, %28
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %33, i32 %1) #11
  %35 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::Instruction"* %34)
  ret %"class.spvtools::opt::BasicBlock"* %35
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter11UseRewriter18GetOrBuildIncomingEj(%"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.3", align 8
  %4 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.1172", align 1
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::function.1200", align 8
  store i32 %1, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, i64 0, i32 2, i32 0
  %11 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  %14 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %10, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %7) #11
  %15 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %14, 0
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %15, i64 3
  %17 = bitcast %"struct.std::__1::__hash_node_base"* %16 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %18 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %19 = icmp eq %"class.spvtools::opt::Instruction"* %18, null
  br i1 %19, label %20, label %482

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, i64 0, i32 0
  %22 = load %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*, %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %22, i64 0, i32 1
  %24 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %23, align 8
  %25 = load i32, i32* %8, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %24, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %78, label %30

30:                                               ; preds = %20
  %31 = call i64 @llvm.ctpop.i64(i64 %28) #11, !range !2
  %32 = icmp ugt i64 %31, 1
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = add i64 %28, 4294967295
  %35 = and i64 %34, %26
  br label %40

36:                                               ; preds = %30
  %37 = icmp ugt i64 %28, %26
  br i1 %37, label %40, label %38

38:                                               ; preds = %36
  %39 = urem i64 %26, %28
  br label %40

40:                                               ; preds = %38, %36, %33
  %41 = phi i64 [ %35, %33 ], [ %39, %38 ], [ %26, %36 ]
  %42 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %24, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %43, i64 %41
  %45 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.333"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %45, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.333"* %49, null
  br i1 %50, label %78, label %51

51:                                               ; preds = %47
  %52 = add i64 %28, -1
  br label %53

53:                                               ; preds = %74, %51
  %54 = phi %"struct.std::__1::__hash_node_base.333"* [ %49, %51 ], [ %76, %74 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.333"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %26
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %32, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %52
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %28
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %28
  br label %66

66:                                               ; preds = %64, %62, %60
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %41
  br i1 %68, label %74, label %78

69:                                               ; preds = %53
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base.333"* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %25
  br i1 %73, label %79, label %74

74:                                               ; preds = %69, %66
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %54, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.333"* %76, null
  br i1 %77, label %78, label %53

78:                                               ; preds = %74, %66, %47, %40, %20
  call void @abort() #13
  unreachable

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %54, i64 3
  %81 = bitcast %"struct.std::__1::__hash_node_base.333"* %80 to %"class.spvtools::opt::BasicBlock"**
  %82 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %81, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %22, i64 0, i32 3
  %84 = load %"class.std::__1::unordered_set.976"*, %"class.std::__1::unordered_set.976"** %83, align 8
  %85 = ptrtoint %"class.spvtools::opt::BasicBlock"* %82 to i64
  %86 = lshr i64 %85, 32
  %87 = shl i64 %85, 3
  %88 = and i64 %87, 4294967288
  %89 = add nuw nsw i64 %88, 8
  %90 = xor i64 %89, %86
  %91 = mul i64 %90, -7070675565921424023
  %92 = lshr i64 %91, 47
  %93 = xor i64 %91, %86
  %94 = xor i64 %93, %92
  %95 = mul i64 %94, -7070675565921424023
  %96 = lshr i64 %95, 47
  %97 = xor i64 %96, %95
  %98 = mul i64 %97, -7070675565921424023
  %99 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %201, label %102

102:                                              ; preds = %79
  %103 = call i64 @llvm.ctpop.i64(i64 %100) #11, !range !2
  %104 = icmp ugt i64 %103, 1
  br i1 %104, label %108, label %105

105:                                              ; preds = %102
  %106 = add i64 %100, -1
  %107 = and i64 %98, %106
  br label %112

108:                                              ; preds = %102
  %109 = icmp ult i64 %98, %100
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = urem i64 %98, %100
  br label %112

112:                                              ; preds = %110, %108, %105
  %113 = phi i64 [ %107, %105 ], [ %111, %110 ], [ %98, %108 ]
  %114 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %115, i64 %113
  %117 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base.981"* %117, null
  br i1 %118, label %201, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %117, i64 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.981"* %121, null
  br i1 %122, label %201, label %123

123:                                              ; preds = %119
  %124 = add i64 %100, -1
  br label %125

125:                                              ; preds = %146, %123
  %126 = phi %"struct.std::__1::__hash_node_base.981"* [ %121, %123 ], [ %148, %146 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %126, i64 1
  %128 = bitcast %"struct.std::__1::__hash_node_base.981"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %98, %129
  br i1 %130, label %141, label %131

131:                                              ; preds = %125
  br i1 %104, label %134, label %132

132:                                              ; preds = %131
  %133 = and i64 %129, %124
  br label %138

134:                                              ; preds = %131
  %135 = icmp ult i64 %129, %100
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %129, %100
  br label %138

138:                                              ; preds = %136, %134, %132
  %139 = phi i64 [ %133, %132 ], [ %137, %136 ], [ %129, %134 ]
  %140 = icmp eq i64 %139, %113
  br i1 %140, label %146, label %201

141:                                              ; preds = %125
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %126, i64 2
  %143 = bitcast %"struct.std::__1::__hash_node_base.981"* %142 to %"class.spvtools::opt::BasicBlock"**
  %144 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %143, align 8
  %145 = icmp eq %"class.spvtools::opt::BasicBlock"* %144, %82
  br i1 %145, label %150, label %146

146:                                              ; preds = %141, %138
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %126, i64 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %147, align 8
  %149 = icmp eq %"struct.std::__1::__hash_node_base.981"* %148, null
  br i1 %149, label %201, label %125

150:                                              ; preds = %141
  %151 = bitcast %"class.std::__1::function.1200"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %151) #11
  %152 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %9, i64 0, i32 0, i32 1, i32 0
  %153 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %9, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_113LCSSARewriter11UseRewriter18GetOrBuildIncomingEjEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %152, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter11UseRewriter18GetOrBuildIncomingEjEUlPNS5_11InstructionEE_FbSA_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %153, align 8
  %154 = bitcast %"class.std::__1::function.1200"* %9 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* %16, %"struct.std::__1::__hash_node_base"** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %9, i64 0, i32 0, i32 0, i32 1
  %156 = bitcast [8 x i8]* %155 to %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"**
  store %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"** %156, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %82, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %158 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %157, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 0, i32 3
  %160 = load i8, i8* %159, align 8, !range !3
  %161 = icmp ne i8 %160, 0
  %162 = icmp eq %"class.spvtools::opt::Instruction"* %158, null
  %163 = or i1 %162, %161
  br i1 %163, label %185, label %164

164:                                              ; preds = %150
  %165 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %9, i64 0, i32 0, i32 0
  br label %166

166:                                              ; preds = %175, %164
  %167 = phi %"class.spvtools::opt::Instruction"* [ %179, %175 ], [ %158, %164 ]
  %168 = icmp eq %"class.spvtools::opt::Instruction"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %167, i64 0, i32 0, i32 1
  %171 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %170, align 8
  %172 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %167, i64 0, i32 2
  %173 = load i32, i32* %172, align 8
  %174 = icmp eq i32 %173, 245
  br i1 %174, label %175, label %182

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %171, i64 0, i32 0, i32 3
  %177 = load i8, i8* %176, align 8, !range !3
  %178 = icmp eq i8 %177, 0
  %179 = select i1 %178, %"class.spvtools::opt::Instruction"* %171, %"class.spvtools::opt::Instruction"* null
  %180 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %152, align 8
  %181 = call zeroext i1 %180(%"union.std::__1::__function::__policy_storage"* nonnull %165, %"class.spvtools::opt::Instruction"* nonnull %167) #11
  br i1 %181, label %166, label %182

182:                                              ; preds = %175, %169, %166
  %183 = phi i1 [ false, %175 ], [ true, %169 ], [ true, %166 ]
  %184 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %153, align 8
  br label %185

185:                                              ; preds = %182, %150
  %186 = phi %"struct.std::__1::__function::__policy"* [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter11UseRewriter18GetOrBuildIncomingEjEUlPNS5_11InstructionEE_FbSA_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %150 ], [ %184, %182 ]
  %187 = phi i1 [ true, %150 ], [ %183, %182 ]
  %188 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %186, i64 0, i32 1
  %189 = load void (i8*)*, void (i8*)** %188, align 8
  %190 = icmp eq void (i8*)* %189, null
  br i1 %190, label %194, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.std::__1::function.1200", %"class.std::__1::function.1200"* %9, i64 0, i32 0, i32 0, i32 0
  %193 = load i8*, i8** %192, align 8
  call void %189(i8* %193) #11
  br label %194

194:                                              ; preds = %185, %191
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %151) #11
  br i1 %187, label %197, label %195

195:                                              ; preds = %194
  %196 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  br label %482

197:                                              ; preds = %194
  %198 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, i64 0, i32 1
  %199 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %198, align 8
  %200 = call fastcc %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter11UseRewriter20CreatePhiInstructionEPNS0_10BasicBlockERKNS0_11InstructionE(%"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, %"class.spvtools::opt::BasicBlock"* %82, %"class.spvtools::opt::Instruction"* dereferenceable(112) %199)
  store %"class.spvtools::opt::Instruction"* %200, %"class.spvtools::opt::Instruction"** %17, align 8
  br label %482

201:                                              ; preds = %146, %138, %112, %79, %119
  %202 = call fastcc dereferenceable(24) %"class.std::__1::vector.3"* @_ZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter17GetDefiningBlocksEj(%"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %22, i32 %25)
  %203 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %202, i64 0, i32 0, i32 1
  %204 = bitcast i32** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.std::__1::vector.3"* %202 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = sub i64 %205, %207
  %209 = ashr exact i64 %208, 2
  %210 = icmp ugt i64 %209, 1
  br i1 %210, label %220, label %211

211:                                              ; preds = %201
  %212 = inttoptr i64 %207 to i32*
  %213 = load i32, i32* %8, align 4
  %214 = load %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*, %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"** %21, align 8
  %215 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %214, i64 0, i32 4
  %216 = load i32, i32* %215, align 8
  %217 = icmp eq i32 %213, %216
  %218 = load i32, i32* %212, align 4
  %219 = call fastcc %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter11UseRewriter18GetOrBuildIncomingEj(%"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, i32 %218)
  br i1 %217, label %479, label %481

220:                                              ; preds = %201
  %221 = bitcast %"class.std::__1::vector.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #11
  %222 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 0
  %223 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %224 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %221, i8 0, i64 24, i1 false) #11
  %225 = load %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*, %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"** %21, align 8
  %226 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %225, i64 0, i32 1
  %227 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %226, align 8
  %228 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %82, i64 0, i32 1, i32 0, i32 0, i32 0
  %229 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %228, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %229, i64 0, i32 4
  %231 = load i8, i8* %230, align 1, !range !3
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %238, label %233

233:                                              ; preds = %220
  %234 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %229, i64 0, i32 3
  %235 = load i8, i8* %234, align 4, !range !3
  %236 = zext i8 %235 to i32
  %237 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %229, i32 %236) #11
  br label %238

238:                                              ; preds = %233, %220
  %239 = phi i32 [ %237, %233 ], [ 0, %220 ]
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %227, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %242 = load i64, i64* %241, align 8
  %243 = icmp eq i64 %242, 0
  br i1 %243, label %292, label %244

244:                                              ; preds = %238
  %245 = call i64 @llvm.ctpop.i64(i64 %242) #11, !range !2
  %246 = icmp ugt i64 %245, 1
  br i1 %246, label %250, label %247

247:                                              ; preds = %244
  %248 = add i64 %242, 4294967295
  %249 = and i64 %248, %240
  br label %254

250:                                              ; preds = %244
  %251 = icmp ugt i64 %242, %240
  br i1 %251, label %254, label %252

252:                                              ; preds = %250
  %253 = urem i64 %240, %242
  br label %254

254:                                              ; preds = %252, %250, %247
  %255 = phi i64 [ %249, %247 ], [ %253, %252 ], [ %240, %250 ]
  %256 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %227, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %256, align 8
  %258 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %257, i64 %255
  %259 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %258, align 8
  %260 = icmp eq %"struct.std::__1::__hash_node_base.309"* %259, null
  br i1 %260, label %292, label %261

261:                                              ; preds = %254
  %262 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %259, i64 0, i32 0
  %263 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %262, align 8
  %264 = icmp eq %"struct.std::__1::__hash_node_base.309"* %263, null
  br i1 %264, label %292, label %265

265:                                              ; preds = %261
  %266 = add i64 %242, -1
  br label %267

267:                                              ; preds = %288, %265
  %268 = phi %"struct.std::__1::__hash_node_base.309"* [ %263, %265 ], [ %290, %288 ]
  %269 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %268, i64 1
  %270 = bitcast %"struct.std::__1::__hash_node_base.309"* %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = icmp eq i64 %271, %240
  br i1 %272, label %283, label %273

273:                                              ; preds = %267
  br i1 %246, label %276, label %274

274:                                              ; preds = %273
  %275 = and i64 %271, %266
  br label %280

276:                                              ; preds = %273
  %277 = icmp ult i64 %271, %242
  br i1 %277, label %280, label %278

278:                                              ; preds = %276
  %279 = urem i64 %271, %242
  br label %280

280:                                              ; preds = %278, %276, %274
  %281 = phi i64 [ %275, %274 ], [ %279, %278 ], [ %271, %276 ]
  %282 = icmp eq i64 %281, %255
  br i1 %282, label %288, label %292

283:                                              ; preds = %267
  %284 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %268, i64 2
  %285 = bitcast %"struct.std::__1::__hash_node_base.309"* %284 to i32*
  %286 = load i32, i32* %285, align 4
  %287 = icmp eq i32 %286, %239
  br i1 %287, label %293, label %288

288:                                              ; preds = %283, %280
  %289 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %268, i64 0, i32 0
  %290 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %289, align 8
  %291 = icmp eq %"struct.std::__1::__hash_node_base.309"* %290, null
  br i1 %291, label %292, label %267

292:                                              ; preds = %288, %280, %261, %254, %238
  call void @abort() #13
  unreachable

293:                                              ; preds = %283
  %294 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %268, i64 3
  %295 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %268, i64 4
  %296 = bitcast %"struct.std::__1::__hash_node_base.309"* %295 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %"struct.std::__1::__hash_node_base.309"* %294 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = icmp eq i64 %297, %299
  br i1 %300, label %307, label %301

301:                                              ; preds = %293
  %302 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %202, i64 0, i32 0, i32 0
  %303 = bitcast i32** %223 to i64*
  %304 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %305 = bitcast i32** %224 to i64*
  %306 = bitcast %"struct.std::__1::__hash_node_base.309"* %294 to i32**
  br label %344

307:                                              ; preds = %469, %293
  %308 = bitcast %"class.spvtools::opt::InstructionBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %308) #11
  %309 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 0
  %310 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 1
  %311 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 3
  %312 = bitcast %"class.spvtools::opt::InstructionBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 -86, i64 32, i1 false)
  %313 = load %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*, %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"** %21, align 8
  %314 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %313, i64 0, i32 0
  %315 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %314, align 8
  %316 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %82, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %317 = bitcast %"class.spvtools::opt::Instruction"** %316 to i64*
  %318 = load i64, i64* %317, align 8, !noalias !36
  %319 = inttoptr i64 %318 to %"class.spvtools::opt::Instruction"*
  %320 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %315, %"class.spvtools::opt::Instruction"* %319) #11
  store %"class.spvtools::opt::IRContext"* %315, %"class.spvtools::opt::IRContext"** %309, align 8
  store %"class.spvtools::opt::BasicBlock"* %320, %"class.spvtools::opt::BasicBlock"** %310, align 8
  %321 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 2
  %322 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %321 to i64*
  store i64 %318, i64* %322, align 8
  store i32 2, i32* %311, align 8
  %323 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %323) #11
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %5, align 8
  %324 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, i64 0, i32 1
  %325 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %324, align 8
  %326 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %325, i64 0, i32 3
  %327 = load i8, i8* %326, align 4, !range !3
  %328 = icmp eq i8 %327, 0
  br i1 %328, label %331, label %329

329:                                              ; preds = %307
  %330 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %325, i32 0) #11
  br label %331

331:                                              ; preds = %329, %307
  %332 = phi i32 [ %330, %329 ], [ 0, %307 ]
  %333 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %4, i32 %332, i32 245, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %3, i32 0) #11
  store %"class.spvtools::opt::Instruction"* %333, %"class.spvtools::opt::Instruction"** %5, align 8
  %334 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, i64 0, i32 3, i32 0
  %335 = call { %"struct.std::__1::__hash_node_base.1236"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1232"* %334, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5) #11
  %336 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  %337 = load i64, i64* %336, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %323) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %308) #11
  %338 = load i32*, i32** %222, align 8
  %339 = icmp eq i32* %338, null
  br i1 %339, label %476, label %340

340:                                              ; preds = %331
  %341 = ptrtoint i32* %338 to i64
  %342 = bitcast i32** %223 to i64*
  store i64 %341, i64* %342, align 8
  %343 = bitcast i32* %338 to i8*
  call void @_ZdlPv(i8* %343) #12
  br label %476

344:                                              ; preds = %301, %469
  %345 = phi i64 [ 0, %301 ], [ %470, %469 ]
  %346 = load i32*, i32** %302, align 8
  %347 = getelementptr inbounds i32, i32* %346, i64 %345
  %348 = load i32, i32* %347, align 4
  %349 = call fastcc %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter11UseRewriter18GetOrBuildIncomingEj(%"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, i32 %348) #11
  %350 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %349, i64 0, i32 4
  %351 = load i8, i8* %350, align 1, !range !3
  %352 = icmp eq i8 %351, 0
  br i1 %352, label %358, label %353

353:                                              ; preds = %344
  %354 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %349, i64 0, i32 3
  %355 = load i8, i8* %354, align 4, !range !3
  %356 = zext i8 %355 to i32
  %357 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %349, i32 %356) #11
  br label %358

358:                                              ; preds = %353, %344
  %359 = phi i32 [ %357, %353 ], [ 0, %344 ]
  %360 = load i32*, i32** %223, align 8
  %361 = load i32*, i32** %224, align 8
  %362 = icmp ult i32* %360, %361
  %363 = ptrtoint i32* %361 to i64
  br i1 %362, label %364, label %367

364:                                              ; preds = %358
  store i32 %359, i32* %360, align 4
  %365 = getelementptr inbounds i32, i32* %360, i64 1
  %366 = ptrtoint i32* %365 to i64
  store i64 %366, i64* %303, align 8
  br label %412

367:                                              ; preds = %358
  %368 = ptrtoint i32* %360 to i64
  %369 = load i64, i64* %304, align 8
  %370 = sub i64 %368, %369
  %371 = ashr exact i64 %370, 2
  %372 = add nsw i64 %371, 1
  %373 = icmp ugt i64 %372, 4611686018427387903
  br i1 %373, label %374, label %376

374:                                              ; preds = %367
  %375 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %375) #13
  unreachable

376:                                              ; preds = %367
  %377 = sub i64 %363, %369
  %378 = ashr exact i64 %377, 2
  %379 = icmp ult i64 %378, 2305843009213693951
  br i1 %379, label %380, label %388

380:                                              ; preds = %376
  %381 = ashr exact i64 %377, 1
  %382 = icmp ult i64 %381, %372
  %383 = select i1 %382, i64 %372, i64 %381
  %384 = icmp eq i64 %383, 0
  br i1 %384, label %393, label %385

385:                                              ; preds = %380
  %386 = icmp ugt i64 %383, 4611686018427387903
  br i1 %386, label %387, label %388

387:                                              ; preds = %385
  call void @abort() #13
  unreachable

388:                                              ; preds = %385, %376
  %389 = phi i64 [ %383, %385 ], [ 4611686018427387903, %376 ]
  %390 = shl i64 %389, 2
  %391 = call i8* @_Znwm(i64 %390) #12
  %392 = bitcast i8* %391 to i32*
  br label %393

393:                                              ; preds = %388, %380
  %394 = phi i64 [ %389, %388 ], [ 0, %380 ]
  %395 = phi i8* [ %391, %388 ], [ null, %380 ]
  %396 = phi i32* [ %392, %388 ], [ null, %380 ]
  %397 = getelementptr inbounds i32, i32* %396, i64 %371
  %398 = getelementptr inbounds i32, i32* %396, i64 %394
  %399 = ptrtoint i32* %398 to i64
  store i32 %359, i32* %397, align 4
  %400 = getelementptr inbounds i32, i32* %397, i64 1
  %401 = ptrtoint i32* %400 to i64
  %402 = ptrtoint i32* %396 to i64
  %403 = icmp sgt i64 %370, 0
  br i1 %403, label %404, label %406

404:                                              ; preds = %393
  %405 = inttoptr i64 %369 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %395, i8* align 4 %405, i64 %370, i1 false) #11
  br label %406

406:                                              ; preds = %404, %393
  store i64 %402, i64* %304, align 8
  store i64 %401, i64* %303, align 8
  store i64 %399, i64* %305, align 8
  %407 = icmp eq i64 %369, 0
  br i1 %407, label %412, label %408

408:                                              ; preds = %406
  %409 = inttoptr i64 %369 to i8*
  call void @_ZdlPv(i8* %409) #12
  %410 = load i32*, i32** %223, align 8
  %411 = ptrtoint i32* %410 to i64
  br label %412

412:                                              ; preds = %408, %406, %364
  %413 = phi i64 [ %411, %408 ], [ %401, %406 ], [ %366, %364 ]
  %414 = phi i32* [ %410, %408 ], [ %400, %406 ], [ %365, %364 ]
  %415 = load i32*, i32** %306, align 8
  %416 = getelementptr inbounds i32, i32* %415, i64 %345
  %417 = load i32*, i32** %224, align 8
  %418 = icmp eq i32* %414, %417
  br i1 %418, label %423, label %419

419:                                              ; preds = %412
  %420 = load i32, i32* %416, align 4
  store i32 %420, i32* %414, align 4
  %421 = getelementptr inbounds i32, i32* %414, i64 1
  %422 = ptrtoint i32* %421 to i64
  store i64 %422, i64* %303, align 8
  br label %469

423:                                              ; preds = %412
  %424 = ptrtoint i32* %417 to i64
  %425 = load i64, i64* %304, align 8
  %426 = sub i64 %424, %425
  %427 = ashr exact i64 %426, 2
  %428 = add nsw i64 %427, 1
  %429 = icmp ugt i64 %428, 4611686018427387903
  br i1 %429, label %430, label %432

430:                                              ; preds = %423
  %431 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %431) #13
  unreachable

432:                                              ; preds = %423
  %433 = icmp ult i64 %427, 2305843009213693951
  br i1 %433, label %434, label %442

434:                                              ; preds = %432
  %435 = ashr exact i64 %426, 1
  %436 = icmp ult i64 %435, %428
  %437 = select i1 %436, i64 %428, i64 %435
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %447, label %439

439:                                              ; preds = %434
  %440 = icmp ugt i64 %437, 4611686018427387903
  br i1 %440, label %441, label %442

441:                                              ; preds = %439
  call void @abort() #13
  unreachable

442:                                              ; preds = %439, %432
  %443 = phi i64 [ %437, %439 ], [ 4611686018427387903, %432 ]
  %444 = shl i64 %443, 2
  %445 = call i8* @_Znwm(i64 %444) #12
  %446 = bitcast i8* %445 to i32*
  br label %447

447:                                              ; preds = %442, %434
  %448 = phi i64 [ %443, %442 ], [ 0, %434 ]
  %449 = phi i32* [ %446, %442 ], [ null, %434 ]
  %450 = getelementptr inbounds i32, i32* %449, i64 %427
  %451 = getelementptr inbounds i32, i32* %449, i64 %448
  %452 = ptrtoint i32* %451 to i64
  %453 = load i32, i32* %416, align 4
  store i32 %453, i32* %450, align 4
  %454 = getelementptr inbounds i32, i32* %450, i64 1
  %455 = ptrtoint i32* %454 to i64
  %456 = sub i64 %413, %425
  %457 = ashr exact i64 %456, 2
  %458 = sub nsw i64 0, %457
  %459 = getelementptr inbounds i32, i32* %450, i64 %458
  %460 = ptrtoint i32* %459 to i64
  %461 = icmp sgt i64 %456, 0
  br i1 %461, label %462, label %465

462:                                              ; preds = %447
  %463 = bitcast i32* %459 to i8*
  %464 = inttoptr i64 %425 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %463, i8* align 4 %464, i64 %456, i1 false) #11
  br label %465

465:                                              ; preds = %462, %447
  store i64 %460, i64* %304, align 8
  store i64 %455, i64* %303, align 8
  store i64 %452, i64* %305, align 8
  %466 = icmp eq i64 %425, 0
  br i1 %466, label %469, label %467

467:                                              ; preds = %465
  %468 = inttoptr i64 %425 to i8*
  call void @_ZdlPv(i8* %468) #12
  br label %469

469:                                              ; preds = %467, %465, %419
  %470 = add nuw i64 %345, 1
  %471 = load i64, i64* %296, align 8
  %472 = load i64, i64* %298, align 8
  %473 = sub i64 %471, %472
  %474 = ashr exact i64 %473, 2
  %475 = icmp ult i64 %470, %474
  br i1 %475, label %344, label %307

476:                                              ; preds = %331, %340
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #11
  %477 = bitcast %"struct.std::__1::__hash_node_base"* %16 to i64*
  store i64 %337, i64* %477, align 8
  %478 = inttoptr i64 %337 to %"class.spvtools::opt::Instruction"*
  br label %482

479:                                              ; preds = %211
  %480 = call fastcc %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter11UseRewriter20CreatePhiInstructionEPNS0_10BasicBlockERKNS0_11InstructionE(%"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, %"class.spvtools::opt::BasicBlock"* %82, %"class.spvtools::opt::Instruction"* dereferenceable(112) %219)
  store %"class.spvtools::opt::Instruction"* %480, %"class.spvtools::opt::Instruction"** %17, align 8
  br label %482

481:                                              ; preds = %211
  store %"class.spvtools::opt::Instruction"* %219, %"class.spvtools::opt::Instruction"** %17, align 8
  br label %482

482:                                              ; preds = %481, %479, %476, %195, %197, %2
  %483 = phi %"class.spvtools::opt::Instruction"* [ %18, %2 ], [ %196, %195 ], [ %200, %197 ], [ %478, %476 ], [ %480, %479 ], [ %219, %481 ]
  ret %"class.spvtools::opt::Instruction"* %483
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter11UseRewriter20CreatePhiInstructionEPNS0_10BasicBlockERKNS0_11InstructionE(%"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"*, %"class.spvtools::opt::BasicBlock"* nocapture readonly, %"class.spvtools::opt::Instruction"* dereferenceable(112)) unnamed_addr #4 align 2 {
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %6 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %7 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*, %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %12, i64 0, i32 1
  %14 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 4
  %18 = load i8, i8* %17, align 1, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !3
  %23 = zext i8 %22 to i32
  %24 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %16, i32 %23) #11
  br label %25

25:                                               ; preds = %3, %20
  %26 = phi i32 [ %24, %20 ], [ 0, %3 ]
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %14, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %79, label %31

31:                                               ; preds = %25
  %32 = tail call i64 @llvm.ctpop.i64(i64 %29) #11, !range !2
  %33 = icmp ugt i64 %32, 1
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  %35 = add i64 %29, 4294967295
  %36 = and i64 %35, %27
  br label %41

37:                                               ; preds = %31
  %38 = icmp ugt i64 %29, %27
  br i1 %38, label %41, label %39

39:                                               ; preds = %37
  %40 = urem i64 %27, %29
  br label %41

41:                                               ; preds = %39, %37, %34
  %42 = phi i64 [ %36, %34 ], [ %40, %39 ], [ %27, %37 ]
  %43 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %14, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %44, i64 %42
  %46 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.309"* %46, null
  br i1 %47, label %79, label %48

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %46, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %49, align 8
  %51 = icmp eq %"struct.std::__1::__hash_node_base.309"* %50, null
  br i1 %51, label %79, label %52

52:                                               ; preds = %48
  %53 = add i64 %29, -1
  br label %54

54:                                               ; preds = %75, %52
  %55 = phi %"struct.std::__1::__hash_node_base.309"* [ %50, %52 ], [ %77, %75 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %55, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.309"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %27
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  br i1 %33, label %63, label %61

61:                                               ; preds = %60
  %62 = and i64 %58, %53
  br label %67

63:                                               ; preds = %60
  %64 = icmp ult i64 %58, %29
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %58, %29
  br label %67

67:                                               ; preds = %65, %63, %61
  %68 = phi i64 [ %62, %61 ], [ %66, %65 ], [ %58, %63 ]
  %69 = icmp eq i64 %68, %42
  br i1 %69, label %75, label %79

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %55, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base.309"* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, %26
  br i1 %74, label %80, label %75

75:                                               ; preds = %70, %67
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %55, i64 0, i32 0
  %77 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %76, align 8
  %78 = icmp eq %"struct.std::__1::__hash_node_base.309"* %77, null
  br i1 %78, label %79, label %54

79:                                               ; preds = %75, %67, %48, %41, %25
  tail call void @abort() #13
  unreachable

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %55, i64 3
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %55, i64 4
  %83 = bitcast %"struct.std::__1::__hash_node_base.309"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base.309"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %84, %86
  br i1 %87, label %95, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %91 = bitcast i32** %9 to i64*
  %92 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %93 = bitcast i32** %10 to i64*
  %94 = bitcast %"struct.std::__1::__hash_node_base.309"* %81 to i32**
  br label %132

95:                                               ; preds = %256, %80
  %96 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %96) #11
  %97 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 0
  %98 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 1
  %99 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 3
  %100 = bitcast %"class.spvtools::opt::InstructionBuilder"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 32, i1 false)
  %101 = load %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*, %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"** %11, align 8
  %102 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %101, i64 0, i32 0
  %103 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %102, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %105 = bitcast %"class.spvtools::opt::Instruction"** %104 to i64*
  %106 = load i64, i64* %105, align 8, !noalias !43
  %107 = inttoptr i64 %106 to %"class.spvtools::opt::Instruction"*
  %108 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %103, %"class.spvtools::opt::Instruction"* %107) #11
  store %"class.spvtools::opt::IRContext"* %103, %"class.spvtools::opt::IRContext"** %97, align 8
  store %"class.spvtools::opt::BasicBlock"* %108, %"class.spvtools::opt::BasicBlock"** %98, align 8
  %109 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %5, i64 0, i32 2
  %110 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %109 to i64*
  store i64 %106, i64* %110, align 8
  store i32 2, i32* %99, align 8
  %111 = bitcast %"class.spvtools::opt::Instruction"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #11
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %6, align 8
  %112 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, i64 0, i32 1
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %112, align 8
  %114 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %113, i64 0, i32 3
  %115 = load i8, i8* %114, align 4, !range !3
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %95
  %118 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %113, i32 0) #11
  br label %119

119:                                              ; preds = %95, %117
  %120 = phi i32 [ %118, %117 ], [ 0, %95 ]
  %121 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %5, i32 %120, i32 245, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %4, i32 0) #11
  store %"class.spvtools::opt::Instruction"* %121, %"class.spvtools::opt::Instruction"** %6, align 8
  %122 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %0, i64 0, i32 3, i32 0
  %123 = call { %"struct.std::__1::__hash_node_base.1236"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1232"* %122, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %6, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %6) #11
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %96) #11
  %125 = load i32*, i32** %8, align 8
  %126 = icmp eq i32* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %119
  %128 = ptrtoint i32* %125 to i64
  %129 = bitcast i32** %9 to i64*
  store i64 %128, i64* %129, align 8
  %130 = bitcast i32* %125 to i8*
  call void @_ZdlPv(i8* %130) #12
  br label %131

131:                                              ; preds = %119, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret %"class.spvtools::opt::Instruction"* %124

132:                                              ; preds = %88, %256
  %133 = phi i64 [ 0, %88 ], [ %257, %256 ]
  %134 = phi i32* [ null, %88 ], [ %258, %256 ]
  %135 = phi i64 [ 0, %88 ], [ %259, %256 ]
  %136 = load i8, i8* %89, align 1, !range !3
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %132
  %139 = load i8, i8* %90, align 4, !range !3
  %140 = zext i8 %139 to i32
  %141 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %140) #11
  br label %142

142:                                              ; preds = %132, %138
  %143 = phi i32 [ %141, %138 ], [ 0, %132 ]
  %144 = load i32*, i32** %10, align 8
  %145 = icmp ult i32* %134, %144
  %146 = ptrtoint i32* %144 to i64
  br i1 %145, label %147, label %152

147:                                              ; preds = %142
  store i32 %143, i32* %134, align 4
  %148 = getelementptr inbounds i32, i32* %134, i64 1
  %149 = ptrtoint i32* %148 to i64
  store i64 %149, i64* %91, align 8
  %150 = load i32*, i32** %10, align 8
  %151 = ptrtoint i32* %150 to i64
  br label %199

152:                                              ; preds = %142
  %153 = ptrtoint i32* %134 to i64
  %154 = load i64, i64* %92, align 8
  %155 = sub i64 %153, %154
  %156 = ashr exact i64 %155, 2
  %157 = add nsw i64 %156, 1
  %158 = icmp ugt i64 %157, 4611686018427387903
  br i1 %158, label %159, label %161

159:                                              ; preds = %152
  %160 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %160) #13
  unreachable

161:                                              ; preds = %152
  %162 = sub i64 %146, %154
  %163 = ashr exact i64 %162, 2
  %164 = icmp ult i64 %163, 2305843009213693951
  br i1 %164, label %165, label %173

165:                                              ; preds = %161
  %166 = ashr exact i64 %162, 1
  %167 = icmp ult i64 %166, %157
  %168 = select i1 %167, i64 %157, i64 %166
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %178, label %170

170:                                              ; preds = %165
  %171 = icmp ugt i64 %168, 4611686018427387903
  br i1 %171, label %172, label %173

172:                                              ; preds = %170
  tail call void @abort() #13
  unreachable

173:                                              ; preds = %170, %161
  %174 = phi i64 [ %168, %170 ], [ 4611686018427387903, %161 ]
  %175 = shl i64 %174, 2
  %176 = tail call i8* @_Znwm(i64 %175) #12
  %177 = bitcast i8* %176 to i32*
  br label %178

178:                                              ; preds = %173, %165
  %179 = phi i64 [ %174, %173 ], [ 0, %165 ]
  %180 = phi i32* [ %177, %173 ], [ null, %165 ]
  %181 = getelementptr inbounds i32, i32* %180, i64 %156
  %182 = getelementptr inbounds i32, i32* %180, i64 %179
  %183 = ptrtoint i32* %182 to i64
  store i32 %143, i32* %181, align 4
  %184 = getelementptr inbounds i32, i32* %181, i64 1
  %185 = ptrtoint i32* %184 to i64
  %186 = sub i64 %133, %154
  %187 = ashr exact i64 %186, 2
  %188 = sub nsw i64 0, %187
  %189 = getelementptr inbounds i32, i32* %181, i64 %188
  %190 = ptrtoint i32* %189 to i64
  %191 = icmp sgt i64 %186, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %178
  %193 = bitcast i32* %189 to i8*
  %194 = inttoptr i64 %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %193, i8* align 4 %194, i64 %186, i1 false) #11
  br label %195

195:                                              ; preds = %192, %178
  store i64 %190, i64* %92, align 8
  store i64 %185, i64* %91, align 8
  store i64 %183, i64* %93, align 8
  %196 = icmp eq i64 %154, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %195
  %198 = inttoptr i64 %154 to i8*
  tail call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %147, %195, %197
  %200 = phi i64 [ %151, %147 ], [ %183, %195 ], [ %183, %197 ]
  %201 = phi i64 [ %149, %147 ], [ %185, %195 ], [ %185, %197 ]
  %202 = phi i32* [ %150, %147 ], [ %182, %195 ], [ %182, %197 ]
  %203 = phi i32* [ %148, %147 ], [ %184, %195 ], [ %184, %197 ]
  %204 = load i32*, i32** %94, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 %135
  %206 = icmp eq i32* %203, %202
  br i1 %206, label %211, label %207

207:                                              ; preds = %199
  %208 = load i32, i32* %205, align 4
  store i32 %208, i32* %203, align 4
  %209 = getelementptr inbounds i32, i32* %203, i64 1
  %210 = ptrtoint i32* %209 to i64
  store i64 %210, i64* %91, align 8
  br label %256

211:                                              ; preds = %199
  %212 = load i64, i64* %92, align 8
  %213 = sub i64 %200, %212
  %214 = ashr exact i64 %213, 2
  %215 = add nsw i64 %214, 1
  %216 = icmp ugt i64 %215, 4611686018427387903
  br i1 %216, label %217, label %219

217:                                              ; preds = %211
  %218 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %218) #13
  unreachable

219:                                              ; preds = %211
  %220 = icmp ult i64 %214, 2305843009213693951
  br i1 %220, label %221, label %229

221:                                              ; preds = %219
  %222 = ashr exact i64 %213, 1
  %223 = icmp ult i64 %222, %215
  %224 = select i1 %223, i64 %215, i64 %222
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %234, label %226

226:                                              ; preds = %221
  %227 = icmp ugt i64 %224, 4611686018427387903
  br i1 %227, label %228, label %229

228:                                              ; preds = %226
  tail call void @abort() #13
  unreachable

229:                                              ; preds = %226, %219
  %230 = phi i64 [ %224, %226 ], [ 4611686018427387903, %219 ]
  %231 = shl i64 %230, 2
  %232 = tail call i8* @_Znwm(i64 %231) #12
  %233 = bitcast i8* %232 to i32*
  br label %234

234:                                              ; preds = %229, %221
  %235 = phi i64 [ %230, %229 ], [ 0, %221 ]
  %236 = phi i32* [ %233, %229 ], [ null, %221 ]
  %237 = getelementptr inbounds i32, i32* %236, i64 %214
  %238 = getelementptr inbounds i32, i32* %236, i64 %235
  %239 = ptrtoint i32* %238 to i64
  %240 = load i32, i32* %205, align 4
  store i32 %240, i32* %237, align 4
  %241 = getelementptr inbounds i32, i32* %237, i64 1
  %242 = ptrtoint i32* %241 to i64
  %243 = sub i64 %201, %212
  %244 = ashr exact i64 %243, 2
  %245 = sub nsw i64 0, %244
  %246 = getelementptr inbounds i32, i32* %237, i64 %245
  %247 = ptrtoint i32* %246 to i64
  %248 = icmp sgt i64 %243, 0
  br i1 %248, label %249, label %252

249:                                              ; preds = %234
  %250 = bitcast i32* %246 to i8*
  %251 = inttoptr i64 %212 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %251, i64 %243, i1 false) #11
  br label %252

252:                                              ; preds = %249, %234
  store i64 %247, i64* %92, align 8
  store i64 %242, i64* %91, align 8
  store i64 %239, i64* %93, align 8
  %253 = icmp eq i64 %212, 0
  br i1 %253, label %256, label %254

254:                                              ; preds = %252
  %255 = inttoptr i64 %212 to i8*
  tail call void @_ZdlPv(i8* %255) #12
  br label %256

256:                                              ; preds = %207, %252, %254
  %257 = phi i64 [ %210, %207 ], [ %242, %252 ], [ %242, %254 ]
  %258 = phi i32* [ %209, %207 ], [ %241, %252 ], [ %241, %254 ]
  %259 = add nuw i64 %135, 1
  %260 = load i64, i64* %83, align 8
  %261 = load i64, i64* %85, align 8
  %262 = sub i64 %260, %261
  %263 = ashr exact i64 %262, 2
  %264 = icmp ult i64 %259, %263
  br i1 %264, label %132, label %95
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc dereferenceable(24) %"class.std::__1::vector.3"* @_ZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter17GetDefiningBlocksEj(%"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1172", align 1
  %5 = alloca i32, align 4
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %0, i64 0, i32 6, i32 0
  %7 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::tuple.1172", %"class.std::__1::tuple.1172"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #11
  %10 = call { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"* %6, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1172"* nonnull dereferenceable(1) %4) #11
  %11 = extractvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %10, 0
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %11, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.309"* %12 to %"class.std::__1::vector.3"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %11, i64 4
  %15 = bitcast %"struct.std::__1::__hash_node_base.309"* %14 to i32**
  %16 = bitcast %"struct.std::__1::__hash_node_base.309"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.309"* %12 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %21, label %361

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %0, i64 0, i32 3
  %23 = load %"class.std::__1::unordered_set.976"*, %"class.std::__1::unordered_set.976"** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::unordered_set.976", %"class.std::__1::unordered_set.976"* %23, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %25 = bitcast %"struct.std::__1::__hash_node_base.981"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %130, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %0, i64 0, i32 2
  br label %30

30:                                               ; preds = %28, %126
  %31 = phi i64 [ %26, %28 ], [ %128, %126 ]
  %32 = inttoptr i64 %31 to %"struct.std::__1::__hash_node.1259"*
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node.1259", %"struct.std::__1::__hash_node.1259"* %32, i64 0, i32 2
  %34 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %33, align 8
  %35 = load %"class.spvtools::opt::DominatorTree"*, %"class.spvtools::opt::DominatorTree"** %29, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %34, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %36, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 3
  %43 = load i8, i8* %42, align 4, !range !3
  %44 = zext i8 %43 to i32
  %45 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 %44) #11
  br label %46

46:                                               ; preds = %30, %41
  %47 = phi i32 [ %45, %41 ], [ 0, %30 ]
  %48 = load i32, i32* %5, align 4
  %49 = call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"* %35, i32 %47, i32 %48) #11
  br i1 %49, label %50, label %126

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %34, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 4
  %54 = load i8, i8* %53, align 1, !range !3
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 3
  %58 = load i8, i8* %57, align 4, !range !3
  %59 = zext i8 %58 to i32
  %60 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %52, i32 %59) #11
  br label %61

61:                                               ; preds = %50, %56
  %62 = phi i32 [ %60, %56 ], [ 0, %50 ]
  %63 = load i32*, i32** %15, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %11, i64 5
  %65 = bitcast %"struct.std::__1::__hash_node_base.309"* %64 to i32**
  %66 = load i32*, i32** %65, align 8
  %67 = icmp ult i32* %63, %66
  %68 = ptrtoint i32* %66 to i64
  br i1 %67, label %69, label %72

69:                                               ; preds = %61
  store i32 %62, i32* %63, align 4
  %70 = getelementptr inbounds i32, i32* %63, i64 1
  %71 = ptrtoint i32* %70 to i64
  store i64 %71, i64* %16, align 8
  br label %361

72:                                               ; preds = %61
  %73 = ptrtoint i32* %63 to i64
  %74 = load i64, i64* %18, align 8
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 2
  %77 = add nsw i64 %76, 1
  %78 = icmp ugt i64 %77, 4611686018427387903
  br i1 %78, label %79, label %81

79:                                               ; preds = %72
  %80 = bitcast %"struct.std::__1::__hash_node_base.309"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #13
  unreachable

81:                                               ; preds = %72
  %82 = bitcast %"struct.std::__1::__hash_node_base.309"* %64 to i64*
  %83 = sub i64 %68, %74
  %84 = ashr exact i64 %83, 2
  %85 = icmp ult i64 %84, 2305843009213693951
  br i1 %85, label %86, label %94

86:                                               ; preds = %81
  %87 = ashr exact i64 %83, 1
  %88 = icmp ult i64 %87, %77
  %89 = select i1 %88, i64 %77, i64 %87
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %86
  %92 = icmp ugt i64 %89, 4611686018427387903
  br i1 %92, label %93, label %94

93:                                               ; preds = %91
  call void @abort() #13
  unreachable

94:                                               ; preds = %91, %81
  %95 = phi i64 [ %89, %91 ], [ 4611686018427387903, %81 ]
  %96 = shl i64 %95, 2
  %97 = call i8* @_Znwm(i64 %96) #12
  %98 = bitcast i8* %97 to i32*
  br label %99

99:                                               ; preds = %94, %86
  %100 = phi i64 [ %95, %94 ], [ 0, %86 ]
  %101 = phi i32* [ %98, %94 ], [ null, %86 ]
  %102 = getelementptr inbounds i32, i32* %101, i64 %76
  %103 = getelementptr inbounds i32, i32* %101, i64 %100
  %104 = ptrtoint i32* %103 to i64
  store i32 %62, i32* %102, align 4
  %105 = getelementptr inbounds i32, i32* %102, i64 1
  %106 = ptrtoint i32* %105 to i64
  %107 = bitcast %"struct.std::__1::__hash_node_base.309"* %12 to i32**
  %108 = load i32*, i32** %107, align 8
  %109 = load i64, i64* %16, align 8
  %110 = ptrtoint i32* %108 to i64
  %111 = sub i64 %109, %110
  %112 = ashr exact i64 %111, 2
  %113 = sub nsw i64 0, %112
  %114 = getelementptr inbounds i32, i32* %102, i64 %113
  %115 = ptrtoint i32* %114 to i64
  %116 = icmp sgt i64 %111, 0
  br i1 %116, label %117, label %121

117:                                              ; preds = %99
  %118 = bitcast i32* %114 to i8*
  %119 = bitcast i32* %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %119, i64 %111, i1 false) #11
  %120 = load i32*, i32** %107, align 8
  br label %121

121:                                              ; preds = %117, %99
  %122 = phi i32* [ %108, %99 ], [ %120, %117 ]
  store i64 %115, i64* %18, align 8
  store i64 %106, i64* %16, align 8
  store i64 %104, i64* %82, align 8
  %123 = icmp eq i32* %122, null
  br i1 %123, label %361, label %124

124:                                              ; preds = %121
  %125 = bitcast i32* %122 to i8*
  call void @_ZdlPv(i8* %125) #12
  br label %361

126:                                              ; preds = %46
  %127 = inttoptr i64 %31 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %30

130:                                              ; preds = %126, %21
  %131 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter", %"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %0, i64 0, i32 1
  %132 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %131, align 8
  %133 = load i32, i32* %5, align 4
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %132, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %186, label %138

138:                                              ; preds = %130
  %139 = call i64 @llvm.ctpop.i64(i64 %136) #11, !range !2
  %140 = icmp ugt i64 %139, 1
  br i1 %140, label %144, label %141

141:                                              ; preds = %138
  %142 = add i64 %136, 4294967295
  %143 = and i64 %142, %134
  br label %148

144:                                              ; preds = %138
  %145 = icmp ugt i64 %136, %134
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = urem i64 %134, %136
  br label %148

148:                                              ; preds = %146, %144, %141
  %149 = phi i64 [ %143, %141 ], [ %147, %146 ], [ %134, %144 ]
  %150 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %132, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %150, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %151, i64 %149
  %153 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base.309"* %153, null
  br i1 %154, label %186, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %153, i64 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base.309"* %157, null
  br i1 %158, label %186, label %159

159:                                              ; preds = %155
  %160 = add i64 %136, -1
  br label %161

161:                                              ; preds = %182, %159
  %162 = phi %"struct.std::__1::__hash_node_base.309"* [ %157, %159 ], [ %184, %182 ]
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %162, i64 1
  %164 = bitcast %"struct.std::__1::__hash_node_base.309"* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = icmp eq i64 %165, %134
  br i1 %166, label %177, label %167

167:                                              ; preds = %161
  br i1 %140, label %170, label %168

168:                                              ; preds = %167
  %169 = and i64 %165, %160
  br label %174

170:                                              ; preds = %167
  %171 = icmp ult i64 %165, %136
  br i1 %171, label %174, label %172

172:                                              ; preds = %170
  %173 = urem i64 %165, %136
  br label %174

174:                                              ; preds = %172, %170, %168
  %175 = phi i64 [ %169, %168 ], [ %173, %172 ], [ %165, %170 ]
  %176 = icmp eq i64 %175, %149
  br i1 %176, label %182, label %186

177:                                              ; preds = %161
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %162, i64 2
  %179 = bitcast %"struct.std::__1::__hash_node_base.309"* %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, %133
  br i1 %181, label %187, label %182

182:                                              ; preds = %177, %174
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %162, i64 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.309"* %184, null
  br i1 %185, label %186, label %161

186:                                              ; preds = %182, %174, %155, %148, %130
  call void @abort() #13
  unreachable

187:                                              ; preds = %177
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %162, i64 3
  %189 = bitcast %"struct.std::__1::__hash_node_base.309"* %188 to i32**
  %190 = load i32*, i32** %189, align 8
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %162, i64 4
  %192 = bitcast %"struct.std::__1::__hash_node_base.309"* %191 to i32**
  %193 = load i32*, i32** %192, align 8
  %194 = icmp eq i32* %190, %193
  br i1 %194, label %195, label %197

195:                                              ; preds = %187
  %196 = bitcast %"struct.std::__1::__hash_node_base.309"* %12 to i32**
  br label %202

197:                                              ; preds = %187
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %11, i64 5
  %199 = bitcast %"struct.std::__1::__hash_node_base.309"* %198 to i32**
  %200 = bitcast %"struct.std::__1::__hash_node_base.309"* %198 to i64*
  %201 = bitcast %"struct.std::__1::__hash_node_base.309"* %12 to i32**
  br label %218

202:                                              ; preds = %348, %195
  %203 = phi i32** [ %196, %195 ], [ %201, %348 ]
  %204 = load i32*, i32** %203, align 8
  %205 = load i32*, i32** %15, align 8
  %206 = icmp eq i32* %204, %205
  %207 = ptrtoint i32* %205 to i64
  %208 = ptrtoint i32* %204 to i64
  br i1 %206, label %351, label %209

209:                                              ; preds = %202
  %210 = load i32, i32* %204, align 4
  br label %211

211:                                              ; preds = %209, %215
  %212 = phi i32* [ %204, %209 ], [ %213, %215 ]
  %213 = getelementptr inbounds i32, i32* %212, i64 1
  %214 = icmp eq i32* %213, %205
  br i1 %214, label %351, label %215

215:                                              ; preds = %211
  %216 = load i32, i32* %213, align 4
  %217 = icmp eq i32 %210, %216
  br i1 %217, label %211, label %361

218:                                              ; preds = %197, %348
  %219 = phi i32* [ %190, %197 ], [ %349, %348 ]
  %220 = load i32, i32* %219, align 4
  %221 = call fastcc dereferenceable(24) %"class.std::__1::vector.3"* @_ZN8spvtools3opt12_GLOBAL__N_113LCSSARewriter17GetDefiningBlocksEj(%"class.spvtools::opt::(anonymous namespace)::LCSSARewriter"* %0, i32 %220)
  %222 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 1
  %223 = bitcast i32** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = bitcast %"class.std::__1::vector.3"* %221 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = sub i64 %224, %226
  %228 = icmp eq i64 %227, 4
  %229 = inttoptr i64 %226 to i32*
  %230 = load i32*, i32** %15, align 8
  %231 = load i32*, i32** %199, align 8
  %232 = icmp eq i32* %230, %231
  %233 = ptrtoint i32* %231 to i64
  br i1 %228, label %234, label %292

234:                                              ; preds = %218
  br i1 %232, label %239, label %235

235:                                              ; preds = %234
  %236 = load i32, i32* %229, align 4
  store i32 %236, i32* %230, align 4
  %237 = getelementptr inbounds i32, i32* %230, i64 1
  %238 = ptrtoint i32* %237 to i64
  store i64 %238, i64* %16, align 8
  br label %348

239:                                              ; preds = %234
  %240 = ptrtoint i32* %230 to i64
  %241 = load i64, i64* %18, align 8
  %242 = sub i64 %240, %241
  %243 = ashr exact i64 %242, 2
  %244 = add nsw i64 %243, 1
  %245 = icmp ugt i64 %244, 4611686018427387903
  br i1 %245, label %246, label %248

246:                                              ; preds = %239
  %247 = bitcast %"struct.std::__1::__hash_node_base.309"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %247) #13
  unreachable

248:                                              ; preds = %239
  %249 = sub i64 %233, %241
  %250 = ashr exact i64 %249, 2
  %251 = icmp ult i64 %250, 2305843009213693951
  br i1 %251, label %252, label %260

252:                                              ; preds = %248
  %253 = ashr exact i64 %249, 1
  %254 = icmp ult i64 %253, %244
  %255 = select i1 %254, i64 %244, i64 %253
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %265, label %257

257:                                              ; preds = %252
  %258 = icmp ugt i64 %255, 4611686018427387903
  br i1 %258, label %259, label %260

259:                                              ; preds = %257
  call void @abort() #13
  unreachable

260:                                              ; preds = %257, %248
  %261 = phi i64 [ %255, %257 ], [ 4611686018427387903, %248 ]
  %262 = shl i64 %261, 2
  %263 = call i8* @_Znwm(i64 %262) #12
  %264 = bitcast i8* %263 to i32*
  br label %265

265:                                              ; preds = %260, %252
  %266 = phi i64 [ %261, %260 ], [ 0, %252 ]
  %267 = phi i32* [ %264, %260 ], [ null, %252 ]
  %268 = getelementptr inbounds i32, i32* %267, i64 %243
  %269 = getelementptr inbounds i32, i32* %267, i64 %266
  %270 = ptrtoint i32* %269 to i64
  %271 = load i32, i32* %229, align 4
  store i32 %271, i32* %268, align 4
  %272 = getelementptr inbounds i32, i32* %268, i64 1
  %273 = ptrtoint i32* %272 to i64
  %274 = load i32*, i32** %201, align 8
  %275 = load i64, i64* %16, align 8
  %276 = ptrtoint i32* %274 to i64
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 2
  %279 = sub nsw i64 0, %278
  %280 = getelementptr inbounds i32, i32* %268, i64 %279
  %281 = ptrtoint i32* %280 to i64
  %282 = icmp sgt i64 %277, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %265
  %284 = bitcast i32* %280 to i8*
  %285 = bitcast i32* %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %284, i8* align 4 %285, i64 %277, i1 false) #11
  %286 = load i32*, i32** %201, align 8
  br label %287

287:                                              ; preds = %283, %265
  %288 = phi i32* [ %274, %265 ], [ %286, %283 ]
  store i64 %281, i64* %18, align 8
  store i64 %273, i64* %16, align 8
  store i64 %270, i64* %200, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %348, label %290

290:                                              ; preds = %287
  %291 = bitcast i32* %288 to i8*
  call void @_ZdlPv(i8* %291) #12
  br label %348

292:                                              ; preds = %218
  br i1 %232, label %296, label %293

293:                                              ; preds = %292
  store i32 %220, i32* %230, align 4
  %294 = getelementptr inbounds i32, i32* %230, i64 1
  %295 = ptrtoint i32* %294 to i64
  store i64 %295, i64* %16, align 8
  br label %348

296:                                              ; preds = %292
  %297 = ptrtoint i32* %230 to i64
  %298 = load i64, i64* %18, align 8
  %299 = sub i64 %297, %298
  %300 = ashr exact i64 %299, 2
  %301 = add nsw i64 %300, 1
  %302 = icmp ugt i64 %301, 4611686018427387903
  br i1 %302, label %303, label %305

303:                                              ; preds = %296
  %304 = bitcast %"struct.std::__1::__hash_node_base.309"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %304) #13
  unreachable

305:                                              ; preds = %296
  %306 = sub i64 %233, %298
  %307 = ashr exact i64 %306, 2
  %308 = icmp ult i64 %307, 2305843009213693951
  br i1 %308, label %309, label %317

309:                                              ; preds = %305
  %310 = ashr exact i64 %306, 1
  %311 = icmp ult i64 %310, %301
  %312 = select i1 %311, i64 %301, i64 %310
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %322, label %314

314:                                              ; preds = %309
  %315 = icmp ugt i64 %312, 4611686018427387903
  br i1 %315, label %316, label %317

316:                                              ; preds = %314
  call void @abort() #13
  unreachable

317:                                              ; preds = %314, %305
  %318 = phi i64 [ %312, %314 ], [ 4611686018427387903, %305 ]
  %319 = shl i64 %318, 2
  %320 = call i8* @_Znwm(i64 %319) #12
  %321 = bitcast i8* %320 to i32*
  br label %322

322:                                              ; preds = %317, %309
  %323 = phi i64 [ %318, %317 ], [ 0, %309 ]
  %324 = phi i32* [ %321, %317 ], [ null, %309 ]
  %325 = getelementptr inbounds i32, i32* %324, i64 %300
  %326 = getelementptr inbounds i32, i32* %324, i64 %323
  %327 = ptrtoint i32* %326 to i64
  store i32 %220, i32* %325, align 4
  %328 = getelementptr inbounds i32, i32* %325, i64 1
  %329 = ptrtoint i32* %328 to i64
  %330 = load i32*, i32** %201, align 8
  %331 = load i64, i64* %16, align 8
  %332 = ptrtoint i32* %330 to i64
  %333 = sub i64 %331, %332
  %334 = ashr exact i64 %333, 2
  %335 = sub nsw i64 0, %334
  %336 = getelementptr inbounds i32, i32* %325, i64 %335
  %337 = ptrtoint i32* %336 to i64
  %338 = icmp sgt i64 %333, 0
  br i1 %338, label %339, label %343

339:                                              ; preds = %322
  %340 = bitcast i32* %336 to i8*
  %341 = bitcast i32* %330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %340, i8* align 4 %341, i64 %333, i1 false) #11
  %342 = load i32*, i32** %201, align 8
  br label %343

343:                                              ; preds = %339, %322
  %344 = phi i32* [ %330, %322 ], [ %342, %339 ]
  store i64 %337, i64* %18, align 8
  store i64 %329, i64* %16, align 8
  store i64 %327, i64* %200, align 8
  %345 = icmp eq i32* %344, null
  br i1 %345, label %348, label %346

346:                                              ; preds = %343
  %347 = bitcast i32* %344 to i8*
  call void @_ZdlPv(i8* %347) #12
  br label %348

348:                                              ; preds = %346, %343, %293, %290, %287, %235
  %349 = getelementptr inbounds i32, i32* %219, i64 1
  %350 = icmp eq i32* %349, %193
  br i1 %350, label %202, label %218

351:                                              ; preds = %211, %202
  %352 = sub i64 %207, %208
  %353 = ashr exact i64 %352, 2
  %354 = icmp eq i64 %352, 0
  br i1 %354, label %355, label %357

355:                                              ; preds = %351
  %356 = sub nuw nsw i64 1, %353
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.3"* %13, i64 %356) #11
  br label %361

357:                                              ; preds = %351
  %358 = icmp ugt i64 %353, 1
  br i1 %358, label %359, label %361

359:                                              ; preds = %357
  %360 = getelementptr inbounds i32, i32* %204, i64 1
  store i32* %360, i32** %15, align 8
  br label %361

361:                                              ; preds = %215, %359, %357, %355, %124, %121, %69, %2
  ret %"class.std::__1::vector.3"* %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !50
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !50
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !50
  store i32 %62, i32* %61, align 8, !noalias !50
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %64, align 8, !noalias !50
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !50
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !50
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !2
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !2
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !53

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_113LCSSARewriter11UseRewriter18GetOrBuildIncomingEjEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"**
  %5 = load %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"*, %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %8 = bitcast %"struct.spvtools::opt::Operand"** %7 to i64*
  %9 = bitcast %"class.std::__1::vector"* %6 to i64*
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %12 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %5, i64 0, i32 1
  br label %13

13:                                               ; preds = %42, %2
  %14 = phi i32 [ 0, %2 ], [ %45, %42 ]
  %15 = load i64, i64* %8, align 8
  %16 = load i64, i64* %9, align 8
  %17 = sub i64 %15, %16
  %18 = sdiv exact i64 %17, 48
  %19 = load i8, i8* %10, align 4, !range !3
  %20 = icmp eq i8 %19, 0
  %21 = load i8, i8* %11, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  %23 = select i1 %22, i32 1, i32 2
  %24 = xor i1 %22, true
  %25 = zext i1 %24 to i32
  %26 = select i1 %20, i32 %25, i32 %23
  %27 = trunc i64 %18 to i32
  %28 = sub i32 %27, %26
  %29 = icmp ult i32 %14, %28
  br i1 %29, label %30, label %46

30:                                               ; preds = %13
  %31 = add i32 %26, %14
  %32 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %31) #11
  %33 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 0, i32 4
  %35 = load i8, i8* %34, align 1, !range !3
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %42, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 0, i32 3
  %39 = load i8, i8* %38, align 4, !range !3
  %40 = zext i8 %39 to i32
  %41 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %33, i32 %40) #11
  br label %42

42:                                               ; preds = %37, %30
  %43 = phi i32 [ %41, %37 ], [ 0, %30 ]
  %44 = icmp eq i32 %32, %43
  %45 = add i32 %14, 2
  br i1 %44, label %13, label %52

46:                                               ; preds = %13
  %47 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Instruction"***
  %48 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %47, align 8
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %48, align 8
  %49 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %47, align 8
  %50 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter", %"struct.spvtools::opt::(anonymous namespace)::LCSSARewriter::UseRewriter"* %5, i64 0, i32 3, i32 0
  %51 = tail call { %"struct.std::__1::__hash_node_base.1236"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1232"* %50, %"class.spvtools::opt::Instruction"** dereferenceable(8) %49, %"class.spvtools::opt::Instruction"** dereferenceable(8) %49) #11
  br label %52

52:                                               ; preds = %42, %46
  %53 = phi i1 [ false, %46 ], [ true, %42 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, %"class.std::__1::vector.3"* dereferenceable(24), i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::unique_ptr.21", align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %44, label %20

20:                                               ; preds = %5
  %21 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  %22 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %27 = bitcast i32** %25 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.0"* %28 to i64*
  %30 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %26 to i32*
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %37 = bitcast i32** %35 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %39 = bitcast %"class.std::__1::unique_ptr.0"* %38 to i64*
  %40 = bitcast %"struct.spvtools::opt::Operand"** %12 to i64*
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %52

44:                                               ; preds = %105, %5
  %45 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %46, align 8
  %47 = call i8* @_Znwm(i64 112) #12
  %48 = bitcast i8* %47 to %"class.spvtools::opt::Instruction"*
  %49 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %50 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %49, align 8
  %51 = icmp eq i32 %4, 0
  br i1 %51, label %112, label %129

52:                                               ; preds = %20, %105
  %53 = phi i64 [ %18, %20 ], [ %108, %105 ]
  %54 = phi i64 [ 0, %20 ], [ %106, %105 ]
  %55 = inttoptr i64 %53 to i32*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #11
  %56 = getelementptr inbounds i32, i32* %55, i64 %54
  %57 = load i32, i32* %56, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %26, %"struct.std::__1::aligned_storage<4, 4>::type"** %27, align 8
  store i64 0, i64* %29, align 8
  store i64 1, i64* %24, align 8
  store i32 %57, i32* %30, align 8
  store i32 1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  store i64 0, i64* %34, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %36, %"struct.std::__1::aligned_storage<4, 4>::type"** %37, align 8
  store i64 0, i64* %39, align 8
  %58 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %32, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %59 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %60 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %61 = icmp ult %"struct.spvtools::opt::Operand"* %59, %60
  br i1 %61, label %62, label %76

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 0
  %64 = load i32, i32* %31, align 8
  store i32 %64, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 1
  store i64 0, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 2
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 3, i64 0
  %70 = bitcast i32** %68 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %69, %"struct.std::__1::aligned_storage<4, 4>::type"** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 4
  %72 = bitcast %"class.std::__1::unique_ptr.0"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %32) #11
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 1
  %75 = ptrtoint %"struct.spvtools::opt::Operand"* %74 to i64
  store i64 %75, i64* %40, align 8
  br label %77

76:                                               ; preds = %52
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %6, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #11
  br label %77

77:                                               ; preds = %62, %76
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %78 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %42, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %42, align 8
  %79 = icmp eq %"class.std::__1::vector.3"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32* %82 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast i32* %82 to i8*
  call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %84, %80
  %90 = bitcast %"class.std::__1::vector.3"* %78 to i8*
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %77, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %43, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %43, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %91, %103
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #11
  %106 = add nuw i64 %54, 1
  %107 = load i64, i64* %15, align 8
  %108 = load i64, i64* %17, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %106, %110
  br i1 %111, label %52, label %44

112:                                              ; preds = %44
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %113, align 8
  %115 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %114) #11
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 2
  %119 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %119, i64 0, i32 2
  %121 = load i8, i8* %120, align 8, !range !3
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %117
  %124 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %124, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i64 37, i1 false) #11
  %125 = getelementptr inbounds i8, i8* %124, i64 37
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 1, i32 0
  %127 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %126, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 0
  call void %127(%"union.std::__1::__function::__policy_storage"* %128, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %124) #11
  call void @_ZdlPv(i8* nonnull %124) #12
  br label %129

129:                                              ; preds = %123, %117, %112, %44
  %130 = phi i32 [ %4, %44 ], [ %115, %112 ], [ 0, %117 ], [ 0, %123 ]
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %48, %"class.spvtools::opt::IRContext"* %50, i32 %2, i32 %1, i32 %130, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %131 = ptrtoint i8* %47 to i64
  %132 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i64*
  store i64 %131, i64* %132, align 8
  %133 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %9)
  %134 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %46, align 8
  %135 = icmp eq %"class.spvtools::opt::Instruction"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %129
  %137 = bitcast %"class.spvtools::opt::Instruction"* %134 to void (%"class.spvtools::opt::Instruction"*)***
  %138 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %138, i64 1
  %140 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %139, align 8
  call void %140(%"class.spvtools::opt::Instruction"* nonnull %134) #11
  br label %141

141:                                              ; preds = %129, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %11, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %173, label %144

144:                                              ; preds = %141
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %171, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %152, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #12
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #12
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = bitcast %"class.std::__1::vector"* %6 to i8**
  %170 = load i8*, i8** %169, align 8
  br label %171

171:                                              ; preds = %168, %144
  %172 = phi i8* [ %170, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %12, align 8
  call void @_ZdlPv(i8* %172) #12
  br label %173

173:                                              ; preds = %141, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret %"class.spvtools::opt::Instruction"* %133
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

declare zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.309"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.309"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.309"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.309"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.309"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #12, !noalias !54
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !54
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !54
  store i32 %62, i32* %61, align 8, !noalias !54
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #11, !noalias !54
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !54
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.309"**
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %66, align 8, !noalias !54
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #11
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #11, !range !2
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.309"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.309"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.309"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.309"* %109, %"struct.std::__1::__hash_node_base.309"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.309"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #11, !range !2
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.309"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.309"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.309"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.309"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.309"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } undef, %"struct.std::__1::__hash_node_base.309"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.309"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.305"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.309"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.309"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.311", %"class.std::__1::__bucket_list_deallocator.311"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !57

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.309"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.309"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.309"* %36, %"struct.std::__1::__hash_node_base.309"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.309"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.309"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.309"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.309"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.309"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.309"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.309"* %82, %"struct.std::__1::__hash_node_base.309"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.309"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.309"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.309"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.309"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.309"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.309"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.309"* %80, %"struct.std::__1::__hash_node_base.309"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.309"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.309"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.309"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.309"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.311", %"class.std::__1::__bucket_list_deallocator.311"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.3"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1236"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1232"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"class.spvtools::opt::Instruction"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::Instruction"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.1236"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.1236"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.1236"* %62 to %"class.spvtools::opt::Instruction"**
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #12, !noalias !58
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !58
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !58
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !58
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.1236"**
  store %"struct.std::__1::__hash_node_base.1236"* null, %"struct.std::__1::__hash_node_base.1236"** %75, align 8, !noalias !58
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !2
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.1232"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !2
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.1236"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.1236"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.1236"* %118, %"struct.std::__1::__hash_node_base.1236"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.1236"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !2
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.1236"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.1236"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.1236"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.1236"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.1236"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.1236"*, i8 } undef, %"struct.std::__1::__hash_node_base.1236"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.1236"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.1236"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.1232"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.1232"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.1232"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.1232"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1232"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1236"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1236"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1238", %"class.std::__1::__bucket_list_deallocator.1238"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1236"* null, %"struct.std::__1::__hash_node_base.1236"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !61

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1236"* null, %"struct.std::__1::__hash_node_base.1236"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1236"* null, %"struct.std::__1::__hash_node_base.1236"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1236"* null, %"struct.std::__1::__hash_node_base.1236"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1236"* null, %"struct.std::__1::__hash_node_base.1236"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1236"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1236"* %36, %"struct.std::__1::__hash_node_base.1236"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1236"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1236"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1236"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1236"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1236"* %82, %"struct.std::__1::__hash_node_base.1236"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1236"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1236"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1236"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1236"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1236"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1236"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1236"* %80, %"struct.std::__1::__hash_node_base.1236"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1236"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1236", %"struct.std::__1::__hash_node_base.1236"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1236"*, %"struct.std::__1::__hash_node_base.1236"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1236"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1232", %"class.std::__1::__hash_table.1232"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1236"**, %"struct.std::__1::__hash_node_base.1236"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1236"** null, %"struct.std::__1::__hash_node_base.1236"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1236"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1236"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1238", %"class.std::__1::__bucket_list_deallocator.1238"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS5_9IRContextEPNS5_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSB_IPNS5_10BasicBlockENSC_ISM_EENSE_ISM_EENSG_ISM_EEEEPNS6_13LCSSARewriterEEUlPNS5_11InstructionEjE_FvSW_jEEEEEPvPKv(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #12, !noalias !62
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS5_9IRContextEPNS5_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSB_IPNS5_10BasicBlockENSC_ISM_EENSE_ISM_EENSG_ISM_EEEEPNS6_13LCSSARewriterEEUlPNS5_11InstructionEjE_FvSW_jEEEEEvPv(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction16ForEachInOperandERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1005"**
  %4 = load %"class.std::__1::function.1005"*, %"class.std::__1::function.1005"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #11
  ret i1 true
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1005"**
  %4 = load %"class.std::__1::function.1005"*, %"class.std::__1::function.1005"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1005", %"class.std::__1::function.1005"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_10BasicBlock11ForEachInstERKNS_8functionIFvS6_EEEbEUlS6_E_S7_EEEEbPKNS0_16__policy_storageES6_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1141"**
  %4 = load %"class.std::__1::function.1141"*, %"class.std::__1::function.1141"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1141", %"class.std::__1::function.1141"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1141", %"class.std::__1::function.1141"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #11
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !3
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !3
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #11
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !3
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #11
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #11
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.40"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.1332", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.40"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.40"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr.40"* %10 to i64
  br i1 %11, label %14, label %144

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr.40"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.40"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %373

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.40"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr.40"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %"class.spvtools::opt::BasicBlock"** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr.40"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr.40"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.40"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.40"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !67

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr.40"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr.40"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %82

60:                                               ; preds = %82, %55
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %58, %55 ], [ %132, %82 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %134, label %66

66:                                               ; preds = %63, %80
  %67 = phi %"class.std::__1::unique_ptr.40"* [ %70, %80 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr.40"* [ %69, %80 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.40"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.40"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::BasicBlock"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.std::__1::unique_ptr.40"* %70 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %79, %"class.spvtools::opt::BasicBlock"* nonnull %75) #11
  br label %80

80:                                               ; preds = %78, %66
  %81 = icmp eq %"class.std::__1::unique_ptr.40"* %69, %1
  br i1 %81, label %134, label %66

82:                                               ; preds = %55, %82
  %83 = phi %"class.std::__1::unique_ptr.40"* [ %132, %82 ], [ %56, %55 ]
  %84 = phi %"class.std::__1::unique_ptr.40"* [ %131, %82 ], [ %57, %55 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.40"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.40"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 2
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr.40"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 3
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.40"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 4
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.40"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %109, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 5
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %115, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr.40"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %121, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %127, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.40"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 8
  %133 = icmp ult %"class.std::__1::unique_ptr.40"* %131, %8
  br i1 %133, label %82, label %60

134:                                              ; preds = %80, %63
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %135, align 8
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %"class.spvtools::opt::BasicBlock"* %139, null
  br i1 %141, label %373, label %142

142:                                              ; preds = %134
  %143 = bitcast %"class.std::__1::unique_ptr.40"* %1 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %143, %"class.spvtools::opt::BasicBlock"* nonnull %139) #11
  br label %373

144:                                              ; preds = %3
  %145 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.1332"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #11
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.1332", %"struct.std::__1::__split_buffer.1332"* %5, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.1332", %"struct.std::__1::__split_buffer.1332"* %5, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.1332", %"struct.std::__1::__split_buffer.1332"* %5, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.1332", %"struct.std::__1::__split_buffer.1332"* %5, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1332", %"struct.std::__1::__split_buffer.1332"* %5, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  %153 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.1332"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %12, %155
  %157 = ashr exact i64 %156, 3
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 2305843009213693951
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #13
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"class.std::__1::unique_ptr.40"** %9 to i64*
  %164 = sub i64 %13, %155
  %165 = ashr exact i64 %164, 3
  %166 = icmp ult i64 %165, 1152921504606846975
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %4, %155
  %169 = ashr exact i64 %168, 3
  store %"class.std::__1::unique_ptr.40"* null, %"class.std::__1::unique_ptr.40"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.49"** %151 to %"class.std::__1::__compressed_pair.46"**
  store %"class.std::__1::__compressed_pair.46"* %145, %"class.std::__1::__compressed_pair.46"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 2
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %4, %155
  %176 = ashr exact i64 %175, 3
  store %"class.std::__1::unique_ptr.40"* null, %"class.std::__1::unique_ptr.40"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.49"** %151 to %"class.std::__1::__compressed_pair.46"**
  store %"class.std::__1::__compressed_pair.46"* %145, %"class.std::__1::__compressed_pair.46"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #13
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 2305843009213693951, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 3
  %186 = tail call i8* @_Znwm(i64 %185) #12
  %187 = bitcast i8* %186 to %"class.std::__1::unique_ptr.40"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"class.std::__1::unique_ptr.40"* [ %187, %182 ], [ null, %171 ]
  store %"class.std::__1::unique_ptr.40"* %191, %"class.std::__1::unique_ptr.40"** %147, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %191, i64 %189
  store %"class.std::__1::unique_ptr.40"* %192, %"class.std::__1::unique_ptr.40"** %149, align 8
  store %"class.std::__1::unique_ptr.40"* %192, %"class.std::__1::unique_ptr.40"** %148, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %191, i64 %190
  store %"class.std::__1::unique_ptr.40"* %193, %"class.std::__1::unique_ptr.40"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.1332"* nonnull %5, %"class.std::__1::unique_ptr.40"* dereferenceable(8) %2)
  %194 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %195 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %196 = icmp eq %"class.std::__1::unique_ptr.40"* %195, %1
  br i1 %196, label %261, label %197

197:                                              ; preds = %188
  %198 = ptrtoint %"class.std::__1::unique_ptr.40"* %195 to i64
  %199 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 -1, i32 0, i32 0, i32 0
  %200 = ptrtoint %"class.spvtools::opt::BasicBlock"** %199 to i64
  %201 = sub i64 %200, %198
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 3
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %220, label %206

206:                                              ; preds = %197, %206
  %207 = phi %"class.std::__1::unique_ptr.40"* [ %217, %206 ], [ %194, %197 ]
  %208 = phi %"class.std::__1::unique_ptr.40"* [ %211, %206 ], [ %1, %197 ]
  %209 = phi i64 [ %218, %206 ], [ %204, %197 ]
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %207, i64 -1
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %208, i64 -1
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %211, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr.40"* %211 to i64*
  %214 = load i64, i64* %213, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.40"* %210 to i64*
  store i64 %214, i64* %215, align 8
  %216 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %216, i64 -1
  store %"class.std::__1::unique_ptr.40"* %217, %"class.std::__1::unique_ptr.40"** %148, align 8
  %218 = add i64 %209, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %206, !llvm.loop !68

220:                                              ; preds = %206, %197
  %221 = phi %"class.std::__1::unique_ptr.40"* [ undef, %197 ], [ %217, %206 ]
  %222 = phi %"class.std::__1::unique_ptr.40"* [ %194, %197 ], [ %217, %206 ]
  %223 = phi %"class.std::__1::unique_ptr.40"* [ %1, %197 ], [ %211, %206 ]
  %224 = icmp ult i64 %201, 24
  br i1 %224, label %261, label %225

225:                                              ; preds = %220, %225
  %226 = phi %"class.std::__1::unique_ptr.40"* [ %259, %225 ], [ %222, %220 ]
  %227 = phi %"class.std::__1::unique_ptr.40"* [ %253, %225 ], [ %223, %220 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %226, i64 -1
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -1
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.std::__1::unique_ptr.40"* %229 to i64*
  %232 = load i64, i64* %231, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %230, align 8
  %233 = bitcast %"class.std::__1::unique_ptr.40"* %228 to i64*
  store i64 %232, i64* %233, align 8
  %234 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %234, i64 -1
  store %"class.std::__1::unique_ptr.40"* %235, %"class.std::__1::unique_ptr.40"** %148, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %234, i64 -2
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -2
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = bitcast %"class.std::__1::unique_ptr.40"* %237 to i64*
  %240 = load i64, i64* %239, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %238, align 8
  %241 = bitcast %"class.std::__1::unique_ptr.40"* %236 to i64*
  store i64 %240, i64* %241, align 8
  %242 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %242, i64 -1
  store %"class.std::__1::unique_ptr.40"* %243, %"class.std::__1::unique_ptr.40"** %148, align 8
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %242, i64 -2
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -3
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = bitcast %"class.std::__1::unique_ptr.40"* %245 to i64*
  %248 = load i64, i64* %247, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %246, align 8
  %249 = bitcast %"class.std::__1::unique_ptr.40"* %244 to i64*
  store i64 %248, i64* %249, align 8
  %250 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -1
  store %"class.std::__1::unique_ptr.40"* %251, %"class.std::__1::unique_ptr.40"** %148, align 8
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -2
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -4
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = bitcast %"class.std::__1::unique_ptr.40"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %254, align 8
  %257 = bitcast %"class.std::__1::unique_ptr.40"* %252 to i64*
  store i64 %256, i64* %257, align 8
  %258 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %258, i64 -1
  store %"class.std::__1::unique_ptr.40"* %259, %"class.std::__1::unique_ptr.40"** %148, align 8
  %260 = icmp eq %"class.std::__1::unique_ptr.40"* %253, %195
  br i1 %260, label %261, label %225

261:                                              ; preds = %220, %225, %188
  %262 = phi %"class.std::__1::unique_ptr.40"* [ %194, %188 ], [ %221, %220 ], [ %259, %225 ]
  %263 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %264 = icmp eq %"class.std::__1::unique_ptr.40"* %263, %1
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = ptrtoint %"class.std::__1::unique_ptr.40"* %263 to i64
  %267 = ptrtoint %"class.std::__1::unique_ptr.40"* %262 to i64
  %268 = bitcast %"class.std::__1::unique_ptr.40"** %148 to i64*
  %269 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64*
  %270 = load i64, i64* %269, align 8
  br label %340

271:                                              ; preds = %261
  %272 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64**
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %263, i64 -1, i32 0, i32 0, i32 0
  %275 = ptrtoint %"class.spvtools::opt::BasicBlock"** %274 to i64
  %276 = sub i64 %275, %4
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 3
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %296, label %281

281:                                              ; preds = %271, %281
  %282 = phi i64* [ %291, %281 ], [ %273, %271 ]
  %283 = phi %"class.std::__1::unique_ptr.40"* [ %288, %281 ], [ %1, %271 ]
  %284 = phi i64 [ %292, %281 ], [ %279, %271 ]
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %283, i64 0, i32 0, i32 0, i32 0
  %286 = bitcast %"class.std::__1::unique_ptr.40"* %283 to i64*
  %287 = load i64, i64* %286, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %285, align 8
  store i64 %287, i64* %282, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %283, i64 1
  %289 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %289, i64 1
  store %"class.std::__1::unique_ptr.40"* %290, %"class.std::__1::unique_ptr.40"** %149, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.40"* %290 to i64*
  %292 = add i64 %284, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %281, !llvm.loop !69

294:                                              ; preds = %281
  %295 = bitcast %"class.std::__1::unique_ptr.40"* %290 to i64*
  br label %296

296:                                              ; preds = %271, %294
  %297 = phi %"class.std::__1::unique_ptr.40"* [ undef, %271 ], [ %290, %294 ]
  %298 = phi i64* [ %273, %271 ], [ %295, %294 ]
  %299 = phi %"class.std::__1::unique_ptr.40"* [ %1, %271 ], [ %288, %294 ]
  %300 = icmp ult i64 %276, 24
  br i1 %300, label %333, label %301

301:                                              ; preds = %296, %301
  %302 = phi i64* [ %332, %301 ], [ %298, %296 ]
  %303 = phi %"class.std::__1::unique_ptr.40"* [ %328, %301 ], [ %299, %296 ]
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 0, i32 0, i32 0, i32 0
  %305 = bitcast %"class.std::__1::unique_ptr.40"* %303 to i64*
  %306 = load i64, i64* %305, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %304, align 8
  store i64 %306, i64* %302, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 1
  %308 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %308, i64 1
  store %"class.std::__1::unique_ptr.40"* %309, %"class.std::__1::unique_ptr.40"** %149, align 8
  %310 = bitcast %"class.std::__1::unique_ptr.40"* %309 to i64*
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %307, i64 0, i32 0, i32 0, i32 0
  %312 = bitcast %"class.std::__1::unique_ptr.40"* %307 to i64*
  %313 = load i64, i64* %312, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %311, align 8
  store i64 %313, i64* %310, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 2
  %315 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %315, i64 1
  store %"class.std::__1::unique_ptr.40"* %316, %"class.std::__1::unique_ptr.40"** %149, align 8
  %317 = bitcast %"class.std::__1::unique_ptr.40"* %316 to i64*
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 0, i32 0, i32 0, i32 0
  %319 = bitcast %"class.std::__1::unique_ptr.40"* %314 to i64*
  %320 = load i64, i64* %319, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %318, align 8
  store i64 %320, i64* %317, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 3
  %322 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %322, i64 1
  store %"class.std::__1::unique_ptr.40"* %323, %"class.std::__1::unique_ptr.40"** %149, align 8
  %324 = bitcast %"class.std::__1::unique_ptr.40"* %323 to i64*
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %321, i64 0, i32 0, i32 0, i32 0
  %326 = bitcast %"class.std::__1::unique_ptr.40"* %321 to i64*
  %327 = load i64, i64* %326, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %325, align 8
  store i64 %327, i64* %324, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 4
  %329 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %329, i64 1
  store %"class.std::__1::unique_ptr.40"* %330, %"class.std::__1::unique_ptr.40"** %149, align 8
  %331 = icmp eq %"class.std::__1::unique_ptr.40"* %328, %263
  %332 = bitcast %"class.std::__1::unique_ptr.40"* %330 to i64*
  br i1 %331, label %333, label %301

333:                                              ; preds = %301, %296
  %334 = phi %"class.std::__1::unique_ptr.40"* [ %297, %296 ], [ %330, %301 ]
  %335 = ptrtoint %"class.std::__1::unique_ptr.40"* %334 to i64
  %336 = bitcast %"class.std::__1::unique_ptr.40"** %148 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = load i64, i64* %152, align 8
  %339 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64*
  br label %340

340:                                              ; preds = %265, %333
  %341 = phi i64* [ %269, %265 ], [ %339, %333 ]
  %342 = phi i64 [ %270, %265 ], [ %335, %333 ]
  %343 = phi i64 [ %266, %265 ], [ %338, %333 ]
  %344 = phi i64* [ %268, %265 ], [ %336, %333 ]
  %345 = phi i64 [ %267, %265 ], [ %337, %333 ]
  %346 = load i64, i64* %153, align 8
  store i64 %345, i64* %153, align 8
  store i64 %346, i64* %344, align 8
  store i64 %342, i64* %152, align 8
  store i64 %343, i64* %341, align 8
  %347 = load i64, i64* %163, align 8
  %348 = bitcast %"class.std::__1::unique_ptr.40"** %150 to i64*
  %349 = load i64, i64* %348, align 8
  store i64 %349, i64* %163, align 8
  store i64 %347, i64* %348, align 8
  %350 = bitcast %"struct.std::__1::__split_buffer.1332"* %5 to i64*
  store i64 %346, i64* %350, align 8
  %351 = inttoptr i64 %346 to %"class.std::__1::unique_ptr.40"*
  %352 = inttoptr i64 %343 to %"class.std::__1::unique_ptr.40"*
  %353 = icmp eq %"class.std::__1::unique_ptr.40"* %352, %351
  br i1 %353, label %367, label %354

354:                                              ; preds = %340, %362
  %355 = phi %"class.std::__1::unique_ptr.40"* [ %363, %362 ], [ %352, %340 ]
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %355, i64 -1
  store %"class.std::__1::unique_ptr.40"* %356, %"class.std::__1::unique_ptr.40"** %149, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %356, i64 0, i32 0, i32 0, i32 0
  %358 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %357, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %357, align 8
  %359 = icmp eq %"class.spvtools::opt::BasicBlock"* %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %354
  %361 = bitcast %"class.std::__1::unique_ptr.40"* %356 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %361, %"class.spvtools::opt::BasicBlock"* nonnull %358) #11
  br label %362

362:                                              ; preds = %360, %354
  %363 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %364 = icmp eq %"class.std::__1::unique_ptr.40"* %363, %351
  br i1 %364, label %365, label %354

365:                                              ; preds = %362
  %366 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %147, align 8
  br label %367

367:                                              ; preds = %365, %340
  %368 = phi %"class.std::__1::unique_ptr.40"* [ %366, %365 ], [ %351, %340 ]
  %369 = icmp eq %"class.std::__1::unique_ptr.40"* %368, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %367
  %371 = bitcast %"class.std::__1::unique_ptr.40"* %368 to i8*
  call void @_ZdlPv(i8* %371) #12
  br label %372

372:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #11
  br label %373

373:                                              ; preds = %142, %134, %16, %372
  %374 = phi %"class.std::__1::unique_ptr.40"* [ %1, %16 ], [ %194, %372 ], [ %1, %134 ], [ %1, %142 ]
  ret %"class.std::__1::unique_ptr.40"* %374
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.1332"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1332", %"struct.std::__1::__split_buffer.1332"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1332", %"struct.std::__1::__split_buffer.1332"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.40"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.40"* %6 to i64
  br i1 %7, label %9, label %179

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1332", %"struct.std::__1::__split_buffer.1332"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1332", %"struct.std::__1::__split_buffer.1332"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.40"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.40"* %13 to i64
  br i1 %14, label %16, label %46

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.40"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.40"* %11, %4
  br i1 %23, label %42, label %24

24:                                               ; preds = %16, %36
  %25 = phi %"class.std::__1::unique_ptr.40"* [ %38, %36 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.40"* [ %37, %36 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.40"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.40"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::BasicBlock"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.std::__1::unique_ptr.40"* %25 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %35, %"class.spvtools::opt::BasicBlock"* nonnull %31) #11
  br label %36

36:                                               ; preds = %34, %24
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr.40"* %37, %4
  br i1 %39, label %40, label %24

40:                                               ; preds = %36
  %41 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi %"class.std::__1::unique_ptr.40"* [ %4, %16 ], [ %41, %40 ]
  %44 = phi %"class.std::__1::unique_ptr.40"* [ %22, %16 ], [ %38, %40 ]
  store %"class.std::__1::unique_ptr.40"* %44, %"class.std::__1::unique_ptr.40"** %3, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %43, i64 %21
  store %"class.std::__1::unique_ptr.40"* %45, %"class.std::__1::unique_ptr.40"** %10, align 8
  br label %179

46:                                               ; preds = %9
  %47 = bitcast %"class.std::__1::unique_ptr.40"** %5 to i64*
  %48 = bitcast %"struct.std::__1::__split_buffer.1332"* %0 to i64*
  %49 = sub i64 %8, %15
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #13
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #12
  %59 = bitcast i8* %58 to %"class.std::__1::unique_ptr.40"*
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 %56
  %62 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 %52
  %64 = ptrtoint %"class.std::__1::unique_ptr.40"* %63 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr.40"* %11 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.40"* %4 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %157, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %86, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %87, %77 ], [ %62, %71 ]
  %80 = phi %"class.std::__1::unique_ptr.40"* [ %88, %77 ], [ %11, %71 ]
  %81 = phi i64 [ %89, %77 ], [ %75, %71 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %85 = inttoptr i64 %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 1
  %89 = add i64 %81, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %77, !llvm.loop !70

91:                                               ; preds = %77
  %92 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  br label %93

93:                                               ; preds = %71, %91
  %94 = phi %"class.std::__1::unique_ptr.40"* [ %61, %71 ], [ %86, %91 ]
  %95 = phi i64 [ %62, %71 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::unique_ptr.40"* [ %11, %71 ], [ %88, %91 ]
  %97 = icmp ult i64 %72, 56
  br i1 %97, label %152, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::unique_ptr.40"* [ %148, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %149, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::unique_ptr.40"* [ %150, %98 ], [ %96, %93 ]
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.40"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 1
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 1
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.40"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.40"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 2
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 2
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.40"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 3
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 3
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr.40"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.40"* %118 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 4
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 4
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.40"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 5
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 5
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::unique_ptr.40"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %132, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.40"* %130 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 6
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 6
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.40"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.40"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 7
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 7
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr.40"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %144, align 8
  %147 = bitcast %"class.std::__1::unique_ptr.40"* %142 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 8
  %149 = ptrtoint %"class.std::__1::unique_ptr.40"* %148 to i64
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 8
  %151 = icmp eq %"class.std::__1::unique_ptr.40"* %69, %148
  br i1 %151, label %152, label %98

152:                                              ; preds = %98, %93
  %153 = ptrtoint %"class.std::__1::unique_ptr.40"* %69 to i64
  %154 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %155 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %156 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %157

157:                                              ; preds = %55, %152
  %158 = phi %"class.std::__1::unique_ptr.40"* [ %156, %152 ], [ %4, %55 ]
  %159 = phi %"class.std::__1::unique_ptr.40"* [ %155, %152 ], [ %11, %55 ]
  %160 = phi %"class.std::__1::unique_ptr.40"* [ %154, %152 ], [ %13, %55 ]
  %161 = phi i64 [ %153, %152 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.40"** %10 to i64*
  store i64 %62, i64* %162, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  store i64 %161, i64* %163, align 8
  store i64 %64, i64* %47, align 8
  %164 = icmp eq %"class.std::__1::unique_ptr.40"* %158, %159
  br i1 %164, label %175, label %165

165:                                              ; preds = %157, %173
  %166 = phi %"class.std::__1::unique_ptr.40"* [ %167, %173 ], [ %158, %157 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %166, i64 -1
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = icmp eq %"class.spvtools::opt::BasicBlock"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %165
  %172 = bitcast %"class.std::__1::unique_ptr.40"* %167 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %172, %"class.spvtools::opt::BasicBlock"* nonnull %169) #11
  br label %173

173:                                              ; preds = %171, %165
  %174 = icmp eq %"class.std::__1::unique_ptr.40"* %167, %159
  br i1 %174, label %175, label %165

175:                                              ; preds = %173, %157
  %176 = icmp eq %"class.std::__1::unique_ptr.40"* %160, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.std::__1::unique_ptr.40"* %160 to i8*
  tail call void @_ZdlPv(i8* %178) #12
  br label %179

179:                                              ; preds = %177, %175, %42, %2
  %180 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64**
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %182, align 8
  store i64 %184, i64* %181, align 8
  %185 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %185, i64 1
  store %"class.std::__1::unique_ptr.40"* %186, %"class.std::__1::unique_ptr.40"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.918"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1225", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.922"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.922"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.922"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.922"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.1225"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1225"* nonnull sret %3, %"class.std::__1::__hash_table.918"* %0, %"struct.std::__1::__hash_node_base.922"* nonnull %33) #11
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1225", %"class.std::__1::unique_ptr.1225"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.1169"*, %"struct.std::__1::__hash_node.1169"** %59, align 8
  store %"struct.std::__1::__hash_node.1169"* null, %"struct.std::__1::__hash_node.1169"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.1169"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.1169"* %60 to i8*
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1225"* noalias sret, %"class.std::__1::__hash_table.918"*, %"struct.std::__1::__hash_node_base.922"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.922"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.922"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.922"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.929", %"class.std::__1::__compressed_pair.929"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.922"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.922"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.922"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.922"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.922"* %25, %"struct.std::__1::__hash_node_base.922"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.922"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.922"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1225"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1225", %"class.std::__1::unique_ptr.1225"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.932"** %98 to %"class.std::__1::__compressed_pair.929"**
  store %"class.std::__1::__compressed_pair.929"* %30, %"class.std::__1::__compressed_pair.929"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1225", %"class.std::__1::unique_ptr.1225"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::pair.1105"*, align 8
  %3 = alloca %"struct.std::__1::pair.1105"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1335", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.1105"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %11, i64 1
  store %"struct.std::__1::pair.1105"** %14, %"struct.std::__1::pair.1105"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.1105"** %16, %18
  %20 = ptrtoint %"struct.std::__1::pair.1105"** %18 to i64
  %21 = bitcast %"struct.std::__1::pair.1105"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %23, align 8
  %25 = icmp ugt %"struct.std::__1::pair.1105"** %14, %24
  %26 = ptrtoint %"struct.std::__1::pair.1105"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.std::__1::pair.1105"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %14, i64 %32
  %34 = ptrtoint %"struct.std::__1::pair.1105"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.std::__1::pair.1105"** %33 to i8*
  %40 = bitcast %"struct.std::__1::pair.1105"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #11
  %41 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.std::__1::pair.1105"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %33, i64 %36
  store %"struct.std::__1::pair.1105"** %44, %"struct.std::__1::pair.1105"*** %15, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %43, i64 %32
  store %"struct.std::__1::pair.1105"** %45, %"struct.std::__1::pair.1105"*** %10, align 8
  %46 = bitcast %"struct.std::__1::pair.1105"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.std::__1::pair.1105"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"struct.std::__1::pair.1105"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %60, i64 %57
  %63 = ptrtoint %"struct.std::__1::pair.1105"** %62 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %60, i64 %53
  %65 = ptrtoint %"struct.std::__1::pair.1105"** %64 to i64
  %66 = ptrtoint %"struct.std::__1::pair.1105"** %14 to i64
  %67 = ptrtoint %"struct.std::__1::pair.1105"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.std::__1::pair.1105"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.std::__1::pair.1105"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.std::__1::pair.1105"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %79, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.1105"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !71

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.std::__1::pair.1105"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.std::__1::pair.1105"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.std::__1::pair.1105"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.std::__1::pair.1105"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.std::__1::pair.1105"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.std::__1::pair.1105"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %99, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %101, i64 1
  %107 = bitcast %"struct.std::__1::pair.1105"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1105"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %99, i64 2
  %111 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %101, i64 2
  %112 = bitcast %"struct.std::__1::pair.1105"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1105"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %99, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %101, i64 3
  %117 = bitcast %"struct.std::__1::pair.1105"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1105"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %99, i64 4
  %121 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %101, i64 4
  %122 = bitcast %"struct.std::__1::pair.1105"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1105"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %99, i64 5
  %126 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %101, i64 5
  %127 = bitcast %"struct.std::__1::pair.1105"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1105"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %99, i64 6
  %131 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %101, i64 6
  %132 = bitcast %"struct.std::__1::pair.1105"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair.1105"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %99, i64 7
  %136 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %101, i64 7
  %137 = bitcast %"struct.std::__1::pair.1105"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair.1105"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %99, i64 8
  %141 = ptrtoint %"struct.std::__1::pair.1105"** %140 to i64
  %142 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %101, i64 8
  %143 = icmp eq %"struct.std::__1::pair.1105"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.std::__1::pair.1105"** %70 to i64
  %146 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.std::__1::pair.1105"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.std::__1::pair.1105"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair.1105"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.std::__1::pair.1105"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.std::__1::pair.1105"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast %"struct.std::__1::pair.1105"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %15, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %160, i64 1
  store %"struct.std::__1::pair.1105"** %161, %"struct.std::__1::pair.1105"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::pair.1105"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.1105"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.1105"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.std::__1::pair.1105"**
  %181 = inttoptr i64 %169 to %"struct.std::__1::pair.1105"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.std::__1::pair.1105"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #11
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast %"struct.std::__1::pair.1105"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.1105"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #11
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.std::__1::pair.1105"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #11
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast %"struct.std::__1::pair.1105"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.1105"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #11
  %192 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %167, align 8
  %193 = bitcast %"struct.std::__1::pair.1105"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %192, i64 1
  store %"struct.std::__1::pair.1105"** %195, %"struct.std::__1::pair.1105"*** %167, align 8
  %196 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %164, align 8
  %197 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %172, align 8
  %198 = icmp eq %"struct.std::__1::pair.1105"** %196, %197
  %199 = ptrtoint %"struct.std::__1::pair.1105"** %197 to i64
  %200 = bitcast %"struct.std::__1::pair.1105"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %202, align 8
  %204 = icmp ugt %"struct.std::__1::pair.1105"** %195, %203
  %205 = ptrtoint %"struct.std::__1::pair.1105"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.std::__1::pair.1105"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %195, i64 %211
  %213 = ptrtoint %"struct.std::__1::pair.1105"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.std::__1::pair.1105"** %212 to i8*
  %219 = bitcast %"struct.std::__1::pair.1105"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #11
  %220 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.std::__1::pair.1105"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %212, i64 %215
  store %"struct.std::__1::pair.1105"** %223, %"struct.std::__1::pair.1105"*** %164, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %222, i64 %211
  store %"struct.std::__1::pair.1105"** %224, %"struct.std::__1::pair.1105"*** %167, align 8
  %225 = bitcast %"struct.std::__1::pair.1105"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #13
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to %"struct.std::__1::pair.1105"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %237, i64 %234
  %240 = ptrtoint %"struct.std::__1::pair.1105"** %239 to i64
  %241 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %237, i64 %230
  %242 = ptrtoint %"struct.std::__1::pair.1105"** %241 to i64
  %243 = ptrtoint %"struct.std::__1::pair.1105"** %195 to i64
  %244 = ptrtoint %"struct.std::__1::pair.1105"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.std::__1::pair.1105"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.std::__1::pair.1105"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.std::__1::pair.1105"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %256, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.1105"** %263 to i64
  %265 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !72

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.std::__1::pair.1105"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.std::__1::pair.1105"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.std::__1::pair.1105"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.std::__1::pair.1105"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.std::__1::pair.1105"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.std::__1::pair.1105"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %276, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %278, i64 1
  %284 = bitcast %"struct.std::__1::pair.1105"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::pair.1105"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %276, i64 2
  %288 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %278, i64 2
  %289 = bitcast %"struct.std::__1::pair.1105"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.std::__1::pair.1105"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %276, i64 3
  %293 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %278, i64 3
  %294 = bitcast %"struct.std::__1::pair.1105"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.std::__1::pair.1105"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %276, i64 4
  %298 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %278, i64 4
  %299 = bitcast %"struct.std::__1::pair.1105"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.std::__1::pair.1105"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %276, i64 5
  %303 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %278, i64 5
  %304 = bitcast %"struct.std::__1::pair.1105"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.std::__1::pair.1105"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %276, i64 6
  %308 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %278, i64 6
  %309 = bitcast %"struct.std::__1::pair.1105"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.std::__1::pair.1105"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %276, i64 7
  %313 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %278, i64 7
  %314 = bitcast %"struct.std::__1::pair.1105"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.std::__1::pair.1105"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %276, i64 8
  %318 = ptrtoint %"struct.std::__1::pair.1105"** %317 to i64
  %319 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %278, i64 8
  %320 = icmp eq %"struct.std::__1::pair.1105"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.std::__1::pair.1105"** %247 to i64
  %323 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.std::__1::pair.1105"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.std::__1::pair.1105"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.std::__1::pair.1105"** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast %"struct.std::__1::pair.1105"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %164, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %335, i64 1
  store %"struct.std::__1::pair.1105"** %336, %"struct.std::__1::pair.1105"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1335"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #11
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1335"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1105"** null, %"struct.std::__1::pair.1105"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.1109"** %342 to %"class.std::__1::__compressed_pair.1106"**
  store %"class.std::__1::__compressed_pair.1106"* %346, %"class.std::__1::__compressed_pair.1106"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #13
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to %"struct.std::__1::pair.1105"**
  %355 = bitcast %"struct.std::__1::__split_buffer.1335"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %354, i64 %171
  store %"struct.std::__1::pair.1105"** %356, %"struct.std::__1::pair.1105"*** %340, align 8
  store %"struct.std::__1::pair.1105"** %356, %"struct.std::__1::pair.1105"*** %339, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %354, i64 %345
  store %"struct.std::__1::pair.1105"** %357, %"struct.std::__1::pair.1105"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.std::__1::pair.1105"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.std::__1::pair.1105"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.std::__1::pair.1105"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %356, i64 %370
  store %"struct.std::__1::pair.1105"** %371, %"struct.std::__1::pair.1105"*** %340, align 8
  store %"struct.std::__1::pair.1105"** %371, %"struct.std::__1::pair.1105"*** %339, align 8
  %372 = ptrtoint %"struct.std::__1::pair.1105"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #13
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1335"* %4 to i64*
  %382 = bitcast %"struct.std::__1::pair.1105"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"struct.std::__1::pair.1105"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %386, i64 %383
  %389 = ptrtoint %"struct.std::__1::pair.1105"** %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %386, i64 %377
  %391 = ptrtoint %"struct.std::__1::pair.1105"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.std::__1::pair.1105"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.std::__1::pair.1105"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %164, align 8
  %395 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %167, align 8
  %396 = ptrtoint %"struct.std::__1::pair.1105"** %395 to i64
  %397 = ptrtoint %"struct.std::__1::pair.1105"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.std::__1::pair.1105"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.std::__1::pair.1105"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.std::__1::pair.1105"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.std::__1::pair.1105"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %406, i64 1
  store %"struct.std::__1::pair.1105"** %408, %"struct.std::__1::pair.1105"*** %340, align 8
  %409 = icmp eq %"struct.std::__1::pair.1105"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.std::__1::pair.1105"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1335"* %4 to i64*
  %413 = bitcast %"struct.std::__1::pair.1105"*** %339 to i64*
  %414 = bitcast %"struct.std::__1::pair.1105"*** %340 to i64*
  %415 = bitcast %"struct.std::__1::pair.1105"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.std::__1::pair.1105"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1335"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.std::__1::pair.1105"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.std::__1::pair.1105"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.std::__1::pair.1105"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.std::__1::pair.1105"**
  %441 = inttoptr i64 %434 to %"struct.std::__1::pair.1105"**
  %442 = icmp eq %"struct.std::__1::pair.1105"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %441, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.1105"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %441, i64 %448
  store %"struct.std::__1::pair.1105"** %449, %"struct.std::__1::pair.1105"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #11
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.std::__1::pair.1105"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1335"* nonnull %4, %"struct.std::__1::pair.1105"** dereferenceable(8) %457)
  %458 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %167, align 8
  %459 = icmp eq %"struct.std::__1::pair.1105"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.1105"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1105"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1105"** %6 to i64
  %9 = bitcast %"struct.std::__1::pair.1105"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.1105"** %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.1105"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.1105"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %12, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1105"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.std::__1::pair.1105"** %23 to i8*
  %30 = bitcast %"struct.std::__1::pair.1105"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.std::__1::pair.1105"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %23, i64 %26
  store %"struct.std::__1::pair.1105"** %34, %"struct.std::__1::pair.1105"*** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %33, i64 %22
  store %"struct.std::__1::pair.1105"** %35, %"struct.std::__1::pair.1105"*** %11, align 8
  %36 = bitcast %"struct.std::__1::pair.1105"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.std::__1::pair.1105"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.1105"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %50, i64 %47
  %53 = ptrtoint %"struct.std::__1::pair.1105"** %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %50, i64 %43
  %55 = ptrtoint %"struct.std::__1::pair.1105"** %54 to i64
  %56 = ptrtoint %"struct.std::__1::pair.1105"** %12 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1105"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.1105"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.std::__1::pair.1105"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.std::__1::pair.1105"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %69, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.1105"** %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !73

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.std::__1::pair.1105"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.std::__1::pair.1105"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.std::__1::pair.1105"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.std::__1::pair.1105"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.std::__1::pair.1105"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.std::__1::pair.1105"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %89, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %91, i64 1
  %97 = bitcast %"struct.std::__1::pair.1105"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.std::__1::pair.1105"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %89, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %91, i64 2
  %102 = bitcast %"struct.std::__1::pair.1105"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.1105"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %89, i64 3
  %106 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %91, i64 3
  %107 = bitcast %"struct.std::__1::pair.1105"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1105"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %89, i64 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %91, i64 4
  %112 = bitcast %"struct.std::__1::pair.1105"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1105"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %89, i64 5
  %116 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %91, i64 5
  %117 = bitcast %"struct.std::__1::pair.1105"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1105"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %89, i64 6
  %121 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %91, i64 6
  %122 = bitcast %"struct.std::__1::pair.1105"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1105"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %89, i64 7
  %126 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %91, i64 7
  %127 = bitcast %"struct.std::__1::pair.1105"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1105"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %89, i64 8
  %131 = ptrtoint %"struct.std::__1::pair.1105"** %130 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %91, i64 8
  %133 = icmp eq %"struct.std::__1::pair.1105"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.std::__1::pair.1105"** %60 to i64
  %136 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.std::__1::pair.1105"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.std::__1::pair.1105"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.std::__1::pair.1105"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.std::__1::pair.1105"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.std::__1::pair.1105"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"struct.std::__1::pair.1105"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.std::__1::pair.1105"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %3, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %152, i64 1
  store %"struct.std::__1::pair.1105"** %153, %"struct.std::__1::pair.1105"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.1105"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1105"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1105"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1105"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1105"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1105"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1105"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1105"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1105"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1105"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1105"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1105"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1105"** %36, %"struct.std::__1::pair.1105"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %35, i64 %22
  store %"struct.std::__1::pair.1105"** %37, %"struct.std::__1::pair.1105"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1105"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1105"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1105"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1105"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1105"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1105"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1105"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1105"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1105"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !74

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1105"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1105"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1105"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1105"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1105"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1105"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1105"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1105"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1105"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1105"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1105"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1105"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1105"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1105"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1105"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1105"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1105"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1105"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1105"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1105"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1105"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1105"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1105"** %61 to i64
  %137 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1105"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1105"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1105"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1105"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1105"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1105"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1105"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1105"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %153, i64 -1
  store %"struct.std::__1::pair.1105"** %154, %"struct.std::__1::pair.1105"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1335"*, %"struct.std::__1::pair.1105"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1105"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1105"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1105"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1105"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1105"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1105"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1105"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1105"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1105"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1105"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1105"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1105"** %36, %"struct.std::__1::pair.1105"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %35, i64 %22
  store %"struct.std::__1::pair.1105"** %37, %"struct.std::__1::pair.1105"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1335"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1105"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1105"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1105"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1105"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1105"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1105"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1105"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1105"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1105"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !75

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1105"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1105"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1105"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1105"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1105"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1105"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1105"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1105"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1105"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1105"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1105"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1105"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1105"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1105"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1105"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1105"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1105"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1105"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1105"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1105"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1105"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1105"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1105"** %61 to i64
  %137 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1105"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1105"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1105"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1105"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1105"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1105"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1105"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1105"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %153, i64 -1
  store %"struct.std::__1::pair.1105"** %154, %"struct.std::__1::pair.1105"*** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt14TreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::Loop"* %3, null
  br i1 %4, label %108, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %2, align 8
  br label %108

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %7, -1
  %14 = add i64 %13, %12
  %15 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %16, i64 %17
  %19 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %19, i64 %20, i32 1, i32 0
  %22 = bitcast %"class.spvtools::opt::Loop"*** %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::TreeDFIterator"* %0 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %21, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %26, i64 1
  store %"class.spvtools::opt::Loop"** %27, %"class.spvtools::opt::Loop"*** %21, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %19, i64 %20, i32 0
  %29 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %29, i64 0, i32 7, i32 0, i32 1
  %31 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %30, align 8
  %32 = icmp eq %"class.spvtools::opt::Loop"** %31, %27
  br i1 %32, label %33, label %58

33:                                               ; preds = %10
  %34 = load i64, i64* %6, align 8
  %35 = load i64, i64* %11, align 8
  %36 = add i64 %34, -1
  store i64 %36, i64* %6, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %38 = bitcast %"struct.std::__1::pair.1105"*** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.std::__1::pair.1105"*** %15 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 0
  %44 = shl i64 %42, 5
  %45 = add i64 %44, -1
  %46 = select i1 %43, i64 0, i64 %45
  %47 = sub i64 1, %34
  %48 = sub i64 %47, %35
  %49 = add i64 %48, %46
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %58, label %51

51:                                               ; preds = %33
  %52 = inttoptr i64 %39 to %"struct.std::__1::pair.1105"**
  %53 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %52, i64 -1
  %54 = bitcast %"struct.std::__1::pair.1105"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #12
  %56 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %37, align 8
  %57 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %56, i64 -1
  store %"struct.std::__1::pair.1105"** %57, %"struct.std::__1::pair.1105"*** %37, align 8
  br label %58

58:                                               ; preds = %51, %33, %10
  %59 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %59, i64 0, i32 7, i32 0, i32 0
  %61 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %59, i64 0, i32 7, i32 0, i32 1
  %63 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %62, align 8
  %64 = icmp eq %"class.spvtools::opt::Loop"** %61, %63
  br i1 %64, label %108, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %67 = bitcast %"struct.std::__1::pair.1105"*** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"struct.std::__1::pair.1105"*** %15 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = icmp eq i64 %71, 0
  %73 = shl i64 %71, 5
  %74 = add i64 %73, -1
  %75 = select i1 %72, i64 0, i64 %74
  %76 = load i64, i64* %11, align 8
  %77 = load i64, i64* %6, align 8
  %78 = add i64 %77, %76
  %79 = icmp eq i64 %75, %78
  %80 = inttoptr i64 %70 to %"struct.std::__1::pair.1105"**
  %81 = inttoptr i64 %68 to %"struct.std::__1::pair.1105"**
  br i1 %79, label %82, label %89

82:                                               ; preds = %65
  %83 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %83) #11
  %84 = load i64, i64* %6, align 8
  %85 = load i64, i64* %11, align 8
  %86 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %15, align 8
  %87 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %66, align 8
  %88 = add i64 %85, %84
  br label %89

89:                                               ; preds = %82, %65
  %90 = phi i64 [ %88, %82 ], [ %78, %65 ]
  %91 = phi %"struct.std::__1::pair.1105"** [ %87, %82 ], [ %81, %65 ]
  %92 = phi %"struct.std::__1::pair.1105"** [ %86, %82 ], [ %80, %65 ]
  %93 = icmp eq %"struct.std::__1::pair.1105"** %91, %92
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = lshr i64 %90, 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %92, i64 %95
  %97 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %96, align 8
  %98 = and i64 %90, 255
  %99 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %97, i64 %98
  %100 = bitcast %"struct.std::__1::pair.1105"* %99 to i8*
  br label %101

101:                                              ; preds = %89, %94
  %102 = phi i8* [ %100, %94 ], [ null, %89 ]
  %103 = bitcast i8* %102 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %59, %"class.spvtools::opt::Loop"** %103, align 8
  %104 = getelementptr inbounds i8, i8* %102, i64 8
  %105 = bitcast i8* %104 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %61, %"class.spvtools::opt::Loop"*** %105, align 8
  %106 = load i64, i64* %6, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %6, align 8
  br label %108

108:                                              ; preds = %58, %101, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.981"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.977"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"class.spvtools::opt::BasicBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::BasicBlock"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.981"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.981"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.981"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.981"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.981"* %62 to %"class.spvtools::opt::BasicBlock"**
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #12, !noalias !76
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::BasicBlock"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !76
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !76
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !76
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.981"**
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %75, align 8, !noalias !76
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !2
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.977"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !2
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.981"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.981"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.981"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.981"* %118, %"struct.std::__1::__hash_node_base.981"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.981"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.981"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !2
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.981"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.981"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.981"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.981"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.981"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.981"*, i8 } undef, %"struct.std::__1::__hash_node_base.981"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.981"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.981"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.977"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.977"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.977"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.977"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.977"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.981"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.981"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.983", %"class.std::__1::__bucket_list_deallocator.983"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !79

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.981"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.981"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.981"* %36, %"struct.std::__1::__hash_node_base.981"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.981"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.981"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.981"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.981"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.981"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.981"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.981"* %82, %"struct.std::__1::__hash_node_base.981"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.981"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.981"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.981"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.981"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.981"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.981"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.981"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.981"* %80, %"struct.std::__1::__hash_node_base.981"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.981"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.981"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.981"** null, %"struct.std::__1::__hash_node_base.981"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.981"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.981"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.983", %"class.std::__1::__bucket_list_deallocator.983"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_1S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::BasicBlock"**
  %5 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !3
  %14 = zext i8 %13 to i32
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %14) #11
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ %15, %11 ], [ 0, %2 ]
  %18 = icmp eq i32 %3, %17
  br i1 %18, label %19, label %35

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %21 = bitcast [8 x i8]* %20 to %"class.spvtools::opt::BasicBlock"**
  %22 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %22, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 4
  %26 = load i8, i8* %25, align 1, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 3
  %30 = load i8, i8* %29, align 4, !range !3
  %31 = zext i8 %30 to i32
  %32 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %24, i32 %31) #11
  br label %33

33:                                               ; preds = %28, %19
  %34 = phi i32 [ %32, %28 ], [ 0, %19 ]
  store i32 %34, i32* %1, align 4
  br label %35

35:                                               ; preds = %16, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9LoopUtils24CreateLoopDedicatedExitsEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::vector.3", align 8
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1354"**
  %7 = load %"class.std::__1::__function::__default_alloc_func.1354"*, %"class.std::__1::__function::__default_alloc_func.1354"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1354", %"class.std::__1::__function::__default_alloc_func.1354"* %7, i64 0, i32 0, i32 3
  %9 = load %"class.spvtools::opt::LoopUtils"*, %"class.spvtools::opt::LoopUtils"** %8, align 8
  %10 = bitcast %"class.std::__1::vector.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #11
  %14 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #11
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %20 = bitcast %"struct.spvtools::opt::Operand"** %19 to i64*
  %21 = bitcast %"class.std::__1::vector"* %18 to i64*
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %24 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %9, i64 0, i32 2
  %25 = bitcast i32** %16 to i64*
  %26 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %27 = bitcast i32** %17 to i64*
  %28 = bitcast i32** %12 to i64*
  %29 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %30 = bitcast i32** %13 to i64*
  br label %31

31:                                               ; preds = %477, %2
  %32 = phi i32 [ 0, %2 ], [ %478, %477 ]
  %33 = load i64, i64* %20, align 8
  %34 = load i64, i64* %21, align 8
  %35 = sub i64 %33, %34
  %36 = sdiv exact i64 %35, 48
  %37 = load i8, i8* %22, align 4, !range !3
  %38 = icmp eq i8 %37, 0
  %39 = load i8, i8* %23, align 1, !range !3
  %40 = icmp eq i8 %39, 0
  %41 = select i1 %40, i32 1, i32 2
  %42 = xor i1 %40, true
  %43 = zext i1 %42 to i32
  %44 = select i1 %38, i32 %43, i32 %41
  %45 = trunc i64 %36 to i32
  %46 = sub i32 %45, %44
  %47 = icmp ult i32 %32, %46
  br i1 %47, label %198, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1354", %"class.std::__1::__function::__default_alloc_func.1354"* %7, i64 0, i32 0, i32 0
  %50 = load %"class.spvtools::opt::InstructionBuilder"*, %"class.spvtools::opt::InstructionBuilder"** %49, align 8
  br i1 %38, label %53, label %51

51:                                               ; preds = %48
  %52 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %53

53:                                               ; preds = %51, %48
  %54 = phi i32 [ %52, %51 ], [ 0, %48 ]
  %55 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"* %50, i32 %54, i32 245, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %4, i32 0) #11
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %55, i64 0, i32 4
  %57 = load i8, i8* %56, align 1, !range !3
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %55, i64 0, i32 3
  %61 = load i8, i8* %60, align 4, !range !3
  %62 = zext i8 %61 to i32
  %63 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %55, i32 %62) #11
  br label %64

64:                                               ; preds = %59, %53
  %65 = phi i32 [ %63, %59 ], [ 0, %53 ]
  %66 = load i32*, i32** %12, align 8
  %67 = load i32*, i32** %13, align 8
  %68 = icmp ult i32* %66, %67
  %69 = ptrtoint i32* %67 to i64
  br i1 %68, label %70, label %73

70:                                               ; preds = %64
  store i32 %65, i32* %66, align 4
  %71 = getelementptr inbounds i32, i32* %66, i64 1
  %72 = ptrtoint i32* %71 to i64
  store i64 %72, i64* %28, align 8
  br label %116

73:                                               ; preds = %64
  %74 = ptrtoint i32* %66 to i64
  %75 = load i64, i64* %29, align 8
  %76 = sub i64 %74, %75
  %77 = ashr exact i64 %76, 2
  %78 = add nsw i64 %77, 1
  %79 = icmp ugt i64 %78, 4611686018427387903
  br i1 %79, label %80, label %82

80:                                               ; preds = %73
  %81 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %81) #13
  unreachable

82:                                               ; preds = %73
  %83 = sub i64 %69, %75
  %84 = ashr exact i64 %83, 2
  %85 = icmp ult i64 %84, 2305843009213693951
  br i1 %85, label %86, label %94

86:                                               ; preds = %82
  %87 = ashr exact i64 %83, 1
  %88 = icmp ult i64 %87, %78
  %89 = select i1 %88, i64 %78, i64 %87
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %86
  %92 = icmp ugt i64 %89, 4611686018427387903
  br i1 %92, label %93, label %94

93:                                               ; preds = %91
  call void @abort() #13
  unreachable

94:                                               ; preds = %91, %82
  %95 = phi i64 [ %89, %91 ], [ 4611686018427387903, %82 ]
  %96 = shl i64 %95, 2
  %97 = call i8* @_Znwm(i64 %96) #12
  %98 = bitcast i8* %97 to i32*
  br label %99

99:                                               ; preds = %94, %86
  %100 = phi i64 [ %95, %94 ], [ 0, %86 ]
  %101 = phi i8* [ %97, %94 ], [ null, %86 ]
  %102 = phi i32* [ %98, %94 ], [ null, %86 ]
  %103 = getelementptr inbounds i32, i32* %102, i64 %77
  %104 = getelementptr inbounds i32, i32* %102, i64 %100
  %105 = ptrtoint i32* %104 to i64
  store i32 %65, i32* %103, align 4
  %106 = getelementptr inbounds i32, i32* %103, i64 1
  %107 = ptrtoint i32* %106 to i64
  %108 = ptrtoint i32* %102 to i64
  %109 = icmp sgt i64 %76, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %99
  %111 = inttoptr i64 %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %111, i64 %76, i1 false) #11
  br label %112

112:                                              ; preds = %110, %99
  store i64 %108, i64* %29, align 8
  store i64 %107, i64* %28, align 8
  store i64 %105, i64* %30, align 8
  %113 = icmp eq i64 %75, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = inttoptr i64 %75 to i8*
  call void @_ZdlPv(i8* %115) #12
  br label %116

116:                                              ; preds = %114, %112, %70
  %117 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1354", %"class.std::__1::__function::__default_alloc_func.1354"* %7, i64 0, i32 0, i32 1
  %118 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %118, i64 0, i32 1, i32 0, i32 0, i32 0
  %120 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %119, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %120, i64 0, i32 4
  %122 = load i8, i8* %121, align 1, !range !3
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %120, i64 0, i32 3
  %126 = load i8, i8* %125, align 4, !range !3
  %127 = zext i8 %126 to i32
  %128 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %120, i32 %127) #11
  br label %129

129:                                              ; preds = %124, %116
  %130 = phi i32 [ %128, %124 ], [ 0, %116 ]
  %131 = load i32*, i32** %12, align 8
  %132 = load i32*, i32** %13, align 8
  %133 = icmp ult i32* %131, %132
  %134 = ptrtoint i32* %132 to i64
  br i1 %133, label %135, label %138

135:                                              ; preds = %129
  store i32 %130, i32* %131, align 4
  %136 = getelementptr inbounds i32, i32* %131, i64 1
  %137 = ptrtoint i32* %136 to i64
  store i64 %137, i64* %28, align 8
  br label %182

138:                                              ; preds = %129
  %139 = ptrtoint i32* %131 to i64
  %140 = load i64, i64* %29, align 8
  %141 = sub i64 %139, %140
  %142 = ashr exact i64 %141, 2
  %143 = add nsw i64 %142, 1
  %144 = icmp ugt i64 %143, 4611686018427387903
  br i1 %144, label %145, label %147

145:                                              ; preds = %138
  %146 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %146) #13
  unreachable

147:                                              ; preds = %138
  %148 = sub i64 %134, %140
  %149 = ashr exact i64 %148, 2
  %150 = icmp ult i64 %149, 2305843009213693951
  br i1 %150, label %151, label %159

151:                                              ; preds = %147
  %152 = ashr exact i64 %148, 1
  %153 = icmp ult i64 %152, %143
  %154 = select i1 %153, i64 %143, i64 %152
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %164, label %156

156:                                              ; preds = %151
  %157 = icmp ugt i64 %154, 4611686018427387903
  br i1 %157, label %158, label %159

158:                                              ; preds = %156
  call void @abort() #13
  unreachable

159:                                              ; preds = %156, %147
  %160 = phi i64 [ %154, %156 ], [ 4611686018427387903, %147 ]
  %161 = shl i64 %160, 2
  %162 = call i8* @_Znwm(i64 %161) #12
  %163 = bitcast i8* %162 to i32*
  br label %164

164:                                              ; preds = %159, %151
  %165 = phi i64 [ %160, %159 ], [ 0, %151 ]
  %166 = phi i8* [ %162, %159 ], [ null, %151 ]
  %167 = phi i32* [ %163, %159 ], [ null, %151 ]
  %168 = getelementptr inbounds i32, i32* %167, i64 %142
  %169 = getelementptr inbounds i32, i32* %167, i64 %165
  %170 = ptrtoint i32* %169 to i64
  store i32 %130, i32* %168, align 4
  %171 = getelementptr inbounds i32, i32* %168, i64 1
  %172 = ptrtoint i32* %171 to i64
  %173 = ptrtoint i32* %167 to i64
  %174 = icmp sgt i64 %141, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %164
  %176 = inttoptr i64 %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %166, i8* align 4 %176, i64 %141, i1 false) #11
  br label %177

177:                                              ; preds = %175, %164
  store i64 %173, i64* %29, align 8
  store i64 %172, i64* %28, align 8
  store i64 %170, i64* %30, align 8
  %178 = icmp eq i64 %140, 0
  br i1 %178, label %182, label %179

179:                                              ; preds = %177
  %180 = inttoptr i64 %140 to i8*
  call void @_ZdlPv(i8* %180) #12
  %181 = load i64, i64* %28, align 8
  br label %182

182:                                              ; preds = %179, %177, %135
  %183 = phi i64 [ %137, %135 ], [ %172, %177 ], [ %181, %179 ]
  %184 = load i64, i64* %29, align 8
  %185 = icmp eq i64 %183, %184
  br i1 %185, label %520, label %186

186:                                              ; preds = %182
  %187 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  %189 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %190 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %191 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %192 = bitcast i32** %190 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %193 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %194 = bitcast %"class.std::__1::unique_ptr.0"* %193 to i64*
  %195 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %191 to i32*
  %196 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %197 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %479

198:                                              ; preds = %31
  %199 = add i32 %44, %32
  %200 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %199) #11
  %201 = or i32 %32, 1
  %202 = load i8, i8* %22, align 4, !range !3
  %203 = icmp eq i8 %202, 0
  %204 = load i8, i8* %23, align 1, !range !3
  %205 = icmp eq i8 %204, 0
  %206 = select i1 %205, i32 1, i32 2
  %207 = xor i1 %205, true
  %208 = zext i1 %207 to i32
  %209 = select i1 %203, i32 %208, i32 %206
  %210 = add i32 %209, %201
  %211 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %210) #11
  %212 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %24, align 8
  %213 = zext i32 %211 to i64
  %214 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %212, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %215 = load i64, i64* %214, align 8
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %371, label %217

217:                                              ; preds = %198
  %218 = tail call i64 @llvm.ctpop.i64(i64 %215) #11, !range !2
  %219 = icmp ugt i64 %218, 1
  br i1 %219, label %223, label %220

220:                                              ; preds = %217
  %221 = add i64 %215, 4294967295
  %222 = and i64 %221, %213
  br label %227

223:                                              ; preds = %217
  %224 = icmp ugt i64 %215, %213
  br i1 %224, label %227, label %225

225:                                              ; preds = %223
  %226 = urem i64 %213, %215
  br label %227

227:                                              ; preds = %225, %223, %220
  %228 = phi i64 [ %222, %220 ], [ %226, %225 ], [ %213, %223 ]
  %229 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %212, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %229, align 8
  %231 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %230, i64 %228
  %232 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %231, align 8
  %233 = icmp eq %"struct.std::__1::__hash_node_base.922"* %232, null
  br i1 %233, label %371, label %234

234:                                              ; preds = %227
  %235 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %232, i64 0, i32 0
  %236 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %235, align 8
  %237 = icmp eq %"struct.std::__1::__hash_node_base.922"* %236, null
  br i1 %237, label %371, label %238

238:                                              ; preds = %234
  %239 = add i64 %215, -1
  br label %240

240:                                              ; preds = %261, %238
  %241 = phi %"struct.std::__1::__hash_node_base.922"* [ %236, %238 ], [ %263, %261 ]
  %242 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %241, i64 1
  %243 = bitcast %"struct.std::__1::__hash_node_base.922"* %242 to i64*
  %244 = load i64, i64* %243, align 8
  %245 = icmp eq i64 %244, %213
  br i1 %245, label %256, label %246

246:                                              ; preds = %240
  br i1 %219, label %249, label %247

247:                                              ; preds = %246
  %248 = and i64 %244, %239
  br label %253

249:                                              ; preds = %246
  %250 = icmp ult i64 %244, %215
  br i1 %250, label %253, label %251

251:                                              ; preds = %249
  %252 = urem i64 %244, %215
  br label %253

253:                                              ; preds = %251, %249, %247
  %254 = phi i64 [ %248, %247 ], [ %252, %251 ], [ %244, %249 ]
  %255 = icmp eq i64 %254, %228
  br i1 %255, label %261, label %371

256:                                              ; preds = %240
  %257 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %241, i64 2
  %258 = bitcast %"struct.std::__1::__hash_node_base.922"* %257 to i32*
  %259 = load i32, i32* %258, align 4
  %260 = icmp eq i32 %259, %211
  br i1 %260, label %265, label %261

261:                                              ; preds = %256, %253
  %262 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %241, i64 0, i32 0
  %263 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %262, align 8
  %264 = icmp eq %"struct.std::__1::__hash_node_base.922"* %263, null
  br i1 %264, label %371, label %240

265:                                              ; preds = %256
  %266 = load i32*, i32** %16, align 8
  %267 = load i32*, i32** %17, align 8
  %268 = icmp eq i32* %266, %267
  %269 = ptrtoint i32* %267 to i64
  br i1 %268, label %275, label %270

270:                                              ; preds = %265
  store i32 %200, i32* %266, align 4
  %271 = getelementptr inbounds i32, i32* %266, i64 1
  %272 = ptrtoint i32* %271 to i64
  store i64 %272, i64* %25, align 8
  %273 = load i32*, i32** %17, align 8
  %274 = ptrtoint i32* %273 to i64
  br label %318

275:                                              ; preds = %265
  %276 = ptrtoint i32* %266 to i64
  %277 = load i64, i64* %26, align 8
  %278 = sub i64 %276, %277
  %279 = ashr exact i64 %278, 2
  %280 = add nsw i64 %279, 1
  %281 = icmp ugt i64 %280, 4611686018427387903
  br i1 %281, label %282, label %284

282:                                              ; preds = %275
  %283 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %283) #13
  unreachable

284:                                              ; preds = %275
  %285 = sub i64 %269, %277
  %286 = ashr exact i64 %285, 2
  %287 = icmp ult i64 %286, 2305843009213693951
  br i1 %287, label %288, label %296

288:                                              ; preds = %284
  %289 = ashr exact i64 %285, 1
  %290 = icmp ult i64 %289, %280
  %291 = select i1 %290, i64 %280, i64 %289
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %301, label %293

293:                                              ; preds = %288
  %294 = icmp ugt i64 %291, 4611686018427387903
  br i1 %294, label %295, label %296

295:                                              ; preds = %293
  tail call void @abort() #13
  unreachable

296:                                              ; preds = %293, %284
  %297 = phi i64 [ %291, %293 ], [ 4611686018427387903, %284 ]
  %298 = shl i64 %297, 2
  %299 = tail call i8* @_Znwm(i64 %298) #12
  %300 = bitcast i8* %299 to i32*
  br label %301

301:                                              ; preds = %296, %288
  %302 = phi i64 [ %297, %296 ], [ 0, %288 ]
  %303 = phi i8* [ %299, %296 ], [ null, %288 ]
  %304 = phi i32* [ %300, %296 ], [ null, %288 ]
  %305 = getelementptr inbounds i32, i32* %304, i64 %279
  %306 = getelementptr inbounds i32, i32* %304, i64 %302
  %307 = ptrtoint i32* %306 to i64
  store i32 %200, i32* %305, align 4
  %308 = getelementptr inbounds i32, i32* %305, i64 1
  %309 = ptrtoint i32* %308 to i64
  %310 = ptrtoint i32* %304 to i64
  %311 = icmp sgt i64 %278, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %301
  %313 = inttoptr i64 %277 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %303, i8* align 4 %313, i64 %278, i1 false) #11
  br label %314

314:                                              ; preds = %312, %301
  store i64 %310, i64* %26, align 8
  store i64 %309, i64* %25, align 8
  store i64 %307, i64* %27, align 8
  %315 = icmp eq i64 %277, 0
  br i1 %315, label %318, label %316

316:                                              ; preds = %314
  %317 = inttoptr i64 %277 to i8*
  tail call void @_ZdlPv(i8* %317) #12
  br label %318

318:                                              ; preds = %316, %314, %270
  %319 = phi i64 [ %274, %270 ], [ %307, %314 ], [ %307, %316 ]
  %320 = phi i64 [ %272, %270 ], [ %309, %314 ], [ %309, %316 ]
  %321 = phi i32* [ %273, %270 ], [ %306, %314 ], [ %306, %316 ]
  %322 = phi i32* [ %271, %270 ], [ %308, %314 ], [ %308, %316 ]
  %323 = icmp eq i32* %322, %321
  br i1 %323, label %327, label %324

324:                                              ; preds = %318
  store i32 %211, i32* %322, align 4
  %325 = getelementptr inbounds i32, i32* %322, i64 1
  %326 = ptrtoint i32* %325 to i64
  store i64 %326, i64* %25, align 8
  br label %477

327:                                              ; preds = %318
  %328 = load i64, i64* %26, align 8
  %329 = sub i64 %319, %328
  %330 = ashr exact i64 %329, 2
  %331 = add nsw i64 %330, 1
  %332 = icmp ugt i64 %331, 4611686018427387903
  br i1 %332, label %333, label %335

333:                                              ; preds = %327
  %334 = bitcast %"class.std::__1::vector.3"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %334) #13
  unreachable

335:                                              ; preds = %327
  %336 = icmp ult i64 %330, 2305843009213693951
  br i1 %336, label %337, label %345

337:                                              ; preds = %335
  %338 = ashr exact i64 %329, 1
  %339 = icmp ult i64 %338, %331
  %340 = select i1 %339, i64 %331, i64 %338
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %350, label %342

342:                                              ; preds = %337
  %343 = icmp ugt i64 %340, 4611686018427387903
  br i1 %343, label %344, label %345

344:                                              ; preds = %342
  tail call void @abort() #13
  unreachable

345:                                              ; preds = %342, %335
  %346 = phi i64 [ %340, %342 ], [ 4611686018427387903, %335 ]
  %347 = shl i64 %346, 2
  %348 = tail call i8* @_Znwm(i64 %347) #12
  %349 = bitcast i8* %348 to i32*
  br label %350

350:                                              ; preds = %345, %337
  %351 = phi i64 [ %346, %345 ], [ 0, %337 ]
  %352 = phi i32* [ %349, %345 ], [ null, %337 ]
  %353 = getelementptr inbounds i32, i32* %352, i64 %330
  %354 = getelementptr inbounds i32, i32* %352, i64 %351
  %355 = ptrtoint i32* %354 to i64
  store i32 %211, i32* %353, align 4
  %356 = getelementptr inbounds i32, i32* %353, i64 1
  %357 = ptrtoint i32* %356 to i64
  %358 = sub i64 %320, %328
  %359 = ashr exact i64 %358, 2
  %360 = sub nsw i64 0, %359
  %361 = getelementptr inbounds i32, i32* %353, i64 %360
  %362 = ptrtoint i32* %361 to i64
  %363 = icmp sgt i64 %358, 0
  br i1 %363, label %364, label %367

364:                                              ; preds = %350
  %365 = bitcast i32* %361 to i8*
  %366 = inttoptr i64 %328 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %365, i8* align 4 %366, i64 %358, i1 false) #11
  br label %367

367:                                              ; preds = %364, %350
  store i64 %362, i64* %26, align 8
  store i64 %357, i64* %25, align 8
  store i64 %355, i64* %27, align 8
  %368 = icmp eq i64 %328, 0
  br i1 %368, label %477, label %369

369:                                              ; preds = %367
  %370 = inttoptr i64 %328 to i8*
  tail call void @_ZdlPv(i8* %370) #12
  br label %477

371:                                              ; preds = %261, %253, %234, %227, %198
  %372 = load i32*, i32** %12, align 8
  %373 = load i32*, i32** %13, align 8
  %374 = icmp eq i32* %372, %373
  %375 = ptrtoint i32* %373 to i64
  br i1 %374, label %381, label %376

376:                                              ; preds = %371
  store i32 %200, i32* %372, align 4
  %377 = getelementptr inbounds i32, i32* %372, i64 1
  %378 = ptrtoint i32* %377 to i64
  store i64 %378, i64* %28, align 8
  %379 = load i32*, i32** %13, align 8
  %380 = ptrtoint i32* %379 to i64
  br label %424

381:                                              ; preds = %371
  %382 = ptrtoint i32* %372 to i64
  %383 = load i64, i64* %29, align 8
  %384 = sub i64 %382, %383
  %385 = ashr exact i64 %384, 2
  %386 = add nsw i64 %385, 1
  %387 = icmp ugt i64 %386, 4611686018427387903
  br i1 %387, label %388, label %390

388:                                              ; preds = %381
  %389 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %389) #13
  unreachable

390:                                              ; preds = %381
  %391 = sub i64 %375, %383
  %392 = ashr exact i64 %391, 2
  %393 = icmp ult i64 %392, 2305843009213693951
  br i1 %393, label %394, label %402

394:                                              ; preds = %390
  %395 = ashr exact i64 %391, 1
  %396 = icmp ult i64 %395, %386
  %397 = select i1 %396, i64 %386, i64 %395
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %407, label %399

399:                                              ; preds = %394
  %400 = icmp ugt i64 %397, 4611686018427387903
  br i1 %400, label %401, label %402

401:                                              ; preds = %399
  tail call void @abort() #13
  unreachable

402:                                              ; preds = %399, %390
  %403 = phi i64 [ %397, %399 ], [ 4611686018427387903, %390 ]
  %404 = shl i64 %403, 2
  %405 = tail call i8* @_Znwm(i64 %404) #12
  %406 = bitcast i8* %405 to i32*
  br label %407

407:                                              ; preds = %402, %394
  %408 = phi i64 [ %403, %402 ], [ 0, %394 ]
  %409 = phi i8* [ %405, %402 ], [ null, %394 ]
  %410 = phi i32* [ %406, %402 ], [ null, %394 ]
  %411 = getelementptr inbounds i32, i32* %410, i64 %385
  %412 = getelementptr inbounds i32, i32* %410, i64 %408
  %413 = ptrtoint i32* %412 to i64
  store i32 %200, i32* %411, align 4
  %414 = getelementptr inbounds i32, i32* %411, i64 1
  %415 = ptrtoint i32* %414 to i64
  %416 = ptrtoint i32* %410 to i64
  %417 = icmp sgt i64 %384, 0
  br i1 %417, label %418, label %420

418:                                              ; preds = %407
  %419 = inttoptr i64 %383 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %409, i8* align 4 %419, i64 %384, i1 false) #11
  br label %420

420:                                              ; preds = %418, %407
  store i64 %416, i64* %29, align 8
  store i64 %415, i64* %28, align 8
  store i64 %413, i64* %30, align 8
  %421 = icmp eq i64 %383, 0
  br i1 %421, label %424, label %422

422:                                              ; preds = %420
  %423 = inttoptr i64 %383 to i8*
  tail call void @_ZdlPv(i8* %423) #12
  br label %424

424:                                              ; preds = %422, %420, %376
  %425 = phi i64 [ %380, %376 ], [ %413, %420 ], [ %413, %422 ]
  %426 = phi i64 [ %378, %376 ], [ %415, %420 ], [ %415, %422 ]
  %427 = phi i32* [ %379, %376 ], [ %412, %420 ], [ %412, %422 ]
  %428 = phi i32* [ %377, %376 ], [ %414, %420 ], [ %414, %422 ]
  %429 = icmp eq i32* %428, %427
  br i1 %429, label %433, label %430

430:                                              ; preds = %424
  store i32 %211, i32* %428, align 4
  %431 = getelementptr inbounds i32, i32* %428, i64 1
  %432 = ptrtoint i32* %431 to i64
  store i64 %432, i64* %28, align 8
  br label %477

433:                                              ; preds = %424
  %434 = load i64, i64* %29, align 8
  %435 = sub i64 %425, %434
  %436 = ashr exact i64 %435, 2
  %437 = add nsw i64 %436, 1
  %438 = icmp ugt i64 %437, 4611686018427387903
  br i1 %438, label %439, label %441

439:                                              ; preds = %433
  %440 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %440) #13
  unreachable

441:                                              ; preds = %433
  %442 = icmp ult i64 %436, 2305843009213693951
  br i1 %442, label %443, label %451

443:                                              ; preds = %441
  %444 = ashr exact i64 %435, 1
  %445 = icmp ult i64 %444, %437
  %446 = select i1 %445, i64 %437, i64 %444
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %456, label %448

448:                                              ; preds = %443
  %449 = icmp ugt i64 %446, 4611686018427387903
  br i1 %449, label %450, label %451

450:                                              ; preds = %448
  tail call void @abort() #13
  unreachable

451:                                              ; preds = %448, %441
  %452 = phi i64 [ %446, %448 ], [ 4611686018427387903, %441 ]
  %453 = shl i64 %452, 2
  %454 = tail call i8* @_Znwm(i64 %453) #12
  %455 = bitcast i8* %454 to i32*
  br label %456

456:                                              ; preds = %451, %443
  %457 = phi i64 [ %452, %451 ], [ 0, %443 ]
  %458 = phi i32* [ %455, %451 ], [ null, %443 ]
  %459 = getelementptr inbounds i32, i32* %458, i64 %436
  %460 = getelementptr inbounds i32, i32* %458, i64 %457
  %461 = ptrtoint i32* %460 to i64
  store i32 %211, i32* %459, align 4
  %462 = getelementptr inbounds i32, i32* %459, i64 1
  %463 = ptrtoint i32* %462 to i64
  %464 = sub i64 %426, %434
  %465 = ashr exact i64 %464, 2
  %466 = sub nsw i64 0, %465
  %467 = getelementptr inbounds i32, i32* %459, i64 %466
  %468 = ptrtoint i32* %467 to i64
  %469 = icmp sgt i64 %464, 0
  br i1 %469, label %470, label %473

470:                                              ; preds = %456
  %471 = bitcast i32* %467 to i8*
  %472 = inttoptr i64 %434 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %471, i8* align 4 %472, i64 %464, i1 false) #11
  br label %473

473:                                              ; preds = %470, %456
  store i64 %468, i64* %29, align 8
  store i64 %463, i64* %28, align 8
  store i64 %461, i64* %30, align 8
  %474 = icmp eq i64 %434, 0
  br i1 %474, label %477, label %475

475:                                              ; preds = %473
  %476 = inttoptr i64 %434 to i8*
  tail call void @_ZdlPv(i8* %476) #12
  br label %477

477:                                              ; preds = %475, %473, %430, %369, %367, %324
  %478 = add i32 %32, 2
  br label %31

479:                                              ; preds = %512, %186
  %480 = phi i64 [ %184, %186 ], [ %516, %512 ]
  %481 = phi i64 [ 0, %186 ], [ %514, %512 ]
  %482 = phi i32 [ 0, %186 ], [ %513, %512 ]
  %483 = inttoptr i64 %480 to i32*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %187) #11
  %484 = getelementptr inbounds i32, i32* %483, i64 %481
  %485 = load i32, i32* %484, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %188, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %191, %"struct.std::__1::aligned_storage<4, 4>::type"** %192, align 8
  store i64 0, i64* %194, align 8
  store i64 1, i64* %189, align 8
  store i32 %485, i32* %195, align 8
  %486 = load i8, i8* %22, align 4, !range !3
  %487 = icmp eq i8 %486, 0
  %488 = load i8, i8* %23, align 1, !range !3
  %489 = icmp eq i8 %488, 0
  %490 = select i1 %489, i32 1, i32 2
  %491 = xor i1 %489, true
  %492 = zext i1 %491 to i32
  %493 = select i1 %487, i32 %492, i32 %490
  %494 = add i32 %493, %482
  %495 = zext i32 %494 to i64
  %496 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %196, align 8
  %497 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %496, i64 %495, i32 1
  %498 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %497, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %188, align 8
  %499 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %197, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %197, align 8
  %500 = icmp eq %"class.std::__1::vector.3"* %499, null
  br i1 %500, label %512, label %501

501:                                              ; preds = %479
  %502 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %499, i64 0, i32 0, i32 0
  %503 = load i32*, i32** %502, align 8
  %504 = icmp eq i32* %503, null
  br i1 %504, label %510, label %505

505:                                              ; preds = %501
  %506 = ptrtoint i32* %503 to i64
  %507 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %499, i64 0, i32 0, i32 1
  %508 = bitcast i32** %507 to i64*
  store i64 %506, i64* %508, align 8
  %509 = bitcast i32* %503 to i8*
  call void @_ZdlPv(i8* %509) #12
  br label %510

510:                                              ; preds = %505, %501
  %511 = bitcast %"class.std::__1::vector.3"* %499 to i8*
  call void @_ZdlPv(i8* %511) #12
  br label %512

512:                                              ; preds = %510, %479
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %187) #11
  %513 = add i32 %482, 1
  %514 = zext i32 %513 to i64
  %515 = load i64, i64* %28, align 8
  %516 = load i64, i64* %29, align 8
  %517 = sub i64 %515, %516
  %518 = ashr exact i64 %517, 2
  %519 = icmp ugt i64 %518, %514
  br i1 %519, label %479, label %520

520:                                              ; preds = %512, %182
  %521 = phi i32 [ 0, %182 ], [ %513, %512 ]
  %522 = load i64, i64* %20, align 8
  %523 = load i64, i64* %21, align 8
  %524 = sub i64 %522, %523
  %525 = sdiv exact i64 %524, 48
  %526 = load i8, i8* %22, align 4, !range !3
  %527 = icmp eq i8 %526, 0
  %528 = load i8, i8* %23, align 1, !range !3
  %529 = icmp eq i8 %528, 0
  %530 = select i1 %529, i32 1, i32 2
  %531 = xor i1 %529, true
  %532 = zext i1 %531 to i32
  %533 = select i1 %527, i32 %532, i32 %530
  %534 = trunc i64 %525 to i32
  %535 = xor i32 %533, -1
  %536 = add i32 %535, %534
  %537 = icmp ult i32 %536, %521
  br i1 %537, label %538, label %552

538:                                              ; preds = %552, %520
  %539 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1354", %"class.std::__1::__function::__default_alloc_func.1354"* %7, i64 0, i32 0, i32 2
  %540 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %539, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %540, %"class.spvtools::opt::Instruction"* %1) #11
  %541 = load i32*, i32** %15, align 8
  %542 = icmp eq i32* %541, null
  br i1 %542, label %546, label %543

543:                                              ; preds = %538
  %544 = ptrtoint i32* %541 to i64
  store i64 %544, i64* %25, align 8
  %545 = bitcast i32* %541 to i8*
  call void @_ZdlPv(i8* %545) #12
  br label %546

546:                                              ; preds = %543, %538
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %547 = load i32*, i32** %11, align 8
  %548 = icmp eq i32* %547, null
  br i1 %548, label %556, label %549

549:                                              ; preds = %546
  %550 = ptrtoint i32* %547 to i64
  store i64 %550, i64* %28, align 8
  %551 = bitcast i32* %547 to i8*
  call void @_ZdlPv(i8* %551) #12
  br label %556

552:                                              ; preds = %520, %552
  %553 = phi i32 [ %554, %552 ], [ %536, %520 ]
  call void @_ZN8spvtools3opt11Instruction15RemoveInOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %553) #11
  %554 = add i32 %553, -1
  %555 = icmp ult i32 %554, %521
  br i1 %555, label %538, label %552

556:                                              ; preds = %546, %549
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11Instruction15RemoveInOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %5 = zext i32 %1 to i64
  %6 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 %5
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 3
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !3
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i64 1, i64 2
  %14 = xor i1 %12, true
  %15 = zext i1 %14 to i64
  %16 = select i1 %9, i64 %15, i64 %13
  %17 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 %16
  %18 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %17, i64 1
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %20 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %19, align 8
  %21 = icmp eq %"struct.spvtools::opt::Operand"* %18, %20
  br i1 %21, label %37, label %22

22:                                               ; preds = %2, %22
  %23 = phi %"struct.spvtools::opt::Operand"* [ %32, %22 ], [ %17, %2 ]
  %24 = phi %"struct.spvtools::opt::Operand"* [ %31, %22 ], [ %18, %2 ]
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %23, i64 0, i32 0
  store i32 %26, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %23, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 0, i32 1
  %30 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %28, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %29) #11
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %24, i64 1
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %23, i64 1
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %31, %20
  br i1 %33, label %34, label %22

34:                                               ; preds = %22
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %19, align 8
  %36 = icmp eq %"struct.spvtools::opt::Operand"* %35, %32
  br i1 %36, label %60, label %37

37:                                               ; preds = %34, %2
  %38 = phi %"struct.spvtools::opt::Operand"* [ %32, %34 ], [ %17, %2 ]
  %39 = phi %"struct.spvtools::opt::Operand"* [ %35, %34 ], [ %18, %2 ]
  br label %40

40:                                               ; preds = %58, %37
  %41 = phi %"struct.spvtools::opt::Operand"* [ %42, %58 ], [ %39, %37 ]
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 -1
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %44, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %44, align 8
  %46 = icmp eq %"class.std::__1::vector.3"* %45, null
  br i1 %46, label %58, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %45, i64 0, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %45, i64 0, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %51, %47
  %57 = bitcast %"class.std::__1::vector.3"* %45 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %56, %40
  %59 = icmp eq %"struct.spvtools::opt::Operand"* %42, %38
  br i1 %59, label %60, label %40

60:                                               ; preds = %58, %34
  %61 = phi %"struct.spvtools::opt::Operand"* [ %32, %34 ], [ %38, %58 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_2FvPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #12, !noalias !80
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 32, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_2FvPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.981"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.977"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"class.spvtools::opt::BasicBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::BasicBlock"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !2
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.981"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.981"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.981"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.981"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.981"* %62 to %"class.spvtools::opt::BasicBlock"**
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #12, !noalias !85
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::BasicBlock"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !85
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !85
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !85
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.981"**
  store %"struct.std::__1::__hash_node_base.981"* null, %"struct.std::__1::__hash_node_base.981"** %75, align 8, !noalias !85
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !2
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.977"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !2
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.981"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.977", %"class.std::__1::__hash_table.977"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.981"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.981"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.981"* %118, %"struct.std::__1::__hash_node_base.981"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.981"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981", %"struct.std::__1::__hash_node_base.981"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.981"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !2
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.981"**, %"struct.std::__1::__hash_node_base.981"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.981"*, %"struct.std::__1::__hash_node_base.981"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.981"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.981"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.981"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.981"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.981"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.981"*, i8 } undef, %"struct.std::__1::__hash_node_base.981"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.981"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.981"*, i8 } %158
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt9LoopUtils26CloneAndAttachLoopToHeaderEPNS9_17LoopCloningResultEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #9 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1357"*
  %9 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1357", %"class.std::__1::__function::__default_alloc_func.1357"* %8, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %1, align 4
  br label %11

11:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_9LoopUtils26CloneAndAttachLoopToHeaderEPNSA_17LoopCloningResultEE3$_4S6_EEEEvPKNS0_16__policy_storageES5_j"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32) #0 align 2 {
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %6 = bitcast [8 x i8]* %5 to %"class.spvtools::opt::LoopUtils"**
  %7 = load %"class.spvtools::opt::LoopUtils"*, %"class.spvtools::opt::LoopUtils"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %7, i64 0, i32 2
  %9 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* %9, %"class.spvtools::opt::Instruction"* %1) #11
  br i1 %10, label %43, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #11
  %13 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %19 = bitcast i32** %17 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %18, %"struct.std::__1::aligned_storage<4, 4>::type"** %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.0"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %18 to i32*
  store i64 1, i64* %16, align 8
  store i32 %14, i32* %22, align 8
  %23 = zext i32 %2 to i64
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %25 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %24, align 8
  %26 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %25, i64 %23, i32 1
  %27 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %28, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %28, align 8
  %30 = icmp eq %"class.std::__1::vector.3"* %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %29, i64 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = icmp eq i32* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = ptrtoint i32* %33 to i64
  %37 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %29, i64 0, i32 0, i32 1
  %38 = bitcast i32** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast i32* %33 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %35, %31
  %41 = bitcast %"class.std::__1::vector.3"* %29 to i8*
  call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %40, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #11
  br label %43

43:                                               ; preds = %3, %42
  ret void
}

declare zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_9LoopUtils26CloneAndAttachLoopToHeaderEPNSA_17LoopCloningResultEE3$_5S6_EEEEvPKNS0_16__policy_storageES5_j"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32) #0 align 2 {
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %6 = bitcast [8 x i8]* %5 to %"class.spvtools::opt::LoopUtils"**
  %7 = load %"class.spvtools::opt::LoopUtils"*, %"class.spvtools::opt::LoopUtils"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %7, i64 0, i32 2
  %9 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* %9, %"class.spvtools::opt::Instruction"* %1) #11
  br i1 %10, label %11, label %43

11:                                               ; preds = %3
  %12 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #11
  %13 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %19 = bitcast i32** %17 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %18, %"struct.std::__1::aligned_storage<4, 4>::type"** %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.0"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %18 to i32*
  store i64 1, i64* %16, align 8
  store i32 %14, i32* %22, align 8
  %23 = zext i32 %2 to i64
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %25 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %24, align 8
  %26 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %25, i64 %23, i32 1
  %27 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %28, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %28, align 8
  %30 = icmp eq %"class.std::__1::vector.3"* %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %29, i64 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = icmp eq i32* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = ptrtoint i32* %33 to i64
  %37 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %29, i64 0, i32 0, i32 1
  %38 = bitcast i32** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast i32* %33 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %35, %31
  %41 = bitcast %"class.std::__1::vector.3"* %29 to i8*
  call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %40, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #11
  br label %43

43:                                               ; preds = %3, %42
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.40"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.40"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.40"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.40"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.40"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.40"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.40"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.40"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::BasicBlock"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.40"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.40"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.40"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !88

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.40"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.40"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.40"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.40"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.40"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.40"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.40"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.40"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.40"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.40"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.40"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.40"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.40"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.40"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.40"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.40"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.40"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.40"*
  %138 = icmp eq %"class.std::__1::unique_ptr.40"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.40"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %142, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::BasicBlock"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.std::__1::unique_ptr.40"* %141 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %146, %"class.spvtools::opt::BasicBlock"* nonnull %143) #11
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.40"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJRPS4_EEEvDpOT_(%"class.std::__1::vector.38"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.40"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.40"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.40"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.40"* %38 to i64
  %40 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::unique_ptr.40"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %37, i64 1
  %44 = ptrtoint %"class.std::__1::unique_ptr.40"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %45, align 8
  %47 = ptrtoint %"class.std::__1::unique_ptr.40"* %46 to i64
  %48 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %49 = icmp eq %"class.std::__1::unique_ptr.40"* %48, %46
  br i1 %49, label %131, label %50

50:                                               ; preds = %34
  %51 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %48, i64 -1, i32 0, i32 0, i32 0
  %52 = ptrtoint %"class.spvtools::opt::BasicBlock"** %51 to i64
  %53 = sub i64 %52, %47
  %54 = lshr i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 7
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %50, %58
  %59 = phi %"class.std::__1::unique_ptr.40"* [ %62, %58 ], [ %37, %50 ]
  %60 = phi %"class.std::__1::unique_ptr.40"* [ %63, %58 ], [ %48, %50 ]
  %61 = phi i64 [ %68, %58 ], [ %56, %50 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::unique_ptr.40"* %63 to i64*
  %66 = load i64, i64* %65, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.40"* %62 to i64*
  store i64 %66, i64* %67, align 8
  %68 = add i64 %61, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %58, !llvm.loop !89

70:                                               ; preds = %58, %50
  %71 = phi %"class.std::__1::unique_ptr.40"* [ undef, %50 ], [ %62, %58 ]
  %72 = phi %"class.std::__1::unique_ptr.40"* [ %37, %50 ], [ %62, %58 ]
  %73 = phi %"class.std::__1::unique_ptr.40"* [ %48, %50 ], [ %63, %58 ]
  %74 = icmp ult i64 %53, 56
  br i1 %74, label %127, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"class.std::__1::unique_ptr.40"* [ %120, %75 ], [ %72, %70 ]
  %77 = phi %"class.std::__1::unique_ptr.40"* [ %121, %75 ], [ %73, %70 ]
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 -1
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.std::__1::unique_ptr.40"* %79 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %80, align 8
  %83 = bitcast %"class.std::__1::unique_ptr.40"* %78 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 -2
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr.40"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %86, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.40"* %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 -3
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.40"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %92, align 8
  %95 = bitcast %"class.std::__1::unique_ptr.40"* %90 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 -4
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.std::__1::unique_ptr.40"* %97 to i64*
  %100 = load i64, i64* %99, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %98, align 8
  %101 = bitcast %"class.std::__1::unique_ptr.40"* %96 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 -5
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.std::__1::unique_ptr.40"* %103 to i64*
  %106 = load i64, i64* %105, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %104, align 8
  %107 = bitcast %"class.std::__1::unique_ptr.40"* %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 -6
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.std::__1::unique_ptr.40"* %109 to i64*
  %112 = load i64, i64* %111, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %110, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.40"* %108 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 -7
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = bitcast %"class.std::__1::unique_ptr.40"* %115 to i64*
  %118 = load i64, i64* %117, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %116, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.40"* %114 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 -8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr.40"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %122, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.40"* %120 to i64*
  store i64 %124, i64* %125, align 8
  %126 = icmp eq %"class.std::__1::unique_ptr.40"* %121, %46
  br i1 %126, label %127, label %75

127:                                              ; preds = %75, %70
  %128 = phi %"class.std::__1::unique_ptr.40"* [ %71, %70 ], [ %120, %75 ]
  %129 = load i64, i64* %6, align 8
  %130 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %131

131:                                              ; preds = %34, %127
  %132 = phi %"class.std::__1::unique_ptr.40"* [ %130, %127 ], [ %46, %34 ]
  %133 = phi %"class.std::__1::unique_ptr.40"* [ %128, %127 ], [ %37, %34 ]
  %134 = phi i64 [ %129, %127 ], [ %47, %34 ]
  %135 = ptrtoint %"class.std::__1::unique_ptr.40"* %133 to i64
  store i64 %135, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %136 = inttoptr i64 %134 to %"class.std::__1::unique_ptr.40"*
  %137 = icmp eq %"class.std::__1::unique_ptr.40"* %132, %136
  br i1 %137, label %148, label %138

138:                                              ; preds = %131, %146
  %139 = phi %"class.std::__1::unique_ptr.40"* [ %140, %146 ], [ %132, %131 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %141, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %141, align 8
  %143 = icmp eq %"class.spvtools::opt::BasicBlock"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::unique_ptr.40"* %140 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %145, %"class.spvtools::opt::BasicBlock"* nonnull %142) #11
  br label %146

146:                                              ; preds = %144, %138
  %147 = icmp eq %"class.std::__1::unique_ptr.40"* %140, %136
  br i1 %147, label %148, label %138

148:                                              ; preds = %146, %131
  %149 = icmp eq i64 %134, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = inttoptr i64 %134 to i8*
  tail call void @_ZdlPv(i8* %151) #12
  br label %152

152:                                              ; preds = %148, %150
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1363"* dereferenceable(8), %"class.std::__1::tuple.1172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.333"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.333"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !90
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1363", %"class.std::__1::tuple.1363"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !90
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !90
  store i32 %62, i32* %61, align 8, !noalias !90
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !90
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !90
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"**
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8, !noalias !90
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !2
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.333"* %110, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.333"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !2
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.333"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.333"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } undef, %"struct.std::__1::__hash_node_base.333"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.333"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1363"* dereferenceable(8), %"class.std::__1::tuple.1172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #12, !noalias !93
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1363", %"class.std::__1::tuple.1363"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !93
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !93
  store i32 %62, i32* %61, align 4, !noalias !93
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !93
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !93
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !93
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !2
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !2
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.250"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.254"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.254"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !96

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.254"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.254"* %36, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.254"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.254"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.254"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.254"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.254"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.254"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.254"* %82, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.254"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.254"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.254"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.254"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.254"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.254"* %80, %"struct.std::__1::__hash_node_base.254"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.254"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.254"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.254"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1040"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1036"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1382"* dereferenceable(8), %"class.std::__1::tuple.1172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.1040"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.1040"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.1040"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.1040"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1040"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !97
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1382"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !97
  %75 = load i64, i64* %74, align 8, !noalias !97
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !97
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %78, align 8, !noalias !97
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !97
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1040"**
  store %"struct.std::__1::__hash_node_base.1040"* null, %"struct.std::__1::__hash_node_base.1040"** %81, align 8, !noalias !97
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1036"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !2
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.1040"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.1040"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.1040"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.1040"* %124, %"struct.std::__1::__hash_node_base.1040"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.1040"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.1040"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !2
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.1040"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.1040"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.1040"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1040"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.1040"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.1040"*, i8 } undef, %"struct.std::__1::__hash_node_base.1040"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.1040"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.1040"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1036"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1036"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1036"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1036"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1036"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1040"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1040"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1042", %"class.std::__1::__bucket_list_deallocator.1042"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1040"* null, %"struct.std::__1::__hash_node_base.1040"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !100

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1040"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1040"* null, %"struct.std::__1::__hash_node_base.1040"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1040"* null, %"struct.std::__1::__hash_node_base.1040"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1040"* null, %"struct.std::__1::__hash_node_base.1040"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1040"* null, %"struct.std::__1::__hash_node_base.1040"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1040"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1040"* %36, %"struct.std::__1::__hash_node_base.1040"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1040"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1040"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1040"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1040"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1040"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1040"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1040"* %82, %"struct.std::__1::__hash_node_base.1040"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1040"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1040"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1040"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1040"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1040"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1040"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1040"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1040"* %80, %"struct.std::__1::__hash_node_base.1040"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1040"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1040", %"struct.std::__1::__hash_node_base.1040"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1040"*, %"struct.std::__1::__hash_node_base.1040"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1040"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1036", %"class.std::__1::__hash_table.1036"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1040"**, %"struct.std::__1::__hash_node_base.1040"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1040"** null, %"struct.std::__1::__hash_node_base.1040"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1040"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1040"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1042", %"class.std::__1::__bucket_list_deallocator.1042"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt9LoopUtils9CloneLoopEPNS9_17LoopCloningResultERKNS_6vectorIPNS8_10BasicBlockENS_9allocatorISE_EEEEE3$_6S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #10 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"struct.spvtools::opt::LoopUtils::LoopCloningResult"**
  %4 = load %"struct.spvtools::opt::LoopUtils::LoopCloningResult"*, %"struct.spvtools::opt::LoopUtils::LoopCloningResult"** %3, align 8
  %5 = load i32, i32* %1, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %62, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #11, !range !2
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"struct.spvtools::opt::LoopUtils::LoopCloningResult", %"struct.spvtools::opt::LoopUtils::LoopCloningResult"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.254"* %25, null
  br i1 %26, label %62, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.254"* %29, null
  br i1 %30, label %62, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base.254"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.254"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %62

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.254"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %5
  br i1 %53, label %58, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.254"* %56, null
  br i1 %57, label %62, label %33

58:                                               ; preds = %49
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %50 to %"struct.std::__1::pair.1371"*
  %60 = getelementptr inbounds %"struct.std::__1::pair.1371", %"struct.std::__1::pair.1371"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %1, align 4
  br label %62

62:                                               ; preds = %46, %54, %2, %20, %27, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1082"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1078"*, %"class.spvtools::opt::Loop"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1404"* dereferenceable(8), %"class.std::__1::tuple.1172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Loop"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Loop"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.1082"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.1082"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1082"* %65 to %"class.spvtools::opt::Loop"**
  %67 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Loop"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !101
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1404"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !101
  %75 = load i64, i64* %74, align 8, !noalias !101
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !101
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %78, align 8, !noalias !101
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !101
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1082"**
  store %"struct.std::__1::__hash_node_base.1082"* null, %"struct.std::__1::__hash_node_base.1082"** %81, align 8, !noalias !101
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1078"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !2
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.1082"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.1082"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.1082"* %124, %"struct.std::__1::__hash_node_base.1082"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.1082"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !2
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.1082"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.1082"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.1082"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1082"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.1082"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.1082"*, i8 } undef, %"struct.std::__1::__hash_node_base.1082"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.1082"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.1082"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1078"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1078"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1078"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1078"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1078"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1082"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1082"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1084", %"class.std::__1::__bucket_list_deallocator.1084"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1082"* null, %"struct.std::__1::__hash_node_base.1082"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !104

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1082"* null, %"struct.std::__1::__hash_node_base.1082"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1082"* null, %"struct.std::__1::__hash_node_base.1082"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1082"* null, %"struct.std::__1::__hash_node_base.1082"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1082"* null, %"struct.std::__1::__hash_node_base.1082"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1082"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1082"* %36, %"struct.std::__1::__hash_node_base.1082"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1082"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1082"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1082"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1082"* %101 to %"class.spvtools::opt::Loop"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1082"* %82, %"struct.std::__1::__hash_node_base.1082"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1082"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1082"* %110 to %"class.spvtools::opt::Loop"**
  %112 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %102, align 8
  %113 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Loop"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1082"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1082"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1082"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1082"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1082"* %80, %"struct.std::__1::__hash_node_base.1082"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1082"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1082"** null, %"struct.std::__1::__hash_node_base.1082"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1082"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1082"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1084", %"class.std::__1::__bucket_list_deallocator.1084"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEEC2ERKS4_S7_(%"class.spvtools::opt::IteratorRange"*, %"class.spvtools::opt::TreeDFIterator"* dereferenceable(56), %"class.spvtools::opt::TreeDFIterator"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.spvtools::opt::TreeDFIterator"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.spvtools::opt::IteratorRange"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %7, i64 0, i32 0
  %9 = bitcast %"class.std::__1::stack"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #11
  %10 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %11, i64 %14
  %16 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %16, align 8
  %18 = icmp eq %"struct.std::__1::pair.1105"** %17, %11
  br i1 %18, label %19, label %25

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %13
  %23 = lshr i64 %22, 8
  %24 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %11, i64 %23
  br label %37

25:                                               ; preds = %3
  %26 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %15, align 8
  %27 = and i64 %13, 255
  %28 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %26, i64 %27
  %29 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %1, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %13
  %32 = lshr i64 %31, 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %11, i64 %32
  %34 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %33, align 8
  %35 = and i64 %31, 255
  %36 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %34, i64 %35
  br label %37

37:                                               ; preds = %19, %25
  %38 = phi %"struct.std::__1::pair.1105"** [ %33, %25 ], [ %24, %19 ]
  %39 = phi %"struct.std::__1::pair.1105"* [ %28, %25 ], [ null, %19 ]
  %40 = phi %"struct.std::__1::pair.1105"* [ %36, %25 ], [ null, %19 ]
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"* %8, %"struct.std::__1::pair.1105"** %15, %"struct.std::__1::pair.1105"* %39, %"struct.std::__1::pair.1105"** %38, %"struct.std::__1::pair.1105"* %40, i8* null) #11
  %41 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %0, i64 0, i32 1
  %42 = bitcast %"class.spvtools::opt::TreeDFIterator"* %2 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.spvtools::opt::TreeDFIterator"* %41 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::IteratorRange", %"class.spvtools::opt::IteratorRange"* %0, i64 0, i32 1, i32 1
  %46 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %45, i64 0, i32 0
  %47 = bitcast %"class.std::__1::stack"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 48, i1 false) #11
  %48 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %49 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %48, align 8
  %50 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = lshr i64 %51, 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %49, i64 %52
  %54 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %55 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %54, align 8
  %56 = icmp eq %"struct.std::__1::pair.1105"** %55, %49
  br i1 %56, label %57, label %63

57:                                               ; preds = %37
  %58 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, %51
  %61 = lshr i64 %60, 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %49, i64 %61
  br label %75

63:                                               ; preds = %37
  %64 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %53, align 8
  %65 = and i64 %51, 255
  %66 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %64, i64 %65
  %67 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, %51
  %70 = lshr i64 %69, 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %49, i64 %70
  %72 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %71, align 8
  %73 = and i64 %69, 255
  %74 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %72, i64 %73
  br label %75

75:                                               ; preds = %57, %63
  %76 = phi %"struct.std::__1::pair.1105"** [ %71, %63 ], [ %62, %57 ]
  %77 = phi %"struct.std::__1::pair.1105"* [ %66, %63 ], [ null, %57 ]
  %78 = phi %"struct.std::__1::pair.1105"* [ %74, %63 ], [ null, %57 ]
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"* %46, %"struct.std::__1::pair.1105"** %53, %"struct.std::__1::pair.1105"* %77, %"struct.std::__1::pair.1105"** %76, %"struct.std::__1::pair.1105"* %78, i8* null) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque"*, %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %7 = ptrtoint %"struct.std::__1::pair.1105"* %2 to i64
  %8 = icmp eq %"struct.std::__1::pair.1105"* %4, %2
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = ptrtoint %"struct.std::__1::pair.1105"* %4 to i64
  %11 = ptrtoint %"struct.std::__1::pair.1105"** %3 to i64
  %12 = ptrtoint %"struct.std::__1::pair.1105"** %1 to i64
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 5
  %15 = bitcast %"struct.std::__1::pair.1105"** %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %10, %16
  %18 = ashr exact i64 %17, 4
  %19 = add nsw i64 %18, %14
  %20 = bitcast %"struct.std::__1::pair.1105"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %7, %21
  %23 = ashr exact i64 %22, 4
  %24 = sub i64 %19, %23
  br label %25

25:                                               ; preds = %6, %9
  %26 = phi i64 [ %24, %9 ], [ 0, %6 ]
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast %"struct.std::__1::pair.1105"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.std::__1::pair.1105"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = icmp eq i64 %33, 0
  %35 = shl i64 %33, 5
  %36 = add i64 %35, -1
  %37 = select i1 %34, i64 0, i64 %36
  %38 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %39
  %43 = sub i64 %37, %42
  %44 = icmp ugt i64 %26, %43
  %45 = inttoptr i64 %32 to %"struct.std::__1::pair.1105"**
  %46 = inttoptr i64 %29 to %"struct.std::__1::pair.1105"**
  br i1 %44, label %47, label %54

47:                                               ; preds = %25
  %48 = sub i64 %26, %43
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm(%"class.std::__1::deque"* %0, i64 %48)
  %49 = load i64, i64* %40, align 8
  %50 = load i64, i64* %38, align 8
  %51 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %30, align 8
  %52 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %27, align 8
  %53 = add i64 %50, %49
  br label %54

54:                                               ; preds = %47, %25
  %55 = phi i64 [ %53, %47 ], [ %42, %25 ]
  %56 = phi %"struct.std::__1::pair.1105"** [ %52, %47 ], [ %46, %25 ]
  %57 = phi %"struct.std::__1::pair.1105"** [ %51, %47 ], [ %45, %25 ]
  %58 = phi i64 [ %49, %47 ], [ %41, %25 ]
  %59 = lshr i64 %55, 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %57, i64 %59
  %61 = icmp eq %"struct.std::__1::pair.1105"** %56, %57
  br i1 %61, label %67, label %62

62:                                               ; preds = %54
  %63 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %60, align 8
  %64 = and i64 %55, 255
  %65 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %63, i64 %64
  %66 = ptrtoint %"struct.std::__1::pair.1105"* %65 to i64
  br label %67

67:                                               ; preds = %54, %62
  %68 = phi i64 [ %66, %62 ], [ 0, %54 ]
  %69 = icmp eq i64 %26, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %67
  %71 = bitcast %"struct.std::__1::pair.1105"** %60 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %68, %72
  %74 = ashr exact i64 %73, 4
  %75 = add nsw i64 %74, %26
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %70
  %78 = lshr i64 %75, 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %60, i64 %78
  %80 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %79, align 8
  %81 = and i64 %75, 255
  %82 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %80, i64 %81
  %83 = ptrtoint %"struct.std::__1::pair.1105"* %82 to i64
  br label %93

84:                                               ; preds = %70
  %85 = sub nsw i64 255, %75
  %86 = sdiv i64 %85, -256
  %87 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %60, i64 %86
  %88 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %87, align 8
  %89 = srem i64 %85, 256
  %90 = sub nsw i64 255, %89
  %91 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %88, i64 %90
  %92 = ptrtoint %"struct.std::__1::pair.1105"* %91 to i64
  br label %93

93:                                               ; preds = %67, %77, %84
  %94 = phi i64 [ %68, %67 ], [ %83, %77 ], [ %92, %84 ]
  %95 = phi %"struct.std::__1::pair.1105"** [ %60, %67 ], [ %79, %77 ], [ %87, %84 ]
  %96 = inttoptr i64 %94 to %"struct.std::__1::pair.1105"*
  %97 = inttoptr i64 %68 to %"struct.std::__1::pair.1105"*
  %98 = icmp eq %"struct.std::__1::pair.1105"* %97, %96
  br i1 %98, label %99, label %100

99:                                               ; preds = %184, %192, %93
  ret void

100:                                              ; preds = %93, %192
  %101 = phi i64 [ %191, %192 ], [ %58, %93 ]
  %102 = phi i64 [ %187, %192 ], [ %7, %93 ]
  %103 = phi %"struct.std::__1::pair.1105"** [ %186, %192 ], [ %1, %93 ]
  %104 = phi i64 [ %195, %192 ], [ %68, %93 ]
  %105 = phi %"struct.std::__1::pair.1105"** [ %193, %192 ], [ %60, %93 ]
  %106 = icmp eq %"struct.std::__1::pair.1105"** %105, %95
  br i1 %106, label %110, label %107

107:                                              ; preds = %100
  %108 = load %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %105, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %108, i64 256
  br label %110

110:                                              ; preds = %100, %107
  %111 = phi %"struct.std::__1::pair.1105"* [ %109, %107 ], [ %96, %100 ]
  %112 = inttoptr i64 %104 to %"struct.std::__1::pair.1105"*
  %113 = icmp eq %"struct.std::__1::pair.1105"* %111, %112
  br i1 %113, label %184, label %114

114:                                              ; preds = %110
  %115 = getelementptr %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %111, i64 -1
  %116 = bitcast %"struct.std::__1::pair.1105"* %115 to i8*
  %117 = sub i64 0, %104
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = ptrtoint i8* %118 to i64
  %120 = and i64 %119, 16
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %138

122:                                              ; preds = %114
  %123 = inttoptr i64 %102 to %"struct.std::__1::pair.1105"*
  %124 = inttoptr i64 %104 to i8*
  %125 = inttoptr i64 %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #11
  %126 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %112, i64 1
  %127 = ptrtoint %"struct.std::__1::pair.1105"* %126 to i64
  %128 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %123, i64 1
  %129 = ptrtoint %"struct.std::__1::pair.1105"* %128 to i64
  %130 = bitcast %"struct.std::__1::pair.1105"** %103 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %129, %131
  %133 = icmp eq i64 %132, 4096
  br i1 %133, label %134, label %138

134:                                              ; preds = %122
  %135 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %103, i64 1
  %136 = bitcast %"struct.std::__1::pair.1105"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  br label %138

138:                                              ; preds = %114, %134, %122
  %139 = phi %"struct.std::__1::pair.1105"** [ undef, %114 ], [ %135, %134 ], [ %103, %122 ]
  %140 = phi i64 [ undef, %114 ], [ %137, %134 ], [ %129, %122 ]
  %141 = phi %"struct.std::__1::pair.1105"* [ %112, %114 ], [ %126, %134 ], [ %126, %122 ]
  %142 = phi i64 [ %104, %114 ], [ %127, %134 ], [ %127, %122 ]
  %143 = phi i64 [ %102, %114 ], [ %137, %134 ], [ %129, %122 ]
  %144 = phi %"struct.std::__1::pair.1105"** [ %103, %114 ], [ %135, %134 ], [ %103, %122 ]
  %145 = icmp ult i8* %118, inttoptr (i64 16 to i8*)
  br i1 %145, label %179, label %146

146:                                              ; preds = %138, %202
  %147 = phi %"struct.std::__1::pair.1105"* [ %171, %202 ], [ %141, %138 ]
  %148 = phi i64 [ %172, %202 ], [ %142, %138 ]
  %149 = phi i64 [ %204, %202 ], [ %143, %138 ]
  %150 = phi %"struct.std::__1::pair.1105"** [ %203, %202 ], [ %144, %138 ]
  %151 = inttoptr i64 %149 to %"struct.std::__1::pair.1105"*
  %152 = inttoptr i64 %148 to i8*
  %153 = inttoptr i64 %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #11
  %154 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %147, i64 1
  %155 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %151, i64 1
  %156 = ptrtoint %"struct.std::__1::pair.1105"* %155 to i64
  %157 = bitcast %"struct.std::__1::pair.1105"** %150 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %156, %158
  %160 = icmp eq i64 %159, 4096
  br i1 %160, label %161, label %165

161:                                              ; preds = %146
  %162 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %150, i64 1
  %163 = bitcast %"struct.std::__1::pair.1105"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  br label %165

165:                                              ; preds = %146, %161
  %166 = phi %"struct.std::__1::pair.1105"** [ %162, %161 ], [ %150, %146 ]
  %167 = phi i64 [ %164, %161 ], [ %156, %146 ]
  %168 = inttoptr i64 %167 to %"struct.std::__1::pair.1105"*
  %169 = bitcast %"struct.std::__1::pair.1105"* %154 to i8*
  %170 = inttoptr i64 %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false) #11
  %171 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %147, i64 2
  %172 = ptrtoint %"struct.std::__1::pair.1105"* %171 to i64
  %173 = getelementptr inbounds %"struct.std::__1::pair.1105", %"struct.std::__1::pair.1105"* %168, i64 1
  %174 = ptrtoint %"struct.std::__1::pair.1105"* %173 to i64
  %175 = bitcast %"struct.std::__1::pair.1105"** %166 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = icmp eq i64 %177, 4096
  br i1 %178, label %198, label %202

179:                                              ; preds = %202, %138
  %180 = phi %"struct.std::__1::pair.1105"** [ %139, %138 ], [ %203, %202 ]
  %181 = phi i64 [ %140, %138 ], [ %204, %202 ]
  %182 = ptrtoint %"struct.std::__1::pair.1105"* %111 to i64
  %183 = load i64, i64* %40, align 8
  br label %184

184:                                              ; preds = %179, %110
  %185 = phi i64 [ %183, %179 ], [ %101, %110 ]
  %186 = phi %"struct.std::__1::pair.1105"** [ %180, %179 ], [ %103, %110 ]
  %187 = phi i64 [ %181, %179 ], [ %102, %110 ]
  %188 = phi i64 [ %182, %179 ], [ %104, %110 ]
  %189 = sub i64 %188, %104
  %190 = ashr exact i64 %189, 4
  %191 = add i64 %185, %190
  store i64 %191, i64* %40, align 8
  br i1 %106, label %99, label %192

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %105, i64 1
  %194 = bitcast %"struct.std::__1::pair.1105"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = inttoptr i64 %195 to %"struct.std::__1::pair.1105"*
  %197 = icmp eq %"struct.std::__1::pair.1105"* %196, %96
  br i1 %197, label %99, label %100

198:                                              ; preds = %165
  %199 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %166, i64 1
  %200 = bitcast %"struct.std::__1::pair.1105"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  br label %202

202:                                              ; preds = %198, %165
  %203 = phi %"struct.std::__1::pair.1105"** [ %199, %198 ], [ %166, %165 ]
  %204 = phi i64 [ %201, %198 ], [ %174, %165 ]
  %205 = icmp eq %"struct.std::__1::pair.1105"* %111, %171
  br i1 %205, label %179, label %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm(%"class.std::__1::deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::pair.1105"*, align 8
  %4 = alloca %"struct.std::__1::pair.1105"*, align 8
  %5 = alloca %"struct.std::__1::__split_buffer.1335", align 16
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair.1105"** %8, %10
  %12 = zext i1 %11 to i64
  %13 = add i64 %12, %1
  %14 = lshr i64 %13, 8
  %15 = and i64 %13, 255
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  %18 = add nuw nsw i64 %14, %17
  %19 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 8
  %22 = icmp ult i64 %18, %21
  %23 = select i1 %22, i64 %18, i64 %21
  %24 = sub nsw i64 %18, %23
  %25 = icmp eq i64 %24, 0
  %26 = ptrtoint %"struct.std::__1::pair.1105"** %8 to i64
  br i1 %25, label %27, label %186

27:                                               ; preds = %2
  %28 = shl nuw i64 %23, 8
  %29 = sub i64 %20, %28
  store i64 %29, i64* %19, align 8
  %30 = icmp eq i64 %23, 0
  br i1 %30, label %768, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.1105"*** %32 to i64*
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = bitcast %"struct.std::__1::pair.1105"*** %9 to i64*
  %37 = bitcast %"struct.std::__1::pair.1105"*** %7 to i64*
  %38 = bitcast %"struct.std::__1::pair.1105"*** %7 to i64**
  br label %39

39:                                               ; preds = %184, %31
  %40 = phi %"struct.std::__1::pair.1105"** [ %8, %31 ], [ %181, %184 ]
  %41 = phi %"struct.std::__1::pair.1105"** [ %10, %31 ], [ %185, %184 ]
  %42 = phi i64 [ %23, %31 ], [ %182, %184 ]
  %43 = bitcast %"struct.std::__1::pair.1105"** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %41, i64 1
  store %"struct.std::__1::pair.1105"** %45, %"struct.std::__1::pair.1105"*** %9, align 8
  %46 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %32, align 8
  %47 = icmp eq %"struct.std::__1::pair.1105"** %40, %46
  %48 = ptrtoint %"struct.std::__1::pair.1105"** %46 to i64
  %49 = bitcast %"struct.std::__1::pair.1105"** %40 to i64*
  br i1 %47, label %50, label %178

50:                                               ; preds = %39
  %51 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %33, align 8
  %52 = icmp ugt %"struct.std::__1::pair.1105"** %45, %51
  %53 = ptrtoint %"struct.std::__1::pair.1105"** %51 to i64
  br i1 %52, label %54, label %73

54:                                               ; preds = %50
  %55 = ptrtoint %"struct.std::__1::pair.1105"** %45 to i64
  %56 = sub i64 %55, %53
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = sdiv i64 %58, -2
  %60 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %45, i64 %59
  %61 = sub i64 %48, %55
  %62 = ashr exact i64 %61, 3
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = bitcast %"struct.std::__1::pair.1105"** %60 to i8*
  %66 = bitcast %"struct.std::__1::pair.1105"** %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %61, i1 false) #11
  %67 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %9, align 8
  br label %68

68:                                               ; preds = %64, %54
  %69 = phi %"struct.std::__1::pair.1105"** [ %45, %54 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %60, i64 %62
  store %"struct.std::__1::pair.1105"** %70, %"struct.std::__1::pair.1105"*** %7, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %69, i64 %59
  store %"struct.std::__1::pair.1105"** %71, %"struct.std::__1::pair.1105"*** %9, align 8
  %72 = bitcast %"struct.std::__1::pair.1105"** %70 to i64*
  br label %178

73:                                               ; preds = %50
  %74 = sub i64 %48, %53
  %75 = ashr exact i64 %74, 2
  %76 = icmp eq i64 %74, 0
  %77 = select i1 %76, i64 1, i64 %75
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call void @abort() #13
  unreachable

80:                                               ; preds = %73
  %81 = lshr i64 %77, 2
  %82 = shl i64 %77, 3
  %83 = tail call i8* @_Znwm(i64 %82) #12
  %84 = bitcast i8* %83 to %"struct.std::__1::pair.1105"**
  %85 = ptrtoint i8* %83 to i64
  %86 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %84, i64 %81
  %87 = ptrtoint %"struct.std::__1::pair.1105"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %84, i64 %77
  %89 = ptrtoint %"struct.std::__1::pair.1105"** %88 to i64
  %90 = ptrtoint %"struct.std::__1::pair.1105"** %45 to i64
  %91 = sub i64 %48, %90
  %92 = ashr exact i64 %91, 3
  %93 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %86, i64 %92
  %94 = icmp eq i64 %91, 0
  br i1 %94, label %170, label %95

95:                                               ; preds = %80
  %96 = add i64 %91, -8
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %116, label %101

101:                                              ; preds = %95, %101
  %102 = phi %"struct.std::__1::pair.1105"** [ %109, %101 ], [ %86, %95 ]
  %103 = phi i64 [ %110, %101 ], [ %87, %95 ]
  %104 = phi %"struct.std::__1::pair.1105"** [ %111, %101 ], [ %45, %95 ]
  %105 = phi i64 [ %112, %101 ], [ %99, %95 ]
  %106 = bitcast %"struct.std::__1::pair.1105"** %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %102, i64 1
  %110 = ptrtoint %"struct.std::__1::pair.1105"** %109 to i64
  %111 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %104, i64 1
  %112 = add i64 %105, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %101, !llvm.loop !105

114:                                              ; preds = %101
  %115 = ptrtoint %"struct.std::__1::pair.1105"** %109 to i64
  br label %116

116:                                              ; preds = %95, %114
  %117 = phi %"struct.std::__1::pair.1105"** [ %86, %95 ], [ %109, %114 ]
  %118 = phi i64 [ %87, %95 ], [ %115, %114 ]
  %119 = phi %"struct.std::__1::pair.1105"** [ %45, %95 ], [ %111, %114 ]
  %120 = icmp ult i64 %96, 56
  br i1 %120, label %167, label %121

121:                                              ; preds = %116, %121
  %122 = phi %"struct.std::__1::pair.1105"** [ %163, %121 ], [ %117, %116 ]
  %123 = phi i64 [ %164, %121 ], [ %118, %116 ]
  %124 = phi %"struct.std::__1::pair.1105"** [ %165, %121 ], [ %119, %116 ]
  %125 = bitcast %"struct.std::__1::pair.1105"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = inttoptr i64 %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %122, i64 1
  %129 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %124, i64 1
  %130 = bitcast %"struct.std::__1::pair.1105"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"struct.std::__1::pair.1105"** %128 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %122, i64 2
  %134 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %124, i64 2
  %135 = bitcast %"struct.std::__1::pair.1105"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"struct.std::__1::pair.1105"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %122, i64 3
  %139 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %124, i64 3
  %140 = bitcast %"struct.std::__1::pair.1105"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"struct.std::__1::pair.1105"** %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %122, i64 4
  %144 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %124, i64 4
  %145 = bitcast %"struct.std::__1::pair.1105"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"struct.std::__1::pair.1105"** %143 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %122, i64 5
  %149 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %124, i64 5
  %150 = bitcast %"struct.std::__1::pair.1105"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1105"** %148 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %122, i64 6
  %154 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %124, i64 6
  %155 = bitcast %"struct.std::__1::pair.1105"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"struct.std::__1::pair.1105"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %122, i64 7
  %159 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %124, i64 7
  %160 = bitcast %"struct.std::__1::pair.1105"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"struct.std::__1::pair.1105"** %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %122, i64 8
  %164 = ptrtoint %"struct.std::__1::pair.1105"** %163 to i64
  %165 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %124, i64 8
  %166 = icmp eq %"struct.std::__1::pair.1105"** %93, %163
  br i1 %166, label %167, label %121

167:                                              ; preds = %121, %116
  %168 = ptrtoint %"struct.std::__1::pair.1105"** %93 to i64
  %169 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %33, align 8
  br label %170

170:                                              ; preds = %167, %80
  %171 = phi %"struct.std::__1::pair.1105"** [ %169, %167 ], [ %51, %80 ]
  %172 = phi i64 [ %168, %167 ], [ %87, %80 ]
  store i64 %85, i64* %35, align 8
  store i64 %87, i64* %36, align 8
  store i64 %172, i64* %37, align 8
  store i64 %89, i64* %34, align 8
  %173 = icmp eq %"struct.std::__1::pair.1105"** %171, null
  %174 = inttoptr i64 %172 to i64*
  br i1 %173, label %178, label %175

175:                                              ; preds = %170
  %176 = bitcast %"struct.std::__1::pair.1105"** %171 to i8*
  tail call void @_ZdlPv(i8* %176) #12
  %177 = load i64*, i64** %38, align 8
  br label %178

178:                                              ; preds = %39, %68, %170, %175
  %179 = phi i64* [ %177, %175 ], [ %174, %170 ], [ %72, %68 ], [ %49, %39 ]
  store i64 %44, i64* %179, align 8
  %180 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %7, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %180, i64 1
  store %"struct.std::__1::pair.1105"** %181, %"struct.std::__1::pair.1105"*** %7, align 8
  %182 = add i64 %42, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %768, label %184

184:                                              ; preds = %178
  %185 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %9, align 8
  br label %39

186:                                              ; preds = %2
  %187 = ptrtoint %"struct.std::__1::pair.1105"** %10 to i64
  %188 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %189 = bitcast %"struct.std::__1::pair.1105"*** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::deque"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = ashr exact i64 %193, 3
  %195 = bitcast %"struct.std::__1::pair.1105"*** %7 to i64*
  %196 = bitcast %"struct.std::__1::pair.1105"*** %9 to i64*
  %197 = sub i64 %26, %187
  %198 = ashr exact i64 %197, 3
  %199 = sub nsw i64 %194, %198
  %200 = icmp ugt i64 %24, %199
  br i1 %200, label %391, label %201

201:                                              ; preds = %186
  %202 = bitcast %"struct.std::__1::pair.1105"** %3 to i8*
  %203 = bitcast %"struct.std::__1::pair.1105"** %3 to i8**
  %204 = icmp eq i64 %190, %26
  br i1 %204, label %214, label %205

205:                                              ; preds = %201, %210
  %206 = phi i64 [ %208, %210 ], [ %24, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #11
  %207 = call i8* @_Znwm(i64 4096) #12
  store i8* %207, i8** %203, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"* %6, %"struct.std::__1::pair.1105"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #11
  %208 = add i64 %206, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = load i64, i64* %189, align 8
  %212 = load i64, i64* %195, align 8
  %213 = icmp eq i64 %211, %212
  br i1 %213, label %214, label %205

214:                                              ; preds = %210, %201
  %215 = phi i64 [ %24, %201 ], [ %208, %210 ]
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %205, %214
  %218 = load i64, i64* %19, align 8
  br label %236

219:                                              ; preds = %214
  %220 = bitcast %"struct.std::__1::pair.1105"** %4 to i8*
  %221 = bitcast %"struct.std::__1::pair.1105"** %4 to i8**
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %215, %219 ], [ %225, %222 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #11
  %224 = call i8* @_Znwm(i64 4096) #12
  store i8* %224, i8** %221, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"* %6, %"struct.std::__1::pair.1105"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #11
  %225 = add i64 %223, -1
  %226 = load i64, i64* %195, align 8
  %227 = load i64, i64* %196, align 8
  %228 = sub i64 %226, %227
  %229 = icmp eq i64 %228, 8
  %230 = select i1 %229, i64 255, i64 256
  %231 = load i64, i64* %19, align 8
  %232 = add i64 %230, %231
  store i64 %232, i64* %19, align 8
  %233 = icmp eq i64 %225, 0
  br i1 %233, label %234, label %222

234:                                              ; preds = %222
  %235 = add i64 %215, %23
  br label %236

236:                                              ; preds = %217, %234
  %237 = phi i64 [ %218, %217 ], [ %232, %234 ]
  %238 = phi i64 [ %23, %217 ], [ %235, %234 ]
  %239 = shl i64 %238, 8
  %240 = sub i64 %237, %239
  store i64 %240, i64* %19, align 8
  %241 = icmp eq i64 %238, 0
  br i1 %241, label %768, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"struct.std::__1::pair.1105"*** %7 to i64**
  %245 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %7, align 8
  br label %246

246:                                              ; preds = %242, %385
  %247 = phi %"struct.std::__1::pair.1105"** [ %245, %242 ], [ %388, %385 ]
  %248 = phi i64 [ %238, %242 ], [ %389, %385 ]
  %249 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %9, align 8
  %250 = bitcast %"struct.std::__1::pair.1105"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %249, i64 1
  store %"struct.std::__1::pair.1105"** %252, %"struct.std::__1::pair.1105"*** %9, align 8
  %253 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %188, align 8
  %254 = icmp eq %"struct.std::__1::pair.1105"** %247, %253
  %255 = ptrtoint %"struct.std::__1::pair.1105"** %253 to i64
  %256 = bitcast %"struct.std::__1::pair.1105"** %247 to i64*
  br i1 %254, label %257, label %385

257:                                              ; preds = %246
  %258 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %243, align 8
  %259 = icmp ugt %"struct.std::__1::pair.1105"** %252, %258
  %260 = ptrtoint %"struct.std::__1::pair.1105"** %258 to i64
  br i1 %259, label %261, label %280

261:                                              ; preds = %257
  %262 = ptrtoint %"struct.std::__1::pair.1105"** %252 to i64
  %263 = sub i64 %262, %260
  %264 = ashr exact i64 %263, 3
  %265 = add nsw i64 %264, 1
  %266 = sdiv i64 %265, -2
  %267 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %252, i64 %266
  %268 = sub i64 %255, %262
  %269 = ashr exact i64 %268, 3
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %261
  %272 = bitcast %"struct.std::__1::pair.1105"** %267 to i8*
  %273 = bitcast %"struct.std::__1::pair.1105"** %252 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %268, i1 false) #11
  %274 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %9, align 8
  br label %275

275:                                              ; preds = %271, %261
  %276 = phi %"struct.std::__1::pair.1105"** [ %252, %261 ], [ %274, %271 ]
  %277 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %267, i64 %269
  store %"struct.std::__1::pair.1105"** %277, %"struct.std::__1::pair.1105"*** %7, align 8
  %278 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %276, i64 %266
  store %"struct.std::__1::pair.1105"** %278, %"struct.std::__1::pair.1105"*** %9, align 8
  %279 = bitcast %"struct.std::__1::pair.1105"** %277 to i64*
  br label %385

280:                                              ; preds = %257
  %281 = sub i64 %255, %260
  %282 = ashr exact i64 %281, 2
  %283 = icmp eq i64 %281, 0
  %284 = select i1 %283, i64 1, i64 %282
  %285 = icmp ugt i64 %284, 2305843009213693951
  br i1 %285, label %286, label %287

286:                                              ; preds = %280
  call void @abort() #13
  unreachable

287:                                              ; preds = %280
  %288 = lshr i64 %284, 2
  %289 = shl i64 %284, 3
  %290 = call i8* @_Znwm(i64 %289) #12
  %291 = bitcast i8* %290 to %"struct.std::__1::pair.1105"**
  %292 = ptrtoint i8* %290 to i64
  %293 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %291, i64 %288
  %294 = ptrtoint %"struct.std::__1::pair.1105"** %293 to i64
  %295 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %291, i64 %284
  %296 = ptrtoint %"struct.std::__1::pair.1105"** %295 to i64
  %297 = ptrtoint %"struct.std::__1::pair.1105"** %252 to i64
  %298 = sub i64 %255, %297
  %299 = ashr exact i64 %298, 3
  %300 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %293, i64 %299
  %301 = icmp eq i64 %298, 0
  br i1 %301, label %377, label %302

302:                                              ; preds = %287
  %303 = add i64 %298, -8
  %304 = lshr i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %323, label %308

308:                                              ; preds = %302, %308
  %309 = phi %"struct.std::__1::pair.1105"** [ %316, %308 ], [ %293, %302 ]
  %310 = phi i64 [ %317, %308 ], [ %294, %302 ]
  %311 = phi %"struct.std::__1::pair.1105"** [ %318, %308 ], [ %252, %302 ]
  %312 = phi i64 [ %319, %308 ], [ %306, %302 ]
  %313 = bitcast %"struct.std::__1::pair.1105"** %311 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = inttoptr i64 %310 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %309, i64 1
  %317 = ptrtoint %"struct.std::__1::pair.1105"** %316 to i64
  %318 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %311, i64 1
  %319 = add i64 %312, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %308, !llvm.loop !106

321:                                              ; preds = %308
  %322 = ptrtoint %"struct.std::__1::pair.1105"** %316 to i64
  br label %323

323:                                              ; preds = %302, %321
  %324 = phi %"struct.std::__1::pair.1105"** [ %293, %302 ], [ %316, %321 ]
  %325 = phi i64 [ %294, %302 ], [ %322, %321 ]
  %326 = phi %"struct.std::__1::pair.1105"** [ %252, %302 ], [ %318, %321 ]
  %327 = icmp ult i64 %303, 56
  br i1 %327, label %374, label %328

328:                                              ; preds = %323, %328
  %329 = phi %"struct.std::__1::pair.1105"** [ %370, %328 ], [ %324, %323 ]
  %330 = phi i64 [ %371, %328 ], [ %325, %323 ]
  %331 = phi %"struct.std::__1::pair.1105"** [ %372, %328 ], [ %326, %323 ]
  %332 = bitcast %"struct.std::__1::pair.1105"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = inttoptr i64 %330 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %329, i64 1
  %336 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %331, i64 1
  %337 = bitcast %"struct.std::__1::pair.1105"** %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"struct.std::__1::pair.1105"** %335 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %329, i64 2
  %341 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %331, i64 2
  %342 = bitcast %"struct.std::__1::pair.1105"** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"struct.std::__1::pair.1105"** %340 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %329, i64 3
  %346 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %331, i64 3
  %347 = bitcast %"struct.std::__1::pair.1105"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"struct.std::__1::pair.1105"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %329, i64 4
  %351 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %331, i64 4
  %352 = bitcast %"struct.std::__1::pair.1105"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"struct.std::__1::pair.1105"** %350 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %329, i64 5
  %356 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %331, i64 5
  %357 = bitcast %"struct.std::__1::pair.1105"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"struct.std::__1::pair.1105"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %329, i64 6
  %361 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %331, i64 6
  %362 = bitcast %"struct.std::__1::pair.1105"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"struct.std::__1::pair.1105"** %360 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %329, i64 7
  %366 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %331, i64 7
  %367 = bitcast %"struct.std::__1::pair.1105"** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"struct.std::__1::pair.1105"** %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %329, i64 8
  %371 = ptrtoint %"struct.std::__1::pair.1105"** %370 to i64
  %372 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %331, i64 8
  %373 = icmp eq %"struct.std::__1::pair.1105"** %300, %370
  br i1 %373, label %374, label %328

374:                                              ; preds = %328, %323
  %375 = ptrtoint %"struct.std::__1::pair.1105"** %300 to i64
  %376 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %243, align 8
  br label %377

377:                                              ; preds = %374, %287
  %378 = phi %"struct.std::__1::pair.1105"** [ %376, %374 ], [ %258, %287 ]
  %379 = phi i64 [ %375, %374 ], [ %294, %287 ]
  store i64 %292, i64* %191, align 8
  store i64 %294, i64* %196, align 8
  store i64 %379, i64* %195, align 8
  store i64 %296, i64* %189, align 8
  %380 = icmp eq %"struct.std::__1::pair.1105"** %378, null
  %381 = inttoptr i64 %379 to i64*
  br i1 %380, label %385, label %382

382:                                              ; preds = %377
  %383 = bitcast %"struct.std::__1::pair.1105"** %378 to i8*
  call void @_ZdlPv(i8* %383) #12
  %384 = load i64*, i64** %244, align 8
  br label %385

385:                                              ; preds = %246, %275, %377, %382
  %386 = phi i64* [ %384, %382 ], [ %381, %377 ], [ %279, %275 ], [ %256, %246 ]
  store i64 %251, i64* %386, align 8
  %387 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %7, align 8
  %388 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %387, i64 1
  store %"struct.std::__1::pair.1105"** %388, %"struct.std::__1::pair.1105"*** %7, align 8
  %389 = add i64 %248, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %768, label %246

391:                                              ; preds = %186
  %392 = shl nuw i64 %23, 8
  %393 = bitcast %"struct.std::__1::__split_buffer.1335"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #11
  %394 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %5, i64 0, i32 0
  %395 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %5, i64 0, i32 1
  %396 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %5, i64 0, i32 2
  %397 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %5, i64 0, i32 3, i32 0, i32 0
  %398 = getelementptr inbounds %"struct.std::__1::__split_buffer.1335", %"struct.std::__1::__split_buffer.1335"* %5, i64 0, i32 3, i32 1, i32 0
  %399 = ashr exact i64 %193, 2
  %400 = add nsw i64 %198, %24
  %401 = icmp ult i64 %399, %400
  %402 = select i1 %401, i64 %400, i64 %399
  %403 = sub nsw i64 %198, %23
  %404 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %405 = bitcast %"struct.std::__1::__split_buffer.1335"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %405, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1105"** null, %"struct.std::__1::pair.1105"*** %397, align 8
  %406 = bitcast %"class.std::__1::allocator.1109"** %398 to %"class.std::__1::__compressed_pair.1106"**
  store %"class.std::__1::__compressed_pair.1106"* %404, %"class.std::__1::__compressed_pair.1106"** %406, align 8
  %407 = icmp eq i64 %402, 0
  br i1 %407, label %415, label %408

408:                                              ; preds = %391
  %409 = icmp ugt i64 %402, 2305843009213693951
  br i1 %409, label %410, label %411

410:                                              ; preds = %408
  tail call void @abort() #13
  unreachable

411:                                              ; preds = %408
  %412 = shl i64 %402, 3
  %413 = tail call i8* @_Znwm(i64 %412) #12
  %414 = bitcast i8* %413 to %"struct.std::__1::pair.1105"**
  br label %415

415:                                              ; preds = %411, %391
  %416 = phi %"struct.std::__1::pair.1105"** [ %414, %411 ], [ null, %391 ]
  store %"struct.std::__1::pair.1105"** %416, %"struct.std::__1::pair.1105"*** %394, align 16
  %417 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %416, i64 %403
  store %"struct.std::__1::pair.1105"** %417, %"struct.std::__1::pair.1105"*** %396, align 16
  store %"struct.std::__1::pair.1105"** %417, %"struct.std::__1::pair.1105"*** %395, align 8
  %418 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %416, i64 %402
  store %"struct.std::__1::pair.1105"** %418, %"struct.std::__1::pair.1105"*** %397, align 8
  %419 = bitcast %"struct.std::__1::pair.1105"*** %397 to i64*
  %420 = bitcast %"struct.std::__1::__split_buffer.1335"* %5 to i64*
  %421 = bitcast %"struct.std::__1::pair.1105"*** %395 to i64*
  %422 = bitcast %"struct.std::__1::pair.1105"*** %396 to i64*
  br label %434

423:                                              ; preds = %568
  %424 = icmp eq i64 %23, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %9, align 8
  br label %719

427:                                              ; preds = %423
  %428 = bitcast %"struct.std::__1::pair.1105"*** %9 to i64**
  %429 = bitcast %"struct.std::__1::pair.1105"*** %397 to i64*
  %430 = bitcast %"struct.std::__1::__split_buffer.1335"* %5 to i64*
  %431 = bitcast %"struct.std::__1::pair.1105"*** %395 to i64*
  %432 = bitcast %"struct.std::__1::pair.1105"*** %396 to i64*
  %433 = load i64*, i64** %428, align 8
  br label %576

434:                                              ; preds = %574, %415
  %435 = phi %"struct.std::__1::pair.1105"** [ %418, %415 ], [ %575, %574 ]
  %436 = phi %"struct.std::__1::pair.1105"** [ %417, %415 ], [ %571, %574 ]
  %437 = phi i64 [ %24, %415 ], [ %572, %574 ]
  %438 = tail call i8* @_Znwm(i64 4096) #12
  %439 = ptrtoint i8* %438 to i64
  %440 = icmp eq %"struct.std::__1::pair.1105"** %436, %435
  %441 = ptrtoint %"struct.std::__1::pair.1105"** %435 to i64
  %442 = bitcast %"struct.std::__1::pair.1105"** %436 to i64*
  br i1 %440, label %443, label %568

443:                                              ; preds = %434
  %444 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %395, align 8
  %445 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %394, align 16
  %446 = icmp ugt %"struct.std::__1::pair.1105"** %444, %445
  %447 = ptrtoint %"struct.std::__1::pair.1105"** %445 to i64
  br i1 %446, label %448, label %464

448:                                              ; preds = %443
  %449 = ptrtoint %"struct.std::__1::pair.1105"** %444 to i64
  %450 = sub i64 %449, %447
  %451 = ashr exact i64 %450, 3
  %452 = add nsw i64 %451, 1
  %453 = sdiv i64 %452, -2
  %454 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %444, i64 %453
  %455 = sub i64 %441, %449
  %456 = ashr exact i64 %455, 3
  %457 = icmp eq i64 %455, 0
  br i1 %457, label %461, label %458

458:                                              ; preds = %448
  %459 = bitcast %"struct.std::__1::pair.1105"** %454 to i8*
  %460 = bitcast %"struct.std::__1::pair.1105"** %444 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %459, i8* align 8 %460, i64 %455, i1 false) #11
  br label %461

461:                                              ; preds = %458, %448
  %462 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %454, i64 %456
  store %"struct.std::__1::pair.1105"** %462, %"struct.std::__1::pair.1105"*** %396, align 16
  store %"struct.std::__1::pair.1105"** %454, %"struct.std::__1::pair.1105"*** %395, align 8
  %463 = bitcast %"struct.std::__1::pair.1105"** %462 to i64*
  br label %568

464:                                              ; preds = %443
  %465 = sub i64 %441, %447
  %466 = ashr exact i64 %465, 2
  %467 = icmp eq i64 %465, 0
  %468 = select i1 %467, i64 1, i64 %466
  %469 = icmp ugt i64 %468, 2305843009213693951
  br i1 %469, label %470, label %471

470:                                              ; preds = %464
  tail call void @abort() #13
  unreachable

471:                                              ; preds = %464
  %472 = lshr i64 %468, 2
  %473 = shl i64 %468, 3
  %474 = tail call i8* @_Znwm(i64 %473) #12
  %475 = bitcast i8* %474 to %"struct.std::__1::pair.1105"**
  %476 = ptrtoint i8* %474 to i64
  %477 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %475, i64 %472
  %478 = ptrtoint %"struct.std::__1::pair.1105"** %477 to i64
  %479 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %475, i64 %468
  %480 = ptrtoint %"struct.std::__1::pair.1105"** %479 to i64
  %481 = ptrtoint %"struct.std::__1::pair.1105"** %444 to i64
  %482 = sub i64 %441, %481
  %483 = ashr exact i64 %482, 3
  %484 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %477, i64 %483
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %561, label %486

486:                                              ; preds = %471
  %487 = add i64 %482, -8
  %488 = lshr i64 %487, 3
  %489 = add nuw nsw i64 %488, 1
  %490 = and i64 %489, 7
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %507, label %492

492:                                              ; preds = %486, %492
  %493 = phi %"struct.std::__1::pair.1105"** [ %500, %492 ], [ %477, %486 ]
  %494 = phi i64 [ %501, %492 ], [ %478, %486 ]
  %495 = phi %"struct.std::__1::pair.1105"** [ %502, %492 ], [ %444, %486 ]
  %496 = phi i64 [ %503, %492 ], [ %490, %486 ]
  %497 = bitcast %"struct.std::__1::pair.1105"** %495 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = inttoptr i64 %494 to i64*
  store i64 %498, i64* %499, align 8
  %500 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %493, i64 1
  %501 = ptrtoint %"struct.std::__1::pair.1105"** %500 to i64
  %502 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %495, i64 1
  %503 = add i64 %496, -1
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %492, !llvm.loop !107

505:                                              ; preds = %492
  %506 = ptrtoint %"struct.std::__1::pair.1105"** %500 to i64
  br label %507

507:                                              ; preds = %486, %505
  %508 = phi %"struct.std::__1::pair.1105"** [ %477, %486 ], [ %500, %505 ]
  %509 = phi i64 [ %478, %486 ], [ %506, %505 ]
  %510 = phi %"struct.std::__1::pair.1105"** [ %444, %486 ], [ %502, %505 ]
  %511 = icmp ult i64 %487, 56
  br i1 %511, label %558, label %512

512:                                              ; preds = %507, %512
  %513 = phi %"struct.std::__1::pair.1105"** [ %554, %512 ], [ %508, %507 ]
  %514 = phi i64 [ %555, %512 ], [ %509, %507 ]
  %515 = phi %"struct.std::__1::pair.1105"** [ %556, %512 ], [ %510, %507 ]
  %516 = bitcast %"struct.std::__1::pair.1105"** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = inttoptr i64 %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %513, i64 1
  %520 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %515, i64 1
  %521 = bitcast %"struct.std::__1::pair.1105"** %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast %"struct.std::__1::pair.1105"** %519 to i64*
  store i64 %522, i64* %523, align 8
  %524 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %513, i64 2
  %525 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %515, i64 2
  %526 = bitcast %"struct.std::__1::pair.1105"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"struct.std::__1::pair.1105"** %524 to i64*
  store i64 %527, i64* %528, align 8
  %529 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %513, i64 3
  %530 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %515, i64 3
  %531 = bitcast %"struct.std::__1::pair.1105"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"struct.std::__1::pair.1105"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %513, i64 4
  %535 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %515, i64 4
  %536 = bitcast %"struct.std::__1::pair.1105"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"struct.std::__1::pair.1105"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %513, i64 5
  %540 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %515, i64 5
  %541 = bitcast %"struct.std::__1::pair.1105"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"struct.std::__1::pair.1105"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %513, i64 6
  %545 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %515, i64 6
  %546 = bitcast %"struct.std::__1::pair.1105"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"struct.std::__1::pair.1105"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %513, i64 7
  %550 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %515, i64 7
  %551 = bitcast %"struct.std::__1::pair.1105"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"struct.std::__1::pair.1105"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %513, i64 8
  %555 = ptrtoint %"struct.std::__1::pair.1105"** %554 to i64
  %556 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %515, i64 8
  %557 = icmp eq %"struct.std::__1::pair.1105"** %484, %554
  br i1 %557, label %558, label %512

558:                                              ; preds = %512, %507
  %559 = ptrtoint %"struct.std::__1::pair.1105"** %484 to i64
  %560 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %394, align 16
  br label %561

561:                                              ; preds = %558, %471
  %562 = phi %"struct.std::__1::pair.1105"** [ %560, %558 ], [ %445, %471 ]
  %563 = phi i64 [ %559, %558 ], [ %478, %471 ]
  store i64 %476, i64* %420, align 16
  store i64 %478, i64* %421, align 8
  store i64 %563, i64* %422, align 16
  store i64 %480, i64* %419, align 8
  %564 = icmp eq %"struct.std::__1::pair.1105"** %562, null
  %565 = inttoptr i64 %563 to i64*
  br i1 %564, label %568, label %566

566:                                              ; preds = %561
  %567 = bitcast %"struct.std::__1::pair.1105"** %562 to i8*
  tail call void @_ZdlPv(i8* %567) #12
  br label %568

568:                                              ; preds = %434, %461, %561, %566
  %569 = phi i64* [ %565, %566 ], [ %565, %561 ], [ %463, %461 ], [ %442, %434 ]
  store i64 %439, i64* %569, align 8
  %570 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %396, align 16
  %571 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %570, i64 1
  store %"struct.std::__1::pair.1105"** %571, %"struct.std::__1::pair.1105"*** %396, align 16
  %572 = add i64 %437, -1
  %573 = icmp eq i64 %572, 0
  br i1 %573, label %423, label %574

574:                                              ; preds = %568
  %575 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %397, align 8
  br label %434

576:                                              ; preds = %427, %709
  %577 = phi %"struct.std::__1::pair.1105"** [ %571, %427 ], [ %713, %709 ]
  %578 = phi i64* [ %433, %427 ], [ %718, %709 ]
  %579 = phi i64 [ %23, %427 ], [ %716, %709 ]
  %580 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %397, align 8
  %581 = icmp eq %"struct.std::__1::pair.1105"** %577, %580
  %582 = ptrtoint %"struct.std::__1::pair.1105"** %580 to i64
  %583 = bitcast %"struct.std::__1::pair.1105"** %577 to i64*
  br i1 %581, label %584, label %709

584:                                              ; preds = %576
  %585 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %395, align 8
  %586 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %394, align 16
  %587 = icmp ugt %"struct.std::__1::pair.1105"** %585, %586
  %588 = ptrtoint %"struct.std::__1::pair.1105"** %586 to i64
  br i1 %587, label %589, label %605

589:                                              ; preds = %584
  %590 = ptrtoint %"struct.std::__1::pair.1105"** %585 to i64
  %591 = sub i64 %590, %588
  %592 = ashr exact i64 %591, 3
  %593 = add nsw i64 %592, 1
  %594 = sdiv i64 %593, -2
  %595 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %585, i64 %594
  %596 = sub i64 %582, %590
  %597 = ashr exact i64 %596, 3
  %598 = icmp eq i64 %596, 0
  br i1 %598, label %602, label %599

599:                                              ; preds = %589
  %600 = bitcast %"struct.std::__1::pair.1105"** %595 to i8*
  %601 = bitcast %"struct.std::__1::pair.1105"** %585 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %600, i8* align 8 %601, i64 %596, i1 false) #11
  br label %602

602:                                              ; preds = %599, %589
  %603 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %595, i64 %597
  store %"struct.std::__1::pair.1105"** %603, %"struct.std::__1::pair.1105"*** %396, align 16
  store %"struct.std::__1::pair.1105"** %595, %"struct.std::__1::pair.1105"*** %395, align 8
  %604 = bitcast %"struct.std::__1::pair.1105"** %603 to i64*
  br label %709

605:                                              ; preds = %584
  %606 = sub i64 %582, %588
  %607 = ashr exact i64 %606, 2
  %608 = icmp eq i64 %606, 0
  %609 = select i1 %608, i64 1, i64 %607
  %610 = icmp ugt i64 %609, 2305843009213693951
  br i1 %610, label %611, label %612

611:                                              ; preds = %605
  tail call void @abort() #13
  unreachable

612:                                              ; preds = %605
  %613 = lshr i64 %609, 2
  %614 = shl i64 %609, 3
  %615 = tail call i8* @_Znwm(i64 %614) #12
  %616 = bitcast i8* %615 to %"struct.std::__1::pair.1105"**
  %617 = ptrtoint i8* %615 to i64
  %618 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %616, i64 %613
  %619 = ptrtoint %"struct.std::__1::pair.1105"** %618 to i64
  %620 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %616, i64 %609
  %621 = ptrtoint %"struct.std::__1::pair.1105"** %620 to i64
  %622 = ptrtoint %"struct.std::__1::pair.1105"** %585 to i64
  %623 = sub i64 %582, %622
  %624 = ashr exact i64 %623, 3
  %625 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %618, i64 %624
  %626 = icmp eq i64 %623, 0
  br i1 %626, label %702, label %627

627:                                              ; preds = %612
  %628 = add i64 %623, -8
  %629 = lshr i64 %628, 3
  %630 = add nuw nsw i64 %629, 1
  %631 = and i64 %630, 7
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %648, label %633

633:                                              ; preds = %627, %633
  %634 = phi %"struct.std::__1::pair.1105"** [ %641, %633 ], [ %618, %627 ]
  %635 = phi i64 [ %642, %633 ], [ %619, %627 ]
  %636 = phi %"struct.std::__1::pair.1105"** [ %643, %633 ], [ %585, %627 ]
  %637 = phi i64 [ %644, %633 ], [ %631, %627 ]
  %638 = bitcast %"struct.std::__1::pair.1105"** %636 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = inttoptr i64 %635 to i64*
  store i64 %639, i64* %640, align 8
  %641 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %634, i64 1
  %642 = ptrtoint %"struct.std::__1::pair.1105"** %641 to i64
  %643 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %636, i64 1
  %644 = add i64 %637, -1
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %646, label %633, !llvm.loop !108

646:                                              ; preds = %633
  %647 = ptrtoint %"struct.std::__1::pair.1105"** %641 to i64
  br label %648

648:                                              ; preds = %627, %646
  %649 = phi %"struct.std::__1::pair.1105"** [ %618, %627 ], [ %641, %646 ]
  %650 = phi i64 [ %619, %627 ], [ %647, %646 ]
  %651 = phi %"struct.std::__1::pair.1105"** [ %585, %627 ], [ %643, %646 ]
  %652 = icmp ult i64 %628, 56
  br i1 %652, label %699, label %653

653:                                              ; preds = %648, %653
  %654 = phi %"struct.std::__1::pair.1105"** [ %695, %653 ], [ %649, %648 ]
  %655 = phi i64 [ %696, %653 ], [ %650, %648 ]
  %656 = phi %"struct.std::__1::pair.1105"** [ %697, %653 ], [ %651, %648 ]
  %657 = bitcast %"struct.std::__1::pair.1105"** %656 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = inttoptr i64 %655 to i64*
  store i64 %658, i64* %659, align 8
  %660 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %654, i64 1
  %661 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %656, i64 1
  %662 = bitcast %"struct.std::__1::pair.1105"** %661 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = bitcast %"struct.std::__1::pair.1105"** %660 to i64*
  store i64 %663, i64* %664, align 8
  %665 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %654, i64 2
  %666 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %656, i64 2
  %667 = bitcast %"struct.std::__1::pair.1105"** %666 to i64*
  %668 = load i64, i64* %667, align 8
  %669 = bitcast %"struct.std::__1::pair.1105"** %665 to i64*
  store i64 %668, i64* %669, align 8
  %670 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %654, i64 3
  %671 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %656, i64 3
  %672 = bitcast %"struct.std::__1::pair.1105"** %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = bitcast %"struct.std::__1::pair.1105"** %670 to i64*
  store i64 %673, i64* %674, align 8
  %675 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %654, i64 4
  %676 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %656, i64 4
  %677 = bitcast %"struct.std::__1::pair.1105"** %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = bitcast %"struct.std::__1::pair.1105"** %675 to i64*
  store i64 %678, i64* %679, align 8
  %680 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %654, i64 5
  %681 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %656, i64 5
  %682 = bitcast %"struct.std::__1::pair.1105"** %681 to i64*
  %683 = load i64, i64* %682, align 8
  %684 = bitcast %"struct.std::__1::pair.1105"** %680 to i64*
  store i64 %683, i64* %684, align 8
  %685 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %654, i64 6
  %686 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %656, i64 6
  %687 = bitcast %"struct.std::__1::pair.1105"** %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast %"struct.std::__1::pair.1105"** %685 to i64*
  store i64 %688, i64* %689, align 8
  %690 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %654, i64 7
  %691 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %656, i64 7
  %692 = bitcast %"struct.std::__1::pair.1105"** %691 to i64*
  %693 = load i64, i64* %692, align 8
  %694 = bitcast %"struct.std::__1::pair.1105"** %690 to i64*
  store i64 %693, i64* %694, align 8
  %695 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %654, i64 8
  %696 = ptrtoint %"struct.std::__1::pair.1105"** %695 to i64
  %697 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %656, i64 8
  %698 = icmp eq %"struct.std::__1::pair.1105"** %625, %695
  br i1 %698, label %699, label %653

699:                                              ; preds = %653, %648
  %700 = ptrtoint %"struct.std::__1::pair.1105"** %625 to i64
  %701 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %394, align 16
  br label %702

702:                                              ; preds = %699, %612
  %703 = phi %"struct.std::__1::pair.1105"** [ %701, %699 ], [ %586, %612 ]
  %704 = phi i64 [ %700, %699 ], [ %619, %612 ]
  store i64 %617, i64* %430, align 16
  store i64 %619, i64* %431, align 8
  store i64 %704, i64* %432, align 16
  store i64 %621, i64* %429, align 8
  %705 = icmp eq %"struct.std::__1::pair.1105"** %703, null
  %706 = inttoptr i64 %704 to i64*
  br i1 %705, label %709, label %707

707:                                              ; preds = %702
  %708 = bitcast %"struct.std::__1::pair.1105"** %703 to i8*
  tail call void @_ZdlPv(i8* %708) #12
  br label %709

709:                                              ; preds = %576, %602, %702, %707
  %710 = phi i64* [ %706, %707 ], [ %706, %702 ], [ %604, %602 ], [ %583, %576 ]
  %711 = load i64, i64* %578, align 8
  store i64 %711, i64* %710, align 8
  %712 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %396, align 16
  %713 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %712, i64 1
  store %"struct.std::__1::pair.1105"** %713, %"struct.std::__1::pair.1105"*** %396, align 16
  %714 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %9, align 8
  %715 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %714, i64 1
  store %"struct.std::__1::pair.1105"** %715, %"struct.std::__1::pair.1105"*** %9, align 8
  %716 = add i64 %579, -1
  %717 = icmp eq i64 %716, 0
  %718 = bitcast %"struct.std::__1::pair.1105"** %715 to i64*
  br i1 %717, label %719, label %576

719:                                              ; preds = %709, %425
  %720 = phi %"struct.std::__1::pair.1105"** [ %571, %425 ], [ %713, %709 ]
  %721 = phi %"struct.std::__1::pair.1105"** [ %426, %425 ], [ %715, %709 ]
  %722 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %7, align 8
  %723 = icmp eq %"struct.std::__1::pair.1105"** %722, %721
  br i1 %723, label %724, label %763

724:                                              ; preds = %719
  %725 = ptrtoint %"struct.std::__1::pair.1105"** %722 to i64
  %726 = ptrtoint %"struct.std::__1::pair.1105"** %720 to i64
  %727 = bitcast %"struct.std::__1::pair.1105"*** %396 to i64*
  br label %732

728:                                              ; preds = %763
  %729 = load i64, i64* %195, align 8
  %730 = bitcast %"struct.std::__1::pair.1105"*** %396 to i64*
  %731 = load i64, i64* %730, align 16
  br label %732

732:                                              ; preds = %724, %728
  %733 = phi i64* [ %727, %724 ], [ %730, %728 ]
  %734 = phi i64 [ %726, %724 ], [ %731, %728 ]
  %735 = phi i64 [ %725, %724 ], [ %729, %728 ]
  %736 = phi %"struct.std::__1::pair.1105"** [ %721, %724 ], [ %766, %728 ]
  %737 = ptrtoint %"struct.std::__1::pair.1105"** %736 to i64
  %738 = load i64, i64* %191, align 8
  %739 = bitcast %"struct.std::__1::__split_buffer.1335"* %5 to i64*
  %740 = bitcast %"struct.std::__1::pair.1105"*** %395 to i64*
  %741 = bitcast %"struct.std::__1::__split_buffer.1335"* %5 to <2 x i64>*
  %742 = load <2 x i64>, <2 x i64>* %741, align 16
  store i64 %738, i64* %739, align 16
  %743 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %742, <2 x i64>* %743, align 8
  store i64 %737, i64* %740, align 8
  store i64 %734, i64* %195, align 8
  store i64 %735, i64* %733, align 8
  %744 = load i64, i64* %189, align 8
  %745 = bitcast %"struct.std::__1::pair.1105"*** %397 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %189, align 8
  store i64 %744, i64* %745, align 8
  %747 = load i64, i64* %19, align 8
  %748 = sub i64 %747, %392
  store i64 %748, i64* %19, align 8
  %749 = inttoptr i64 %735 to %"struct.std::__1::pair.1105"**
  %750 = icmp eq %"struct.std::__1::pair.1105"** %736, %749
  br i1 %750, label %758, label %751

751:                                              ; preds = %732
  %752 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %749, i64 -1
  %753 = ptrtoint %"struct.std::__1::pair.1105"** %752 to i64
  %754 = sub i64 %753, %737
  %755 = lshr i64 %754, 3
  %756 = xor i64 %755, -1
  %757 = getelementptr %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %749, i64 %756
  store %"struct.std::__1::pair.1105"** %757, %"struct.std::__1::pair.1105"*** %396, align 16
  br label %758

758:                                              ; preds = %751, %732
  %759 = icmp eq i64 %738, 0
  br i1 %759, label %762, label %760

760:                                              ; preds = %758
  %761 = inttoptr i64 %738 to i8*
  call void @_ZdlPv(i8* %761) #12
  br label %762

762:                                              ; preds = %758, %760
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #11
  br label %768

763:                                              ; preds = %719, %763
  %764 = phi %"struct.std::__1::pair.1105"** [ %765, %763 ], [ %722, %719 ]
  %765 = getelementptr inbounds %"struct.std::__1::pair.1105"*, %"struct.std::__1::pair.1105"** %764, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1335"* nonnull %5, %"struct.std::__1::pair.1105"** dereferenceable(8) %765)
  %766 = load %"struct.std::__1::pair.1105"**, %"struct.std::__1::pair.1105"*** %9, align 8
  %767 = icmp eq %"struct.std::__1::pair.1105"** %765, %766
  br i1 %767, label %728, label %763

768:                                              ; preds = %385, %178, %236, %27, %762
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1082"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1078"*, %"class.spvtools::opt::Loop"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1416"* dereferenceable(8), %"class.std::__1::tuple.1172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Loop"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Loop"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.1082"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.1082"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1082"* %65 to %"class.spvtools::opt::Loop"**
  %67 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Loop"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !109
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1416"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !109
  %75 = load i64, i64* %74, align 8, !noalias !109
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !109
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %78, align 8, !noalias !109
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !109
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1082"**
  store %"struct.std::__1::__hash_node_base.1082"* null, %"struct.std::__1::__hash_node_base.1082"** %81, align 8, !noalias !109
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !2
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1078"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !2
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.1078", %"class.std::__1::__hash_table.1078"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.1082"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.1082"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.1082"* %124, %"struct.std::__1::__hash_node_base.1082"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.1082"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082", %"struct.std::__1::__hash_node_base.1082"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.1082"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !2
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.1082"**, %"struct.std::__1::__hash_node_base.1082"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1082"*, %"struct.std::__1::__hash_node_base.1082"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.1082"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.1082"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.1082"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1082"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.1082"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.1082"*, i8 } undef, %"struct.std::__1::__hash_node_base.1082"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.1082"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.1082"*, i8 } %164
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_11CodeMetrics7AnalyzeERKNS3_4LoopEE3$_7S7_EEEEvPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #9 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %19 [
    i32 248, label %24
    i32 0, label %5
    i32 245, label %24
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %19

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %15 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %17 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %18 = icmp eq %"struct.spvtools::opt::Operand"* %15, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %13, %9, %5, %2
  %20 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i64**
  %21 = load i64*, i64** %20, align 8
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %21, align 8
  br label %24

24:                                               ; preds = %2, %2, %13, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1122"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1118"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1363"* dereferenceable(8), %"class.std::__1::tuple.1172"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.1122"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1122"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.1122"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !112
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1363", %"class.std::__1::tuple.1363"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !112
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !112
  store i32 %62, i32* %61, align 8, !noalias !112
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to i64*
  store i64 0, i64* %64, align 8, !noalias !112
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !112
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.1122"**
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %67, align 8, !noalias !112
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !2
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.1118"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !2
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.1122"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.1122"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.1122"* %110, %"struct.std::__1::__hash_node_base.1122"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.1122"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !2
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.1122"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.1122"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.1122"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.1122"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.1122"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.1122"*, i8 } undef, %"struct.std::__1::__hash_node_base.1122"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.1122"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.1122"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.1118"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1118"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1118"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.1118"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1118"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1122"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1122"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1124", %"class.std::__1::__bucket_list_deallocator.1124"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !115

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1122"* null, %"struct.std::__1::__hash_node_base.1122"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1122"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1122"* %36, %"struct.std::__1::__hash_node_base.1122"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1122"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1122"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1122"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1122"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1122"* %82, %"struct.std::__1::__hash_node_base.1122"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1122"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1122"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1122"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1122"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1122"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1122"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1122"* %80, %"struct.std::__1::__hash_node_base.1122"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1122"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1122", %"struct.std::__1::__hash_node_base.1122"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1122"*, %"struct.std::__1::__hash_node_base.1122"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1122"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1118", %"class.std::__1::__hash_table.1118"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1122"**, %"struct.std::__1::__hash_node_base.1122"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1122"** null, %"struct.std::__1::__hash_node_base.1122"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1122"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1122"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1124", %"class.std::__1::__bucket_list_deallocator.1124"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{i8 0, i8 2}
!4 = !{!5, !7}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!7 = distinct !{!7, !8, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!14 = distinct !{!14, !15, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS5_9IRContextEPNS5_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSB_IPNS5_10BasicBlockENSC_ISM_EENSE_ISM_EENSG_ISM_EEEEPNS6_13LCSSARewriterEEUlPNS5_11InstructionEjE_FvSW_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS5_9IRContextEPNS5_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSB_IPNS5_10BasicBlockENSC_ISM_EENSE_ISM_EENSG_ISM_EEEEPNS6_13LCSSARewriterEEUlPNS5_11InstructionEjE_FvSW_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZNK8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEE5beginEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEE3endEv: argument 0"}
!21 = distinct !{!21, !"_ZNK8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_4LoopEEEE3endEv"}
!22 = distinct !{!22, !10}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!26 = distinct !{!26, !10}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!30 = distinct !{!30, !10}
!31 = distinct !{!31, !10}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!34 = distinct !{!34, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!35 = distinct !{!35, !10}
!36 = !{!37, !39, !41}
!37 = distinct !{!37, !38, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!38 = distinct !{!38, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!39 = distinct !{!39, !40, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!40 = distinct !{!40, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!41 = distinct !{!41, !42, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!42 = distinct !{!42, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!43 = !{!44, !46, !48}
!44 = distinct !{!44, !45, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!45 = distinct !{!45, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!46 = distinct !{!46, !47, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!47 = distinct !{!47, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!48 = distinct !{!48, !49, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!49 = distinct !{!49, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!53 = distinct !{!53, !10}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_: argument 0"}
!56 = distinct !{!56, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_"}
!57 = distinct !{!57, !10}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!61 = distinct !{!61, !10}
!62 = !{!63, !65}
!63 = distinct !{!63, !64, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!65 = distinct !{!65, !66, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS5_9IRContextEPNS5_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSB_IPNS5_10BasicBlockENSC_ISM_EENSE_ISM_EENSG_ISM_EEEEPNS6_13LCSSARewriterEEUlPNS5_11InstructionEjE_FvSW_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_116MakeSetClosedSSAEPNS5_9IRContextEPNS5_8FunctionERKNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEERKNSB_IPNS5_10BasicBlockENSC_ISM_EENSE_ISM_EENSG_ISM_EEEEPNS6_13LCSSARewriterEEUlPNS5_11InstructionEjE_FvSW_jEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!67 = distinct !{!67, !10}
!68 = distinct !{!68, !10}
!69 = distinct !{!69, !10}
!70 = distinct !{!70, !10}
!71 = distinct !{!71, !10}
!72 = distinct !{!72, !10}
!73 = distinct !{!73, !10}
!74 = distinct !{!74, !10}
!75 = distinct !{!75, !10}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!78 = distinct !{!78, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!79 = distinct !{!79, !10}
!80 = !{!81, !83}
!81 = distinct !{!81, !82, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!83 = distinct !{!83, !84, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!84 = distinct !{!84, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt9LoopUtils24CreateLoopDedicatedExitsEvE3$_2FvPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_: argument 0"}
!87 = distinct !{!87, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISG_EEEEEEmOT_DpOT0_"}
!88 = distinct !{!88, !10}
!89 = distinct !{!89, !10}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!92 = distinct !{!92, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!95 = distinct !{!95, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
!96 = distinct !{!96, !10}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!99 = distinct !{!99, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!100 = distinct !{!100, !10}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!103 = distinct !{!103, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!104 = distinct !{!104, !10}
!105 = distinct !{!105, !10}
!106 = distinct !{!106, !10}
!107 = distinct !{!107, !10}
!108 = distinct !{!108, !10}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!111 = distinct !{!111, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt4LoopES5_EENS_22__unordered_map_hasherIS5_S6_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!114 = distinct !{!114, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjmEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
!115 = distinct !{!115, !10}
