; ModuleID = '../../v8/src/heap/cppgc/explicit-management.cc'
source_filename = "../../v8/src/heap/cppgc/explicit-management.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cppgc::HeapHandle" = type { i8 }
%"class.cppgc::internal::MarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"struct.cppgc::internal::MarkerBase::MarkingConfig", [4 x i8], %"class.cppgc::Platform"*, %"class.std::__1::shared_ptr.69", %"struct.cppgc::internal::SingleThreadedHandle", %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MutatorMarkingState", i8, [7 x i8], %"class.cppgc::internal::IncrementalMarkingSchedule", %"class.std::__1::unique_ptr.109", i8, [7 x i8] }>
%"class.cppgc::internal::HeapBase" = type <{ i32 (...)**, %"class.cppgc::internal::RawHeap", %"class.std::__1::shared_ptr", %"class.cppgc::internal::CagedHeap", %"class.std::__1::unique_ptr.29", %"class.cppgc::internal::HeapRegistry::Subscription", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.cppgc::internal::Compactor", %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::Sweeper", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl", i64, i64, i8, [3 x i8], i32, %"class.std::__1::unique_ptr.151", i64, i8, [7 x i8] }>
%"class.cppgc::internal::RawHeap" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BaseSpace"* }
%"class.cppgc::internal::BaseSpace" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8, [3 x i8] }>
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"**, %"class.std::__1::__compressed_pair.2" }
%"class.cppgc::internal::BasePage" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cppgc::internal::BasePage"** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::shared_ptr" = type { %"class.cppgc::Platform"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.cppgc::internal::CagedHeap" = type { %"class.cppgc::internal::VirtualMemory", %"class.std::__1::unique_ptr.11" }
%"class.cppgc::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, i8*, i64 }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.22" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.std::__1::set.22" = type { %"class.std::__1::__tree.23" }
%"class.std::__1::__tree.23" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.cppgc::internal::PageBackend"* }
%"class.cppgc::internal::PageBackend" = type opaque
%"class.cppgc::internal::HeapRegistry::Subscription" = type { %"class.cppgc::internal::HeapBase"* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::StatsCollector" = type { i64, %"class.v8::base::TimeTicks", i64, i64, i64, i64, %"class.std::__1::vector.38", i8, %"struct.cppgc::internal::StatsCollector::Event", %"struct.cppgc::internal::StatsCollector::Event", %"class.std::__1::unique_ptr.45", %"class.cppgc::Platform"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.std::__1::__compressed_pair.40" }
%"class.cppgc::internal::StatsCollector::AllocationObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"** }
%"struct.cppgc::internal::StatsCollector::Event" = type { [6 x %"class.v8::base::TimeDelta"], [2 x i32], i64, i8, i8, i64, i64, i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.cppgc::internal::MetricRecorder"* }
%"class.cppgc::internal::MetricRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.heap::base::Stack"* }
%"class.heap::base::Stack" = type { i8* }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.cppgc::internal::PreFinalizerHandler"* }
%"class.cppgc::internal::PreFinalizerHandler" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.cppgc::internal::MarkerBase"* }
%"class.cppgc::internal::Compactor" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.124", %"class.std::__1::unique_ptr.131", i8, i8, [6 x i8] }>
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"**, %"class.std::__1::__compressed_pair.126" }
%"class.cppgc::internal::NormalPageSpace" = type { %"class.cppgc::internal::BaseSpace.base", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::FreeList" }
%"class.cppgc::internal::BaseSpace.base" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8 }>
%"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer" = type { i8*, i64 }
%"class.cppgc::internal::FreeList" = type { %"struct.std::__1::array", %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [17 x %"class.cppgc::internal::FreeList::Entry"*] }
%"class.cppgc::internal::FreeList::Entry" = type opaque
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.cppgc::internal::NormalPageSpace"** }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.cppgc::internal::CompactionWorklists"* }
%"class.cppgc::internal::CompactionWorklists" = type { %"class.heap::base::Worklist.98" }
%"class.heap::base::Worklist.98" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<const void **, 256>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<const void **, 256>::Segment"*, [256 x i8**] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.cppgc::internal::ObjectAllocator" = type { %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::Sweeper" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::unique_ptr.137" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.cppgc::internal::Sweeper::SweeperImpl"* }
%"class.cppgc::internal::Sweeper::SweeperImpl" = type opaque
%"class.cppgc::internal::PersistentRegion" = type { %"class.std::__1::vector.143", %"class.cppgc::internal::PersistentNode"*, i64 }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"class.std::__1::unique_ptr.145"*, %"class.std::__1::unique_ptr.145"*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::unique_ptr.145" = type opaque
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::unique_ptr.145"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.cppgc::internal::CrossThreadPersistentRegion" = type { %"class.cppgc::internal::PersistentRegion" }
%"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver", i64 }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { i32* }
%"struct.cppgc::internal::MarkerBase::MarkingConfig" = type <{ i8, [3 x i8], i32, i8, i8, [2 x i8] }>
%"class.cppgc::Platform" = type { i32 (...)** }
%"class.std::__1::shared_ptr.69" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"struct.cppgc::internal::SingleThreadedHandle" = type { %"class.std::__1::shared_ptr.70" }
%"class.std::__1::shared_ptr.70" = type { i8*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.90", %"class.heap::base::Worklist.91", %"class.heap::base::Worklist.92", %"class.heap::base::Worklist.93", %"class.heap::base::Worklist.94", %"class.heap::base::Worklist.94", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.90" }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, [512 x %"struct.cppgc::TraceDescriptor"] }
%"struct.cppgc::TraceDescriptor" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)* }
%"class.heap::base::Worklist.91" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, [64 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.heap::base::Worklist.92" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem"] }
%"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem" = type { void (%"class.cppgc::LivenessBroker"*, i8*)*, i8* }
%"class.cppgc::LivenessBroker" = type { i8 }
%"class.heap::base::Worklist.93" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem"] }
%"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64 }
%"class.heap::base::Worklist.94" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem"] }
%"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem" = type { i8*, i8*, %"struct.cppgc::TraceDescriptor" }
%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.72", %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.87", [4 x i8] }>
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74", %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { float }
%"class.heap::base::Worklist.90" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, [16 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::MutatorMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" }
%"class.cppgc::internal::MarkingStateBase" = type { %"class.cppgc::internal::HeapBase"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.std::__1::unique_ptr.95", i64 }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local" = type { %"class.heap::base::Worklist.92"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local" = type { %"class.heap::base::Worklist.91"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local" = type { %"class.heap::base::Worklist.93"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local" = type { %"class.heap::base::Worklist.94"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local" = type { %"class.heap::base::Worklist.90"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.heap::base::Worklist<const void **, 256>::Local"* }
%"class.heap::base::Worklist<const void **, 256>::Local" = type { %"class.heap::base::Worklist.98"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.102", i64 }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.cppgc::internal::HeapObjectHeader"**, %"class.cppgc::internal::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.cppgc::internal::HeapObjectHeader"** }
%"class.cppgc::internal::IncrementalMarkingSchedule" = type { %"class.v8::base::TimeTicks", i64, %"struct.std::__1::atomic", double, i64, double }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.cppgc::internal::ConcurrentMarkerBase"* }
%"class.cppgc::internal::ConcurrentMarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::Platform"*, %"class.std::__1::unique_ptr.112", i64, %"class.v8::base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.cppgc::internal::LargePage" = type { %"class.cppgc::internal::BasePage.base", i64 }
%"class.cppgc::internal::BasePage.base" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8 }>
%"class.cppgc::internal::NormalPage" = type { %"class.cppgc::internal::BasePage.base", i64, %"class.cppgc::internal::PlatformAwareObjectStartBitmap" }
%"class.cppgc::internal::PlatformAwareObjectStartBitmap" = type { %"class.cppgc::internal::ObjectStartBitmap" }
%"class.cppgc::internal::ObjectStartBitmap" = type { i8*, %"struct.std::__1::array.157" }
%"struct.std::__1::array.157" = type { [2048 x i8] }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal22FreeUnreferencedObjectERNS_10HeapHandleEPv(%"class.cppgc::HeapHandle"* dereferenceable(1), i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.cppgc::HeapHandle", %"class.cppgc::HeapHandle"* %0, i64 440, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %76

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cppgc::HeapHandle", %"class.cppgc::HeapHandle"* %0, i64 128
  %8 = bitcast %"class.cppgc::HeapHandle"* %7 to %"class.cppgc::internal::MarkerBase"**
  %9 = load %"class.cppgc::internal::MarkerBase"*, %"class.cppgc::internal::MarkerBase"** %8, align 8
  %10 = icmp eq %"class.cppgc::internal::MarkerBase"* %9, null
  br i1 %10, label %11, label %76

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.cppgc::HeapHandle", %"class.cppgc::HeapHandle"* %0, i64 208
  %13 = bitcast %"class.cppgc::HeapHandle"* %12 to %"class.cppgc::internal::Sweeper"*
  %14 = tail call zeroext i1 @_ZNK5cppgc8internal7Sweeper20IsSweepingInProgressEv(%"class.cppgc::internal::Sweeper"* %13) #3
  br i1 %14, label %76, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %1, i64 -8
  %17 = bitcast i8* %16 to %"class.cppgc::internal::HeapObjectHeader"*
  tail call void @_ZN5cppgc8internal16HeapObjectHeader8FinalizeEv(%"class.cppgc::internal::HeapObjectHeader"* %17) #3
  %18 = ptrtoint i8* %1 to i64
  %19 = and i64 %18, -131072
  %20 = or i64 %19, 4096
  %21 = inttoptr i64 %20 to %"class.cppgc::internal::BasePage"*
  %22 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 16
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %35

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %21, i64 0, i32 1
  %27 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %26, align 8
  tail call void @_ZN5cppgc8internal9BaseSpace10RemovePageEPNS0_8BasePageE(%"class.cppgc::internal::BaseSpace"* %27, %"class.cppgc::internal::BasePage"* nonnull %21) #3
  %28 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %21, i64 0, i32 0
  %29 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %28, align 4096
  %30 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %29, i64 0, i32 6, i32 0, i32 0, i32 0
  %31 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %30, align 8
  %32 = inttoptr i64 %20 to %"class.cppgc::internal::LargePage"*
  %33 = getelementptr inbounds %"class.cppgc::internal::LargePage", %"class.cppgc::internal::LargePage"* %32, i64 0, i32 1
  %34 = load i64, i64* %33, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector18NotifyExplicitFreeEm(%"class.cppgc::internal::StatsCollector"* %31, i64 %34) #3
  tail call void @_ZN5cppgc8internal9LargePage7DestroyEPS1_(%"class.cppgc::internal::LargePage"* nonnull %32) #3
  br label %76

35:                                               ; preds = %15
  %36 = getelementptr inbounds i8, i8* %1, i64 -2
  %37 = bitcast i8* %36 to i16*
  %38 = load i16, i16* %37, align 2
  %39 = lshr i16 %38, 1
  %40 = zext i16 %39 to i64
  %41 = shl nuw nsw i64 %40, 3
  %42 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %21, i64 0, i32 1
  %43 = bitcast %"class.cppgc::internal::BaseSpace"** %42 to %"class.cppgc::internal::NormalPageSpace"**
  %44 = load %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %43, align 8
  %45 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %17, i64 %40
  %46 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %16, i8 0, i64 %41, i1 false) #3
  %47 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %44, i64 0, i32 1, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, %46
  br i1 %49, label %50, label %70

50:                                               ; preds = %35
  %51 = inttoptr i64 %20 to %"class.cppgc::internal::NormalPage"*
  %52 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %44, i64 0, i32 1, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, %41
  store i8* %16, i8** %47, align 8
  store i64 %54, i64* %52, align 8
  %55 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %51, i64 0, i32 2
  %56 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %55 to i64*
  %57 = load i64, i64* %56, align 32
  %58 = ptrtoint i8* %16 to i64
  %59 = sub i64 %58, %57
  %60 = lshr i64 %59, 3
  %61 = lshr i64 %59, 6
  %62 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %51, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = trunc i64 %60 to i32
  %65 = and i32 %64, 7
  %66 = shl i32 1, %65
  %67 = trunc i32 %66 to i8
  %68 = xor i8 %67, -1
  %69 = and i8 %63, %68
  store i8 %69, i8* %62, align 1
  br label %76

70:                                               ; preds = %35
  %71 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %21, i64 0, i32 0
  %72 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %71, align 4096
  %73 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %72, i64 0, i32 6, i32 0, i32 0, i32 0
  %74 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %73, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector18NotifyExplicitFreeEm(%"class.cppgc::internal::StatsCollector"* %74, i64 %41) #3
  %75 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %44, i64 0, i32 2
  tail call void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"* %75, i8* %16, i64 %41) #3
  br label %76

76:                                               ; preds = %2, %6, %25, %70, %50, %11
  ret void
}

declare void @_ZN5cppgc8internal16HeapObjectHeader8FinalizeEv(%"class.cppgc::internal::HeapObjectHeader"*) local_unnamed_addr #1

declare void @_ZN5cppgc8internal9BaseSpace10RemovePageEPNS0_8BasePageE(%"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BasePage"*) local_unnamed_addr #1

declare void @_ZN5cppgc8internal14StatsCollector18NotifyExplicitFreeEm(%"class.cppgc::internal::StatsCollector"*, i64) local_unnamed_addr #1

declare void @_ZN5cppgc8internal9LargePage7DestroyEPS1_(%"class.cppgc::internal::LargePage"*) local_unnamed_addr #1

declare void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5cppgc8internal6ResizeEPvm(i8*, i64) local_unnamed_addr #0 {
  %3 = ptrtoint i8* %0 to i64
  %4 = and i64 %3, -131072
  %5 = or i64 %4, 4096
  %6 = inttoptr i64 %5 to %"class.cppgc::internal::BasePage"*
  %7 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %6, i64 0, i32 0
  %8 = inttoptr i64 %5 to %"class.cppgc::HeapHandle"**
  %9 = load %"class.cppgc::HeapHandle"*, %"class.cppgc::HeapHandle"** %8, align 4096
  %10 = getelementptr inbounds %"class.cppgc::HeapHandle", %"class.cppgc::HeapHandle"* %9, i64 440, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %102

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.cppgc::HeapHandle", %"class.cppgc::HeapHandle"* %9, i64 128
  %15 = bitcast %"class.cppgc::HeapHandle"* %14 to %"class.cppgc::internal::MarkerBase"**
  %16 = load %"class.cppgc::internal::MarkerBase"*, %"class.cppgc::internal::MarkerBase"** %15, align 8
  %17 = icmp eq %"class.cppgc::internal::MarkerBase"* %16, null
  br i1 %17, label %18, label %102

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.cppgc::HeapHandle", %"class.cppgc::HeapHandle"* %9, i64 208
  %20 = bitcast %"class.cppgc::HeapHandle"* %19 to %"class.cppgc::internal::Sweeper"*
  %21 = tail call zeroext i1 @_ZNK5cppgc8internal7Sweeper20IsSweepingInProgressEv(%"class.cppgc::internal::Sweeper"* %20) #3
  br i1 %21, label %102, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %6, i64 0, i32 2
  %24 = load i8, i8* %23, align 16
  %25 = icmp eq i8 %24, 1
  br i1 %25, label %102, label %26

26:                                               ; preds = %22
  %27 = add i64 %1, 15
  %28 = and i64 %27, -8
  %29 = getelementptr inbounds i8, i8* %0, i64 -8
  %30 = bitcast i8* %29 to %"class.cppgc::internal::HeapObjectHeader"*
  %31 = getelementptr inbounds i8, i8* %0, i64 -2
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 2
  %34 = lshr i16 %33, 1
  %35 = zext i16 %34 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = icmp ugt i64 %28, %36
  br i1 %37, label %38, label %58

38:                                               ; preds = %26
  %39 = sub i64 %28, %36
  %40 = getelementptr %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %6, i64 0, i32 1
  %41 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %40, align 8
  %42 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %41, i64 1
  %43 = bitcast %"class.cppgc::internal::BaseSpace"* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %30, i64 %35
  %46 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %45 to i8*
  %47 = icmp eq i8* %44, %46
  br i1 %47, label %48, label %102

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %41, i64 1, i32 1
  %50 = bitcast %"class.std::__1::vector.0"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %39
  br i1 %52, label %102, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds i8, i8* %46, i64 %39
  store i8* %54, i8** %43, align 8
  %55 = sub i64 %51, %39
  store i64 %55, i64* %50, align 8
  %56 = lshr exact i64 %28, 2
  %57 = trunc i64 %56 to i16
  store i16 %57, i16* %32, align 2
  br label %102

58:                                               ; preds = %26
  %59 = icmp ugt i64 %36, %28
  br i1 %59, label %60, label %102

60:                                               ; preds = %58
  %61 = sub i64 %36, %28
  %62 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %6, i64 0, i32 1
  %63 = bitcast %"class.cppgc::internal::BaseSpace"** %62 to %"class.cppgc::internal::NormalPageSpace"**
  %64 = load %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %63, align 8
  %65 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %30, i64 %35
  %66 = bitcast %"class.cppgc::internal::HeapObjectHeader"* %65 to i8*
  %67 = sub i64 0, %61
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  %69 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %64, i64 0, i32 1, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = icmp eq i8* %70, %66
  br i1 %71, label %72, label %78

72:                                               ; preds = %60
  %73 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %64, i64 0, i32 1, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, %61
  store i8* %68, i8** %69, align 8
  store i64 %75, i64* %73, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 0, i64 %61, i1 false) #3
  %76 = lshr exact i64 %28, 2
  %77 = trunc i64 %76 to i16
  store i16 %77, i16* %32, align 2
  br label %102

78:                                               ; preds = %60
  %79 = icmp ugt i64 %61, 31
  br i1 %79, label %80, label %102

80:                                               ; preds = %78
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 0, i64 %61, i1 false) #3
  %81 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %7, align 4096
  %82 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %81, i64 0, i32 6, i32 0, i32 0, i32 0
  %83 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %82, align 8
  tail call void @_ZN5cppgc8internal14StatsCollector18NotifyExplicitFreeEm(%"class.cppgc::internal::StatsCollector"* %83, i64 %61) #3
  %84 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %64, i64 0, i32 2
  tail call void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"* %84, i8* %68, i64 %61) #3
  %85 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %6, i64 1, i32 1
  %86 = bitcast %"class.cppgc::internal::BaseSpace"** %85 to %"class.cppgc::internal::PlatformAwareObjectStartBitmap"*
  %87 = bitcast %"class.cppgc::internal::BaseSpace"** %85 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = ptrtoint i8* %68 to i64
  %90 = sub i64 %89, %88
  %91 = lshr i64 %90, 3
  %92 = lshr i64 %90, 6
  %93 = getelementptr inbounds %"class.cppgc::internal::PlatformAwareObjectStartBitmap", %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %86, i64 0, i32 0, i32 1, i32 0, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = trunc i64 %91 to i32
  %96 = and i32 %95, 7
  %97 = shl i32 1, %96
  %98 = trunc i32 %97 to i8
  %99 = or i8 %94, %98
  store i8 %99, i8* %93, align 1
  %100 = lshr exact i64 %28, 2
  %101 = trunc i64 %100 to i16
  store i16 %101, i16* %32, align 2
  br label %102

102:                                              ; preds = %2, %13, %80, %78, %72, %53, %48, %38, %58, %22, %18
  %103 = phi i1 [ false, %18 ], [ false, %22 ], [ true, %58 ], [ true, %53 ], [ false, %48 ], [ false, %38 ], [ true, %72 ], [ true, %78 ], [ true, %80 ], [ false, %13 ], [ false, %2 ]
  ret i1 %103
}

declare zeroext i1 @_ZNK5cppgc8internal7Sweeper20IsSweepingInProgressEv(%"class.cppgc::internal::Sweeper"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
