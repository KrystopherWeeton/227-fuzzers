; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/native_value_traits_impl.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/native_value_traits_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.173" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.184" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.178 }
%class.scoped_refptr.178 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.179" }
%"struct.std::__1::atomic.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__cxx_atomic_impl.182" }
%"struct.std::__1::__cxx_atomic_impl.182" = type { %"struct.std::__1::__cxx_atomic_base_impl.183" }
%"struct.std::__1::__cxx_atomic_base_impl.183" = type { i32 }
%"class.blink::TraceWrapperV8Reference.184" = type { %"class.v8::TracedReference.185" }
%"class.v8::TracedReference.185" = type { %"class.v8::BasicTracedReference.186" }
%"class.v8::BasicTracedReference.186" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::NotShared" = type { %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::DOMArrayBufferView"* }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.189" }
%"class.blink::Member.189" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::MaybeShared" = type { %"class.blink::Member" }
%"class.blink::FlexibleArrayBufferView" = type { %"class.blink::DOMArrayBufferView"*, i8*, i64, [64 x i8] }
%"class.v8::ArrayBufferView" = type { i8 }
%"class.blink::NotShared.191" = type { %"class.blink::Member.192" }
%"class.blink::Member.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.194" = type { %"class.blink::Member.192" }
%"class.blink::TypedFlexibleArrayBufferView" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.195" = type { %"class.blink::Member.196" }
%"class.blink::Member.196" = type { %"class.blink::MemberBase.197" }
%"class.blink::MemberBase.197" = type { %"class.blink::DOMTypedArray.198"* }
%"class.blink::DOMTypedArray.198" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.199" = type { %"class.blink::Member.196" }
%"class.blink::TypedFlexibleArrayBufferView.200" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.201" = type { %"class.blink::Member.202" }
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::DOMTypedArray.204"* }
%"class.blink::DOMTypedArray.204" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.205" = type { %"class.blink::Member.202" }
%"class.blink::TypedFlexibleArrayBufferView.206" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.207" = type { %"class.blink::Member.208" }
%"class.blink::Member.208" = type { %"class.blink::MemberBase.209" }
%"class.blink::MemberBase.209" = type { %"class.blink::DOMTypedArray.210"* }
%"class.blink::DOMTypedArray.210" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.211" = type { %"class.blink::Member.208" }
%"class.blink::TypedFlexibleArrayBufferView.212" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.213" = type { %"class.blink::Member.214" }
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::DOMTypedArray.216"* }
%"class.blink::DOMTypedArray.216" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.217" = type { %"class.blink::Member.214" }
%"class.blink::TypedFlexibleArrayBufferView.218" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.219" = type { %"class.blink::Member.220" }
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::DOMTypedArray.222"* }
%"class.blink::DOMTypedArray.222" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.223" = type { %"class.blink::Member.220" }
%"class.blink::TypedFlexibleArrayBufferView.224" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.225" = type { %"class.blink::Member.226" }
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::DOMTypedArray.228"* }
%"class.blink::DOMTypedArray.228" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.229" = type { %"class.blink::Member.226" }
%"class.blink::TypedFlexibleArrayBufferView.230" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.231" = type { %"class.blink::Member.232" }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::DOMTypedArray.234"* }
%"class.blink::DOMTypedArray.234" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.235" = type { %"class.blink::Member.232" }
%"class.blink::TypedFlexibleArrayBufferView.236" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.237" = type { %"class.blink::Member.238" }
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::DOMTypedArray.240"* }
%"class.blink::DOMTypedArray.240" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.241" = type { %"class.blink::Member.238" }
%"class.blink::TypedFlexibleArrayBufferView.242" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.243" = type { %"class.blink::Member.244" }
%"class.blink::Member.244" = type { %"class.blink::MemberBase.245" }
%"class.blink::MemberBase.245" = type { %"class.blink::DOMTypedArray.246"* }
%"class.blink::DOMTypedArray.246" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.247" = type { %"class.blink::Member.244" }
%"class.blink::TypedFlexibleArrayBufferView.248" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.249" = type { %"class.blink::Member.250" }
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::DOMTypedArray.252"* }
%"class.blink::DOMTypedArray.252" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.253" = type { %"class.blink::Member.250" }
%"class.blink::TypedFlexibleArrayBufferView.254" = type { %"class.blink::FlexibleArrayBufferView" }
%"class.blink::NotShared.255" = type { %"class.blink::Member.256" }
%"class.blink::Member.256" = type { %"class.blink::MemberBase.257" }
%"class.blink::MemberBase.257" = type { %"class.blink::DOMDataView"* }
%"class.blink::DOMDataView" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::MaybeShared.258" = type { %"class.blink::Member.256" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::JSEventHandler" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.261", i32, [4 x i8] }>
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.265", %"class.blink::Member.265" }
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.269, %"class.blink::Member.270", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.269 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.272" }
%"class.blink::Persistent.272" = type { %"class.blink::PersistentBase.273" }
%"class.blink::PersistentBase.273" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::XPathNSResolver" = type { %"class.blink::ScriptWrappable" }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.299", %"class.WTF::HashMap.299", %"class.WTF::HashMap.304", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.356", %"class.blink::Persistent.272", i8, i8, i8, %"class.WTF::Vector.370", %"class.std::__1::unique_ptr.375", %"class.blink::Persistent.381", %"class.blink::Persistent.385", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.281", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.293", i32, i32 }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.299" = type { %"class.WTF::HashTable.300" }
%"class.WTF::HashTable.300" = type <{ %"struct.WTF::KeyValuePair.303"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.303" = type opaque
%"class.WTF::HashMap.304" = type { %"class.WTF::HashTable.305" }
%"class.WTF::HashTable.305" = type <{ %"struct.WTF::KeyValuePair.308"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.308" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.317", %class.scoped_refptr.178 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.312", i8* }
%"class.WTF::HashMap.312" = type { %"class.WTF::HashTable.313" }
%"class.WTF::HashTable.313" = type <{ %"struct.WTF::KeyValuePair.316"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.316" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.317" = type { %"class.v8::PersistentValueMapBase.318" }
%"class.v8::PersistentValueMapBase.318" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.319", i8* }
%"class.WTF::HashMap.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"struct.WTF::KeyValuePair.323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.323" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.324", %"class.WTF::String", %"class.std::__1::unique_ptr.326" }
%"class.WTF::RefCounted.324" = type { %"class.base::RefCounted.325" }
%"class.base::RefCounted.325" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.340", %"class.WTF::Vector.346", i8, i32 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.WTF::Vector.332"* }
%"class.WTF::Vector.332" = type { %"class.WTF::VectorBuffer.333" }
%"class.WTF::VectorBuffer.333" = type { %"class.WTF::VectorBufferBase.334" }
%"class.WTF::VectorBufferBase.334" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.346" = type { %"class.WTF::VectorBuffer.347" }
%"class.WTF::VectorBuffer.347" = type { %"class.WTF::VectorBufferBase.334", [32 x i8] }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.359", %"class.WTF::HashMap.362" }
%"class.blink::ScopedPersistent.359" = type { %"class.v8::Persistent.360" }
%"class.v8::Persistent.360" = type { %"class.v8::PersistentBase.361" }
%"class.v8::PersistentBase.361" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"struct.WTF::KeyValuePair.366"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.366" = type opaque
%"class.WTF::Vector.370" = type { %"class.WTF::VectorBuffer.371" }
%"class.WTF::VectorBuffer.371" = type { %"class.WTF::VectorBufferBase.372" }
%"class.WTF::VectorBufferBase.372" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.381" = type { %"class.blink::PersistentBase.382" }
%"class.blink::PersistentBase.382" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.385" = type { %"class.blink::PersistentBase.386" }
%"class.blink::PersistentBase.386" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.391" }
%"class.WTF::Vector.391" = type { %"class.WTF::VectorBuffer.392" }
%"class.WTF::VectorBuffer.392" = type { %"class.WTF::VectorBufferBase.393" }
%"class.WTF::VectorBufferBase.393" = type { %"struct.std::__1::pair.394"*, i32, i32 }
%"struct.std::__1::pair.394" = type { %"class.blink::UntracedMember", %"class.blink::Member.396" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::V8CustomXPathNSResolver" = type { %"class.blink::XPathNSResolver", %"class.blink::Member.265", %"class.v8::Local.172" }
%"class.v8::Local.172" = type { %"class.v8::Object"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.276 }
%union.anon.276 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [16 x i8] c"XPathNSResolver\00", align 1
@.str.1 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink33v8_array_buffer_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@.str.4 = private unnamed_addr constant [55 x i8] c"The provided ArrayBufferView value must not be shared.\00", align 1
@_ZN5blink38v8_array_buffer_view_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink31v8_int8_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink32v8_int16_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink32v8_int32_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink32v8_uint8_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink40v8_uint8_clamped_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink33v8_uint16_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink33v8_uint32_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink37v8_big_int_64_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink38v8_big_uint_64_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink34v8_float32_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink34v8_float64_array_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink30v8_data_view_wrapper_type_infoE = external local_unnamed_addr global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink17V8XPathNSResolver18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoERNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4
  %5 = getelementptr inbounds %"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* %0, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %6) #4
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %10 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %10, i64 3
  %12 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %11, align 8
  call void %12(%"class.blink::ExceptionState"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %3) #4
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #4
  br label %28

28:                                               ; preds = %2, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8bindings35NativeValueTraitsInterfaceNotOfTypeEPKNS_15WrapperTypeInfoEiRNS_14ExceptionStateE(%"struct.blink::WrapperTypeInfo"* nocapture readonly, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* %0, i64 0, i32 3
  %7 = load i8*, i8** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %7) #4
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %11 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %11, i64 3
  %13 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %12, align 8
  call void %13(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #4
  br label %29

29:                                               ; preds = %3, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink17NativeValueTraitsINS_14DOMArrayBufferEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMArrayBuffer"* %5, null
  br i1 %6, label %7, label %32

7:                                                ; preds = %3
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  %9 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_array_buffer_wrapper_type_infoE, i64 0, i32 3), align 8
  %10 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %9) #4
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %13 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %13, i64 3
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, align 8
  call void %15(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #4
  br label %31

31:                                               ; preds = %30, %27, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  br label %32

32:                                               ; preds = %3, %31
  ret %"class.blink::DOMArrayBuffer"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink17NativeValueTraitsINS_14DOMArrayBufferEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMArrayBuffer"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_array_buffer_wrapper_type_infoE, i64 0, i32 3), align 8
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %10) #4
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %33

33:                                               ; preds = %4, %32
  ret %"class.blink::DOMArrayBuffer"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_14DOMArrayBufferEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMArrayBuffer"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_array_buffer_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %51, %48, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %3, %23, %23, %52
  ret %"class.blink::DOMArrayBuffer"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_14DOMArrayBufferEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMArrayBuffer"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_array_buffer_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %52, %49, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %4, %24, %24, %53
  ret %"class.blink::DOMArrayBuffer"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_18DOMArrayBufferViewEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !2
  %7 = icmp eq %"class.blink::DOMArrayBufferView"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !2
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_array_buffer_view_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !2
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !2
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !2
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !2
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !2
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !2
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !2
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !2
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !2
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !2
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !2
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !2
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %6, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !2
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !2
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !2
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !2
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMArrayBufferView"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMArrayBufferView"* %43, %"class.blink::DOMArrayBufferView"** %44, align 8, !alias.scope !2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_18DOMArrayBufferViewEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !5
  %8 = icmp eq %"class.blink::DOMArrayBufferView"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !5
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_array_buffer_view_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !5
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !5
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !5
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !5
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !5
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !5
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !5
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !5
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !5
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !5
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !5
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !5
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %7, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !5
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !5
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !5
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !5
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMArrayBufferView"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMArrayBufferView"* %44, %"class.blink::DOMArrayBufferView"** %45, align 8, !alias.scope !5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_18DOMArrayBufferViewEEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMArrayBufferView"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !8
  %6 = icmp eq %"class.blink::DOMArrayBufferView"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %5, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !8
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !8
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !8
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMArrayBufferView"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMArrayBufferView"* %17, %"class.blink::DOMArrayBufferView"** %18, align 8, !alias.scope !8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_18DOMArrayBufferViewEEEEEvE13ArgumentValueEPN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMArrayBufferView"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !11
  %7 = icmp eq %"class.blink::DOMArrayBufferView"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %6, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !11
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !11
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !11
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !11
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMArrayBufferView"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMArrayBufferView"* %18, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_18DOMArrayBufferViewEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !14
  %7 = icmp eq %"class.blink::DOMArrayBufferView"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !14
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_array_buffer_view_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !14
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !14
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !14
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !14
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !14
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !14
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !14
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !14
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !14
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !14
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !14
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !14
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared", %"class.blink::MaybeShared"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMArrayBufferView"* %6, %"class.blink::DOMArrayBufferView"** %34, align 8, !alias.scope !14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_18DOMArrayBufferViewEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !17
  %8 = icmp eq %"class.blink::DOMArrayBufferView"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !17
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_array_buffer_view_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !17
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !17
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !17
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !17
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !17
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !17
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !17
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !17
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !17
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !17
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !17
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !17
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared", %"class.blink::MaybeShared"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMArrayBufferView"* %7, %"class.blink::DOMArrayBufferView"** %35, align 8, !alias.scope !17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_18DOMArrayBufferViewEEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMArrayBufferView"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !20
  %6 = getelementptr inbounds %"class.blink::MaybeShared", %"class.blink::MaybeShared"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMArrayBufferView"* %5, %"class.blink::DOMArrayBufferView"** %6, align 8, !alias.scope !20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_18DOMArrayBufferViewEEEEEvE13ArgumentValueEPN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMArrayBufferView"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !23
  %7 = getelementptr inbounds %"class.blink::MaybeShared", %"class.blink::MaybeShared"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMArrayBufferView"* %6, %"class.blink::DOMArrayBufferView"** %7, align 8, !alias.scope !23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_23FlexibleArrayBufferViewEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::FlexibleArrayBufferView"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"* %3) #4, !noalias !26
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::FlexibleArrayBufferView"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !26
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !26
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %0, i64 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !26
  store i64 %11, i64* %14, align 8, !alias.scope !26
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %0, i64 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !26
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !26
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_array_buffer_view_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !26
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !26
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !26
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !26
  %47 = bitcast %"class.blink::FlexibleArrayBufferView"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !26
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_23FlexibleArrayBufferViewEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::FlexibleArrayBufferView"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"* %3) #4, !noalias !29
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::FlexibleArrayBufferView"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !29
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !29
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %0, i64 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !29
  store i64 %11, i64* %14, align 8, !alias.scope !29
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::FlexibleArrayBufferView", %"class.blink::FlexibleArrayBufferView"* %0, i64 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !29
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !29
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::FlexibleArrayBufferView"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !29
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !29
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_array_buffer_view_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !29
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !29
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !29
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !29
  %70 = bitcast %"class.blink::FlexibleArrayBufferView"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !29
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.191"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink11V8Int8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !32
  %7 = icmp eq %"class.blink::DOMTypedArray"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !32
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink31v8_int8_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !32
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !32
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !32
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !32
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !32
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !32
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !32
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !32
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !32
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !32
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !32
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !32
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !32
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !32
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !32
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !32
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.191", %"class.blink::NotShared.191"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray"* %43, %"class.blink::DOMTypedArray"** %44, align 8, !alias.scope !32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.191"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink11V8Int8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !35
  %8 = icmp eq %"class.blink::DOMTypedArray"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !35
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink31v8_int8_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !35
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !35
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !35
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !35
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !35
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !35
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !35
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !35
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !35
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !35
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !35
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !35
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !35
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !35
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !35
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !35
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.191", %"class.blink::NotShared.191"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray"* %44, %"class.blink::DOMTypedArray"** %45, align 8, !alias.scope !35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.191"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !38
  %6 = icmp eq %"class.blink::DOMTypedArray"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !38
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !38
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !38
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !38
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.191", %"class.blink::NotShared.191"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray"* %17, %"class.blink::DOMTypedArray"** %18, align 8, !alias.scope !38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.191"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !41
  %7 = icmp eq %"class.blink::DOMTypedArray"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !41
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !41
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !41
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !41
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.191", %"class.blink::NotShared.191"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray"* %18, %"class.blink::DOMTypedArray"** %19, align 8, !alias.scope !41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.194"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink11V8Int8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !44
  %7 = icmp eq %"class.blink::DOMTypedArray"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !44
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink31v8_int8_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !44
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !44
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !44
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !44
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !44
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !44
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !44
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !44
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !44
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !44
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !44
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !44
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.194", %"class.blink::MaybeShared.194"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray"* %6, %"class.blink::DOMTypedArray"** %34, align 8, !alias.scope !44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.194"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink11V8Int8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !47
  %8 = icmp eq %"class.blink::DOMTypedArray"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !47
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink31v8_int8_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !47
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !47
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !47
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !47
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !47
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !47
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !47
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !47
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !47
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !47
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !47
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !47
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.194", %"class.blink::MaybeShared.194"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray"* %7, %"class.blink::DOMTypedArray"** %35, align 8, !alias.scope !47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.194"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !50
  %6 = getelementptr inbounds %"class.blink::MaybeShared.194", %"class.blink::MaybeShared.194"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray"* %5, %"class.blink::DOMTypedArray"** %6, align 8, !alias.scope !50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.194"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !53
  %7 = getelementptr inbounds %"class.blink::MaybeShared.194", %"class.blink::MaybeShared.194"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray"* %6, %"class.blink::DOMTypedArray"** %7, align 8, !alias.scope !53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIaLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value11IsInt8ArrayEv(%"class.v8::Value"* %3) #4, !noalias !56
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !56
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !56
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView", %"class.blink::TypedFlexibleArrayBufferView"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView", %"class.blink::TypedFlexibleArrayBufferView"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView", %"class.blink::TypedFlexibleArrayBufferView"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !56
  store i64 %11, i64* %14, align 8, !alias.scope !56
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView", %"class.blink::TypedFlexibleArrayBufferView"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !56
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !56
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink31v8_int8_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !56
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !56
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !56
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !56
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !56
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewIaLb0EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value11IsInt8ArrayEv(%"class.v8::Value"* %3) #4, !noalias !59
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !59
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !59
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView", %"class.blink::TypedFlexibleArrayBufferView"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView", %"class.blink::TypedFlexibleArrayBufferView"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView", %"class.blink::TypedFlexibleArrayBufferView"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !59
  store i64 %11, i64* %14, align 8, !alias.scope !59
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView", %"class.blink::TypedFlexibleArrayBufferView"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !59
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !59
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !59
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !59
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink31v8_int8_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !59
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !59
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !59
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !59
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !59
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.195"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.198"* @_ZN5blink12V8Int16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !62
  %7 = icmp eq %"class.blink::DOMTypedArray.198"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !62
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int16_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !62
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !62
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !62
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !62
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !62
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !62
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !62
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !62
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !62
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !62
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !62
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !62
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray.198", %"class.blink::DOMTypedArray.198"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !62
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !62
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !62
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !62
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray.198"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.195", %"class.blink::NotShared.195"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.198"* %43, %"class.blink::DOMTypedArray.198"** %44, align 8, !alias.scope !62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.195"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.198"* @_ZN5blink12V8Int16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !65
  %8 = icmp eq %"class.blink::DOMTypedArray.198"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !65
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int16_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !65
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !65
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !65
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !65
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !65
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !65
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !65
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !65
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !65
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !65
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !65
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !65
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray.198", %"class.blink::DOMTypedArray.198"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !65
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !65
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !65
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !65
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray.198"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.195", %"class.blink::NotShared.195"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.198"* %44, %"class.blink::DOMTypedArray.198"** %45, align 8, !alias.scope !65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.195"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.198"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !68
  %6 = icmp eq %"class.blink::DOMTypedArray.198"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray.198", %"class.blink::DOMTypedArray.198"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !68
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !68
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !68
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !68
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray.198"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.195", %"class.blink::NotShared.195"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.198"* %17, %"class.blink::DOMTypedArray.198"** %18, align 8, !alias.scope !68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.195"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.198"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !71
  %7 = icmp eq %"class.blink::DOMTypedArray.198"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray.198", %"class.blink::DOMTypedArray.198"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !71
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !71
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !71
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !71
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray.198"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.195", %"class.blink::NotShared.195"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.198"* %18, %"class.blink::DOMTypedArray.198"** %19, align 8, !alias.scope !71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.199"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.198"* @_ZN5blink12V8Int16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !74
  %7 = icmp eq %"class.blink::DOMTypedArray.198"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !74
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int16_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !74
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !74
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !74
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !74
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !74
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !74
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !74
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !74
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !74
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !74
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !74
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !74
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.199", %"class.blink::MaybeShared.199"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.198"* %6, %"class.blink::DOMTypedArray.198"** %34, align 8, !alias.scope !74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.199"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.198"* @_ZN5blink12V8Int16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !77
  %8 = icmp eq %"class.blink::DOMTypedArray.198"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !77
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int16_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !77
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !77
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !77
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !77
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !77
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !77
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !77
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !77
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !77
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !77
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !77
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !77
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.199", %"class.blink::MaybeShared.199"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.198"* %7, %"class.blink::DOMTypedArray.198"** %35, align 8, !alias.scope !77
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.199"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.198"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !80
  %6 = getelementptr inbounds %"class.blink::MaybeShared.199", %"class.blink::MaybeShared.199"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.198"* %5, %"class.blink::DOMTypedArray.198"** %6, align 8, !alias.scope !80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.199"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.198"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !83
  %7 = getelementptr inbounds %"class.blink::MaybeShared.199", %"class.blink::MaybeShared.199"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.198"* %6, %"class.blink::DOMTypedArray.198"** %7, align 8, !alias.scope !83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIsLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.200"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value12IsInt16ArrayEv(%"class.v8::Value"* %3) #4, !noalias !86
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.200"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !86
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !86
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.200", %"class.blink::TypedFlexibleArrayBufferView.200"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.200", %"class.blink::TypedFlexibleArrayBufferView.200"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.200", %"class.blink::TypedFlexibleArrayBufferView.200"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !86
  store i64 %11, i64* %14, align 8, !alias.scope !86
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.200", %"class.blink::TypedFlexibleArrayBufferView.200"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !86
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !86
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int16_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !86
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !86
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !86
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !86
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView.200"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !86
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewIsLb0EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.200"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value12IsInt16ArrayEv(%"class.v8::Value"* %3) #4, !noalias !89
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.200"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !89
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !89
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.200", %"class.blink::TypedFlexibleArrayBufferView.200"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.200", %"class.blink::TypedFlexibleArrayBufferView.200"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.200", %"class.blink::TypedFlexibleArrayBufferView.200"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !89
  store i64 %11, i64* %14, align 8, !alias.scope !89
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.200", %"class.blink::TypedFlexibleArrayBufferView.200"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !89
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !89
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView.200"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !89
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !89
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int16_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !89
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !89
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !89
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !89
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView.200"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !89
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.201"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.204"* @_ZN5blink12V8Int32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !92
  %7 = icmp eq %"class.blink::DOMTypedArray.204"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !92
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !92
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !92
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !92
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !92
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !92
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !92
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !92
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !92
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !92
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !92
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !92
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !92
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray.204", %"class.blink::DOMTypedArray.204"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !92
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !92
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !92
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !92
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray.204"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.201", %"class.blink::NotShared.201"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.204"* %43, %"class.blink::DOMTypedArray.204"** %44, align 8, !alias.scope !92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.201"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.204"* @_ZN5blink12V8Int32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !95
  %8 = icmp eq %"class.blink::DOMTypedArray.204"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !95
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !95
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !95
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !95
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !95
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !95
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !95
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !95
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !95
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !95
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !95
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !95
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !95
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray.204", %"class.blink::DOMTypedArray.204"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !95
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !95
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !95
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !95
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray.204"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.201", %"class.blink::NotShared.201"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.204"* %44, %"class.blink::DOMTypedArray.204"** %45, align 8, !alias.scope !95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.201"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.204"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !98
  %6 = icmp eq %"class.blink::DOMTypedArray.204"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray.204", %"class.blink::DOMTypedArray.204"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !98
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !98
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !98
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !98
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray.204"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.201", %"class.blink::NotShared.201"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.204"* %17, %"class.blink::DOMTypedArray.204"** %18, align 8, !alias.scope !98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.201"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.204"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !101
  %7 = icmp eq %"class.blink::DOMTypedArray.204"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray.204", %"class.blink::DOMTypedArray.204"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !101
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !101
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !101
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !101
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray.204"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.201", %"class.blink::NotShared.201"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.204"* %18, %"class.blink::DOMTypedArray.204"** %19, align 8, !alias.scope !101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.205"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.204"* @_ZN5blink12V8Int32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !104
  %7 = icmp eq %"class.blink::DOMTypedArray.204"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !104
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !104
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !104
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !104
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !104
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !104
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !104
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !104
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !104
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !104
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !104
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !104
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !104
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.205", %"class.blink::MaybeShared.205"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.204"* %6, %"class.blink::DOMTypedArray.204"** %34, align 8, !alias.scope !104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.205"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.204"* @_ZN5blink12V8Int32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !107
  %8 = icmp eq %"class.blink::DOMTypedArray.204"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !107
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !107
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !107
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !107
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !107
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !107
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !107
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !107
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !107
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !107
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !107
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !107
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !107
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.205", %"class.blink::MaybeShared.205"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.204"* %7, %"class.blink::DOMTypedArray.204"** %35, align 8, !alias.scope !107
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.205"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.204"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !110
  %6 = getelementptr inbounds %"class.blink::MaybeShared.205", %"class.blink::MaybeShared.205"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.204"* %5, %"class.blink::DOMTypedArray.204"** %6, align 8, !alias.scope !110
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.205"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.204"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !113
  %7 = getelementptr inbounds %"class.blink::MaybeShared.205", %"class.blink::MaybeShared.205"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.204"* %6, %"class.blink::DOMTypedArray.204"** %7, align 8, !alias.scope !113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIiLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.206"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value12IsInt32ArrayEv(%"class.v8::Value"* %3) #4, !noalias !116
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.206"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !116
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !116
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.206", %"class.blink::TypedFlexibleArrayBufferView.206"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.206", %"class.blink::TypedFlexibleArrayBufferView.206"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.206", %"class.blink::TypedFlexibleArrayBufferView.206"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !116
  store i64 %11, i64* %14, align 8, !alias.scope !116
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.206", %"class.blink::TypedFlexibleArrayBufferView.206"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !116
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !116
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !116
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !116
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !116
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !116
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView.206"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !116
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewIiLb0EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.206"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value12IsInt32ArrayEv(%"class.v8::Value"* %3) #4, !noalias !119
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.206"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !119
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !119
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.206", %"class.blink::TypedFlexibleArrayBufferView.206"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.206", %"class.blink::TypedFlexibleArrayBufferView.206"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.206", %"class.blink::TypedFlexibleArrayBufferView.206"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !119
  store i64 %11, i64* %14, align 8, !alias.scope !119
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.206", %"class.blink::TypedFlexibleArrayBufferView.206"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !119
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !119
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView.206"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !119
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !119
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !119
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !119
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !119
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !119
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView.206"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !119
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.207"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.210"* @_ZN5blink12V8Uint8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !122
  %7 = icmp eq %"class.blink::DOMTypedArray.210"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !122
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_uint8_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !122
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !122
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !122
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !122
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !122
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !122
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !122
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !122
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !122
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !122
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !122
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !122
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray.210", %"class.blink::DOMTypedArray.210"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !122
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !122
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !122
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !122
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray.210"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.207", %"class.blink::NotShared.207"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.210"* %43, %"class.blink::DOMTypedArray.210"** %44, align 8, !alias.scope !122
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.207"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.210"* @_ZN5blink12V8Uint8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !125
  %8 = icmp eq %"class.blink::DOMTypedArray.210"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !125
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_uint8_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !125
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !125
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !125
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !125
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !125
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !125
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !125
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !125
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !125
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !125
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !125
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !125
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray.210", %"class.blink::DOMTypedArray.210"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !125
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !125
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !125
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !125
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray.210"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.207", %"class.blink::NotShared.207"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.210"* %44, %"class.blink::DOMTypedArray.210"** %45, align 8, !alias.scope !125
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.207"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.210"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !128
  %6 = icmp eq %"class.blink::DOMTypedArray.210"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray.210", %"class.blink::DOMTypedArray.210"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !128
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !128
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !128
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !128
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray.210"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.207", %"class.blink::NotShared.207"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.210"* %17, %"class.blink::DOMTypedArray.210"** %18, align 8, !alias.scope !128
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.207"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.210"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !131
  %7 = icmp eq %"class.blink::DOMTypedArray.210"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray.210", %"class.blink::DOMTypedArray.210"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !131
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !131
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !131
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !131
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray.210"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.207", %"class.blink::NotShared.207"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.210"* %18, %"class.blink::DOMTypedArray.210"** %19, align 8, !alias.scope !131
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.211"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.210"* @_ZN5blink12V8Uint8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !134
  %7 = icmp eq %"class.blink::DOMTypedArray.210"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !134
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_uint8_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !134
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !134
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !134
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !134
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !134
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !134
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !134
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !134
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !134
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !134
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !134
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !134
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.211", %"class.blink::MaybeShared.211"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.210"* %6, %"class.blink::DOMTypedArray.210"** %34, align 8, !alias.scope !134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.211"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.210"* @_ZN5blink12V8Uint8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !137
  %8 = icmp eq %"class.blink::DOMTypedArray.210"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !137
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_uint8_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !137
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !137
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !137
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !137
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !137
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !137
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !137
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !137
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !137
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !137
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !137
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !137
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.211", %"class.blink::MaybeShared.211"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.210"* %7, %"class.blink::DOMTypedArray.210"** %35, align 8, !alias.scope !137
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.211"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.210"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !140
  %6 = getelementptr inbounds %"class.blink::MaybeShared.211", %"class.blink::MaybeShared.211"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.210"* %5, %"class.blink::DOMTypedArray.210"** %6, align 8, !alias.scope !140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.211"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.210"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !143
  %7 = getelementptr inbounds %"class.blink::MaybeShared.211", %"class.blink::MaybeShared.211"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.210"* %6, %"class.blink::DOMTypedArray.210"** %7, align 8, !alias.scope !143
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIhLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.212"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value12IsUint8ArrayEv(%"class.v8::Value"* %3) #4, !noalias !146
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.212"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !146
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !146
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.212", %"class.blink::TypedFlexibleArrayBufferView.212"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.212", %"class.blink::TypedFlexibleArrayBufferView.212"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.212", %"class.blink::TypedFlexibleArrayBufferView.212"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !146
  store i64 %11, i64* %14, align 8, !alias.scope !146
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.212", %"class.blink::TypedFlexibleArrayBufferView.212"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !146
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !146
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_uint8_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !146
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !146
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !146
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !146
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView.212"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !146
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewIhLb0EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.212"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value12IsUint8ArrayEv(%"class.v8::Value"* %3) #4, !noalias !149
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.212"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !149
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !149
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.212", %"class.blink::TypedFlexibleArrayBufferView.212"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.212", %"class.blink::TypedFlexibleArrayBufferView.212"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.212", %"class.blink::TypedFlexibleArrayBufferView.212"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !149
  store i64 %11, i64* %14, align 8, !alias.scope !149
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.212", %"class.blink::TypedFlexibleArrayBufferView.212"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !149
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !149
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView.212"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !149
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !149
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_uint8_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !149
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !149
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !149
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !149
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView.212"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !149
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.213"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.216"* @_ZN5blink19V8Uint8ClampedArray19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !152
  %7 = icmp eq %"class.blink::DOMTypedArray.216"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !152
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink40v8_uint8_clamped_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !152
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !152
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !152
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !152
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !152
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !152
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !152
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !152
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !152
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !152
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !152
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !152
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray.216", %"class.blink::DOMTypedArray.216"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !152
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !152
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !152
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !152
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray.216"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.213", %"class.blink::NotShared.213"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.216"* %43, %"class.blink::DOMTypedArray.216"** %44, align 8, !alias.scope !152
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.213"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.216"* @_ZN5blink19V8Uint8ClampedArray19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !155
  %8 = icmp eq %"class.blink::DOMTypedArray.216"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !155
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink40v8_uint8_clamped_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !155
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !155
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !155
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !155
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !155
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !155
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !155
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !155
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !155
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !155
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !155
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !155
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray.216", %"class.blink::DOMTypedArray.216"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !155
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !155
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !155
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !155
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray.216"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.213", %"class.blink::NotShared.213"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.216"* %44, %"class.blink::DOMTypedArray.216"** %45, align 8, !alias.scope !155
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.213"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.216"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !158
  %6 = icmp eq %"class.blink::DOMTypedArray.216"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray.216", %"class.blink::DOMTypedArray.216"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !158
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !158
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !158
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !158
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray.216"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.213", %"class.blink::NotShared.213"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.216"* %17, %"class.blink::DOMTypedArray.216"** %18, align 8, !alias.scope !158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.213"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.216"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !161
  %7 = icmp eq %"class.blink::DOMTypedArray.216"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray.216", %"class.blink::DOMTypedArray.216"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !161
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !161
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !161
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !161
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray.216"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.213", %"class.blink::NotShared.213"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.216"* %18, %"class.blink::DOMTypedArray.216"** %19, align 8, !alias.scope !161
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.217"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.216"* @_ZN5blink19V8Uint8ClampedArray19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !164
  %7 = icmp eq %"class.blink::DOMTypedArray.216"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !164
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink40v8_uint8_clamped_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !164
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !164
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !164
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !164
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !164
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !164
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !164
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !164
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !164
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !164
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !164
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !164
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.217", %"class.blink::MaybeShared.217"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.216"* %6, %"class.blink::DOMTypedArray.216"** %34, align 8, !alias.scope !164
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.217"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.216"* @_ZN5blink19V8Uint8ClampedArray19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !167
  %8 = icmp eq %"class.blink::DOMTypedArray.216"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !167
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink40v8_uint8_clamped_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !167
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !167
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !167
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !167
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !167
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !167
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !167
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !167
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !167
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !167
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !167
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !167
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.217", %"class.blink::MaybeShared.217"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.216"* %7, %"class.blink::DOMTypedArray.216"** %35, align 8, !alias.scope !167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.217"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.216"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !170
  %6 = getelementptr inbounds %"class.blink::MaybeShared.217", %"class.blink::MaybeShared.217"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.216"* %5, %"class.blink::DOMTypedArray.216"** %6, align 8, !alias.scope !170
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.217"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.216"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !173
  %7 = getelementptr inbounds %"class.blink::MaybeShared.217", %"class.blink::MaybeShared.217"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.216"* %6, %"class.blink::DOMTypedArray.216"** %7, align 8, !alias.scope !173
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIhLb1EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.218"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value19IsUint8ClampedArrayEv(%"class.v8::Value"* %3) #4, !noalias !176
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.218"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !176
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !176
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.218", %"class.blink::TypedFlexibleArrayBufferView.218"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.218", %"class.blink::TypedFlexibleArrayBufferView.218"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.218", %"class.blink::TypedFlexibleArrayBufferView.218"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !176
  store i64 %11, i64* %14, align 8, !alias.scope !176
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.218", %"class.blink::TypedFlexibleArrayBufferView.218"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !176
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !176
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink40v8_uint8_clamped_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !176
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !176
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !176
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !176
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView.218"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !176
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewIhLb1EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.218"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value19IsUint8ClampedArrayEv(%"class.v8::Value"* %3) #4, !noalias !179
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.218"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !179
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !179
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.218", %"class.blink::TypedFlexibleArrayBufferView.218"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.218", %"class.blink::TypedFlexibleArrayBufferView.218"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.218", %"class.blink::TypedFlexibleArrayBufferView.218"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !179
  store i64 %11, i64* %14, align 8, !alias.scope !179
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.218", %"class.blink::TypedFlexibleArrayBufferView.218"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !179
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !179
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView.218"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !179
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !179
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink40v8_uint8_clamped_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !179
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !179
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !179
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !179
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView.218"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !179
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.219"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.222"* @_ZN5blink13V8Uint16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !182
  %7 = icmp eq %"class.blink::DOMTypedArray.222"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !182
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint16_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !182
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !182
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !182
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !182
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !182
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !182
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !182
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !182
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !182
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !182
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !182
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !182
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray.222", %"class.blink::DOMTypedArray.222"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !182
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !182
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !182
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !182
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray.222"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.219", %"class.blink::NotShared.219"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.222"* %43, %"class.blink::DOMTypedArray.222"** %44, align 8, !alias.scope !182
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.219"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.222"* @_ZN5blink13V8Uint16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !185
  %8 = icmp eq %"class.blink::DOMTypedArray.222"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !185
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint16_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !185
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !185
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !185
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !185
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !185
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !185
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !185
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !185
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !185
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !185
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !185
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !185
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray.222", %"class.blink::DOMTypedArray.222"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !185
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !185
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !185
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !185
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray.222"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.219", %"class.blink::NotShared.219"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.222"* %44, %"class.blink::DOMTypedArray.222"** %45, align 8, !alias.scope !185
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.219"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.222"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !188
  %6 = icmp eq %"class.blink::DOMTypedArray.222"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray.222", %"class.blink::DOMTypedArray.222"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !188
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !188
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !188
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !188
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray.222"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.219", %"class.blink::NotShared.219"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.222"* %17, %"class.blink::DOMTypedArray.222"** %18, align 8, !alias.scope !188
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.219"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.222"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !191
  %7 = icmp eq %"class.blink::DOMTypedArray.222"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray.222", %"class.blink::DOMTypedArray.222"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !191
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !191
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !191
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !191
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray.222"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.219", %"class.blink::NotShared.219"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.222"* %18, %"class.blink::DOMTypedArray.222"** %19, align 8, !alias.scope !191
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.223"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.222"* @_ZN5blink13V8Uint16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !194
  %7 = icmp eq %"class.blink::DOMTypedArray.222"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !194
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint16_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !194
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !194
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !194
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !194
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !194
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !194
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !194
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !194
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !194
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !194
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !194
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !194
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.223", %"class.blink::MaybeShared.223"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.222"* %6, %"class.blink::DOMTypedArray.222"** %34, align 8, !alias.scope !194
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.223"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.222"* @_ZN5blink13V8Uint16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !197
  %8 = icmp eq %"class.blink::DOMTypedArray.222"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !197
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint16_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !197
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !197
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !197
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !197
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !197
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !197
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !197
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !197
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !197
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !197
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !197
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !197
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.223", %"class.blink::MaybeShared.223"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.222"* %7, %"class.blink::DOMTypedArray.222"** %35, align 8, !alias.scope !197
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.223"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.222"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !200
  %6 = getelementptr inbounds %"class.blink::MaybeShared.223", %"class.blink::MaybeShared.223"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.222"* %5, %"class.blink::DOMTypedArray.222"** %6, align 8, !alias.scope !200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.223"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.222"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !203
  %7 = getelementptr inbounds %"class.blink::MaybeShared.223", %"class.blink::MaybeShared.223"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.222"* %6, %"class.blink::DOMTypedArray.222"** %7, align 8, !alias.scope !203
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewItLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.224"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value13IsUint16ArrayEv(%"class.v8::Value"* %3) #4, !noalias !206
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.224"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !206
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !206
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.224", %"class.blink::TypedFlexibleArrayBufferView.224"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.224", %"class.blink::TypedFlexibleArrayBufferView.224"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.224", %"class.blink::TypedFlexibleArrayBufferView.224"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !206
  store i64 %11, i64* %14, align 8, !alias.scope !206
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.224", %"class.blink::TypedFlexibleArrayBufferView.224"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !206
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !206
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint16_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !206
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !206
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !206
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !206
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView.224"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !206
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewItLb0EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.224"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value13IsUint16ArrayEv(%"class.v8::Value"* %3) #4, !noalias !209
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.224"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !209
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !209
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.224", %"class.blink::TypedFlexibleArrayBufferView.224"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.224", %"class.blink::TypedFlexibleArrayBufferView.224"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.224", %"class.blink::TypedFlexibleArrayBufferView.224"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !209
  store i64 %11, i64* %14, align 8, !alias.scope !209
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.224", %"class.blink::TypedFlexibleArrayBufferView.224"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !209
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !209
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView.224"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !209
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !209
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint16_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !209
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !209
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !209
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !209
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView.224"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !209
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.225"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.228"* @_ZN5blink13V8Uint32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !212
  %7 = icmp eq %"class.blink::DOMTypedArray.228"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !212
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !212
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !212
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !212
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !212
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !212
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !212
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !212
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !212
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !212
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !212
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !212
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !212
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray.228", %"class.blink::DOMTypedArray.228"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !212
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !212
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !212
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !212
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray.228"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.225", %"class.blink::NotShared.225"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.228"* %43, %"class.blink::DOMTypedArray.228"** %44, align 8, !alias.scope !212
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.225"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.228"* @_ZN5blink13V8Uint32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !215
  %8 = icmp eq %"class.blink::DOMTypedArray.228"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !215
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !215
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !215
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !215
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !215
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !215
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !215
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !215
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !215
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !215
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !215
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !215
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !215
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray.228", %"class.blink::DOMTypedArray.228"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !215
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !215
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !215
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !215
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray.228"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.225", %"class.blink::NotShared.225"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.228"* %44, %"class.blink::DOMTypedArray.228"** %45, align 8, !alias.scope !215
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.225"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.228"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !218
  %6 = icmp eq %"class.blink::DOMTypedArray.228"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray.228", %"class.blink::DOMTypedArray.228"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !218
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !218
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !218
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !218
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray.228"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.225", %"class.blink::NotShared.225"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.228"* %17, %"class.blink::DOMTypedArray.228"** %18, align 8, !alias.scope !218
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.225"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.228"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !221
  %7 = icmp eq %"class.blink::DOMTypedArray.228"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray.228", %"class.blink::DOMTypedArray.228"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !221
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !221
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !221
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !221
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray.228"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.225", %"class.blink::NotShared.225"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.228"* %18, %"class.blink::DOMTypedArray.228"** %19, align 8, !alias.scope !221
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.229"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.228"* @_ZN5blink13V8Uint32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !224
  %7 = icmp eq %"class.blink::DOMTypedArray.228"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !224
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !224
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !224
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !224
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !224
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !224
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !224
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !224
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !224
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !224
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !224
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !224
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !224
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.229", %"class.blink::MaybeShared.229"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.228"* %6, %"class.blink::DOMTypedArray.228"** %34, align 8, !alias.scope !224
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.229"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.228"* @_ZN5blink13V8Uint32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !227
  %8 = icmp eq %"class.blink::DOMTypedArray.228"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !227
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !227
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !227
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !227
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !227
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !227
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !227
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !227
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !227
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !227
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !227
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !227
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !227
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.229", %"class.blink::MaybeShared.229"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.228"* %7, %"class.blink::DOMTypedArray.228"** %35, align 8, !alias.scope !227
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.229"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.228"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !230
  %6 = getelementptr inbounds %"class.blink::MaybeShared.229", %"class.blink::MaybeShared.229"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.228"* %5, %"class.blink::DOMTypedArray.228"** %6, align 8, !alias.scope !230
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.229"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.228"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !233
  %7 = getelementptr inbounds %"class.blink::MaybeShared.229", %"class.blink::MaybeShared.229"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.228"* %6, %"class.blink::DOMTypedArray.228"** %7, align 8, !alias.scope !233
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIjLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.230"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value13IsUint32ArrayEv(%"class.v8::Value"* %3) #4, !noalias !236
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.230"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !236
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !236
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.230", %"class.blink::TypedFlexibleArrayBufferView.230"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.230", %"class.blink::TypedFlexibleArrayBufferView.230"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.230", %"class.blink::TypedFlexibleArrayBufferView.230"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !236
  store i64 %11, i64* %14, align 8, !alias.scope !236
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.230", %"class.blink::TypedFlexibleArrayBufferView.230"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !236
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !236
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !236
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !236
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !236
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !236
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView.230"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !236
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewIjLb0EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.230"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value13IsUint32ArrayEv(%"class.v8::Value"* %3) #4, !noalias !239
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.230"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !239
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !239
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.230", %"class.blink::TypedFlexibleArrayBufferView.230"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.230", %"class.blink::TypedFlexibleArrayBufferView.230"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.230", %"class.blink::TypedFlexibleArrayBufferView.230"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !239
  store i64 %11, i64* %14, align 8, !alias.scope !239
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.230", %"class.blink::TypedFlexibleArrayBufferView.230"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !239
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !239
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView.230"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !239
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !239
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !239
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !239
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !239
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !239
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView.230"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !239
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.231"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.234"* @_ZN5blink15V8BigInt64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !242
  %7 = icmp eq %"class.blink::DOMTypedArray.234"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !242
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink37v8_big_int_64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !242
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !242
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !242
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !242
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !242
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !242
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !242
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !242
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !242
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !242
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !242
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !242
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray.234", %"class.blink::DOMTypedArray.234"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !242
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !242
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !242
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !242
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray.234"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.231", %"class.blink::NotShared.231"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.234"* %43, %"class.blink::DOMTypedArray.234"** %44, align 8, !alias.scope !242
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.231"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.234"* @_ZN5blink15V8BigInt64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !245
  %8 = icmp eq %"class.blink::DOMTypedArray.234"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !245
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink37v8_big_int_64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !245
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !245
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !245
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !245
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !245
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !245
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !245
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !245
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !245
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !245
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !245
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !245
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray.234", %"class.blink::DOMTypedArray.234"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !245
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !245
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !245
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !245
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray.234"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.231", %"class.blink::NotShared.231"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.234"* %44, %"class.blink::DOMTypedArray.234"** %45, align 8, !alias.scope !245
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.231"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.234"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !248
  %6 = icmp eq %"class.blink::DOMTypedArray.234"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray.234", %"class.blink::DOMTypedArray.234"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !248
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !248
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !248
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !248
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray.234"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.231", %"class.blink::NotShared.231"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.234"* %17, %"class.blink::DOMTypedArray.234"** %18, align 8, !alias.scope !248
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.231"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.234"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !251
  %7 = icmp eq %"class.blink::DOMTypedArray.234"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray.234", %"class.blink::DOMTypedArray.234"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !251
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !251
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !251
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !251
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray.234"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.231", %"class.blink::NotShared.231"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.234"* %18, %"class.blink::DOMTypedArray.234"** %19, align 8, !alias.scope !251
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.235"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.234"* @_ZN5blink15V8BigInt64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !254
  %7 = icmp eq %"class.blink::DOMTypedArray.234"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !254
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink37v8_big_int_64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !254
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !254
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !254
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !254
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !254
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !254
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !254
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !254
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !254
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !254
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !254
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !254
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.235", %"class.blink::MaybeShared.235"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.234"* %6, %"class.blink::DOMTypedArray.234"** %34, align 8, !alias.scope !254
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.235"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.234"* @_ZN5blink15V8BigInt64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !257
  %8 = icmp eq %"class.blink::DOMTypedArray.234"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !257
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink37v8_big_int_64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !257
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !257
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !257
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !257
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !257
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !257
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !257
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !257
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !257
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !257
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !257
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !257
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.235", %"class.blink::MaybeShared.235"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.234"* %7, %"class.blink::DOMTypedArray.234"** %35, align 8, !alias.scope !257
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.235"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.234"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !260
  %6 = getelementptr inbounds %"class.blink::MaybeShared.235", %"class.blink::MaybeShared.235"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.234"* %5, %"class.blink::DOMTypedArray.234"** %6, align 8, !alias.scope !260
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.235"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.234"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !263
  %7 = getelementptr inbounds %"class.blink::MaybeShared.235", %"class.blink::MaybeShared.235"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.234"* %6, %"class.blink::DOMTypedArray.234"** %7, align 8, !alias.scope !263
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIlLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.236"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value15IsBigInt64ArrayEv(%"class.v8::Value"* %3) #4, !noalias !266
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.236"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !266
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !266
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.236", %"class.blink::TypedFlexibleArrayBufferView.236"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.236", %"class.blink::TypedFlexibleArrayBufferView.236"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.236", %"class.blink::TypedFlexibleArrayBufferView.236"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !266
  store i64 %11, i64* %14, align 8, !alias.scope !266
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.236", %"class.blink::TypedFlexibleArrayBufferView.236"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !266
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !266
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink37v8_big_int_64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !266
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !266
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !266
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !266
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView.236"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !266
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewIlLb0EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.236"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value15IsBigInt64ArrayEv(%"class.v8::Value"* %3) #4, !noalias !269
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.236"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !269
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !269
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.236", %"class.blink::TypedFlexibleArrayBufferView.236"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.236", %"class.blink::TypedFlexibleArrayBufferView.236"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.236", %"class.blink::TypedFlexibleArrayBufferView.236"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !269
  store i64 %11, i64* %14, align 8, !alias.scope !269
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.236", %"class.blink::TypedFlexibleArrayBufferView.236"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !269
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !269
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView.236"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !269
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !269
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink37v8_big_int_64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !269
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !269
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !269
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !269
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView.236"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !269
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.237"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.240"* @_ZN5blink16V8BigUint64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !272
  %7 = icmp eq %"class.blink::DOMTypedArray.240"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !272
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_big_uint_64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !272
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !272
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !272
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !272
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !272
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !272
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !272
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !272
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !272
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !272
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !272
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !272
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray.240", %"class.blink::DOMTypedArray.240"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !272
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !272
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !272
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !272
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray.240"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.237", %"class.blink::NotShared.237"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.240"* %43, %"class.blink::DOMTypedArray.240"** %44, align 8, !alias.scope !272
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.237"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.240"* @_ZN5blink16V8BigUint64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !275
  %8 = icmp eq %"class.blink::DOMTypedArray.240"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !275
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_big_uint_64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !275
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !275
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !275
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !275
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !275
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !275
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !275
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !275
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !275
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !275
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !275
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !275
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray.240", %"class.blink::DOMTypedArray.240"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !275
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !275
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !275
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !275
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray.240"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.237", %"class.blink::NotShared.237"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.240"* %44, %"class.blink::DOMTypedArray.240"** %45, align 8, !alias.scope !275
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.237"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.240"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !278
  %6 = icmp eq %"class.blink::DOMTypedArray.240"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray.240", %"class.blink::DOMTypedArray.240"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !278
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !278
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !278
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !278
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray.240"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.237", %"class.blink::NotShared.237"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.240"* %17, %"class.blink::DOMTypedArray.240"** %18, align 8, !alias.scope !278
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.237"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.240"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !281
  %7 = icmp eq %"class.blink::DOMTypedArray.240"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray.240", %"class.blink::DOMTypedArray.240"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !281
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !281
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !281
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !281
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray.240"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.237", %"class.blink::NotShared.237"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.240"* %18, %"class.blink::DOMTypedArray.240"** %19, align 8, !alias.scope !281
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.241"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.240"* @_ZN5blink16V8BigUint64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !284
  %7 = icmp eq %"class.blink::DOMTypedArray.240"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !284
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_big_uint_64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !284
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !284
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !284
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !284
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !284
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !284
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !284
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !284
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !284
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !284
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !284
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !284
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.241", %"class.blink::MaybeShared.241"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.240"* %6, %"class.blink::DOMTypedArray.240"** %34, align 8, !alias.scope !284
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.241"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.240"* @_ZN5blink16V8BigUint64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !287
  %8 = icmp eq %"class.blink::DOMTypedArray.240"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !287
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_big_uint_64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !287
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !287
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !287
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !287
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !287
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !287
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !287
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !287
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !287
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !287
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !287
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !287
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.241", %"class.blink::MaybeShared.241"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.240"* %7, %"class.blink::DOMTypedArray.240"** %35, align 8, !alias.scope !287
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.241"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.240"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !290
  %6 = getelementptr inbounds %"class.blink::MaybeShared.241", %"class.blink::MaybeShared.241"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.240"* %5, %"class.blink::DOMTypedArray.240"** %6, align 8, !alias.scope !290
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.241"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.240"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !293
  %7 = getelementptr inbounds %"class.blink::MaybeShared.241", %"class.blink::MaybeShared.241"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.240"* %6, %"class.blink::DOMTypedArray.240"** %7, align 8, !alias.scope !293
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewImLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.242"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value16IsBigUint64ArrayEv(%"class.v8::Value"* %3) #4, !noalias !296
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.242"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !296
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !296
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.242", %"class.blink::TypedFlexibleArrayBufferView.242"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.242", %"class.blink::TypedFlexibleArrayBufferView.242"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.242", %"class.blink::TypedFlexibleArrayBufferView.242"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !296
  store i64 %11, i64* %14, align 8, !alias.scope !296
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.242", %"class.blink::TypedFlexibleArrayBufferView.242"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !296
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !296
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_big_uint_64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !296
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !296
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !296
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !296
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView.242"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !296
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewImLb0EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.242"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value16IsBigUint64ArrayEv(%"class.v8::Value"* %3) #4, !noalias !299
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.242"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !299
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !299
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.242", %"class.blink::TypedFlexibleArrayBufferView.242"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.242", %"class.blink::TypedFlexibleArrayBufferView.242"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.242", %"class.blink::TypedFlexibleArrayBufferView.242"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !299
  store i64 %11, i64* %14, align 8, !alias.scope !299
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.242", %"class.blink::TypedFlexibleArrayBufferView.242"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !299
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !299
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView.242"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !299
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !299
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_big_uint_64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !299
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !299
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !299
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !299
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView.242"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !299
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.243"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.246"* @_ZN5blink14V8Float32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !302
  %7 = icmp eq %"class.blink::DOMTypedArray.246"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !302
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !302
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !302
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !302
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !302
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !302
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !302
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !302
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !302
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !302
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !302
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !302
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !302
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray.246", %"class.blink::DOMTypedArray.246"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !302
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !302
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !302
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !302
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray.246"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.243", %"class.blink::NotShared.243"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.246"* %43, %"class.blink::DOMTypedArray.246"** %44, align 8, !alias.scope !302
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.243"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.246"* @_ZN5blink14V8Float32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !305
  %8 = icmp eq %"class.blink::DOMTypedArray.246"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !305
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !305
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !305
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !305
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !305
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !305
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !305
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !305
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !305
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !305
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !305
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !305
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !305
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray.246", %"class.blink::DOMTypedArray.246"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !305
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !305
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !305
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !305
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray.246"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.243", %"class.blink::NotShared.243"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.246"* %44, %"class.blink::DOMTypedArray.246"** %45, align 8, !alias.scope !305
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.243"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.246"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !308
  %6 = icmp eq %"class.blink::DOMTypedArray.246"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray.246", %"class.blink::DOMTypedArray.246"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !308
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !308
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !308
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !308
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray.246"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.243", %"class.blink::NotShared.243"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.246"* %17, %"class.blink::DOMTypedArray.246"** %18, align 8, !alias.scope !308
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.243"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.246"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !311
  %7 = icmp eq %"class.blink::DOMTypedArray.246"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray.246", %"class.blink::DOMTypedArray.246"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !311
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !311
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !311
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !311
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray.246"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.243", %"class.blink::NotShared.243"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.246"* %18, %"class.blink::DOMTypedArray.246"** %19, align 8, !alias.scope !311
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.247"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.246"* @_ZN5blink14V8Float32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !314
  %7 = icmp eq %"class.blink::DOMTypedArray.246"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !314
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !314
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !314
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !314
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !314
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !314
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !314
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !314
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !314
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !314
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !314
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !314
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !314
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.247", %"class.blink::MaybeShared.247"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.246"* %6, %"class.blink::DOMTypedArray.246"** %34, align 8, !alias.scope !314
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.247"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.246"* @_ZN5blink14V8Float32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !317
  %8 = icmp eq %"class.blink::DOMTypedArray.246"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !317
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float32_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !317
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !317
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !317
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !317
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !317
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !317
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !317
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !317
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !317
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !317
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !317
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !317
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.247", %"class.blink::MaybeShared.247"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.246"* %7, %"class.blink::DOMTypedArray.246"** %35, align 8, !alias.scope !317
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.247"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.246"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !320
  %6 = getelementptr inbounds %"class.blink::MaybeShared.247", %"class.blink::MaybeShared.247"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.246"* %5, %"class.blink::DOMTypedArray.246"** %6, align 8, !alias.scope !320
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.247"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.246"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !323
  %7 = getelementptr inbounds %"class.blink::MaybeShared.247", %"class.blink::MaybeShared.247"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.246"* %6, %"class.blink::DOMTypedArray.246"** %7, align 8, !alias.scope !323
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIfLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.248"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %3) #4, !noalias !326
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.248"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !326
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !326
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.248", %"class.blink::TypedFlexibleArrayBufferView.248"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.248", %"class.blink::TypedFlexibleArrayBufferView.248"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.248", %"class.blink::TypedFlexibleArrayBufferView.248"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !326
  store i64 %11, i64* %14, align 8, !alias.scope !326
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.248", %"class.blink::TypedFlexibleArrayBufferView.248"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !326
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !326
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !326
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !326
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !326
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !326
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView.248"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !326
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewIfLb0EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.248"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"* %3) #4, !noalias !329
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.248"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !329
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !329
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.248", %"class.blink::TypedFlexibleArrayBufferView.248"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.248", %"class.blink::TypedFlexibleArrayBufferView.248"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.248", %"class.blink::TypedFlexibleArrayBufferView.248"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !329
  store i64 %11, i64* %14, align 8, !alias.scope !329
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.248", %"class.blink::TypedFlexibleArrayBufferView.248"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !329
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !329
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView.248"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !329
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !329
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !329
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !329
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !329
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !329
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView.248"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !329
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.249"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.252"* @_ZN5blink14V8Float64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !332
  %7 = icmp eq %"class.blink::DOMTypedArray.252"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !332
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !332
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !332
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !332
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !332
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !332
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !332
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !332
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !332
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !332
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !332
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !332
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !332
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMTypedArray.252", %"class.blink::DOMTypedArray.252"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !332
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !332
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !332
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !332
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMTypedArray.252"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.249", %"class.blink::NotShared.249"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.252"* %43, %"class.blink::DOMTypedArray.252"** %44, align 8, !alias.scope !332
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.249"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.252"* @_ZN5blink14V8Float64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !335
  %8 = icmp eq %"class.blink::DOMTypedArray.252"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !335
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !335
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !335
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !335
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !335
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !335
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !335
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !335
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !335
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !335
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !335
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !335
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !335
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMTypedArray.252", %"class.blink::DOMTypedArray.252"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !335
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !335
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !335
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !335
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMTypedArray.252"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.249", %"class.blink::NotShared.249"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.252"* %44, %"class.blink::DOMTypedArray.252"** %45, align 8, !alias.scope !335
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.249"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.252"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !338
  %6 = icmp eq %"class.blink::DOMTypedArray.252"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMTypedArray.252", %"class.blink::DOMTypedArray.252"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !338
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !338
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !338
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !338
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMTypedArray.252"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.249", %"class.blink::NotShared.249"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.252"* %17, %"class.blink::DOMTypedArray.252"** %18, align 8, !alias.scope !338
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.249"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.252"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !341
  %7 = icmp eq %"class.blink::DOMTypedArray.252"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMTypedArray.252", %"class.blink::DOMTypedArray.252"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !341
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !341
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !341
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !341
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMTypedArray.252"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.249", %"class.blink::NotShared.249"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.252"* %18, %"class.blink::DOMTypedArray.252"** %19, align 8, !alias.scope !341
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEvE11NativeValueEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.253"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.252"* @_ZN5blink14V8Float64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !344
  %7 = icmp eq %"class.blink::DOMTypedArray.252"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !344
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !344
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !344
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !344
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !344
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !344
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !344
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !344
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !344
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !344
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !344
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !344
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !344
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.253", %"class.blink::MaybeShared.253"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.252"* %6, %"class.blink::DOMTypedArray.252"** %34, align 8, !alias.scope !344
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEvE13ArgumentValueEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.253"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMTypedArray.252"* @_ZN5blink14V8Float64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !347
  %8 = icmp eq %"class.blink::DOMTypedArray.252"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !347
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float64_array_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !347
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !347
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !347
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !347
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !347
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !347
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !347
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !347
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !347
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !347
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !347
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !347
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.253", %"class.blink::MaybeShared.253"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.252"* %7, %"class.blink::DOMTypedArray.252"** %35, align 8, !alias.scope !347
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEEEvE11NativeValueEPNS4_7IsolateENS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.253"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMTypedArray.252"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !350
  %6 = getelementptr inbounds %"class.blink::MaybeShared.253", %"class.blink::MaybeShared.253"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.252"* %5, %"class.blink::DOMTypedArray.252"** %6, align 8, !alias.scope !350
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEEEvE13ArgumentValueEPNS4_7IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.253"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMTypedArray.252"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !353
  %7 = getelementptr inbounds %"class.blink::MaybeShared.253", %"class.blink::MaybeShared.253"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.252"* %6, %"class.blink::DOMTypedArray.252"** %7, align 8, !alias.scope !353
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_28TypedFlexibleArrayBufferViewIdLb0EEEvE13ArgumentValueEPN2v87IsolateEiNS4_5LocalINS4_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.254"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value14IsFloat64ArrayEv(%"class.v8::Value"* %3) #4, !noalias !356
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.254"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !356
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !356
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.254", %"class.blink::TypedFlexibleArrayBufferView.254"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.254", %"class.blink::TypedFlexibleArrayBufferView.254"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.254", %"class.blink::TypedFlexibleArrayBufferView.254"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !356
  store i64 %11, i64* %14, align 8, !alias.scope !356
  br label %48

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.254", %"class.blink::TypedFlexibleArrayBufferView.254"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !356
  br label %48

22:                                               ; preds = %5
  %23 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4, !noalias !356
  %24 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %24) #4
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %26, align 8, !noalias !356
  %27 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %28 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %27, align 8, !noalias !356
  %29 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %28, i64 3
  %30 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %29, align 8
  call void %30(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8, !noalias !356
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %45, %42, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4, !noalias !356
  %47 = bitcast %"class.blink::TypedFlexibleArrayBufferView.254"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 88, i1 false) #4, !alias.scope !356
  br label %48

48:                                               ; preds = %13, %18, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_28TypedFlexibleArrayBufferViewIdLb0EEEEEvE13ArgumentValueEPN2v87IsolateEiNS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::TypedFlexibleArrayBufferView.254"* noalias sret, %"class.v8::Isolate"* nocapture readnone, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZNK2v85Value14IsFloat64ArrayEv(%"class.v8::Value"* %3) #4, !noalias !359
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast %"class.v8::Value"* %3 to %"class.v8::ArrayBufferView"*
  %10 = bitcast %"class.blink::TypedFlexibleArrayBufferView.254"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #4, !alias.scope !359
  %11 = tail call i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"* %9) #4, !noalias !359
  %12 = icmp ult i64 %11, 65
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.254", %"class.blink::TypedFlexibleArrayBufferView.254"* %0, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.254", %"class.blink::TypedFlexibleArrayBufferView.254"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.254", %"class.blink::TypedFlexibleArrayBufferView.254"* %0, i64 0, i32 0, i32 3, i64 0
  %17 = tail call i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"* %9, i8* %16, i64 %11) #4
  store i8* %16, i8** %15, align 8, !alias.scope !359
  store i64 %11, i64* %14, align 8, !alias.scope !359
  br label %71

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::TypedFlexibleArrayBufferView.254", %"class.blink::TypedFlexibleArrayBufferView.254"* %0, i64 0, i32 0, i32 0
  %20 = bitcast %"class.v8::Value"* %3 to %"class.v8::Object"*
  %21 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"* %20) #4
  store %"class.blink::DOMArrayBufferView"* %21, %"class.blink::DOMArrayBufferView"** %19, align 8, !alias.scope !359
  br label %71

22:                                               ; preds = %5
  %23 = bitcast %"class.v8::Value"* %3 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !359
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %45

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  switch i32 %42, label %45 [
    i32 5, label %43
    i32 3, label %43
  ]

43:                                               ; preds = %38, %38
  %44 = bitcast %"class.blink::TypedFlexibleArrayBufferView.254"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 88, i1 false) #4, !alias.scope !359
  br label %71

45:                                               ; preds = %38, %27, %22
  %46 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4, !noalias !359
  %47 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %47) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8, !noalias !359
  %50 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8, !noalias !359
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8, !noalias !359
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %68, %65, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4, !noalias !359
  %70 = bitcast %"class.blink::TypedFlexibleArrayBufferView.254"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 88, i1 false) #4, !alias.scope !359
  br label %71

71:                                               ; preds = %13, %18, %43, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_11DOMDataViewEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.255"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMDataView"* @_ZN5blink10V8DataView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !362
  %7 = icmp eq %"class.blink::DOMDataView"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !362
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink30v8_data_view_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !362
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !362
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !362
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !362
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !362
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !362
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !362
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !362
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !362
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !362
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !362
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !362
  br label %42

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::DOMDataView", %"class.blink::DOMDataView"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %34, align 8, !noalias !362
  %36 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %35, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %36, align 8, !noalias !362
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %37) #4, !noalias !362
  br i1 %40, label %41, label %42

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !362
  br label %42

42:                                               ; preds = %33, %39, %32, %41
  %43 = phi %"class.blink::DOMDataView"* [ null, %32 ], [ null, %41 ], [ %6, %39 ], [ %6, %33 ]
  %44 = getelementptr inbounds %"class.blink::NotShared.255", %"class.blink::NotShared.255"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMDataView"* %43, %"class.blink::DOMDataView"** %44, align 8, !alias.scope !362
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_9NotSharedINS_11DOMDataViewEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.255"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMDataView"* @_ZN5blink10V8DataView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !365
  %8 = icmp eq %"class.blink::DOMDataView"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !365
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink30v8_data_view_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !365
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !365
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !365
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !365
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !365
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !365
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !365
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !365
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !365
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !365
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !365
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !365
  br label %43

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::DOMDataView", %"class.blink::DOMDataView"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %35, align 8, !noalias !365
  %37 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %36, i64 0, i32 1, i32 0, i32 0
  %38 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %37, align 8, !noalias !365
  %39 = icmp eq %"class.v8::BackingStore"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %34
  %41 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %38) #4, !noalias !365
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !365
  br label %43

43:                                               ; preds = %34, %40, %33, %42
  %44 = phi %"class.blink::DOMDataView"* [ null, %33 ], [ null, %42 ], [ %7, %40 ], [ %7, %34 ]
  %45 = getelementptr inbounds %"class.blink::NotShared.255", %"class.blink::NotShared.255"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMDataView"* %44, %"class.blink::DOMDataView"** %45, align 8, !alias.scope !365
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_11DOMDataViewEEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.255"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMDataView"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !368
  %6 = icmp eq %"class.blink::DOMDataView"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::DOMDataView", %"class.blink::DOMDataView"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %8, align 8, !noalias !368
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8, !noalias !368
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %11) #4, !noalias !368
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !368
  br label %16

16:                                               ; preds = %7, %13, %4, %15
  %17 = phi %"class.blink::DOMDataView"* [ null, %15 ], [ null, %4 ], [ %5, %13 ], [ %5, %7 ]
  %18 = getelementptr inbounds %"class.blink::NotShared.255", %"class.blink::NotShared.255"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMDataView"* %17, %"class.blink::DOMDataView"** %18, align 8, !alias.scope !368
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_9NotSharedINS_11DOMDataViewEEEEEvE13ArgumentValueEPN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::NotShared.255"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMDataView"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !371
  %7 = icmp eq %"class.blink::DOMDataView"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %"class.blink::DOMDataView", %"class.blink::DOMDataView"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %9, align 8, !noalias !371
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %11, align 8, !noalias !371
  %13 = icmp eq %"class.v8::BackingStore"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = tail call zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"* nonnull %12) #4, !noalias !371
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #4, !noalias !371
  br label %17

17:                                               ; preds = %8, %14, %5, %16
  %18 = phi %"class.blink::DOMDataView"* [ null, %16 ], [ null, %5 ], [ %6, %14 ], [ %6, %8 ]
  %19 = getelementptr inbounds %"class.blink::NotShared.255", %"class.blink::NotShared.255"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMDataView"* %18, %"class.blink::DOMDataView"** %19, align 8, !alias.scope !371
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_11DOMDataViewEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.258"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMDataView"* @_ZN5blink10V8DataView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2) #4, !noalias !374
  %7 = icmp eq %"class.blink::DOMDataView"* %6, null
  br i1 %7, label %8, label %33

8:                                                ; preds = %4
  %9 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4, !noalias !374
  %10 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink30v8_data_view_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !374
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %10) #4, !noalias !374
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8, !noalias !374
  %13 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %13, align 8, !noalias !374
  %15 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %14, i64 3
  %16 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, align 8, !noalias !374
  call void %16(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4, !noalias !374
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8, !noalias !374
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4, !noalias !374
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4, !noalias !374
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4, !noalias !374
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4, !noalias !374
  br label %32

32:                                               ; preds = %31, %28, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4, !noalias !374
  br label %33

33:                                               ; preds = %4, %32
  %34 = getelementptr inbounds %"class.blink::MaybeShared.258", %"class.blink::MaybeShared.258"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMDataView"* %6, %"class.blink::DOMDataView"** %34, align 8, !alias.scope !374
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11MaybeSharedINS_11DOMDataViewEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.258"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call %"class.blink::DOMDataView"* @_ZN5blink10V8DataView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %3) #4, !noalias !377
  %8 = icmp eq %"class.blink::DOMDataView"* %7, null
  br i1 %8, label %9, label %34

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4, !noalias !377
  %11 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink30v8_data_view_wrapper_type_infoE, i64 0, i32 3), align 8, !noalias !377
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %2, i8* %11) #4, !noalias !377
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8, !noalias !377
  %14 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %15 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %14, align 8, !noalias !377
  %16 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %15, i64 3
  %17 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %16, align 8, !noalias !377
  call void %17(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4, !noalias !377
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8, !noalias !377
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4, !noalias !377
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4, !noalias !377
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4, !noalias !377
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #4, !noalias !377
  br label %33

33:                                               ; preds = %32, %29, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4, !noalias !377
  br label %34

34:                                               ; preds = %5, %33
  %35 = getelementptr inbounds %"class.blink::MaybeShared.258", %"class.blink::MaybeShared.258"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMDataView"* %7, %"class.blink::DOMDataView"** %35, align 8, !alias.scope !377
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_11DOMDataViewEEEEEvE11NativeValueEPN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.258"* noalias nocapture sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call fastcc %"class.blink::DOMDataView"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4, !noalias !380
  %6 = getelementptr inbounds %"class.blink::MaybeShared.258", %"class.blink::MaybeShared.258"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMDataView"* %5, %"class.blink::DOMDataView"** %6, align 8, !alias.scope !380
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_11MaybeSharedINS_11DOMDataViewEEEEEvE13ArgumentValueEPN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.blink::MaybeShared.258"* noalias nocapture sret, %"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = tail call fastcc %"class.blink::DOMDataView"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, i32 %2, %"class.v8::Value"* %3, %"class.blink::ExceptionState"* dereferenceable(72) %4) #4, !noalias !383
  %7 = getelementptr inbounds %"class.blink::MaybeShared.258", %"class.blink::MaybeShared.258"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMDataView"* %6, %"class.blink::DOMDataView"** %7, align 8, !alias.scope !383
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EventListener"* @_ZN5blink17NativeValueTraitsINS_15IDLEventHandlerEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* nocapture readnone, %"class.v8::Value"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"* %1, i32 0) #4
  %5 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %4, i64 0, i32 0, i32 0
  ret %"class.blink::EventListener"* %5
}

declare %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EventListener"* @_ZN5blink17NativeValueTraitsINS_29IDLOnBeforeUnloadEventHandlerEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* nocapture readnone, %"class.v8::Value"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"* %1, i32 2) #4
  %5 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %4, i64 0, i32 0, i32 0
  ret %"class.blink::EventListener"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EventListener"* @_ZN5blink17NativeValueTraitsINS_22IDLOnErrorEventHandlerEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* nocapture readnone, %"class.v8::Value"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::JSEventHandler"* @_ZN5blink14JSEventHandler12CreateOrNullEN2v85LocalINS1_5ValueEEENS0_11HandlerTypeE(%"class.v8::Value"* %1, i32 1) #4
  %5 = getelementptr inbounds %"class.blink::JSEventHandler", %"class.blink::JSEventHandler"* %4, i64 0, i32 0, i32 0
  ret %"class.blink::EventListener"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XPathNSResolver"* @_ZN5blink17NativeValueTraitsINS_15XPathNSResolverEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %6 to %"class.blink::V8PerIsolateData"**
  %8 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %7, align 8
  %9 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %8, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink17V8XPathNSResolver18wrapper_type_info_E, %"class.v8::Value"* %1) #4
  br i1 %9, label %10, label %33

10:                                               ; preds = %3
  %11 = bitcast %"class.v8::Value"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %12, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  switch i16 %21, label %26 [
    i16 1057, label %22
    i16 1056, label %22
    i16 1040, label %22
  ]

22:                                               ; preds = %10, %10, %10
  %23 = add i64 %12, 19
  %24 = inttoptr i64 %23 to i8**
  %25 = load i8*, i8** %24, align 1
  br label %29

26:                                               ; preds = %10
  %27 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %28 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %27, i32 1) #4
  br label %29

29:                                               ; preds = %22, %26
  %30 = phi i8* [ %25, %22 ], [ %28, %26 ]
  %31 = bitcast i8* %30 to %"class.blink::XPathNSResolver"*
  %32 = icmp eq i8* %30, null
  br i1 %32, label %33, label %70

33:                                               ; preds = %3, %29
  %34 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #4
  br i1 %34, label %35, label %46

35:                                               ; preds = %33
  %36 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #4
  %37 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %36)
  %38 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #4
  %40 = bitcast i8* %39 to %"class.blink::V8CustomXPathNSResolver"*
  tail call void @_ZN5blink23V8CustomXPathNSResolverC1EPNS_11ScriptStateEN2v85LocalINS3_6ObjectEEE(%"class.blink::V8CustomXPathNSResolver"* %40, %"class.blink::ScriptState"* %37, %"class.v8::Object"* %38) #4
  %41 = getelementptr inbounds i8, i8* %39, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  %45 = bitcast i8* %39 to %"class.blink::XPathNSResolver"*
  br label %70

46:                                               ; preds = %33
  %47 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #4
  %48 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  %50 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %51 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %51, i64 3
  %53 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, align 8
  call void %53(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #4
  br label %69

69:                                               ; preds = %46, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #4
  br label %70

70:                                               ; preds = %29, %69, %35
  %71 = phi %"class.blink::XPathNSResolver"* [ %45, %35 ], [ null, %69 ], [ %31, %29 ]
  ret %"class.blink::XPathNSResolver"* %71
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)) #4
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0)) #4
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #4
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XPathNSResolver"* @_ZN5blink17NativeValueTraitsINS_15XPathNSResolverEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %7 to %"class.blink::V8PerIsolateData"**
  %9 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %8, align 8
  %10 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %9, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink17V8XPathNSResolver18wrapper_type_info_E, %"class.v8::Value"* %2) #4
  br i1 %10, label %11, label %34

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::Value"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %13, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  switch i16 %22, label %27 [
    i16 1057, label %23
    i16 1056, label %23
    i16 1040, label %23
  ]

23:                                               ; preds = %11, %11, %11
  %24 = add i64 %13, 19
  %25 = inttoptr i64 %24 to i8**
  %26 = load i8*, i8** %25, align 1
  br label %30

27:                                               ; preds = %11
  %28 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %29 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %28, i32 1) #4
  br label %30

30:                                               ; preds = %23, %27
  %31 = phi i8* [ %26, %23 ], [ %29, %27 ]
  %32 = bitcast i8* %31 to %"class.blink::XPathNSResolver"*
  %33 = icmp eq i8* %31, null
  br i1 %33, label %34, label %71

34:                                               ; preds = %4, %30
  %35 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #4
  br i1 %35, label %36, label %47

36:                                               ; preds = %34
  %37 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #4
  %38 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %37)
  %39 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %40 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #4
  %41 = bitcast i8* %40 to %"class.blink::V8CustomXPathNSResolver"*
  tail call void @_ZN5blink23V8CustomXPathNSResolverC1EPNS_11ScriptStateEN2v85LocalINS3_6ObjectEEE(%"class.blink::V8CustomXPathNSResolver"* %41, %"class.blink::ScriptState"* %38, %"class.v8::Object"* %39) #4
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = bitcast i8* %40 to %"class.blink::XPathNSResolver"*
  br label %71

47:                                               ; preds = %34
  %48 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #4
  %49 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #4
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %52, i64 3
  %54 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #4
  br label %70

70:                                               ; preds = %47, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #4
  br label %71

71:                                               ; preds = %30, %70, %36
  %72 = phi %"class.blink::XPathNSResolver"* [ %46, %36 ], [ null, %70 ], [ %32, %30 ]
  ret %"class.blink::XPathNSResolver"* %72
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XPathNSResolver"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_15XPathNSResolverEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %6 to %"class.blink::V8PerIsolateData"**
  %8 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %7, align 8
  %9 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %8, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink17V8XPathNSResolver18wrapper_type_info_E, %"class.v8::Value"* %1) #4
  br i1 %9, label %10, label %33

10:                                               ; preds = %3
  %11 = bitcast %"class.v8::Value"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %12, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  switch i16 %21, label %26 [
    i16 1057, label %22
    i16 1056, label %22
    i16 1040, label %22
  ]

22:                                               ; preds = %10, %10, %10
  %23 = add i64 %12, 19
  %24 = inttoptr i64 %23 to i8**
  %25 = load i8*, i8** %24, align 1
  br label %29

26:                                               ; preds = %10
  %27 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %28 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %27, i32 1) #4
  br label %29

29:                                               ; preds = %22, %26
  %30 = phi i8* [ %25, %22 ], [ %28, %26 ]
  %31 = bitcast i8* %30 to %"class.blink::XPathNSResolver"*
  %32 = icmp eq i8* %30, null
  br i1 %32, label %33, label %91

33:                                               ; preds = %3, %29
  %34 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %1) #4
  br i1 %34, label %35, label %46

35:                                               ; preds = %33
  %36 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #4
  %37 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %36)
  %38 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %39 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #4
  %40 = bitcast i8* %39 to %"class.blink::V8CustomXPathNSResolver"*
  tail call void @_ZN5blink23V8CustomXPathNSResolverC1EPNS_11ScriptStateEN2v85LocalINS3_6ObjectEEE(%"class.blink::V8CustomXPathNSResolver"* %40, %"class.blink::ScriptState"* %37, %"class.v8::Object"* %38) #4
  %41 = getelementptr inbounds i8, i8* %39, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  %45 = bitcast i8* %39 to %"class.blink::XPathNSResolver"*
  br label %91

46:                                               ; preds = %33
  %47 = bitcast %"class.v8::Value"* %1 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 3
  %50 = icmp eq i64 %49, 1
  br i1 %50, label %51, label %67

51:                                               ; preds = %46
  %52 = add i64 %48, -1
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i64 %48, -4294967296
  %56 = zext i32 %54 to i64
  %57 = or i64 %55, %56
  %58 = add i64 %57, 7
  %59 = inttoptr i64 %58 to i16*
  %60 = load i16, i16* %59, align 2
  %61 = icmp eq i16 %60, 67
  br i1 %61, label %62, label %67

62:                                               ; preds = %51
  %63 = add i64 %48, 23
  %64 = inttoptr i64 %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = ashr i32 %65, 1
  switch i32 %66, label %67 [
    i32 5, label %91
    i32 3, label %91
  ]

67:                                               ; preds = %62, %51, %46
  %68 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #4
  %69 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #4
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %70, align 8
  %71 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %72 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %72, i64 3
  %74 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %73, align 8
  call void %74(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #4
  br label %90

90:                                               ; preds = %67, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #4
  br label %91

91:                                               ; preds = %62, %62, %29, %90, %35
  %92 = phi %"class.blink::XPathNSResolver"* [ %45, %35 ], [ null, %90 ], [ %31, %29 ], [ null, %62 ], [ null, %62 ]
  ret %"class.blink::XPathNSResolver"* %92
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XPathNSResolver"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_15XPathNSResolverEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %7 = add i64 %6, 8
  %8 = inttoptr i64 %7 to %"class.blink::V8PerIsolateData"**
  %9 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %8, align 8
  %10 = tail call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %9, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink17V8XPathNSResolver18wrapper_type_info_E, %"class.v8::Value"* %2) #4
  br i1 %10, label %11, label %34

11:                                               ; preds = %4
  %12 = bitcast %"class.v8::Value"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %13, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  switch i16 %22, label %27 [
    i16 1057, label %23
    i16 1056, label %23
    i16 1040, label %23
  ]

23:                                               ; preds = %11, %11, %11
  %24 = add i64 %13, 19
  %25 = inttoptr i64 %24 to i8**
  %26 = load i8*, i8** %25, align 1
  br label %30

27:                                               ; preds = %11
  %28 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %29 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %28, i32 1) #4
  br label %30

30:                                               ; preds = %23, %27
  %31 = phi i8* [ %26, %23 ], [ %29, %27 ]
  %32 = bitcast i8* %31 to %"class.blink::XPathNSResolver"*
  %33 = icmp eq i8* %31, null
  br i1 %33, label %34, label %92

34:                                               ; preds = %4, %30
  %35 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #4
  br i1 %35, label %36, label %47

36:                                               ; preds = %34
  %37 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #4
  %38 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %37)
  %39 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %40 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #4
  %41 = bitcast i8* %40 to %"class.blink::V8CustomXPathNSResolver"*
  tail call void @_ZN5blink23V8CustomXPathNSResolverC1EPNS_11ScriptStateEN2v85LocalINS3_6ObjectEEE(%"class.blink::V8CustomXPathNSResolver"* %41, %"class.blink::ScriptState"* %38, %"class.v8::Object"* %39) #4
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = bitcast i8* %40 to %"class.blink::XPathNSResolver"*
  br label %92

47:                                               ; preds = %34
  %48 = bitcast %"class.v8::Value"* %2 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 3
  %51 = icmp eq i64 %50, 1
  br i1 %51, label %52, label %68

52:                                               ; preds = %47
  %53 = add i64 %49, -1
  %54 = inttoptr i64 %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = and i64 %49, -4294967296
  %57 = zext i32 %55 to i64
  %58 = or i64 %56, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load i16, i16* %60, align 2
  %62 = icmp eq i16 %61, 67
  br i1 %62, label %63, label %68

63:                                               ; preds = %52
  %64 = add i64 %49, 23
  %65 = inttoptr i64 %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = ashr i32 %66, 1
  switch i32 %67, label %68 [
    i32 5, label %92
    i32 3, label %92
  ]

68:                                               ; preds = %63, %52, %47
  %69 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #4
  %70 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0)) #4
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %71, align 8
  %72 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %73 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %73, i64 3
  %75 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %74, align 8
  call void %75(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #4
  br label %91

91:                                               ; preds = %68, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #4
  br label %92

92:                                               ; preds = %63, %63, %30, %91, %36
  %93 = phi %"class.blink::XPathNSResolver"* [ %46, %36 ], [ null, %91 ], [ %32, %30 ], [ null, %63 ], [ null, %63 ]
  ret %"class.blink::XPathNSResolver"* %93
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink13V8ArrayBuffer19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

declare %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v812BackingStore8IsSharedEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMArrayBufferView"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMArrayBufferView"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_array_buffer_view_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMArrayBufferView"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMArrayBufferView"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMArrayBufferView"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_array_buffer_view_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMArrayBufferView"* %6
}

declare zeroext i1 @_ZNK2v85Value17IsArrayBufferViewEv(%"class.v8::Value"*) local_unnamed_addr #2

declare i64 @_ZN2v815ArrayBufferView10ByteLengthEv(%"class.v8::ArrayBufferView"*) local_unnamed_addr #2

declare i64 @_ZN2v815ArrayBufferView12CopyContentsEPvm(%"class.v8::ArrayBufferView"*, i8*, i64) local_unnamed_addr #2

declare %"class.blink::DOMArrayBufferView"* @_ZN5blink17V8ArrayBufferView6ToImplEN2v85LocalINS1_6ObjectEEE(%"class.v8::Object"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray"* @_ZN5blink11V8Int8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink11V8Int8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink31v8_int8_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink11V8Int8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink31v8_int8_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray"* %6
}

declare zeroext i1 @_ZNK2v85Value11IsInt8ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray.198"* @_ZN5blink12V8Int16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.198"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray.198"* @_ZN5blink12V8Int16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray.198"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int16_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray.198"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.198"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.198"* @_ZN5blink12V8Int16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray.198"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int16_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray.198"* %6
}

declare zeroext i1 @_ZNK2v85Value12IsInt16ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray.204"* @_ZN5blink12V8Int32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.204"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray.204"* @_ZN5blink12V8Int32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray.204"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray.204"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.204"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.204"* @_ZN5blink12V8Int32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray.204"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_int32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray.204"* %6
}

declare zeroext i1 @_ZNK2v85Value12IsInt32ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray.210"* @_ZN5blink12V8Uint8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.210"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray.210"* @_ZN5blink12V8Uint8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray.210"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_uint8_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray.210"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.210"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.210"* @_ZN5blink12V8Uint8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray.210"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink32v8_uint8_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray.210"* %6
}

declare zeroext i1 @_ZNK2v85Value12IsUint8ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray.216"* @_ZN5blink19V8Uint8ClampedArray19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.216"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray.216"* @_ZN5blink19V8Uint8ClampedArray19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray.216"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink40v8_uint8_clamped_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray.216"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.216"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.216"* @_ZN5blink19V8Uint8ClampedArray19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray.216"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink40v8_uint8_clamped_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray.216"* %6
}

declare zeroext i1 @_ZNK2v85Value19IsUint8ClampedArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray.222"* @_ZN5blink13V8Uint16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.222"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray.222"* @_ZN5blink13V8Uint16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray.222"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint16_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray.222"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.222"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.222"* @_ZN5blink13V8Uint16Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray.222"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint16_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray.222"* %6
}

declare zeroext i1 @_ZNK2v85Value13IsUint16ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray.228"* @_ZN5blink13V8Uint32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.228"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray.228"* @_ZN5blink13V8Uint32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray.228"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray.228"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.228"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.228"* @_ZN5blink13V8Uint32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray.228"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink33v8_uint32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray.228"* %6
}

declare zeroext i1 @_ZNK2v85Value13IsUint32ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray.234"* @_ZN5blink15V8BigInt64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.234"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray.234"* @_ZN5blink15V8BigInt64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray.234"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink37v8_big_int_64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray.234"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.234"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.234"* @_ZN5blink15V8BigInt64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray.234"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink37v8_big_int_64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray.234"* %6
}

declare zeroext i1 @_ZNK2v85Value15IsBigInt64ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray.240"* @_ZN5blink16V8BigUint64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.240"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray.240"* @_ZN5blink16V8BigUint64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray.240"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_big_uint_64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray.240"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.240"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.240"* @_ZN5blink16V8BigUint64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray.240"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink38v8_big_uint_64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray.240"* %6
}

declare zeroext i1 @_ZNK2v85Value16IsBigUint64ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray.246"* @_ZN5blink14V8Float32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.246"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray.246"* @_ZN5blink14V8Float32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray.246"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray.246"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.246"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.246"* @_ZN5blink14V8Float32Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray.246"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float32_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray.246"* %6
}

declare zeroext i1 @_ZNK2v85Value14IsFloat32ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMTypedArray.252"* @_ZN5blink14V8Float64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.252"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMTypedArray.252"* @_ZN5blink14V8Float64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMTypedArray.252"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMTypedArray.252"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMTypedArray.252"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMTypedArray.252"* @_ZN5blink14V8Float64Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMTypedArray.252"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink34v8_float64_array_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMTypedArray.252"* %6
}

declare zeroext i1 @_ZNK2v85Value14IsFloat64ArrayEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.blink::DOMDataView"* @_ZN5blink10V8DataView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMDataView"* @_ZN5blink12_GLOBAL__N_143NativeValueTraitsBufferSourcePtrNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateENS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call %"class.blink::DOMDataView"* @_ZN5blink10V8DataView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1) #4
  %6 = icmp eq %"class.blink::DOMDataView"* %5, null
  br i1 %6, label %7, label %53

7:                                                ; preds = %3
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %53
    i32 3, label %53
  ]

28:                                               ; preds = %23, %12, %7
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink30v8_data_view_wrapper_type_infoE, i64 0, i32 3), align 8
  %31 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages22FailedToConvertJSValueEPKc(i8* %30) #4
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %34 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %34, i64 3
  %36 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, align 8
  call void %36(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #4
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #4
  br label %53

53:                                               ; preds = %23, %23, %3, %52
  ret %"class.blink::DOMDataView"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::DOMDataView"* @_ZN5blink12_GLOBAL__N_145NativeValueTraitsBufferSourcePtrArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEEPT_PN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::DOMDataView"* @_ZN5blink10V8DataView19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %2) #4
  %7 = icmp eq %"class.blink::DOMDataView"* %6, null
  br i1 %7, label %8, label %54

8:                                                ; preds = %4
  %9 = bitcast %"class.v8::Value"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 3
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %29

13:                                               ; preds = %8
  %14 = add i64 %10, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = and i64 %10, -4294967296
  %18 = zext i32 %16 to i64
  %19 = or i64 %17, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = icmp eq i16 %22, 67
  br i1 %23, label %24, label %29

24:                                               ; preds = %13
  %25 = add i64 %10, 23
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = ashr i32 %27, 1
  switch i32 %28, label %29 [
    i32 5, label %54
    i32 3, label %54
  ]

29:                                               ; preds = %24, %13, %8
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = load i8*, i8** getelementptr inbounds (%"struct.blink::WrapperTypeInfo", %"struct.blink::WrapperTypeInfo"* @_ZN5blink30v8_data_view_wrapper_type_infoE, i64 0, i32 3), align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* %31) #4
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %35 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %35, i64 3
  %37 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %36, align 8
  call void %37(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %29, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  br label %54

54:                                               ; preds = %24, %24, %4, %53
  ret %"class.blink::DOMDataView"* %6
}

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare void @_ZN5blink23V8CustomXPathNSResolverC1EPNS_11ScriptStateEN2v85LocalINS3_6ObjectEEE(%"class.blink::V8CustomXPathNSResolver"*, %"class.blink::ScriptState"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !386

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #4
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.179"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.179"*)) #4
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #4
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #4
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #4
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %40, i8* %41) #4
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #4
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #4
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !386

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #4
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #4
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.179"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!16 = distinct !{!16, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!22 = distinct !{!22, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!25 = distinct !{!25, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewENS_23FlexibleArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE: argument 0"}
!28 = distinct !{!28, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewENS_23FlexibleArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewENS_23FlexibleArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE: argument 0"}
!31 = distinct !{!31, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_18DOMArrayBufferViewENS_17V8ArrayBufferViewENS_23FlexibleArrayBufferViewELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PN2v87IsolateEiNS7_5LocalINS7_5ValueEEERNS_14ExceptionStateE"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!34 = distinct !{!34, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!37 = distinct !{!37, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!40 = distinct !{!40, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!43 = distinct !{!43, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!46 = distinct !{!46, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!49 = distinct !{!49, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!52 = distinct !{!52, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!55 = distinct !{!55, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayENS_28TypedFlexibleArrayBufferViewIaLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!58 = distinct !{!58, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayENS_28TypedFlexibleArrayBufferViewIaLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayENS_28TypedFlexibleArrayBufferViewIaLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!61 = distinct !{!61, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIaN2v89Int8ArrayELb0EEENS_11V8Int8ArrayENS_28TypedFlexibleArrayBufferViewIaLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!64 = distinct !{!64, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!67 = distinct !{!67, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!70 = distinct !{!70, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!73 = distinct !{!73, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!76 = distinct !{!76, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!79 = distinct !{!79, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!82 = distinct !{!82, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!85 = distinct !{!85, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayENS_28TypedFlexibleArrayBufferViewIsLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!88 = distinct !{!88, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayENS_28TypedFlexibleArrayBufferViewIsLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayENS_28TypedFlexibleArrayBufferViewIsLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!91 = distinct !{!91, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIsN2v810Int16ArrayELb0EEENS_12V8Int16ArrayENS_28TypedFlexibleArrayBufferViewIsLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!94 = distinct !{!94, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!97 = distinct !{!97, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!100 = distinct !{!100, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!103 = distinct !{!103, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!106 = distinct !{!106, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!109 = distinct !{!109, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!112 = distinct !{!112, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!115 = distinct !{!115, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayENS_28TypedFlexibleArrayBufferViewIiLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!118 = distinct !{!118, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayENS_28TypedFlexibleArrayBufferViewIiLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayENS_28TypedFlexibleArrayBufferViewIiLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!121 = distinct !{!121, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIiN2v810Int32ArrayELb0EEENS_12V8Int32ArrayENS_28TypedFlexibleArrayBufferViewIiLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!124 = distinct !{!124, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!127 = distinct !{!127, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!130 = distinct !{!130, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!133 = distinct !{!133, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!136 = distinct !{!136, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!139 = distinct !{!139, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!142 = distinct !{!142, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!145 = distinct !{!145, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayENS_28TypedFlexibleArrayBufferViewIhLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!148 = distinct !{!148, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayENS_28TypedFlexibleArrayBufferViewIhLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayENS_28TypedFlexibleArrayBufferViewIhLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!151 = distinct !{!151, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEENS_12V8Uint8ArrayENS_28TypedFlexibleArrayBufferViewIhLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!154 = distinct !{!154, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!157 = distinct !{!157, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!158 = !{!159}
!159 = distinct !{!159, !160, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!160 = distinct !{!160, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!161 = !{!162}
!162 = distinct !{!162, !163, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!163 = distinct !{!163, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!164 = !{!165}
!165 = distinct !{!165, !166, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!166 = distinct !{!166, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!167 = !{!168}
!168 = distinct !{!168, !169, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!169 = distinct !{!169, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!170 = !{!171}
!171 = distinct !{!171, !172, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!172 = distinct !{!172, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!175 = distinct !{!175, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!176 = !{!177}
!177 = distinct !{!177, !178, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayENS_28TypedFlexibleArrayBufferViewIhLb1EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!178 = distinct !{!178, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayENS_28TypedFlexibleArrayBufferViewIhLb1EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!179 = !{!180}
!180 = distinct !{!180, !181, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayENS_28TypedFlexibleArrayBufferViewIhLb1EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!181 = distinct !{!181, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIhN2v817Uint8ClampedArrayELb1EEENS_19V8Uint8ClampedArrayENS_28TypedFlexibleArrayBufferViewIhLb1EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!182 = !{!183}
!183 = distinct !{!183, !184, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!184 = distinct !{!184, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!185 = !{!186}
!186 = distinct !{!186, !187, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!187 = distinct !{!187, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!188 = !{!189}
!189 = distinct !{!189, !190, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!190 = distinct !{!190, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!191 = !{!192}
!192 = distinct !{!192, !193, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!193 = distinct !{!193, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!194 = !{!195}
!195 = distinct !{!195, !196, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!196 = distinct !{!196, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!197 = !{!198}
!198 = distinct !{!198, !199, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!199 = distinct !{!199, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!200 = !{!201}
!201 = distinct !{!201, !202, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!202 = distinct !{!202, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!203 = !{!204}
!204 = distinct !{!204, !205, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!205 = distinct !{!205, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!206 = !{!207}
!207 = distinct !{!207, !208, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayENS_28TypedFlexibleArrayBufferViewItLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!208 = distinct !{!208, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayENS_28TypedFlexibleArrayBufferViewItLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!209 = !{!210}
!210 = distinct !{!210, !211, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayENS_28TypedFlexibleArrayBufferViewItLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!211 = distinct !{!211, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayItN2v811Uint16ArrayELb0EEENS_13V8Uint16ArrayENS_28TypedFlexibleArrayBufferViewItLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!212 = !{!213}
!213 = distinct !{!213, !214, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!214 = distinct !{!214, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!215 = !{!216}
!216 = distinct !{!216, !217, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!217 = distinct !{!217, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!218 = !{!219}
!219 = distinct !{!219, !220, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!220 = distinct !{!220, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!221 = !{!222}
!222 = distinct !{!222, !223, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!223 = distinct !{!223, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!224 = !{!225}
!225 = distinct !{!225, !226, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!226 = distinct !{!226, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!227 = !{!228}
!228 = distinct !{!228, !229, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!229 = distinct !{!229, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!230 = !{!231}
!231 = distinct !{!231, !232, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!232 = distinct !{!232, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!233 = !{!234}
!234 = distinct !{!234, !235, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!235 = distinct !{!235, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!236 = !{!237}
!237 = distinct !{!237, !238, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayENS_28TypedFlexibleArrayBufferViewIjLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!238 = distinct !{!238, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayENS_28TypedFlexibleArrayBufferViewIjLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!239 = !{!240}
!240 = distinct !{!240, !241, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayENS_28TypedFlexibleArrayBufferViewIjLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!241 = distinct !{!241, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIjN2v811Uint32ArrayELb0EEENS_13V8Uint32ArrayENS_28TypedFlexibleArrayBufferViewIjLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!242 = !{!243}
!243 = distinct !{!243, !244, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!244 = distinct !{!244, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!245 = !{!246}
!246 = distinct !{!246, !247, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!247 = distinct !{!247, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!248 = !{!249}
!249 = distinct !{!249, !250, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!250 = distinct !{!250, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!251 = !{!252}
!252 = distinct !{!252, !253, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!253 = distinct !{!253, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!254 = !{!255}
!255 = distinct !{!255, !256, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!256 = distinct !{!256, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!257 = !{!258}
!258 = distinct !{!258, !259, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!259 = distinct !{!259, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!260 = !{!261}
!261 = distinct !{!261, !262, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!262 = distinct !{!262, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!263 = !{!264}
!264 = distinct !{!264, !265, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!265 = distinct !{!265, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!266 = !{!267}
!267 = distinct !{!267, !268, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayENS_28TypedFlexibleArrayBufferViewIlLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!268 = distinct !{!268, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayENS_28TypedFlexibleArrayBufferViewIlLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!269 = !{!270}
!270 = distinct !{!270, !271, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayENS_28TypedFlexibleArrayBufferViewIlLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!271 = distinct !{!271, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIlN2v813BigInt64ArrayELb0EEENS_15V8BigInt64ArrayENS_28TypedFlexibleArrayBufferViewIlLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!272 = !{!273}
!273 = distinct !{!273, !274, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!274 = distinct !{!274, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!275 = !{!276}
!276 = distinct !{!276, !277, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!277 = distinct !{!277, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!278 = !{!279}
!279 = distinct !{!279, !280, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!280 = distinct !{!280, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!281 = !{!282}
!282 = distinct !{!282, !283, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!283 = distinct !{!283, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!284 = !{!285}
!285 = distinct !{!285, !286, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!286 = distinct !{!286, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!287 = !{!288}
!288 = distinct !{!288, !289, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!289 = distinct !{!289, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!290 = !{!291}
!291 = distinct !{!291, !292, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!292 = distinct !{!292, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!293 = !{!294}
!294 = distinct !{!294, !295, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!295 = distinct !{!295, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!296 = !{!297}
!297 = distinct !{!297, !298, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayENS_28TypedFlexibleArrayBufferViewImLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!298 = distinct !{!298, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayENS_28TypedFlexibleArrayBufferViewImLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!299 = !{!300}
!300 = distinct !{!300, !301, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayENS_28TypedFlexibleArrayBufferViewImLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!301 = distinct !{!301, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayImN2v814BigUint64ArrayELb0EEENS_16V8BigUint64ArrayENS_28TypedFlexibleArrayBufferViewImLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!302 = !{!303}
!303 = distinct !{!303, !304, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!304 = distinct !{!304, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!305 = !{!306}
!306 = distinct !{!306, !307, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!307 = distinct !{!307, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!308 = !{!309}
!309 = distinct !{!309, !310, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!310 = distinct !{!310, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!311 = !{!312}
!312 = distinct !{!312, !313, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!313 = distinct !{!313, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!314 = !{!315}
!315 = distinct !{!315, !316, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!316 = distinct !{!316, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!317 = !{!318}
!318 = distinct !{!318, !319, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!319 = distinct !{!319, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!320 = !{!321}
!321 = distinct !{!321, !322, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!322 = distinct !{!322, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!323 = !{!324}
!324 = distinct !{!324, !325, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!325 = distinct !{!325, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!326 = !{!327}
!327 = distinct !{!327, !328, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayENS_28TypedFlexibleArrayBufferViewIfLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!328 = distinct !{!328, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayENS_28TypedFlexibleArrayBufferViewIfLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!329 = !{!330}
!330 = distinct !{!330, !331, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayENS_28TypedFlexibleArrayBufferViewIfLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!331 = distinct !{!331, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEENS_14V8Float32ArrayENS_28TypedFlexibleArrayBufferViewIfLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!332 = !{!333}
!333 = distinct !{!333, !334, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!334 = distinct !{!334, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!335 = !{!336}
!336 = distinct !{!336, !337, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!337 = distinct !{!337, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!338 = !{!339}
!339 = distinct !{!339, !340, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!340 = distinct !{!340, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!341 = !{!342}
!342 = distinct !{!342, !343, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!343 = distinct !{!343, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!344 = !{!345}
!345 = distinct !{!345, !346, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!346 = distinct !{!346, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!347 = !{!348}
!348 = distinct !{!348, !349, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!349 = distinct !{!349, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!350 = !{!351}
!351 = distinct !{!351, !352, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!352 = distinct !{!352, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!353 = !{!354}
!354 = distinct !{!354, !355, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!355 = distinct !{!355, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!356 = !{!357}
!357 = distinct !{!357, !358, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayENS_28TypedFlexibleArrayBufferViewIdLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!358 = distinct !{!358, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayENS_28TypedFlexibleArrayBufferViewIdLb0EEELNS0_27IDLBufferSourceTypeConvModeE0EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!359 = !{!360}
!360 = distinct !{!360, !361, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayENS_28TypedFlexibleArrayBufferViewIdLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE: argument 0"}
!361 = distinct !{!361, !"_ZN5blink12_GLOBAL__N_150NativeValueTraitsBufferSourceFlexibleArgumentValueINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEENS_14V8Float64ArrayENS_28TypedFlexibleArrayBufferViewIdLb0EEELNS0_27IDLBufferSourceTypeConvModeE1EEET1_PNS3_7IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE"}
!362 = !{!363}
!363 = distinct !{!363, !364, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!364 = distinct !{!364, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!365 = !{!366}
!366 = distinct !{!366, !367, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!367 = distinct !{!367, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_9NotSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!368 = !{!369}
!369 = distinct !{!369, !370, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!370 = distinct !{!370, !"_ZN5blink12_GLOBAL__N_149NativeValueTraitsBufferSourceNotSharedNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!371 = !{!372}
!372 = distinct !{!372, !373, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!373 = distinct !{!373, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceNotSharedArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_9NotSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!374 = !{!375}
!375 = distinct !{!375, !376, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!376 = distinct !{!376, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!377 = !{!378}
!378 = distinct !{!378, !379, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!379 = distinct !{!379, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE0EEENS_11MaybeSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!380 = !{!381}
!381 = distinct !{!381, !382, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!382 = distinct !{!382, !"_ZN5blink12_GLOBAL__N_151NativeValueTraitsBufferSourceMaybeSharedNativeValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!383 = !{!384}
!384 = distinct !{!384, !385, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE: argument 0"}
!385 = distinct !{!385, !"_ZN5blink12_GLOBAL__N_153NativeValueTraitsBufferSourceMaybeSharedArgumentValueINS_11DOMDataViewENS_10V8DataViewELNS0_27IDLBufferSourceTypeConvModeE1EEENS_11MaybeSharedIT_EEPN2v87IsolateEiNS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE"}
!386 = !{!"branch_weights", i32 1, i32 2000}
