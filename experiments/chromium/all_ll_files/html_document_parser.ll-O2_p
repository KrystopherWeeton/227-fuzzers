; ModuleID = '../../third_party/blink/renderer/core/html/parser/html_document_parser.cc'
source_filename = "../../third_party/blink/renderer/core/html/parser/html_document_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.209", i32, [4 x i8], %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.345", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.351", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.363", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.375", %"class.std::__1::unique_ptr.381", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.388", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.267", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.288", %"class.std::__1::unique_ptr.295", %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.325", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.245" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__cxx_atomic_impl.248" }
%"struct.std::__1::__cxx_atomic_impl.248" = type { %"struct.std::__1::__cxx_atomic_base_impl.249" }
%"struct.std::__1::__cxx_atomic_base_impl.249" = type { i64 }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::Worklist.256"* }
%"class.blink::Worklist.256" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::Worklist.263"* }
%"class.blink::Worklist.263" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::Worklist.270"* }
%"class.blink::Worklist.270" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.blink::Worklist.277"* }
%"class.blink::Worklist.277" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::Worklist.284"* }
%"class.blink::Worklist.284" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::Worklist.291"* }
%"class.blink::Worklist.291" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::Worklist.298"* }
%"class.blink::Worklist.298" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.245" }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.305", %"class.std::__1::__compressed_pair.312", %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.319", [4 x i8] }>
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307", %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { i64 }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { float }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.328", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.337" }
%"class.WTF::Vector.337" = type { %"class.WTF::VectorBuffer.338" }
%"class.WTF::VectorBuffer.338" = type { %"class.WTF::VectorBufferBase.339" }
%"class.WTF::VectorBufferBase.339" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.351" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.355" }
%"class.WTF::VectorBufferBase.355" = type { %"struct.std::__1::pair.356"*, i32, i32 }
%"struct.std::__1::pair.356" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.369" }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.256"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.263"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.270"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.277"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.284"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.497" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.498" }
%"struct.std::__1::__compressed_pair_elem.498" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.387 }
%class.scoped_refptr.387 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.388" = type { %"struct.std::__1::__atomic_base.389" }
%"struct.std::__1::__atomic_base.389" = type { %"struct.std::__1::__cxx_atomic_impl.390" }
%"struct.std::__1::__cxx_atomic_impl.390" = type { %"struct.std::__1::__cxx_atomic_base_impl.391" }
%"struct.std::__1::__cxx_atomic_base_impl.391" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.122 }
%class.scoped_refptr.122 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.421" }
%"struct.std::__1::atomic.421" = type { %"struct.std::__1::__atomic_base.422" }
%"struct.std::__1::__atomic_base.422" = type { %"struct.std::__1::__atomic_base.423" }
%"struct.std::__1::__atomic_base.423" = type { %"struct.std::__1::__cxx_atomic_impl.424" }
%"struct.std::__1::__cxx_atomic_impl.424" = type { %"struct.std::__1::__cxx_atomic_base_impl.425" }
%"struct.std::__1::__cxx_atomic_base_impl.425" = type { i32 }
%"class.blink::HTMLDocumentParser" = type { %"class.blink::ScriptableDocumentParser", %"class.blink::HTMLParserScriptRunnerHost", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::HTMLParserOptions", %"class.blink::HTMLInputStream", %"class.blink::Member.40", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.67", %"class.blink::Member.74", %"class.blink::Member.97", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180", %class.scoped_refptr.420, %"class.blink::Member.426", %"class.WTF::TextPosition", %"class.std::__1::unique_ptr.431", %"class.WTF::Deque.458", %"class.base::WeakPtr", %"class.blink::Member.470", %"class.blink::Member.474", %"class.WTF::Vector.183", %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.484", %"class.blink::CompactHTMLToken"*, i32, i8, i8, i8, i32, i32, i8, i8, i8, i8, %"class.blink::ThreadScheduler"* }
%"class.blink::ScriptableDocumentParser" = type { %"class.blink::DecodedDataDocumentParser", %"class.blink::Member.23", i8, i32 }
%"class.blink::DecodedDataDocumentParser" = type { %"class.blink::DocumentParser", i8, %"class.std::__1::unique_ptr" }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member", %"class.blink::HeapHashSet" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.835", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.843", %"class.WTF::Vector.843", i8, i32, %"class.blink::Member.848", %"class.blink::Member.664", %"class.blink::Member.850", %"class.blink::Member.852", %"class.blink::Member.854", %"class.blink::Member.856", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.858", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.864", %"class.blink::Member.866", %"class.blink::Member.542", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.868", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.518", %"class.blink::Member.129", %"class.blink::Member.890", %"class.blink::Member.129", %"class.blink::Member.129", %"class.blink::Member.129", %"class.blink::UserActionElementSet", %"class.blink::Member.899", double, double, i64, i64, %"class.blink::HeapHashSet.901", %"class.blink::HeapHashSet.908", i16, i8, %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.1249", %"class.blink::Member.1251", %"class.blink::TextLinkColors", %"class.blink::Member.1253", i8, [7 x i8], %"class.blink::HeapHashMap.1255", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.129", %"class.WTF::Vector.1262", %"class.blink::Member.1267", %"class.blink::Member.1271", i8, %"class.blink::Member.129", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1273", %"class.blink::HeapVector.1285", %"class.std::__1::unique_ptr.1292", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1298", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1311", %"class.WTF::Vector.1313", i8, i8, %"class.std::__1::unique_ptr.1318", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.518", %"class.blink::HeapVector.1324", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1332", i8, i32, %"class.blink::Member.1334", %"class.blink::Member.1336", %"class.blink::Member.1338", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1340", %"class.WTF::HashMap.1342", %"class.blink::Member.1347", %"class.blink::Member.1349", %"class.blink::Member.1351", %"class.blink::Member.1353", %"class.blink::Member", %"class.blink::Member", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1355", i8, i32, %"class.blink::Member.1362", %"class.blink::Member.1364", i32, %"class.blink::Member.1366", %"class.blink::Member.1368", %"class.blink::Member.1370", %"class.std::__1::unique_ptr.1372", i64, %"class.std::__1::unique_ptr.1378", i32, i32, %"class.blink::Member.1384", %"class.blink::Member.1386", %"class.blink::Member.1388", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1390", %"class.WTF::Vector.1392", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1397", %"class.blink::Member.1404", %"class.std::__1::unique_ptr.1406", %"class.blink::Member.1412", i8, i8, %"class.WTF::String", %"class.blink::Member.1414", i8, [7 x i8], %"class.blink::HeapHashMap.1416", %"class.blink::HeapObserverSet.1423", %"class.blink::Member.1431", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1433", i32, i8, i8, %"class.blink::WeakMember.1435", %"class.blink::Member.1436" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.105", %"class.blink::Member.105" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.105", %"class.blink::Member.107", %"class.blink::Member.105", %"class.blink::Member.105", %"class.blink::Member.109" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.109" = type { %"class.blink::MemberBase.110" }
%"class.blink::MemberBase.110" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.117", %"class.blink::Member", %"class.blink::Member.107", %"class.blink::Member.504", %"class.blink::Member.504", %"class.blink::Member.525", %"class.blink::Member.527", %"class.blink::Member.529", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.534", %"class.blink::HeapVector.536" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.510" }
%"class.WTF::HashMap.510" = type { %"class.WTF::HashTable.511" }
%"class.WTF::HashTable.511" = type <{ %"struct.WTF::KeyValuePair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.513" = type { %"class.WTF::AtomicString", %"class.blink::Member.514" }
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.129", i32, %"class.blink::HeapVector.518" }
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.531" }
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::HeapHashMap.533"* }
%"class.blink::HeapHashMap.533" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.536" = type { %"class.WTF::Vector.539" }
%"class.WTF::Vector.539" = type { %"class.WTF::VectorBuffer.540" }
%"class.WTF::VectorBuffer.540" = type { %"class.WTF::VectorBufferBase.541" }
%"class.WTF::VectorBufferBase.541" = type { %"class.blink::Member.542"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.835" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.836" }
%"class.blink::HeapHashMap.836" = type { %"class.WTF::HashMap.839" }
%"class.WTF::HashMap.839" = type { %"class.WTF::HashTable.840" }
%"class.WTF::HashTable.840" = type <{ %"struct.WTF::KeyValuePair.842"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.842" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.843" = type { %"class.WTF::VectorBuffer.844" }
%"class.WTF::VectorBuffer.844" = type { %"class.WTF::VectorBufferBase.845" }
%"class.WTF::VectorBufferBase.845" = type { %"class.base::OnceCallback.757"*, i32, i32 }
%"class.base::OnceCallback.757" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.743 }
%class.scoped_refptr.743 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.744", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.744" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.421" }
%"class.blink::Member.848" = type { %"class.blink::MemberBase.849" }
%"class.blink::MemberBase.849" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.664" = type { %"class.blink::MemberBase.90" }
%"class.blink::MemberBase.90" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.669", i32, i8, [3 x i8], %"class.blink::HeapVector.671", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.679", %"class.blink::Member.681", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.690", %"class.blink::Member.820", %"class.blink::Member.822", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.597" }
%"class.blink::HeapHashMap.597" = type { %"class.WTF::HashMap.600" }
%"class.WTF::HashMap.600" = type { %"class.WTF::HashTable.601" }
%"class.WTF::HashTable.601" = type <{ %"struct.WTF::KeyValuePair.603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.603" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.611" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.604" }
%"class.blink::HeapHashSet.604" = type { %"class.WTF::HashSet.607" }
%"class.WTF::HashSet.607" = type { %"class.WTF::HashTable.608" }
%"class.WTF::HashTable.608" = type <{ %"class.blink::WeakMember.610"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.610" = type opaque
%"class.blink::Supplementable.611" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.612" }
%"class.blink::HeapHashMap.612" = type { %"class.WTF::HashMap.615" }
%"class.WTF::HashMap.615" = type { %"class.WTF::HashTable.616" }
%"class.WTF::HashTable.616" = type <{ %"struct.WTF::KeyValuePair.618"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.618" = type { i8*, %"class.blink::Member.2997" }
%"class.blink::Member.2997" = type { %"class.blink::MemberBase.2998" }
%"class.blink::MemberBase.2998" = type { %"class.blink::Supplement.2999"* }
%"class.blink::Supplement.2999" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3000" }
%"class.blink::Member.3000" = type { %"class.blink::MemberBase.3001" }
%"class.blink::MemberBase.3001" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.619, %"class.std::__1::unique_ptr.620", %"class.std::__1::unique_ptr.620", %"class.std::__1::unique_ptr.650", %"class.std::__1::unique_ptr.650", %"class.blink::Member.664", i32, [4 x i8], %"class.WTF::HashSet.665", i32, i32 }
%class.scoped_refptr.619 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.490", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.492", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.400 }
%"class.WTF::RefCounted.490" = type { %"class.base::RefCounted.491" }
%"class.base::RefCounted.491" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.492" = type { %"class.absl::optional_internal::optional_data.493" }
%"class.absl::optional_internal::optional_data.493" = type { %"class.absl::optional_internal::optional_data_base.494" }
%"class.absl::optional_internal::optional_data_base.494" = type { %"class.absl::optional_internal::optional_data_dtor_base.495" }
%"class.absl::optional_internal::optional_data_dtor_base.495" = type { i8, %union.anon.496 }
%union.anon.496 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.400 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.637", %"class.std::__1::map.646"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.492" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.625 }
%union.anon.625 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.629", %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.std::__1::map.637" = type { %"class.std::__1::__tree.638" }
%"class.std::__1::__tree.638" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.639", %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.std::__1::map.646" = type opaque
%"class.std::__1::unique_ptr.650" = type { %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.653" }
%"class.std::__1::vector.653" = type { %"class.std::__1::__vector_base.654" }
%"class.std::__1::__vector_base.654" = type { %"struct.std::__1::pair.655"*, %"struct.std::__1::pair.655"*, %"class.std::__1::__compressed_pair.656" }
%"struct.std::__1::pair.655" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"struct.std::__1::pair.655"* }
%"class.WTF::HashSet.665" = type { %"class.WTF::HashTable.666" }
%"class.WTF::HashTable.666" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.671" = type { %"class.WTF::Vector.674" }
%"class.WTF::Vector.674" = type { %"class.WTF::VectorBuffer.675" }
%"class.WTF::VectorBuffer.675" = type { %"class.WTF::VectorBufferBase.676" }
%"class.WTF::VectorBufferBase.676" = type { %"class.blink::Member.677"*, i32, i32 }
%"class.blink::Member.677" = type opaque
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.683", i32, i32 }
%"class.blink::HeapHashMap.683" = type { %"class.WTF::HashMap.686" }
%"class.WTF::HashMap.686" = type { %"class.WTF::HashTable.687" }
%"class.WTF::HashTable.687" = type <{ %"struct.WTF::KeyValuePair.689"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.689" = type opaque
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.693" }
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.696" }
%"class.WTF::Vector.696" = type { %"class.WTF::VectorBuffer.697" }
%"class.WTF::VectorBuffer.697" = type { %"class.WTF::VectorBufferBase.698" }
%"class.WTF::VectorBufferBase.698" = type { %"class.mojo::StructPtr.699"*, i32, i32 }
%"class.mojo::StructPtr.699" = type { %"class.std::__1::unique_ptr.700" }
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.703", %"class.WTF::HashMap.710", %"class.WTF::HashMap.715", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.720", i32, %"class.mojo::StructPtr.725", %"class.WTF::Vector.720" }
%"class.mojo::StructPtr.703" = type { %"class.std::__1::unique_ptr.704" }
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.710" = type { %"class.WTF::HashTable.711" }
%"class.WTF::HashTable.711" = type <{ %"struct.WTF::KeyValuePair.714"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.714" = type opaque
%"class.WTF::HashMap.715" = type { %"class.WTF::HashTable.716" }
%"class.WTF::HashTable.716" = type <{ %"struct.WTF::KeyValuePair.719"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.719" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.725" = type { %"class.std::__1::unique_ptr.726" }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.720", i8, i8, [6 x i8] }>
%"class.WTF::Vector.720" = type { %"class.WTF::VectorBuffer.721" }
%"class.WTF::VectorBuffer.721" = type { %"class.WTF::VectorBufferBase.722" }
%"class.WTF::VectorBufferBase.722" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.811" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.740", i32 }>
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.745", %"class.absl::optional.750", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.764", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.786", %"class.std::__1::map.797", i64, %"class.base::OnceCallback.757", %"class.base::OnceCallback.806", i8, %class.scoped_refptr.755, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.807" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.745" = type { %"class.absl::optional_internal::optional_data.746" }
%"class.absl::optional_internal::optional_data.746" = type { %"class.absl::optional_internal::optional_data_base.747" }
%"class.absl::optional_internal::optional_data_base.747" = type { %"class.absl::optional_internal::optional_data_dtor_base.748" }
%"class.absl::optional_internal::optional_data_dtor_base.748" = type { i8, %union.anon.749 }
%union.anon.749 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.750" = type { %"class.absl::optional_internal::optional_data.751" }
%"class.absl::optional_internal::optional_data.751" = type { %"class.absl::optional_internal::optional_data_base.752" }
%"class.absl::optional_internal::optional_data_base.752" = type { %"class.absl::optional_internal::optional_data_dtor_base.753" }
%"class.absl::optional_internal::optional_data_dtor_base.753" = type { i8, %union.anon.754 }
%union.anon.754 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.757" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.755, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.756 }
%class.scoped_refptr.756 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.464", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.464" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.465" }
%"struct.std::__1::atomic.465" = type { %"struct.std::__1::__atomic_base.466" }
%"struct.std::__1::__atomic_base.466" = type { %"struct.std::__1::__atomic_base.467" }
%"struct.std::__1::__atomic_base.467" = type { %"struct.std::__1::__cxx_atomic_impl.468" }
%"struct.std::__1::__cxx_atomic_impl.468" = type { %"struct.std::__1::__cxx_atomic_base_impl.469" }
%"struct.std::__1::__cxx_atomic_base_impl.469" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.762 }
%class.scoped_refptr.762 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.834", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.755, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.834" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.763 }
%class.scoped_refptr.763 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.767", %class.scoped_refptr.768 }
%"class.base::RepeatingCallback.767" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.768 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.769", [4 x i8] }>
%"class.base::RefCountedThreadSafe.769" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.773", %"class.std::__1::unique_ptr.779", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.785" }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.785" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.786" = type { %"class.std::__1::__tree.787" }
%"class.std::__1::__tree.787" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.788", %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.std::__1::map.797" = type { %"class.std::__1::__tree.798" }
%"class.std::__1::__tree.798" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.799", %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.base::OnceCallback.806" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.755 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.757" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.807" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.681", i8, [7 x i8], %"class.WTF::Vector.696", %"class.blink::HeapVector.826", i8, [7 x i8], %"class.WTF::HashSet.665", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.826" = type { %"class.WTF::Vector.829" }
%"class.WTF::Vector.829" = type { %"class.WTF::VectorBuffer.830" }
%"class.WTF::VectorBuffer.830" = type { %"class.WTF::VectorBufferBase.831" }
%"class.WTF::VectorBufferBase.831" = type { %"class.blink::Member.832"*, i32, i32 }
%"class.blink::Member.832" = type opaque
%"class.blink::Member.850" = type { %"class.blink::MemberBase.851" }
%"class.blink::MemberBase.851" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1468", %"class.blink::Member.1469", %"class.blink::Member.1471", %"class.blink::Member.1473", %class.scoped_refptr.420, %class.scoped_refptr.420, %"class.blink::Member.1475", %"class.blink::Member.1477", %"class.blink::Member.1483", %"class.blink::Member.1487", %"class.blink::Member.1539", %"class.blink::HeapHashMap.1541", %"class.blink::HeapHashSet.1548", %"class.blink::HeapHashSet.1548", %"class.blink::HeapHashMap.1697", %"class.blink::HeapVector.1704", %"class.blink::Member.1712", %"class.blink::HeapTaskRunnerTimer.1714", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1716", %"class.WTF::Vector.1723", %"class.blink::HeapHashSet.1729", %"class.blink::HeapHashSet.1729", %"class.std::__1::unique_ptr.1735", %"class.base::WeakPtr.1532", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1743", i8, i8, %"class.base::WeakPtrFactory.1745" }
%"class.blink::ThreadState::PrefinalizerRegistration.1468" = type { i8 }
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1473" = type { %"class.blink::MemberBase.1474" }
%"class.blink::MemberBase.1474" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1481" }
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1491", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1493", %"class.WTF::HashSet.1498", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1502", %"class.std::__1::map.1509", %"class.std::__1::map.1520", %"class.std::__1::unique_ptr.1529", %"class.blink::Member.1477", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1536", %"class.mojo::InlinedStructPtr.1538", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1493" = type { %"class.WTF::HashTable.1494" }
%"class.WTF::HashTable.1494" = type <{ %"struct.WTF::KeyValuePair.1497"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1497" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1498" = type { %"class.WTF::HashTable.1499" }
%"class.WTF::HashTable.1499" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1502" = type { %"class.WTF::HashMap.1505" }
%"class.WTF::HashMap.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"struct.WTF::KeyValuePair.1508"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1508" = type opaque
%"class.std::__1::map.1509" = type { %"class.std::__1::__tree.1510" }
%"class.std::__1::__tree.1510" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1511", %"class.std::__1::__compressed_pair.1515" }
%"class.std::__1::__compressed_pair.1511" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.1515" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.std::__1::map.1520" = type { %"class.std::__1::__tree.1521" }
%"class.std::__1::__tree.1521" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1522", %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1522" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.std::__1::unique_ptr.1529" = type { %"class.std::__1::__compressed_pair.1530" }
%"class.std::__1::__compressed_pair.1530" = type { %"struct.std::__1::__compressed_pair_elem.1531" }
%"struct.std::__1::__compressed_pair_elem.1531" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1532", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1538" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1541" = type { %"class.WTF::HashMap.1544" }
%"class.WTF::HashMap.1544" = type { %"class.WTF::HashTable.1545" }
%"class.WTF::HashTable.1545" = type <{ %"struct.WTF::KeyValuePair.1547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1547" = type opaque
%"class.blink::HeapHashSet.1548" = type { %"class.WTF::HashSet.1551" }
%"class.WTF::HashSet.1551" = type { %"class.WTF::HashTable.1552" }
%"class.WTF::HashTable.1552" = type <{ %"class.blink::WeakMember.1554"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1554" = type { %"class.blink::MemberBase.1555" }
%"class.blink::MemberBase.1555" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1558", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1578", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1666", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1677", %"class.blink::ResourceResponse", %class.scoped_refptr.1679, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1558" = type { %"class.absl::optional_internal::optional_data.1559" }
%"class.absl::optional_internal::optional_data.1559" = type { %"class.absl::optional_internal::optional_data_base.1560" }
%"class.absl::optional_internal::optional_data_base.1560" = type { %"class.absl::optional_internal::optional_data_dtor_base.1561" }
%"class.absl::optional_internal::optional_data_dtor_base.1561" = type { i8, %union.anon.1562 }
%union.anon.1562 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1563", i8, %"class.absl::optional.1568", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1563" = type { %"class.absl::optional_internal::optional_data.1564" }
%"class.absl::optional_internal::optional_data.1564" = type { %"class.absl::optional_internal::optional_data_base.1565" }
%"class.absl::optional_internal::optional_data_base.1565" = type { %"class.absl::optional_internal::optional_data_dtor_base.1566" }
%"class.absl::optional_internal::optional_data_dtor_base.1566" = type { i8, [7 x i8], %union.anon.1567 }
%union.anon.1567 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1568" = type { %"class.absl::optional_internal::optional_data.1569" }
%"class.absl::optional_internal::optional_data.1569" = type { %"class.absl::optional_internal::optional_data_base.1570" }
%"class.absl::optional_internal::optional_data_base.1570" = type { %"class.absl::optional_internal::optional_data_dtor_base.1571" }
%"class.absl::optional_internal::optional_data_dtor_base.1571" = type { i8, %union.anon.1572 }
%union.anon.1572 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1573", %"class.WTF::Vector.720" }
%"class.WTF::Vector.1573" = type { %"class.WTF::VectorBuffer.1574" }
%"class.WTF::VectorBuffer.1574" = type { %"class.WTF::VectorBufferBase.1575" }
%"class.WTF::VectorBufferBase.1575" = type { i32*, i32, i32 }
%"class.WTF::Vector.1578" = type { %"class.WTF::VectorBuffer.1579" }
%"class.WTF::VectorBuffer.1579" = type { %"class.WTF::VectorBufferBase.1580" }
%"class.WTF::VectorBufferBase.1580" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1662" }
%"class.WTF::HashMap.1662" = type { %"class.WTF::HashTable.1663" }
%"class.WTF::HashTable.1663" = type <{ %"struct.WTF::KeyValuePair.1665"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1665" = type <{ %"class.blink::WeakMember.3077", i32, [4 x i8] }>
%"class.blink::WeakMember.3077" = type { %"class.blink::MemberBase.3078" }
%"class.blink::MemberBase.3078" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.3079", [7 x i8], %"class.blink::Member.1710", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.3079" = type { i8 }
%"class.blink::Member.1710" = type { %"class.blink::MemberBase.1555" }
%"class.blink::HeapHashSet.1666" = type { %"class.WTF::HashSet.1669" }
%"class.WTF::HashSet.1669" = type { %"class.WTF::HashTable.1670" }
%"class.WTF::HashTable.1670" = type <{ %"class.blink::WeakMember.1672"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1672" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.189", i8, i8, %class.scoped_refptr.871, %class.scoped_refptr.1673, %class.scoped_refptr.1675 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.189" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.871 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.872", i32, i32, %"class.blink::Persistent.874" }
%"class.WTF::RefCounted.872" = type { %"class.base::RefCounted.873" }
%"class.base::RefCounted.873" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.874" = type { %"class.blink::PersistentBase.875" }
%"class.blink::PersistentBase.875" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.411" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.878" }
%"class.blink::HeapHashMap.878" = type { %"class.WTF::HashMap.881" }
%"class.WTF::HashMap.881" = type { %"class.WTF::HashTable.882" }
%"class.WTF::HashTable.882" = type <{ %"struct.WTF::KeyValuePair.884"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.884" = type { %"class.blink::WeakMember.885", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.885" = type { %"class.blink::MemberBase.886" }
%"class.blink::MemberBase.886" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.411" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.1673 = type { %"class.base::RefCountedData.1674"* }
%"class.base::RefCountedData.1674" = type opaque
%class.scoped_refptr.1675 = type { %"class.base::RefCountedData.1676"* }
%"class.base::RefCountedData.1676" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1630" }
%"class.base::time_internal::TimeBase.1630" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.400, %class.scoped_refptr.400, %class.scoped_refptr.400, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1586, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1598", %"class.absl::optional.1603", %"class.absl::optional.1613", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1618", %"class.absl::optional.1613", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1613", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1618", %"class.absl::optional.1623", i8, %class.scoped_refptr.1628 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1581" }
%"class.WTF::HashMap.1581" = type { %"class.WTF::HashTable.1582" }
%"class.WTF::HashTable.1582" = type <{ %"struct.WTF::KeyValuePair.1585"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1585" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1586 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1587", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1596, i8, %"class.url::Origin" }
%"class.base::RefCounted.1587" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1588" }
%"class.std::__1::vector.1588" = type { %"class.std::__1::__vector_base.1589" }
%"class.std::__1::__vector_base.1589" = type { %"class.std::__1::unique_ptr.1590"*, %"class.std::__1::unique_ptr.1590"*, %"class.std::__1::__compressed_pair.1591" }
%"class.std::__1::unique_ptr.1590" = type { %"class.std::__1::__compressed_pair.3063" }
%"class.std::__1::__compressed_pair.3063" = type { %"struct.std::__1::__compressed_pair_elem.3064" }
%"struct.std::__1::__compressed_pair_elem.3064" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1591" = type { %"struct.std::__1::__compressed_pair_elem.1592" }
%"struct.std::__1::__compressed_pair_elem.1592" = type { %"class.std::__1::unique_ptr.1590"* }
%class.scoped_refptr.1596 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1597", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1597" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1598" = type { %"class.absl::optional_internal::optional_data.1599" }
%"class.absl::optional_internal::optional_data.1599" = type { %"class.absl::optional_internal::optional_data_base.1600" }
%"class.absl::optional_internal::optional_data_base.1600" = type { %"class.absl::optional_internal::optional_data_dtor_base.1601" }
%"class.absl::optional_internal::optional_data_dtor_base.1601" = type { i8, %union.anon.1602 }
%union.anon.1602 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1603" = type { %"class.absl::optional_internal::optional_data.1604" }
%"class.absl::optional_internal::optional_data.1604" = type { %"class.absl::optional_internal::optional_data_base.1605" }
%"class.absl::optional_internal::optional_data_base.1605" = type { %"class.absl::optional_internal::optional_data_dtor_base.1606" }
%"class.absl::optional_internal::optional_data_dtor_base.1606" = type { i8, %union.anon.1607 }
%union.anon.1607 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1608", %"class.WTF::Vector.720", %"class.WTF::String" }
%"class.WTF::Vector.1608" = type { %"class.WTF::VectorBuffer.1609" }
%"class.WTF::VectorBuffer.1609" = type { %"class.WTF::VectorBufferBase.1610" }
%"class.WTF::VectorBufferBase.1610" = type { %class.scoped_refptr.400*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.745", %"class.absl::optional.745" }
%"class.absl::optional.1613" = type { %"class.absl::optional_internal::optional_data.1614" }
%"class.absl::optional_internal::optional_data.1614" = type { %"class.absl::optional_internal::optional_data_base.1615" }
%"class.absl::optional_internal::optional_data_base.1615" = type { %"class.absl::optional_internal::optional_data_dtor_base.1616" }
%"class.absl::optional_internal::optional_data_dtor_base.1616" = type { i8, %union.anon.1617 }
%union.anon.1617 = type { %"class.WTF::String" }
%"class.absl::optional.1618" = type { %"class.absl::optional_internal::optional_data.1619" }
%"class.absl::optional_internal::optional_data.1619" = type { %"class.absl::optional_internal::optional_data_base.1620" }
%"class.absl::optional_internal::optional_data_base.1620" = type { %"class.absl::optional_internal::optional_data_dtor_base.1621" }
%"class.absl::optional_internal::optional_data_dtor_base.1621" = type { i8, %union.anon.1622 }
%union.anon.1622 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1623" = type { %"class.absl::optional_internal::optional_data.1624" }
%"class.absl::optional_internal::optional_data.1624" = type { %"class.absl::optional_internal::optional_data_base.1625" }
%"class.absl::optional_internal::optional_data_base.1625" = type { %"class.absl::optional_internal::optional_data_dtor_base.1626" }
%"class.absl::optional_internal::optional_data_dtor_base.1626" = type { i8, %union.anon.1627 }
%union.anon.1627 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1628 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.3068", %"class.base::internal::flat_tree.3069" }
%"class.base::RefCountedThreadSafe.3068" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.3069" = type { %"class.std::__1::vector.3070" }
%"class.std::__1::vector.3070" = type { %"class.std::__1::__vector_base.3071" }
%"class.std::__1::__vector_base.3071" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3072" }
%"class.std::__1::__compressed_pair.3072" = type { %"struct.std::__1::__compressed_pair_elem.3073" }
%"struct.std::__1::__compressed_pair_elem.3073" = type { i32* }
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1631", %class.scoped_refptr.1641, %class.scoped_refptr.1642, %"struct.blink::CacheControlHeader", %"class.absl::optional.745", %"class.absl::optional.1643", %"class.absl::optional.1643", %"class.absl::optional.1643", i64, %"class.blink::KURL", %"class.WTF::Vector.1648", %"class.WTF::String", %"class.WTF::Vector.720", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1618", %"class.WTF::Vector.720", %"class.blink::KURL", %"class.absl::optional.1653" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1629", i8 }
%"struct.std::__1::array.1629" = type { [16 x i8] }
%"class.absl::optional.1631" = type { %"class.absl::optional_internal::optional_data.1632" }
%"class.absl::optional_internal::optional_data.1632" = type { %"class.absl::optional_internal::optional_data_base.1633" }
%"class.absl::optional_internal::optional_data_base.1633" = type { %"class.absl::optional_internal::optional_data_dtor_base.1634" }
%"class.absl::optional_internal::optional_data_dtor_base.1634" = type { i8, %union.anon.1635 }
%union.anon.1635 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.720", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1076", %"class.WTF::Vector.1636" }
%"class.WTF::Vector.1076" = type { %"class.WTF::VectorBuffer.1077" }
%"class.WTF::VectorBuffer.1077" = type { %"class.WTF::VectorBufferBase.146" }
%"class.WTF::VectorBufferBase.146" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1636" = type { %"class.WTF::VectorBuffer.1637" }
%"class.WTF::VectorBuffer.1637" = type { %"class.WTF::VectorBufferBase.1638" }
%"class.WTF::VectorBufferBase.1638" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1641 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1642 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1643" = type { %"class.absl::optional_internal::optional_data.1644" }
%"class.absl::optional_internal::optional_data.1644" = type { %"class.absl::optional_internal::optional_data_base.1645" }
%"class.absl::optional_internal::optional_data_base.1645" = type { %"class.absl::optional_internal::optional_data_dtor_base.1646" }
%"class.absl::optional_internal::optional_data_dtor_base.1646" = type { i8, %union.anon.1647 }
%union.anon.1647 = type { %"class.base::Time" }
%"class.WTF::Vector.1648" = type { %"class.WTF::VectorBuffer.1649" }
%"class.WTF::VectorBuffer.1649" = type { %"class.WTF::VectorBufferBase.1650" }
%"class.WTF::VectorBufferBase.1650" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.1653" = type { %"class.absl::optional_internal::optional_data.1654" }
%"class.absl::optional_internal::optional_data.1654" = type { %"class.absl::optional_internal::optional_data_base.1655" }
%"class.absl::optional_internal::optional_data_base.1655" = type { %"class.absl::optional_internal::optional_data_dtor_base.1656" }
%"class.absl::optional_internal::optional_data_dtor_base.1656" = type { i8, %union.anon.1657 }
%union.anon.1657 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1679 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1680", i64, %"class.WTF::Vector", %"class.WTF::Vector.1682" }
%"class.WTF::RefCounted.1680" = type { %"class.base::RefCounted.1681" }
%"class.base::RefCounted.1681" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.1682" = type { %"class.WTF::VectorBuffer.1683" }
%"class.WTF::VectorBuffer.1683" = type { %"class.WTF::VectorBufferBase.1684" }
%"class.WTF::VectorBufferBase.1684" = type { %"class.std::__1::unique_ptr.1685"*, i32, i32 }
%"class.std::__1::unique_ptr.1685" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1688" }
%"class.std::__1::__tree.1688" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1689", %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.blink::HeapHashMap.1697" = type { %"class.WTF::HashMap.1700" }
%"class.WTF::HashMap.1700" = type { %"class.WTF::HashTable.1701" }
%"class.WTF::HashTable.1701" = type <{ %"struct.WTF::KeyValuePair.1703"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1703" = type opaque
%"class.blink::HeapVector.1704" = type { %"class.WTF::Vector.1707" }
%"class.WTF::Vector.1707" = type { %"class.WTF::VectorBuffer.1708" }
%"class.WTF::VectorBuffer.1708" = type { %"class.WTF::VectorBufferBase.1709" }
%"class.WTF::VectorBufferBase.1709" = type { %"class.blink::Member.1710"*, i32, i32 }
%"class.blink::Member.1712" = type { %"class.blink::MemberBase.1713" }
%"class.blink::MemberBase.1713" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1714" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1715", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.420, %"class.base::WeakPtrFactory.889" }
%"class.base::WeakPtrFactory.889" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1715" = type { %"class.blink::MemberBase.851" }
%"class.blink::HeapHashMap.1716" = type { %"class.WTF::HashMap.1719" }
%"class.WTF::HashMap.1719" = type { %"class.WTF::HashTable.1720" }
%"class.WTF::HashTable.1720" = type <{ %"struct.WTF::KeyValuePair.1722"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1722" = type opaque
%"class.WTF::Vector.1723" = type { %"class.WTF::VectorBuffer.1724" }
%"class.WTF::VectorBuffer.1724" = type { %"class.WTF::VectorBufferBase.1725" }
%"class.WTF::VectorBufferBase.1725" = type { %class.scoped_refptr.1726*, i32, i32 }
%class.scoped_refptr.1726 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1729" = type { %"class.WTF::HashSet.1732" }
%"class.WTF::HashSet.1732" = type { %"class.WTF::HashTable.1733" }
%"class.WTF::HashTable.1733" = type <{ %"class.blink::Member.1677"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1735" = type { %"class.std::__1::__compressed_pair.1736" }
%"class.std::__1::__compressed_pair.1736" = type { %"struct.std::__1::__compressed_pair_elem.1737" }
%"struct.std::__1::__compressed_pair_elem.1737" = type { %"class.WTF::HashSet.401"* }
%"class.WTF::HashSet.401" = type { %"class.WTF::HashTable.402" }
%"class.WTF::HashTable.402" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.base::WeakPtr.1532" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.463 }
%class.scoped_refptr.463 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1741" }
%"class.blink::Member.1741" = type { %"class.blink::MemberBase.1742" }
%"class.blink::MemberBase.1742" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1743" = type { %"class.blink::MemberBase.1744" }
%"class.blink::MemberBase.1744" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1745" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::DocumentParser"* }
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.3" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::KURL"* }
%"class.blink::Member.864" = type { %"class.blink::MemberBase.865" }
%"class.blink::MemberBase.865" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.544", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.546, %"class.WTF::Vector.565", %"class.WTF::Vector.565", %"class.blink::Member.105", %"class.blink::Member.570", %"class.blink::HeapHashSet.574", %"class.blink::Member", %"class.WTF::HashSet.581", %"class.WTF::TextPosition", %"class.blink::Member.585", %"class.blink::HeapVector.587", %"class.blink::Member.594" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.546 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.547", %"class.WTF::Vector.549" }
%"class.WTF::RefCounted.547" = type { %"class.base::RefCounted.548" }
%"class.base::RefCounted.548" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.549" = type { %"class.WTF::VectorBuffer.550" }
%"class.WTF::VectorBuffer.550" = type { %"class.WTF::VectorBufferBase.551" }
%"class.WTF::VectorBufferBase.551" = type { %"class.std::__1::unique_ptr.552"*, i32, i32 }
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.555", %"class.WTF::String" }
%"class.WTF::Vector.555" = type { %"class.WTF::VectorBuffer.556" }
%"class.WTF::VectorBuffer.556" = type { %"class.WTF::VectorBufferBase.557" }
%"class.WTF::VectorBufferBase.557" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.565" = type { %"class.WTF::VectorBuffer.566" }
%"class.WTF::VectorBuffer.566" = type { %"class.WTF::VectorBufferBase.567" }
%"class.WTF::VectorBufferBase.567" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.572" }
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.574" = type { %"class.WTF::HashSet.577" }
%"class.WTF::HashSet.577" = type { %"class.WTF::HashTable.578" }
%"class.WTF::HashTable.578" = type <{ %"class.blink::WeakMember.580"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.580" = type { %"class.blink::MemberBase.108" }
%"class.WTF::HashSet.581" = type { %"class.WTF::HashTable.582" }
%"class.WTF::HashTable.582" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.546, %"class.blink::Member.542", %"class.blink::Member.570" }
%"class.blink::HeapVector.587" = type { %"class.WTF::Vector.590" }
%"class.WTF::Vector.590" = type { %"class.WTF::VectorBuffer.591" }
%"class.WTF::VectorBuffer.591" = type { %"class.WTF::VectorBufferBase.592" }
%"class.WTF::VectorBufferBase.592" = type { %"class.blink::Member.570"*, i32, i32 }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.430 }
%class.scoped_refptr.430 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.868" = type { %"class.WTF::VectorBuffer.869" }
%"class.WTF::VectorBuffer.869" = type { %"class.WTF::VectorBufferBase.870" }
%"class.WTF::VectorBufferBase.870" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.871 }
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.105", %"class.blink::Member.105", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.892" }
%"class.blink::HeapHashMap.892" = type { %"class.WTF::HashMap.895" }
%"class.WTF::HashMap.895" = type { %"class.WTF::HashTable.896" }
%"class.WTF::HashTable.896" = type <{ %"struct.WTF::KeyValuePair.898"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.898" = type opaque
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.901" = type { %"class.WTF::HashSet.904" }
%"class.WTF::HashSet.904" = type { %"class.WTF::HashTable.905" }
%"class.WTF::HashTable.905" = type <{ %"class.blink::WeakMember.907"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.907" = type opaque
%"class.blink::HeapHashSet.908" = type { %"class.WTF::HashSet.911" }
%"class.WTF::HashSet.911" = type { %"class.WTF::HashTable.912" }
%"class.WTF::HashTable.912" = type <{ %"class.blink::WeakMember.914"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.914" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member", i32, i32, i32, %"class.blink::Member.542", %"class.blink::Member.921", %"class.blink::Member.948", %"class.blink::HeapHashMap.950", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.957", %"class.blink::HeapHashSet.957", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.963", %"class.blink::Member.977", %"class.blink::Member.1007", %"class.blink::Member.1009", %"class.blink::Member.1015", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1181", %"class.blink::Member.1187", %"class.blink::HeapHashMap.1189", %"class.blink::HeapHashMap.1196", %"class.std::__1::unique_ptr.1203", i32, %"class.blink::HeapVector.1209", %"class.blink::HeapVector.1209", %"class.blink::HeapVector.933", %"class.blink::HeapHashSet.1217", %"class.blink::HeapHashMap.1224", %"class.blink::Member.1231", %"class.blink::HeapHashMap.1233", %class.scoped_refptr.1240, %class.scoped_refptr.1241, %"class.blink::Member.1145", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1242", %"class.blink::Member.129" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.107", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.925", %"class.blink::HeapVector.933", i8 }>
%"class.blink::HeapVector.925" = type { %"class.WTF::Vector.928" }
%"class.WTF::Vector.928" = type { %"class.WTF::VectorBuffer.929" }
%"class.WTF::VectorBuffer.929" = type { %"class.WTF::VectorBufferBase.930" }
%"class.WTF::VectorBufferBase.930" = type { %"class.blink::Member.931"*, i32, i32 }
%"class.blink::Member.931" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.944", %"class.blink::Member.946", %"class.blink::Member.946", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.944" = type <{ %"class.blink::Member.946"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.105", %"class.blink::Member.946", %"class.blink::Member.946" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.950" = type { %"class.WTF::HashMap.953" }
%"class.WTF::HashMap.953" = type { %"class.WTF::HashTable.954" }
%"class.WTF::HashTable.954" = type <{ %"struct.WTF::KeyValuePair.956"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.956" = type opaque
%"class.blink::HeapHashSet.957" = type { %"class.WTF::HashSet.960" }
%"class.WTF::HashSet.960" = type { %"class.WTF::HashTable.961" }
%"class.WTF::HashTable.961" = type <{ %"class.blink::Member.107"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.967", %"class.blink::Member.969" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.969" = type { %"class.blink::MemberBase.970" }
%"class.blink::MemberBase.970" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.973", %"class.blink::Member.975" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1451", %"class.blink::Member.969", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1451" = type { %"class.WTF::Vector.1454" }
%"class.WTF::Vector.1454" = type { %"class.WTF::VectorBuffer.1455" }
%"class.WTF::VectorBuffer.1455" = type { %"class.WTF::VectorBufferBase.1456" }
%"class.WTF::VectorBufferBase.1456" = type { %"class.blink::Member.975"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1458, i32, %"class.absl::optional.1459", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.421" }>
%class.sk_sp.1458 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1459" = type { %"class.absl::optional_internal::optional_data.1460" }
%"class.absl::optional_internal::optional_data.1460" = type { %"class.absl::optional_internal::optional_data_base.1461" }
%"class.absl::optional_internal::optional_data_base.1461" = type { %"class.absl::optional_internal::optional_data_dtor_base.1462" }
%"class.absl::optional_internal::optional_data_dtor_base.1462" = type { i8, %union.anon.1463 }
%union.anon.1463 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member", %class.scoped_refptr.988, %"class.blink::SelectorFilter", %"class.blink::Member.948", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.981" }
%"class.blink::HeapHashMap.981" = type { %"class.WTF::HashMap.984" }
%"class.WTF::HashMap.984" = type { %"class.WTF::HashTable.985" }
%"class.WTF::HashTable.985" = type <{ %"struct.WTF::KeyValuePair.987"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.987" = type opaque
%class.scoped_refptr.988 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.989", %"class.std::__1::unique_ptr.1001" }
%"class.blink::HeapVector.989" = type { %"class.WTF::Vector.992" }
%"class.WTF::Vector.992" = type { %"class.WTF::VectorBuffer.993" }
%"class.WTF::VectorBuffer.993" = type { %"class.WTF::VectorBufferBase.994" }
%"class.WTF::VectorBufferBase.994" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.129", %"class.WTF::Vector.995" }
%"class.WTF::Vector.995" = type { %"class.WTF::VectorBuffer.996" }
%"class.WTF::VectorBuffer.996" = type { %"class.WTF::VectorBufferBase.997", [16 x i8] }
%"class.WTF::VectorBufferBase.997" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1007" = type { %"class.blink::MemberBase.1008" }
%"class.blink::MemberBase.1008" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1013", i8, [7 x i8] }>
%"class.blink::Member.1013" = type { %"class.blink::MemberBase.1014" }
%"class.blink::MemberBase.1014" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type { i32 (...)** }
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1037", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1019", %"class.WTF::HashMap.1019", %"class.WTF::HashMap.1019", %"class.WTF::HashMap.1024", %class.scoped_refptr.1029, %class.scoped_refptr.1036, %class.scoped_refptr.1035, %"class.WTF::Vector.565", %"class.WTF::Vector.565", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1019" = type { %"class.WTF::HashTable.1020" }
%"class.WTF::HashTable.1020" = type <{ %"struct.WTF::KeyValuePair.1023"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1023" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3081 }
%class.scoped_refptr.3081 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1030", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1032", %"union.blink::InvalidationSet::Backing.1033", %"union.blink::InvalidationSet::Backing.1034", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1030" = type { %"class.base::RefCounted.1031" }
%"class.base::RefCounted.1031" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1032" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1033" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1034" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1024" = type { %"class.WTF::HashTable.1025" }
%"class.WTF::HashTable.1025" = type <{ %"struct.WTF::KeyValuePair.1028"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1028" = type opaque
%class.scoped_refptr.1029 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1035, %class.scoped_refptr.1035 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1030", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1032", %"union.blink::InvalidationSet::Backing.1033", %"union.blink::InvalidationSet::Backing.1034", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1036 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1035 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1037" = type { %"class.blink::MemberBase.1038" }
%"class.blink::MemberBase.1038" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1041", %"class.blink::HeapHashMap.1041", %"class.blink::HeapHashMap.1041", %"class.blink::HeapHashMap.1041", %"class.blink::HeapVector.1048", %"class.blink::HeapVector.1048", %"class.blink::HeapVector.1048", %"class.blink::HeapVector.1048", %"class.blink::HeapVector.1048", %"class.blink::HeapVector.1048", %"class.blink::HeapVector.1048", %"class.blink::HeapVector.1048", %"class.blink::HeapVector.1048", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1088", %"class.blink::HeapVector.1096", %"class.blink::HeapVector.1104", %"class.blink::HeapVector.1121", %"class.blink::HeapVector.1129", %"class.blink::HeapVector.1137", %"class.blink::HeapVector.1150", %"class.WTF::Vector.1157", i32, %"class.blink::Member.1163" }
%"class.blink::HeapHashMap.1041" = type { %"class.WTF::HashMap.1044" }
%"class.WTF::HashMap.1044" = type { %"class.WTF::HashTable.1045" }
%"class.WTF::HashTable.1045" = type <{ %"struct.WTF::KeyValuePair.1047"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1047" = type { %"class.WTF::AtomicString", %"class.blink::Member.3091" }
%"class.blink::Member.3091" = type { %"class.blink::MemberBase.3092" }
%"class.blink::MemberBase.3092" = type { %"class.blink::HeapVector.1048"* }
%"class.blink::HeapVector.1048" = type { %"class.WTF::Vector.1051" }
%"class.WTF::Vector.1051" = type { %"class.WTF::VectorBuffer.1052" }
%"class.WTF::VectorBuffer.1052" = type { %"class.WTF::VectorBufferBase.1053" }
%"class.WTF::VectorBufferBase.1053" = type { %"class.blink::Member.1054"*, i32, i32 }
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1058", i64, [4 x i32] }
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.137", %"class.blink::Member.1083" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.137" = type { %"class.blink::MemberBase.138" }
%"class.blink::MemberBase.138" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1088" = type { %"class.WTF::Vector.1091" }
%"class.WTF::Vector.1091" = type { %"class.WTF::VectorBuffer.1092" }
%"class.WTF::VectorBuffer.1092" = type { %"class.WTF::VectorBufferBase.1093" }
%"class.WTF::VectorBufferBase.1093" = type { %"class.blink::Member.1094"*, i32, i32 }
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.3087" }
%"class.blink::MemberBase.3087" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.137", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1096" = type { %"class.WTF::Vector.1099" }
%"class.WTF::Vector.1099" = type { %"class.WTF::VectorBuffer.1100" }
%"class.WTF::VectorBuffer.1100" = type { %"class.WTF::VectorBufferBase.1101" }
%"class.WTF::VectorBufferBase.1101" = type { %"class.blink::Member.1102"*, i32, i32 }
%"class.blink::Member.1102" = type { %"class.blink::MemberBase.3088" }
%"class.blink::MemberBase.3088" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.137" }
%"class.blink::HeapVector.1104" = type { %"class.WTF::Vector.1107" }
%"class.WTF::Vector.1107" = type { %"class.WTF::VectorBuffer.1108" }
%"class.WTF::VectorBuffer.1108" = type { %"class.WTF::VectorBufferBase.1109" }
%"class.WTF::VectorBufferBase.1109" = type { %"class.blink::Member.1110"*, i32, i32 }
%"class.blink::Member.1110" = type { %"class.blink::MemberBase.1111" }
%"class.blink::MemberBase.1111" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1112", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1112" = type { %"class.WTF::Vector.1115" }
%"class.WTF::Vector.1115" = type { %"class.WTF::VectorBuffer.1116" }
%"class.WTF::VectorBuffer.1116" = type { %"class.WTF::VectorBufferBase.1117" }
%"class.WTF::VectorBufferBase.1117" = type { %"class.blink::Member.1118"*, i32, i32 }
%"class.blink::Member.1118" = type opaque
%"class.blink::HeapVector.1121" = type { %"class.WTF::Vector.1124" }
%"class.WTF::Vector.1124" = type { %"class.WTF::VectorBuffer.1125" }
%"class.WTF::VectorBuffer.1125" = type { %"class.WTF::VectorBufferBase.1126" }
%"class.WTF::VectorBufferBase.1126" = type { %"class.blink::Member.1127"*, i32, i32 }
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.3089" }
%"class.blink::MemberBase.3089" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.137" }
%"class.blink::HeapVector.1129" = type { %"class.WTF::Vector.1132" }
%"class.WTF::Vector.1132" = type { %"class.WTF::VectorBuffer.1133" }
%"class.WTF::VectorBuffer.1133" = type { %"class.WTF::VectorBufferBase.1134" }
%"class.WTF::VectorBufferBase.1134" = type { %"class.blink::Member.1135"*, i32, i32 }
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.3090" }
%"class.blink::MemberBase.3090" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145", i32, [4 x i8] }>
%"class.blink::HeapVector.1137" = type { %"class.WTF::Vector.1140" }
%"class.WTF::Vector.1140" = type { %"class.WTF::VectorBuffer.1141" }
%"class.WTF::VectorBuffer.1141" = type { %"class.WTF::VectorBufferBase.1142" }
%"class.WTF::VectorBufferBase.1142" = type { %"class.blink::Member.1143"*, i32, i32 }
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145", %"class.blink::Member.1145" }
%"class.blink::HeapVector.1150" = type { %"class.WTF::Vector.1153" }
%"class.WTF::Vector.1153" = type { %"class.WTF::VectorBuffer.1154" }
%"class.WTF::VectorBuffer.1154" = type { %"class.WTF::VectorBufferBase.1155" }
%"class.WTF::VectorBufferBase.1155" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1058", i32, i32 }
%"class.WTF::Vector.1157" = type { %"class.WTF::VectorBuffer.1158" }
%"class.WTF::VectorBuffer.1158" = type { %"class.WTF::VectorBufferBase.1159" }
%"class.WTF::VectorBufferBase.1159" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1160, i8, [7 x i8] }>
%class.scoped_refptr.1160 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1167", %"class.blink::HeapHashMap.1167", %"class.blink::HeapHashMap.1167", %"class.blink::HeapHashMap.1167" }
%"class.blink::HeapHashMap.1167" = type { %"class.WTF::HashMap.1170" }
%"class.WTF::HashMap.1170" = type { %"class.WTF::HashTable.1171" }
%"class.WTF::HashTable.1171" = type <{ %"struct.WTF::KeyValuePair.1173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1173" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1174" }
%"class.blink::HeapHashMap.1174" = type { %"class.WTF::HashMap.1177" }
%"class.WTF::HashMap.1177" = type { %"class.WTF::HashTable.1178" }
%"class.WTF::HashTable.1178" = type <{ %"struct.WTF::KeyValuePair.1180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1180" = type { %"class.blink::Member.117", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3082", %"class.WTF::Vector.3082" }
%"class.WTF::Vector.3082" = type { %"class.WTF::VectorBuffer.3083" }
%"class.WTF::VectorBuffer.3083" = type { %"class.WTF::VectorBufferBase.3084" }
%"class.WTF::VectorBufferBase.3084" = type { %class.scoped_refptr.3081*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.105", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1181" = type { %"class.WTF::HashSet.1184" }
%"class.WTF::HashSet.1184" = type { %"class.WTF::HashTable.1185" }
%"class.WTF::HashTable.1185" = type <{ %"class.blink::Member.129"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1189" = type { %"class.WTF::HashMap.1192" }
%"class.WTF::HashMap.1192" = type { %"class.WTF::HashTable.1193" }
%"class.WTF::HashTable.1193" = type <{ %"struct.WTF::KeyValuePair.1195"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1195" = type opaque
%"class.blink::HeapHashMap.1196" = type { %"class.WTF::HashMap.1199" }
%"class.WTF::HashMap.1199" = type { %"class.WTF::HashTable.1200" }
%"class.WTF::HashTable.1200" = type <{ %"struct.WTF::KeyValuePair.1202"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1202" = type opaque
%"class.std::__1::unique_ptr.1203" = type { %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1209" = type { %"class.WTF::Vector.1212" }
%"class.WTF::Vector.1212" = type { %"class.WTF::VectorBuffer.1213" }
%"class.WTF::VectorBuffer.1213" = type { %"class.WTF::VectorBufferBase.1214" }
%"class.WTF::VectorBufferBase.1214" = type { %"struct.std::__1::pair.1215"*, i32, i32 }
%"struct.std::__1::pair.1215" = type opaque
%"class.blink::HeapVector.933" = type { %"class.WTF::Vector.936" }
%"class.WTF::Vector.936" = type { %"class.WTF::VectorBuffer.937" }
%"class.WTF::VectorBuffer.937" = type { %"class.WTF::VectorBufferBase.938" }
%"class.WTF::VectorBufferBase.938" = type { %"struct.std::__1::pair.939"*, i32, i32 }
%"struct.std::__1::pair.939" = type opaque
%"class.blink::HeapHashSet.1217" = type { %"class.WTF::HashSet.1220" }
%"class.WTF::HashSet.1220" = type { %"class.WTF::HashTable.1221" }
%"class.WTF::HashTable.1221" = type <{ %"class.blink::WeakMember.1223"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1223" = type { %"class.blink::MemberBase.543" }
%"class.blink::HeapHashMap.1224" = type { %"class.WTF::HashMap.1227" }
%"class.WTF::HashMap.1227" = type { %"class.WTF::HashTable.1228" }
%"class.WTF::HashTable.1228" = type <{ %"struct.WTF::KeyValuePair.1230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1230" = type { %"class.WTF::AtomicString", %"class.blink::Member.1110" }
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1233" = type { %"class.WTF::HashMap.1236" }
%"class.WTF::HashMap.1236" = type { %"class.WTF::HashTable.1237" }
%"class.WTF::HashTable.1237" = type <{ %"struct.WTF::KeyValuePair.1239"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1239" = type opaque
%class.scoped_refptr.1240 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.1241 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1242" = type { %"class.WTF::HashSet.1245" }
%"class.WTF::HashSet.1245" = type { %"class.WTF::HashTable.1246" }
%"class.WTF::HashTable.1246" = type <{ %"class.blink::Member.1248"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1248" = type opaque
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.107", %"class.blink::HeapVector.536" }
%"class.blink::Member.1251" = type { %"class.blink::MemberBase.1252" }
%"class.blink::MemberBase.1252" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1255" = type { %"class.WTF::HashMap.1258" }
%"class.WTF::HashMap.1258" = type { %"class.WTF::HashTable.1259" }
%"class.WTF::HashTable.1259" = type <{ %"struct.WTF::KeyValuePair.1261"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1261" = type opaque
%"class.WTF::Vector.1262" = type { %"class.WTF::VectorBuffer.1263" }
%"class.WTF::VectorBuffer.1263" = type { %"class.WTF::VectorBufferBase.1264" }
%"class.WTF::VectorBufferBase.1264" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1267" = type { %"class.blink::MemberBase.1268" }
%"class.blink::MemberBase.1268" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1271" = type { %"class.blink::MemberBase.1272" }
%"class.blink::MemberBase.1272" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.131" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.135", %"class.blink::Member.137", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.135" = type { %"class.WTF::SingleThreadedBitField.136" }
%"class.WTF::SingleThreadedBitField.136" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.141 }
%class.scoped_refptr.141 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.142", %"class.WTF::AtomicString", %"class.WTF::Vector.144" }
%"class.WTF::RefCounted.142" = type { %"class.base::RefCounted.143" }
%"class.base::RefCounted.143" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.144" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.146", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1273" = type { %"class.blink::MemberBase.1274" }
%"class.blink::MemberBase.1274" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type <{ %"class.blink::ExecutionContextLifecycleStateObserver.base", [4 x i8], %"class.blink::NameClient", %"class.blink::Member", %"class.blink::HeapDeque", %"class.blink::HeapHashSet.1279", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %"class.blink::HeapDeque", %class.scoped_refptr.420, i32, i8, i8, [2 x i8] }>
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1277" }
%"class.blink::WeakMember.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::HeapHashSet.1279" = type { %"class.WTF::HashSet.1282" }
%"class.WTF::HashSet.1282" = type { %"class.WTF::HashTable.1283" }
%"class.WTF::HashTable.1283" = type <{ %"class.blink::Member.80"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::PendingScript"* }
%"class.blink::PendingScript" = type <{ %"class.blink::NameClient", %"class.blink::Member.84", %"class.WTF::TextPosition", %"class.base::TimeTicks", i32, [4 x i8], %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.86", %"class.blink::WeakMember.88", %"class.blink::WeakMember.89", i8, [7 x i8] }>
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::PendingScriptClient"* }
%"class.blink::PendingScriptClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.88" = type { %"class.blink::MemberBase" }
%"class.blink::WeakMember.89" = type { %"class.blink::MemberBase.90" }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.93" }
%"class.WTF::Deque.93" = type { %"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::PendingScript>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %"class.blink::Member.80"*, i32, i32 }
%"class.blink::HeapVector.1285" = type { %"class.WTF::Vector.1288" }
%"class.WTF::Vector.1288" = type { %"class.WTF::VectorBuffer.1289" }
%"class.WTF::VectorBuffer.1289" = type { %"class.WTF::VectorBufferBase.1290" }
%"class.WTF::VectorBufferBase.1290" = type { %"class.blink::Member.84"*, i32, i32 }
%"class.std::__1::unique_ptr.1292" = type { %"class.std::__1::__compressed_pair.1293" }
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.1294" }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1298" = type { %"class.WTF::HashSet.1301" }
%"class.WTF::HashSet.1301" = type { %"class.WTF::HashTable.1302" }
%"class.WTF::HashTable.1302" = type <{ %"class.blink::WeakMember.1304"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1304" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1305", i32, [4 x i8] }>
%"class.WTF::Vector.1305" = type { %"class.WTF::VectorBuffer.1306" }
%"class.WTF::VectorBuffer.1306" = type { %"class.WTF::VectorBufferBase.1307" }
%"class.WTF::VectorBufferBase.1307" = type { %"struct.std::__1::pair.1308"*, i32, i32 }
%"struct.std::__1::pair.1308" = type opaque
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1313" = type { %"class.WTF::VectorBuffer.1314" }
%"class.WTF::VectorBuffer.1314" = type { %"class.WTF::VectorBufferBase.1315" }
%"class.WTF::VectorBufferBase.1315" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1318" = type { %"class.std::__1::__compressed_pair.1319" }
%"class.std::__1::__compressed_pair.1319" = type { %"struct.std::__1::__compressed_pair_elem.1320" }
%"struct.std::__1::__compressed_pair_elem.1320" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.518" = type { %"class.WTF::Vector.521" }
%"class.WTF::Vector.521" = type { %"class.WTF::VectorBuffer.522" }
%"class.WTF::VectorBuffer.522" = type { %"class.WTF::VectorBufferBase.523" }
%"class.WTF::VectorBufferBase.523" = type { %"class.blink::Member.129"*, i32, i32 }
%"class.blink::HeapVector.1324" = type { %"class.WTF::Vector.1327" }
%"class.WTF::Vector.1327" = type { %"class.WTF::VectorBuffer.1328" }
%"class.WTF::VectorBuffer.1328" = type { %"class.WTF::VectorBufferBase.1329" }
%"class.WTF::VectorBufferBase.1329" = type { %"class.blink::Member.1330"*, i32, i32 }
%"class.blink::Member.1330" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member" }
%"class.blink::Member.1332" = type { %"class.blink::MemberBase.1333" }
%"class.blink::MemberBase.1333" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1342" = type { %"class.WTF::HashTable.1343" }
%"class.WTF::HashTable.1343" = type <{ %"struct.WTF::KeyValuePair.1346"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1346" = type opaque
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1349" = type { %"class.blink::MemberBase.1350" }
%"class.blink::MemberBase.1350" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1351" = type { %"class.blink::MemberBase.1352" }
%"class.blink::MemberBase.1352" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1353" = type { %"class.blink::MemberBase.1354" }
%"class.blink::MemberBase.1354" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.88", { i64, i64 } }
%"class.blink::HeapHashSet.1355" = type { %"class.WTF::HashSet.1358" }
%"class.WTF::HashSet.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"class.blink::Member.1361"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1361" = type opaque
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1366" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1372" = type { %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1384" = type { %"class.blink::MemberBase.1385" }
%"class.blink::MemberBase.1385" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1386" = type { %"class.blink::MemberBase.1387" }
%"class.blink::MemberBase.1387" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1388" = type { %"class.blink::MemberBase.1389" }
%"class.blink::MemberBase.1389" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1392" = type { %"class.WTF::VectorBuffer.1393" }
%"class.WTF::VectorBuffer.1393" = type { %"class.WTF::VectorBufferBase.1394" }
%"class.WTF::VectorBufferBase.1394" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1397" = type { %"class.WTF::HashMap.1400" }
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1403"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1403" = type opaque
%"class.blink::Member.1404" = type { %"class.blink::MemberBase.1405" }
%"class.blink::MemberBase.1405" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1406" = type { %"class.std::__1::__compressed_pair.1407" }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1416" = type { %"class.WTF::HashMap.1419" }
%"class.WTF::HashMap.1419" = type { %"class.WTF::HashTable.1420" }
%"class.WTF::HashTable.1420" = type <{ %"struct.WTF::KeyValuePair.1422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1422" = type opaque
%"class.blink::HeapObserverSet.1423" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1424" }
%"class.blink::HeapHashSet.1424" = type { %"class.WTF::HashSet.1427" }
%"class.WTF::HashSet.1427" = type { %"class.WTF::HashTable.1428" }
%"class.WTF::HashTable.1428" = type <{ %"class.blink::WeakMember.1430"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1430" = type opaque
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member", %"class.blink::HeapHashSet.1440", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1447", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1440" = type { %"class.WTF::HashSet.1443" }
%"class.WTF::HashSet.1443" = type { %"class.WTF::HashTable.1444" }
%"class.WTF::HashTable.1444" = type <{ %"class.blink::Member.1446"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1446" = type opaque
%"class.blink::HeapTaskRunnerTimer.1447" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1448", { i64, i64 } }
%"class.blink::WeakMember.1448" = type { %"class.blink::MemberBase.1434" }
%"class.blink::WeakMember.1435" = type { %"class.blink::MemberBase.106" }
%"class.blink::Member.1436" = type { %"class.blink::MemberBase.1437" }
%"class.blink::MemberBase.1437" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.7", i32, %"class.WTF::Vector", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.14" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap", %"class.std::__1::unique_ptr.30", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.27" }
%"class.WTF::HashTable.27" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::Vector.3094", %class.scoped_refptr.3098 }
%"class.WTF::Vector.3094" = type { %"class.WTF::VectorBuffer.3095" }
%"class.WTF::VectorBuffer.3095" = type { %"class.WTF::VectorBufferBase.166", [32 x i8] }
%"class.WTF::VectorBufferBase.166" = type { i8*, i32, i32 }
%class.scoped_refptr.3098 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.3099", %"class.WTF::Vector.3101", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.3099" = type { %"class.base::RefCounted.3100" }
%"class.base::RefCounted.3100" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3101" = type { %"class.WTF::VectorBuffer.3102" }
%"class.WTF::VectorBuffer.3102" = type { %"class.WTF::VectorBufferBase.166" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.3105", i64, %"class.absl::optional.3110" }
%"class.std::__1::unique_ptr.3105" = type { %"class.std::__1::__compressed_pair.3106" }
%"class.std::__1::__compressed_pair.3106" = type { %"struct.std::__1::__compressed_pair_elem.2766" }
%"struct.std::__1::__compressed_pair_elem.2766" = type { i8* }
%"class.absl::optional.3110" = type { %"class.absl::optional_internal::optional_data.3111" }
%"class.absl::optional_internal::optional_data.3111" = type { %"class.absl::optional_internal::optional_data_base.3112" }
%"class.absl::optional_internal::optional_data_base.3112" = type { %"class.absl::optional_internal::optional_data_dtor_base.3113" }
%"class.absl::optional_internal::optional_data_dtor_base.3113" = type { i8, %union.anon.3114 }
%union.anon.3114 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.3115", %"class.std::__1::unique_ptr.3116" }
%"class.mojo::ScopedHandleBase.3115" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3116" = type { %"class.std::__1::__compressed_pair.3117" }
%"class.std::__1::__compressed_pair.3117" = type { %"struct.std::__1::__compressed_pair_elem.3118" }
%"struct.std::__1::__compressed_pair_elem.3118" = type { i8* }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::HTMLParserScriptRunnerHost" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::HTMLParserOptions" = type { i8, i8 }
%"class.blink::HTMLInputStream" = type { %"class.blink::SegmentedString", %"class.blink::SegmentedString"* }
%"class.blink::SegmentedString" = type <{ %"class.blink::SegmentedSubstring", i32, i32, i32, [4 x i8], %"class.WTF::Deque", i8, i8, [6 x i8] }>
%"class.blink::SegmentedSubstring" = type { %union.anon, i8*, i8*, i8, i8, %"class.WTF::String" }
%union.anon = type { i8* }
%"class.WTF::Deque" = type { %"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::SegmentedSubstring, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.38" }
%"class.WTF::VectorBuffer.38" = type { %"class.WTF::VectorBufferBase.39" }
%"class.WTF::VectorBufferBase.39" = type { %"class.blink::SegmentedSubstring"*, i32, i32 }
%"class.blink::Member.40" = type { %"class.blink::MemberBase.41" }
%"class.blink::MemberBase.41" = type { %"class.blink::HTMLParserReentryPermit"* }
%"class.blink::HTMLParserReentryPermit" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::HTMLToken"* }
%"class.blink::HTMLToken" = type { i32, %"class.blink::HTMLToken::Attribute::Range", i32, %class.LiteralBuffer, i16, i8, %"class.WTF::Vector.47", %"class.blink::HTMLToken::Attribute"*, %"class.std::__1::unique_ptr.53" }
%"class.blink::HTMLToken::Attribute::Range" = type { i32, i32 }
%class.LiteralBuffer = type { i16*, i16*, i16*, [256 x i16] }
%"class.WTF::Vector.47" = type { %"class.WTF::VectorBuffer.48" }
%"class.WTF::VectorBuffer.48" = type { %"class.WTF::VectorBufferBase.49", [1920 x i8] }
%"class.WTF::VectorBufferBase.49" = type { %"class.blink::HTMLToken::Attribute"*, i32, i32 }
%"class.blink::HTMLToken::Attribute" = type { %class.LiteralBuffer.50, %class.LiteralBuffer.50, %"class.blink::HTMLToken::Attribute::Range", %"class.blink::HTMLToken::Attribute::Range" }
%class.LiteralBuffer.50 = type { i16*, i16*, i16*, [32 x i16] }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::DoctypeData"* }
%"class.blink::DoctypeData" = type <{ i8, i8, [6 x i8], %"class.WTF::Vector.56", %"class.WTF::Vector.56", i8, [7 x i8] }>
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { i16*, i32, i32 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::HTMLTokenizer"* }
%"class.blink::HTMLTokenizer" = type <{ i32, i8, i8, [2 x i8], %"class.blink::HTMLToken"*, i16, [6 x i8], %"class.blink::InputStreamPreprocessor", %class.LiteralBuffer.50, %class.LiteralBuffer.70, %class.LiteralBuffer.70, %"class.blink::HTMLParserOptions", [6 x i8] }>
%"class.blink::InputStreamPreprocessor" = type <{ %"class.blink::HTMLTokenizer"*, i8, [7 x i8] }>
%class.LiteralBuffer.70 = type { i8*, i8*, i8*, [32 x i8] }
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::HTMLParserScriptRunner"* }
%"class.blink::HTMLParserScriptRunner" = type { %"class.blink::PendingScriptClient", %"class.blink::NameClient", %"class.blink::Member.40", %"class.blink::Member", %"class.blink::Member.78", %"class.blink::Member.80", %"class.blink::HeapDeque" }
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::HTMLParserScriptRunnerHost"* }
%"class.blink::Member.97" = type { %"class.blink::MemberBase.98" }
%"class.blink::MemberBase.98" = type { %"class.blink::HTMLTreeBuilder"* }
%"class.blink::HTMLTreeBuilder" = type <{ i8, [7 x i8], %"class.blink::HTMLTreeBuilder::FragmentParsingContext", %"class.blink::HTMLConstructionSite", i32, i32, %"class.WTF::Vector.173", %"class.WTF::StringBuilder", i8, i8, [6 x i8], %"class.blink::Member.178", %"class.blink::Member.129", %"class.WTF::TextPosition", %"class.blink::HTMLParserOptions", [6 x i8] }>
%"class.blink::HTMLTreeBuilder::FragmentParsingContext" = type { %"class.blink::Member.101", %"class.blink::Member.113" }
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::DocumentFragment"* }
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::HTMLStackItem"* }
%"class.blink::HTMLStackItem" = type <{ %"class.blink::Member.117", %"class.WTF::AtomicString", %"class.WTF::Vector.119", %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.WTF::Vector.119" = type { %"class.WTF::VectorBuffer.120" }
%"class.WTF::VectorBuffer.120" = type { %"class.WTF::VectorBufferBase.121" }
%"class.WTF::VectorBufferBase.121" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::HTMLConstructionSite" = type <{ %"class.blink::Member.40", %"class.blink::Member", %"class.blink::Member.117", %"class.blink::Member.113", %"class.blink::Member.125", %"class.blink::HTMLElementStack", %"class.blink::HTMLFormattingElementList", %"class.blink::HeapVector.155", %"class.blink::HTMLConstructionSite::PendingText", i32, i8, i8, i8, i8 }>
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::HTMLElementStack" = type <{ %"class.blink::Member.127", %"class.blink::Member.117", %"class.blink::Member.129", %"class.blink::Member.129", i32, [4 x i8] }>
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::HTMLElementStack::ElementRecord"* }
%"class.blink::HTMLElementStack::ElementRecord" = type { %"class.blink::Member.113", %"class.blink::Member.127" }
%"class.blink::HTMLFormattingElementList" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.151" }
%"class.WTF::Vector.151" = type { %"class.WTF::VectorBuffer.152" }
%"class.WTF::VectorBuffer.152" = type { %"class.WTF::VectorBufferBase.153" }
%"class.WTF::VectorBufferBase.153" = type { %"class.blink::HTMLFormattingElementList::Entry"*, i32, i32 }
%"class.blink::HTMLFormattingElementList::Entry" = type { %"class.blink::Member.113" }
%"class.blink::HeapVector.155" = type { %"class.WTF::Vector.158" }
%"class.WTF::Vector.158" = type { %"class.WTF::VectorBuffer.159" }
%"class.WTF::VectorBuffer.159" = type { %"class.WTF::VectorBufferBase.160", [40 x i8] }
%"class.WTF::VectorBufferBase.160" = type { %"struct.blink::HTMLConstructionSiteTask"*, i32, i32 }
%"struct.blink::HTMLConstructionSiteTask" = type <{ i32, [4 x i8], %"class.blink::Member.117", %"class.blink::Member.105", %"class.blink::Member.105", i8, [7 x i8] }>
%"class.blink::HTMLConstructionSite::PendingText" = type <{ %"class.blink::Member.117", %"class.blink::Member.105", %"class.WTF::StringBuilder", i32, [4 x i8] }>
%"class.WTF::Vector.173" = type { %"class.WTF::VectorBuffer.174" }
%"class.WTF::VectorBuffer.174" = type { %"class.WTF::VectorBufferBase.175" }
%"class.WTF::VectorBufferBase.175" = type { i32*, i32, i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.163, i32, i8, i8, [2 x i8] }>
%union.anon.163 = type { %"class.WTF::Vector.164" }
%"class.WTF::Vector.164" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166", [16 x i8] }
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::HTMLDocumentParser"* }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HTMLPreloadScanner"* }
%"class.blink::HTMLPreloadScanner" = type { %"class.blink::TokenPreloadScanner", %"class.blink::SegmentedString", %"class.blink::HTMLToken", %"class.std::__1::unique_ptr.67" }
%"class.blink::TokenPreloadScanner" = type { %"class.blink::CSSPreloadScanner", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.204, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::TokenPreloadScanner::PictureData", i64, %"class.std::__1::unique_ptr.205", %"class.blink::Persistent", %"class.blink::ClientHintsPreferences", i32, i8, i8, %"class.WTF::Vector.412" }
%"class.blink::CSSPreloadScanner" = type { i32, [4 x i8], %"class.WTF::StringBuilder", %"class.WTF::StringBuilder", i32, %"class.WTF::Vector.183"*, %"class.blink::KURL"*, %"class.blink::PreloadRequest::ExclusionInfo"* }
%"class.blink::PreloadRequest::ExclusionInfo" = type { i32 (...)**, %"class.WTF::RefCounted.198", %"class.blink::KURL", %"class.WTF::HashSet.200", %"class.WTF::HashSet.200" }
%"class.WTF::RefCounted.198" = type { %"class.base::RefCounted.199" }
%"class.base::RefCounted.199" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashSet.200" = type { %"class.WTF::HashTable.201" }
%"class.WTF::HashTable.201" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.204 = type { %"class.blink::PreloadRequest::ExclusionInfo"* }
%"struct.blink::TokenPreloadScanner::PictureData" = type <{ %"class.WTF::String", float, i8, i8, [2 x i8] }>
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.blink::CachedDocumentParameters"* }
%"struct.blink::CachedDocumentParameters" = type { i8, [3 x i8], %"class.blink::Length", i8, i8, i32, i32, i32, %"class.blink::WeakPersistent", %"class.blink::WeakPersistent.392", %"class.WTF::HashSet.401" }
%"class.blink::Length" = type <{ %union.anon.208, i8, i8, i8, i8 }>
%union.anon.208 = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::LazyLoadImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::WeakPersistent.392" = type { %"class.blink::PersistentBase.393" }
%"class.blink::PersistentBase.393" = type { %"class.blink::SubresourceRedirectOriginsPreloader"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SubresourceRedirectOriginsPreloader" = type { %"class.blink::Supplement", %"class.WTF::HashSet.396" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member" }
%"class.WTF::HashSet.396" = type { %"class.WTF::HashTable.397" }
%"class.WTF::HashTable.397" = type <{ %class.scoped_refptr.400*, i32, i32, i32, [4 x i8] }>
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.408" }
%"class.blink::PersistentBase.408" = type { %"class.blink::MediaValuesCached"*, %"class.blink::PersistentNodePtr.411" }
%"class.blink::MediaValuesCached" = type { %"class.blink::MediaValues", %"struct.blink::MediaValuesCached::MediaValuesCachedData" }
%"struct.blink::MediaValuesCached::MediaValuesCachedData" = type <{ double, double, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, [5 x i8], %"class.WTF::String", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, [4 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"struct.blink::TokenPreloadScanner::Checkpoint"*, i32, i32 }
%"struct.blink::TokenPreloadScanner::Checkpoint" = type { %"class.blink::KURL", i8, i8, i64, %class.scoped_refptr.204 }
%class.scoped_refptr.420 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::HTMLParserScheduler"* }
%"class.blink::HTMLParserScheduler" = type { %"class.blink::Member.178", %class.scoped_refptr.420, %"class.blink::TaskHandle" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"struct.blink::HTMLDocumentParser::TokenizedChunk"* }
%"struct.blink::HTMLDocumentParser::TokenizedChunk" = type { %"class.WTF::Vector.434", %"class.WTF::Vector.183", %"class.absl::optional", i32, %"class.WTF::Vector.450", i32, i32, i8, i32 }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::CompactHTMLToken"*, i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.444 }
%union.anon.444 = type { %"struct.blink::ViewportDescription" }
%"struct.blink::ViewportDescription" = type { i32, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, i8, float, float, i8, i8, i8, i8, %"class.absl::optional.445" }
%"class.absl::optional.445" = type { %"class.absl::optional_internal::optional_data.446" }
%"class.absl::optional_internal::optional_data.446" = type { %"class.absl::optional_internal::optional_data_base.447" }
%"class.absl::optional_internal::optional_data_base.447" = type { %"class.absl::optional_internal::optional_data_dtor_base.448" }
%"class.absl::optional_internal::optional_data_dtor_base.448" = type { i8, %union.anon.449 }
%union.anon.449 = type { i32 }
%"class.WTF::Vector.450" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.452", [4 x i8] }>
%"class.WTF::VectorBufferBase.452" = type { i32*, i32, i32 }
%"class.WTF::Deque.458" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::HTMLDocumentParser::TokenizedChunk, std::__1::default_delete<blink::HTMLDocumentParser::TokenizedChunk> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::HTMLDocumentParser::TokenizedChunk, std::__1::default_delete<blink::HTMLDocumentParser::TokenizedChunk> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.461" }
%"class.WTF::VectorBuffer.461" = type { %"class.WTF::VectorBufferBase.462" }
%"class.WTF::VectorBufferBase.462" = type { %"class.std::__1::unique_ptr.431"*, i32, i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::HTMLResourcePreloader"* }
%"class.blink::HTMLResourcePreloader" = type { %"class.blink::ResourcePreloader", %"class.blink::Member" }
%"class.blink::ResourcePreloader" = type { i32 (...)** }
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::HTMLDocumentParserState"* }
%"class.blink::HTMLDocumentParserState" = type <{ i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.183" = type { %"class.WTF::VectorBuffer.184" }
%"class.WTF::VectorBuffer.184" = type { %"class.WTF::VectorBufferBase.185" }
%"class.WTF::VectorBufferBase.185" = type { %"class.std::__1::unique_ptr.186"*, i32, i32 }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::PreloadRequest"* }
%"class.blink::PreloadRequest" = type <{ %"class.WTF::String", %"class.WTF::TextPosition", %"class.WTF::String", %"class.blink::KURL", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, %"class.WTF::String", i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i32, %"class.WTF::HashSet.189", i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.blink::HTMLParserMetrics"* }
%"class.blink::HTMLParserMetrics" = type <{ i64, %"class.ukm::UkmRecorder"*, i32, [4 x i8], %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i32, i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.base::ElapsedTimer"* }
%"class.blink::CompactHTMLToken" = type { i8, %"class.WTF::String", %"class.WTF::Vector.437", %"class.WTF::TextPosition" }
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"struct.blink::CompactHTMLToken::Attribute"*, i32, i32 }
%"struct.blink::CompactHTMLToken::Attribute" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.blink::HTMLDocument" = type { %"class.blink::Document", %"class.WTF::HashCountedSet.1746" }
%"class.WTF::HashCountedSet.1746" = type { %"class.WTF::HashMap.1747" }
%"class.WTF::HashMap.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"struct.WTF::KeyValuePair.1751"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1751" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::Thread" = type { i32 (...)** }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1922", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1930", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1944", %"class.blink::FrameLoader", %"class.blink::Member.1961", %"class.blink::Member.129", %"class.blink::Member.1963", %"class.blink::Member.1965", %"class.blink::Member.1967", %"class.blink::Member.1969", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1971", %class.scoped_refptr.2195, %"class.blink::Member.2196", %"class.blink::Member.2198", %"class.blink::Member.2209", %"class.blink::Member.2211", %"class.blink::Member.2213", %"class.blink::Member.2217", %"class.blink::Member.2219", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2221", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2224", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2246", %"class.std::__1::unique_ptr.2247", %"class.absl::optional.1618", i32, [4 x i8], %"class.std::__1::unique_ptr.2253", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2261", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2266", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2271", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2274", %"class.blink::Member.2276", %"class.blink::Member.2278", %"class.blink::Member.2280", %"class.mojo::StructPtr.2283", %"class.blink::Member.2291", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2293", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1756", %"class.blink::Member.1758", %"class.blink::Member.1760", i8, i32, i8, i32, %"class.blink::Member.1894", %"class.blink::Member.1783", %"class.blink::FrameLifecycle", %"class.blink::Member.1754", %"class.blink::Member.1754", %"class.blink::Member.1754", %"class.blink::Member.1754", %"class.blink::Member.1754", %"class.blink::Member.1754", %"class.blink::Member.1896", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1898", %"class.blink::Member.1908", i8, %"class.base::UnguessableToken", %"class.absl::optional.1910", %"class.absl::optional.1618", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1754", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1756" = type { %"class.blink::MemberBase.1757" }
%"class.blink::MemberBase.1757" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1754", %"class.blink::Member.1783", %"class.blink::Member.1785", %"class.blink::Member.1787", i8, %"class.WTF::Vector.1789" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1776" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1764" }
%"class.blink::HeapVector.1764" = type { %"class.WTF::Vector.1767" }
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769", [32 x i8] }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.std::__1::pair.1770"*, i32, i32 }
%"struct.std::__1::pair.1770" = type { %"class.WTF::AtomicString", %"class.blink::Member.1771" }
%"class.blink::Member.1771" = type { %"class.blink::MemberBase.1772" }
%"class.blink::MemberBase.1772" = type { %"class.blink::HeapVector.1773"* }
%"class.blink::HeapVector.1773" = type opaque
%"class.std::__1::unique_ptr.1776" = type { %"class.std::__1::__compressed_pair.1777" }
%"class.std::__1::__compressed_pair.1777" = type { %"struct.std::__1::__compressed_pair_elem.1778" }
%"struct.std::__1::__compressed_pair_elem.1778" = type { %"class.WTF::Vector.1779"* }
%"class.WTF::Vector.1779" = type opaque
%"class.blink::Member.1785" = type { %"class.blink::MemberBase.1786" }
%"class.blink::MemberBase.1786" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1787" = type { %"class.blink::MemberBase.1788" }
%"class.blink::MemberBase.1788" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791" }
%"class.WTF::VectorBufferBase.1791" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.1792" }
%"class.base::StrongAlias.1792" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1886" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1793, %"class.std::__1::unique_ptr.740", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.755, i32 }>
%class.scoped_refptr.1793 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.755, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1852", %"class.absl::optional.1857", %"class.absl::optional.1810", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1877", i8, [7 x i8], %class.scoped_refptr.755, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.769" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.757", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.755, %"class.std::__1::unique_ptr.1794", %"class.absl::optional.1804", %"struct.std::__1::atomic.388", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1810", %"class.std::__1::unique_ptr.1815", i8, i64, %class.scoped_refptr.1849, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1850", %"class.base::WeakPtrFactory.1851" }
%"class.std::__1::unique_ptr.1794" = type { %"class.std::__1::__compressed_pair.1795" }
%"class.std::__1::__compressed_pair.1795" = type { %"struct.std::__1::__compressed_pair_elem.1796" }
%"struct.std::__1::__compressed_pair_elem.1796" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.755, i8, %"class.mojo::ScopedHandleBase.1797", %class.scoped_refptr.1798, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1799", i8*, %"class.base::WeakPtrFactory.1800" }
%"class.mojo::ScopedHandleBase.1797" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1798 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.1799" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1800" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1804" = type { %"class.absl::optional_internal::optional_data.1805" }
%"class.absl::optional_internal::optional_data.1805" = type { %"class.absl::optional_internal::optional_data_base.1806" }
%"class.absl::optional_internal::optional_data_base.1806" = type { %"class.absl::optional_internal::optional_data_dtor_base.1807" }
%"class.absl::optional_internal::optional_data_dtor_base.1807" = type { i8, %union.anon.1808 }
%union.anon.1808 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1809", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1809" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1815" = type { %"class.std::__1::__compressed_pair.1816" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.1817" }
%"struct.std::__1::__compressed_pair_elem.1817" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1818", i8, i64, %class.scoped_refptr.1819, %class.scoped_refptr.1844 }
%"class.base::RepeatingCallback.1818" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1819 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1820", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1822", %"class.std::__1::map.1833", i8, [7 x i8] }>
%"class.base::RefCounted.1820" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1821 }
%class.scoped_refptr.1821 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1822" = type { %"class.std::__1::__tree.1823" }
%"class.std::__1::__tree.1823" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1824", %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1824" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.std::__1::map.1833" = type { %"class.std::__1::__tree.1834" }
%"class.std::__1::__tree.1834" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1835", %"class.std::__1::__compressed_pair.1839" }
%"class.std::__1::__compressed_pair.1835" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.1839" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%class.scoped_refptr.1844 = type { %"class.base::RefCountedData.1845"* }
%"class.base::RefCountedData.1845" = type opaque
%class.scoped_refptr.1849 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1850" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1851" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1852" = type { %"class.absl::optional_internal::optional_data.1853" }
%"class.absl::optional_internal::optional_data.1853" = type { %"class.absl::optional_internal::optional_data_base.1854" }
%"class.absl::optional_internal::optional_data_base.1854" = type { %"class.absl::optional_internal::optional_data_dtor_base.1855" }
%"class.absl::optional_internal::optional_data_dtor_base.1855" = type { i8, %union.anon.1856 }
%union.anon.1856 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1857" = type { %"class.absl::optional_internal::optional_data.1858" }
%"class.absl::optional_internal::optional_data.1858" = type { %"class.absl::optional_internal::optional_data_base.1859" }
%"class.absl::optional_internal::optional_data_base.1859" = type { %"class.absl::optional_internal::optional_data_dtor_base.1860" }
%"class.absl::optional_internal::optional_data_dtor_base.1860" = type { i8, [7 x i8], %union.anon.1861 }
%union.anon.1861 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1810" = type { %"class.absl::optional_internal::optional_data.1811" }
%"class.absl::optional_internal::optional_data.1811" = type { %"class.absl::optional_internal::optional_data_base.1812" }
%"class.absl::optional_internal::optional_data_base.1812" = type { %"class.absl::optional_internal::optional_data_dtor_base.1813" }
%"class.absl::optional_internal::optional_data_dtor_base.1813" = type { i8, %union.anon.1814 }
%union.anon.1814 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1862 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1862 = type { %"class.std::__1::map.1865" }
%"class.std::__1::map.1865" = type { %"class.std::__1::__tree.1866" }
%"class.std::__1::__tree.1866" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1867", %"class.std::__1::__compressed_pair.1871" }
%"class.std::__1::__compressed_pair.1867" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.1871" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1876"*, i64 }
%"class.std::__1::unique_ptr.1876" = type opaque
%"class.std::__1::map.1877" = type { %"class.std::__1::__tree.1878" }
%"class.std::__1::__tree.1878" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1879", %"class.std::__1::__compressed_pair.1883" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.1883" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.std::__1::unique_ptr.1886" = type { %"class.std::__1::__compressed_pair.1887" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1888" }
%"struct.std::__1::__compressed_pair_elem.1888" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1754" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::Frame"* }
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1754", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.1898" = type { %"class.base::internal::flat_tree.1899" }
%"class.base::internal::flat_tree.1899" = type { %"class.std::__1::vector.1900" }
%"class.std::__1::vector.1900" = type { %"class.std::__1::__vector_base.1901" }
%"class.std::__1::__vector_base.1901" = type { %"struct.std::__1::pair.1902"*, %"struct.std::__1::pair.1902"*, %"class.std::__1::__compressed_pair.1903" }
%"struct.std::__1::pair.1902" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.1903" = type { %"struct.std::__1::__compressed_pair_elem.1904" }
%"struct.std::__1::__compressed_pair_elem.1904" = type { %"struct.std::__1::pair.1902"* }
%"class.blink::Member.1908" = type { %"class.blink::MemberBase.1909" }
%"class.blink::MemberBase.1909" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1910" = type { %"class.absl::optional_internal::optional_data.1911" }
%"class.absl::optional_internal::optional_data.1911" = type { %"class.absl::optional_internal::optional_data_base.1912" }
%"class.absl::optional_internal::optional_data_base.1912" = type { %"class.absl::optional_internal::optional_data_dtor_base.1913" }
%"class.absl::optional_internal::optional_data_dtor_base.1913" = type { i8, %union.anon.1914 }
%union.anon.1914 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1915" }
%"class.blink::HeapHashSet.1915" = type { %"class.WTF::HashSet.1918" }
%"class.WTF::HashSet.1918" = type { %"class.WTF::HashTable.1919" }
%"class.WTF::HashTable.1919" = type <{ %"class.blink::WeakMember.1921"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1921" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1922" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1923" }
%"class.blink::HeapHashMap.1923" = type { %"class.WTF::HashMap.1926" }
%"class.WTF::HashMap.1926" = type { %"class.WTF::HashTable.1927" }
%"class.WTF::HashTable.1927" = type <{ %"struct.WTF::KeyValuePair.1929"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1929" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1930" = type { %"class.std::__1::__compressed_pair.1931" }
%"class.std::__1::__compressed_pair.1931" = type { %"struct.std::__1::__compressed_pair_elem.1932" }
%"struct.std::__1::__compressed_pair_elem.1932" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1933", %"class.base::WeakPtrFactory.1938" }
%"class.WTF::HashMap.1933" = type { %"class.WTF::HashTable.1934" }
%"class.WTF::HashTable.1934" = type <{ %"struct.WTF::KeyValuePair.1937"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1937" = type opaque
%"class.base::WeakPtrFactory.1938" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1942" }
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3004", i64, %"class.std::__1::map.3005", i8*, i64, %"class.base::WeakPtrFactory.3014" }
%"class.base::RepeatingCallback.3004" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3005" = type { %"class.std::__1::__tree.3006" }
%"class.std::__1::__tree.3006" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3007", %"class.std::__1::__compressed_pair.3011" }
%"class.std::__1::__compressed_pair.3007" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"class.std::__1::__compressed_pair.3011" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.base::WeakPtrFactory.3014" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1944" = type { %"class.WTF::HashSet.1947" }
%"class.WTF::HashSet.1947" = type { %"class.WTF::HashTable.1948" }
%"class.WTF::HashTable.1948" = type <{ %"class.blink::WeakMember.1950"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1950" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1896", %"class.blink::Member.1951", %"class.blink::Member.1953", %"class.std::__1::unique_ptr.1955", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.401" }
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1953" = type { %"class.blink::MemberBase.1954" }
%"class.blink::MemberBase.1954" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1648", %"class.blink::Member.1712", %"class.std::__1::unique_ptr.2644", %"class.std::__1::unique_ptr.690", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2804, %"class.WTF::AtomicString", i32, %"class.absl::optional.2702", %class.scoped_refptr.400, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2662", i8, %"class.absl::optional.2669", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.1896", %"class.blink::Member.2805", %"class.blink::Member.852", %"class.blink::Member.2878", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2880", %class.scoped_refptr.619, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2893", %"class.std::__1::unique_ptr.2674", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2895", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1679, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1726, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.23", %"class.blink::Member.2900", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2932", %"class.WTF::Vector.720", i8, i8, i8, %"class.blink::WebVector.2793", %"class.blink::WebVector.2793", %"class.mojo::Remote.2937" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2644" = type { %"class.std::__1::__compressed_pair.2645" }
%"class.std::__1::__compressed_pair.2645" = type { %"struct.std::__1::__compressed_pair_elem.2646" }
%"struct.std::__1::__compressed_pair_elem.2646" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2648", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2662", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2669", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2674", %"class.base::UnguessableToken", %"class.blink::WebVector.2680", %"class.base::TickClock"*, %"class.blink::WebVector.2694", %"class.absl::optional.2702", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2707", %"class.blink::WebVector.2229", i8, %"class.blink::WebVector.2726", i8, %"class.std::__1::unique_ptr.2734", %"class.blink::WebVector.2793", %"class.blink::WebVector.2793" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.2648" = type { %"class.std::__1::vector.2649" }
%"class.std::__1::vector.2649" = type { %"class.std::__1::__vector_base.2650" }
%"class.std::__1::__vector_base.2650" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2657" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2657" = type { %"struct.std::__1::__compressed_pair_elem.2658" }
%"struct.std::__1::__compressed_pair_elem.2658" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2651", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2651" = type { %"class.std::__1::__compressed_pair.2652" }
%"class.std::__1::__compressed_pair.2652" = type { %"struct.std::__1::__compressed_pair_elem.2653" }
%"struct.std::__1::__compressed_pair_elem.2653" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2668", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2668" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2647" }
%"class.blink::WebPrivatePtr.2647" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2680" = type { %"class.std::__1::vector.2681" }
%"class.std::__1::vector.2681" = type { %"class.std::__1::__vector_base.2682" }
%"class.std::__1::__vector_base.2682" = type { %"class.std::__1::unique_ptr.2683"*, %"class.std::__1::unique_ptr.2683"*, %"class.std::__1::__compressed_pair.2689" }
%"class.std::__1::unique_ptr.2683" = type { %"class.std::__1::__compressed_pair.2684" }
%"class.std::__1::__compressed_pair.2684" = type { %"struct.std::__1::__compressed_pair_elem.2685" }
%"struct.std::__1::__compressed_pair_elem.2685" = type { %"struct.blink::WebNavigationParams::PrefetchedSignedExchange"* }
%"struct.blink::WebNavigationParams::PrefetchedSignedExchange" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebURL", %"class.blink::WebURLResponse", %"class.blink::CrossVariantMojoRemote" }
%"class.blink::CrossVariantMojoRemote" = type { i32, %"class.mojo::ScopedHandleBase" }
%"class.std::__1::__compressed_pair.2689" = type { %"struct.std::__1::__compressed_pair_elem.2690" }
%"struct.std::__1::__compressed_pair_elem.2690" = type { %"class.std::__1::unique_ptr.2683"* }
%"class.blink::WebVector.2694" = type { %"class.std::__1::vector.2695" }
%"class.std::__1::vector.2695" = type { %"class.std::__1::__vector_base.2696" }
%"class.std::__1::__vector_base.2696" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2697" }
%"class.std::__1::__compressed_pair.2697" = type { %"struct.std::__1::__compressed_pair_elem.2698" }
%"struct.std::__1::__compressed_pair_elem.2698" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.2707" = type { %"class.absl::optional_internal::optional_data.2708" }
%"class.absl::optional_internal::optional_data.2708" = type { %"class.absl::optional_internal::optional_data_base.2709" }
%"class.absl::optional_internal::optional_data_base.2709" = type { %"class.absl::optional_internal::optional_data_dtor_base.2710" }
%"class.absl::optional_internal::optional_data_dtor_base.2710" = type { i8, [7 x i8], %union.anon.2711 }
%union.anon.2711 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.2229" = type { %"class.std::__1::vector.2230" }
%"class.std::__1::vector.2230" = type { %"class.std::__1::__vector_base.2231" }
%"class.std::__1::__vector_base.2231" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2232" }
%"class.std::__1::__compressed_pair.2232" = type { %"struct.std::__1::__compressed_pair_elem.2233" }
%"struct.std::__1::__compressed_pair_elem.2233" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2726" = type { %"class.std::__1::vector.2727" }
%"class.std::__1::vector.2727" = type { %"class.std::__1::__vector_base.2728" }
%"class.std::__1::__vector_base.2728" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2729" }
%"class.std::__1::__compressed_pair.2729" = type { %"struct.std::__1::__compressed_pair_elem.2730" }
%"struct.std::__1::__compressed_pair_elem.2730" = type { i32* }
%"class.std::__1::unique_ptr.2734" = type { %"class.std::__1::__compressed_pair.2735" }
%"class.std::__1::__compressed_pair.2735" = type { %"struct.std::__1::__compressed_pair_elem.2736" }
%"struct.std::__1::__compressed_pair_elem.2736" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2737" }
%"class.blink::WebVector.2737" = type { %"class.std::__1::vector.2738" }
%"class.std::__1::vector.2738" = type { %"class.std::__1::__vector_base.2739" }
%"class.std::__1::__vector_base.2739" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2785" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2740", %"class.blink::WebVector.2748", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.2229", i32, [4 x i8], %"class.absl::optional.2780", %"class.blink::WebVector.2229" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2740" = type { %"class.std::__1::vector.2741" }
%"class.std::__1::vector.2741" = type { %"class.std::__1::__vector_base.2742" }
%"class.std::__1::__vector_base.2742" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2743" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2743" = type { %"struct.std::__1::__compressed_pair_elem.2744" }
%"struct.std::__1::__compressed_pair_elem.2744" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2748" = type { %"class.std::__1::vector.2749" }
%"class.std::__1::vector.2749" = type { %"class.std::__1::__vector_base.2750" }
%"class.std::__1::__vector_base.2750" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2775" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2751", %"class.blink::WebVector.2229", %"class.blink::WebVector.2759", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2751" = type { %"class.std::__1::vector.2752" }
%"class.std::__1::vector.2752" = type { %"class.std::__1::__vector_base.2753" }
%"class.std::__1::__vector_base.2753" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2754" }
%"class.std::__1::__compressed_pair.2754" = type { %"struct.std::__1::__compressed_pair_elem.2755" }
%"struct.std::__1::__compressed_pair_elem.2755" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2759" = type { %"class.std::__1::vector.2760" }
%"class.std::__1::vector.2760" = type { %"class.std::__1::__vector_base.2761" }
%"class.std::__1::__vector_base.2761" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2770" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2762" }
%"class.blink::WebVector.2762" = type { %"class.std::__1::vector.2763" }
%"class.std::__1::vector.2763" = type { %"class.std::__1::__vector_base.2764" }
%"class.std::__1::__vector_base.2764" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2765" }
%"class.std::__1::__compressed_pair.2765" = type { %"struct.std::__1::__compressed_pair_elem.2766" }
%"class.std::__1::__compressed_pair.2770" = type { %"struct.std::__1::__compressed_pair_elem.2771" }
%"struct.std::__1::__compressed_pair_elem.2771" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2775" = type { %"struct.std::__1::__compressed_pair_elem.2776" }
%"struct.std::__1::__compressed_pair_elem.2776" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2780" = type { %"class.absl::optional_internal::optional_data.2781" }
%"class.absl::optional_internal::optional_data.2781" = type { %"class.absl::optional_internal::optional_data_base.2782" }
%"class.absl::optional_internal::optional_data_base.2782" = type { %"class.absl::optional_internal::optional_data_dtor_base.2783" }
%"class.absl::optional_internal::optional_data_dtor_base.2783" = type { i8, [7 x i8], %union.anon.2784 }
%union.anon.2784 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.2229", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2785" = type { %"struct.std::__1::__compressed_pair_elem.2786" }
%"struct.std::__1::__compressed_pair_elem.2786" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.2804 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2702" = type { %"class.absl::optional_internal::optional_data.2703" }
%"class.absl::optional_internal::optional_data.2703" = type { %"class.absl::optional_internal::optional_data_base.2704" }
%"class.absl::optional_internal::optional_data_base.2704" = type { %"class.absl::optional_internal::optional_data_dtor_base.2705" }
%"class.absl::optional_internal::optional_data_dtor_base.2705" = type { i8, %union.anon.2706 }
%union.anon.2706 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.2229", %"class.blink::WebString", %"class.blink::WebVector.2229", %"class.blink::WebVector.2229" }
%"class.std::__1::unique_ptr.2662" = type { %"class.std::__1::__compressed_pair.2663" }
%"class.std::__1::__compressed_pair.2663" = type { %"struct.std::__1::__compressed_pair_elem.2664" }
%"struct.std::__1::__compressed_pair_elem.2664" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2669" = type { %"class.absl::optional_internal::optional_data.2670" }
%"class.absl::optional_internal::optional_data.2670" = type { %"class.absl::optional_internal::optional_data_base.2671" }
%"class.absl::optional_internal::optional_data_base.2671" = type { %"class.absl::optional_internal::optional_data_dtor_base.2672" }
%"class.absl::optional_internal::optional_data_dtor_base.2672" = type { i8, %union.anon.2673 }
%union.anon.2673 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2712", %"class.base::flat_map.1898", i8, [7 x i8] }>
%"class.std::__1::vector.2712" = type { %"class.std::__1::__vector_base.2713" }
%"class.std::__1::__vector_base.2713" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2721" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2714", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2714" = type { %"class.std::__1::__vector_base.2715" }
%"class.std::__1::__vector_base.2715" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2716" }
%"class.std::__1::__compressed_pair.2716" = type { %"struct.std::__1::__compressed_pair_elem.2717" }
%"struct.std::__1::__compressed_pair_elem.2717" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2721" = type { %"struct.std::__1::__compressed_pair_elem.2722" }
%"struct.std::__1::__compressed_pair_elem.2722" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2805" = type { %"class.blink::MemberBase.2806" }
%"class.blink::MemberBase.2806" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.720", %"class.blink::Member.2809", %"class.absl::optional.2811", i64, i64, i32, %class.scoped_refptr.2816, %class.scoped_refptr.2804, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.2816 }
%"class.blink::Member.2809" = type { %"class.blink::MemberBase.2810" }
%"class.blink::MemberBase.2810" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2811" = type { %"class.absl::optional_internal::optional_data.2812" }
%"class.absl::optional_internal::optional_data.2812" = type { %"class.absl::optional_internal::optional_data_base.2813" }
%"class.absl::optional_internal::optional_data_base.2813" = type { %"class.absl::optional_internal::optional_data_dtor_base.2814" }
%"class.absl::optional_internal::optional_data_dtor_base.2814" = type { i8, %union.anon.2815 }
%union.anon.2815 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.2816 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.2818", i64, %"class.WTF::Vector.2821", %"class.WTF::Vector.2826", %"class.WTF::Vector.2832", %"class.WTF::Vector.2850", %class.scoped_refptr.619, %"class.WTF::HashMap.2856", %"class.WTF::Vector.2861", %"class.WTF::Vector.2821", %"class.WTF::Vector.2867", %"class.WTF::HashMap.2873", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.2817" }
%"class.base::RefCountedThreadSafe.2817" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2818" = type { %"class.std::__1::__compressed_pair.2819" }
%"class.std::__1::__compressed_pair.2819" = type { %"struct.std::__1::__compressed_pair_elem.2766" }
%"class.WTF::Vector.2826" = type { %"class.WTF::VectorBuffer.2827" }
%"class.WTF::VectorBuffer.2827" = type { %"class.WTF::VectorBufferBase.2828", [8 x i8] }
%"class.WTF::VectorBufferBase.2828" = type { %class.scoped_refptr.2829*, i32, i32 }
%class.scoped_refptr.2829 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2832" = type { %"class.WTF::VectorBuffer.2833" }
%"class.WTF::VectorBuffer.2833" = type { %"class.WTF::VectorBufferBase.2834" }
%"class.WTF::VectorBufferBase.2834" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2836", %"class.std::__1::unique_ptr.2842" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2835 }
%class.scoped_refptr.2835 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2836" = type { %"class.std::__1::__compressed_pair.2837" }
%"class.std::__1::__compressed_pair.2837" = type { %"struct.std::__1::__compressed_pair_elem.2838" }
%"struct.std::__1::__compressed_pair_elem.2838" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2842" = type { %"class.std::__1::__compressed_pair.2843" }
%"class.std::__1::__compressed_pair.2843" = type { %"struct.std::__1::__compressed_pair_elem.2844" }
%"struct.std::__1::__compressed_pair_elem.2844" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2850" = type { %"class.WTF::VectorBuffer.2851" }
%"class.WTF::VectorBuffer.2851" = type { %"class.WTF::VectorBufferBase.2852" }
%"class.WTF::VectorBufferBase.2852" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2853", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2853" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2856" = type { %"class.WTF::HashTable.2857" }
%"class.WTF::HashTable.2857" = type <{ %"struct.WTF::KeyValuePair.2860"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2860" = type opaque
%"class.WTF::Vector.2861" = type { %"class.WTF::VectorBuffer.2862" }
%"class.WTF::VectorBuffer.2862" = type { %"class.WTF::VectorBufferBase.2863" }
%"class.WTF::VectorBufferBase.2863" = type { %"class.mojo::ScopedHandleBase.2864"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2864" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.2821" = type { %"class.WTF::VectorBuffer.2822" }
%"class.WTF::VectorBuffer.2822" = type { %"class.WTF::VectorBufferBase.2823", [16 x i8] }
%"class.WTF::VectorBufferBase.2823" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2867" = type { %"class.WTF::VectorBuffer.2868" }
%"class.WTF::VectorBuffer.2868" = type { %"class.WTF::VectorBufferBase.2869" }
%"class.WTF::VectorBufferBase.2869" = type { %"class.mojo::PendingRemote.2870"*, i32, i32 }
%"class.mojo::PendingRemote.2870" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.2873" = type { %"class.WTF::HashTable.2874" }
%"class.WTF::HashTable.2874" = type <{ %"struct.WTF::KeyValuePair.2877"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2877" = type { i8**, %"class.std::__1::unique_ptr.2991" }
%"class.std::__1::unique_ptr.2991" = type { %"class.std::__1::__compressed_pair.2992" }
%"class.std::__1::__compressed_pair.2992" = type { %"struct.std::__1::__compressed_pair_elem.2993" }
%"struct.std::__1::__compressed_pair_elem.2993" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.2878" = type { %"class.blink::MemberBase.2879" }
%"class.blink::MemberBase.2879" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.mojo::Remote.2880" = type { %"class.mojo::internal::InterfacePtrState.2881" }
%"class.mojo::internal::InterfacePtrState.2881" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2882" }
%"class.std::__1::unique_ptr.2882" = type { %"class.std::__1::__compressed_pair.2883" }
%"class.std::__1::__compressed_pair.2883" = type { %"struct.std::__1::__compressed_pair_elem.2884" }
%"struct.std::__1::__compressed_pair_elem.2884" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.745", %"class.absl::optional.745", %"class.absl::optional.745", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2888", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1953" }
%"class.WTF::Vector.2888" = type { %"class.WTF::VectorBuffer.2889" }
%"class.WTF::VectorBuffer.2889" = type { %"class.WTF::VectorBufferBase.2890" }
%"class.WTF::VectorBufferBase.2890" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.blink::Member.2893" = type { %"class.blink::MemberBase.2894" }
%"class.blink::MemberBase.2894" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2674" = type { %"class.std::__1::__compressed_pair.2675" }
%"class.std::__1::__compressed_pair.2675" = type { %"struct.std::__1::__compressed_pair_elem.2676" }
%"struct.std::__1::__compressed_pair_elem.2676" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.1898", %"class.base::flat_map" }
%"class.WTF::Vector.2895" = type { %"class.WTF::VectorBuffer.2896" }
%"class.WTF::VectorBuffer.2896" = type { %"class.WTF::VectorBufferBase.2897" }
%"class.WTF::VectorBufferBase.2897" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%"class.blink::Member.2900" = type { %"class.blink::MemberBase.2901" }
%"class.blink::MemberBase.2901" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type { %"class.blink::Member.1896", %"class.std::__1::unique_ptr.2904", %"class.WTF::HashMap.2910", i8, %"class.WTF::Vector.2915" }
%"class.std::__1::unique_ptr.2904" = type { %"class.std::__1::__compressed_pair.2905" }
%"class.std::__1::__compressed_pair.2905" = type { %"struct.std::__1::__compressed_pair_elem.2906" }
%"struct.std::__1::__compressed_pair_elem.2906" = type { %"class.blink::AlternateSignedExchangeResourceInfo"* }
%"class.blink::AlternateSignedExchangeResourceInfo" = type opaque
%"class.WTF::HashMap.2910" = type { %"class.WTF::HashTable.2911" }
%"class.WTF::HashTable.2911" = type <{ %"struct.WTF::KeyValuePair.2914"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2914" = type opaque
%"class.WTF::Vector.2915" = type { %"class.WTF::VectorBuffer.2916" }
%"class.WTF::VectorBuffer.2916" = type { %"class.WTF::VectorBufferBase.2917" }
%"class.WTF::VectorBufferBase.2917" = type { %"class.base::WeakPtr.2918"*, i32, i32 }
%"class.base::WeakPtr.2918" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2925" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2921", %"class.std::__1::bitset.2921", %"class.std::__1::bitset.2923" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2921" = type { %"class.std::__1::__bitset.2922" }
%"class.std::__1::__bitset.2922" = type { [11 x i64] }
%"class.std::__1::bitset.2923" = type { %"class.std::__1::__bitset.2924" }
%"class.std::__1::__bitset.2924" = type { [2 x i64] }
%"class.blink::HeapHashSet.2925" = type { %"class.WTF::HashSet.2928" }
%"class.WTF::HashSet.2928" = type { %"class.WTF::HashTable.2929" }
%"class.WTF::HashTable.2929" = type <{ %"class.blink::Member.2931"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2931" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2932" = type { %"class.WTF::VectorBuffer.2933" }
%"class.WTF::VectorBuffer.2933" = type { %"class.WTF::VectorBufferBase.2934" }
%"class.WTF::VectorBufferBase.2934" = type { i32*, i32, i32 }
%"class.blink::WebVector.2793" = type { %"class.std::__1::vector.2794" }
%"class.std::__1::vector.2794" = type { %"class.std::__1::__vector_base.2795" }
%"class.std::__1::__vector_base.2795" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2796" }
%"class.std::__1::__compressed_pair.2796" = type { %"struct.std::__1::__compressed_pair_elem.2797" }
%"struct.std::__1::__compressed_pair_elem.2797" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2937" = type { %"class.mojo::internal::InterfacePtrState.2938" }
%"class.mojo::internal::InterfacePtrState.2938" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2939" }
%"class.std::__1::unique_ptr.2939" = type { %"class.std::__1::__compressed_pair.2940" }
%"class.std::__1::__compressed_pair.2940" = type { %"struct.std::__1::__compressed_pair_elem.2941" }
%"struct.std::__1::__compressed_pair_elem.2941" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1955" = type { %"class.std::__1::__compressed_pair.1956" }
%"class.std::__1::__compressed_pair.1956" = type { %"struct.std::__1::__compressed_pair_elem.1957" }
%"struct.std::__1::__compressed_pair_elem.1957" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2372", %"class.blink::Member.1896", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2377", i8, i32, %"class.blink::Color", %"class.absl::optional.2379", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2384", %"class.blink::Member.2386", %"class.blink::Member.2386", %"class.std::__1::unique_ptr.2389", i32, [4 x i8], %"class.WTF::HashSet.2392", %"class.blink::Member.2399", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2401", %"class.blink::HeapHashSet.2408", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2416", i8, %"class.blink::Member.2422", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2434", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2448", i8, %"class.std::__1::unique_ptr.2454", %"class.std::__1::unique_ptr.2571", %"class.WTF::Vector.2577", i32, %class.scoped_refptr.2582, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2583", %"class.blink::Member.2585", %"class.blink::Member.2587", %"class.blink::HeapHashSet.2589", %"class.blink::HeapHashSet.2596", %"class.std::__1::unique_ptr.2603", %"class.std::__1::unique_ptr.2609", %"class.WTF::Vector.843" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2372" = type { %"class.WTF::HashTable.2373" }
%"class.WTF::HashTable.2373" = type <{ %class.scoped_refptr.2376*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2376 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2377" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2378", { i64, i64 } }
%"class.blink::WeakMember.2378" = type { %"class.blink::MemberBase.1962" }
%"class.absl::optional.2379" = type { %"class.absl::optional_internal::optional_data.2380" }
%"class.absl::optional_internal::optional_data.2380" = type { %"class.absl::optional_internal::optional_data_base.2381" }
%"class.absl::optional_internal::optional_data_base.2381" = type { %"class.absl::optional_internal::optional_data_dtor_base.2382" }
%"class.absl::optional_internal::optional_data_dtor_base.2382" = type { i8, %union.anon.2383 }
%union.anon.2383 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2384" = type { %"class.blink::MemberBase.2385" }
%"class.blink::MemberBase.2385" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2386" = type { %"class.blink::MemberBase.2387" }
%"class.blink::MemberBase.2387" = type { %"class.blink::HeapHashSet.2388"* }
%"class.blink::HeapHashSet.2388" = type opaque
%"class.std::__1::unique_ptr.2389" = type { %"class.std::__1::__compressed_pair.2390" }
%"class.std::__1::__compressed_pair.2390" = type { %"struct.std::__1::__compressed_pair_elem.2391" }
%"struct.std::__1::__compressed_pair_elem.2391" = type { %"class.WTF::HashSet.2392"* }
%"class.WTF::HashSet.2392" = type { %"class.WTF::HashTable.2393" }
%"class.WTF::HashTable.2393" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2401" = type { %"class.WTF::HashSet.2404" }
%"class.WTF::HashSet.2404" = type { %"class.WTF::HashTable.2405" }
%"class.WTF::HashTable.2405" = type <{ %"class.blink::Member.2407"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2407" = type opaque
%"class.blink::HeapHashSet.2408" = type { %"class.WTF::HashSet.2411" }
%"class.WTF::HashSet.2411" = type { %"class.WTF::HashTable.2412" }
%"class.WTF::HashTable.2412" = type <{ %"class.blink::Member.2414"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2414" = type { %"class.blink::MemberBase.2415" }
%"class.blink::MemberBase.2415" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2638", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2640", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.129" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2638" = type { %"class.blink::MemberBase.2639" }
%"class.blink::MemberBase.2639" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2640" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2641", { i64, i64 } }
%"class.blink::WeakMember.2641" = type { %"class.blink::MemberBase.2415" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2416" = type { %"class.std::__1::__compressed_pair.2417" }
%"class.std::__1::__compressed_pair.2417" = type { %"struct.std::__1::__compressed_pair_elem.2418" }
%"struct.std::__1::__compressed_pair_elem.2418" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2422" = type { %"class.blink::MemberBase.2423" }
%"class.blink::MemberBase.2423" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2426", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2426" = type { %"class.WTF::HashTable.2427" }
%"class.WTF::HashTable.2427" = type <{ %"struct.WTF::KeyValuePair.2429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2429" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2430", i32, i32 }
%"class.WTF::Vector.2430" = type { %"class.WTF::VectorBuffer.2431" }
%"class.WTF::VectorBuffer.2431" = type { %"class.WTF::VectorBufferBase.2432" }
%"class.WTF::VectorBufferBase.2432" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2434" = type { %"class.WTF::LinkedHashSet.2437" }
%"class.WTF::LinkedHashSet.2437" = type { %"class.WTF::HashMap.2438", %"class.WTF::VectorBackedLinkedList.2442" }
%"class.WTF::HashMap.2438" = type { %"class.WTF::HashTable.2439" }
%"class.WTF::HashTable.2439" = type <{ %"struct.WTF::KeyValuePair.2441"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2441" = type opaque
%"class.WTF::VectorBackedLinkedList.2442" = type { %"class.WTF::Vector.2443", i32, i32 }
%"class.WTF::Vector.2443" = type { %"class.WTF::VectorBuffer.2444" }
%"class.WTF::VectorBuffer.2444" = type { %"class.WTF::VectorBufferBase.2445" }
%"class.WTF::VectorBufferBase.2445" = type { %"class.WTF::VectorBackedLinkedListNode.2446"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2446" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2448" = type { %"class.std::__1::__compressed_pair.2449" }
%"class.std::__1::__compressed_pair.2449" = type { %"struct.std::__1::__compressed_pair_elem.2450" }
%"struct.std::__1::__compressed_pair_elem.2450" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2454" = type { %"class.std::__1::__compressed_pair.2455" }
%"class.std::__1::__compressed_pair.2455" = type { %"struct.std::__1::__compressed_pair_elem.2456" }
%"struct.std::__1::__compressed_pair_elem.2456" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2457, %class.scoped_refptr.2457, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2548", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2553", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2457 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2458", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2465" }
%"class.WTF::RefCounted.2458" = type { %"class.base::RefCounted.2459" }
%"class.base::RefCounted.2459" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2460", i32, [4 x i8] }>
%"class.WTF::Vector.2460" = type { %"class.WTF::VectorBuffer.2461" }
%"class.WTF::VectorBuffer.2461" = type { %"class.WTF::VectorBufferBase.2462" }
%"class.WTF::VectorBufferBase.2462" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2465" = type { %"class.WTF::VectorBuffer.2466" }
%"class.WTF::VectorBuffer.2466" = type { %"class.WTF::VectorBufferBase.2467" }
%"class.WTF::VectorBufferBase.2467" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2471", %"class.std::__1::unique_ptr.2520", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.2468, %class.scoped_refptr.2469, %class.scoped_refptr.2470 }
%class.scoped_refptr.2468 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.2484", i8, i8, %class.scoped_refptr.2468, i32, i32 }
%"class.WTF::RefCounted.2484" = type { %"class.base::RefCounted.2485" }
%"class.base::RefCounted.2485" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2469 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2633" }
%"class.blink::PaintPropertyNode.2633" = type { %"class.WTF::RefCounted.2634", i8, i8, %class.scoped_refptr.2469, i32, i32 }
%"class.WTF::RefCounted.2634" = type { %"class.base::RefCounted.2635" }
%"class.base::RefCounted.2635" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2470 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2630" }
%"class.blink::PaintPropertyNode.2630" = type { %"class.WTF::RefCounted.2631", i8, i8, %class.scoped_refptr.2470, i32, i32 }
%"class.WTF::RefCounted.2631" = type { %"class.base::RefCounted.2632" }
%"class.base::RefCounted.2632" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2471" = type { %"class.std::__1::__compressed_pair.2472" }
%"class.std::__1::__compressed_pair.2472" = type { %"struct.std::__1::__compressed_pair_elem.2473" }
%"struct.std::__1::__compressed_pair_elem.2473" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2474", %"class.WTF::Vector.2479", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2474" = type { %"class.WTF::VectorBuffer.2475" }
%"class.WTF::VectorBuffer.2475" = type { %"class.WTF::VectorBufferBase.2476" }
%"class.WTF::VectorBufferBase.2476" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2479" = type { %"class.WTF::VectorBuffer.2480" }
%"class.WTF::VectorBuffer.2480" = type { %"class.WTF::VectorBufferBase.2481" }
%"class.WTF::VectorBufferBase.2481" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2499" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.2492, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.2493", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.2486" }
%"class.std::__1::unique_ptr.2486" = type { %"class.std::__1::__compressed_pair.2487" }
%"class.std::__1::__compressed_pair.2487" = type { %"struct.std::__1::__compressed_pair_elem.2488" }
%"struct.std::__1::__compressed_pair_elem.2488" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.2492 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2615", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2615" = type { %"class.WTF::RefCounted.2616", i8, i8, %class.scoped_refptr.2492, i32, i32 }
%"class.WTF::RefCounted.2616" = type { %"class.base::RefCounted.2617" }
%"class.base::RefCounted.2617" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2618" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2618" = type { %"class.absl::optional_internal::optional_data.2619" }
%"class.absl::optional_internal::optional_data.2619" = type { %"class.absl::optional_internal::optional_data_base.2620" }
%"class.absl::optional_internal::optional_data_base.2620" = type { %"class.absl::optional_internal::optional_data_dtor_base.2621" }
%"class.absl::optional_internal::optional_data_dtor_base.2621" = type { i8, %union.anon.2622 }
%union.anon.2622 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2623", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2623" = type { %"class.std::__1::__vector_base.2624" }
%"class.std::__1::__vector_base.2624" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2625" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.2625" = type { %"struct.std::__1::__compressed_pair_elem.2626" }
%"struct.std::__1::__compressed_pair_elem.2626" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.2493" = type { %"class.std::__1::__compressed_pair.2494" }
%"class.std::__1::__compressed_pair.2494" = type { %"struct.std::__1::__compressed_pair_elem.2495" }
%"struct.std::__1::__compressed_pair_elem.2495" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2499" = type { %"class.std::__1::__compressed_pair.2500" }
%"class.std::__1::__compressed_pair.2500" = type { %"struct.std::__1::__compressed_pair_elem.2501" }
%"struct.std::__1::__compressed_pair_elem.2501" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2502", %"class.std::__1::unique_ptr.2508", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2502" = type { %"class.std::__1::__compressed_pair.2503" }
%"class.std::__1::__compressed_pair.2503" = type { %"struct.std::__1::__compressed_pair_elem.2504" }
%"struct.std::__1::__compressed_pair_elem.2504" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2508" = type { %"class.std::__1::__compressed_pair.2509" }
%"class.std::__1::__compressed_pair.2509" = type { %"struct.std::__1::__compressed_pair_elem.2510" }
%"struct.std::__1::__compressed_pair_elem.2510" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2520" = type { %"class.std::__1::__compressed_pair.2521" }
%"class.std::__1::__compressed_pair.2521" = type { %"struct.std::__1::__compressed_pair_elem.2522" }
%"struct.std::__1::__compressed_pair_elem.2522" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2523", %"class.absl::optional.2523" }
%"class.absl::optional.2523" = type { %"class.absl::optional_internal::optional_data.2524" }
%"class.absl::optional_internal::optional_data.2524" = type { %"class.absl::optional_internal::optional_data_base.2525" }
%"class.absl::optional_internal::optional_data_base.2525" = type { %"class.absl::optional_internal::optional_data_dtor_base.2526" }
%"class.absl::optional_internal::optional_data_dtor_base.2526" = type { i8, [3 x i8], %union.anon.2527 }
%union.anon.2527 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2465"*, %"class.absl::optional.2533", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2533" = type { %"class.absl::optional_internal::optional_data.2534" }
%"class.absl::optional_internal::optional_data.2534" = type { %"class.absl::optional_internal::optional_data_base.2535" }
%"class.absl::optional_internal::optional_data_base.2535" = type { %"class.absl::optional_internal::optional_data_dtor_base.2536" }
%"class.absl::optional_internal::optional_data_dtor_base.2536" = type { i8, %union.anon.2537 }
%union.anon.2537 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2538", %"class.WTF::Vector.2543" }
%"class.WTF::Vector.2538" = type { %"class.WTF::VectorBuffer.2539" }
%"class.WTF::VectorBuffer.2539" = type { %"class.WTF::VectorBufferBase.2540", [128 x i8] }
%"class.WTF::VectorBufferBase.2540" = type { i32*, i32, i32 }
%"class.WTF::Vector.2543" = type { %"class.WTF::VectorBuffer.2544" }
%"class.WTF::VectorBuffer.2544" = type { %"class.WTF::VectorBufferBase.2545", [128 x i8] }
%"class.WTF::VectorBufferBase.2545" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2548" = type { %"class.WTF::VectorBuffer.2549" }
%"class.WTF::VectorBuffer.2549" = type { %"class.WTF::VectorBufferBase.2550" }
%"class.WTF::VectorBufferBase.2550" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2553" = type { %"class.WTF::HashTable.2554" }
%"class.WTF::HashTable.2554" = type <{ %"struct.WTF::KeyValuePair.2557"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2557" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2558", %"class.WTF::Vector.2563" }
%"class.WTF::HashMap.2558" = type { %"class.WTF::HashTable.2559" }
%"class.WTF::HashTable.2559" = type <{ %"struct.WTF::KeyValuePair.2562"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2562" = type opaque
%"class.WTF::Vector.2563" = type { %"class.WTF::VectorBuffer.2564" }
%"class.WTF::VectorBuffer.2564" = type { %"class.WTF::VectorBufferBase.2565" }
%"class.WTF::VectorBufferBase.2565" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2571" = type { %"class.std::__1::__compressed_pair.2572" }
%"class.std::__1::__compressed_pair.2572" = type { %"struct.std::__1::__compressed_pair_elem.2573" }
%"struct.std::__1::__compressed_pair_elem.2573" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2577" = type { %"class.WTF::VectorBuffer.2578" }
%"class.WTF::VectorBuffer.2578" = type { %"class.WTF::VectorBufferBase.2579" }
%"class.WTF::VectorBufferBase.2579" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2582 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2583" = type { %"class.blink::MemberBase.2584" }
%"class.blink::MemberBase.2584" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2585" = type { %"class.blink::MemberBase.2586" }
%"class.blink::MemberBase.2586" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2587" = type { %"class.blink::MemberBase.2588" }
%"class.blink::MemberBase.2588" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2589" = type { %"class.WTF::HashSet.2592" }
%"class.WTF::HashSet.2592" = type { %"class.WTF::HashTable.2593" }
%"class.WTF::HashTable.2593" = type <{ %"class.blink::WeakMember.2595"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2595" = type opaque
%"class.blink::HeapHashSet.2596" = type { %"class.WTF::HashSet.2599" }
%"class.WTF::HashSet.2599" = type { %"class.WTF::HashTable.2600" }
%"class.WTF::HashTable.2600" = type <{ %"class.blink::WeakMember.2602"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2602" = type opaque
%"class.std::__1::unique_ptr.2603" = type { %"class.std::__1::__compressed_pair.2604" }
%"class.std::__1::__compressed_pair.2604" = type { %"struct.std::__1::__compressed_pair_elem.2605" }
%"struct.std::__1::__compressed_pair_elem.2605" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2609" = type { %"class.std::__1::__compressed_pair.2610" }
%"class.std::__1::__compressed_pair.2610" = type { %"struct.std::__1::__compressed_pair_elem.2611" }
%"struct.std::__1::__compressed_pair_elem.2611" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1643", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.1975", %"class.blink::HeapListHashSet.1986", %"class.blink::HeapListHashSet.1997", %"class.blink::HeapListHashSet.2008", %"class.blink::HeapListHashSet.2019", %"class.blink::HeapListHashSet.2030", %"class.blink::HeapListHashSet.2041", %"class.blink::HeapListHashSet.2052", %"class.blink::HeapListHashSet.2063", %"class.blink::HeapListHashSet.2074", %"class.blink::HeapListHashSet.2085", %"class.blink::HeapListHashSet.2096", %"class.blink::HeapListHashSet.2107", %"class.blink::HeapListHashSet.2118", %"class.blink::HeapListHashSet.2129", %"class.blink::HeapListHashSet.2140", %"class.blink::HeapListHashSet.2151", %"class.blink::HeapListHashSet.2162", %"class.blink::HeapListHashSet.2173", %"class.blink::HeapListHashSet.2184" }
%"class.blink::HeapListHashSet.1975" = type { %"class.WTF::ListHashSet.base.1985", [7 x i8] }
%"class.WTF::ListHashSet.base.1985" = type <{ %"class.WTF::HashTable.1980", %"class.blink::Member.1982", %"class.blink::Member.1982", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1980" = type <{ %"class.blink::Member.1982"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1982" = type { %"class.blink::MemberBase.1983" }
%"class.blink::MemberBase.1983" = type { %"class.blink::HeapListHashSetNode.1984"* }
%"class.blink::HeapListHashSetNode.1984" = type { %"class.blink::Member.2198", %"class.blink::Member.1982", %"class.blink::Member.1982" }
%"class.blink::HeapListHashSet.1986" = type { %"class.WTF::ListHashSet.base.1996", [7 x i8] }
%"class.WTF::ListHashSet.base.1996" = type <{ %"class.WTF::HashTable.1991", %"class.blink::Member.1993", %"class.blink::Member.1993", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1991" = type <{ %"class.blink::Member.1993"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::HeapListHashSetNode.1995"* }
%"class.blink::HeapListHashSetNode.1995" = type { %"class.blink::Member.2366", %"class.blink::Member.1993", %"class.blink::Member.1993" }
%"class.blink::Member.2366" = type { %"class.blink::MemberBase.2367" }
%"class.blink::MemberBase.2367" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1997" = type { %"class.WTF::ListHashSet.base.2007", [7 x i8] }
%"class.WTF::ListHashSet.base.2007" = type <{ %"class.WTF::HashTable.2002", %"class.blink::Member.2004", %"class.blink::Member.2004", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2002" = type <{ %"class.blink::Member.2004"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2004" = type { %"class.blink::MemberBase.2005" }
%"class.blink::MemberBase.2005" = type { %"class.blink::HeapListHashSetNode.2006"* }
%"class.blink::HeapListHashSetNode.2006" = type { %"class.blink::Member.2362", %"class.blink::Member.2004", %"class.blink::Member.2004" }
%"class.blink::Member.2362" = type { %"class.blink::MemberBase.2363" }
%"class.blink::MemberBase.2363" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2008" = type { %"class.WTF::ListHashSet.base.2018", [7 x i8] }
%"class.WTF::ListHashSet.base.2018" = type <{ %"class.WTF::HashTable.2013", %"class.blink::Member.2015", %"class.blink::Member.2015", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2013" = type <{ %"class.blink::Member.2015"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2015" = type { %"class.blink::MemberBase.2016" }
%"class.blink::MemberBase.2016" = type { %"class.blink::HeapListHashSetNode.2017"* }
%"class.blink::HeapListHashSetNode.2017" = type { %"class.blink::Member.2358", %"class.blink::Member.2015", %"class.blink::Member.2015" }
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2019" = type { %"class.WTF::ListHashSet.base.2029", [7 x i8] }
%"class.WTF::ListHashSet.base.2029" = type <{ %"class.WTF::HashTable.2024", %"class.blink::Member.2026", %"class.blink::Member.2026", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2024" = type <{ %"class.blink::Member.2026"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2026" = type { %"class.blink::MemberBase.2027" }
%"class.blink::MemberBase.2027" = type { %"class.blink::HeapListHashSetNode.2028"* }
%"class.blink::HeapListHashSetNode.2028" = type { %"class.blink::Member.2354", %"class.blink::Member.2026", %"class.blink::Member.2026" }
%"class.blink::Member.2354" = type { %"class.blink::MemberBase.2355" }
%"class.blink::MemberBase.2355" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2030" = type { %"class.WTF::ListHashSet.base.2040", [7 x i8] }
%"class.WTF::ListHashSet.base.2040" = type <{ %"class.WTF::HashTable.2035", %"class.blink::Member.2037", %"class.blink::Member.2037", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2035" = type <{ %"class.blink::Member.2037"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::HeapListHashSetNode.2039"* }
%"class.blink::HeapListHashSetNode.2039" = type { %"class.blink::Member.2350", %"class.blink::Member.2037", %"class.blink::Member.2037" }
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2041" = type { %"class.WTF::ListHashSet.base.2051", [7 x i8] }
%"class.WTF::ListHashSet.base.2051" = type <{ %"class.WTF::HashTable.2046", %"class.blink::Member.2048", %"class.blink::Member.2048", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2046" = type <{ %"class.blink::Member.2048"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2048" = type { %"class.blink::MemberBase.2049" }
%"class.blink::MemberBase.2049" = type { %"class.blink::HeapListHashSetNode.2050"* }
%"class.blink::HeapListHashSetNode.2050" = type { %"class.blink::Member.2346", %"class.blink::Member.2048", %"class.blink::Member.2048" }
%"class.blink::Member.2346" = type { %"class.blink::MemberBase.2347" }
%"class.blink::MemberBase.2347" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2052" = type { %"class.WTF::ListHashSet.base.2062", [7 x i8] }
%"class.WTF::ListHashSet.base.2062" = type <{ %"class.WTF::HashTable.2057", %"class.blink::Member.2059", %"class.blink::Member.2059", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2057" = type <{ %"class.blink::Member.2059"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2059" = type { %"class.blink::MemberBase.2060" }
%"class.blink::MemberBase.2060" = type { %"class.blink::HeapListHashSetNode.2061"* }
%"class.blink::HeapListHashSetNode.2061" = type { %"class.blink::Member.2342", %"class.blink::Member.2059", %"class.blink::Member.2059" }
%"class.blink::Member.2342" = type { %"class.blink::MemberBase.2343" }
%"class.blink::MemberBase.2343" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2063" = type { %"class.WTF::ListHashSet.base.2073", [7 x i8] }
%"class.WTF::ListHashSet.base.2073" = type <{ %"class.WTF::HashTable.2068", %"class.blink::Member.2070", %"class.blink::Member.2070", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2068" = type <{ %"class.blink::Member.2070"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2070" = type { %"class.blink::MemberBase.2071" }
%"class.blink::MemberBase.2071" = type { %"class.blink::HeapListHashSetNode.2072"* }
%"class.blink::HeapListHashSetNode.2072" = type { %"class.blink::Member.2338", %"class.blink::Member.2070", %"class.blink::Member.2070" }
%"class.blink::Member.2338" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2074" = type { %"class.WTF::ListHashSet.base.2084", [7 x i8] }
%"class.WTF::ListHashSet.base.2084" = type <{ %"class.WTF::HashTable.2079", %"class.blink::Member.2081", %"class.blink::Member.2081", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2079" = type <{ %"class.blink::Member.2081"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2081" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::HeapListHashSetNode.2083"* }
%"class.blink::HeapListHashSetNode.2083" = type { %"class.blink::Member.2334", %"class.blink::Member.2081", %"class.blink::Member.2081" }
%"class.blink::Member.2334" = type { %"class.blink::MemberBase.2335" }
%"class.blink::MemberBase.2335" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2085" = type { %"class.WTF::ListHashSet.base.2095", [7 x i8] }
%"class.WTF::ListHashSet.base.2095" = type <{ %"class.WTF::HashTable.2090", %"class.blink::Member.2092", %"class.blink::Member.2092", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2090" = type <{ %"class.blink::Member.2092"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2092" = type { %"class.blink::MemberBase.2093" }
%"class.blink::MemberBase.2093" = type { %"class.blink::HeapListHashSetNode.2094"* }
%"class.blink::HeapListHashSetNode.2094" = type { %"class.blink::Member.2211", %"class.blink::Member.2092", %"class.blink::Member.2092" }
%"class.blink::HeapListHashSet.2096" = type { %"class.WTF::ListHashSet.base.2106", [7 x i8] }
%"class.WTF::ListHashSet.base.2106" = type <{ %"class.WTF::HashTable.2101", %"class.blink::Member.2103", %"class.blink::Member.2103", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2101" = type <{ %"class.blink::Member.2103"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2103" = type { %"class.blink::MemberBase.2104" }
%"class.blink::MemberBase.2104" = type { %"class.blink::HeapListHashSetNode.2105"* }
%"class.blink::HeapListHashSetNode.2105" = type { %"class.blink::Member.2328", %"class.blink::Member.2103", %"class.blink::Member.2103" }
%"class.blink::Member.2328" = type { %"class.blink::MemberBase.2329" }
%"class.blink::MemberBase.2329" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2107" = type { %"class.WTF::ListHashSet.base.2117", [7 x i8] }
%"class.WTF::ListHashSet.base.2117" = type <{ %"class.WTF::HashTable.2112", %"class.blink::Member.2114", %"class.blink::Member.2114", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2112" = type <{ %"class.blink::Member.2114"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2114" = type { %"class.blink::MemberBase.2115" }
%"class.blink::MemberBase.2115" = type { %"class.blink::HeapListHashSetNode.2116"* }
%"class.blink::HeapListHashSetNode.2116" = type { %"class.blink::Member.2324", %"class.blink::Member.2114", %"class.blink::Member.2114" }
%"class.blink::Member.2324" = type { %"class.blink::MemberBase.2325" }
%"class.blink::MemberBase.2325" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2118" = type { %"class.WTF::ListHashSet.base.2128", [7 x i8] }
%"class.WTF::ListHashSet.base.2128" = type <{ %"class.WTF::HashTable.2123", %"class.blink::Member.2125", %"class.blink::Member.2125", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2123" = type <{ %"class.blink::Member.2125"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::HeapListHashSetNode.2127"* }
%"class.blink::HeapListHashSetNode.2127" = type { %"class.blink::Member.2320", %"class.blink::Member.2125", %"class.blink::Member.2125" }
%"class.blink::Member.2320" = type { %"class.blink::MemberBase.2321" }
%"class.blink::MemberBase.2321" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2129" = type { %"class.WTF::ListHashSet.base.2139", [7 x i8] }
%"class.WTF::ListHashSet.base.2139" = type <{ %"class.WTF::HashTable.2134", %"class.blink::Member.2136", %"class.blink::Member.2136", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2134" = type <{ %"class.blink::Member.2136"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2136" = type { %"class.blink::MemberBase.2137" }
%"class.blink::MemberBase.2137" = type { %"class.blink::HeapListHashSetNode.2138"* }
%"class.blink::HeapListHashSetNode.2138" = type { %"class.blink::Member.2316", %"class.blink::Member.2136", %"class.blink::Member.2136" }
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2140" = type { %"class.WTF::ListHashSet.base.2150", [7 x i8] }
%"class.WTF::ListHashSet.base.2150" = type <{ %"class.WTF::HashTable.2145", %"class.blink::Member.2147", %"class.blink::Member.2147", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2145" = type <{ %"class.blink::Member.2147"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2147" = type { %"class.blink::MemberBase.2148" }
%"class.blink::MemberBase.2148" = type { %"class.blink::HeapListHashSetNode.2149"* }
%"class.blink::HeapListHashSetNode.2149" = type { %"class.blink::Member.2312", %"class.blink::Member.2147", %"class.blink::Member.2147" }
%"class.blink::Member.2312" = type { %"class.blink::MemberBase.2313" }
%"class.blink::MemberBase.2313" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2151" = type { %"class.WTF::ListHashSet.base.2161", [7 x i8] }
%"class.WTF::ListHashSet.base.2161" = type <{ %"class.WTF::HashTable.2156", %"class.blink::Member.2158", %"class.blink::Member.2158", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2156" = type <{ %"class.blink::Member.2158"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2158" = type { %"class.blink::MemberBase.2159" }
%"class.blink::MemberBase.2159" = type { %"class.blink::HeapListHashSetNode.2160"* }
%"class.blink::HeapListHashSetNode.2160" = type { %"class.blink::Member.2308", %"class.blink::Member.2158", %"class.blink::Member.2158" }
%"class.blink::Member.2308" = type { %"class.blink::MemberBase.2309" }
%"class.blink::MemberBase.2309" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2162" = type { %"class.WTF::ListHashSet.base.2172", [7 x i8] }
%"class.WTF::ListHashSet.base.2172" = type <{ %"class.WTF::HashTable.2167", %"class.blink::Member.2169", %"class.blink::Member.2169", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2167" = type <{ %"class.blink::Member.2169"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2169" = type { %"class.blink::MemberBase.2170" }
%"class.blink::MemberBase.2170" = type { %"class.blink::HeapListHashSetNode.2171"* }
%"class.blink::HeapListHashSetNode.2171" = type { %"class.blink::Member.2304", %"class.blink::Member.2169", %"class.blink::Member.2169" }
%"class.blink::Member.2304" = type { %"class.blink::MemberBase.2305" }
%"class.blink::MemberBase.2305" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2173" = type { %"class.WTF::ListHashSet.base.2183", [7 x i8] }
%"class.WTF::ListHashSet.base.2183" = type <{ %"class.WTF::HashTable.2178", %"class.blink::Member.2180", %"class.blink::Member.2180", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2178" = type <{ %"class.blink::Member.2180"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2180" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::HeapListHashSetNode.2182"* }
%"class.blink::HeapListHashSetNode.2182" = type { %"class.blink::Member.2213", %"class.blink::Member.2180", %"class.blink::Member.2180" }
%"class.blink::HeapListHashSet.2184" = type { %"class.WTF::ListHashSet.base.2194", [7 x i8] }
%"class.WTF::ListHashSet.base.2194" = type <{ %"class.WTF::HashTable.2189", %"class.blink::Member.2191", %"class.blink::Member.2191", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2189" = type <{ %"class.blink::Member.2191"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2191" = type { %"class.blink::MemberBase.2192" }
%"class.blink::MemberBase.2192" = type { %"class.blink::HeapListHashSetNode.2193"* }
%"class.blink::HeapListHashSetNode.2193" = type { %"class.blink::Member.2196", %"class.blink::Member.2191", %"class.blink::Member.2191" }
%class.scoped_refptr.2195 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2196" = type { %"class.blink::MemberBase.2197" }
%"class.blink::MemberBase.2197" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2198" = type { %"class.blink::MemberBase.2199" }
%"class.blink::MemberBase.2199" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.1896", %"class.WTF::Vector.1392", i32, [4 x i8], %"class.blink::HeapHashMap.2202", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.2202" = type { %"class.WTF::HashMap.2205" }
%"class.WTF::HashMap.2205" = type { %"class.WTF::HashTable.2206" }
%"class.WTF::HashTable.2206" = type <{ %"struct.WTF::KeyValuePair.2208"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2208" = type opaque
%"class.blink::Member.2209" = type { %"class.blink::MemberBase.2210" }
%"class.blink::MemberBase.2210" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2211" = type { %"class.blink::MemberBase.2212" }
%"class.blink::MemberBase.2212" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2213" = type { %"class.blink::MemberBase.2214" }
%"class.blink::MemberBase.2214" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2219" = type { %"class.blink::MemberBase.2220" }
%"class.blink::MemberBase.2220" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2221" = type { %"class.blink::Member.2222" }
%"class.blink::Member.2222" = type { %"class.blink::MemberBase.2223" }
%"class.blink::MemberBase.2223" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3017" }
%"class.mojo::Remote.3017" = type { %"class.mojo::internal::InterfacePtrState.3018" }
%"class.mojo::internal::InterfacePtrState.3018" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3019" }
%"class.std::__1::unique_ptr.3019" = type { %"class.std::__1::__compressed_pair.3020" }
%"class.std::__1::__compressed_pair.3020" = type { %"struct.std::__1::__compressed_pair_elem.3021" }
%"struct.std::__1::__compressed_pair_elem.3021" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2224" = type { %"class.std::__1::__compressed_pair.2225" }
%"class.std::__1::__compressed_pair.2225" = type { %"struct.std::__1::__compressed_pair_elem.2226" }
%"struct.std::__1::__compressed_pair_elem.2226" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2227, %"class.blink::WebVector.2229", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2227 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2228", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2228" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2237, i8, [7 x i8] }>
%class.scoped_refptr.2237 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2238", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2238" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2239" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2239" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.base::RepeatingCallback.2246" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2247" = type { %"class.std::__1::__compressed_pair.2248" }
%"class.std::__1::__compressed_pair.2248" = type { %"struct.std::__1::__compressed_pair_elem.2249" }
%"struct.std::__1::__compressed_pair_elem.2249" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2253" = type { %"class.std::__1::__compressed_pair.2254" }
%"class.std::__1::__compressed_pair.2254" = type { %"struct.std::__1::__compressed_pair_elem.2255" }
%"struct.std::__1::__compressed_pair_elem.2255" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2259" }
%"class.blink::Member.2259" = type { %"class.blink::MemberBase.2260" }
%"class.blink::MemberBase.2260" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3027" }
%"class.mojo::AssociatedRemote.3027" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3028" }
%"class.mojo::internal::AssociatedInterfacePtrState.3028" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3029" }
%"class.std::__1::unique_ptr.3029" = type { %"class.std::__1::__compressed_pair.3030" }
%"class.std::__1::__compressed_pair.3030" = type { %"struct.std::__1::__compressed_pair_elem.3031" }
%"struct.std::__1::__compressed_pair_elem.3031" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2261" = type { %"class.blink::Member.2262" }
%"class.blink::Member.2262" = type { %"class.blink::MemberBase.2263" }
%"class.blink::MemberBase.2263" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3037" }
%"class.mojo::AssociatedRemote.3037" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3038" }
%"class.mojo::internal::AssociatedInterfacePtrState.3038" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3039" }
%"class.std::__1::unique_ptr.3039" = type { %"class.std::__1::__compressed_pair.3040" }
%"class.std::__1::__compressed_pair.3040" = type { %"struct.std::__1::__compressed_pair_elem.3041" }
%"struct.std::__1::__compressed_pair_elem.3041" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2264" }
%"class.blink::Member.2264" = type { %"class.blink::MemberBase.2265" }
%"class.blink::MemberBase.2265" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3047", %"class.blink::Member.1896", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3047" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3048" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.740" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3048" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2266" = type { %"class.blink::Member.2267" }
%"class.blink::Member.2267" = type { %"class.blink::MemberBase.2268" }
%"class.blink::MemberBase.2268" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3051", %"class.blink::Member.1896", %"class.mojo::AssociatedReceiver.3052" }
%"class.blink::ThreadState::PrefinalizerRegistration.3051" = type { i8 }
%"class.mojo::AssociatedReceiver.3052" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3053" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3053" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2269" }
%"class.blink::Member.2269" = type { %"class.blink::MemberBase.2270" }
%"class.blink::MemberBase.2270" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3056", %"class.blink::Member.1896", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3056" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1793, %"class.std::__1::unique_ptr.740", %"class.base::WeakPtrFactory.3057" }
%"class.base::WeakPtrFactory.3057" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2271" = type { %"class.blink::Member.2272" }
%"class.blink::Member.2272" = type { %"class.blink::MemberBase.2273" }
%"class.blink::MemberBase.2273" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3060", %"class.blink::Member.1896", %"class.mojo::AssociatedReceiver.3061" }
%"class.blink::ThreadState::PrefinalizerRegistration.3060" = type { i8 }
%"class.mojo::AssociatedReceiver.3061" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3062" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3062" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2274" = type { %"class.blink::MemberBase.2275" }
%"class.blink::MemberBase.2275" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2276" = type { %"class.blink::MemberBase.2277" }
%"class.blink::MemberBase.2277" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2278" = type { %"class.blink::MemberBase.2279" }
%"class.blink::MemberBase.2279" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2280" = type { %"class.blink::MemberBase.2281" }
%"class.blink::MemberBase.2281" = type { %"class.blink::HeapHashMap.2282"* }
%"class.blink::HeapHashMap.2282" = type opaque
%"class.mojo::StructPtr.2283" = type { %"class.std::__1::unique_ptr.2284" }
%"class.std::__1::unique_ptr.2284" = type { %"class.std::__1::__compressed_pair.2285" }
%"class.std::__1::__compressed_pair.2285" = type { %"struct.std::__1::__compressed_pair_elem.2286" }
%"struct.std::__1::__compressed_pair_elem.2286" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2287", %"class.mojo::InlinedStructPtr.1538" }
%"class.mojo::InlinedStructPtr.2287" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.2291" = type { %"class.blink::MemberBase.2292" }
%"class.blink::MemberBase.2292" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2293" = type { %"class.absl::optional_internal::optional_data.2294" }
%"class.absl::optional_internal::optional_data.2294" = type { %"class.absl::optional_internal::optional_data_base.2295" }
%"class.absl::optional_internal::optional_data_base.2295" = type { %"class.absl::optional_internal::optional_data_dtor_base.2296" }
%"class.absl::optional_internal::optional_data_dtor_base.2296" = type { i8, %union.anon.2297 }
%union.anon.2297 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::BackgroundHTMLParser" = type { %"class.blink::BackgroundHTMLInputStream", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.67", %"class.blink::HTMLTreeBuilderSimulator", %"class.blink::HTMLParserOptions", %"class.blink::WeakPersistent.2957", %"class.WTF::Vector.434", %"class.WTF::Vector.183", %"class.absl::optional", %"class.std::__1::unique_ptr.2959", %"class.std::__1::unique_ptr", %"class.blink::DocumentEncodingData", %class.scoped_refptr.420, i32, i8, %"class.base::WeakPtrFactory.2965" }
%"class.blink::BackgroundHTMLInputStream" = type <{ %"class.blink::SegmentedString", %"class.WTF::Vector.720", %"class.WTF::Vector.2945", i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.2945" = type { %"class.WTF::VectorBuffer.2946" }
%"class.WTF::VectorBuffer.2946" = type { %"class.WTF::VectorBufferBase.2947" }
%"class.WTF::VectorBufferBase.2947" = type { %"struct.blink::BackgroundHTMLInputStream::Checkpoint"*, i32, i32 }
%"struct.blink::BackgroundHTMLInputStream::Checkpoint" = type { %"class.blink::SegmentedString", i32, i32 }
%"class.blink::HTMLTreeBuilderSimulator" = type { %"class.blink::HTMLParserOptions", [6 x i8], %"class.WTF::Vector.450", i8, [7 x i8], %"class.WTF::Vector.2950" }
%"class.WTF::Vector.2950" = type { %"class.WTF::VectorBuffer.base.2953", [4 x i8] }
%"class.WTF::VectorBuffer.base.2953" = type <{ %"class.WTF::VectorBufferBase.2952", [4 x i8] }>
%"class.WTF::VectorBufferBase.2952" = type { i32*, i32, i32 }
%"class.blink::WeakPersistent.2957" = type { %"class.blink::PersistentBase.2958" }
%"class.blink::PersistentBase.2958" = type { %"class.blink::HTMLDocumentParser"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.2959" = type { %"class.std::__1::__compressed_pair.2960" }
%"class.std::__1::__compressed_pair.2960" = type { %"struct.std::__1::__compressed_pair_elem.2961" }
%"struct.std::__1::__compressed_pair_elem.2961" = type { %"class.blink::TokenPreloadScanner"* }
%"class.base::WeakPtrFactory.2965" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.3140", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.3140" = type { %"class.std::__1::__vector_base.3141" }
%"class.std::__1::__vector_base.3141" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.3142" }
%"class.std::__1::__compressed_pair.3142" = type { %"struct.std::__1::__compressed_pair_elem.3143" }
%"struct.std::__1::__compressed_pair_elem.3143" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.3105", i64, i64 }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.3147" }
%"class.std::__1::list.3147" = type { %"class.std::__1::__list_imp.3148" }
%"class.std::__1::__list_imp.3148" = type { %"struct.std::__1::__list_node_base.3149", %"class.std::__1::__compressed_pair.3150" }
%"struct.std::__1::__list_node_base.3149" = type { %"struct.std::__1::__list_node_base.3149"*, %"struct.std::__1::__list_node_base.3149"* }
%"class.std::__1::__compressed_pair.3150" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"class.blink::PumpSession" = type { %"class.blink::NestingLevelIncrementer" }
%"class.blink::NestingLevelIncrementer" = type { i32* }
%"class.blink::probe::ParseHTML" = type { %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::Document"*, %"class.blink::HTMLDocumentParser"* }
%"class.blink::probe::ProbeBase" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.absl::optional.2972" = type { %"class.absl::optional_internal::optional_data.2973" }
%"class.absl::optional_internal::optional_data.2973" = type { %"class.absl::optional_internal::optional_data_base.2974" }
%"class.absl::optional_internal::optional_data_base.2974" = type { %"class.absl::optional_internal::optional_data_dtor_base.2975" }
%"class.absl::optional_internal::optional_data_dtor_base.2975" = type { i8, %union.anon.2976 }
%union.anon.2976 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::Persistent.2977" = type { %"class.blink::PersistentBase.2978" }
%"class.blink::PersistentBase.2978" = type { %"class.blink::HTMLDocumentParser"*, %"class.blink::PersistentNodePtr.411" }
%"struct.base::internal::BindState.3215" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.3216" }
%"class.std::__1::tuple.3216" = type { %"struct.std::__1::__tuple_impl.3217" }
%"struct.std::__1::__tuple_impl.3217" = type { %"class.std::__1::__tuple_leaf.3218" }
%"class.std::__1::__tuple_leaf.3218" = type { %"class.blink::Persistent.2977" }
%"class.blink::SpeculationsPumpSession" = type { %"class.blink::NestingLevelIncrementer", %"class.base::ElapsedTimer", i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::VectorBuffer.451" = type <{ %"class.WTF::VectorBufferBase.452", [4 x i8], [4 x i8] }>
%"class.WTF::DequeIterator" = type { %"class.WTF::DequeIteratorBase.base", [4 x i8] }
%"class.WTF::DequeIteratorBase.base" = type <{ %"class.WTF::Deque.458"*, i32 }>
%"struct.blink::BackgroundHTMLParser::Checkpoint" = type { %"class.blink::WeakPersistent.2957", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.67", %"class.WTF::Vector.450", i32, i32, %"class.WTF::String" }
%"class.blink::AtomicHTMLToken" = type { i32, %"class.WTF::AtomicString", %"class.WTF::String", %"class.std::__1::unique_ptr.53", i8, i8, %"class.WTF::Vector.119" }
%"class.std::__1::unique_ptr.2979" = type { %"class.std::__1::__compressed_pair.2980" }
%"class.std::__1::__compressed_pair.2980" = type { %"struct.std::__1::__compressed_pair_elem.2981" }
%"struct.std::__1::__compressed_pair_elem.2981" = type { %"struct.blink::BackgroundHTMLParser::Configuration"* }
%"struct.blink::BackgroundHTMLParser::Configuration" = type { %"class.blink::HTMLParserOptions", %"class.blink::WeakPersistent.2957", %"class.std::__1::unique_ptr" }
%"struct.std::__1::default_delete.2983" = type { i8 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::scheduler::CooperativeSchedulingManager::AllowedStackScope" = type { %"class.blink::scheduler::CooperativeSchedulingManager"* }
%"class.blink::scheduler::CooperativeSchedulingManager" = type <{ i32 (...)**, i32, i8, [3 x i8], %"class.base::TimeTicks", %"class.base::TickClock"*, i8, [7 x i8] }>
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_18HTMLDocumentParserEEC2EPS2_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIPvPKcEEN4base11trace_event16TraceEventHandleEcPKhS3_S3_yjyS3_OT_S3_OT0_ = comdat any

$_ZN3WTF6VectorIN5blink16CompactHTMLTokenELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF13DequeIteratorINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEEdeEv = comdat any

$_ZN20trace_event_internal13AddTraceEventIRbPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_ = comdat any

$_ZN5blink15AtomicHTMLTokenC2ERNS_9HTMLTokenE = comdat any

$_ZN5blink15AtomicHTMLTokenD2Ev = comdat any

$_ZN5blink15AtomicHTMLTokenC2ERKNS_16CompactHTMLTokenE = comdat any

$_ZN20trace_event_internal13AddTraceEventIjPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_ = comdat any

$_ZN5blink15HTMLInputStream13MarkEndOfFileEv = comdat any

$_ZNK5blink25DecodedDataDocumentParser12NeedsDecoderEv = comdat any

$_ZNK5blink14DocumentParser18NameInHeapSnapshotEv = comdat any

$_ZN5blink24ScriptableDocumentParser26AsScriptableDocumentParserEv = comdat any

$_ZN5blink14DocumentParser18SetHasAppendedDataEv = comdat any

$_ZNK5blink25DecodedDataDocumentParser10WellFormedEv = comdat any

$_ZN5blink18HTMLDocumentParser11InputStreamEv = comdat any

$_ZNK5blink18HTMLDocumentParser17HasPreloadScannerEv = comdat any

$_ZThn80_N5blink18HTMLDocumentParser11InputStreamEv = comdat any

$_ZThn80_NK5blink18HTMLDocumentParser17HasPreloadScannerEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_22HTMLParserScriptRunnerEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_22HTMLParserScriptRunnerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_22HTMLParserScriptRunnerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_22HTMLParserScriptRunnerEE7GetNameEPKv = comdat any

$_ZN5blink14PreloadRequestD2Ev = comdat any

$_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink15AtomicHTMLToken20InitializeAttributesERKN3WTF6VectorINS_9HTMLToken9AttributeELj10ENS1_18PartitionAllocatorEEE = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZNK3WTF6VectorIN5blink16CompactHTMLToken9AttributeELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv = comdat any

$_ZN5blink18HTMLDocumentParser18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_23HTMLParserReentryPermitEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_23HTMLParserReentryPermitEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_23HTMLParserReentryPermitEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15HTMLTreeBuilderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15HTMLTreeBuilderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15HTMLTreeBuilderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15HTMLTreeBuilderEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19HTMLParserSchedulerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19HTMLParserSchedulerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19HTMLParserSchedulerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19HTMLParserSchedulerEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_23HTMLDocumentParserStateEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_23HTMLDocumentParserStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_23HTMLDocumentParserStateEE7GetNameEPKv = comdat any

$_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev = comdat any

$_ZN5blink16CompactHTMLTokenD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21HTMLResourcePreloaderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21HTMLResourcePreloaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_21HTMLResourcePreloaderEE7GetNameEPKv = comdat any

$_ZN5blink9HTMLTokenD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14PreloadRequestENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN5blink20BackgroundHTMLParser10CheckpointD2Ev = comdat any

$_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS4_10CheckpointENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_10CheckpointENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS4_10CheckpointENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_18HTMLDocumentParserEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNKSt3__114default_deleteIN5blink20BackgroundHTMLParser13ConfigurationEEclEPS3_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14DocumentParserEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14DocumentParserEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14DocumentParserEE7GetNameEPKv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS7_18PartitionAllocatorEEENS5_14default_deleteISA_EEEEEJNS_7WeakPtrIS4_EESD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS6_18PartitionAllocatorEEENS4_14default_deleteIS9_EEEEEJNS_7WeakPtrIS3_EESC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS7_18PartitionAllocatorEEENS5_14default_deleteISA_EEEEEJNS_7WeakPtrIS4_EESD_EEEEEbPKNS0_13BindStateBaseENSJ_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_19TextResourceDecoderENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS2_19TextResourceDecoderENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_19TextResourceDecoderENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE = comdat any

$_ZZN5blink11GCInfoTraitINS_22HTMLParserScriptRunnerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_22HTMLParserScriptRunnerEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_23HTMLParserReentryPermitEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_23HTMLParserReentryPermitEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15HTMLTreeBuilderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15HTMLTreeBuilderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_19HTMLParserSchedulerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19HTMLParserSchedulerEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_23HTMLDocumentParserStateEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_23HTMLDocumentParserStateEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21HTMLResourcePreloaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21HTMLResourcePreloaderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index = comdat any

@_ZN5blinkL35g_discarded_token_count_for_testingE = internal unnamed_addr global i64 0, align 8
@_ZTVN5blink18HTMLDocumentParserE = hidden unnamed_addr constant { [34 x i8*], [9 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::DocumentParser"*)* @_ZNK5blink14DocumentParser18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParserD2Ev to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParserD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)* @_ZNK5blink18HTMLDocumentParser5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::ScriptableDocumentParser"* (%"class.blink::ScriptableDocumentParser"*)* @_ZN5blink24ScriptableDocumentParser26AsScriptableDocumentParserEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser17HasInsertionPointEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)* @_ZN5blink18HTMLDocumentParser6insertERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, i8*, i64)* @_ZN5blink18HTMLDocumentParser11AppendBytesEPKcm to i8*), i8* bitcast (i1 (%"class.blink::DecodedDataDocumentParser"*)* @_ZNK5blink25DecodedDataDocumentParser12NeedsDecoderEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, %"class.blink::TextResourceDecoder"*)* @_ZN5blink18HTMLDocumentParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (%"class.blink::TextResourceDecoder"* (%"class.blink::DecodedDataDocumentParser"*)* @_ZN5blink25DecodedDataDocumentParser7DecoderEv to i8*), i8* bitcast (void (%"class.blink::DocumentParser"*)* @_ZN5blink14DocumentParser18SetHasAppendedDataEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)* @_ZN5blink18HTMLDocumentParser6AppendERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser6FinishEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser20PrepareToStopParsingEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser11StopParsingEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser6DetachEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser24DocumentElementAvailableEv to i8*), i8* bitcast (i1 (%"class.blink::DecodedDataDocumentParser"*)* @_ZNK5blink25DecodedDataDocumentParser10WellFormedEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser5FlushEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser17IsExecutingScriptEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser33ExecuteScriptsWaitingForResourcesEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser19IsWaitingForScriptsEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser37DidAddPendingParserBlockingStylesheetEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser42DidLoadAllPendingParserBlockingStylesheetsEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser21IsParsingAtLineNumberEv to i8*), i8* bitcast (i32 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser10LineNumberEv to i8*), i8* bitcast (i64 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser15GetTextPositionEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser18NotifyScriptLoadedEv to i8*), i8* bitcast (%"class.blink::HTMLInputStream"* (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser11InputStreamEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZNK5blink18HTMLDocumentParser17HasPreloadScannerEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser47AppendCurrentInputStreamToPreloadScannerAndScanEv to i8*)], [9 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink18HTMLDocumentParser5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZThn80_N5blink18HTMLDocumentParserD1Ev to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZThn80_N5blink18HTMLDocumentParserD0Ev to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZThn80_N5blink18HTMLDocumentParser18NotifyScriptLoadedEv to i8*), i8* bitcast (%"class.blink::HTMLInputStream"* (%"class.blink::HTMLDocumentParser"*)* @_ZThn80_N5blink18HTMLDocumentParser11InputStreamEv to i8*), i8* bitcast (i1 (%"class.blink::HTMLDocumentParser"*)* @_ZThn80_NK5blink18HTMLDocumentParser17HasPreloadScannerEv to i8*), i8* bitcast (void (%"class.blink::HTMLDocumentParser"*)* @_ZThn80_N5blink18HTMLDocumentParser47AppendCurrentInputStreamToPreloadScannerAndScanEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [41 x i8] c"HTMLDocumentParser::PrepareToStopParsing\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"parser\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"HTMLDocumentParser::DeferredPumpTokenizerIfPossible\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"state\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"HTMLDocumentParser::PumpTokenizerIfPossible\00", align 1
@.str.5 = private unnamed_addr constant [51 x i8] c"HTMLDocumentParser::RunScriptsForPausedTreeBuilder\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"HTMLDocumentParser::EnqueueTokenizedChunk\00", align 1
@_ZN5blink8features41kVerifyHTMLFetchedFromAppCacheBeforeDelayE = external global %"struct.base::Feature", align 8
@.str.7 = private unnamed_addr constant [33 x i8] c"DiscardSpeculationsAndResumeFrom\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/core/html/parser/html_document_parser.cc\00", align 1
@_ZZN5blink18HTMLDocumentParser41ProcessTokenizedChunkFromBackgroundParserENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEEPbE28trace_event_unique_atomic874 = internal global i64 0, align 8
@.str.9 = private unnamed_addr constant [14 x i8] c"blink,loading\00", align 1
@.str.10 = private unnamed_addr constant [62 x i8] c"HTMLDocumentParser::processTokenizedChunkFromBackgroundParser\00", align 1
@.str.11 = private unnamed_addr constant [42 x i8] c"ProcessTokenizedChunkFromBackgroundParser\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"HTMLDocumentParser::PumpTokenizer\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"should_complete\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"!IsStopped()\00", align 1
@.str.15 = private unnamed_addr constant [46 x i8] c"!should_run_until_completion || !should_yield\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"HTMLDocumentParser::SchedulePumpTokenizer\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"SchedulePumpTokenizer\00", align 1
@.str.18 = private unnamed_addr constant [41 x i8] c"HTMLDocumentParser::ScheduleEndIfDelayed\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"ScheduleEndIfDelayed\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"HTMLDocumentParser::insert\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"source_length\00", align 1
@_ZZN5blink18HTMLDocumentParser21StartBackgroundParserEvE29trace_event_unique_atomic1280 = internal global i64 0, align 8
@.str.22 = private unnamed_addr constant [42 x i8] c"HTMLDocumentParser::StartBackgroundParser\00", align 1
@.str.23 = private unnamed_addr constant [27 x i8] c"HTMLDocumentParser::append\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.25 = private unnamed_addr constant [33 x i8] c"HTMLDocumentParser::AttemptToEnd\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"HTMLDocumentParser::EndIfDelayed\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"Finish\00", align 1
@.str.28 = private unnamed_addr constant [44 x i8] c"HTMLDocumentParser::ResumeParsingAfterPause\00", align 1
@.str.29 = private unnamed_addr constant [68 x i8] c"HTMLDocumentParser::AppendCurrentInputStreamToPreloadScannerAndScan\00", align 1
@.str.30 = private unnamed_addr constant [39 x i8] c"HTMLDocumentParser::NotifyScriptLoaded\00", align 1
@.str.31 = private unnamed_addr constant [54 x i8] c"HTMLDocumentParser::ExecuteScriptsWaitingForResources\00", align 1
@.str.32 = private unnamed_addr constant [32 x i8] c"HTMLDocumentParser::appendBytes\00", align 1
@.str.33 = private unnamed_addr constant [12 x i8] c"AppendBytes\00", align 1
@.str.34 = private unnamed_addr constant [26 x i8] c"HTMLDocumentParser::Flush\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"Flush\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"SetDecoder\00", align 1
@_ZZN5blink18HTMLDocumentParser24DocumentElementAvailableEvE29trace_event_unique_atomic1788 = internal global i64 0, align 8
@.str.37 = private unnamed_addr constant [45 x i8] c"HTMLDocumentParser::DocumentElementAvailable\00", align 1
@.str.38 = private unnamed_addr constant [2 x i16] [i16 9889, i16 0], align 2
@.str.39 = private unnamed_addr constant [4 x i8] c"amp\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"i-amphtml-layout\00", align 1
@.str.41 = private unnamed_addr constant [35 x i8] c"HTMLDocumentParser::ScanAndPreload\00", align 1
@.str.42 = private unnamed_addr constant [50 x i8] c"HTMLDocumentParser::DispatchSignedExchangeManager\00", align 1
@.str.43 = private unnamed_addr constant [47 x i8] c"HTMLDocumentParser::DispatchLinkHeaderPreloads\00", align 1
@.str.44 = private unnamed_addr constant [40 x i8] c"HTMLDocumentParser::FetchQueuedPreloads\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22HTMLParserScriptRunnerEEEPKcv = private unnamed_addr constant [77 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLParserScriptRunner]\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.46 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_22HTMLParserScriptRunnerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_22HTMLParserScriptRunnerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_22HTMLParserScriptRunnerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_22HTMLParserScriptRunnerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_22HTMLParserScriptRunnerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink10html_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kXmpTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kIFrameTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kNoembedTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kNoscriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kNoframesTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names13kPlaintextTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blink12_GLOBAL__N_124GetMaxTokenizationBudgetEvE3max = internal unnamed_addr global i32 0, align 4
@_ZGVZN5blink12_GLOBAL__N_124GetMaxTokenizationBudgetEvE3max = internal global i64 0, align 8
@_ZN5blink8features28kForceSynchronousHTMLParsingE = external global %"struct.base::Feature", align 8
@.str.47 = private unnamed_addr constant [22 x i8] c"MaxTokenizationBudget\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"not_scheduled\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"scheduled\00", align 1
@.str.51 = private unnamed_addr constant [30 x i8] c"scheduled_with_end_if_delayed\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.52 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.53 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::Attribute]\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.55 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.57 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@_ZN5blinkL16kEndOfFileMarkerE = internal constant i8 0, align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"DocumentParser\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23HTMLParserReentryPermitEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLParserReentryPermit]\00", align 1
@_ZZN5blink11GCInfoTraitINS_23HTMLParserReentryPermitEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_23HTMLParserReentryPermitEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_23HTMLParserReentryPermitEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_23HTMLParserReentryPermitEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.59 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15HTMLTreeBuilderEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLTreeBuilder]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15HTMLTreeBuilderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15HTMLTreeBuilderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15HTMLTreeBuilderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15HTMLTreeBuilderEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15HTMLTreeBuilderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19HTMLParserSchedulerEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLParserScheduler]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19HTMLParserSchedulerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19HTMLParserSchedulerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19HTMLParserSchedulerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19HTMLParserSchedulerEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19HTMLParserSchedulerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23HTMLDocumentParserStateEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLDocumentParserState]\00", align 1
@_ZZN5blink11GCInfoTraitINS_23HTMLDocumentParserStateEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_23HTMLDocumentParserStateEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_23HTMLDocumentParserStateEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_23HTMLDocumentParserStateEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21HTMLResourcePreloaderEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HTMLResourcePreloader]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21HTMLResourcePreloaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21HTMLResourcePreloaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21HTMLResourcePreloaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21HTMLResourcePreloaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [141 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::PreloadRequest, std::__1::default_delete<blink::PreloadRequest> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [181 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::HTMLDocumentParser::TokenizedChunk, std::__1::default_delete<blink::HTMLDocumentParser::TokenizedChunk> >]\00", align 1
@.str.60 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.61 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.62 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.63 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14DocumentParserEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::DocumentParser]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14DocumentParserEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14DocumentParserEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIcLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [93 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<char, 0, WTF::PartitionAllocator>]\00", align 1
@switch.table._ZN5blink18HTMLDocumentParser31DeferredPumpTokenizerIfPossibleEv = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.51, i64 0, i64 0)], align 8

@_ZN5blink18HTMLDocumentParserC1ERNS_12HTMLDocumentENS_27ParserSynchronizationPolicyENS_20ParserPrefetchPolicyE = hidden unnamed_addr alias void (%"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocument"*, i32, i32), void (%"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocument"*, i32, i32)* @_ZN5blink18HTMLDocumentParserC2ERNS_12HTMLDocumentENS_27ParserSynchronizationPolicyENS_20ParserPrefetchPolicyE
@_ZN5blink18HTMLDocumentParserC1EPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyENS_20ParserPrefetchPolicyE = hidden unnamed_addr alias void (%"class.blink::HTMLDocumentParser"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32, i32), void (%"class.blink::HTMLDocumentParser"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32, i32)* @_ZN5blink18HTMLDocumentParserC2EPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyENS_20ParserPrefetchPolicyE
@_ZN5blink18HTMLDocumentParserC1ERNS_8DocumentENS_19ParserContentPolicyENS_27ParserSynchronizationPolicyENS_20ParserPrefetchPolicyE = hidden unnamed_addr alias void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Document"*, i32, i32, i32), void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Document"*, i32, i32, i32)* @_ZN5blink18HTMLDocumentParserC2ERNS_8DocumentENS_19ParserContentPolicyENS_27ParserSynchronizationPolicyENS_20ParserPrefetchPolicyE
@_ZN5blink18HTMLDocumentParserD1Ev = hidden unnamed_addr alias void (%"class.blink::HTMLDocumentParser"*), void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParserD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink34ResetDiscardedTokenCountForTestingEv() local_unnamed_addr #0 {
  store i64 0, i64* @_ZN5blinkL35g_discarded_token_count_for_testingE, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink32GetDiscardedTokenCountForTestingEv() local_unnamed_addr #1 {
  %1 = load i64, i64* @_ZN5blinkL35g_discarded_token_count_for_testingE, align 8
  ret i64 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParserC2ERNS_12HTMLDocumentENS_27ParserSynchronizationPolicyENS_20ParserPrefetchPolicyE(%"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocument"* dereferenceable(2872), i32, i32) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.blink::HTMLDocument", %"class.blink::HTMLDocument"* %1, i64 0, i32 0
  tail call void @_ZN5blink18HTMLDocumentParserC2ERNS_8DocumentENS_19ParserContentPolicyENS_27ParserSynchronizationPolicyENS_20ParserPrefetchPolicyE(%"class.blink::HTMLDocumentParser"* %0, %"class.blink::Document"* dereferenceable(2848) %5, i32 1, i32 %2, i32 %3)
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %7 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 1
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_22HTMLParserScriptRunnerEEEPhm(i64 72) #16
  %10 = bitcast i8* %9 to %"class.blink::HTMLParserScriptRunner"*
  tail call void @_ZN5blink22HTMLParserScriptRunnerC1EPNS_23HTMLParserReentryPermitEPNS_8DocumentEPNS_26HTMLParserScriptRunnerHostE(%"class.blink::HTMLParserScriptRunner"* %10, %"class.blink::HTMLParserReentryPermit"* %7, %"class.blink::Document"* %5, %"class.blink::HTMLParserScriptRunnerHost"* %8) #16
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  %15 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8
  %16 = ptrtoint i8* %9 to i64
  %17 = bitcast %"class.blink::Member.74"* %15 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %4
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #16
  br label %22

22:                                               ; preds = %4, %20
  %23 = tail call zeroext i8 @_ZNK5blink8Document34GetDeclarativeShadowRootAllowStateEv(%"class.blink::Document"* %5) #16
  %24 = icmp ne i8 %23, 2
  %25 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 3
  %26 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15HTMLTreeBuilderEEEPhm(i64 368) #16
  %27 = bitcast i8* %26 to %"class.blink::HTMLTreeBuilder"*
  tail call void @_ZN5blink15HTMLTreeBuilderC1EPNS_18HTMLDocumentParserERNS_8DocumentENS_19ParserContentPolicyERKNS_17HTMLParserOptionsEb(%"class.blink::HTMLTreeBuilder"* %27, %"class.blink::HTMLDocumentParser"* %0, %"class.blink::Document"* dereferenceable(2848) %5, i32 1, %"class.blink::HTMLParserOptions"* dereferenceable(2) %25, i1 zeroext %24) #16
  %28 = getelementptr inbounds i8, i8* %26, i64 -4
  %29 = bitcast i8* %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = or i16 %30, 1
  store atomic i16 %31, i16* %29 release, align 2
  %32 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9
  %33 = ptrtoint i8* %26 to i64
  %34 = bitcast %"class.blink::Member.97"* %32 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %22
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #16
  br label %39

39:                                               ; preds = %22, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParserC2ERNS_8DocumentENS_19ParserContentPolicyENS_27ParserSynchronizationPolicyENS_20ParserPrefetchPolicyE(%"class.blink::HTMLDocumentParser"*, %"class.blink::Document"* dereferenceable(2848), i32, i32, i32) unnamed_addr #2 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ScriptableDocumentParserC2ERNS_8DocumentENS_19ParserContentPolicyE(%"class.blink::ScriptableDocumentParser"* %7, %"class.blink::Document"* dereferenceable(2848) %1, i32 %2) #16
  %8 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [9 x i8*] }, { [34 x i8*], [9 x i8*] }* @_ZTVN5blink18HTMLDocumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [9 x i8*] }, { [34 x i8*], [9 x i8*] }* @_ZTVN5blink18HTMLDocumentParserE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 2
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_18HTMLDocumentParserEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"* %10, %"class.blink::HTMLDocumentParser"* %0)
  %11 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 3
  tail call void @_ZN5blink17HTMLParserOptionsC1EPNS_8DocumentE(%"class.blink::HTMLParserOptions"* %11, %"class.blink::Document"* %1) #16
  %12 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 3
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 4
  %16 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  store i8 1, i8* %15, align 1
  %17 = bitcast %"class.blink::HTMLInputStream"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #16
  %18 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 1
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 2
  store i32 0, i32* %19, align 4
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 3
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 5
  %22 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 7
  %23 = bitcast %"class.WTF::Deque"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 25, i1 false) #16
  store i8 1, i8* %22, align 1
  %24 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 1
  store %"class.blink::SegmentedString"* %13, %"class.blink::SegmentedString"** %24, align 8
  %25 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_23HTMLParserReentryPermitEEEPhm(i64 8) #16
  %26 = bitcast i8* %25 to %"class.blink::HTMLParserReentryPermit"*
  tail call void @_ZN5blink23HTMLParserReentryPermitC1Ev(%"class.blink::HTMLParserReentryPermit"* %26) #16
  %27 = getelementptr inbounds i8, i8* %25, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  %31 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %32 = bitcast %"class.blink::HTMLParserReentryPermit"** %31 to i8**
  store i8* %25, i8** %32, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 6
  %34 = icmp eq i32 %3, 0
  br i1 %34, label %74, label %35

35:                                               ; preds = %5
  %36 = tail call noalias i8* @malloc(i64 2512) #16
  %37 = getelementptr inbounds i8, i8* %36, i64 16
  %38 = getelementptr inbounds i8, i8* %36, i64 40
  %39 = bitcast i8* %37 to i8**
  store i8* %38, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %36, i64 24
  %41 = getelementptr inbounds i8, i8* %36, i64 32
  %42 = getelementptr inbounds i8, i8* %36, i64 552
  %43 = bitcast i8* %41 to i8**
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %36, i64 560
  %45 = getelementptr inbounds i8, i8* %36, i64 576
  %46 = bitcast i8* %44 to i8**
  store i8* %45, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %36, i64 568
  %48 = bitcast i8* %47 to i32*
  store i32 10, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %36, i64 572
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %36, i64 2504
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = bitcast i8* %36 to i32*
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %36, i64 4
  %55 = bitcast i8* %54 to i32*
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %36, i64 12
  %57 = bitcast i8* %56 to i32*
  store i32 0, i32* %57, align 4
  %58 = ptrtoint i8* %38 to i64
  %59 = bitcast i8* %40 to i64*
  store i64 %58, i64* %59, align 8
  %60 = bitcast i8* %42 to i16*
  store i16 0, i16* %60, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.44"* %33 to i8**
  store i8* %36, i8** %61, align 8
  %62 = tail call noalias i8* @malloc(i64 248) #16
  %63 = bitcast i8* %62 to %"class.blink::HTMLTokenizer"*
  tail call void @_ZN5blink13HTMLTokenizerC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTokenizer"* %63, %"class.blink::HTMLParserOptions"* dereferenceable(2) %11) #16
  %64 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %65 = bitcast %"class.blink::HTMLTokenizer"** %64 to i8**
  store i8* %62, i8** %65, align 8
  %66 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %67 = icmp eq i32 %3, 2
  %68 = bitcast %"class.blink::HTMLParserScriptRunner"** %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false)
  br i1 %67, label %69, label %71

69:                                               ; preds = %35
  %70 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %70, align 8
  br label %92

71:                                               ; preds = %35
  %72 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %1, i8 zeroext 3) #16
  %73 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  store %"class.base::SingleThreadTaskRunner"* %72, %"class.base::SingleThreadTaskRunner"** %73, align 8
  br label %92

74:                                               ; preds = %5
  %75 = bitcast %"class.std::__1::unique_ptr.44"* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false)
  %76 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %77 = bitcast %"class.blink::HTMLParserScriptRunner"** %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 32, i1 false)
  %78 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %1, i8 zeroext 3) #16
  %79 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  store %"class.base::SingleThreadTaskRunner"* %78, %"class.base::SingleThreadTaskRunner"** %79, align 8
  %80 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_19HTMLParserSchedulerEEEPhm(i64 24) #16
  %81 = bitcast i8* %80 to %"class.blink::HTMLParserScheduler"*
  %82 = icmp eq %"class.base::SingleThreadTaskRunner"* %78, null
  br i1 %82, label %86, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %78, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 1 monotonic
  br label %86

86:                                               ; preds = %74, %83
  %87 = phi %"class.base::SingleThreadTaskRunner"* [ null, %74 ], [ %78, %83 ]
  tail call void @_ZN5blink19HTMLParserSchedulerC1EPNS_18HTMLDocumentParserE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::HTMLParserScheduler"* %81, %"class.blink::HTMLDocumentParser"* %0, %"class.base::SingleThreadTaskRunner"* %87) #16
  %88 = getelementptr inbounds i8, i8* %80, i64 -4
  %89 = bitcast i8* %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = or i16 %90, 1
  store atomic i16 %91, i16* %89 release, align 2
  br label %92

92:                                               ; preds = %71, %69, %86
  %93 = phi %"class.blink::HTMLParserScheduler"* [ %81, %86 ], [ null, %71 ], [ null, %69 ]
  %94 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 13, i32 0, i32 0
  store %"class.blink::HTMLParserScheduler"* %93, %"class.blink::HTMLParserScheduler"** %94, align 8
  %95 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 14
  %96 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0
  %97 = bitcast %"class.WTF::TextPosition"* %95 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 40, i1 false)
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %96) #16
  %98 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 18
  %99 = getelementptr inbounds %"class.blink::Member.470", %"class.blink::Member.470"* %98, i64 0, i32 0, i32 0
  store %"class.blink::HTMLResourcePreloader"* null, %"class.blink::HTMLResourcePreloader"** %99, align 8
  %100 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_23HTMLDocumentParserStateEEEPhm(i64 28) #16
  %101 = bitcast i8* %100 to i32*
  store i32 0, i32* %101, align 4
  %102 = getelementptr inbounds i8, i8* %100, i64 4
  %103 = bitcast i8* %102 to i32*
  store i32 1, i32* %103, align 4
  %104 = getelementptr inbounds i8, i8* %100, i64 8
  %105 = bitcast i8* %104 to i32*
  store i32 %3, i32* %105, align 4
  %106 = getelementptr inbounds i8, i8* %100, i64 12
  %107 = bitcast i8* %106 to i32*
  store i32 0, i32* %107, align 4
  %108 = getelementptr inbounds i8, i8* %100, i64 16
  %109 = bitcast i8* %108 to i32*
  store i32 0, i32* %109, align 4
  %110 = getelementptr inbounds i8, i8* %100, i64 20
  %111 = bitcast i8* %110 to i32*
  store i32 0, i32* %111, align 4
  %112 = getelementptr inbounds i8, i8* %100, i64 24
  store i8 1, i8* %112, align 4
  %113 = getelementptr inbounds i8, i8* %100, i64 25
  store i8 0, i8* %113, align 1
  %114 = getelementptr inbounds i8, i8* %100, i64 -4
  %115 = bitcast i8* %114 to i16*
  %116 = load atomic i16, i16* %115 monotonic, align 2
  %117 = or i16 %116, 1
  store atomic i16 %117, i16* %115 release, align 2
  %118 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %119 = bitcast %"class.blink::HTMLDocumentParserState"** %118 to i8**
  store i8* %100, i8** %119, align 8
  %120 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20
  %121 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 21
  %122 = bitcast %"class.std::__1::unique_ptr.478"* %121 to i64*
  %123 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 25
  %124 = zext i1 %34 to i8
  %125 = bitcast %"class.WTF::Vector.183"* %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 40, i1 false)
  store i8 %124, i8* %123, align 4
  %126 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 26
  store i8 0, i8* %126, align 1
  %127 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  store i8 0, i8* %127, align 2
  %128 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 28
  %129 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 34
  %130 = icmp eq i32 %3, 1
  %131 = bitcast i32* %128 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 12, i1 false)
  br i1 %130, label %132, label %139

132:                                              ; preds = %92
  %133 = tail call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #16
  %134 = bitcast %"class.blink::Thread"* %133 to %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)***
  %135 = load %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)**, %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)*** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)*, %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)** %135, i64 6
  %137 = load %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)*, %"class.blink::ThreadScheduler"* (%"class.blink::Thread"*)** %136, align 8
  %138 = tail call %"class.blink::ThreadScheduler"* %137(%"class.blink::Thread"* %133) #16
  store %"class.blink::ThreadScheduler"* %138, %"class.blink::ThreadScheduler"** %129, align 8
  br label %140

139:                                              ; preds = %92
  store %"class.blink::ThreadScheduler"* null, %"class.blink::ThreadScheduler"** %129, align 8
  br i1 %34, label %140, label %160

140:                                              ; preds = %132, %139
  %141 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #16
  %142 = icmp eq %"class.blink::LocalFrame"* %141, null
  br i1 %142, label %160, label %143

143:                                              ; preds = %140
  %144 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #16
  %145 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %144, i64 0, i32 0
  %146 = tail call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %145) #16
  br i1 %146, label %147, label %160

147:                                              ; preds = %143
  %148 = tail call zeroext i1 @_ZN4base9TimeTicks16IsHighResolutionEv() #16
  br i1 %148, label %149, label %160

149:                                              ; preds = %147
  %150 = tail call i64 @_ZNK5blink8Document11UkmSourceIDEv(%"class.blink::Document"* %1) #16
  %151 = tail call %"class.ukm::UkmRecorder"* @_ZN5blink8Document11UkmRecorderEv(%"class.blink::Document"* %1) #16
  %152 = tail call i8* @_Znwm(i64 96) #17
  %153 = bitcast i8* %152 to %"class.blink::HTMLParserMetrics"*
  tail call void @_ZN5blink17HTMLParserMetricsC1ElPN3ukm11UkmRecorderE(%"class.blink::HTMLParserMetrics"* nonnull %153, i64 %150, %"class.ukm::UkmRecorder"* %151) #16
  %154 = ptrtoint i8* %152 to i64
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.478"* %121, i64 0, i32 0, i32 0, i32 0
  %156 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %155, align 8
  store i64 %154, i64* %122, align 8
  %157 = icmp eq %"class.blink::HTMLParserMetrics"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %149
  %159 = bitcast %"class.blink::HTMLParserMetrics"* %156 to i8*
  tail call void @_ZdlPv(i8* %159) #17
  br label %160

160:                                              ; preds = %149, %158, %140, %139, %147, %143
  %161 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_124GetMaxTokenizationBudgetEvE3max to i8*) acquire, align 8
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %178, !prof !2

163:                                              ; preds = %160
  %164 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_124GetMaxTokenizationBudgetEvE3max) #16
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %178, label %166

166:                                              ; preds = %163
  %167 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #16
  %168 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %168, i64 0, i32 1, i32 0
  store i8 21, i8* %169, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0), i64 21, i1 false) #16
  %170 = getelementptr inbounds i8, i8* %167, i64 21
  store i8 0, i8* %170, align 1
  %171 = call i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features28kForceSynchronousHTMLParsingE, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 250) #16
  %172 = load i8, i8* %169, align 1
  %173 = icmp slt i8 %172, 0
  br i1 %173, label %174, label %177

174:                                              ; preds = %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  call void @_ZdlPv(i8* %176) #17
  br label %177

177:                                              ; preds = %174, %166
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #16
  store i32 %171, i32* @_ZZN5blink12_GLOBAL__N_124GetMaxTokenizationBudgetEvE3max, align 4
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_124GetMaxTokenizationBudgetEvE3max) #16
  br label %178

178:                                              ; preds = %160, %163, %177
  %179 = load i32, i32* @_ZZN5blink12_GLOBAL__N_124GetMaxTokenizationBudgetEvE3max, align 4
  %180 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 24
  store i32 %179, i32* %180, align 8
  %181 = icmp eq i32 %2, 0
  br i1 %181, label %204, label %182

182:                                              ; preds = %178
  %183 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #16
  %184 = icmp eq %"class.blink::LocalFrame"* %183, null
  br i1 %184, label %185, label %189

185:                                              ; preds = %182
  %186 = call zeroext i1 @_ZNK5blink8Document14IsPrefetchOnlyEv(%"class.blink::Document"* %1) #16
  %187 = icmp eq i32 %4, 0
  %188 = and i1 %187, %186
  br i1 %188, label %191, label %204

189:                                              ; preds = %182
  %190 = icmp eq i32 %4, 0
  br i1 %190, label %191, label %204

191:                                              ; preds = %185, %189
  %192 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLResourcePreloaderEEEPhm(i64 16) #16
  %193 = bitcast i8* %192 to %"class.blink::HTMLResourcePreloader"*
  call void @_ZN5blink21HTMLResourcePreloaderC1ERNS_8DocumentE(%"class.blink::HTMLResourcePreloader"* %193, %"class.blink::Document"* dereferenceable(2848) %1) #16
  %194 = getelementptr inbounds i8, i8* %192, i64 -4
  %195 = bitcast i8* %194 to i16*
  %196 = load atomic i16, i16* %195 monotonic, align 2
  %197 = or i16 %196, 1
  store atomic i16 %197, i16* %195 release, align 2
  %198 = ptrtoint i8* %192 to i64
  %199 = bitcast %"class.blink::Member.470"* %98 to i64*
  store atomic i64 %198, i64* %199 monotonic, align 8
  %200 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %191
  %203 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %192) #16
  br label %204

204:                                              ; preds = %202, %191, %185, %178, %189
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i8 @_ZNK5blink8Document34GetDeclarativeShadowRootAllowStateEv(%"class.blink::Document"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParserC2EPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyENS_20ParserPrefetchPolicyE(%"class.blink::HTMLDocumentParser"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32, i32) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  tail call void @_ZN5blink18HTMLDocumentParserC2ERNS_8DocumentENS_19ParserContentPolicyENS_27ParserSynchronizationPolicyENS_20ParserPrefetchPolicyE(%"class.blink::HTMLDocumentParser"* %0, %"class.blink::Document"* dereferenceable(2848) %9, i32 %3, i32 2, i32 %4)
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = tail call zeroext i8 @_ZNK5blink8Document34GetDeclarativeShadowRootAllowStateEv(%"class.blink::Document"* %12) #16
  %14 = icmp eq i8 %13, 1
  %15 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 3
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15HTMLTreeBuilderEEEPhm(i64 368) #16
  %17 = bitcast i8* %16 to %"class.blink::HTMLTreeBuilder"*
  tail call void @_ZN5blink15HTMLTreeBuilderC1EPNS_18HTMLDocumentParserEPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyERKNS_17HTMLParserOptionsEb(%"class.blink::HTMLTreeBuilder"* %17, %"class.blink::HTMLDocumentParser"* %0, %"class.blink::DocumentFragment"* %1, %"class.blink::Element"* %2, i32 %3, %"class.blink::HTMLParserOptions"* dereferenceable(2) %15, i1 zeroext %14) #16
  %18 = getelementptr inbounds i8, i8* %16, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9
  %23 = ptrtoint i8* %16 to i64
  %24 = bitcast %"class.blink::Member.97"* %22 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %5
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #16
  br label %29

29:                                               ; preds = %5, %27
  %30 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %31 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %30, align 8
  %32 = icmp eq %"class.blink::Element"* %2, null
  br i1 %32, label %192, label %33

33:                                               ; preds = %29
  %34 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTitleTagE to %"class.blink::QualifiedName"**), align 8
  %35 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %34, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %38
  br i1 %39, label %192, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %42, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %48, %50
  br i1 %51, label %192, label %52

52:                                               ; preds = %46, %40
  %53 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE to %"class.blink::QualifiedName"**), align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %55
  br i1 %56, label %192, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %42, %59
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 4, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %63, %65
  br i1 %66, label %192, label %67

67:                                               ; preds = %61, %57
  %68 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE to %"class.blink::QualifiedName"**), align 8
  %69 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8
  %71 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %70
  br i1 %71, label %192, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %42, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 4, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %78, %80
  br i1 %81, label %192, label %82

82:                                               ; preds = %76, %72
  %83 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kXmpTagE to %"class.blink::QualifiedName"**), align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %84, align 8
  %86 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %85
  br i1 %86, label %192, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %42, %89
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %85, i64 0, i32 4, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %93, %95
  br i1 %96, label %192, label %97

97:                                               ; preds = %91, %87
  %98 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kIFrameTagE to %"class.blink::QualifiedName"**), align 8
  %99 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %99, align 8
  %101 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %100
  br i1 %101, label %192, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %100, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %42, %104
  br i1 %105, label %106, label %112

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %100, i64 0, i32 4, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %108, %110
  br i1 %111, label %192, label %112

112:                                              ; preds = %106, %102
  %113 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kNoembedTagE to %"class.blink::QualifiedName"**), align 8
  %114 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %113, i64 0, i32 0, i32 0
  %115 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %114, align 8
  %116 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %115
  br i1 %116, label %192, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 3, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %42, %119
  br i1 %120, label %121, label %127

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %115, i64 0, i32 4, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %123, %125
  br i1 %126, label %192, label %127

127:                                              ; preds = %121, %117
  %128 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoscriptTagE to %"class.blink::QualifiedName"**), align 8
  %129 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %129, align 8
  %131 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %130
  br i1 %131, label %142, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 3, i32 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %42, %134
  br i1 %135, label %136, label %146

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %130, i64 0, i32 4, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %138, %140
  br i1 %141, label %142, label %146

142:                                              ; preds = %136, %127
  %143 = getelementptr inbounds %"class.blink::HTMLParserOptions", %"class.blink::HTMLParserOptions"* %15, i64 0, i32 0
  %144 = load i8, i8* %143, align 1, !range !3
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %192

146:                                              ; preds = %142, %136, %132
  %147 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kNoframesTagE to %"class.blink::QualifiedName"**), align 8
  %148 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %147, i64 0, i32 0, i32 0
  %149 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %148, align 8
  %150 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %149
  br i1 %150, label %192, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %149, i64 0, i32 3, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %42, %153
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %149, i64 0, i32 4, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %157, %159
  br i1 %160, label %192, label %161

161:                                              ; preds = %155, %151
  %162 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %162, i64 0, i32 0, i32 0
  %164 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %163, align 8
  %165 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %164
  br i1 %165, label %192, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 3, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %42, %168
  br i1 %169, label %170, label %176

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %164, i64 0, i32 4, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %172, %174
  br i1 %175, label %192, label %176

176:                                              ; preds = %170, %166
  %177 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names13kPlaintextTagE to %"class.blink::QualifiedName"**), align 8
  %178 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %177, i64 0, i32 0, i32 0
  %179 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %178, align 8
  %180 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %36, %179
  br i1 %180, label %191, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %179, i64 0, i32 3, i32 0, i32 0, i32 0
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %182, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %42, %183
  br i1 %184, label %185, label %192

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 4, i32 0, i32 0, i32 0
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %179, i64 0, i32 4, i32 0, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %187, %189
  br i1 %190, label %191, label %192

191:                                              ; preds = %185, %176
  br label %192

192:                                              ; preds = %29, %33, %46, %52, %61, %67, %76, %82, %91, %97, %106, %112, %121, %142, %146, %155, %161, %170, %181, %185, %191
  %193 = phi i32 [ 0, %29 ], [ 2, %61 ], [ 2, %46 ], [ 6, %142 ], [ 6, %155 ], [ 6, %121 ], [ 6, %106 ], [ 6, %91 ], [ 6, %76 ], [ 6, %170 ], [ 6, %191 ], [ 0, %185 ], [ 2, %33 ], [ 2, %52 ], [ 6, %67 ], [ 6, %82 ], [ 6, %97 ], [ 6, %112 ], [ 6, %146 ], [ 6, %161 ], [ 0, %181 ]
  %194 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %31, i64 0, i32 0
  store i32 %193, i32* %194, align 8
  ret void
}

declare void @_ZN5blink24ScriptableDocumentParserC2ERNS_8DocumentENS_19ParserContentPolicyE(%"class.blink::ScriptableDocumentParser"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_18HTMLDocumentParserEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"*, %"class.blink::HTMLDocumentParser"*) unnamed_addr #2 comdat align 2 {
  %3 = ptrtoint %"class.blink::HTMLDocumentParser"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #16
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !4

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #16
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.351"* %14) #16
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque.351", %"class.WTF::Deque.351"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.356"*, %"struct.std::__1::pair.356"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair.356", %"struct.std::__1::pair.356"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair.356"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.356", %"struct.std::__1::pair.356"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink18HTMLDocumentParser18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

declare void @_ZN5blink17HTMLParserOptionsC1EPNS_8DocumentE(%"class.blink::HTMLParserOptions"*, %"class.blink::Document"*) unnamed_addr #4

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #4

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #4

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #4

declare zeroext i1 @_ZN4base9TimeTicks16IsHighResolutionEv() local_unnamed_addr #4

declare i64 @_ZNK5blink8Document11UkmSourceIDEv(%"class.blink::Document"*) local_unnamed_addr #4

declare %"class.ukm::UkmRecorder"* @_ZN5blink8Document11UkmRecorderEv(%"class.blink::Document"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink8Document14IsPrefetchOnlyEv(%"class.blink::Document"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParserD2Ev(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [9 x i8*] }, { [34 x i8*], [9 x i8*] }* @_ZTVN5blink18HTMLDocumentParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*], [9 x i8*] }, { [34 x i8*], [9 x i8*] }* @_ZTVN5blink18HTMLDocumentParserE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %5 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %4, align 8
  store %"class.base::ElapsedTimer"* null, %"class.base::ElapsedTimer"** %4, align 8
  %6 = icmp eq %"class.base::ElapsedTimer"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.base::ElapsedTimer"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #17
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %11 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %10, align 8
  store %"class.blink::HTMLParserMetrics"* null, %"class.blink::HTMLParserMetrics"** %10, align 8
  %12 = icmp eq %"class.blink::HTMLParserMetrics"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::HTMLParserMetrics"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #17
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20
  %17 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.186"* %18, null
  br i1 %19, label %43, label %20, !prof !5

20:                                               ; preds = %15
  %21 = bitcast %"class.std::__1::unique_ptr.186"* %18 to i8*
  %22 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %41, label %25, !prof !4

25:                                               ; preds = %20
  %26 = zext i32 %23 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %18, i64 %26
  br label %28

28:                                               ; preds = %35, %25
  %29 = phi %"class.std::__1::unique_ptr.186"* [ %36, %35 ], [ %18, %25 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::PreloadRequest"*, %"class.blink::PreloadRequest"** %30, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %30, align 8
  %32 = icmp eq %"class.blink::PreloadRequest"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  tail call void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"* nonnull %31) #16
  %34 = bitcast %"class.blink::PreloadRequest"* %31 to i8*
  tail call void @free(i8* %34) #16
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %29, i64 1
  %37 = icmp eq %"class.std::__1::unique_ptr.186"* %36, %27
  br i1 %37, label %38, label %28

38:                                               ; preds = %35
  store i32 0, i32* %22, align 4
  %39 = bitcast %"class.WTF::Vector.183"* %16 to i8**
  %40 = load i8*, i8** %39, align 8
  br label %41

41:                                               ; preds = %38, %20
  %42 = phi i8* [ %40, %38 ], [ %21, %20 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #16
  store %"class.std::__1::unique_ptr.186"* null, %"class.std::__1::unique_ptr.186"** %17, align 8
  br label %43

43:                                               ; preds = %15, %41
  %44 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %44) #16
  %45 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16
  %46 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"** %46, align 8
  %48 = icmp eq %"class.std::__1::unique_ptr.431"* %47, null
  br i1 %48, label %61, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.std::__1::unique_ptr.431"* %47 to i8*
  %51 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %49
  tail call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.458"* %45) #16
  %57 = bitcast %"class.WTF::Deque.458"* %45 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %49
  %60 = phi i8* [ %58, %56 ], [ %50, %49 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #16
  store %"class.std::__1::unique_ptr.431"* null, %"class.std::__1::unique_ptr.431"** %46, align 8
  br label %61

61:                                               ; preds = %43, %59
  %62 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %63 = load %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %62, align 8
  store %"struct.blink::HTMLDocumentParser::TokenizedChunk"* null, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %62, align 8
  %64 = icmp eq %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  tail call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %63) #16
  %66 = bitcast %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %63 to i8*
  tail call void @free(i8* %66) #16
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  %69 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %68, align 8
  %70 = icmp eq %"class.base::SingleThreadTaskRunner"* %69, null
  br i1 %70, label %79, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %69, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %72, i64 -2
  %78 = bitcast %"class.base::RefCountedThreadSafe"* %77 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %78) #16
  br label %79

79:                                               ; preds = %67, %71, %76
  %80 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %81 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %80, align 8
  store %"class.blink::HTMLPreloadScanner"* null, %"class.blink::HTMLPreloadScanner"** %80, align 8
  %82 = icmp eq %"class.blink::HTMLPreloadScanner"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  tail call void @_ZN5blink18HTMLPreloadScannerD1Ev(%"class.blink::HTMLPreloadScanner"* nonnull %81) #16
  %84 = bitcast %"class.blink::HTMLPreloadScanner"* %81 to i8*
  tail call void @free(i8* %84) #16
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %87 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %86, align 8
  store %"class.blink::HTMLPreloadScanner"* null, %"class.blink::HTMLPreloadScanner"** %86, align 8
  %88 = icmp eq %"class.blink::HTMLPreloadScanner"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  tail call void @_ZN5blink18HTMLPreloadScannerD1Ev(%"class.blink::HTMLPreloadScanner"* nonnull %87) #16
  %90 = bitcast %"class.blink::HTMLPreloadScanner"* %87 to i8*
  tail call void @free(i8* %90) #16
  br label %91

91:                                               ; preds = %85, %89
  %92 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %93 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %92, align 8
  store %"class.blink::HTMLTokenizer"* null, %"class.blink::HTMLTokenizer"** %92, align 8
  %94 = icmp eq %"class.blink::HTMLTokenizer"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  tail call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %93) #16
  %96 = bitcast %"class.blink::HTMLTokenizer"* %93 to i8*
  tail call void @free(i8* %96) #16
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %99 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %98, align 8
  store %"class.blink::HTMLToken"* null, %"class.blink::HTMLToken"** %98, align 8
  %100 = icmp eq %"class.blink::HTMLToken"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  tail call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %99) #16
  %102 = bitcast %"class.blink::HTMLToken"* %99 to i8*
  tail call void @free(i8* %102) #16
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 5
  %105 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %105, align 8
  %107 = icmp eq %"class.blink::SegmentedSubstring"* %106, null
  br i1 %107, label %120, label %108

108:                                              ; preds = %103
  %109 = bitcast %"class.blink::SegmentedSubstring"* %106 to i8*
  %110 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 5, i32 1
  %111 = load i32, i32* %110, align 8
  %112 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 5, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %111, %113
  br i1 %114, label %118, label %115

115:                                              ; preds = %108
  tail call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %104) #16
  %116 = bitcast %"class.WTF::Deque"* %104 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %108
  %119 = phi i8* [ %117, %115 ], [ %109, %108 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %119) #16
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %105, align 8
  br label %120

120:                                              ; preds = %118, %103
  %121 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 0, i32 5, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #16
  br label %137

137:                                              ; preds = %120, %133, %136
  %138 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink25DecodedDataDocumentParserD2Ev(%"class.blink::DecodedDataDocumentParser"* %138) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink25DecodedDataDocumentParserD2Ev(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink18HTMLDocumentParserD1Ev(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 -1, i32 19
  %3 = bitcast %"class.blink::Member.474"* %2 to %"class.blink::HTMLDocumentParser"*
  tail call void @_ZN5blink18HTMLDocumentParserD2Ev(%"class.blink::HTMLDocumentParser"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParserD0Ev(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  tail call void @_ZN5blink18HTMLDocumentParserD2Ev(%"class.blink::HTMLDocumentParser"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink18HTMLDocumentParserD0Ev(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 -1, i32 19
  %3 = bitcast %"class.blink::Member.474"* %2 to %"class.blink::HTMLDocumentParser"*
  tail call void @_ZN5blink18HTMLDocumentParserD2Ev(%"class.blink::HTMLDocumentParser"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser7DisposeEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  store i8 0, i8* %3, align 2
  %7 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  br label %12

12:                                               ; preds = %9, %6
  %13 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  br i1 %13, label %14, label %18

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %16 = bitcast i64* %15 to %"class.blink::BackgroundHTMLParser"**
  %17 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %16, align 8
  br label %18

18:                                               ; preds = %12, %14
  %19 = phi %"class.blink::BackgroundHTMLParser"* [ %17, %14 ], [ null, %12 ]
  call void @_ZN5blink20BackgroundHTMLParser4StopEv(%"class.blink::BackgroundHTMLParser"* %19) #16
  br label %20

20:                                               ; preds = %1, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser20StopBackgroundParserEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  store i8 0, i8* %3, align 2
  %4 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #16
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  br label %9

9:                                                ; preds = %6, %1
  %10 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #16
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %13 = bitcast i64* %12 to %"class.blink::BackgroundHTMLParser"**
  %14 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %13, align 8
  br label %15

15:                                               ; preds = %9, %11
  %16 = phi %"class.blink::BackgroundHTMLParser"* [ %14, %11 ], [ null, %9 ]
  call void @_ZN5blink20BackgroundHTMLParser4StopEv(%"class.blink::BackgroundHTMLParser"* %16) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18HTMLDocumentParser5TraceEPNS_7VisitorE(%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5
  %4 = bitcast %"class.blink::Member.40"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23HTMLParserReentryPermitEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9
  %15 = bitcast %"class.blink::Member.97"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to %"class.blink::HTMLTreeBuilder"*
  %20 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %19, i64 0, i32 0
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* %20, i8* %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLTreeBuilderEE5TraceEPNS_7VisitorEPKv) #16
  br label %25

25:                                               ; preds = %13, %18
  %26 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 13
  %27 = bitcast %"class.blink::Member.426"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19HTMLParserSchedulerEE5TraceEPNS_7VisitorEPKv) #16
  br label %36

36:                                               ; preds = %25, %30
  %37 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8
  %38 = bitcast %"class.blink::Member.74"* %37 to i64*
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = inttoptr i64 %39 to i8*
  %43 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %1, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22HTMLParserScriptRunnerEE5TraceEPNS_7VisitorEPKv) #16
  br label %47

47:                                               ; preds = %36, %41
  %48 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 18
  %49 = bitcast %"class.blink::Member.470"* %48 to i64*
  %50 = load atomic i64, i64* %49 monotonic, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %58, label %52

52:                                               ; preds = %47
  %53 = inttoptr i64 %50 to i8*
  %54 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %55 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, i64 5
  %57 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %56, align 8
  tail call void %57(%"class.blink::Visitor"* %1, i8* nonnull %53, i8* nonnull %53, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21HTMLResourcePreloaderEE5TraceEPNS_7VisitorEPKv) #16
  br label %58

58:                                               ; preds = %47, %52
  %59 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19
  %60 = bitcast %"class.blink::Member.474"* %59 to i64*
  %61 = load atomic i64, i64* %60 monotonic, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %58
  %64 = inttoptr i64 %61 to i8*
  %65 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %66 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, i64 5
  %68 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, align 8
  tail call void %68(%"class.blink::Visitor"* %1, i8* nonnull %64, i8* nonnull %64, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23HTMLDocumentParserStateEE5TraceEPNS_7VisitorEPKv) #16
  br label %69

69:                                               ; preds = %58, %63
  %70 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0
  tail call void @_ZNK5blink24ScriptableDocumentParser5TraceEPNS_7VisitorE(%"class.blink::ScriptableDocumentParser"* %70, %"class.blink::Visitor"* %1) #16
  ret void
}

declare void @_ZNK5blink24ScriptableDocumentParser5TraceEPNS_7VisitorE(%"class.blink::ScriptableDocumentParser"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink18HTMLDocumentParser5TraceEPNS_7VisitorE(%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 -1, i32 19
  %4 = bitcast %"class.blink::Member.474"* %3 to %"class.blink::HTMLDocumentParser"*
  tail call void @_ZNK5blink18HTMLDocumentParser5TraceEPNS_7VisitorE(%"class.blink::HTMLDocumentParser"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18HTMLDocumentParser33HasPendingWorkScheduledForTestingEv(%"class.blink::HTMLDocumentParser"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %3 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser6DetachEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  store i8 0, i8* %3, align 2
  %7 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  br label %12

12:                                               ; preds = %9, %6
  %13 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  br i1 %13, label %14, label %18

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %16 = bitcast i64* %15 to %"class.blink::BackgroundHTMLParser"**
  %17 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %16, align 8
  br label %18

18:                                               ; preds = %12, %14
  %19 = phi %"class.blink::BackgroundHTMLParser"* [ %17, %14 ], [ null, %12 ]
  call void @_ZN5blink20BackgroundHTMLParser4StopEv(%"class.blink::BackgroundHTMLParser"* %19) #16
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %22 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %22, i64 0, i32 0
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink14DocumentParser6DetachEv(%"class.blink::DocumentParser"* %24) #16
  %25 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %26 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %25, align 8
  %27 = icmp eq %"class.blink::HTMLParserScriptRunner"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @_ZN5blink22HTMLParserScriptRunner6DetachEv(%"class.blink::HTMLParserScriptRunner"* nonnull %26) #16
  br label %29

29:                                               ; preds = %20, %28
  %30 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %31 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %30, align 8
  call void @_ZN5blink15HTMLTreeBuilder6DetachEv(%"class.blink::HTMLTreeBuilder"* %31) #16
  %32 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %33 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %32, align 8
  store %"class.blink::HTMLPreloadScanner"* null, %"class.blink::HTMLPreloadScanner"** %32, align 8
  %34 = icmp eq %"class.blink::HTMLPreloadScanner"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %29
  call void @_ZN5blink18HTMLPreloadScannerD1Ev(%"class.blink::HTMLPreloadScanner"* nonnull %33) #16
  %36 = bitcast %"class.blink::HTMLPreloadScanner"* %33 to i8*
  call void @free(i8* %36) #16
  br label %37

37:                                               ; preds = %29, %35
  %38 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %39 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %38, align 8
  store %"class.blink::HTMLPreloadScanner"* null, %"class.blink::HTMLPreloadScanner"** %38, align 8
  %40 = icmp eq %"class.blink::HTMLPreloadScanner"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  call void @_ZN5blink18HTMLPreloadScannerD1Ev(%"class.blink::HTMLPreloadScanner"* nonnull %39) #16
  %42 = bitcast %"class.blink::HTMLPreloadScanner"* %39 to i8*
  call void @free(i8* %42) #16
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 13, i32 0
  %45 = getelementptr inbounds %"class.blink::MemberBase.427", %"class.blink::MemberBase.427"* %44, i64 0, i32 0
  %46 = load %"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLParserScheduler"** %45, align 8
  %47 = icmp eq %"class.blink::HTMLParserScheduler"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %43
  call void @_ZN5blink19HTMLParserScheduler6DetachEv(%"class.blink::HTMLParserScheduler"* nonnull %46) #16
  %49 = bitcast %"class.blink::MemberBase.427"* %44 to i64*
  store atomic i64 0, i64* %49 monotonic, align 8
  br label %50

50:                                               ; preds = %43, %48
  %51 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %52 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %51, align 8
  store %"class.blink::HTMLTokenizer"* null, %"class.blink::HTMLTokenizer"** %51, align 8
  %53 = icmp eq %"class.blink::HTMLTokenizer"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %52) #16
  %55 = bitcast %"class.blink::HTMLTokenizer"* %52 to i8*
  call void @free(i8* %55) #16
  br label %56

56:                                               ; preds = %50, %54
  %57 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %58 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %57, align 8
  store %"class.blink::HTMLToken"* null, %"class.blink::HTMLToken"** %57, align 8
  %59 = icmp eq %"class.blink::HTMLToken"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %58) #16
  %61 = bitcast %"class.blink::HTMLToken"* %58 to i8*
  call void @free(i8* %61) #16
  br label %62

62:                                               ; preds = %56, %60
  ret void
}

declare void @_ZN5blink14DocumentParser6DetachEv(%"class.blink::DocumentParser"*) unnamed_addr #4

declare void @_ZN5blink22HTMLParserScriptRunner6DetachEv(%"class.blink::HTMLParserScriptRunner"*) local_unnamed_addr #4

declare void @_ZN5blink15HTMLTreeBuilder6DetachEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #4

declare void @_ZN5blink19HTMLParserScheduler6DetachEv(%"class.blink::HTMLParserScheduler"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser11StopParsingEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %3) #16
  %4 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 13, i32 0
  %5 = getelementptr inbounds %"class.blink::MemberBase.427", %"class.blink::MemberBase.427"* %4, i64 0, i32 0
  %6 = load %"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLParserScheduler"** %5, align 8
  %7 = icmp eq %"class.blink::HTMLParserScheduler"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  tail call void @_ZN5blink19HTMLParserScheduler6DetachEv(%"class.blink::HTMLParserScheduler"* nonnull %6) #16
  %9 = bitcast %"class.blink::MemberBase.427"* %4 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %12 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %12, i64 0, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %15 = load i8, i8* %14, align 2, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %10
  store i8 0, i8* %14, align 2
  %18 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %18) #16
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %20, %17
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %18) #16
  br i1 %24, label %25, label %29

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %27 = bitcast i64* %26 to %"class.blink::BackgroundHTMLParser"**
  %28 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %27, align 8
  br label %29

29:                                               ; preds = %23, %25
  %30 = phi %"class.blink::BackgroundHTMLParser"* [ %28, %25 ], [ null, %23 ]
  call void @_ZN5blink20BackgroundHTMLParser4StopEv(%"class.blink::BackgroundHTMLParser"* %30) #16
  br label %31

31:                                               ; preds = %10, %29
  ret void
}

declare void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser20PrepareToStopParsingEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = bitcast i8** %2 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %8, align 8
  %9 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  %12 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), %6 ]
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %9, %6 ]
  %14 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %15 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %14, align 8
  %16 = icmp eq %"class.blink::HTMLTokenizer"* %15, null
  br i1 %16, label %35, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = call zeroext i1 @_ZNK5blink8Document14IsPrefetchOnlyEv(%"class.blink::Document"* %19) #16
  br i1 %20, label %35, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %23 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %23, i64 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %24, align 4
  %27 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %22, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %27, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %28, align 4
  call void @_ZN5blink18HTMLDocumentParser23PumpTokenizerIfPossibleEv(%"class.blink::HTMLDocumentParser"* %0)
  %31 = load i32, i32* %28, align 4
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* %28, align 4
  %33 = load i32, i32* %24, align 4
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %10, %21, %17
  %36 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp sgt i32 %37, 1
  br i1 %38, label %60, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink14DocumentParser20PrepareToStopParsingEv(%"class.blink::DocumentParser"* %40) #16
  %41 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %42 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %41, align 8
  %43 = icmp eq %"class.blink::HTMLParserScriptRunner"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  call void @_ZN5blink8Document13SetReadyStateENS0_18DocumentReadyStateE(%"class.blink::Document"* %46, i32 1) #16
  br label %47

47:                                               ; preds = %39, %44
  %48 = load i32, i32* %36, align 8
  %49 = icmp eq i32 %48, 3
  br i1 %49, label %60, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::Document"*, %"class.blink::Document"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %52, i64 0, i32 88, i32 0, i32 0
  %54 = load %"class.blink::ScriptRunner"*, %"class.blink::ScriptRunner"** %53, align 8
  call void @_ZN5blink12ScriptRunner26ResumeAsyncScriptExecutionEv(%"class.blink::ScriptRunner"* %54) #16
  %55 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %41, align 8
  %56 = icmp eq %"class.blink::HTMLParserScriptRunner"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %50
  %58 = call zeroext i1 @_ZN5blink22HTMLParserScriptRunner31ExecuteScriptsWaitingForParsingEv(%"class.blink::HTMLParserScriptRunner"* nonnull %55) #16
  br i1 %58, label %59, label %60

59:                                               ; preds = %57, %50
  call void @_ZN5blink18HTMLDocumentParser3endEv(%"class.blink::HTMLDocumentParser"* %0) #16
  br label %60

60:                                               ; preds = %59, %57, %47, %35
  %61 = icmp eq i8* %11, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %60
  %63 = load i8, i8* %11, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %11, i8* %12, i64 %13) #16
  br label %66

66:                                               ; preds = %60, %62, %65
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8** dereferenceable(8)) local_unnamed_addr #6 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #16
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 5, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = bitcast i8** %8 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #16
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #16
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #16
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #16
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #16
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #17
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  ret i64 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser23PumpTokenizerIfPossibleEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = bitcast i8** %2 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %8, align 8
  %9 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i64 [ -6148914691236517206, %1 ], [ %9, %6 ]
  %12 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), %6 ]
  %13 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  %14 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  %15 = load i8, i8* %14, align 2, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  store i8 0, i8* %14, align 2
  %18 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  store i8 1, i8* %18, align 1
  br label %19

19:                                               ; preds = %10, %17
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 1
  br i1 %22, label %56, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %25 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %25, i64 0, i32 12, i32 0, i32 0
  %27 = load %"class.blink::Element"*, %"class.blink::Element"** %26, align 8
  %28 = icmp ne %"class.blink::Element"* %27, null
  %29 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %30 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %29, align 8
  %31 = icmp eq %"class.blink::HTMLParserScriptRunner"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %23
  %33 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %30) #16
  br label %34

34:                                               ; preds = %32, %23
  %35 = phi i1 [ false, %23 ], [ %33, %32 ]
  %36 = or i1 %28, %35
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %39 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %39, i64 0, i32 1
  %41 = load i8, i8* %40, align 4, !range !3
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %45 = load i8, i8* %44, align 1, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %43, %34, %37
  %48 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %49 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %49, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %43, %47
  %54 = call zeroext i1 @_ZN5blink18HTMLDocumentParser13PumpTokenizerEv(%"class.blink::HTMLDocumentParser"* %0)
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  call void @_ZN5blink18HTMLDocumentParser21SchedulePumpTokenizerEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %90

56:                                               ; preds = %47, %19, %53
  %57 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %58 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %58, i64 0, i32 5
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %64 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %63, align 8
  %65 = icmp eq %"class.blink::HTMLParserMetrics"* %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %62
  call void @_ZN5blink17HTMLParserMetrics23ReportMetricsAtParseEndEb(%"class.blink::HTMLParserMetrics"* nonnull %64, i1 zeroext false) #16
  br label %67

67:                                               ; preds = %62, %66
  call void @_ZN5blink18HTMLDocumentParser12AttemptToEndEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %90

68:                                               ; preds = %56
  %69 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %58, i64 0, i32 3
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %90

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %58, i64 0, i32 4
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %58, i64 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %83

80:                                               ; preds = %76
  %81 = load i32, i32* %20, align 8
  %82 = icmp sgt i32 %81, 0
  br i1 %82, label %83, label %89

83:                                               ; preds = %76, %72, %80
  %84 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %85 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %84, align 8
  %86 = icmp eq %"class.blink::HTMLParserMetrics"* %85, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  call void @_ZN5blink17HTMLParserMetrics23ReportMetricsAtParseEndEb(%"class.blink::HTMLParserMetrics"* nonnull %85, i1 zeroext false) #16
  br label %88

88:                                               ; preds = %83, %87
  call void @_ZN5blink18HTMLDocumentParser12EndIfDelayedEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %90

89:                                               ; preds = %80
  call void @_ZN5blink18HTMLDocumentParser20ScheduleEndIfDelayedEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %90

90:                                               ; preds = %67, %88, %89, %68, %55
  %91 = icmp eq i8* %13, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %90
  %93 = load i8, i8* %13, align 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %13, i8* %12, i64 %11) #16
  br label %96

96:                                               ; preds = %90, %92, %95
  ret void
}

declare void @_ZN5blink14DocumentParser20PrepareToStopParsingEv(%"class.blink::DocumentParser"*) unnamed_addr #4

declare void @_ZN5blink8Document13SetReadyStateENS0_18DocumentReadyStateE(%"class.blink::Document"*, i32) local_unnamed_addr #4

declare void @_ZN5blink12ScriptRunner26ResumeAsyncScriptExecutionEv(%"class.blink::ScriptRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser33AttemptToRunDeferredScriptsAndEndEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLParserScriptRunner"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN5blink22HTMLParserScriptRunner31ExecuteScriptsWaitingForParsingEv(%"class.blink::HTMLParserScriptRunner"* nonnull %3) #16
  br i1 %6, label %7, label %8

7:                                                ; preds = %1, %5
  tail call void @_ZN5blink18HTMLDocumentParser3endEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %8

8:                                                ; preds = %5, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18HTMLDocumentParser17IsParsingFragmentEv(%"class.blink::HTMLDocumentParser"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %4, align 8
  %6 = icmp ne %"class.blink::DocumentFragment"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser31DeferredPumpTokenizerIfPossibleEv(%"class.blink::HTMLDocumentParser"*) #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %21, label %7, !prof !5

7:                                                ; preds = %1
  %8 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = bitcast i8** %2 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %9, align 8
  %10 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %12 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [3 x i8*], [3 x i8*]* @switch.table._ZN5blink18HTMLDocumentParser31DeferredPumpTokenizerIfPossibleEv, i64 0, i64 %15
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast i8** %3 to i64*
  store i64 %18, i64* %19, align 8
  %20 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvPKcEEN4base11trace_event16TraceEventHandleEcPKhS3_S3_yjyS3_OT_S3_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %21

21:                                               ; preds = %1, %7
  %22 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), %7 ]
  %23 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %7 ]
  %24 = phi i64 [ -6148914691236517206, %1 ], [ %20, %7 ]
  %25 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %26 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %25, align 8
  %27 = icmp eq %"class.blink::HTMLParserMetrics"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %30 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %29, align 8
  %31 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* %30) #16
  call void @_ZN5blink17HTMLParserMetrics16AddYieldIntervalEN4base9TimeDeltaE(%"class.blink::HTMLParserMetrics"* nonnull %26, i64 %31) #16
  br label %32

32:                                               ; preds = %21, %28
  %33 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %34 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %33, align 8
  store %"class.base::ElapsedTimer"* null, %"class.base::ElapsedTimer"** %33, align 8
  %35 = icmp eq %"class.base::ElapsedTimer"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.base::ElapsedTimer"* %34 to i8*
  call void @_ZdlPv(i8* %37) #17
  br label %38

38:                                               ; preds = %32, %36
  %39 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %40 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %38
  %45 = icmp eq i32 %42, 2
  store i32 0, i32* %41, align 4
  br i1 %45, label %46, label %53

46:                                               ; preds = %44
  %47 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %39, align 8
  %48 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %47, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %48, align 4
  call void @_ZN5blink18HTMLDocumentParser23PumpTokenizerIfPossibleEv(%"class.blink::HTMLDocumentParser"* %0)
  call void @_ZN5blink18HTMLDocumentParser12EndIfDelayedEv(%"class.blink::HTMLDocumentParser"* %0)
  %51 = load i32, i32* %48, align 4
  %52 = add nsw i32 %51, -1
  store i32 %52, i32* %48, align 4
  br label %54

53:                                               ; preds = %44
  call void @_ZN5blink18HTMLDocumentParser23PumpTokenizerIfPossibleEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %54

54:                                               ; preds = %46, %53, %38
  %55 = icmp eq i8* %23, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %54
  %57 = load i8, i8* %23, align 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %23, i8* %22, i64 %24) #16
  br label %60

60:                                               ; preds = %54, %56, %59
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIPvPKcEEN4base11trace_event16TraceEventHandleEcPKhS3_S3_yjyS3_OT_S3_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8** dereferenceable(8), i8*, i8** dereferenceable(8)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #16
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247307518, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = bitcast i8** %8 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = bitcast i8** %10 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #16
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #16
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #16
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #16
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #16
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #17
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  ret i64 %28
}

declare void @_ZN5blink17HTMLParserMetrics16AddYieldIntervalEN4base9TimeDeltaE(%"class.blink::HTMLParserMetrics"*, i64) local_unnamed_addr #4

declare i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser12EndIfDelayedEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = bitcast i8** %2 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %8, align 8
  %9 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i64 [ -6148914691236517206, %1 ], [ %9, %6 ]
  %12 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0), %6 ]
  %13 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  %14 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %15 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %15, i64 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 4
  %19 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %14, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %19, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %73, label %26

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 26
  %28 = load i8, i8* %27, align 1, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %73, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 28
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %73

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %36 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %36, i64 0, i32 12, i32 0, i32 0
  %38 = load %"class.blink::Element"*, %"class.blink::Element"** %37, align 8
  %39 = icmp ne %"class.blink::Element"* %38, null
  %40 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %41 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %40, align 8
  %42 = icmp eq %"class.blink::HTMLParserScriptRunner"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %34
  %44 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %41) #16
  br label %45

45:                                               ; preds = %43, %34
  %46 = phi i1 [ false, %34 ], [ %44, %43 ]
  %47 = or i1 %39, %46
  br i1 %47, label %73, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %50 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %50, i64 0, i32 1
  %52 = load i8, i8* %51, align 4, !range !3
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %73

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %56 = load i8, i8* %55, align 1, !range !3
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %73

58:                                               ; preds = %54
  %59 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %40, align 8
  %60 = icmp eq %"class.blink::HTMLParserScriptRunner"* %59, null
  br i1 %60, label %67, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %59, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %63, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %58, %61
  %68 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %14, align 8
  %69 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %67
  store i8 0, i8* %27, align 1
  call void @_ZN5blink18HTMLDocumentParser20PrepareToStopParsingEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %73

73:                                               ; preds = %45, %48, %30, %54, %61, %67, %26, %10, %72
  %74 = load i32, i32* %20, align 4
  %75 = add nsw i32 %74, -1
  store i32 %75, i32* %20, align 4
  %76 = load i32, i32* %16, align 4
  %77 = add nsw i32 %76, -1
  store i32 %77, i32* %16, align 4
  %78 = icmp eq i8* %13, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %73
  %80 = load i8, i8* %13, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %13, i8* %12, i64 %11) #16
  br label %83

83:                                               ; preds = %73, %79, %82
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser30CheckIfBlockingStylesheetAddedEv(%"class.blink::HTMLDocumentParser"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 2
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  store i8 1, i8* %6, align 1
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18HTMLDocumentParser13PumpTokenizerEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.blink::PumpSession", align 8
  %3 = alloca i8, align 1
  %4 = alloca i8*, align 8
  %5 = alloca %"class.blink::probe::ParseHTML", align 8
  %6 = alloca %"class.base::ElapsedTimer", align 8
  %7 = alloca %"class.absl::optional.2972", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = bitcast %"class.blink::PumpSession"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.blink::PumpSession", %"class.blink::PumpSession"* %2, i64 0, i32 0, i32 0
  store i32* inttoptr (i64 -6148914691236517206 to i32*), i32** %11, align 8
  %12 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 28
  call void @_ZN5blink11PumpSessionC1ERj(%"class.blink::PumpSession"* nonnull %2, i32* dereferenceable(4) %12) #16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #16
  store i8 -86, i8* %3, align 1
  %13 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %14 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %14, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %25

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %14, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = load i32, i32* %12, align 8
  %24 = icmp ugt i32 %23, 1
  br label %25

25:                                               ; preds = %18, %1, %22
  %26 = phi i1 [ true, %18 ], [ %24, %22 ], [ true, %1 ]
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %3, align 1
  %28 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %29 = and i8 %28, 25
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %35, label %31, !prof !5

31:                                               ; preds = %25
  %32 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  %33 = bitcast i8** %4 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %33, align 8
  %34 = call i64 @_ZN20trace_event_internal13AddTraceEventIRbPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i8* nonnull dereferenceable(1) %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  br label %35

35:                                               ; preds = %25, %31
  %36 = phi i8* [ null, %25 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %31 ]
  %37 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %25 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0), %31 ]
  %38 = phi i64 [ -6148914691236517206, %25 ], [ %34, %31 ]
  %39 = bitcast %"class.blink::probe::ParseHTML"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #16
  %40 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %41 = bitcast %"class.blink::probe::ParseHTML"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 40, i1 false)
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  call void @_ZN5blink5probe9ParseHTMLC1EPNS_8DocumentEPNS_18HTMLDocumentParserE(%"class.blink::probe::ParseHTML"* nonnull %5, %"class.blink::Document"* %42, %"class.blink::HTMLDocumentParser"* %0) #16
  %43 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 24
  %44 = load i32, i32* %43, align 8
  %45 = bitcast %"class.base::ElapsedTimer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #16
  %46 = getelementptr inbounds %"class.base::ElapsedTimer", %"class.base::ElapsedTimer"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 -6148914691236517206, i64* %46, align 8
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %6) #16
  %47 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %49 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %51 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %52 = getelementptr inbounds %"class.absl::optional.2972", %"class.absl::optional.2972"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.absl::optional.2972", %"class.absl::optional.2972"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %54 = bitcast %union.anon.2976* %53 to i8*
  %55 = getelementptr inbounds %"class.absl::optional.2972", %"class.absl::optional.2972"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %56 = getelementptr inbounds %"class.absl::optional.2972", %"class.absl::optional.2972"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %57 = getelementptr inbounds %"class.absl::optional.2972", %"class.absl::optional.2972"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %58 = getelementptr inbounds %"class.absl::optional.2972", %"class.absl::optional.2972"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %59 = bitcast i64* %57 to i8*
  %60 = bitcast %"class.base::TickClock"** %58 to i64*
  %61 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0
  %63 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 34
  %65 = bitcast %"class.absl::optional.2972"* %7 to i64*
  br label %66

66:                                               ; preds = %35, %198
  %67 = phi i32 [ 0, %35 ], [ %151, %198 ]
  %68 = phi i32 [ %44, %35 ], [ %150, %198 ]
  %69 = phi i8 [ 0, %35 ], [ %199, %198 ]
  %70 = load i32, i32* %47, align 8
  %71 = icmp sgt i32 %70, 1
  br i1 %71, label %105, label %72

72:                                               ; preds = %66
  %73 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %48, align 8
  %74 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %73, i64 0, i32 12, i32 0, i32 0
  %75 = load %"class.blink::Element"*, %"class.blink::Element"** %74, align 8
  %76 = icmp eq %"class.blink::Element"* %75, null
  br i1 %76, label %84, label %77

77:                                               ; preds = %72
  call void @_ZN5blink18HTMLDocumentParser30RunScriptsForPausedTreeBuilderEv(%"class.blink::HTMLDocumentParser"* %0) #16
  %78 = load i32, i32* %47, align 8
  %79 = icmp sgt i32 %78, 1
  br i1 %79, label %105, label %80

80:                                               ; preds = %77
  %81 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %48, align 8
  %82 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %81, i64 0, i32 12, i32 0, i32 0
  %83 = load %"class.blink::Element"*, %"class.blink::Element"** %82, align 8
  br label %84

84:                                               ; preds = %80, %72
  %85 = phi %"class.blink::Element"* [ %83, %80 ], [ null, %72 ]
  %86 = phi i32 [ 2, %80 ], [ 1, %72 ]
  %87 = icmp ne %"class.blink::Element"* %85, null
  %88 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %49, align 8
  %89 = icmp eq %"class.blink::HTMLParserScriptRunner"* %88, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %84
  %91 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %88) #16
  br label %92

92:                                               ; preds = %90, %84
  %93 = phi i1 [ false, %84 ], [ %91, %90 ]
  %94 = or i1 %87, %93
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %50, align 8
  %97 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %96, i64 0, i32 1
  %98 = load i8, i8* %97, align 4, !range !3
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %105

100:                                              ; preds = %95
  %101 = load i8, i8* %51, align 1, !range !3
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = icmp eq i32 %86, 2
  br i1 %104, label %118, label %126

105:                                              ; preds = %92, %95, %100, %66, %77
  %106 = icmp ult i32 %67, 7
  br i1 %106, label %107, label %201

107:                                              ; preds = %105
  %108 = load i32, i32* %47, align 8
  %109 = icmp eq i32 %108, 3
  br i1 %109, label %219, label %110

110:                                              ; preds = %107
  %111 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %112 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %111, i64 0, i32 88, i32 0, i32 0
  %113 = load %"class.blink::ScriptRunner"*, %"class.blink::ScriptRunner"** %112, align 8
  %114 = icmp eq %"class.blink::ScriptRunner"* %113, null
  br i1 %114, label %201, label %115

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::ScriptRunner", %"class.blink::ScriptRunner"* %113, i64 0, i32 12
  %117 = load i8, i8* %116, align 1, !range !3
  br label %201

118:                                              ; preds = %103
  %119 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %13, align 8
  %120 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %119, i64 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 3
  br i1 %122, label %123, label %126

123:                                              ; preds = %118
  %124 = load i8, i8* %3, align 1, !range !3
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %201, label %126

126:                                              ; preds = %103, %123, %118
  %127 = phi i32 [ 0, %123 ], [ %68, %118 ], [ %68, %103 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %52) #16
  store i64 -6148914691236517206, i64* %65, align 8
  store i8 0, i8* %52, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 48, i1 false) #16
  %128 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !3
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %146, label %130, !prof !5

130:                                              ; preds = %126
  %131 = call %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() #16
  %132 = call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %131) #16
  %133 = load i8, i8* %52, align 8, !range !3
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %130
  %136 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %55, align 8
  %137 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %56) #16
  %138 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %136, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %137, %"class.blink::RuntimeCallTimer"** %138, align 8
  store i8 0, i8* %52, align 8
  br label %139

139:                                              ; preds = %130, %135
  store %"class.blink::RuntimeCallStats"* %132, %"class.blink::RuntimeCallStats"** %55, align 8
  %140 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %132, i64 0, i32 3
  %141 = bitcast %"class.base::TickClock"** %140 to i64*
  %142 = load i64, i64* %141, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #16
  store i64 %142, i64* %60, align 8
  %143 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %132, i64 0, i32 2, i64 15
  %144 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %132, i64 0, i32 0
  %145 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %144, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %56, %"class.blink::RuntimeCallCounter"* %143, %"class.blink::RuntimeCallTimer"* %145) #16
  store %"class.blink::RuntimeCallTimer"* %56, %"class.blink::RuntimeCallTimer"** %144, align 8
  store i8 1, i8* %52, align 8
  br label %146

146:                                              ; preds = %126, %139
  %147 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %61, align 8
  %148 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %63, align 8
  %149 = call zeroext i1 @_ZN5blink13HTMLTokenizer9NextTokenERNS_15SegmentedStringERNS_9HTMLTokenE(%"class.blink::HTMLTokenizer"* %147, %"class.blink::SegmentedString"* dereferenceable(88) %62, %"class.blink::HTMLToken"* dereferenceable(2512) %148) #16
  %150 = add nsw i32 %127, -1
  %151 = add i32 %67, 1
  %152 = select i1 %149, i32 %150, i32 %127
  %153 = load i8, i8* %52, align 8, !range !3
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %159, label %155

155:                                              ; preds = %146
  %156 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %55, align 8
  %157 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %56) #16
  %158 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %156, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %157, %"class.blink::RuntimeCallTimer"** %158, align 8
  store i8 0, i8* %52, align 8
  br label %159

159:                                              ; preds = %146, %155
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %52) #16
  br i1 %149, label %160, label %201

160:                                              ; preds = %159
  call void @_ZN5blink18HTMLDocumentParser26ConstructTreeFromHTMLTokenEv(%"class.blink::HTMLDocumentParser"* %0)
  %161 = load i8, i8* %3, align 1, !range !3
  %162 = icmp eq i8 %161, 0
  br i1 %162, label %163, label %198

163:                                              ; preds = %160
  %164 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %48, align 8
  %165 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %164, i64 0, i32 12, i32 0, i32 0
  %166 = load %"class.blink::Element"*, %"class.blink::Element"** %165, align 8
  %167 = icmp ne %"class.blink::Element"* %166, null
  %168 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %49, align 8
  %169 = icmp eq %"class.blink::HTMLParserScriptRunner"* %168, null
  br i1 %169, label %172, label %170

170:                                              ; preds = %163
  %171 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %168) #16
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i1 [ false, %163 ], [ %171, %170 ]
  %174 = or i1 %167, %173
  br i1 %174, label %198, label %175

175:                                              ; preds = %172
  %176 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %50, align 8
  %177 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %176, i64 0, i32 1
  %178 = load i8, i8* %177, align 4, !range !3
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %180, label %198

180:                                              ; preds = %175
  %181 = load i8, i8* %51, align 1, !range !3
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %183, label %198

183:                                              ; preds = %180
  %184 = icmp slt i32 %152, 1
  %185 = load %"class.blink::ThreadScheduler"*, %"class.blink::ThreadScheduler"** %64, align 8
  %186 = bitcast %"class.blink::ThreadScheduler"* %185 to i1 (%"class.blink::ThreadScheduler"*)***
  %187 = load i1 (%"class.blink::ThreadScheduler"*)**, i1 (%"class.blink::ThreadScheduler"*)*** %186, align 8
  %188 = getelementptr inbounds i1 (%"class.blink::ThreadScheduler"*)*, i1 (%"class.blink::ThreadScheduler"*)** %187, i64 3
  %189 = load i1 (%"class.blink::ThreadScheduler"*)*, i1 (%"class.blink::ThreadScheduler"*)** %188, align 8
  %190 = call zeroext i1 %189(%"class.blink::ThreadScheduler"* %185) #16
  %191 = or i1 %184, %190
  %192 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %13, align 8
  %193 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %192, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, 3
  %196 = and i1 %191, %195
  %197 = zext i1 %196 to i8
  br label %198

198:                                              ; preds = %180, %172, %175, %183, %160
  %199 = phi i8 [ %197, %183 ], [ 0, %160 ], [ 0, %180 ], [ 0, %175 ], [ 0, %172 ]
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %66, label %201

201:                                              ; preds = %159, %123, %198, %105, %115, %110
  %202 = phi i32 [ %67, %110 ], [ %67, %115 ], [ %67, %105 ], [ %67, %159 ], [ %67, %123 ], [ %151, %198 ]
  %203 = phi i8 [ %69, %110 ], [ %69, %115 ], [ %69, %105 ], [ %69, %159 ], [ 1, %123 ], [ %199, %198 ]
  %204 = phi i8 [ 0, %110 ], [ %117, %115 ], [ 0, %105 ], [ 0, %159 ], [ 1, %123 ], [ 0, %198 ]
  %205 = load i32, i32* %47, align 8
  %206 = icmp eq i32 %205, 3
  br i1 %206, label %219, label %207, !prof !4

207:                                              ; preds = %201
  %208 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %209 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %208, i64 0, i32 88, i32 0, i32 0
  %210 = load %"class.blink::ScriptRunner"*, %"class.blink::ScriptRunner"** %209, align 8
  %211 = icmp eq %"class.blink::ScriptRunner"* %210, null
  br i1 %211, label %216, label %212, !prof !4

212:                                              ; preds = %207
  %213 = icmp eq i8 %204, 0
  br i1 %213, label %215, label %214

214:                                              ; preds = %212
  call void @_ZN5blink12ScriptRunner25PauseAsyncScriptExecutionEv(%"class.blink::ScriptRunner"* nonnull %210) #16
  br label %216

215:                                              ; preds = %212
  call void @_ZN5blink12ScriptRunner26ResumeAsyncScriptExecutionEv(%"class.blink::ScriptRunner"* nonnull %210) #16
  br label %216

216:                                              ; preds = %215, %214, %207
  %217 = load i32, i32* %47, align 8
  %218 = icmp sgt i32 %217, 1
  br i1 %218, label %219, label %228

219:                                              ; preds = %107, %201, %216
  %220 = phi i32 [ %67, %107 ], [ %202, %201 ], [ %202, %216 ]
  %221 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %222 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %221, align 8
  %223 = icmp ne %"class.blink::HTMLParserMetrics"* %222, null
  %224 = icmp ne i32 %220, 0
  %225 = and i1 %224, %223
  br i1 %225, label %226, label %306

226:                                              ; preds = %219
  %227 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %6) #16
  call void @_ZN5blink17HTMLParserMetrics8AddChunkEN4base9TimeDeltaEj(%"class.blink::HTMLParserMetrics"* nonnull %222, i64 %227, i32 %220) #16
  br label %306

228:                                              ; preds = %216
  %229 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %48, align 8
  %230 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %229, i64 0, i32 3
  %231 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %229, i64 0, i32 3, i32 8, i32 2, i32 2
  %232 = load i32, i32* %231, align 8
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %238

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %229, i64 0, i32 3, i32 7, i32 0, i32 0, i32 0, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %244, label %238

238:                                              ; preds = %228, %234
  call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %230, i32 0) #16
  call void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"* %230) #16
  %239 = load i32, i32* %47, align 8
  %240 = icmp sgt i32 %239, 1
  br i1 %240, label %241, label %244

241:                                              ; preds = %238
  %242 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 1119, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0)) #16
  %243 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #16
  br label %244

244:                                              ; preds = %234, %238, %241
  %245 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %48, align 8
  %246 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %245, i64 0, i32 12, i32 0, i32 0
  %247 = load %"class.blink::Element"*, %"class.blink::Element"** %246, align 8
  %248 = icmp ne %"class.blink::Element"* %247, null
  %249 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %49, align 8
  %250 = icmp eq %"class.blink::HTMLParserScriptRunner"* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %244
  %252 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %249) #16
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i1 [ false, %244 ], [ %252, %251 ]
  %255 = or i1 %248, %254
  br i1 %255, label %264, label %256

256:                                              ; preds = %253
  %257 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %50, align 8
  %258 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %257, i64 0, i32 1
  %259 = load i8, i8* %258, align 4, !range !3
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %261, label %264

261:                                              ; preds = %256
  %262 = load i8, i8* %51, align 1, !range !3
  %263 = icmp eq i8 %262, 0
  br i1 %263, label %287, label %264

264:                                              ; preds = %261, %253, %256
  %265 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 18, i32 0, i32 0
  %266 = load %"class.blink::HTMLResourcePreloader"*, %"class.blink::HTMLResourcePreloader"** %265, align 8
  %267 = icmp eq %"class.blink::HTMLResourcePreloader"* %266, null
  br i1 %267, label %287, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 10
  %270 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %269, i64 0, i32 0, i32 0, i32 0
  %271 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %270, align 8
  %272 = icmp eq %"class.blink::HTMLPreloadScanner"* %271, null
  br i1 %272, label %273, label %285

273:                                              ; preds = %268
  %274 = call %"class.blink::HTMLPreloadScanner"* @_ZN5blink18HTMLDocumentParser20CreatePreloadScannerENS_19TokenPreloadScanner11ScannerTypeE(%"class.blink::HTMLDocumentParser"* %0, i32 0)
  %275 = ptrtoint %"class.blink::HTMLPreloadScanner"* %274 to i64
  %276 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %270, align 8
  %277 = bitcast %"class.std::__1::unique_ptr.180"* %269 to i64*
  store i64 %275, i64* %277, align 8
  %278 = icmp eq %"class.blink::HTMLPreloadScanner"* %276, null
  br i1 %278, label %282, label %279

279:                                              ; preds = %273
  call void @_ZN5blink18HTMLPreloadScannerD1Ev(%"class.blink::HTMLPreloadScanner"* nonnull %276) #16
  %280 = bitcast %"class.blink::HTMLPreloadScanner"* %276 to i8*
  call void @free(i8* %280) #16
  %281 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %270, align 8
  br label %282

282:                                              ; preds = %279, %273
  %283 = phi %"class.blink::HTMLPreloadScanner"* [ %281, %279 ], [ %274, %273 ]
  call void @_ZN5blink18HTMLPreloadScanner11AppendToEndERKNS_15SegmentedStringE(%"class.blink::HTMLPreloadScanner"* %283, %"class.blink::SegmentedString"* dereferenceable(88) %62) #16
  %284 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %270, align 8
  br label %285

285:                                              ; preds = %268, %282
  %286 = phi %"class.blink::HTMLPreloadScanner"* [ %271, %268 ], [ %284, %282 ]
  call void @_ZN5blink18HTMLDocumentParser14ScanAndPreloadEPNS_18HTMLPreloadScannerE(%"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLPreloadScanner"* %286)
  br label %287

287:                                              ; preds = %261, %264, %285
  %288 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %289 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %288, align 8
  %290 = icmp ne %"class.blink::HTMLParserMetrics"* %289, null
  %291 = icmp ne i32 %202, 0
  %292 = and i1 %291, %290
  br i1 %292, label %293, label %295

293:                                              ; preds = %287
  %294 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %6) #16
  call void @_ZN5blink17HTMLParserMetrics8AddChunkEN4base9TimeDeltaEj(%"class.blink::HTMLParserMetrics"* nonnull %289, i64 %294, i32 %202) #16
  br label %295

295:                                              ; preds = %293, %287
  %296 = load i8, i8* %3, align 1, !range !3
  %297 = icmp eq i8 %296, 0
  %298 = and i8 %203, 1
  %299 = icmp eq i8 %298, 0
  %300 = or i1 %299, %297
  br i1 %300, label %304, label %301

301:                                              ; preds = %295
  %302 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 1139, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15, i64 0, i64 0)) #16
  %303 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #16
  br label %304

304:                                              ; preds = %295, %301
  %305 = icmp ne i8 %298, 0
  br label %306

306:                                              ; preds = %219, %226, %304
  %307 = phi i1 [ %305, %304 ], [ false, %226 ], [ false, %219 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #16
  call void @_ZN5blink5probe9ParseHTMLD1Ev(%"class.blink::probe::ParseHTML"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #16
  %308 = icmp eq i8* %36, null
  br i1 %308, label %313, label %309

309:                                              ; preds = %306
  %310 = load i8, i8* %36, align 1
  %311 = icmp eq i8 %310, 0
  br i1 %311, label %313, label %312

312:                                              ; preds = %309
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %36, i8* %37, i64 %38) #16
  br label %313

313:                                              ; preds = %306, %309, %312
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #16
  call void @_ZN5blink11PumpSessionD1Ev(%"class.blink::PumpSession"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  ret i1 %307
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser21SchedulePumpTokenizerEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.757", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca %"class.blink::Persistent.2977", align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11, !prof !5

11:                                               ; preds = %1
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %13 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %15, i64* %14, align 8
  %16 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  br label %17

17:                                               ; preds = %1, %11
  %18 = phi i64 [ -6148914691236517206, %1 ], [ %16, %11 ]
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0), %11 ]
  %20 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %11 ]
  %21 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %22 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  %28 = bitcast %"class.base::SingleThreadTaskRunner"** %27 to %"class.base::TaskRunner"**
  %29 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %28, align 8
  %30 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 1154) #16
  %31 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #16
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser31DeferredPumpTokenizerIfPossibleEv to i64), i64 0>, <2 x i64>* %5, align 16
  %32 = bitcast %"class.blink::Persistent.2977"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #16
  %33 = getelementptr inbounds %"class.blink::Persistent.2977", %"class.blink::Persistent.2977"* %7, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::Persistent.2977", %"class.blink::Persistent.2977"* %7, i64 0, i32 0, i32 0
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %34, align 8, !alias.scope !6
  %35 = getelementptr inbounds %"class.blink::Persistent.2977", %"class.blink::Persistent.2977"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %35, align 8, !alias.scope !6
  %36 = ptrtoint %"class.blink::HTMLDocumentParser"* %0 to i64
  switch i64 %36, label %37 [
    i64 0, label %63
    i64 -1, label %63
  ]

37:                                               ; preds = %26
  %38 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !6
  %39 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %38, i64 0, i32 1
  %40 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %39) #16, !noalias !6
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %44, !prof !4

42:                                               ; preds = %37
  %43 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %39, i8* %43) #16
  br label %44

44:                                               ; preds = %42, %37
  %45 = phi i8* [ %43, %42 ], [ %40, %37 ]
  %46 = bitcast i8* %45 to %"class.blink::ThreadState"**
  %47 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %46, align 8, !noalias !6
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %48, align 8, !noalias !6
  %50 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8, !noalias !6
  %52 = icmp eq %"class.blink::PersistentNode"* %51, null
  br i1 %52, label %53, label %56, !prof !4

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %49, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %54) #16
  %55 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8
  br label %56

56:                                               ; preds = %53, %44
  %57 = phi %"class.blink::PersistentNode"* [ %55, %53 ], [ %51, %44 ]
  %58 = bitcast %"class.blink::PersistentNode"* %57 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !6
  %60 = bitcast %"class.blink::PersistentRegion"* %49 to i64*
  store i64 %59, i64* %60, align 8, !noalias !6
  %61 = bitcast %"class.blink::PersistentNode"* %57 to %"class.blink::PersistentBase.2978"**
  store %"class.blink::PersistentBase.2978"* %33, %"class.blink::PersistentBase.2978"** %61, align 8, !noalias !6
  %62 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %57, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %62, align 8
  store %"class.blink::PersistentNode"* %57, %"class.blink::PersistentNode"** %35, align 8, !alias.scope !6
  br label %63

63:                                               ; preds = %26, %26, %56
  %64 = call i8* @_Znwm(i64 64) #17, !noalias !9
  %65 = bitcast i8* %64 to %"struct.base::internal::BindState.3215"*
  call void @_ZN4base8internal9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.3215"* nonnull %65, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %6, %"class.blink::Persistent.2977"* nonnull dereferenceable(16) %7) #16, !noalias !9
  %66 = bitcast %"class.base::OnceCallback.757"* %4 to i8**
  store i8* %64, i8** %66, align 8, !alias.scope !9
  %67 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %29, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.757"* nonnull %4) #16
  %68 = getelementptr inbounds %"class.base::OnceCallback.757", %"class.base::OnceCallback.757"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %68) #16
  %69 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %35, align 8
  %70 = icmp eq %"class.blink::PersistentNode"* %69, null
  br i1 %70, label %90, label %71

71:                                               ; preds = %63
  %72 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %73 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %72, i64 0, i32 1
  %74 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %73) #16
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %78, !prof !4

76:                                               ; preds = %71
  %77 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %73, i8* %77) #16
  br label %78

78:                                               ; preds = %76, %71
  %79 = phi i8* [ %77, %76 ], [ %74, %71 ]
  %80 = bitcast i8* %79 to %"class.blink::ThreadState"**
  %81 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %81, i64 0, i32 3, i32 0, i32 0, i32 0
  %83 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %82, align 8
  %84 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %35, align 8
  %85 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %83, i64 0, i32 0, i32 0
  %86 = bitcast %"class.blink::PersistentRegion"* %83 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.blink::PersistentNode"* %84 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %84, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %89, align 8
  store %"class.blink::PersistentNode"* %84, %"class.blink::PersistentNode"** %85, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %35, align 8
  br label %90

90:                                               ; preds = %63, %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #16
  %91 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %21, align 8
  %92 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %91, i64 0, i32 0
  store i32 1, i32* %92, align 4
  %93 = call i8* @_Znwm(i64 8) #17
  %94 = bitcast i8* %93 to %"class.base::ElapsedTimer"*
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %94) #16
  %95 = ptrtoint i8* %93 to i64
  %96 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 22
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.484", %"class.std::__1::unique_ptr.484"* %96, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %97, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.484"* %96 to i64*
  store i64 %95, i64* %99, align 8
  %100 = icmp eq %"class.base::ElapsedTimer"* %98, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %90
  %102 = bitcast %"class.base::ElapsedTimer"* %98 to i8*
  call void @_ZdlPv(i8* %102) #17
  br label %103

103:                                              ; preds = %90, %101, %17
  %104 = icmp eq i8* %20, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %103
  %106 = load i8, i8* %20, align 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %19, i64 %18) #16
  br label %109

109:                                              ; preds = %103, %105, %108
  ret void
}

declare void @_ZN5blink17HTMLParserMetrics23ReportMetricsAtParseEndEb(%"class.blink::HTMLParserMetrics"*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser12AttemptToEndEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = bitcast i8** %2 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %8, align 8
  %9 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.25, i64 0, i64 0), %6 ]
  %12 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %9, %6 ]
  %14 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %15 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %15, i64 0, i32 5
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 28
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %58

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %22 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %22, i64 0, i32 12, i32 0, i32 0
  %24 = load %"class.blink::Element"*, %"class.blink::Element"** %23, align 8
  %25 = icmp ne %"class.blink::Element"* %24, null
  %26 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %27 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %26, align 8
  %28 = icmp eq %"class.blink::HTMLParserScriptRunner"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %20
  %30 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %27) #16
  br label %31

31:                                               ; preds = %29, %20
  %32 = phi i1 [ false, %20 ], [ %30, %29 ]
  %33 = or i1 %25, %32
  br i1 %33, label %58, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %36 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %36, i64 0, i32 1
  %38 = load i8, i8* %37, align 4, !range !3
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %58

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %42 = load i8, i8* %41, align 1, !range !3
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %58

44:                                               ; preds = %40
  %45 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %26, align 8
  %46 = icmp eq %"class.blink::HTMLParserScriptRunner"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %45, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %44, %47
  %54 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %14, align 8
  %55 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %31, %34, %10, %40, %47, %53
  %59 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 26
  store i8 1, i8* %59, align 1
  br label %61

60:                                               ; preds = %53
  call void @_ZN5blink18HTMLDocumentParser20PrepareToStopParsingEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %61

61:                                               ; preds = %60, %58
  %62 = icmp eq i8* %12, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %61
  %64 = load i8, i8* %12, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %12, i8* %11, i64 %13) #16
  br label %67

67:                                               ; preds = %61, %63, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser20ScheduleEndIfDelayedEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.757", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca %"class.blink::Persistent.2977", align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11, !prof !5

11:                                               ; preds = %1
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %13 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %15, i64* %14, align 8
  %16 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  br label %17

17:                                               ; preds = %1, %11
  %18 = phi i64 [ -6148914691236517206, %1 ], [ %16, %11 ]
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.18, i64 0, i64 0), %11 ]
  %20 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %11 ]
  %21 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %22 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %22, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %101, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  %28 = bitcast %"class.base::SingleThreadTaskRunner"** %27 to %"class.base::TaskRunner"**
  %29 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %28, align 8
  %30 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 1172) #16
  %31 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #16
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::HTMLDocumentParser"*)* @_ZN5blink18HTMLDocumentParser31DeferredPumpTokenizerIfPossibleEv to i64), i64 0>, <2 x i64>* %5, align 16
  %32 = bitcast %"class.blink::Persistent.2977"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #16
  %33 = getelementptr inbounds %"class.blink::Persistent.2977", %"class.blink::Persistent.2977"* %7, i64 0, i32 0
  %34 = getelementptr inbounds %"class.blink::Persistent.2977", %"class.blink::Persistent.2977"* %7, i64 0, i32 0, i32 0
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %34, align 8, !alias.scope !16
  %35 = getelementptr inbounds %"class.blink::Persistent.2977", %"class.blink::Persistent.2977"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %35, align 8, !alias.scope !16
  %36 = ptrtoint %"class.blink::HTMLDocumentParser"* %0 to i64
  switch i64 %36, label %37 [
    i64 0, label %63
    i64 -1, label %63
  ]

37:                                               ; preds = %26
  %38 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !16
  %39 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %38, i64 0, i32 1
  %40 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %39) #16, !noalias !16
  %41 = icmp eq i8* %40, null
  br i1 %41, label %42, label %44, !prof !4

42:                                               ; preds = %37
  %43 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %39, i8* %43) #16
  br label %44

44:                                               ; preds = %42, %37
  %45 = phi i8* [ %43, %42 ], [ %40, %37 ]
  %46 = bitcast i8* %45 to %"class.blink::ThreadState"**
  %47 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %46, align 8, !noalias !16
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %48, align 8, !noalias !16
  %50 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8, !noalias !16
  %52 = icmp eq %"class.blink::PersistentNode"* %51, null
  br i1 %52, label %53, label %56, !prof !4

53:                                               ; preds = %44
  %54 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %49, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %54) #16
  %55 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8
  br label %56

56:                                               ; preds = %53, %44
  %57 = phi %"class.blink::PersistentNode"* [ %55, %53 ], [ %51, %44 ]
  %58 = bitcast %"class.blink::PersistentNode"* %57 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !16
  %60 = bitcast %"class.blink::PersistentRegion"* %49 to i64*
  store i64 %59, i64* %60, align 8, !noalias !16
  %61 = bitcast %"class.blink::PersistentNode"* %57 to %"class.blink::PersistentBase.2978"**
  store %"class.blink::PersistentBase.2978"* %33, %"class.blink::PersistentBase.2978"** %61, align 8, !noalias !16
  %62 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %57, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %62, align 8
  store %"class.blink::PersistentNode"* %57, %"class.blink::PersistentNode"** %35, align 8, !alias.scope !16
  br label %63

63:                                               ; preds = %26, %26, %56
  %64 = call i8* @_Znwm(i64 64) #17, !noalias !19
  %65 = bitcast i8* %64 to %"struct.base::internal::BindState.3215"*
  call void @_ZN4base8internal9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.3215"* nonnull %65, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %6, %"class.blink::Persistent.2977"* nonnull dereferenceable(16) %7) #16, !noalias !19
  %66 = bitcast %"class.base::OnceCallback.757"* %4 to i8**
  store i8* %64, i8** %66, align 8, !alias.scope !19
  %67 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %29, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.757"* nonnull %4) #16
  %68 = getelementptr inbounds %"class.base::OnceCallback.757", %"class.base::OnceCallback.757"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %68) #16
  %69 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %35, align 8
  %70 = icmp eq %"class.blink::PersistentNode"* %69, null
  br i1 %70, label %90, label %71

71:                                               ; preds = %63
  %72 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %73 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %72, i64 0, i32 1
  %74 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %73) #16
  %75 = icmp eq i8* %74, null
  br i1 %75, label %76, label %78, !prof !4

76:                                               ; preds = %71
  %77 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %73, i8* %77) #16
  br label %78

78:                                               ; preds = %76, %71
  %79 = phi i8* [ %77, %76 ], [ %74, %71 ]
  %80 = bitcast i8* %79 to %"class.blink::ThreadState"**
  %81 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %81, i64 0, i32 3, i32 0, i32 0, i32 0
  %83 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %82, align 8
  %84 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %35, align 8
  %85 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %83, i64 0, i32 0, i32 0
  %86 = bitcast %"class.blink::PersistentRegion"* %83 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.blink::PersistentNode"* %84 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %84, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %89, align 8
  store %"class.blink::PersistentNode"* %84, %"class.blink::PersistentNode"** %85, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %35, align 8
  br label %90

90:                                               ; preds = %63, %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #16
  %91 = call i8* @_Znwm(i64 8) #17
  %92 = bitcast i8* %91 to %"class.base::ElapsedTimer"*
  call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %92) #16
  %93 = ptrtoint i8* %91 to i64
  %94 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 22
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.484", %"class.std::__1::unique_ptr.484"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.484"* %94 to i64*
  store i64 %93, i64* %97, align 8
  %98 = icmp eq %"class.base::ElapsedTimer"* %96, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %90
  %100 = bitcast %"class.base::ElapsedTimer"* %96 to i8*
  call void @_ZdlPv(i8* %100) #17
  br label %101

101:                                              ; preds = %90, %99, %17
  %102 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %21, align 8
  %103 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %102, i64 0, i32 0
  store i32 2, i32* %103, align 4
  %104 = icmp eq i8* %20, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %101
  %106 = load i8, i8* %20, align 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %19, i64 %18) #16
  br label %109

109:                                              ; preds = %101, %105, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18HTMLDocumentParser21IsScheduledForUnpauseEv(%"class.blink::HTMLDocumentParser"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 13, i32 0, i32 0
  %3 = load %"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLParserScheduler"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLParserScheduler"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink19HTMLParserScheduler21IsScheduledForUnpauseEv(%"class.blink::HTMLParserScheduler"* nonnull %3) #16
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ false, %1 ], [ %6, %5 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK5blink19HTMLParserScheduler21IsScheduledForUnpauseEv(%"class.blink::HTMLParserScheduler"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser23ResumeParsingAfterYieldEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 22
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %4 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %3, align 8
  %5 = icmp ne %"class.blink::HTMLParserMetrics"* %4, null
  br i1 %5, label %6, label %16

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.484", %"class.std::__1::unique_ptr.484"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %7, align 8
  %9 = icmp eq %"class.base::ElapsedTimer"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = tail call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* nonnull %8) #16
  tail call void @_ZN5blink17HTMLParserMetrics16AddYieldIntervalEN4base9TimeDeltaE(%"class.blink::HTMLParserMetrics"* nonnull %4, i64 %11) #16
  %12 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %7, align 8
  store %"class.base::ElapsedTimer"* null, %"class.base::ElapsedTimer"** %7, align 8
  %13 = icmp eq %"class.base::ElapsedTimer"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.base::ElapsedTimer"* %12 to i8*
  tail call void @_ZdlPv(i8* %15) #17
  br label %16

16:                                               ; preds = %1, %6, %10, %14
  %17 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  %18 = load i8, i8* %17, align 2, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  store i8 0, i8* %17, align 2
  %21 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  store i8 1, i8* %21, align 1
  br label %22

22:                                               ; preds = %16, %20
  %23 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %51, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %28 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %28, i64 0, i32 12, i32 0, i32 0
  %30 = load %"class.blink::Element"*, %"class.blink::Element"** %29, align 8
  %31 = icmp ne %"class.blink::Element"* %30, null
  %32 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %33 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %32, align 8
  %34 = icmp eq %"class.blink::HTMLParserScriptRunner"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %26
  %36 = tail call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %33) #16
  br label %37

37:                                               ; preds = %35, %26
  %38 = phi i1 [ false, %26 ], [ %36, %35 ]
  %39 = or i1 %31, %38
  br i1 %39, label %51, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %42, i64 0, i32 1
  %44 = load i8, i8* %43, align 4, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %48 = load i8, i8* %47, align 1, !range !3
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  tail call void @_ZN5blink18HTMLDocumentParser23PumpPendingSpeculationsEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %51

51:                                               ; preds = %46, %37, %40, %22, %50
  br i1 %5, label %52, label %62

52:                                               ; preds = %51
  %53 = tail call i8* @_Znwm(i64 8) #17
  %54 = bitcast i8* %53 to %"class.base::ElapsedTimer"*
  tail call void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"* nonnull %54) #16
  %55 = ptrtoint i8* %53 to i64
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.484", %"class.std::__1::unique_ptr.484"* %2, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.base::ElapsedTimer"*, %"class.base::ElapsedTimer"** %56, align 8
  %58 = bitcast %"class.std::__1::unique_ptr.484"* %2 to i64*
  store i64 %55, i64* %58, align 8
  %59 = icmp eq %"class.base::ElapsedTimer"* %57, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %52
  %61 = bitcast %"class.base::ElapsedTimer"* %57 to i8*
  tail call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %51, %52, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser23PumpPendingSpeculationsEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.blink::probe::ParseHTML", align 8
  %3 = alloca %"class.blink::SpeculationsPumpSession", align 8
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %6, i64 0, i32 12, i32 0, i32 0
  %8 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %9 = icmp ne %"class.blink::Element"* %8, null
  %10 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %11 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %10, align 8
  %12 = icmp eq %"class.blink::HTMLParserScriptRunner"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %1
  %14 = tail call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %11) #16
  br label %15

15:                                               ; preds = %13, %1
  %16 = phi i1 [ false, %1 ], [ %14, %13 ]
  %17 = or i1 %9, %16
  br i1 %17, label %24, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %20 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %20, i64 0, i32 1
  %22 = load i8, i8* %21, align 4, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %18, %15
  %25 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 13, i32 0, i32 0
  %26 = load %"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLParserScheduler"** %25, align 8
  tail call void @_ZN5blink19HTMLParserScheduler18ScheduleForUnpauseEv(%"class.blink::HTMLParserScheduler"* %26) #16
  br label %143

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 29
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 13, i32 0, i32 0
  %33 = load %"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLParserScheduler"** %32, align 8
  tail call void @_ZN5blink19HTMLParserScheduler18ScheduleForUnpauseEv(%"class.blink::HTMLParserScheduler"* %33) #16
  br label %143

34:                                               ; preds = %27
  %35 = bitcast %"class.blink::probe::ParseHTML"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #16
  %36 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = bitcast %"class.blink::probe::ParseHTML"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 40, i1 false)
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  call void @_ZN5blink5probe9ParseHTMLC1EPNS_8DocumentEPNS_18HTMLDocumentParserE(%"class.blink::probe::ParseHTML"* nonnull %2, %"class.blink::Document"* %38, %"class.blink::HTMLDocumentParser"* %0) #16
  %39 = bitcast %"class.blink::SpeculationsPumpSession"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #16
  %40 = getelementptr inbounds %"class.blink::SpeculationsPumpSession", %"class.blink::SpeculationsPumpSession"* %3, i64 0, i32 2
  %41 = bitcast %"class.blink::SpeculationsPumpSession"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  call void @_ZN5blink23SpeculationsPumpSessionC1ERj(%"class.blink::SpeculationsPumpSession"* nonnull %3, i32* dereferenceable(4) %28) #16
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 0, i8* %4, align 1
  %42 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %43 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 1
  %44 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 2
  %45 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %47 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  %48 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 13, i32 0, i32 0
  br label %50

50:                                               ; preds = %119, %34
  %51 = load i32, i32* %43, align 8
  %52 = load i32, i32* %44, align 4
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %129, label %54

54:                                               ; preds = %50
  %55 = load %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"** %45, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %55, i64 %56, i32 0, i32 0, i32 0
  %58 = load %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %57, align 8
  store %"struct.blink::HTMLDocumentParser::TokenizedChunk"* null, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %57, align 8
  %59 = load %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"** %45, align 8
  %60 = load i32, i32* %43, align 8
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %59, i64 %61
  %63 = add i32 %60, 1
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %59, i64 %64
  br label %66

66:                                               ; preds = %73, %54
  %67 = phi %"class.std::__1::unique_ptr.431"* [ %74, %73 ], [ %62, %54 ]
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %68, align 8
  store %"struct.blink::HTMLDocumentParser::TokenizedChunk"* null, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %68, align 8
  %70 = icmp eq %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %66
  call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %69) #16
  %72 = bitcast %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %69 to i8*
  call void @free(i8* %72) #16
  br label %73

73:                                               ; preds = %71, %66
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %67, i64 1
  %75 = icmp eq %"class.std::__1::unique_ptr.431"* %74, %65
  br i1 %75, label %76, label %66

76:                                               ; preds = %73
  %77 = load i32, i32* %43, align 8
  %78 = add i32 %77, 1
  %79 = load i32, i32* %46, align 8
  %80 = add i32 %79, -1
  %81 = icmp eq i32 %77, %80
  %82 = select i1 %81, i32 0, i32 %78
  store i32 %82, i32* %43, align 8
  %83 = call i64 @_ZN5blink18HTMLDocumentParser41ProcessTokenizedChunkFromBackgroundParserENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEEPb(%"class.blink::HTMLDocumentParser"* %0, %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %58, i8* nonnull %4)
  call void @_ZN5blink23SpeculationsPumpSession18AddedElementTokensEm(%"class.blink::SpeculationsPumpSession"* nonnull %3, i64 %83) #16
  %84 = load i8, i8* %47, align 2, !range !3
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %76
  store i8 0, i8* %47, align 2
  store i8 1, i8* %42, align 1
  br label %87

87:                                               ; preds = %76, %86
  %88 = load i32, i32* %48, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %129

90:                                               ; preds = %87
  %91 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %5, align 8
  %92 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %91, i64 0, i32 12, i32 0, i32 0
  %93 = load %"class.blink::Element"*, %"class.blink::Element"** %92, align 8
  %94 = icmp ne %"class.blink::Element"* %93, null
  %95 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %10, align 8
  %96 = icmp eq %"class.blink::HTMLParserScriptRunner"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %90
  %98 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %95) #16
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i1 [ false, %90 ], [ %98, %97 ]
  %101 = or i1 %94, %100
  br i1 %101, label %129, label %102

102:                                              ; preds = %99
  %103 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %19, align 8
  %104 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %103, i64 0, i32 1
  %105 = load i8, i8* %104, align 4, !range !3
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %129

107:                                              ; preds = %102
  %108 = load i8, i8* %42, align 1, !range !3
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %129

110:                                              ; preds = %107
  %111 = load %"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLParserScheduler"** %49, align 8
  %112 = icmp eq %"class.blink::HTMLParserScheduler"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %110
  %114 = call zeroext i1 @_ZNK5blink19HTMLParserScheduler21IsScheduledForUnpauseEv(%"class.blink::HTMLParserScheduler"* nonnull %111) #16
  br i1 %114, label %129, label %115

115:                                              ; preds = %110, %113
  %116 = load i32, i32* %43, align 8
  %117 = load i32, i32* %44, align 4
  %118 = icmp eq i32 %116, %117
  br i1 %118, label %129, label %119

119:                                              ; preds = %115
  %120 = load %"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLParserScheduler"** %49, align 8
  %121 = load %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"** %45, align 8
  %122 = zext i32 %116 to i64
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %121, i64 %122, i32 0, i32 0, i32 0
  %124 = load %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %123, align 8
  %125 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %124, i64 0, i32 7
  %126 = load i8, i8* %125, align 8, !range !3
  %127 = icmp ne i8 %126, 0
  %128 = call zeroext i1 @_ZN5blink19HTMLParserScheduler13YieldIfNeededERKNS_23SpeculationsPumpSessionEb(%"class.blink::HTMLParserScheduler"* %120, %"class.blink::SpeculationsPumpSession"* nonnull dereferenceable(24) %3, i1 zeroext %127) #16
  br i1 %128, label %129, label %50

129:                                              ; preds = %107, %99, %102, %113, %87, %119, %115, %50
  %130 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %131 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %130, align 8
  %132 = icmp eq %"class.blink::HTMLParserMetrics"* %131, null
  br i1 %132, label %142, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::SpeculationsPumpSession", %"class.blink::SpeculationsPumpSession"* %3, i64 0, i32 1
  %135 = call i64 @_ZNK4base12ElapsedTimer7ElapsedEv(%"class.base::ElapsedTimer"* %134) #16
  %136 = load i64, i64* %40, align 8
  %137 = trunc i64 %136 to i32
  call void @_ZN5blink17HTMLParserMetrics8AddChunkEN4base9TimeDeltaEj(%"class.blink::HTMLParserMetrics"* nonnull %131, i64 %135, i32 %137) #16
  %138 = load i8, i8* %4, align 1, !range !3
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %133
  %141 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %130, align 8
  call void @_ZN5blink17HTMLParserMetrics23ReportMetricsAtParseEndEb(%"class.blink::HTMLParserMetrics"* %141, i1 zeroext true) #16
  br label %142

142:                                              ; preds = %129, %133, %140
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  call void @_ZN5blink23SpeculationsPumpSessionD1Ev(%"class.blink::SpeculationsPumpSession"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #16
  call void @_ZN5blink5probe9ParseHTMLD1Ev(%"class.blink::probe::ParseHTML"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #16
  br label %143

143:                                              ; preds = %142, %31, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser30RunScriptsForPausedTreeBuilderEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.WTF::TextPosition"*
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8, !prof !5

8:                                                ; preds = %1
  %9 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = bitcast i8** %2 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %10, align 8
  %11 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %8 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0), %8 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %8 ]
  %16 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  store i64 -1, i64* %3, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %18 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %17, align 8
  %19 = call %"class.blink::Element"* @_ZN5blink15HTMLTreeBuilder19TakeScriptToProcessERN3WTF12TextPositionE(%"class.blink::HTMLTreeBuilder"* %18, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %4) #16
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %20, align 8
  %22 = icmp eq %"class.blink::HTMLParserScriptRunner"* %21, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %12
  call void @_ZN5blink22HTMLParserScriptRunner20ProcessScriptElementEPNS_7ElementERKN3WTF12TextPositionE(%"class.blink::HTMLParserScriptRunner"* nonnull %21, %"class.blink::Element"* %19, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %4) #16
  br label %24

24:                                               ; preds = %12, %23
  %25 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  %26 = load i8, i8* %25, align 2, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  store i8 0, i8* %25, align 2
  %29 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  store i8 1, i8* %29, align 1
  br label %30

30:                                               ; preds = %24, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  %31 = icmp eq i8* %15, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %30
  %33 = load i8, i8* %15, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #16
  br label %36

36:                                               ; preds = %30, %32, %35
  ret void
}

declare %"class.blink::Element"* @_ZN5blink15HTMLTreeBuilder19TakeScriptToProcessERN3WTF12TextPositionE(%"class.blink::HTMLTreeBuilder"*, %"class.WTF::TextPosition"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN5blink22HTMLParserScriptRunner20ProcessScriptElementEPNS_7ElementERKN3WTF12TextPositionE(%"class.blink::HTMLParserScriptRunner"*, %"class.blink::Element"*, %"class.WTF::TextPosition"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink18HTMLDocumentParser16CanTakeNextTokenEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 1
  br i1 %4, label %39, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %7 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %7, i64 0, i32 12, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  tail call void @_ZN5blink18HTMLDocumentParser30RunScriptsForPausedTreeBuilderEv(%"class.blink::HTMLDocumentParser"* %0)
  %12 = load i32, i32* %2, align 8
  %13 = icmp sgt i32 %12, 1
  br i1 %13, label %39, label %14

14:                                               ; preds = %5, %11
  %15 = phi i32 [ 2, %11 ], [ 1, %5 ]
  %16 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %6, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %16, i64 0, i32 12, i32 0, i32 0
  %18 = load %"class.blink::Element"*, %"class.blink::Element"** %17, align 8
  %19 = icmp ne %"class.blink::Element"* %18, null
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %20, align 8
  %22 = icmp eq %"class.blink::HTMLParserScriptRunner"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %14
  %24 = tail call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %21) #16
  br label %25

25:                                               ; preds = %23, %14
  %26 = phi i1 [ false, %14 ], [ %24, %23 ]
  %27 = or i1 %19, %26
  br i1 %27, label %38, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %30 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 4, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %36 = load i8, i8* %35, align 1, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %34, %25, %28
  br label %39

39:                                               ; preds = %34, %1, %11, %38
  %40 = phi i32 [ 0, %38 ], [ %15, %34 ], [ 0, %11 ], [ 0, %1 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser21EnqueueTokenizedChunkENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEE(%"class.blink::HTMLDocumentParser"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.WTF::Vector.183", align 8
  %5 = ptrtoint %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1 to i64
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %15, label %9, !prof !5

9:                                                ; preds = %2
  %10 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %11 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %13 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %13, i64* %12, align 8
  %14 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %10, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  br label %15

15:                                               ; preds = %2, %9
  %16 = phi i64 [ -6148914691236517206, %2 ], [ %14, %9 ]
  %17 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), %9 ]
  %18 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %9 ]
  %19 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %246

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 31
  %24 = load i8, i8* %23, align 1, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %47

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %28) #16
  %30 = icmp eq %"class.blink::DocumentLoader"* %29, null
  br i1 %30, label %47, label %31

31:                                               ; preds = %26
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %33 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %32) #16
  %34 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 4, !range !3
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = select i1 %36, %"struct.blink::ViewportDescription"* null, %"struct.blink::ViewportDescription"* %37
  call void @_ZN5blink14DocumentLoader26DispatchLinkHeaderPreloadsEPKNS_19ViewportDescriptionENS_13PreloadHelper18MediaPreloadPolicyE(%"class.blink::DocumentLoader"* %33, %"struct.blink::ViewportDescription"* %38, i32 2) #16
  store i8 1, i8* %23, align 1
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %40 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %39) #16
  %41 = call %"class.blink::PrefetchedSignedExchangeManager"* @_ZNK5blink14DocumentLoader34GetPrefetchedSignedExchangeManagerEv(%"class.blink::DocumentLoader"* %40) #16
  %42 = icmp eq %"class.blink::PrefetchedSignedExchangeManager"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %31
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %45 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %44) #16
  %46 = call %"class.blink::PrefetchedSignedExchangeManager"* @_ZNK5blink14DocumentLoader34GetPrefetchedSignedExchangeManagerEv(%"class.blink::DocumentLoader"* %45) #16
  call void @_ZN5blink31PrefetchedSignedExchangeManager33StartPrefetchedLinkHeaderPreloadsEv(%"class.blink::PrefetchedSignedExchangeManager"* %46) #16
  br label %47

47:                                               ; preds = %31, %26, %22, %43
  %48 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 8
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 0
  %53 = call dereferenceable(40) %"class.blink::CompactHTMLToken"* @_ZN3WTF6VectorIN5blink16CompactHTMLTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.434"* %52, i32 %49)
  %54 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 23
  store %"class.blink::CompactHTMLToken"* %53, %"class.blink::CompactHTMLToken"** %54, align 8
  br label %55

55:                                               ; preds = %47, %51
  %56 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 18, i32 0, i32 0
  %57 = load %"class.blink::HTMLResourcePreloader"*, %"class.blink::HTMLResourcePreloader"** %56, align 8
  %58 = icmp eq %"class.blink::HTMLResourcePreloader"* %57, null
  br i1 %58, label %179, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::Document"*, %"class.blink::Document"** %60, align 8
  %62 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %61) #16
  %63 = icmp eq %"class.blink::DocumentLoader"* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %59
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %60, align 8
  %66 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %65) #16
  %67 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %66, i64 0, i32 27, i32 49
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  br label %70

70:                                               ; preds = %59, %64
  %71 = phi i1 [ %69, %64 ], [ true, %59 ]
  %72 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 23
  %73 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %72, align 8
  %74 = icmp eq %"class.blink::CompactHTMLToken"* %73, null
  br i1 %74, label %75, label %83

75:                                               ; preds = %70
  %76 = load %"class.blink::Document"*, %"class.blink::Document"** %60, align 8
  %77 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %76, i64 0, i32 47, i32 0, i32 0
  %78 = load %"class.blink::Element"*, %"class.blink::Element"** %77, align 8
  %79 = icmp ne %"class.blink::Element"* %78, null
  %80 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features41kVerifyHTMLFetchedFromAppCacheBeforeDelayE) #16
  %81 = and i1 %71, %80
  %82 = or i1 %79, %81
  br i1 %82, label %172, label %83

83:                                               ; preds = %75, %70
  %84 = bitcast %"class.WTF::Vector.183"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #16
  %85 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %4, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %4, i64 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #16
  %88 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %88, align 8
  %90 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %89, i64 %92
  %94 = icmp eq i32 %91, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %83
  %96 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20
  %97 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20, i32 0, i32 0, i32 2
  %98 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %96, i64 0, i32 0, i32 0, i32 0
  br label %131

100:                                              ; preds = %169, %83
  %101 = load %"class.blink::HTMLResourcePreloader"*, %"class.blink::HTMLResourcePreloader"** %56, align 8
  %102 = getelementptr inbounds %"class.blink::HTMLResourcePreloader", %"class.blink::HTMLResourcePreloader"* %101, i64 0, i32 0
  %103 = bitcast %"class.blink::HTMLResourcePreloader"* %101 to void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)***
  %104 = load void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)**, void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)*** %103, align 8
  %105 = load void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)*, void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)** %104, align 8
  call void %105(%"class.blink::ResourcePreloader"* %102, %"class.WTF::Vector.183"* nonnull dereferenceable(16) %4) #16
  %106 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %85, align 8
  %107 = icmp eq %"class.std::__1::unique_ptr.186"* %106, null
  br i1 %107, label %130, label %108, !prof !5

108:                                              ; preds = %100
  %109 = bitcast %"class.std::__1::unique_ptr.186"* %106 to i8*
  %110 = load i32, i32* %87, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %128, label %112, !prof !4

112:                                              ; preds = %108
  %113 = zext i32 %110 to i64
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %106, i64 %113
  br label %115

115:                                              ; preds = %122, %112
  %116 = phi %"class.std::__1::unique_ptr.186"* [ %123, %122 ], [ %106, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.blink::PreloadRequest"*, %"class.blink::PreloadRequest"** %117, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %117, align 8
  %119 = icmp eq %"class.blink::PreloadRequest"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  call void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"* nonnull %118) #16
  %121 = bitcast %"class.blink::PreloadRequest"* %118 to i8*
  call void @free(i8* %121) #16
  br label %122

122:                                              ; preds = %120, %115
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %116, i64 1
  %124 = icmp eq %"class.std::__1::unique_ptr.186"* %123, %114
  br i1 %124, label %125, label %115

125:                                              ; preds = %122
  store i32 0, i32* %87, align 4
  %126 = bitcast %"class.WTF::Vector.183"* %4 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %125, %108
  %129 = phi i8* [ %127, %125 ], [ %109, %108 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %129) #16
  store %"class.std::__1::unique_ptr.186"* null, %"class.std::__1::unique_ptr.186"** %85, align 8
  br label %130

130:                                              ; preds = %100, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #16
  br label %179

131:                                              ; preds = %95, %169
  %132 = phi %"class.std::__1::unique_ptr.186"* [ %89, %95 ], [ %170, %169 ]
  %133 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %72, align 8
  %134 = icmp eq %"class.blink::CompactHTMLToken"* %133, null
  br i1 %134, label %135, label %154

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %132, i64 0, i32 0, i32 0, i32 0
  %137 = load %"class.blink::PreloadRequest"*, %"class.blink::PreloadRequest"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %137, i64 0, i32 14
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, 2
  %141 = ptrtoint %"class.blink::PreloadRequest"* %137 to i64
  br i1 %140, label %142, label %154

142:                                              ; preds = %135
  %143 = load i32, i32* %87, align 4
  %144 = load i32, i32* %86, align 8
  %145 = icmp eq i32 %143, %144
  br i1 %145, label %153, label %146, !prof !4

146:                                              ; preds = %142
  %147 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %85, align 8
  %148 = zext i32 %143 to i64
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %147, i64 %148
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %136, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.186"* %149 to i64*
  store i64 %141, i64* %150, align 8
  %151 = load i32, i32* %87, align 4
  %152 = add i32 %151, 1
  store i32 %152, i32* %87, align 4
  br label %169

153:                                              ; preds = %142
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.183"* nonnull %4, %"class.std::__1::unique_ptr.186"* dereferenceable(8) %132) #16
  br label %169

154:                                              ; preds = %131, %135
  %155 = load i32, i32* %97, align 4
  %156 = load i32, i32* %98, align 8
  %157 = icmp eq i32 %155, %156
  br i1 %157, label %168, label %158, !prof !4

158:                                              ; preds = %154
  %159 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %99, align 8
  %160 = zext i32 %155 to i64
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %159, i64 %160
  %162 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %132, i64 0, i32 0, i32 0, i32 0
  %163 = bitcast %"class.std::__1::unique_ptr.186"* %132 to i64*
  %164 = load i64, i64* %163, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %162, align 8
  %165 = bitcast %"class.std::__1::unique_ptr.186"* %161 to i64*
  store i64 %164, i64* %165, align 8
  %166 = load i32, i32* %97, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %97, align 4
  br label %169

168:                                              ; preds = %154
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.183"* %96, %"class.std::__1::unique_ptr.186"* dereferenceable(8) %132) #16
  br label %169

169:                                              ; preds = %168, %158, %153, %146
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %132, i64 1
  %171 = icmp eq %"class.std::__1::unique_ptr.186"* %170, %93
  br i1 %171, label %100, label %131

172:                                              ; preds = %75
  %173 = load %"class.blink::HTMLResourcePreloader"*, %"class.blink::HTMLResourcePreloader"** %56, align 8
  %174 = getelementptr inbounds %"class.blink::HTMLResourcePreloader", %"class.blink::HTMLResourcePreloader"* %173, i64 0, i32 0
  %175 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 1
  %176 = bitcast %"class.blink::HTMLResourcePreloader"* %173 to void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)***
  %177 = load void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)**, void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)*** %176, align 8
  %178 = load void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)*, void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)** %177, align 8
  call void %178(%"class.blink::ResourcePreloader"* %174, %"class.WTF::Vector.183"* dereferenceable(16) %175) #16
  br label %179

179:                                              ; preds = %55, %130, %172
  %180 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16
  %181 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 2
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %189, label %186

186:                                              ; preds = %179
  %187 = add i32 %185, 1
  %188 = icmp eq i32 %187, %182
  br i1 %188, label %198, label %200

189:                                              ; preds = %179
  %190 = icmp eq i32 %185, 0
  %191 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %192 = load i32, i32* %191, align 8
  br i1 %190, label %196, label %193

193:                                              ; preds = %189
  %194 = add i32 %192, -1
  %195 = icmp eq i32 %185, %194
  br i1 %195, label %198, label %200

196:                                              ; preds = %189
  %197 = icmp eq i32 %192, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %196, %193, %186
  call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.458"* %180) #16
  %199 = load i32, i32* %184, align 4
  br label %200

200:                                              ; preds = %186, %193, %196, %198
  %201 = phi i32 [ %185, %186 ], [ %185, %193 ], [ 0, %196 ], [ %199, %198 ]
  %202 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %180, i64 0, i32 0, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"** %202, align 8
  %204 = zext i32 %201 to i64
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %203, i64 %204
  %206 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %207 = load i32, i32* %206, align 8
  %208 = add i32 %207, -1
  %209 = icmp eq i32 %201, %208
  %210 = add i32 %201, 1
  %211 = select i1 %209, i32 0, i32 %210
  store i32 %211, i32* %184, align 4
  %212 = bitcast %"class.std::__1::unique_ptr.431"* %205 to i64*
  store i64 %5, i64* %212, align 8
  %213 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %214 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %214, i64 0, i32 12, i32 0, i32 0
  %216 = load %"class.blink::Element"*, %"class.blink::Element"** %215, align 8
  %217 = icmp ne %"class.blink::Element"* %216, null
  %218 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %219 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %218, align 8
  %220 = icmp eq %"class.blink::HTMLParserScriptRunner"* %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %200
  %222 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %219) #16
  br label %223

223:                                              ; preds = %221, %200
  %224 = phi i1 [ false, %200 ], [ %222, %221 ]
  %225 = or i1 %217, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %228 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %228, i64 0, i32 1
  %230 = load i8, i8* %229, align 4, !range !3
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %232, label %246

232:                                              ; preds = %226
  %233 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %234 = load i8, i8* %233, align 1, !range !3
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %236, label %246

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 13, i32 0, i32 0
  %238 = load %"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLParserScheduler"** %237, align 8
  %239 = icmp eq %"class.blink::HTMLParserScheduler"* %238, null
  br i1 %239, label %244, label %240

240:                                              ; preds = %236
  %241 = call zeroext i1 @_ZNK5blink19HTMLParserScheduler21IsScheduledForUnpauseEv(%"class.blink::HTMLParserScheduler"* nonnull %238) #16
  br i1 %241, label %246, label %242

242:                                              ; preds = %240
  %243 = load %"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLParserScheduler"** %237, align 8
  br label %244

244:                                              ; preds = %242, %236
  %245 = phi %"class.blink::HTMLParserScheduler"* [ %243, %242 ], [ null, %236 ]
  call void @_ZN5blink19HTMLParserScheduler18ScheduleForUnpauseEv(%"class.blink::HTMLParserScheduler"* %245) #16
  br label %246

246:                                              ; preds = %232, %223, %226, %240, %244, %15
  %247 = phi i64 [ 0, %232 ], [ 0, %240 ], [ 0, %244 ], [ %5, %15 ], [ 0, %226 ], [ 0, %223 ]
  %248 = icmp eq i8* %18, null
  br i1 %248, label %253, label %249

249:                                              ; preds = %246
  %250 = load i8, i8* %18, align 1
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %253, label %252

252:                                              ; preds = %249
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %17, i64 %16) #16
  br label %253

253:                                              ; preds = %246, %249, %252
  %254 = icmp eq i64 %247, 0
  br i1 %254, label %258, label %255

255:                                              ; preds = %253
  %256 = inttoptr i64 %247 to %"struct.blink::HTMLDocumentParser::TokenizedChunk"*
  call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %256) #16
  %257 = inttoptr i64 %247 to i8*
  call void @free(i8* %257) #16
  br label %258

258:                                              ; preds = %253, %255
  ret void
}

declare %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"*) local_unnamed_addr #4

declare void @_ZN5blink14DocumentLoader26DispatchLinkHeaderPreloadsEPKNS_19ViewportDescriptionENS_13PreloadHelper18MediaPreloadPolicyE(%"class.blink::DocumentLoader"*, %"struct.blink::ViewportDescription"*, i32) local_unnamed_addr #4

declare %"class.blink::PrefetchedSignedExchangeManager"* @_ZNK5blink14DocumentLoader34GetPrefetchedSignedExchangeManagerEv(%"class.blink::DocumentLoader"*) local_unnamed_addr #4

declare void @_ZN5blink31PrefetchedSignedExchangeManager33StartPrefetchedLinkHeaderPreloadsEv(%"class.blink::PrefetchedSignedExchangeManager"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.blink::CompactHTMLToken"* @_ZN3WTF6VectorIN5blink16CompactHTMLTokenELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.434"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.434", %"class.WTF::Vector.434"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.55, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.434", %"class.WTF::Vector.434"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %24, i64 %25
  ret %"class.blink::CompactHTMLToken"* %26
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZN5blink19HTMLParserScheduler18ScheduleForUnpauseEv(%"class.blink::HTMLParserScheduler"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser42DidReceiveEncodingDataFromBackgroundParserERKNS_20DocumentEncodingDataE(%"class.blink::HTMLDocumentParser"* nocapture readonly, %"class.blink::DocumentEncodingData"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  tail call void @_ZN5blink8Document15SetEncodingDataERKNS_20DocumentEncodingDataE(%"class.blink::Document"* %4, %"class.blink::DocumentEncodingData"* dereferenceable(16) %1) #16
  ret void
}

declare void @_ZN5blink8Document15SetEncodingDataERKNS_20DocumentEncodingDataE(%"class.blink::Document"*, %"class.blink::DocumentEncodingData"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser20ValidateSpeculationsENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEE(%"class.blink::HTMLDocumentParser"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.WTF::Vector.450", align 8
  %4 = ptrtoint %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %6, i64 0, i32 12, i32 0, i32 0
  %8 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %9 = icmp ne %"class.blink::Element"* %8, null
  %10 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %11 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %10, align 8
  %12 = icmp eq %"class.blink::HTMLParserScriptRunner"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %11) #16
  br label %15

15:                                               ; preds = %13, %2
  %16 = phi i1 [ false, %2 ], [ %14, %13 ]
  %17 = or i1 %9, %16
  br i1 %17, label %28, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %20 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %20, i64 0, i32 1
  %22 = load i8, i8* %21, align 4, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %26 = load i8, i8* %25, align 1, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %24, %15, %18
  %29 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 15
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.431"* %29 to i64*
  store i64 %4, i64* %32, align 8
  %33 = icmp eq %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %31, null
  br i1 %33, label %106, label %34

34:                                               ; preds = %28
  tail call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %31) #16
  %35 = bitcast %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %31 to i8*
  tail call void @free(i8* %35) #16
  br label %106

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr.67"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  store %"class.blink::HTMLTokenizer"* null, %"class.blink::HTMLTokenizer"** %38, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 6
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.std::__1::unique_ptr.44"* %41 to i64*
  %44 = load i64, i64* %43, align 8
  store %"class.blink::HTMLToken"* null, %"class.blink::HTMLToken"** %42, align 8
  %45 = inttoptr i64 %40 to %"class.blink::HTMLTokenizer"*
  %46 = icmp eq i64 %40, 0
  br i1 %46, label %94, label %47

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %92

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %92

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 7
  %57 = load i8, i8* %56, align 1, !range !3
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %92, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 4
  %61 = bitcast %"class.WTF::Vector.450"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #16
  %62 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %5, align 8
  call void @_ZN5blink24HTMLTreeBuilderSimulator8StateForEPNS_15HTMLTreeBuilderE(%"class.WTF::Vector.450"* nonnull sret %3, %"class.blink::HTMLTreeBuilder"* %62) #16
  %63 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %3, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %68, label %79

68:                                               ; preds = %59
  %69 = icmp eq i32 %64, 0
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::Vector.450"* %60 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = bitcast %"class.WTF::Vector.450"* %3 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = zext i32 %64 to i64
  %76 = shl nuw nsw i64 %75, 2
  %77 = call i32 @bcmp(i8* %72, i8* %74, i64 %76) #16
  %78 = icmp eq i32 %77, 0
  br label %79

79:                                               ; preds = %59, %68, %70
  %80 = phi i1 [ true, %68 ], [ false, %59 ], [ %78, %70 ]
  %81 = icmp eq i32 %66, 0
  br i1 %81, label %83, label %82, !prof !4

82:                                               ; preds = %79
  store i32 0, i32* %65, align 4
  br label %83

83:                                               ; preds = %82, %79
  %84 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %3, i64 0, i32 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %3, i64 0, i32 0, i32 1, i64 0
  %87 = bitcast i8* %86 to i32*
  %88 = icmp eq i32* %85, %87
  br i1 %88, label %91, label %89, !prof !5

89:                                               ; preds = %83
  %90 = bitcast %"class.WTF::Vector.450"* %3 to %"class.WTF::VectorBuffer.451"*
  call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.451"* nonnull %90, i32* %85) #16
  br label %91

91:                                               ; preds = %89, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #16
  br i1 %80, label %94, label %92

92:                                               ; preds = %55, %47, %51, %91
  %93 = inttoptr i64 %44 to %"class.blink::HTMLToken"*
  call void @_ZN5blink18HTMLDocumentParser32DiscardSpeculationsAndResumeFromENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEENS2_INS_9HTMLTokenENS4_IS7_EEEENS2_INS_13HTMLTokenizerENS4_ISA_EEEE(%"class.blink::HTMLDocumentParser"* %0, %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, %"class.blink::HTMLToken"* %93, %"class.blink::HTMLTokenizer"* nonnull %45)
  br label %106

94:                                               ; preds = %36, %91
  %95 = icmp eq i64 %44, 0
  br i1 %95, label %99, label %96

96:                                               ; preds = %94
  %97 = inttoptr i64 %44 to %"class.blink::HTMLToken"*
  call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %97) #16
  %98 = inttoptr i64 %44 to i8*
  call void @free(i8* %98) #16
  br label %99

99:                                               ; preds = %94, %96
  br i1 %46, label %102, label %100

100:                                              ; preds = %99
  call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %45) #16
  %101 = inttoptr i64 %40 to i8*
  call void @free(i8* %101) #16
  br label %102

102:                                              ; preds = %100, %99
  %103 = icmp eq %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %1) #16
  %105 = bitcast %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1 to i8*
  call void @free(i8* %105) #16
  br label %106

106:                                              ; preds = %92, %34, %28, %102, %104
  ret void
}

declare void @_ZN5blink24HTMLTreeBuilderSimulator8StateForEPNS_15HTMLTreeBuilderE(%"class.WTF::Vector.450"* sret, %"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser32DiscardSpeculationsAndResumeFromENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEENS2_INS_9HTMLTokenENS4_IS7_EEEENS2_INS_13HTMLTokenizerENS4_ISA_EEEE(%"class.blink::HTMLDocumentParser"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"class.blink::HTMLToken"*, %"class.blink::HTMLTokenizer"*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.WTF::DequeIterator", align 8
  %7 = alloca %"class.WTF::Vector.450", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.base::OnceCallback.757", align 8
  %11 = ptrtoint %"class.blink::HTMLToken"* %2 to i64
  %12 = ptrtoint %"class.blink::HTMLTokenizer"* %3 to i64
  %13 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #16
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %18

18:                                               ; preds = %15, %4
  %19 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %13) #16
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %22 = bitcast i64* %21 to %"class.blink::BackgroundHTMLParser"**
  %23 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %22, align 8
  br label %24

24:                                               ; preds = %18, %20
  %25 = phi %"class.blink::BackgroundHTMLParser"* [ %23, %20 ], [ null, %18 ]
  call void @_ZN5blink20BackgroundHTMLParser11ClearParserEv(%"class.blink::BackgroundHTMLParser"* %25) #16
  %26 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16
  %27 = bitcast %"class.WTF::DequeIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %6, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %6, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 1
  %31 = bitcast %"class.WTF::DequeIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  %32 = load i32, i32* %30, align 8, !noalias !26
  store %"class.WTF::Deque.458"* %26, %"class.WTF::Deque.458"** %28, align 8, !alias.scope !26
  store i32 %32, i32* %29, align 8, !alias.scope !26
  %33 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 2
  %34 = load i32, i32* %33, align 4, !noalias !29
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %189

36:                                               ; preds = %189, %24
  %37 = phi i64 [ 0, %24 ], [ %197, %189 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #16
  %38 = load i64, i64* @_ZN5blinkL35g_discarded_token_count_for_testingE, align 8
  %39 = add i64 %38, %37
  store i64 %39, i64* @_ZN5blinkL35g_discarded_token_count_for_testingE, align 8
  call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.458"* %26) #16
  store i32 0, i32* %30, align 8
  store i32 0, i32* %33, align 4
  %40 = bitcast %"class.WTF::Deque.458"* %26 to i8**
  %41 = load i8*, i8** %40, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #16
  %42 = bitcast %"class.WTF::Deque.458"* %26 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 23
  store %"class.blink::CompactHTMLToken"* null, %"class.blink::CompactHTMLToken"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20
  %46 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %73, label %49

49:                                               ; preds = %36
  %50 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %69, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %45, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %54, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %55, i64 %56
  br label %58

58:                                               ; preds = %65, %53
  %59 = phi %"class.std::__1::unique_ptr.186"* [ %66, %65 ], [ %55, %53 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::PreloadRequest"*, %"class.blink::PreloadRequest"** %60, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %60, align 8
  %62 = icmp eq %"class.blink::PreloadRequest"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  call void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"* nonnull %61) #16
  %64 = bitcast %"class.blink::PreloadRequest"* %61 to i8*
  call void @free(i8* %64) #16
  br label %65

65:                                               ; preds = %63, %58
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %59, i64 1
  %67 = icmp eq %"class.std::__1::unique_ptr.186"* %66, %57
  br i1 %67, label %68, label %58

68:                                               ; preds = %65
  store i32 0, i32* %50, align 4
  br label %69

69:                                               ; preds = %68, %49
  %70 = bitcast %"class.WTF::Vector.183"* %45 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast %"class.WTF::Vector.183"* %45 to i64*
  store atomic i64 0, i64* %72 monotonic, align 8
  store i32 0, i32* %46, align 8
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #16
  br label %73

73:                                               ; preds = %36, %69
  %74 = call noalias i8* @malloc(i64 72) #16
  %75 = getelementptr inbounds i8, i8* %74, i64 32
  %76 = getelementptr inbounds i8, i8* %74, i64 48
  %77 = bitcast i8* %75 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 64, i1 false) #16
  store i8* %76, i8** %77, align 8
  %78 = getelementptr inbounds i8, i8* %74, i64 40
  %79 = bitcast i8* %78 to i32*
  store i32 1, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %74, i64 44
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds i8, i8* %74, i64 64
  %83 = bitcast i8* %82 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %84 = ptrtoint i8* %74 to i64
  %85 = bitcast i8* %74 to %"class.blink::PersistentBase.2958"*
  call void @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.2958"* %85, %"class.blink::HTMLDocumentParser"* %0) #16
  %86 = getelementptr inbounds i8, i8* %74, i64 16
  %87 = bitcast i8* %86 to %"class.blink::HTMLToken"**
  %88 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %87, align 8
  %89 = bitcast i8* %86 to i64*
  store i64 %11, i64* %89, align 8
  %90 = icmp eq %"class.blink::HTMLToken"* %88, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %73
  call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %88) #16
  %92 = bitcast %"class.blink::HTMLToken"* %88 to i8*
  call void @free(i8* %92) #16
  br label %93

93:                                               ; preds = %73, %91
  %94 = getelementptr inbounds i8, i8* %74, i64 24
  %95 = bitcast i8* %94 to %"class.blink::HTMLTokenizer"**
  %96 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %95, align 8
  %97 = bitcast i8* %94 to i64*
  store i64 %12, i64* %97, align 8
  %98 = icmp eq %"class.blink::HTMLTokenizer"* %96, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %96) #16
  %100 = bitcast %"class.blink::HTMLTokenizer"* %96 to i8*
  call void @free(i8* %100) #16
  br label %101

101:                                              ; preds = %93, %99
  %102 = bitcast %"class.WTF::Vector.450"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #16
  %103 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %104 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %103, align 8
  call void @_ZN5blink24HTMLTreeBuilderSimulator8StateForEPNS_15HTMLTreeBuilderE(%"class.WTF::Vector.450"* nonnull sret %7, %"class.blink::HTMLTreeBuilder"* %104) #16
  %105 = bitcast i8* %75 to %"class.WTF::VectorBuffer.451"*
  %106 = bitcast %"class.WTF::Vector.450"* %7 to %"class.WTF::VectorBuffer.451"*
  call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.451"* %105, %"class.WTF::VectorBuffer.451"* nonnull dereferenceable(24) %106, i64 0, i64 0) #16
  %107 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %7, i64 0, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %111, label %110, !prof !4

110:                                              ; preds = %101
  store i32 0, i32* %107, align 4
  br label %111

111:                                              ; preds = %110, %101
  %112 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %7, i64 0, i32 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %7, i64 0, i32 0, i32 1, i64 0
  %115 = bitcast i8* %114 to i32*
  %116 = icmp eq i32* %113, %115
  br i1 %116, label %118, label %117, !prof !5

117:                                              ; preds = %111
  call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.451"* nonnull %106, i32* %113) #16
  br label %118

118:                                              ; preds = %111, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #16
  %119 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 5
  %120 = load i32, i32* %119, align 8
  %121 = getelementptr inbounds i8, i8* %74, i64 56
  %122 = bitcast i8* %121 to i32*
  store i32 %120, i32* %122, align 8
  %123 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 6
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds i8, i8* %74, i64 60
  %126 = bitcast i8* %125 to i32*
  store i32 %124, i32* %126, align 4
  %127 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #16
  %128 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0
  %129 = call %"class.WTF::StringImpl"* @_ZNK5blink15SegmentedString8ToStringEv(%"class.blink::SegmentedString"* %128) #16
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %130, align 8
  %131 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* nonnull %8) #16
  %132 = ptrtoint %"class.WTF::StringImpl"* %131 to i64
  %133 = bitcast i8* %82 to i64*
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %132, i64* %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %118
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #16
  br label %149

149:                                              ; preds = %148, %145, %118
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #16
  br label %165

165:                                              ; preds = %164, %161, %149
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #16
  call void @_ZN5blink15SegmentedString5ClearEv(%"class.blink::SegmentedString"* %128) #16
  %166 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  %167 = bitcast %"class.base::SingleThreadTaskRunner"** %166 to %"class.base::TaskRunner"**
  %168 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %167, align 8
  %169 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 864) #16
  %170 = call i8* @_Znwm(i64 72) #17, !noalias !32
  %171 = bitcast i8* %170 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %171, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS4_10CheckpointENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_10CheckpointENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS4_10CheckpointENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE) #16, !noalias !32
  %172 = getelementptr inbounds i8, i8* %170, i64 32
  %173 = bitcast i8* %172 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Checkpoint"*)* @_ZN5blink20BackgroundHTMLParser10ResumeFromENSt3__110unique_ptrINS0_10CheckpointENS1_14default_deleteIS3_EEEE to i64), i64 0>, <2 x i64>* %173, align 8, !noalias !32
  %174 = getelementptr inbounds i8, i8* %170, i64 48
  %175 = bitcast i8* %174 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %175, %"class.base::internal::WeakReference"* dereferenceable(8) %13) #16, !noalias !32
  %176 = getelementptr inbounds i8, i8* %170, i64 56
  %177 = bitcast i8* %176 to i64*
  %178 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %179 = load i64, i64* %178, align 8, !noalias !32
  store i64 %179, i64* %177, align 8, !noalias !32
  %180 = getelementptr inbounds i8, i8* %170, i64 64
  %181 = bitcast i8* %180 to i64*
  store i64 %84, i64* %181, align 8, !noalias !32
  %182 = bitcast %"class.base::OnceCallback.757"* %10 to i8**
  store i8* %170, i8** %182, align 8, !alias.scope !32
  %183 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %168, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback.757"* nonnull %10) #16
  %184 = getelementptr inbounds %"class.base::OnceCallback.757", %"class.base::OnceCallback.757"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %184) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169) #16
  %185 = icmp eq %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %165
  call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %1) #16
  %187 = bitcast %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1 to i8*
  call void @free(i8* %187) #16
  br label %188

188:                                              ; preds = %165, %186
  ret void

189:                                              ; preds = %24, %189
  %190 = phi i64 [ %197, %189 ], [ 0, %24 ]
  %191 = call dereferenceable(8) %"class.std::__1::unique_ptr.431"* @_ZNK3WTF13DequeIteratorINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"* nonnull %6)
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %191, i64 0, i32 0, i32 0, i32 0
  %193 = load %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %192, align 8
  %194 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %193, i64 0, i32 0, i32 0, i32 0, i32 2
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  %197 = add i64 %190, %196
  %198 = load i32, i32* %29, align 8
  %199 = load %"class.WTF::Deque.458"*, %"class.WTF::Deque.458"** %28, align 8
  %200 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %199, i64 0, i32 0, i32 0, i32 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = add i32 %201, -1
  %203 = icmp eq i32 %198, %202
  %204 = add i32 %198, 1
  %205 = select i1 %203, i32 0, i32 %204
  store i32 %205, i32* %29, align 8
  %206 = icmp eq i32 %205, %34
  br i1 %206, label %36, label %189
}

declare void @_ZN5blink20BackgroundHTMLParser11ClearParserEv(%"class.blink::BackgroundHTMLParser"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.431"* @_ZNK3WTF13DequeIteratorINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeIterator"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::DequeIterator", %"class.WTF::DequeIterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::Deque.458"*, %"class.WTF::Deque.458"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = icmp eq i32 %8, %12
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  store i8* null, i8** %6, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i64 0, i64 0), i8* %17, i8* %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.63, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %3) #16
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %26 = load %"class.WTF::Deque.458"*, %"class.WTF::Deque.458"** %9, align 8
  %27 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"** %27, align 8
  %29 = load i32, i32* %7, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %28, i64 %30
  ret %"class.std::__1::unique_ptr.431"* %31
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15SegmentedString8ToStringEv(%"class.blink::SegmentedString"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #4

declare void @_ZN5blink15SegmentedString5ClearEv(%"class.blink::SegmentedString"*) local_unnamed_addr #4

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.757"*) local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

declare void @_ZN5blink20BackgroundHTMLParser10ResumeFromENSt3__110unique_ptrINS0_10CheckpointENS1_14default_deleteIS3_EEEE(%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Checkpoint"*) #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink18HTMLDocumentParser41ProcessTokenizedChunkFromBackgroundParserENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEEPb(%"class.blink::HTMLDocumentParser"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, i8* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.blink::AtomicHTMLToken", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback.757", align 8
  %8 = ptrtoint %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1 to i64
  %9 = load atomic i64, i64* @_ZZN5blink18HTMLDocumentParser41ProcessTokenizedChunkFromBackgroundParserENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEEPbE28trace_event_unique_atomic874 monotonic, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %15, !prof !4

12:                                               ; preds = %3
  %13 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0)) #16
  %14 = ptrtoint i8* %13 to i64
  store atomic volatile i64 %14, i64* @_ZZN5blink18HTMLDocumentParser41ProcessTokenizedChunkFromBackgroundParserENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEEPbE28trace_event_unique_atomic874 monotonic, align 8
  br label %15

15:                                               ; preds = %12, %3
  %16 = phi i8* [ %13, %12 ], [ %10, %3 ]
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, 25
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %26, label %20, !prof !5

20:                                               ; preds = %15
  %21 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %22 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  %23 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %24 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %24, i64* %23, align 8
  %25 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i64 %8, i32 %21, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 2176) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i8* [ null, %15 ], [ %16, %20 ]
  %28 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %15 ], [ getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i64 0, i64 0), %20 ]
  %29 = phi i64 [ -6148914691236517206, %15 ], [ %25, %20 ]
  %30 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 30
  %31 = load i8, i8* %30, align 1, !range !3
  store i8 1, i8* %30, align 1
  %32 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  %33 = bitcast %"class.base::SingleThreadTaskRunner"** %32 to %"class.base::TaskRunner"**
  %34 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %33, align 8
  %35 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 893) #16
  %36 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 5
  %37 = call i8* @_Znwm(i64 72) #17, !noalias !39
  %38 = bitcast i8* %37 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %38, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #16, !noalias !39
  %39 = getelementptr inbounds i8, i8* %37, i64 32
  %40 = bitcast i8* %39 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::BackgroundHTMLParser"*, i32)* @_ZN5blink20BackgroundHTMLParser26StartedChunkWithCheckpointEj to i64), i64 0>, <2 x i64>* %40, align 8, !noalias !39
  %41 = getelementptr inbounds i8, i8* %37, i64 48
  %42 = bitcast i8* %41 to %"class.base::internal::WeakReference"*
  %43 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %42, %"class.base::internal::WeakReference"* dereferenceable(8) %43) #16, !noalias !39
  %44 = getelementptr inbounds i8, i8* %37, i64 56
  %45 = bitcast i8* %44 to i64*
  %46 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %47 = load i64, i64* %46, align 8, !noalias !39
  store i64 %47, i64* %45, align 8, !noalias !39
  %48 = getelementptr inbounds i8, i8* %37, i64 64
  %49 = bitcast i8* %48 to i32*
  %50 = load i32, i32* %36, align 4, !noalias !39
  store i32 %50, i32* %49, align 4, !noalias !39
  %51 = bitcast %"class.base::OnceCallback.757"* %7 to i8**
  store i8* %37, i8** %51, align 8, !alias.scope !39
  %52 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %34, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback.757"* nonnull %7) #16
  %53 = getelementptr inbounds %"class.base::OnceCallback.757", %"class.base::OnceCallback.757"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #16
  %54 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %54, align 8
  %56 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %55, i64 %58
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %151, label %61

61:                                               ; preds = %26
  %62 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1, i64 0, i32 7
  %63 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 14
  %64 = bitcast %"class.WTF::TextPosition"* %63 to i64*
  %65 = bitcast %"class.blink::AtomicHTMLToken"* %4 to i8*
  %66 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  %68 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %69 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 23
  %71 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  br label %75

73:                                               ; preds = %144
  %74 = icmp eq %"class.blink::CompactHTMLToken"* %149, %59
  br i1 %74, label %151, label %75

75:                                               ; preds = %61, %73
  %76 = phi %"class.blink::CompactHTMLToken"* [ %55, %61 ], [ %149, %73 ]
  %77 = phi i64 [ 0, %61 ], [ %88, %73 ]
  %78 = load i8, i8* %62, align 8, !range !3
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %87

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %76, i64 0, i32 0
  %82 = load i8, i8* %81, align 8
  %83 = and i8 %82, 14
  %84 = icmp eq i8 %83, 2
  %85 = zext i1 %84 to i64
  %86 = add i64 %77, %85
  br label %87

87:                                               ; preds = %80, %75
  %88 = phi i64 [ %77, %75 ], [ %86, %80 ]
  %89 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %76, i64 0, i32 3
  %90 = bitcast %"class.WTF::TextPosition"* %89 to i64*
  %91 = load i64, i64* %90, align 4
  store i64 %91, i64* %64, align 8
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %65) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 56, i1 false) #16
  call void @_ZN5blink15AtomicHTMLTokenC2ERKNS_16CompactHTMLTokenE(%"class.blink::AtomicHTMLToken"* nonnull %4, %"class.blink::CompactHTMLToken"* dereferenceable(40) %76) #16
  %92 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %66, align 8
  call void @_ZN5blink15HTMLTreeBuilder13ConstructTreeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %92, %"class.blink::AtomicHTMLToken"* nonnull %4) #16
  %93 = load i8, i8* %67, align 2, !range !3
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %87
  store i8 0, i8* %67, align 2
  store i8 1, i8* %68, align 1
  br label %96

96:                                               ; preds = %87, %95
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %65) #16
  %97 = load i32, i32* %69, align 8
  %98 = icmp sgt i32 %97, 1
  br i1 %98, label %151, label %99

99:                                               ; preds = %96
  %100 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %70, align 8
  %101 = icmp ne %"class.blink::CompactHTMLToken"* %100, null
  %102 = icmp eq %"class.blink::CompactHTMLToken"* %76, %100
  %103 = and i1 %101, %102
  br i1 %103, label %104, label %105

104:                                              ; preds = %99
  store %"class.blink::CompactHTMLToken"* null, %"class.blink::CompactHTMLToken"** %70, align 8
  call void @_ZN5blink18HTMLDocumentParser19FetchQueuedPreloadsEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %105

105:                                              ; preds = %99, %104
  %106 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %66, align 8
  %107 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %106, i64 0, i32 12, i32 0, i32 0
  %108 = load %"class.blink::Element"*, %"class.blink::Element"** %107, align 8
  %109 = icmp ne %"class.blink::Element"* %108, null
  %110 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %71, align 8
  %111 = icmp eq %"class.blink::HTMLParserScriptRunner"* %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %105
  %113 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %110) #16
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i1 [ false, %105 ], [ %113, %112 ]
  %116 = or i1 %109, %115
  br i1 %116, label %125, label %117

117:                                              ; preds = %114
  %118 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %72, align 8
  %119 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %118, i64 0, i32 1
  %120 = load i8, i8* %119, align 4, !range !3
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %117
  %123 = load i8, i8* %68, align 1, !range !3
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %144, label %125

125:                                              ; preds = %122, %114, %117
  %126 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %66, align 8
  %127 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %126, i64 0, i32 12, i32 0, i32 0
  %128 = load %"class.blink::Element"*, %"class.blink::Element"** %127, align 8
  %129 = icmp ne %"class.blink::Element"* %128, null
  %130 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %71, align 8
  %131 = icmp eq %"class.blink::HTMLParserScriptRunner"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %125
  %133 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %130) #16
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i1 [ false, %125 ], [ %133, %132 ]
  %136 = or i1 %129, %135
  br i1 %136, label %142, label %137

137:                                              ; preds = %134
  %138 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %72, align 8
  %139 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %138, i64 0, i32 1
  %140 = load i8, i8* %139, align 4, !range !3
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %143, label %142

142:                                              ; preds = %137, %134
  call void @_ZN5blink18HTMLDocumentParser30RunScriptsForPausedTreeBuilderEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %143

143:                                              ; preds = %137, %142
  call void @_ZN5blink18HTMLDocumentParser20ValidateSpeculationsENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEE(%"class.blink::HTMLDocumentParser"* %0, %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %1)
  br label %151

144:                                              ; preds = %122
  %145 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %76, i64 0, i32 0
  %146 = load i8, i8* %145, align 8
  %147 = and i8 %146, 15
  %148 = icmp eq i8 %147, 6
  %149 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %76, i64 1
  br i1 %148, label %150, label %73

150:                                              ; preds = %144
  call void @_ZN5blink18HTMLDocumentParser20PrepareToStopParsingEv(%"class.blink::HTMLDocumentParser"* %0)
  store i8 1, i8* %2, align 1
  br label %151

151:                                              ; preds = %73, %96, %26, %150, %143
  %152 = phi i64 [ 0, %143 ], [ %8, %150 ], [ %8, %26 ], [ %8, %96 ], [ %8, %73 ]
  %153 = phi i64 [ %88, %143 ], [ %88, %150 ], [ 0, %26 ], [ %88, %96 ], [ %88, %73 ]
  %154 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = icmp sgt i32 %155, 1
  br i1 %156, label %169, label %157

157:                                              ; preds = %151
  %158 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %159 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %159, i64 0, i32 3
  %161 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %159, i64 0, i32 3, i32 8, i32 2, i32 2
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %168

164:                                              ; preds = %157
  %165 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %159, i64 0, i32 3, i32 7, i32 0, i32 0, i32 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %169, label %168

168:                                              ; preds = %164, %157
  call void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"* %160, i32 1) #16
  call void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"* %160) #16
  br label %169

169:                                              ; preds = %168, %164, %151
  store i8 0, i8* %30, align 8
  %170 = icmp eq i64 %152, 0
  br i1 %170, label %174, label %171

171:                                              ; preds = %169
  %172 = inttoptr i64 %152 to %"struct.blink::HTMLDocumentParser::TokenizedChunk"*
  call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %172) #16
  %173 = inttoptr i64 %152 to i8*
  call void @free(i8* %173) #16
  br label %174

174:                                              ; preds = %169, %171
  %175 = icmp eq i8* %30, null
  br i1 %175, label %177, label %176

176:                                              ; preds = %174
  store i8 %31, i8* %30, align 1
  br label %177

177:                                              ; preds = %174, %176
  %178 = icmp eq i8* %27, null
  br i1 %178, label %183, label %179

179:                                              ; preds = %177
  %180 = load i8, i8* %27, align 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %183, label %182

182:                                              ; preds = %179
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %27, i8* %28, i64 %29) #16
  br label %183

183:                                              ; preds = %182, %179, %177
  ret i64 %153
}

declare i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8*) local_unnamed_addr #4

declare void @_ZN5blink20BackgroundHTMLParser26StartedChunkWithCheckpointEj(%"class.blink::BackgroundHTMLParser"*, i32) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser33ConstructTreeFromCompactHTMLTokenERKNS_16CompactHTMLTokenE(%"class.blink::HTMLDocumentParser"* nocapture, %"class.blink::CompactHTMLToken"* dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::AtomicHTMLToken", align 8
  %4 = bitcast %"class.blink::AtomicHTMLToken"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  call void @_ZN5blink15AtomicHTMLTokenC2ERKNS_16CompactHTMLTokenE(%"class.blink::AtomicHTMLToken"* nonnull %3, %"class.blink::CompactHTMLToken"* dereferenceable(40) %1)
  %5 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %5, align 8
  call void @_ZN5blink15HTMLTreeBuilder13ConstructTreeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %6, %"class.blink::AtomicHTMLToken"* nonnull %3) #16
  %7 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  store i8 0, i8* %7, align 2
  %11 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  store i8 1, i8* %11, align 1
  br label %12

12:                                               ; preds = %2, %10
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser19FetchQueuedPreloadsEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !5

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.44, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([40 x i8], [40 x i8]* @.str.44, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  %16 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 25
  %17 = load i8, i8* %16, align 4, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 23
  %21 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %20, align 8
  %22 = icmp eq %"class.blink::CompactHTMLToken"* %21, null
  br i1 %22, label %23, label %47

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 47, i32 0, i32 0
  %27 = load %"class.blink::Element"*, %"class.blink::Element"** %26, align 8
  %28 = icmp eq %"class.blink::Element"* %27, null
  br i1 %28, label %47, label %29

29:                                               ; preds = %12, %23
  %30 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %41, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20
  %35 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 18, i32 0, i32 0
  %36 = load %"class.blink::HTMLResourcePreloader"*, %"class.blink::HTMLResourcePreloader"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLResourcePreloader", %"class.blink::HTMLResourcePreloader"* %36, i64 0, i32 0
  %38 = bitcast %"class.blink::HTMLResourcePreloader"* %36 to void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)***
  %39 = load void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)**, void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)*** %38, align 8
  %40 = load void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)*, void (%"class.blink::ResourcePreloader"*, %"class.WTF::Vector.183"*)** %39, align 8
  call void %40(%"class.blink::ResourcePreloader"* %37, %"class.WTF::Vector.183"* dereferenceable(16) %34) #16
  br label %41

41:                                               ; preds = %33, %29
  %42 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = call %"class.blink::SubresourceRedirectOriginsPreloader"* @_ZN5blink35SubresourceRedirectOriginsPreloader4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %43) #16
  %45 = icmp eq %"class.blink::SubresourceRedirectOriginsPreloader"* %44, null
  br i1 %45, label %47, label %46

46:                                               ; preds = %41
  call void @_ZN5blink35SubresourceRedirectOriginsPreloader17PreloadOriginsNowEv(%"class.blink::SubresourceRedirectOriginsPreloader"* nonnull %44) #16
  br label %47

47:                                               ; preds = %46, %41, %19, %23
  %48 = icmp eq i8* %15, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %47
  %50 = load i8, i8* %15, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #16
  br label %53

53:                                               ; preds = %47, %49, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18HTMLDocumentParser19IsWaitingForScriptsEv(%"class.blink::HTMLDocumentParser"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %3, i64 0, i32 12, i32 0, i32 0
  %5 = load %"class.blink::Element"*, %"class.blink::Element"** %4, align 8
  %6 = icmp ne %"class.blink::Element"* %5, null
  %7 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %8 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %7, align 8
  %9 = icmp eq %"class.blink::HTMLParserScriptRunner"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = tail call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %8) #16
  br label %12

12:                                               ; preds = %1, %10
  %13 = phi i1 [ false, %1 ], [ %11, %10 ]
  %14 = or i1 %6, %13
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %17, i64 0, i32 1
  %19 = load i8, i8* %18, align 4, !range !3
  %20 = icmp ne i8 %19, 0
  br label %21

21:                                               ; preds = %12, %15
  %22 = phi i1 [ true, %12 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink5probe9ParseHTMLC1EPNS_8DocumentEPNS_18HTMLDocumentParserE(%"class.blink::probe::ParseHTML"*, %"class.blink::Document"*, %"class.blink::HTMLDocumentParser"*) unnamed_addr #4

declare void @_ZN5blink23SpeculationsPumpSessionC1ERj(%"class.blink::SpeculationsPumpSession"*, i32* dereferenceable(4)) unnamed_addr #4

declare void @_ZN5blink23SpeculationsPumpSession18AddedElementTokensEm(%"class.blink::SpeculationsPumpSession"*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink19HTMLParserScheduler13YieldIfNeededERKNS_23SpeculationsPumpSessionEb(%"class.blink::HTMLParserScheduler"*, %"class.blink::SpeculationsPumpSession"* dereferenceable(24), i1 zeroext) local_unnamed_addr #4

declare void @_ZN5blink17HTMLParserMetrics8AddChunkEN4base9TimeDeltaEj(%"class.blink::HTMLParserMetrics"*, i64, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink23SpeculationsPumpSessionD1Ev(%"class.blink::SpeculationsPumpSession"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5probe9ParseHTMLD1Ev(%"class.blink::probe::ParseHTML"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser29ForcePlaintextForTextDocumentEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 25
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %8 = load i8, i8* %7, align 2, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @_ZN5blink18HTMLDocumentParser21StartBackgroundParserEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %11

11:                                               ; preds = %6, %10
  %12 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  %13 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %12) #16
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  br label %17

17:                                               ; preds = %14, %11
  %18 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %12) #16
  br i1 %18, label %19, label %23

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %21 = bitcast i64* %20 to %"class.blink::BackgroundHTMLParser"**
  %22 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %21, align 8
  br label %23

23:                                               ; preds = %17, %19
  %24 = phi %"class.blink::BackgroundHTMLParser"* [ %22, %19 ], [ null, %17 ]
  call void @_ZN5blink20BackgroundHTMLParser29ForcePlaintextForTextDocumentEv(%"class.blink::BackgroundHTMLParser"* %24) #16
  br label %29

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %27 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLTokenizer", %"class.blink::HTMLTokenizer"* %27, i64 0, i32 0
  store i32 6, i32* %28, align 8
  br label %29

29:                                               ; preds = %25, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser21StartBackgroundParserEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.std::__1::unique_ptr.2979", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = alloca %"struct.blink::MediaValuesCached::MediaValuesCachedData", align 8
  %7 = load atomic i64, i64* @_ZZN5blink18HTMLDocumentParser21StartBackgroundParserEvE29trace_event_unique_atomic1280 monotonic, align 8
  %8 = inttoptr i64 %7 to i8*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %13, !prof !4

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0)) #16
  %12 = ptrtoint i8* %11 to i64
  store atomic volatile i64 %12, i64* @_ZZN5blink18HTMLDocumentParser21StartBackgroundParserEvE29trace_event_unique_atomic1280 monotonic, align 8
  br label %13

13:                                               ; preds = %10, %1
  %14 = phi i8* [ %11, %10 ], [ %8, %1 ]
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, 25
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %24, label %18, !prof !5

18:                                               ; preds = %13
  %19 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %20 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %22 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %22, i64* %21, align 8
  %23 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %14, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %19, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %24

24:                                               ; preds = %13, %18
  %25 = phi i8* [ null, %13 ], [ %14, %18 ]
  %26 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %13 ], [ getelementptr inbounds ([42 x i8], [42 x i8]* @.str.22, i64 0, i64 0), %18 ]
  %27 = phi i64 [ -6148914691236517206, %13 ], [ %23, %18 ]
  %28 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  store i8 1, i8* %28, align 2
  %29 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %30) #16
  %32 = icmp eq %"class.blink::DocumentLoader"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %24
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %35 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %34, i64 0, i32 59, i32 0, i32 0
  %36 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %35, align 8
  call void @_ZN5blink11StyleEngine14UpdateViewportEv(%"class.blink::StyleEngine"* %36) #16
  br label %37

37:                                               ; preds = %24, %33
  %38 = bitcast %"class.std::__1::unique_ptr.2979"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.2979", %"class.std::__1::unique_ptr.2979"* %4, i64 0, i32 0, i32 0, i32 0
  %40 = call noalias i8* @malloc(i64 32) #16
  %41 = bitcast i8* %40 to %"struct.blink::BackgroundHTMLParser::Configuration"*
  call void @_ZN5blink20BackgroundHTMLParser13ConfigurationC1Ev(%"struct.blink::BackgroundHTMLParser::Configuration"* %41) #16
  %42 = bitcast %"class.std::__1::unique_ptr.2979"* %4 to i8**
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 3, i32 0
  %44 = bitcast i8* %43 to i16*
  %45 = bitcast i8* %40 to i16*
  %46 = load i16, i16* %44, align 1
  store i16 %46, i16* %45, align 8
  %47 = getelementptr inbounds i8, i8* %40, i64 8
  %48 = bitcast i8* %47 to %"class.blink::PersistentBase.2958"*
  call void @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.2958"* %48, %"class.blink::HTMLDocumentParser"* %0) #16
  %49 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0
  %50 = call %"class.blink::TextResourceDecoder"* @_ZN5blink25DecodedDataDocumentParser11TakeDecoderEv(%"class.blink::DecodedDataDocumentParser"* %49) #16
  %51 = ptrtoint %"class.blink::TextResourceDecoder"* %50 to i64
  %52 = getelementptr inbounds i8, i8* %40, i64 24
  %53 = bitcast i8* %52 to %"class.blink::TextResourceDecoder"**
  %54 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %53, align 8
  %55 = bitcast i8* %52 to i64*
  store i64 %51, i64* %55, align 8
  %56 = icmp eq %"class.blink::TextResourceDecoder"* %54, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %37
  call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %54) #16
  %58 = bitcast %"class.blink::TextResourceDecoder"* %54 to i8*
  call void @free(i8* %58) #16
  %59 = load %"struct.blink::BackgroundHTMLParser::Configuration"*, %"struct.blink::BackgroundHTMLParser::Configuration"** %39, align 8
  br label %60

60:                                               ; preds = %57, %37
  %61 = phi %"struct.blink::BackgroundHTMLParser::Configuration"* [ %59, %57 ], [ %41, %37 ]
  %62 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #16
  store %"struct.blink::BackgroundHTMLParser::Configuration"* null, %"struct.blink::BackgroundHTMLParser::Configuration"** %39, align 8
  %63 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  %64 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %63, align 8
  %65 = icmp eq %"class.base::SingleThreadTaskRunner"* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %64, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 1 monotonic
  br label %69

69:                                               ; preds = %60, %66
  call void @_ZN5blink20BackgroundHTMLParser6CreateENSt3__110unique_ptrINS0_13ConfigurationENS1_14default_deleteIS3_EEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* nonnull sret %5, %"struct.blink::BackgroundHTMLParser::Configuration"* %61, %"class.base::SingleThreadTaskRunner"* %64) #16
  %70 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17
  %71 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.base::WeakPtr"* %5 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %71, align 8
  %74 = bitcast %"class.base::WeakPtr"* %70 to i64*
  %75 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %75, align 8
  store i64 %73, i64* %74, align 8
  %77 = icmp eq %"class.base::internal::WeakReference::Flag"* %76, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw sub i32* %79, i32 1 acq_rel
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %82, label %84

82:                                               ; preds = %78
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %76) #16
  %83 = bitcast %"class.base::internal::WeakReference::Flag"* %76 to i8*
  call void @_ZdlPv(i8* %83) #17
  br label %84

84:                                               ; preds = %69, %78, %82
  %85 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %88) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #16
  %89 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %90 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %89) #16
  %91 = icmp eq %"class.blink::ExecutionContext"* %90, null
  %92 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %90, i64 0, i32 4
  %93 = select i1 %91, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %92
  %94 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20PriorityHintsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %93) #16
  %95 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %70, i64 0, i32 0, i32 0
  %96 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %95) #16
  br i1 %96, label %100, label %97

97:                                               ; preds = %84
  %98 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %99 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #16
  br label %100

100:                                              ; preds = %97, %84
  %101 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %95) #16
  br i1 %101, label %102, label %105

102:                                              ; preds = %100
  %103 = bitcast i64* %87 to %"class.blink::BackgroundHTMLParser"**
  %104 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %103, align 8
  br label %105

105:                                              ; preds = %100, %102
  %106 = phi %"class.blink::BackgroundHTMLParser"* [ %104, %102 ], [ null, %100 ]
  %107 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %108 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %107, i64 0, i32 19
  %109 = call noalias i8* @malloc(i64 88) #16
  %110 = bitcast i8* %109 to %"struct.blink::CachedDocumentParameters"*
  call void @_ZN5blink24CachedDocumentParametersC1EPNS_8DocumentE(%"struct.blink::CachedDocumentParameters"* %110, %"class.blink::Document"* %107) #16
  %111 = bitcast %"struct.blink::MediaValuesCached::MediaValuesCachedData"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %111) #16
  %112 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  call void @_ZN5blink17MediaValuesCached21MediaValuesCachedDataC1ERNS_8DocumentE(%"struct.blink::MediaValuesCached::MediaValuesCachedData"* nonnull %6, %"class.blink::Document"* dereferenceable(2848) %112) #16
  call void @_ZN5blink20BackgroundHTMLParser4InitERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS4_14default_deleteIS6_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataEb(%"class.blink::BackgroundHTMLParser"* %106, %"class.blink::KURL"* dereferenceable(112) %108, %"struct.blink::CachedDocumentParameters"* %110, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* nonnull dereferenceable(112) %6, i1 zeroext %94) #16
  %113 = getelementptr inbounds %"struct.blink::MediaValuesCached::MediaValuesCachedData", %"struct.blink::MediaValuesCached::MediaValuesCachedData"* %6, i64 0, i32 16, i32 0, i32 0
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %105
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #16
  br label %129

129:                                              ; preds = %105, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %111) #16
  %130 = load %"struct.blink::BackgroundHTMLParser::Configuration"*, %"struct.blink::BackgroundHTMLParser::Configuration"** %39, align 8
  store %"struct.blink::BackgroundHTMLParser::Configuration"* null, %"struct.blink::BackgroundHTMLParser::Configuration"** %39, align 8
  %131 = icmp eq %"struct.blink::BackgroundHTMLParser::Configuration"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %129
  %133 = bitcast %"class.std::__1::unique_ptr.2979"* %4 to %"struct.std::__1::default_delete.2983"*
  call void @_ZNKSt3__114default_deleteIN5blink20BackgroundHTMLParser13ConfigurationEEclEPS3_(%"struct.std::__1::default_delete.2983"* nonnull %133, %"struct.blink::BackgroundHTMLParser::Configuration"* nonnull %130) #16
  br label %134

134:                                              ; preds = %129, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16
  %135 = icmp eq i8* %25, null
  br i1 %135, label %140, label %136

136:                                              ; preds = %134
  %137 = load i8, i8* %25, align 1
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %25, i8* %26, i64 %27) #16
  br label %140

140:                                              ; preds = %134, %136, %139
  ret void
}

declare void @_ZN5blink20BackgroundHTMLParser29ForcePlaintextForTextDocumentEv(%"class.blink::BackgroundHTMLParser"*) local_unnamed_addr #4

declare void @_ZN5blink11PumpSessionC1ERj(%"class.blink::PumpSession"*, i32* dereferenceable(4)) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRbPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS9_yjyS9_OT_S9_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8* dereferenceable(1), i8*, i8** dereferenceable(8)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 32, i1 false) #16
  store i8 2, i8* %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 0
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 1
  store i8 5, i8* %20, align 1
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %22, align 8
  %23 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %24 = load i8, i8* %8, align 1, !range !3
  %25 = bitcast %"union.base::trace_event::TraceValue"* %23 to i8*
  store i8 %24, i8* %25, align 8
  %26 = bitcast i8** %10 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %27, i64* %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #16
  %30 = load i8, i8* %18, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %11, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %11 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #16
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #16
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #16
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #16
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #17
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %18, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  ret i64 %29
}

declare void @_ZN4base12ElapsedTimerC1Ev(%"class.base::ElapsedTimer"*) unnamed_addr #4

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #4

declare %"class.v8::Isolate"* @_ZN5blink16V8PerIsolateData17MainThreadIsolateEv() local_unnamed_addr #4

declare zeroext i1 @_ZN5blink13HTMLTokenizer9NextTokenERNS_15SegmentedStringERNS_9HTMLTokenE(%"class.blink::HTMLTokenizer"*, %"class.blink::SegmentedString"* dereferenceable(88), %"class.blink::HTMLToken"* dereferenceable(2512)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser26ConstructTreeFromHTMLTokenEv(%"class.blink::HTMLDocumentParser"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.blink::AtomicHTMLToken", align 8
  %3 = bitcast %"class.blink::AtomicHTMLToken"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 56, i1 false)
  %4 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %5 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %4, align 8
  call void @_ZN5blink15AtomicHTMLTokenC2ERNS_9HTMLTokenE(%"class.blink::AtomicHTMLToken"* nonnull %2, %"class.blink::HTMLToken"* dereferenceable(2512) %5)
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %7 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %19, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = call %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"* %13) #16
  %15 = icmp eq %"class.blink::HTMLElement"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %6, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %17, i64 0, i32 1
  store i32 3, i32* %18, align 4
  br label %19

19:                                               ; preds = %11, %16, %1
  %20 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %4, align 8
  %21 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 5
  br i1 %23, label %33, label %24

24:                                               ; preds = %19
  store i32 0, i32* %21, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %20, i64 0, i32 1, i32 0
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %20, i64 0, i32 2
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %20, i64 0, i32 3
  %28 = bitcast %class.LiteralBuffer* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %20, i64 0, i32 3, i32 1
  %31 = bitcast i16** %30 to i64*
  store i64 %29, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %20, i64 0, i32 4
  store i16 0, i16* %32, align 8
  br label %33

33:                                               ; preds = %19, %24
  %34 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %35 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %34, align 8
  call void @_ZN5blink15HTMLTreeBuilder13ConstructTreeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"* %35, %"class.blink::AtomicHTMLToken"* nonnull %2) #16
  %36 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  %37 = load i8, i8* %36, align 2, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  store i8 0, i8* %36, align 2
  %40 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  store i8 1, i8* %40, align 1
  br label %41

41:                                               ; preds = %33, %39
  %42 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %4, align 8
  %43 = icmp eq %"class.blink::HTMLToken"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %42, i64 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %57, label %48

48:                                               ; preds = %44
  store i32 0, i32* %45, align 8
  %49 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %42, i64 0, i32 1, i32 0
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %42, i64 0, i32 2
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %42, i64 0, i32 3
  %52 = bitcast %class.LiteralBuffer* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %42, i64 0, i32 3, i32 1
  %55 = bitcast i16** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %42, i64 0, i32 4
  store i16 0, i16* %56, align 8
  br label %57

57:                                               ; preds = %41, %44, %48
  call void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #16
  ret void
}

declare void @_ZN5blink12ScriptRunner25PauseAsyncScriptExecutionEv(%"class.blink::ScriptRunner"*) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLPreloadScanner"* @_ZN5blink18HTMLDocumentParser20CreatePreloadScannerENS_19TokenPreloadScanner11ScannerTypeE(%"class.blink::HTMLDocumentParser"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.blink::MediaValuesCached::MediaValuesCachedData", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 19
  %8 = tail call noalias i8* @malloc(i64 88) #16
  %9 = bitcast i8* %8 to %"struct.blink::CachedDocumentParameters"*
  tail call void @_ZN5blink24CachedDocumentParametersC1EPNS_8DocumentE(%"struct.blink::CachedDocumentParameters"* %9, %"class.blink::Document"* %6) #16
  %10 = bitcast %"struct.blink::MediaValuesCached::MediaValuesCachedData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #16
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  call void @_ZN5blink17MediaValuesCached21MediaValuesCachedDataC1ERNS_8DocumentE(%"struct.blink::MediaValuesCached::MediaValuesCachedData"* nonnull %3, %"class.blink::Document"* dereferenceable(2848) %11) #16
  %12 = call noalias i8* @malloc(i64 3072) #16
  %13 = bitcast i8* %12 to %"class.blink::HTMLPreloadScanner"*
  call void @_ZN5blink18HTMLPreloadScannerC1ERKNS_17HTMLParserOptionsERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS7_14default_deleteIS9_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS_19TokenPreloadScanner11ScannerTypeE(%"class.blink::HTMLPreloadScanner"* %13, %"class.blink::HTMLParserOptions"* dereferenceable(2) %4, %"class.blink::KURL"* dereferenceable(112) %7, %"struct.blink::CachedDocumentParameters"* %9, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* nonnull dereferenceable(112) %3, i32 %1) #16
  %14 = getelementptr inbounds %"struct.blink::MediaValuesCached::MediaValuesCachedData", %"struct.blink::MediaValuesCached::MediaValuesCachedData"* %3, i64 0, i32 16, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #16
  br label %30

30:                                               ; preds = %29, %26, %2
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #16
  ret %"class.blink::HTMLPreloadScanner"* %13
}

declare void @_ZN5blink18HTMLPreloadScanner11AppendToEndERKNS_15SegmentedStringE(%"class.blink::HTMLPreloadScanner"*, %"class.blink::SegmentedString"* dereferenceable(88)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser14ScanAndPreloadEPNS_18HTMLPreloadScannerE(%"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLPreloadScanner"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.absl::optional", align 4
  %8 = alloca %"class.WTF::Vector.183", align 8
  %9 = alloca %"class.blink::KURL", align 8
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13, !prof !5

13:                                               ; preds = %2
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %15 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %17, i64* %16, align 8
  %18 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.41, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  br label %19

19:                                               ; preds = %2, %13
  %20 = phi i64 [ -6148914691236517206, %2 ], [ %18, %13 ]
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.41, i64 0, i64 0), %13 ]
  %22 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %13 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #16
  store i8 0, i8* %6, align 1
  %23 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 76, i8* nonnull %23) #16
  %24 = bitcast %"class.absl::optional"* %7 to i32*
  store i32 -1431655766, i32* %24, align 4
  store i8 0, i8* %23, align 4
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %union.anon.444* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 72, i1 false) #16
  %27 = bitcast %"class.WTF::Vector.183"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %8, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %8, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  %31 = bitcast %"class.WTF::Vector.183"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %30) #16
  %32 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  call void @_ZNK5blink8Document19ValidBaseElementURLEv(%"class.blink::KURL"* nonnull sret %9, %"class.blink::Document"* %33) #16
  call void @_ZN5blink18HTMLPreloadScanner4ScanERKNS_4KURLEPN4absl8optionalINS_19ViewportDescriptionEEERb(%"class.WTF::Vector.183"* nonnull sret %8, %"class.blink::HTMLPreloadScanner"* %1, %"class.blink::KURL"* nonnull dereferenceable(112) %9, %"class.absl::optional"* nonnull %7, i8* nonnull dereferenceable(1) %6) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %30) #16
  %34 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %35 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %34) #16
  %36 = icmp eq %"class.blink::DocumentLoader"* %35, null
  br i1 %36, label %108, label %37

37:                                               ; preds = %19
  %38 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %39 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %39, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %108

43:                                               ; preds = %37
  %44 = load i8, i8* %23, align 4, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %48 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %47, i64 0, i32 59, i32 0, i32 0
  %49 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %48, align 8
  call void @_ZN5blink11StyleEngine14UpdateViewportEv(%"class.blink::StyleEngine"* %49) #16
  %50 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %38, align 8
  br label %51

51:                                               ; preds = %43, %46
  %52 = phi %"class.blink::HTMLDocumentParserState"* [ %39, %43 ], [ %50, %46 ]
  %53 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %52, i64 0, i32 6
  %54 = load i8, i8* %53, align 4, !range !3
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %108, label %56

56:                                               ; preds = %51
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %58 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %57) #16
  %59 = call %"class.blink::PrefetchedSignedExchangeManager"* @_ZNK5blink14DocumentLoader34GetPrefetchedSignedExchangeManagerEv(%"class.blink::DocumentLoader"* %58) #16
  %60 = icmp eq %"class.blink::PrefetchedSignedExchangeManager"* %59, null
  %61 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %62 = and i8 %61, 25
  %63 = icmp eq i8 %62, 0
  br i1 %60, label %83, label %64

64:                                               ; preds = %56
  br i1 %63, label %71, label %65, !prof !5

65:                                               ; preds = %64
  %66 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %67 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #16
  %68 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %69 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %69, i64* %68, align 8
  %70 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.42, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %66, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #16
  br label %71

71:                                               ; preds = %64, %65
  %72 = phi i64 [ -6148914691236517206, %64 ], [ %70, %65 ]
  %73 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %64 ], [ getelementptr inbounds ([50 x i8], [50 x i8]* @.str.42, i64 0, i64 0), %65 ]
  %74 = phi i8* [ null, %64 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %65 ]
  %75 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %76 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %75) #16
  %77 = call %"class.blink::PrefetchedSignedExchangeManager"* @_ZNK5blink14DocumentLoader34GetPrefetchedSignedExchangeManagerEv(%"class.blink::DocumentLoader"* %76) #16
  call void @_ZN5blink31PrefetchedSignedExchangeManager33StartPrefetchedLinkHeaderPreloadsEv(%"class.blink::PrefetchedSignedExchangeManager"* %77) #16
  %78 = icmp eq i8* %74, null
  br i1 %78, label %105, label %79

79:                                               ; preds = %71
  %80 = load i8, i8* %74, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %105, label %82

82:                                               ; preds = %79
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %74, i8* %73, i64 %72) #16
  br label %105

83:                                               ; preds = %56
  br i1 %63, label %90, label %84, !prof !5

84:                                               ; preds = %83
  %85 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %86 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #16
  %87 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %88 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %88, i64* %87, align 8
  %89 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.43, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %85, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #16
  br label %90

90:                                               ; preds = %83, %84
  %91 = phi i64 [ -6148914691236517206, %83 ], [ %89, %84 ]
  %92 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %83 ], [ getelementptr inbounds ([47 x i8], [47 x i8]* @.str.43, i64 0, i64 0), %84 ]
  %93 = phi i8* [ null, %83 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %84 ]
  %94 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %95 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %94) #16
  %96 = load i8, i8* %23, align 4, !range !3
  %97 = icmp eq i8 %96, 0
  %98 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = select i1 %97, %"struct.blink::ViewportDescription"* null, %"struct.blink::ViewportDescription"* %98
  call void @_ZN5blink14DocumentLoader26DispatchLinkHeaderPreloadsEPKNS_19ViewportDescriptionENS_13PreloadHelper18MediaPreloadPolicyE(%"class.blink::DocumentLoader"* %95, %"struct.blink::ViewportDescription"* %99, i32 2) #16
  %100 = icmp eq i8* %93, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %90
  %102 = load i8, i8* %93, align 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %101
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %93, i8* %92, i64 %91) #16
  br label %105

105:                                              ; preds = %104, %101, %90, %82, %79, %71
  %106 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %38, align 8
  %107 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %106, i64 0, i32 6
  store i8 0, i8* %107, align 4
  br label %108

108:                                              ; preds = %51, %19, %105, %37
  %109 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %110 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %110, i64 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 3
  br i1 %113, label %118, label %114

114:                                              ; preds = %108
  %115 = load i8, i8* %6, align 1, !range !3
  %116 = xor i8 %115, 1
  %117 = zext i8 %116 to i32
  store i32 %117, i32* %111, align 4
  br label %118

118:                                              ; preds = %114, %108
  %119 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %28, align 8
  %120 = load i32, i32* %29, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %119, i64 %121
  %123 = icmp eq i32 %120, 0
  br i1 %123, label %129, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20
  %126 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20, i32 0, i32 0, i32 2
  %127 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 20, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %125, i64 0, i32 0, i32 0, i32 0
  br label %189

129:                                              ; preds = %205, %118
  call void @_ZN5blink18HTMLDocumentParser19FetchQueuedPreloadsEv(%"class.blink::HTMLDocumentParser"* %0)
  %130 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %28, align 8
  %131 = icmp eq %"class.std::__1::unique_ptr.186"* %130, null
  br i1 %131, label %154, label %132, !prof !5

132:                                              ; preds = %129
  %133 = bitcast %"class.std::__1::unique_ptr.186"* %130 to i8*
  %134 = load i32, i32* %29, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %152, label %136, !prof !4

136:                                              ; preds = %132
  %137 = zext i32 %134 to i64
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %130, i64 %137
  br label %139

139:                                              ; preds = %146, %136
  %140 = phi %"class.std::__1::unique_ptr.186"* [ %147, %146 ], [ %130, %136 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.blink::PreloadRequest"*, %"class.blink::PreloadRequest"** %141, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %141, align 8
  %143 = icmp eq %"class.blink::PreloadRequest"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %139
  call void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"* nonnull %142) #16
  %145 = bitcast %"class.blink::PreloadRequest"* %142 to i8*
  call void @free(i8* %145) #16
  br label %146

146:                                              ; preds = %144, %139
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %140, i64 1
  %148 = icmp eq %"class.std::__1::unique_ptr.186"* %147, %138
  br i1 %148, label %149, label %139

149:                                              ; preds = %146
  store i32 0, i32* %29, align 4
  %150 = bitcast %"class.WTF::Vector.183"* %8 to i8**
  %151 = load i8*, i8** %150, align 8
  br label %152

152:                                              ; preds = %149, %132
  %153 = phi i8* [ %151, %149 ], [ %133, %132 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %153) #16
  store %"class.std::__1::unique_ptr.186"* null, %"class.std::__1::unique_ptr.186"** %28, align 8
  br label %154

154:                                              ; preds = %129, %152
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #16
  %155 = load i8, i8* %23, align 4, !range !3
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %182, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 2
  %159 = load i8, i8* %158, align 1
  %160 = icmp eq i8 %159, 8
  br i1 %160, label %161, label %163

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %162) #16
  br label %163

163:                                              ; preds = %161, %157
  %164 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %165 = load i8, i8* %164, align 1
  %166 = icmp eq i8 %165, 8
  br i1 %166, label %167, label %169

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %168) #16
  br label %169

169:                                              ; preds = %167, %163
  %170 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %171 = load i8, i8* %170, align 1
  %172 = icmp eq i8 %171, 8
  br i1 %172, label %173, label %175

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %174) #16
  br label %175

175:                                              ; preds = %173, %169
  %176 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, 8
  br i1 %178, label %179, label %181

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %180) #16
  br label %181

181:                                              ; preds = %179, %175
  store i8 0, i8* %23, align 4
  br label %182

182:                                              ; preds = %154, %181
  call void @llvm.lifetime.end.p0i8(i64 76, i8* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #16
  %183 = icmp eq i8* %22, null
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = load i8, i8* %22, align 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %188, label %187

187:                                              ; preds = %184
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %21, i64 %20) #16
  br label %188

188:                                              ; preds = %182, %184, %187
  ret void

189:                                              ; preds = %124, %205
  %190 = phi %"class.std::__1::unique_ptr.186"* [ %119, %124 ], [ %206, %205 ]
  %191 = load i32, i32* %126, align 4
  %192 = load i32, i32* %127, align 8
  %193 = icmp eq i32 %191, %192
  br i1 %193, label %204, label %194, !prof !4

194:                                              ; preds = %189
  %195 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %128, align 8
  %196 = zext i32 %191 to i64
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %195, i64 %196
  %198 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %190, i64 0, i32 0, i32 0, i32 0
  %199 = bitcast %"class.std::__1::unique_ptr.186"* %190 to i64*
  %200 = load i64, i64* %199, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %198, align 8
  %201 = bitcast %"class.std::__1::unique_ptr.186"* %197 to i64*
  store i64 %200, i64* %201, align 8
  %202 = load i32, i32* %126, align 4
  %203 = add i32 %202, 1
  store i32 %203, i32* %126, align 4
  br label %205

204:                                              ; preds = %189
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.183"* %125, %"class.std::__1::unique_ptr.186"* dereferenceable(8) %190) #16
  br label %205

205:                                              ; preds = %194, %204
  %206 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %190, i64 1
  %207 = icmp eq %"class.std::__1::unique_ptr.186"* %206, %122
  br i1 %207, label %129, label %189
}

; Function Attrs: nounwind
declare void @_ZN5blink11PumpSessionD1Ev(%"class.blink::PumpSession"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AtomicHTMLTokenC2ERNS_9HTMLTokenE(%"class.blink::AtomicHTMLToken"*, %"class.blink::HTMLToken"* dereferenceable(2512)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  store i32 %8, i32* %6, align 8
  %9 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 3
  %14 = bitcast %"class.std::__1::unique_ptr.53"* %13 to i64*
  %15 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6
  %16 = bitcast %"class.WTF::Vector.119"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #16
  %17 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 26, i1 false)
  switch i32 %8, label %220 [
    i32 5, label %158
    i32 1, label %18
    i32 4, label %158
    i32 2, label %78
    i32 3, label %78
  ]

18:                                               ; preds = %2
  %19 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3, i32 1
  %23 = bitcast i16** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = ptrtoint i16* %21 to i64
  %26 = sub i64 %24, %25
  %27 = lshr exact i64 %26, 1
  %28 = trunc i64 %27 to i32
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %4, i16* %21, i32 %28) #16
  %29 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %30 = load i64, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %31 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store i64 %30, i64* %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #16
  br label %47

47:                                               ; preds = %46, %43, %18
  %48 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %49 = bitcast %"class.blink::DoctypeData"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  store %"class.blink::DoctypeData"* null, %"class.blink::DoctypeData"** %48, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53"* %13, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %51, align 8
  store i64 %50, i64* %14, align 8
  %53 = icmp eq %"class.blink::DoctypeData"* %52, null
  br i1 %53, label %220, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %52, i64 0, i32 4, i32 0, i32 0, i32 0
  %56 = load i16*, i16** %55, align 8
  %57 = icmp eq i16* %56, null
  %58 = bitcast i16* %56 to i8*
  br i1 %57, label %65, label %59, !prof !5

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %52, i64 0, i32 4, i32 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !4

63:                                               ; preds = %59
  store i32 0, i32* %60, align 4
  br label %64

64:                                               ; preds = %63, %59
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %58) #16
  store i16* null, i16** %55, align 8
  br label %65

65:                                               ; preds = %64, %54
  %66 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %52, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load i16*, i16** %66, align 8
  %68 = icmp eq i16* %67, null
  %69 = bitcast i16* %67 to i8*
  br i1 %68, label %76, label %70, !prof !5

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %52, i64 0, i32 3, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74, !prof !4

74:                                               ; preds = %70
  store i32 0, i32* %71, align 4
  br label %75

75:                                               ; preds = %74, %70
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #16
  br label %76

76:                                               ; preds = %75, %65
  %77 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %52, i64 0, i32 0
  call void @free(i8* %77) #16
  br label %220

78:                                               ; preds = %2, %2
  %79 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 4
  %80 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 5
  %81 = load i8, i8* %80, align 2, !range !3
  store i8 %81, i8* %79, align 8
  %82 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3, i32 0
  %83 = load i16*, i16** %82, align 8
  %84 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3, i32 1
  %85 = bitcast i16** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint i16* %83 to i64
  %88 = sub i64 %86, %87
  %89 = lshr exact i64 %88, 1
  %90 = trunc i64 %89 to i32
  %91 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink13lookupHTMLTagEPKDsj(i16* %83, i32 %90) #16
  %92 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %130, label %95

95:                                               ; preds = %78
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #16
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !4

109:                                              ; preds = %100
  tail call void @llvm.trap() #16
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %110, %95
  %113 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %114 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store i64 %113, i64* %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %156, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %156

129:                                              ; preds = %126
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #16
  br label %156

130:                                              ; preds = %78
  %131 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131)
  %132 = load i16*, i16** %82, align 8
  %133 = load i64, i64* %85, align 8
  %134 = ptrtoint i16* %132 to i64
  %135 = sub i64 %133, %134
  %136 = lshr exact i64 %135, 1
  %137 = trunc i64 %136 to i32
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %3, i16* %132, i32 %137) #16
  %138 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %139 = load i64, i64* %138, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131)
  %140 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store i64 %139, i64* %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %130
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #16
  br label %156

156:                                              ; preds = %130, %152, %155, %129, %126, %112
  %157 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 6
  call void @_ZN5blink15AtomicHTMLToken20InitializeAttributesERKN3WTF6VectorINS_9HTMLToken9AttributeELj10ENS1_18PartitionAllocatorEEE(%"class.blink::AtomicHTMLToken"* %0, %"class.WTF::Vector.47"* dereferenceable(1936) %157)
  br label %220

158:                                              ; preds = %2, %2
  %159 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 4
  %160 = load i16, i16* %159, align 8
  %161 = icmp ult i16 %160, 256
  %162 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3
  br i1 %161, label %163, label %191

163:                                              ; preds = %158
  %164 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %162, i64 0, i32 0
  %165 = load i16*, i16** %164, align 8
  %166 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3, i32 1
  %167 = bitcast i16** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = ptrtoint i16* %165 to i64
  %170 = sub i64 %168, %169
  %171 = lshr exact i64 %170, 1
  %172 = trunc i64 %171 to i32
  %173 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String23Make8BitFrom16BitSourceEPKDsj(i16* %165, i32 %172) #16
  %174 = ptrtoint %"class.WTF::StringImpl"* %173 to i64
  %175 = bitcast %"class.WTF::String"* %11 to i64*
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %174, i64* %175, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %220, label %178

178:                                              ; preds = %163
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %220

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #16
  br label %220

191:                                              ; preds = %158
  %192 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192)
  %193 = getelementptr inbounds %class.LiteralBuffer, %class.LiteralBuffer* %162, i64 0, i32 0
  %194 = load i16*, i16** %193, align 8
  %195 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %1, i64 0, i32 3, i32 1
  %196 = bitcast i16** %195 to i64*
  %197 = load i64, i64* %196, align 8
  %198 = ptrtoint i16* %194 to i64
  %199 = sub i64 %197, %198
  %200 = lshr exact i64 %199, 1
  %201 = trunc i64 %200 to i32
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %5, i16* %194, i32 %201) #16
  %202 = bitcast %"class.WTF::String"* %5 to i64*
  %203 = load i64, i64* %202, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192)
  %204 = bitcast %"class.WTF::String"* %11 to i64*
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %203, i64* %204, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %191
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #16
  br label %220

220:                                              ; preds = %191, %216, %219, %163, %187, %190, %47, %76, %2, %156
  ret void
}

declare %"class.blink::HTMLElement"* @_ZNK5blink8Document4bodyEv(%"class.blink::Document"*) local_unnamed_addr #4

declare void @_ZN5blink15HTMLTreeBuilder13ConstructTreeEPNS_15AtomicHTMLTokenE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::AtomicHTMLToken"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AtomicHTMLTokenD2Ev(%"class.blink::AtomicHTMLToken"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %3, align 8
  %5 = icmp eq %"class.blink::Attribute"* %4, null
  br i1 %5, label %41, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::Attribute"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.blink::Attribute"* [ %34, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #16
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %33) #16
  %34 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 1
  %35 = icmp eq %"class.blink::Attribute"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.119"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #16
  store %"class.blink::Attribute"* null, %"class.blink::Attribute"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %42, align 8
  store %"class.blink::DoctypeData"* null, %"class.blink::DoctypeData"** %42, align 8
  %44 = icmp eq %"class.blink::DoctypeData"* %43, null
  br i1 %44, label %69, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load i16*, i16** %46, align 8
  %48 = icmp eq i16* %47, null
  %49 = bitcast i16* %47 to i8*
  br i1 %48, label %56, label %50, !prof !5

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 4, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !4

54:                                               ; preds = %50
  store i32 0, i32* %51, align 4
  br label %55

55:                                               ; preds = %54, %50
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #16
  store i16* null, i16** %46, align 8
  br label %56

56:                                               ; preds = %55, %45
  %57 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = icmp eq i16* %58, null
  %60 = bitcast i16* %58 to i8*
  br i1 %59, label %67, label %61, !prof !5

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 3, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65, !prof !4

65:                                               ; preds = %61
  store i32 0, i32* %62, align 4
  br label %66

66:                                               ; preds = %65, %61
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %60) #16
  br label %67

67:                                               ; preds = %66, %56
  %68 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %43, i64 0, i32 0
  tail call void @free(i8* %68) #16
  br label %69

69:                                               ; preds = %41, %67
  %70 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #16
  br label %86

86:                                               ; preds = %69, %82, %85
  %87 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #16
  br label %103

103:                                              ; preds = %86, %99, %102
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AtomicHTMLTokenC2ERKNS_16CompactHTMLTokenE(%"class.blink::AtomicHTMLToken"*, %"class.blink::CompactHTMLToken"* dereferenceable(40)) unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.blink::QualifiedName", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.blink::Attribute", align 8
  %6 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = and i8 %8, 15
  %10 = zext i8 %9 to i32
  store i32 %10, i32* %6, align 8
  %11 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 3
  %16 = bitcast %"class.std::__1::unique_ptr.53"* %15 to i64*
  %17 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6
  %20 = bitcast %"class.WTF::Vector.119"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #16
  %21 = bitcast %"class.WTF::AtomicString"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 26, i1 false)
  switch i32 %10, label %471 [
    i32 5, label %430
    i32 1, label %22
    i32 4, label %430
    i32 2, label %155
    i32 3, label %381
  ]

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %49, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 acquire, align 4
  %29 = and i32 %28, 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %26
  %32 = load atomic i32, i32* %27 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %49

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #16
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !4

44:                                               ; preds = %35
  tail call void @llvm.trap() #16
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %49

47:                                               ; preds = %26
  %48 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %24) #16
  br label %49

49:                                               ; preds = %22, %31, %45, %47
  %50 = phi %"class.WTF::StringImpl"* [ %48, %47 ], [ %24, %31 ], [ %24, %45 ], [ null, %22 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %50 to i64
  %52 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %51, i64* %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #16
  br label %68

68:                                               ; preds = %67, %64, %49
  %69 = tail call noalias i8* @malloc(i64 48) #16
  store i8 0, i8* %69, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 1
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds i8, i8* %69, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 33, i1 false) #16
  %72 = ptrtoint i8* %69 to i64
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53"* %15, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %73, align 8
  store i64 %72, i64* %16, align 8
  %75 = icmp eq %"class.blink::DoctypeData"* %74, null
  %76 = bitcast i8* %69 to %"class.blink::DoctypeData"*
  br i1 %75, label %102, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %74, i64 0, i32 4, i32 0, i32 0, i32 0
  %79 = load i16*, i16** %78, align 8
  %80 = icmp eq i16* %79, null
  %81 = bitcast i16* %79 to i8*
  br i1 %80, label %88, label %82, !prof !5

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %74, i64 0, i32 4, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86, !prof !4

86:                                               ; preds = %82
  store i32 0, i32* %83, align 4
  br label %87

87:                                               ; preds = %86, %82
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %81) #16
  store i16* null, i16** %78, align 8
  br label %88

88:                                               ; preds = %87, %77
  %89 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load i16*, i16** %89, align 8
  %91 = icmp eq i16* %90, null
  %92 = bitcast i16* %90 to i8*
  br i1 %91, label %99, label %93, !prof !5

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %74, i64 0, i32 3, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %98, label %97, !prof !4

97:                                               ; preds = %93
  store i32 0, i32* %94, align 4
  br label %98

98:                                               ; preds = %97, %93
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %92) #16
  br label %99

99:                                               ; preds = %98, %88
  %100 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %74, i64 0, i32 0
  tail call void @free(i8* %100) #16
  %101 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %73, align 8
  br label %102

102:                                              ; preds = %99, %68
  %103 = phi %"class.blink::DoctypeData"* [ %101, %99 ], [ %76, %68 ]
  %104 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %103, i64 0, i32 0
  store i8 1, i8* %104, align 8
  %105 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 2
  %106 = tail call dereferenceable(16) %"struct.blink::CompactHTMLToken::Attribute"* @_ZNK3WTF6VectorIN5blink16CompactHTMLToken9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.437"* %105, i32 0) #16
  %107 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %73, align 8
  %108 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %107, i64 0, i32 3
  %109 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %106, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %126, label %112

112:                                              ; preds = %102
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %126, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 1
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 1
  br i1 %120, label %124, label %122

122:                                              ; preds = %116
  %123 = bitcast %"class.WTF::StringImpl"* %121 to i8*
  tail call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.56"* %108, i8* %123, i32 %114) #16
  br label %126

124:                                              ; preds = %116
  %125 = bitcast %"class.WTF::StringImpl"* %121 to i16*
  tail call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j(%"class.WTF::Vector.56"* %108, i16* %125, i32 %114) #16
  br label %126

126:                                              ; preds = %102, %112, %122, %124
  %127 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %73, align 8
  %128 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %127, i64 0, i32 1
  store i8 1, i8* %128, align 1
  %129 = tail call dereferenceable(16) %"struct.blink::CompactHTMLToken::Attribute"* @_ZNK3WTF6VectorIN5blink16CompactHTMLToken9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.437"* %105, i32 0) #16
  %130 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %73, align 8
  %131 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %130, i64 0, i32 4
  %132 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %129, i64 0, i32 1, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %149, label %135

135:                                              ; preds = %126
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %149, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 1
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 1
  br i1 %143, label %147, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.WTF::StringImpl"* %144 to i8*
  tail call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.56"* %131, i8* %146, i32 %137) #16
  br label %149

147:                                              ; preds = %139
  %148 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  tail call void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j(%"class.WTF::Vector.56"* %131, i16* %148, i32 %137) #16
  br label %149

149:                                              ; preds = %126, %135, %145, %147
  %150 = load i8, i8* %7, align 8
  %151 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %73, align 8
  %152 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %151, i64 0, i32 5
  %153 = lshr i8 %150, 6
  %154 = and i8 %153, 1
  store i8 %154, i8* %152, align 8
  br label %471

155:                                              ; preds = %2
  %156 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %381, label %159

159:                                              ; preds = %155
  %160 = zext i32 %157 to i64
  %161 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %160) #16
  %162 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %161, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #16
  %163 = ptrtoint i8* %162 to i64
  %164 = bitcast %"class.WTF::Vector.119"* %19 to i64*
  store atomic i64 %163, i64* %164 monotonic, align 8
  %165 = lshr i64 %161, 4
  %166 = trunc i64 %165 to i32
  %167 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  store i32 %166, i32* %167, align 8
  %168 = load i32, i32* %156, align 4
  %169 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %170 = load %"struct.blink::CompactHTMLToken::Attribute"*, %"struct.blink::CompactHTMLToken::Attribute"** %169, align 8
  %171 = zext i32 %168 to i64
  %172 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %170, i64 %171
  %173 = icmp eq i32 %168, 0
  br i1 %173, label %381, label %174

174:                                              ; preds = %159
  %175 = bitcast %"class.blink::QualifiedName"* %3 to i8*
  %176 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %177 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %178 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  %179 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %180 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %181 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %182 = bitcast %"class.blink::Attribute"* %5 to i8*
  %183 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %5, i64 0, i32 0, i32 0, i32 0
  %184 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %186 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %19, i64 0, i32 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %5, i64 0, i32 1
  %188 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %187, i64 0, i32 0, i32 0, i32 0
  %189 = bitcast %"class.WTF::AtomicString"* %187 to i64*
  %190 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %5, i64 0, i32 0
  br label %191

191:                                              ; preds = %174, %378
  %192 = phi %"struct.blink::CompactHTMLToken::Attribute"* [ %170, %174 ], [ %379, %378 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #16
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %176, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #16
  %193 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %192, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %219, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 acquire, align 4
  %199 = and i32 %198, 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %217, label %201

201:                                              ; preds = %196
  %202 = load atomic i32, i32* %197 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %219

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i33
  %209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %208, i33 1) #16
  %210 = extractvalue { i33, i1 } %209, 1
  %211 = extractvalue { i33, i1 } %209, 0
  %212 = icmp slt i33 %211, 0
  %213 = or i1 %210, %212
  br i1 %213, label %214, label %215, !prof !4

214:                                              ; preds = %205
  call void @llvm.trap() #16
  unreachable

215:                                              ; preds = %205
  %216 = trunc i33 %211 to i32
  store i32 %216, i32* %206, align 4
  br label %219

217:                                              ; preds = %196
  %218 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %194) #16
  br label %219

219:                                              ; preds = %191, %201, %215, %217
  %220 = phi %"class.WTF::StringImpl"* [ %218, %217 ], [ %194, %201 ], [ %194, %215 ], [ null, %191 ]
  %221 = ptrtoint %"class.WTF::StringImpl"* %220 to i64
  store i64 %221, i64* %179, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %3, %"class.WTF::AtomicString"* dereferenceable(8) %177, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %177) #16
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %237, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  br i1 %228, label %231, label %233

231:                                              ; preds = %224
  %232 = add i32 %230, -1
  store i32 %232, i32* %229, align 4
  br label %233

233:                                              ; preds = %231, %224
  %234 = phi i32 [ %232, %231 ], [ %230, %224 ]
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %237

236:                                              ; preds = %233
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #16
  br label %237

237:                                              ; preds = %219, %233, %236
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #16
  %238 = load i32, i32* %181, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %266, label %240

240:                                              ; preds = %237, %259
  %241 = phi i32 [ %260, %259 ], [ 0, %237 ]
  %242 = call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.119"* %19, i32 %241) #16
  %243 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %242, i64 0, i32 0, i32 0, i32 0
  %244 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %243, align 8
  %245 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %176, align 8
  %246 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %244, %245
  br i1 %246, label %263, label %247

247:                                              ; preds = %240
  %248 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %244, i64 0, i32 3, i32 0, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %245, i64 0, i32 3, i32 0, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %249, %251
  br i1 %252, label %253, label %259

253:                                              ; preds = %247
  %254 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %244, i64 0, i32 4, i32 0, i32 0, i32 0
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %245, i64 0, i32 4, i32 0, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %255, %257
  br i1 %258, label %263, label %259

259:                                              ; preds = %253, %247
  %260 = add nuw i32 %241, 1
  %261 = load i32, i32* %181, align 4
  %262 = icmp ult i32 %260, %261
  br i1 %262, label %240, label %266

263:                                              ; preds = %240, %253
  %264 = call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.119"* %19, i32 %241) #16
  %265 = icmp eq %"class.blink::Attribute"* %264, null
  br i1 %265, label %266, label %377

266:                                              ; preds = %259, %237, %263
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #16
  %267 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %192, i64 0, i32 1, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %293, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 acquire, align 4
  %273 = and i32 %272, 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %291, label %275

275:                                              ; preds = %270
  %276 = load atomic i32, i32* %271 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %293

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = zext i32 %281 to i33
  %283 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %282, i33 1) #16
  %284 = extractvalue { i33, i1 } %283, 1
  %285 = extractvalue { i33, i1 } %283, 0
  %286 = icmp slt i33 %285, 0
  %287 = or i1 %284, %286
  br i1 %287, label %288, label %289, !prof !4

288:                                              ; preds = %279
  call void @llvm.trap() #16
  unreachable

289:                                              ; preds = %279
  %290 = trunc i33 %285 to i32
  store i32 %290, i32* %280, align 4
  br label %293

291:                                              ; preds = %270
  %292 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %268) #16
  br label %293

293:                                              ; preds = %266, %275, %289, %291
  %294 = phi %"class.WTF::StringImpl"* [ %292, %291 ], [ %268, %275 ], [ %268, %289 ], [ null, %266 ]
  %295 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %176, align 8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %295, %"class.blink::QualifiedName::QualifiedNameImpl"** %183, align 8
  %296 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %295, null
  br i1 %296, label %304, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %295, i64 0, i32 1
  %299 = load i32, i32* %298, align 4
  %300 = and i32 %299, 16777216
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %304

302:                                              ; preds = %297
  %303 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %295, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %303) #16
  br label %304

304:                                              ; preds = %302, %297, %293
  store %"class.WTF::StringImpl"* %294, %"class.WTF::StringImpl"** %184, align 8
  %305 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %305, label %323, label %306

306:                                              ; preds = %304
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 2
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %323

311:                                              ; preds = %306
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  %314 = zext i32 %313 to i33
  %315 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %314, i33 1) #16
  %316 = extractvalue { i33, i1 } %315, 1
  %317 = extractvalue { i33, i1 } %315, 0
  %318 = icmp slt i33 %317, 0
  %319 = or i1 %316, %318
  br i1 %319, label %320, label %321, !prof !4

320:                                              ; preds = %311
  call void @llvm.trap() #16
  unreachable

321:                                              ; preds = %311
  %322 = trunc i33 %317 to i32
  store i32 %322, i32* %312, align 4
  br label %323

323:                                              ; preds = %304, %306, %321
  %324 = load i32, i32* %181, align 4
  %325 = load i32, i32* %185, align 8
  %326 = icmp eq i32 %324, %325
  br i1 %326, label %346, label %327, !prof !4

327:                                              ; preds = %323
  %328 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %186, align 8
  %329 = zext i32 %324 to i64
  %330 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %183, align 8
  %331 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %328, i64 %329, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %330, %"class.blink::QualifiedName::QualifiedNameImpl"** %331, align 8
  %332 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %330, null
  br i1 %332, label %340, label %333

333:                                              ; preds = %327
  %334 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %330, i64 0, i32 1
  %335 = load i32, i32* %334, align 4
  %336 = and i32 %335, 16777216
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %340

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %330, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %339) #16
  br label %340

340:                                              ; preds = %327, %333, %338
  %341 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %328, i64 %329, i32 1
  %342 = load i64, i64* %189, align 8
  %343 = bitcast %"class.WTF::AtomicString"* %341 to i64*
  store i64 %342, i64* %343, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %188, align 8
  %344 = load i32, i32* %181, align 4
  %345 = add i32 %344, 1
  store i32 %345, i32* %181, align 4
  br label %362

346:                                              ; preds = %323
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.119"* %19, %"class.blink::Attribute"* nonnull dereferenceable(16) %5) #16
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %184, align 8
  %348 = icmp eq %"class.WTF::StringImpl"* %347, null
  br i1 %348, label %362, label %349

349:                                              ; preds = %346
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = load atomic i32, i32* %350 monotonic, align 4
  %352 = and i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %347, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  br i1 %353, label %356, label %358

356:                                              ; preds = %349
  %357 = add i32 %355, -1
  store i32 %357, i32* %354, align 4
  br label %358

358:                                              ; preds = %356, %349
  %359 = phi i32 [ %357, %356 ], [ %355, %349 ]
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %362

361:                                              ; preds = %358
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %347) #16
  br label %362

362:                                              ; preds = %340, %346, %358, %361
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %190) #16
  br i1 %305, label %376, label %363

363:                                              ; preds = %362
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = load atomic i32, i32* %364 monotonic, align 4
  %366 = and i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %369 = load i32, i32* %368, align 4
  br i1 %367, label %370, label %372

370:                                              ; preds = %363
  %371 = add i32 %369, -1
  store i32 %371, i32* %368, align 4
  br label %372

372:                                              ; preds = %370, %363
  %373 = phi i32 [ %371, %370 ], [ %369, %363 ]
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %376

375:                                              ; preds = %372
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %294) #16
  br label %376

376:                                              ; preds = %362, %372, %375
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #16
  br label %378

377:                                              ; preds = %263
  store i8 1, i8* %18, align 1
  br label %378

378:                                              ; preds = %377, %376
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #16
  %379 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %192, i64 1
  %380 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %379, %172
  br i1 %380, label %381, label %191

381:                                              ; preds = %378, %155, %159, %2
  %382 = load i8, i8* %7, align 8
  %383 = lshr i8 %382, 4
  %384 = and i8 %383, 1
  store i8 %384, i8* %17, align 8
  %385 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0
  %386 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %385, align 8
  %387 = icmp eq %"class.WTF::StringImpl"* %386, null
  br i1 %387, label %411, label %388

388:                                              ; preds = %381
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %390 = load atomic i32, i32* %389 acquire, align 4
  %391 = and i32 %390, 4
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %409, label %393

393:                                              ; preds = %388
  %394 = load atomic i32, i32* %389 monotonic, align 4
  %395 = and i32 %394, 2
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %411

397:                                              ; preds = %393
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %386, i64 0, i32 0
  %399 = load i32, i32* %398, align 4
  %400 = zext i32 %399 to i33
  %401 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %400, i33 1) #16
  %402 = extractvalue { i33, i1 } %401, 1
  %403 = extractvalue { i33, i1 } %401, 0
  %404 = icmp slt i33 %403, 0
  %405 = or i1 %402, %404
  br i1 %405, label %406, label %407, !prof !4

406:                                              ; preds = %397
  call void @llvm.trap() #16
  unreachable

407:                                              ; preds = %397
  %408 = trunc i33 %403 to i32
  store i32 %408, i32* %398, align 4
  br label %411

409:                                              ; preds = %388
  %410 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %386) #16
  br label %411

411:                                              ; preds = %381, %393, %407, %409
  %412 = phi %"class.WTF::StringImpl"* [ %410, %409 ], [ %386, %393 ], [ %386, %407 ], [ null, %381 ]
  %413 = ptrtoint %"class.WTF::StringImpl"* %412 to i64
  %414 = bitcast %"class.WTF::AtomicString"* %11 to i64*
  %415 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  store i64 %413, i64* %414, align 8
  %416 = icmp eq %"class.WTF::StringImpl"* %415, null
  br i1 %416, label %471, label %417

417:                                              ; preds = %411
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = and i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 0
  %423 = load i32, i32* %422, align 4
  br i1 %421, label %424, label %426

424:                                              ; preds = %417
  %425 = add i32 %423, -1
  store i32 %425, i32* %422, align 4
  br label %426

426:                                              ; preds = %424, %417
  %427 = phi i32 [ %425, %424 ], [ %423, %417 ]
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %471

429:                                              ; preds = %426
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %415) #16
  br label %471

430:                                              ; preds = %2, %2
  %431 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %1, i64 0, i32 1, i32 0, i32 0
  %432 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %431, align 8
  %433 = icmp eq %"class.WTF::StringImpl"* %432, null
  br i1 %433, label %449, label %434

434:                                              ; preds = %430
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %432, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %436 = load atomic i32, i32* %435 monotonic, align 4
  %437 = and i32 %436, 2
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %439, label %449

439:                                              ; preds = %434
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %432, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  %442 = zext i32 %441 to i33
  %443 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %442, i33 1) #16
  %444 = extractvalue { i33, i1 } %443, 1
  %445 = extractvalue { i33, i1 } %443, 0
  %446 = icmp slt i33 %445, 0
  %447 = or i1 %444, %446
  br i1 %447, label %448, label %452, !prof !4

448:                                              ; preds = %439
  tail call void @llvm.trap() #16
  unreachable

449:                                              ; preds = %434, %430
  %450 = ptrtoint %"class.WTF::StringImpl"* %432 to i64
  %451 = bitcast %"class.WTF::String"* %13 to i64*
  store i64 %450, i64* %451, align 8
  br label %471

452:                                              ; preds = %439
  %453 = trunc i33 %445 to i32
  store i32 %453, i32* %440, align 4
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %455 = ptrtoint %"class.WTF::StringImpl"* %432 to i64
  %456 = bitcast %"class.WTF::String"* %13 to i64*
  store i64 %455, i64* %456, align 8
  %457 = icmp eq %"class.WTF::StringImpl"* %454, null
  br i1 %457, label %471, label %458

458:                                              ; preds = %452
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %460 = load atomic i32, i32* %459 monotonic, align 4
  %461 = and i32 %460, 2
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  br i1 %462, label %465, label %467

465:                                              ; preds = %458
  %466 = add i32 %464, -1
  store i32 %466, i32* %463, align 4
  br label %467

467:                                              ; preds = %465, %458
  %468 = phi i32 [ %466, %465 ], [ %464, %458 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %454) #16
  br label %471

471:                                              ; preds = %449, %470, %467, %452, %411, %426, %429, %2, %149
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink18HTMLDocumentParser17HasInsertionPointEv(%"class.blink::HTMLDocumentParser"* readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %4 = load %"class.blink::SegmentedString"*, %"class.blink::SegmentedString"** %3, align 8
  %5 = icmp eq %"class.blink::SegmentedString"* %2, %4
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0, i32 6
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br label %14

14:                                               ; preds = %6, %1, %10
  %15 = phi i1 [ true, %1 ], [ false, %6 ], [ %13, %10 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser6insertERKN3WTF6StringE(%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %"class.blink::SegmentedString", align 8
  %6 = alloca %"class.blink::SegmentedString", align 8
  %7 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 1
  br i1 %9, label %375, label %10

10:                                               ; preds = %2
  %11 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %12 = and i8 %11, 25
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %27, label %14, !prof !5

14:                                               ; preds = %10
  %15 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  store i32 %23, i32* %3, align 4
  %24 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  %25 = bitcast i8** %4 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %25, align 8
  %26 = call i64 @_ZN20trace_event_internal13AddTraceEventIjPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i32* nonnull dereferenceable(4) %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #16
  br label %27

27:                                               ; preds = %10, %22
  %28 = phi i64 [ -6148914691236517206, %10 ], [ %26, %22 ]
  %29 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %10 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), %22 ]
  %30 = phi i8* [ null, %10 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %22 ]
  %31 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %32, align 8
  %34 = icmp eq %"class.blink::HTMLTokenizer"* %33, null
  br i1 %34, label %35, label %79

35:                                               ; preds = %27
  %36 = call noalias i8* @malloc(i64 2512) #16
  %37 = getelementptr inbounds i8, i8* %36, i64 16
  %38 = getelementptr inbounds i8, i8* %36, i64 40
  %39 = bitcast i8* %37 to i8**
  store i8* %38, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %36, i64 24
  %41 = getelementptr inbounds i8, i8* %36, i64 32
  %42 = getelementptr inbounds i8, i8* %36, i64 552
  %43 = bitcast i8* %41 to i8**
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %36, i64 560
  %45 = getelementptr inbounds i8, i8* %36, i64 576
  %46 = bitcast i8* %44 to i8**
  store i8* %45, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %36, i64 568
  %48 = bitcast i8* %47 to i32*
  store i32 10, i32* %48, align 8
  %49 = getelementptr inbounds i8, i8* %36, i64 572
  %50 = bitcast i8* %49 to i32*
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds i8, i8* %36, i64 2504
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = bitcast i8* %36 to i32*
  store i32 0, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %36, i64 4
  %55 = bitcast i8* %54 to i32*
  store i32 0, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %36, i64 12
  %57 = bitcast i8* %56 to i32*
  store i32 0, i32* %57, align 4
  %58 = ptrtoint i8* %38 to i64
  %59 = bitcast i8* %40 to i64*
  store i64 %58, i64* %59, align 8
  %60 = bitcast i8* %42 to i16*
  store i16 0, i16* %60, align 8
  %61 = ptrtoint i8* %36 to i64
  %62 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 6
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %63, align 8
  %65 = bitcast %"class.std::__1::unique_ptr.44"* %62 to i64*
  store i64 %61, i64* %65, align 8
  %66 = icmp eq %"class.blink::HTMLToken"* %64, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %35
  call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %64) #16
  %68 = bitcast %"class.blink::HTMLToken"* %64 to i8*
  call void @free(i8* %68) #16
  br label %69

69:                                               ; preds = %67, %35
  %70 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 3
  %71 = call noalias i8* @malloc(i64 248) #16
  %72 = bitcast i8* %71 to %"class.blink::HTMLTokenizer"*
  call void @_ZN5blink13HTMLTokenizerC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTokenizer"* %72, %"class.blink::HTMLParserOptions"* dereferenceable(2) %70) #16
  %73 = ptrtoint i8* %71 to i64
  %74 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %32, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.67"* %31 to i64*
  store i64 %73, i64* %75, align 8
  %76 = icmp eq %"class.blink::HTMLTokenizer"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %69
  call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %74) #16
  %78 = bitcast %"class.blink::HTMLTokenizer"* %74 to i8*
  call void @free(i8* %78) #16
  br label %79

79:                                               ; preds = %27, %69, %77
  %80 = bitcast %"class.blink::SegmentedString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %80) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 88, i1 false)
  %81 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 3
  store i8 1, i8* %81, align 8
  %82 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 4
  store i8 1, i8* %82, align 1
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %85, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %86, label %140, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %106

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #16
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !4

101:                                              ; preds = %92
  call void @llvm.trap() #16
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %140, label %106

106:                                              ; preds = %87, %102
  %107 = phi %"class.WTF::StringImpl"* [ %104, %102 ], [ %84, %87 ]
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %140, label %111

111:                                              ; preds = %106
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 1
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %128, label %117

117:                                              ; preds = %111
  store i8 1, i8* %82, align 1
  %118 = icmp eq %"class.WTF::StringImpl"* %112, null
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  %121 = select i1 %118, i8* null, i8* %120
  %122 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %121, i8** %122, align 8
  %123 = zext i32 %109 to i64
  %124 = getelementptr inbounds i8, i8* %121, i64 %123
  %125 = getelementptr inbounds i8, i8* %124, i64 -1
  %126 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 2
  store i8* %125, i8** %126, align 8
  %127 = ptrtoint i8* %121 to i64
  br label %145

128:                                              ; preds = %111
  store i8 0, i8* %82, align 1
  %129 = icmp eq %"class.WTF::StringImpl"* %112, null
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 1
  %131 = bitcast %"class.WTF::StringImpl"* %130 to i16*
  %132 = select i1 %129, i16* null, i16* %131
  %133 = bitcast %"class.blink::SegmentedString"* %5 to i16**
  store i16* %132, i16** %133, align 8
  %134 = zext i32 %109 to i64
  %135 = getelementptr inbounds i16, i16* %132, i64 %134
  %136 = getelementptr inbounds i16, i16* %135, i64 -1
  %137 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 2
  %138 = bitcast i8** %137 to i16**
  store i16* %136, i16** %138, align 8
  %139 = ptrtoint i16* %132 to i64
  br label %145

140:                                              ; preds = %79, %106, %102
  %141 = phi i1 [ false, %106 ], [ true, %102 ], [ true, %79 ]
  %142 = phi %"class.WTF::StringImpl"* [ %107, %106 ], [ null, %102 ], [ null, %79 ]
  store i8 1, i8* %82, align 1
  %143 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %143, align 8
  %144 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 2
  store i8* null, i8** %144, align 8
  br label %145

145:                                              ; preds = %140, %128, %117
  %146 = phi i1 [ false, %117 ], [ false, %128 ], [ %141, %140 ]
  %147 = phi %"class.WTF::StringImpl"* [ %107, %117 ], [ %107, %128 ], [ %142, %140 ]
  %148 = phi i64 [ %127, %117 ], [ %139, %128 ], [ 0, %140 ]
  %149 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 1
  %150 = bitcast i8** %149 to i64*
  store i64 %148, i64* %150, align 8
  %151 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 1
  store i32 0, i32* %151, align 8
  %152 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 2
  store i32 0, i32* %152, align 4
  %153 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 3
  store i32 0, i32* %153, align 8
  %154 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 5
  %155 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 7
  %156 = bitcast %"class.WTF::Deque"* %154 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 25, i1 false) #16
  br i1 %146, label %162, label %157

157:                                              ; preds = %145
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  %161 = zext i1 %160 to i8
  br label %162

162:                                              ; preds = %145, %157
  %163 = phi i8 [ %161, %157 ], [ 1, %145 ]
  store i8 %163, i8* %155, align 1
  call void @_ZN5blink15SegmentedString21SetExcludeLineNumbersEv(%"class.blink::SegmentedString"* nonnull %5) #16
  %164 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0
  call void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"* %164, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %5) #16
  %165 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %166 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %166, i64 0, i32 4
  %168 = load i32, i32* %167, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %167, align 4
  %170 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %165, align 8
  %171 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %170, i64 0, i32 3
  %172 = load i32, i32* %171, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %171, align 4
  call void @_ZN5blink18HTMLDocumentParser23PumpTokenizerIfPossibleEv(%"class.blink::HTMLDocumentParser"* %0)
  %174 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %175 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %174, align 8
  %176 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %175, i64 0, i32 12, i32 0, i32 0
  %177 = load %"class.blink::Element"*, %"class.blink::Element"** %176, align 8
  %178 = icmp ne %"class.blink::Element"* %177, null
  %179 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %180 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %179, align 8
  %181 = icmp eq %"class.blink::HTMLParserScriptRunner"* %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %162
  %183 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %180) #16
  br label %184

184:                                              ; preds = %182, %162
  %185 = phi i1 [ false, %162 ], [ %183, %182 ]
  %186 = or i1 %178, %185
  br i1 %186, label %197, label %187

187:                                              ; preds = %184
  %188 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %189 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %189, i64 0, i32 1
  %191 = load i8, i8* %190, align 4, !range !3
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %197

193:                                              ; preds = %187
  %194 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %195 = load i8, i8* %194, align 1, !range !3
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %333, label %197

197:                                              ; preds = %193, %184, %187
  %198 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 11
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %198, i64 0, i32 0, i32 0, i32 0
  %200 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %199, align 8
  %201 = icmp eq %"class.blink::HTMLPreloadScanner"* %200, null
  br i1 %201, label %202, label %211

202:                                              ; preds = %197
  %203 = call %"class.blink::HTMLPreloadScanner"* @_ZN5blink18HTMLDocumentParser20CreatePreloadScannerENS_19TokenPreloadScanner11ScannerTypeE(%"class.blink::HTMLDocumentParser"* %0, i32 1)
  %204 = ptrtoint %"class.blink::HTMLPreloadScanner"* %203 to i64
  %205 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %199, align 8
  %206 = bitcast %"class.std::__1::unique_ptr.180"* %198 to i64*
  store i64 %204, i64* %206, align 8
  %207 = icmp eq %"class.blink::HTMLPreloadScanner"* %205, null
  br i1 %207, label %211, label %208

208:                                              ; preds = %202
  call void @_ZN5blink18HTMLPreloadScannerD1Ev(%"class.blink::HTMLPreloadScanner"* nonnull %205) #16
  %209 = bitcast %"class.blink::HTMLPreloadScanner"* %205 to i8*
  call void @free(i8* %209) #16
  %210 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %199, align 8
  br label %211

211:                                              ; preds = %197, %202, %208
  %212 = phi %"class.blink::HTMLPreloadScanner"* [ %200, %197 ], [ %203, %202 ], [ %210, %208 ]
  %213 = bitcast %"class.blink::SegmentedString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %213) #16
  %214 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 3
  store i8 1, i8* %214, align 8
  %215 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 4
  store i8 1, i8* %215, align 1
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %217 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %216, %"class.WTF::StringImpl"** %217, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %218, label %272, label %219

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %238

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  %227 = zext i32 %226 to i33
  %228 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %227, i33 1) #16
  %229 = extractvalue { i33, i1 } %228, 1
  %230 = extractvalue { i33, i1 } %228, 0
  %231 = icmp slt i33 %230, 0
  %232 = or i1 %229, %231
  br i1 %232, label %233, label %234, !prof !4

233:                                              ; preds = %224
  call void @llvm.trap() #16
  unreachable

234:                                              ; preds = %224
  %235 = trunc i33 %230 to i32
  store i32 %235, i32* %225, align 4
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %272, label %238

238:                                              ; preds = %219, %234
  %239 = phi %"class.WTF::StringImpl"* [ %236, %234 ], [ %216, %219 ]
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %272, label %243

243:                                              ; preds = %238
  %244 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 1
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %260, label %249

249:                                              ; preds = %243
  store i8 1, i8* %215, align 1
  %250 = icmp eq %"class.WTF::StringImpl"* %244, null
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 1
  %252 = bitcast %"class.WTF::StringImpl"* %251 to i8*
  %253 = select i1 %250, i8* null, i8* %252
  %254 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* %253, i8** %254, align 8
  %255 = zext i32 %241 to i64
  %256 = getelementptr inbounds i8, i8* %253, i64 %255
  %257 = getelementptr inbounds i8, i8* %256, i64 -1
  %258 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 2
  store i8* %257, i8** %258, align 8
  %259 = ptrtoint i8* %253 to i64
  br label %277

260:                                              ; preds = %243
  store i8 0, i8* %215, align 1
  %261 = icmp eq %"class.WTF::StringImpl"* %244, null
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %244, i64 1
  %263 = bitcast %"class.WTF::StringImpl"* %262 to i16*
  %264 = select i1 %261, i16* null, i16* %263
  %265 = bitcast %"class.blink::SegmentedString"* %6 to i16**
  store i16* %264, i16** %265, align 8
  %266 = zext i32 %241 to i64
  %267 = getelementptr inbounds i16, i16* %264, i64 %266
  %268 = getelementptr inbounds i16, i16* %267, i64 -1
  %269 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 2
  %270 = bitcast i8** %269 to i16**
  store i16* %268, i16** %270, align 8
  %271 = ptrtoint i16* %264 to i64
  br label %277

272:                                              ; preds = %211, %238, %234
  %273 = phi i1 [ false, %238 ], [ true, %234 ], [ true, %211 ]
  %274 = phi %"class.WTF::StringImpl"* [ %239, %238 ], [ null, %234 ], [ null, %211 ]
  store i8 1, i8* %215, align 1
  %275 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %275, align 8
  %276 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 2
  store i8* null, i8** %276, align 8
  br label %277

277:                                              ; preds = %272, %260, %249
  %278 = phi i1 [ false, %249 ], [ false, %260 ], [ %273, %272 ]
  %279 = phi %"class.WTF::StringImpl"* [ %239, %249 ], [ %239, %260 ], [ %274, %272 ]
  %280 = phi i64 [ %259, %249 ], [ %271, %260 ], [ 0, %272 ]
  %281 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 0, i32 1
  %282 = bitcast i8** %281 to i64*
  store i64 %280, i64* %282, align 8
  %283 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 1
  store i32 0, i32* %283, align 8
  %284 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 2
  store i32 0, i32* %284, align 4
  %285 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 3
  store i32 0, i32* %285, align 8
  %286 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 5
  %287 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 7
  %288 = bitcast %"class.WTF::Deque"* %286 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %288, i8 0, i64 25, i1 false) #16
  br i1 %278, label %294, label %289

289:                                              ; preds = %277
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 1
  %291 = load i32, i32* %290, align 4
  %292 = icmp eq i32 %291, 0
  %293 = zext i1 %292 to i8
  br label %294

294:                                              ; preds = %277, %289
  %295 = phi i8 [ %293, %289 ], [ 1, %277 ]
  store i8 %295, i8* %287, align 1
  call void @_ZN5blink18HTMLPreloadScanner11AppendToEndERKNS_15SegmentedStringE(%"class.blink::HTMLPreloadScanner"* %212, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %6) #16
  %296 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %286, i64 0, i32 0, i32 0, i32 0, i32 0
  %297 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %296, align 8
  %298 = icmp eq %"class.blink::SegmentedSubstring"* %297, null
  br i1 %298, label %311, label %299

299:                                              ; preds = %294
  %300 = bitcast %"class.blink::SegmentedSubstring"* %297 to i8*
  %301 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 5, i32 1
  %302 = load i32, i32* %301, align 8
  %303 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %6, i64 0, i32 5, i32 2
  %304 = load i32, i32* %303, align 4
  %305 = icmp eq i32 %302, %304
  br i1 %305, label %309, label %306

306:                                              ; preds = %299
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %286) #16
  %307 = bitcast %"class.WTF::Deque"* %286 to i8**
  %308 = load i8*, i8** %307, align 8
  br label %309

309:                                              ; preds = %306, %299
  %310 = phi i8* [ %308, %306 ], [ %300, %299 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %310) #16
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %296, align 8
  br label %311

311:                                              ; preds = %309, %294
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %217, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %327, label %314

314:                                              ; preds = %311
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #16
  br label %327

327:                                              ; preds = %311, %323, %326
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %213) #16
  %328 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 18, i32 0, i32 0
  %329 = load %"class.blink::HTMLResourcePreloader"*, %"class.blink::HTMLResourcePreloader"** %328, align 8
  %330 = icmp eq %"class.blink::HTMLResourcePreloader"* %329, null
  br i1 %330, label %333, label %331

331:                                              ; preds = %327
  %332 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %199, align 8
  call void @_ZN5blink18HTMLDocumentParser14ScanAndPreloadEPNS_18HTMLPreloadScannerE(%"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLPreloadScanner"* %332)
  br label %333

333:                                              ; preds = %193, %327, %331
  call void @_ZN5blink18HTMLDocumentParser12EndIfDelayedEv(%"class.blink::HTMLDocumentParser"* %0)
  %334 = load i32, i32* %171, align 4
  %335 = add nsw i32 %334, -1
  store i32 %335, i32* %171, align 4
  %336 = load i32, i32* %167, align 4
  %337 = add nsw i32 %336, -1
  store i32 %337, i32* %167, align 4
  %338 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %154, i64 0, i32 0, i32 0, i32 0, i32 0
  %339 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %338, align 8
  %340 = icmp eq %"class.blink::SegmentedSubstring"* %339, null
  br i1 %340, label %353, label %341

341:                                              ; preds = %333
  %342 = bitcast %"class.blink::SegmentedSubstring"* %339 to i8*
  %343 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 5, i32 1
  %344 = load i32, i32* %343, align 8
  %345 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 5, i32 2
  %346 = load i32, i32* %345, align 4
  %347 = icmp eq i32 %344, %346
  br i1 %347, label %351, label %348

348:                                              ; preds = %341
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %154) #16
  %349 = bitcast %"class.WTF::Deque"* %154 to i8**
  %350 = load i8*, i8** %349, align 8
  br label %351

351:                                              ; preds = %348, %341
  %352 = phi i8* [ %350, %348 ], [ %342, %341 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %352) #16
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %338, align 8
  br label %353

353:                                              ; preds = %351, %333
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %355 = icmp eq %"class.WTF::StringImpl"* %354, null
  br i1 %355, label %369, label %356

356:                                              ; preds = %353
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load atomic i32, i32* %357 monotonic, align 4
  %359 = and i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 0
  %362 = load i32, i32* %361, align 4
  br i1 %360, label %363, label %365

363:                                              ; preds = %356
  %364 = add i32 %362, -1
  store i32 %364, i32* %361, align 4
  br label %365

365:                                              ; preds = %363, %356
  %366 = phi i32 [ %364, %363 ], [ %362, %356 ]
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %369

368:                                              ; preds = %365
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %354) #16
  br label %369

369:                                              ; preds = %353, %365, %368
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %80) #16
  %370 = icmp eq i8* %30, null
  br i1 %370, label %375, label %371

371:                                              ; preds = %369
  %372 = load i8, i8* %30, align 1
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %375, label %374

374:                                              ; preds = %371
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %30, i8* %29, i64 %28) #16
  br label %375

375:                                              ; preds = %374, %371, %369, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIjPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4), i8*, i8** dereferenceable(8)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #16
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247373822, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = load i32, i32* %8, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = bitcast i8** %10 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #16
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #16
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #16
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #16
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #16
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #17
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  ret i64 %28
}

declare void @_ZN5blink15SegmentedString21SetExcludeLineNumbersEv(%"class.blink::SegmentedString"*) local_unnamed_addr #4

declare void @_ZN5blink11StyleEngine14UpdateViewportEv(%"class.blink::StyleEngine"*) local_unnamed_addr #4

declare %"class.blink::TextResourceDecoder"* @_ZN5blink25DecodedDataDocumentParser11TakeDecoderEv(%"class.blink::DecodedDataDocumentParser"*) local_unnamed_addr #4

declare void @_ZN5blink20BackgroundHTMLParser6CreateENSt3__110unique_ptrINS0_13ConfigurationENS1_14default_deleteIS3_EEEE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.base::WeakPtr"* sret, %"struct.blink::BackgroundHTMLParser::Configuration"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20PriorityHintsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #4

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #4

declare void @_ZN5blink20BackgroundHTMLParser4InitERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS4_14default_deleteIS6_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataEb(%"class.blink::BackgroundHTMLParser"*, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::CachedDocumentParameters"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* dereferenceable(112), i1 zeroext) local_unnamed_addr #4

declare void @_ZN5blink17MediaValuesCached21MediaValuesCachedDataC1ERNS_8DocumentE(%"struct.blink::MediaValuesCached::MediaValuesCachedData"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #4

declare void @_ZN5blink20BackgroundHTMLParser4StopEv(%"class.blink::BackgroundHTMLParser"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser6AppendERKN3WTF6StringE(%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %"class.blink::SegmentedString", align 8
  %6 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %7 = and i8 %6, 25
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %22, label %9, !prof !5

9:                                                ; preds = %2
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  br label %17

17:                                               ; preds = %9, %14
  %18 = phi i32 [ %16, %14 ], [ 0, %9 ]
  store i32 %18, i32* %3, align 4
  %19 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #16
  %20 = bitcast i8** %4 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %20, align 8
  %21 = call i64 @_ZN20trace_event_internal13AddTraceEventIjPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i32* nonnull dereferenceable(4) %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #16
  br label %22

22:                                               ; preds = %2, %17
  %23 = phi i64 [ -6148914691236517206, %2 ], [ %21, %17 ]
  %24 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23, i64 0, i64 0), %17 ]
  %25 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %17 ]
  %26 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp sgt i32 %27, 1
  br i1 %28, label %290, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.blink::SegmentedString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %30) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 88, i1 false)
  %31 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 3
  store i8 1, i8* %31, align 8
  %32 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 4
  store i8 1, i8* %32, align 1
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %35, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %36, label %90, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %56

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #16
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !4

51:                                               ; preds = %42
  call void @llvm.trap() #16
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %90, label %56

56:                                               ; preds = %37, %52
  %57 = phi %"class.WTF::StringImpl"* [ %54, %52 ], [ %34, %37 ]
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %90, label %61

61:                                               ; preds = %56
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %78, label %67

67:                                               ; preds = %61
  store i8 1, i8* %32, align 1
  %68 = icmp eq %"class.WTF::StringImpl"* %62, null
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  %70 = bitcast %"class.WTF::StringImpl"* %69 to i8*
  %71 = select i1 %68, i8* null, i8* %70
  %72 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %71, i8** %72, align 8
  %73 = zext i32 %59 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  %75 = getelementptr inbounds i8, i8* %74, i64 -1
  %76 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 2
  store i8* %75, i8** %76, align 8
  %77 = ptrtoint i8* %71 to i64
  br label %95

78:                                               ; preds = %61
  store i8 0, i8* %32, align 1
  %79 = icmp eq %"class.WTF::StringImpl"* %62, null
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  %81 = bitcast %"class.WTF::StringImpl"* %80 to i16*
  %82 = select i1 %79, i16* null, i16* %81
  %83 = bitcast %"class.blink::SegmentedString"* %5 to i16**
  store i16* %82, i16** %83, align 8
  %84 = zext i32 %59 to i64
  %85 = getelementptr inbounds i16, i16* %82, i64 %84
  %86 = getelementptr inbounds i16, i16* %85, i64 -1
  %87 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 2
  %88 = bitcast i8** %87 to i16**
  store i16* %86, i16** %88, align 8
  %89 = ptrtoint i16* %82 to i64
  br label %95

90:                                               ; preds = %29, %56, %52
  %91 = phi i1 [ false, %56 ], [ true, %52 ], [ true, %29 ]
  %92 = phi %"class.WTF::StringImpl"* [ %57, %56 ], [ null, %52 ], [ null, %29 ]
  store i8 1, i8* %32, align 1
  %93 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %93, align 8
  %94 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 2
  store i8* null, i8** %94, align 8
  br label %95

95:                                               ; preds = %90, %78, %67
  %96 = phi i1 [ false, %67 ], [ false, %78 ], [ %91, %90 ]
  %97 = phi %"class.WTF::StringImpl"* [ %57, %67 ], [ %57, %78 ], [ %92, %90 ]
  %98 = phi i64 [ %77, %67 ], [ %89, %78 ], [ 0, %90 ]
  %99 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 0, i32 1
  %100 = bitcast i8** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 1
  store i32 0, i32* %101, align 8
  %102 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 2
  store i32 0, i32* %102, align 4
  %103 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 3
  store i32 0, i32* %103, align 8
  %104 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 5
  %105 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 7
  %106 = bitcast %"class.WTF::Deque"* %104 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 25, i1 false) #16
  br i1 %96, label %112, label %107

107:                                              ; preds = %95
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  %111 = zext i1 %110 to i8
  br label %112

112:                                              ; preds = %95, %107
  %113 = phi i8 [ %111, %107 ], [ 1, %95 ]
  store i8 %113, i8* %105, align 1
  %114 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 10
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.180"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %115, align 8
  %117 = icmp eq %"class.blink::HTMLPreloadScanner"* %116, null
  br i1 %117, label %118, label %164

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %120 = load %"class.blink::Document"*, %"class.blink::Document"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %120, i64 0, i32 19
  %122 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %121) #16
  br i1 %122, label %123, label %164

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %125 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %125, i64 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 2
  br i1 %128, label %129, label %156

129:                                              ; preds = %123
  %130 = load %"class.blink::Document"*, %"class.blink::Document"** %119, align 8
  %131 = call zeroext i1 @_ZNK5blink8Document14IsPrefetchOnlyEv(%"class.blink::Document"* %130) #16
  br i1 %131, label %156, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %134 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %134, i64 0, i32 12, i32 0, i32 0
  %136 = load %"class.blink::Element"*, %"class.blink::Element"** %135, align 8
  %137 = icmp ne %"class.blink::Element"* %136, null
  %138 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %139 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %138, align 8
  %140 = icmp eq %"class.blink::HTMLParserScriptRunner"* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %132
  %142 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %139) #16
  br label %143

143:                                              ; preds = %141, %132
  %144 = phi i1 [ false, %132 ], [ %142, %141 ]
  %145 = or i1 %137, %144
  br i1 %145, label %156, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %148 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %148, i64 0, i32 1
  %150 = load i8, i8* %149, align 4, !range !3
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %146
  %153 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %154 = load i8, i8* %153, align 1, !range !3
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %164, label %156

156:                                              ; preds = %152, %143, %146, %129, %123
  %157 = call %"class.blink::HTMLPreloadScanner"* @_ZN5blink18HTMLDocumentParser20CreatePreloadScannerENS_19TokenPreloadScanner11ScannerTypeE(%"class.blink::HTMLDocumentParser"* %0, i32 0)
  %158 = ptrtoint %"class.blink::HTMLPreloadScanner"* %157 to i64
  %159 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %115, align 8
  %160 = bitcast %"class.std::__1::unique_ptr.180"* %114 to i64*
  store i64 %158, i64* %160, align 8
  %161 = icmp eq %"class.blink::HTMLPreloadScanner"* %159, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %156
  call void @_ZN5blink18HTMLPreloadScannerD1Ev(%"class.blink::HTMLPreloadScanner"* nonnull %159) #16
  %163 = bitcast %"class.blink::HTMLPreloadScanner"* %159 to i8*
  call void @free(i8* %163) #16
  br label %164

164:                                              ; preds = %152, %112, %156, %162, %118
  %165 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %166 = load %"class.blink::Document"*, %"class.blink::Document"** %165, align 8
  %167 = call zeroext i1 @_ZNK5blink8Document14IsPrefetchOnlyEv(%"class.blink::Document"* %166) #16
  br i1 %167, label %168, label %181

168:                                              ; preds = %164
  %169 = load %"class.blink::Document"*, %"class.blink::Document"** %165, align 8
  %170 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %169) #16
  %171 = getelementptr inbounds %"class.blink::DocumentLoader", %"class.blink::DocumentLoader"* %170, i64 0, i32 27, i32 49
  %172 = load i64, i64* %171, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %257

174:                                              ; preds = %168
  %175 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %115, align 8
  call void @_ZN5blink18HTMLPreloadScanner11AppendToEndERKNS_15SegmentedStringE(%"class.blink::HTMLPreloadScanner"* %175, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %5) #16
  %176 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 18, i32 0, i32 0
  %177 = load %"class.blink::HTMLResourcePreloader"*, %"class.blink::HTMLResourcePreloader"** %176, align 8
  %178 = icmp eq %"class.blink::HTMLResourcePreloader"* %177, null
  br i1 %178, label %257, label %179

179:                                              ; preds = %174
  %180 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %115, align 8
  call void @_ZN5blink18HTMLDocumentParser14ScanAndPreloadEPNS_18HTMLPreloadScannerE(%"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLPreloadScanner"* %180)
  br label %257

181:                                              ; preds = %164
  %182 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %115, align 8
  %183 = icmp eq %"class.blink::HTMLPreloadScanner"* %182, null
  br i1 %183, label %225, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 18, i32 0, i32 0
  %186 = load %"class.blink::HTMLResourcePreloader"*, %"class.blink::HTMLResourcePreloader"** %185, align 8
  %187 = icmp eq %"class.blink::HTMLResourcePreloader"* %186, null
  br i1 %187, label %225, label %188

188:                                              ; preds = %184
  call void @_ZN5blink18HTMLPreloadScanner11AppendToEndERKNS_15SegmentedStringE(%"class.blink::HTMLPreloadScanner"* nonnull %182, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %5) #16
  %189 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %190 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %190, i64 0, i32 2
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 1
  br i1 %193, label %194, label %225

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %196 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %196, i64 0, i32 12, i32 0, i32 0
  %198 = load %"class.blink::Element"*, %"class.blink::Element"** %197, align 8
  %199 = icmp ne %"class.blink::Element"* %198, null
  %200 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %201 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %200, align 8
  %202 = icmp eq %"class.blink::HTMLParserScriptRunner"* %201, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %194
  %204 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %201) #16
  br label %205

205:                                              ; preds = %203, %194
  %206 = phi i1 [ false, %194 ], [ %204, %203 ]
  %207 = or i1 %199, %206
  br i1 %207, label %223, label %208

208:                                              ; preds = %205
  %209 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %210 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %210, i64 0, i32 1
  %212 = load i8, i8* %211, align 4, !range !3
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %223

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %216 = load i8, i8* %215, align 1, !range !3
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %223

218:                                              ; preds = %214
  %219 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %189, align 8
  %220 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %219, i64 0, i32 7
  %221 = load i8, i8* %220, align 1, !range !3
  %222 = icmp eq i8 %221, 0
  br i1 %222, label %223, label %225

223:                                              ; preds = %218, %214, %205, %208
  %224 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %115, align 8
  call void @_ZN5blink18HTMLDocumentParser14ScanAndPreloadEPNS_18HTMLPreloadScannerE(%"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLPreloadScanner"* %224)
  br label %225

225:                                              ; preds = %218, %184, %181, %188, %223
  %226 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %227 = load %"class.blink::SegmentedString"*, %"class.blink::SegmentedString"** %226, align 8
  call void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"* %227, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %5) #16
  %228 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %229 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %229, i64 0, i32 7
  store i8 1, i8* %230, align 1
  %231 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %232 = load %"class.blink::HTMLParserMetrics"*, %"class.blink::HTMLParserMetrics"** %231, align 8
  %233 = icmp eq %"class.blink::HTMLParserMetrics"* %232, null
  br i1 %233, label %242, label %234

234:                                              ; preds = %225
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %240, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 1
  %239 = load i32, i32* %238, align 4
  br label %240

240:                                              ; preds = %234, %237
  %241 = phi i32 [ %239, %237 ], [ 0, %234 ]
  call void @_ZN5blink17HTMLParserMetrics8AddInputEj(%"class.blink::HTMLParserMetrics"* nonnull %232, i32 %241) #16
  br label %242

242:                                              ; preds = %225, %240
  %243 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 28
  %244 = load i32, i32* %243, align 8
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %257

246:                                              ; preds = %242
  %247 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %228, align 8
  %248 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %247, i64 0, i32 2
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 1
  br i1 %250, label %251, label %256

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %247, i64 0, i32 4
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %251
  call void @_ZN5blink18HTMLDocumentParser21SchedulePumpTokenizerEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %257

256:                                              ; preds = %251, %246
  call void @_ZN5blink18HTMLDocumentParser23PumpTokenizerIfPossibleEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %257

257:                                              ; preds = %174, %242, %255, %256, %179, %168
  %258 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %259 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %258, align 8
  %260 = icmp eq %"class.blink::SegmentedSubstring"* %259, null
  br i1 %260, label %273, label %261

261:                                              ; preds = %257
  %262 = bitcast %"class.blink::SegmentedSubstring"* %259 to i8*
  %263 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 5, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %5, i64 0, i32 5, i32 2
  %266 = load i32, i32* %265, align 4
  %267 = icmp eq i32 %264, %266
  br i1 %267, label %271, label %268

268:                                              ; preds = %261
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %104) #16
  %269 = bitcast %"class.WTF::Deque"* %104 to i8**
  %270 = load i8*, i8** %269, align 8
  br label %271

271:                                              ; preds = %268, %261
  %272 = phi i8* [ %270, %268 ], [ %262, %261 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %272) #16
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %258, align 8
  br label %273

273:                                              ; preds = %271, %257
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #16
  br label %289

289:                                              ; preds = %273, %285, %288
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %30) #16
  br label %290

290:                                              ; preds = %22, %289
  %291 = icmp eq i8* %25, null
  br i1 %291, label %296, label %292

292:                                              ; preds = %290
  %293 = load i8, i8* %25, align 1
  %294 = icmp eq i8 %293, 0
  br i1 %294, label %296, label %295

295:                                              ; preds = %292
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %25, i8* %24, i64 %23) #16
  br label %296

296:                                              ; preds = %290, %292, %295
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #4

declare void @_ZN5blink17HTMLParserMetrics8AddInputEj(%"class.blink::HTMLParserMetrics"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser3endEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %4 = load i8, i8* %3, align 2, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  store i8 0, i8* %3, align 2
  %7 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  br label %12

12:                                               ; preds = %9, %6
  %13 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  br i1 %13, label %14, label %18

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %16 = bitcast i64* %15 to %"class.blink::BackgroundHTMLParser"**
  %17 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %16, align 8
  br label %18

18:                                               ; preds = %12, %14
  %19 = phi %"class.blink::BackgroundHTMLParser"* [ %17, %14 ], [ null, %12 ]
  call void @_ZN5blink20BackgroundHTMLParser4StopEv(%"class.blink::BackgroundHTMLParser"* %19) #16
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %22 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %21, align 8
  call void @_ZN5blink15HTMLTreeBuilder8FinishedEv(%"class.blink::HTMLTreeBuilder"* %22) #16
  %23 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 18
  %24 = bitcast %"class.blink::Member.470"* %23 to i64*
  store atomic i64 0, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink14DocumentParser11StopParsingEv(%"class.blink::DocumentParser"* %25) #16
  ret void
}

declare void @_ZN5blink15HTMLTreeBuilder8FinishedEv(%"class.blink::HTMLTreeBuilder"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink22HTMLParserScriptRunner31ExecuteScriptsWaitingForParsingEv(%"class.blink::HTMLParserScriptRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18HTMLDocumentParser14ShouldDelayEndEv(%"class.blink::HTMLDocumentParser"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 28
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %44

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %7 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %7, i64 0, i32 12, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp ne %"class.blink::Element"* %9, null
  %11 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %12 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %11, align 8
  %13 = icmp eq %"class.blink::HTMLParserScriptRunner"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  %15 = tail call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %12) #16
  br label %16

16:                                               ; preds = %14, %5
  %17 = phi i1 [ false, %5 ], [ %15, %14 ]
  %18 = or i1 %10, %17
  br i1 %18, label %44, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %21, i64 0, i32 1
  %23 = load i8, i8* %22, align 4, !range !3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %44

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %44

29:                                               ; preds = %25
  %30 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %11, align 8
  %31 = icmp eq %"class.blink::HTMLParserScriptRunner"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %30, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %32, %29
  %39 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %40 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %42, 0
  br label %44

44:                                               ; preds = %32, %25, %1, %16, %19, %38
  %45 = phi i1 [ true, %32 ], [ true, %25 ], [ true, %1 ], [ %43, %38 ], [ true, %19 ], [ true, %16 ]
  ret i1 %45
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18HTMLDocumentParser17IsExecutingScriptEv(%"class.blink::HTMLDocumentParser"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLParserScriptRunner"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLParserScriptRunner", %"class.blink::HTMLParserScriptRunner"* %3, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp ne i32 %9, 0
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %10, %5 ], [ false, %1 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser6FinishEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback.757", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %5 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %5, i64 0, i32 4
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4
  %9 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %4, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 4
  tail call void @_ZN5blink18HTMLDocumentParser5FlushEv(%"class.blink::HTMLDocumentParser"* %0)
  %13 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %117, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %18 = load i8, i8* %17, align 2, !range !3
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %46, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %22 = load %"class.blink::SegmentedString"*, %"class.blink::SegmentedString"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %22, i64 0, i32 6
  %24 = load i8, i8* %23, align 8, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  tail call void @_ZN5blink15SegmentedString5CloseEv(%"class.blink::SegmentedString"* %22) #16
  br label %27

27:                                               ; preds = %20, %26
  %28 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  %29 = bitcast %"class.base::SingleThreadTaskRunner"** %28 to %"class.base::TaskRunner"**
  %30 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %29, align 8
  %31 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 1496) #16
  %32 = call i8* @_Znwm(i64 64) #17, !noalias !46
  %33 = bitcast i8* %32 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %33, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #16, !noalias !46
  %34 = getelementptr inbounds i8, i8* %32, i64 32
  %35 = bitcast i8* %34 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::BackgroundHTMLParser"*)* @_ZN5blink20BackgroundHTMLParser6FinishEv to i64), i64 0>, <2 x i64>* %35, align 8, !noalias !46
  %36 = getelementptr inbounds i8, i8* %32, i64 48
  %37 = bitcast i8* %36 to %"class.base::internal::WeakReference"*
  %38 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %37, %"class.base::internal::WeakReference"* dereferenceable(8) %38) #16, !noalias !46
  %39 = getelementptr inbounds i8, i8* %32, i64 56
  %40 = bitcast i8* %39 to i64*
  %41 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %42 = load i64, i64* %41, align 8, !noalias !46
  store i64 %42, i64* %40, align 8, !noalias !46
  %43 = bitcast %"class.base::OnceCallback.757"* %3 to i8**
  store i8* %32, i8** %43, align 8, !alias.scope !46
  %44 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %30, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback.757"* nonnull %3) #16
  %45 = getelementptr inbounds %"class.base::OnceCallback.757", %"class.base::OnceCallback.757"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #16
  br label %117

46:                                               ; preds = %16
  %47 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %48, align 8
  %50 = icmp eq %"class.blink::HTMLTokenizer"* %49, null
  br i1 %50, label %51, label %95

51:                                               ; preds = %46
  %52 = tail call noalias i8* @malloc(i64 2512) #16
  %53 = getelementptr inbounds i8, i8* %52, i64 16
  %54 = getelementptr inbounds i8, i8* %52, i64 40
  %55 = bitcast i8* %53 to i8**
  store i8* %54, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %52, i64 24
  %57 = getelementptr inbounds i8, i8* %52, i64 32
  %58 = getelementptr inbounds i8, i8* %52, i64 552
  %59 = bitcast i8* %57 to i8**
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %52, i64 560
  %61 = getelementptr inbounds i8, i8* %52, i64 576
  %62 = bitcast i8* %60 to i8**
  store i8* %61, i8** %62, align 8
  %63 = getelementptr inbounds i8, i8* %52, i64 568
  %64 = bitcast i8* %63 to i32*
  store i32 10, i32* %64, align 8
  %65 = getelementptr inbounds i8, i8* %52, i64 572
  %66 = bitcast i8* %65 to i32*
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds i8, i8* %52, i64 2504
  %68 = bitcast i8* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = bitcast i8* %52 to i32*
  store i32 0, i32* %69, align 8
  %70 = getelementptr inbounds i8, i8* %52, i64 4
  %71 = bitcast i8* %70 to i32*
  store i32 0, i32* %71, align 4
  %72 = getelementptr inbounds i8, i8* %52, i64 12
  %73 = bitcast i8* %72 to i32*
  store i32 0, i32* %73, align 4
  %74 = ptrtoint i8* %54 to i64
  %75 = bitcast i8* %56 to i64*
  store i64 %74, i64* %75, align 8
  %76 = bitcast i8* %58 to i16*
  store i16 0, i16* %76, align 8
  %77 = ptrtoint i8* %52 to i64
  %78 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 6
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %79, align 8
  %81 = bitcast %"class.std::__1::unique_ptr.44"* %78 to i64*
  store i64 %77, i64* %81, align 8
  %82 = icmp eq %"class.blink::HTMLToken"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %51
  tail call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %80) #16
  %84 = bitcast %"class.blink::HTMLToken"* %80 to i8*
  tail call void @free(i8* %84) #16
  br label %85

85:                                               ; preds = %83, %51
  %86 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 3
  %87 = tail call noalias i8* @malloc(i64 248) #16
  %88 = bitcast i8* %87 to %"class.blink::HTMLTokenizer"*
  tail call void @_ZN5blink13HTMLTokenizerC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTokenizer"* %88, %"class.blink::HTMLParserOptions"* dereferenceable(2) %86) #16
  %89 = ptrtoint i8* %87 to i64
  %90 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %48, align 8
  %91 = bitcast %"class.std::__1::unique_ptr.67"* %47 to i64*
  store i64 %89, i64* %91, align 8
  %92 = icmp eq %"class.blink::HTMLTokenizer"* %90, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %85
  tail call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %90) #16
  %94 = bitcast %"class.blink::HTMLTokenizer"* %90 to i8*
  tail call void @free(i8* %94) #16
  br label %95

95:                                               ; preds = %46, %85, %93
  %96 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 1
  %97 = load %"class.blink::SegmentedString"*, %"class.blink::SegmentedString"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %97, i64 0, i32 6
  %99 = load i8, i8* %98, align 8, !range !3
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4
  tail call void @_ZN5blink15HTMLInputStream13MarkEndOfFileEv(%"class.blink::HTMLInputStream"* %102)
  br label %103

103:                                              ; preds = %95, %101
  %104 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %4, align 8
  %105 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %104, i64 0, i32 5
  %106 = load i32, i32* %105, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %4, align 8
  %109 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %108, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %103
  %113 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %114 = load %"class.blink::Document"*, %"class.blink::Document"** %113, align 8
  %115 = tail call zeroext i1 @_ZNK5blink8Document14IsPrefetchOnlyEv(%"class.blink::Document"* %114) #16
  br i1 %115, label %116, label %117

116:                                              ; preds = %112, %103
  tail call void @_ZN5blink18HTMLDocumentParser12AttemptToEndEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %117

117:                                              ; preds = %112, %1, %116, %27
  %118 = load i32, i32* %10, align 4
  %119 = add nsw i32 %118, -1
  store i32 %119, i32* %10, align 4
  %120 = load i32, i32* %6, align 4
  %121 = add nsw i32 %120, -1
  store i32 %121, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser5FlushEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.757", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8, !prof !5

8:                                                ; preds = %1
  %9 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = bitcast i8** %2 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %10, align 8
  %11 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %8 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.34, i64 0, i64 0), %8 ]
  %15 = phi i64 [ -6148914691236517206, %1 ], [ %11, %8 ]
  %16 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 3
  br i1 %18, label %99, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 1
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %99

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 25
  %26 = load i8, i8* %25, align 4, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %98, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %30 = load i8, i8* %29, align 2, !range !3
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %79

32:                                               ; preds = %28
  store i8 0, i8* %25, align 4
  %33 = call noalias i8* @malloc(i64 2512) #16
  %34 = getelementptr inbounds i8, i8* %33, i64 16
  %35 = getelementptr inbounds i8, i8* %33, i64 40
  %36 = bitcast i8* %34 to i8**
  store i8* %35, i8** %36, align 8
  %37 = getelementptr inbounds i8, i8* %33, i64 24
  %38 = getelementptr inbounds i8, i8* %33, i64 32
  %39 = getelementptr inbounds i8, i8* %33, i64 552
  %40 = bitcast i8* %38 to i8**
  store i8* %39, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %33, i64 560
  %42 = getelementptr inbounds i8, i8* %33, i64 576
  %43 = bitcast i8* %41 to i8**
  store i8* %42, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %33, i64 568
  %45 = bitcast i8* %44 to i32*
  store i32 10, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 572
  %47 = bitcast i8* %46 to i32*
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %33, i64 2504
  %49 = bitcast i8* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = bitcast i8* %33 to i32*
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds i8, i8* %33, i64 4
  %52 = bitcast i8* %51 to i32*
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds i8, i8* %33, i64 12
  %54 = bitcast i8* %53 to i32*
  store i32 0, i32* %54, align 4
  %55 = ptrtoint i8* %35 to i64
  %56 = bitcast i8* %37 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast i8* %39 to i16*
  store i16 0, i16* %57, align 8
  %58 = ptrtoint i8* %33 to i64
  %59 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 6
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %60, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.44"* %59 to i64*
  store i64 %58, i64* %62, align 8
  %63 = icmp eq %"class.blink::HTMLToken"* %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %32
  call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %61) #16
  %65 = bitcast %"class.blink::HTMLToken"* %61 to i8*
  call void @free(i8* %65) #16
  br label %66

66:                                               ; preds = %64, %32
  %67 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 3
  %68 = call noalias i8* @malloc(i64 248) #16
  %69 = bitcast i8* %68 to %"class.blink::HTMLTokenizer"*
  call void @_ZN5blink13HTMLTokenizerC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTokenizer"* %69, %"class.blink::HTMLParserOptions"* dereferenceable(2) %67) #16
  %70 = ptrtoint i8* %68 to i64
  %71 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %72, align 8
  %74 = bitcast %"class.std::__1::unique_ptr.67"* %71 to i64*
  store i64 %70, i64* %74, align 8
  %75 = icmp eq %"class.blink::HTMLTokenizer"* %73, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %66
  call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %73) #16
  %77 = bitcast %"class.blink::HTMLTokenizer"* %73 to i8*
  call void @free(i8* %77) #16
  br label %78

78:                                               ; preds = %76, %66
  call void @_ZN5blink25DecodedDataDocumentParser5FlushEv(%"class.blink::DecodedDataDocumentParser"* %20) #16
  br label %99

79:                                               ; preds = %28
  %80 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  %81 = bitcast %"class.base::SingleThreadTaskRunner"** %80 to %"class.base::TaskRunner"**
  %82 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %81, align 8
  %83 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 1769) #16
  %84 = call i8* @_Znwm(i64 64) #17, !noalias !53
  %85 = bitcast i8* %84 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %85, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #16, !noalias !53
  %86 = getelementptr inbounds i8, i8* %84, i64 32
  %87 = bitcast i8* %86 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::BackgroundHTMLParser"*)* @_ZN5blink20BackgroundHTMLParser5FlushEv to i64), i64 0>, <2 x i64>* %87, align 8, !noalias !53
  %88 = getelementptr inbounds i8, i8* %84, i64 48
  %89 = bitcast i8* %88 to %"class.base::internal::WeakReference"*
  %90 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %89, %"class.base::internal::WeakReference"* dereferenceable(8) %90) #16, !noalias !53
  %91 = getelementptr inbounds i8, i8* %84, i64 56
  %92 = bitcast i8* %91 to i64*
  %93 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %94 = load i64, i64* %93, align 8, !noalias !53
  store i64 %94, i64* %92, align 8, !noalias !53
  %95 = bitcast %"class.base::OnceCallback.757"* %4 to i8**
  store i8* %84, i8** %95, align 8, !alias.scope !53
  %96 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %82, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.757"* nonnull %4) #16
  %97 = getelementptr inbounds %"class.base::OnceCallback.757", %"class.base::OnceCallback.757"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %97) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #16
  br label %99

98:                                               ; preds = %24
  call void @_ZN5blink25DecodedDataDocumentParser5FlushEv(%"class.blink::DecodedDataDocumentParser"* %20) #16
  br label %99

99:                                               ; preds = %19, %79, %98, %12, %78
  %100 = icmp eq i8* %13, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %99
  %102 = load i8, i8* %13, align 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %101
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %13, i8* %14, i64 %15) #16
  br label %105

105:                                              ; preds = %99, %101, %104
  ret void
}

declare void @_ZN5blink20BackgroundHTMLParser6FinishEv(%"class.blink::BackgroundHTMLParser"*) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15HTMLInputStream13MarkEndOfFileEv(%"class.blink::HTMLInputStream"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.blink::SegmentedString", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::HTMLInputStream", %"class.blink::HTMLInputStream"* %0, i64 0, i32 1
  %5 = load %"class.blink::SegmentedString"*, %"class.blink::SegmentedString"** %4, align 8
  %6 = bitcast %"class.blink::SegmentedString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #16
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  call void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"* nonnull %3, i8* nonnull @_ZN5blinkL16kEndOfFileMarkerE, i32 1) #16
  %8 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 0, i32 3
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 0, i32 4
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %67, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %33

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #16
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !4

28:                                               ; preds = %19
  call void @llvm.trap() #16
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %67, label %33

33:                                               ; preds = %14, %29
  %34 = phi %"class.WTF::StringImpl"* [ %31, %29 ], [ %11, %14 ]
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %67, label %38

38:                                               ; preds = %33
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %38
  store i8 1, i8* %9, align 1
  %45 = icmp eq %"class.WTF::StringImpl"* %39, null
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %47 = bitcast %"class.WTF::StringImpl"* %46 to i8*
  %48 = select i1 %45, i8* null, i8* %47
  %49 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 0, i32 0, i32 0
  store i8* %48, i8** %49, align 8
  %50 = zext i32 %36 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = getelementptr inbounds i8, i8* %51, i64 -1
  %53 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 0, i32 2
  store i8* %52, i8** %53, align 8
  %54 = ptrtoint i8* %48 to i64
  br label %72

55:                                               ; preds = %38
  store i8 0, i8* %9, align 1
  %56 = icmp eq %"class.WTF::StringImpl"* %39, null
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 1
  %58 = bitcast %"class.WTF::StringImpl"* %57 to i16*
  %59 = select i1 %56, i16* null, i16* %58
  %60 = bitcast %"class.blink::SegmentedString"* %2 to i16**
  store i16* %59, i16** %60, align 8
  %61 = zext i32 %36 to i64
  %62 = getelementptr inbounds i16, i16* %59, i64 %61
  %63 = getelementptr inbounds i16, i16* %62, i64 -1
  %64 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 0, i32 2
  %65 = bitcast i8** %64 to i16**
  store i16* %63, i16** %65, align 8
  %66 = ptrtoint i16* %59 to i64
  br label %72

67:                                               ; preds = %1, %33, %29
  %68 = phi i1 [ false, %33 ], [ true, %29 ], [ true, %1 ]
  %69 = phi %"class.WTF::StringImpl"* [ %34, %33 ], [ null, %29 ], [ null, %1 ]
  store i8 1, i8* %9, align 1
  %70 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 0, i32 0, i32 0
  store i8* null, i8** %70, align 8
  %71 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 0, i32 2
  store i8* null, i8** %71, align 8
  br label %72

72:                                               ; preds = %67, %55, %44
  %73 = phi i1 [ false, %44 ], [ false, %55 ], [ %68, %67 ]
  %74 = phi %"class.WTF::StringImpl"* [ %34, %44 ], [ %34, %55 ], [ %69, %67 ]
  %75 = phi i64 [ %54, %44 ], [ %66, %55 ], [ 0, %67 ]
  %76 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 0, i32 1
  %77 = bitcast i8** %76 to i64*
  store i64 %75, i64* %77, align 8
  %78 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 1
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 2
  store i32 0, i32* %79, align 4
  %80 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 3
  store i32 0, i32* %80, align 8
  %81 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 5
  %82 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 7
  %83 = bitcast %"class.WTF::Deque"* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 25, i1 false) #16
  br i1 %73, label %89, label %84

84:                                               ; preds = %72
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  %88 = zext i1 %87 to i8
  br label %89

89:                                               ; preds = %72, %84
  %90 = phi i8 [ %88, %84 ], [ 1, %72 ]
  store i8 %90, i8* %82, align 1
  call void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"* %5, %"class.blink::SegmentedString"* nonnull dereferenceable(88) %2) #16
  %91 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %91, align 8
  %93 = icmp eq %"class.blink::SegmentedSubstring"* %92, null
  br i1 %93, label %106, label %94

94:                                               ; preds = %89
  %95 = bitcast %"class.blink::SegmentedSubstring"* %92 to i8*
  %96 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 5, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = getelementptr inbounds %"class.blink::SegmentedString", %"class.blink::SegmentedString"* %2, i64 0, i32 5, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %97, %99
  br i1 %100, label %104, label %101

101:                                              ; preds = %94
  call void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"* %81) #16
  %102 = bitcast %"class.WTF::Deque"* %81 to i8**
  %103 = load i8*, i8** %102, align 8
  br label %104

104:                                              ; preds = %101, %94
  %105 = phi i8* [ %103, %101 ], [ %95, %94 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %105) #16
  store %"class.blink::SegmentedSubstring"* null, %"class.blink::SegmentedSubstring"** %91, align 8
  br label %106

106:                                              ; preds = %104, %89
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #16
  br label %122

122:                                              ; preds = %106, %118, %121
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #16
  br label %138

138:                                              ; preds = %122, %134, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #16
  %139 = load %"class.blink::SegmentedString"*, %"class.blink::SegmentedString"** %4, align 8
  call void @_ZN5blink15SegmentedString5CloseEv(%"class.blink::SegmentedString"* %139) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18HTMLDocumentParser21IsParsingAtLineNumberEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 25
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 30
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink24ScriptableDocumentParser21IsParsingAtLineNumberEv(%"class.blink::ScriptableDocumentParser"* %10) #16
  br label %12

12:                                               ; preds = %9, %5
  %13 = phi i1 [ false, %5 ], [ %11, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink24ScriptableDocumentParser21IsParsingAtLineNumberEv(%"class.blink::ScriptableDocumentParser"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink18HTMLDocumentParser10LineNumberEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 14, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  br label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0
  %10 = tail call i32 @_ZNK5blink15SegmentedString11CurrentLineEv(%"class.blink::SegmentedString"* %9) #16
  br label %11

11:                                               ; preds = %8, %5
  %12 = phi i32 [ %7, %5 ], [ %10, %8 ]
  ret i32 %12
}

declare i32 @_ZNK5blink15SegmentedString11CurrentLineEv(%"class.blink::SegmentedString"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink18HTMLDocumentParser15GetTextPositionEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %3 = load i8, i8* %2, align 2, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 14
  %7 = bitcast %"class.WTF::TextPosition"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = trunc i64 %8 to i32
  %10 = lshr i64 %8, 32
  %11 = trunc i64 %10 to i32
  br label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0
  %14 = tail call i32 @_ZNK5blink15SegmentedString11CurrentLineEv(%"class.blink::SegmentedString"* %13) #16
  %15 = tail call i32 @_ZNK5blink15SegmentedString13CurrentColumnEv(%"class.blink::SegmentedString"* %13) #16
  br label %16

16:                                               ; preds = %12, %5
  %17 = phi i32 [ %15, %12 ], [ %11, %5 ]
  %18 = phi i32 [ %14, %12 ], [ %9, %5 ]
  %19 = zext i32 %17 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %18 to i64
  %22 = or i64 %20, %21
  ret i64 %22
}

declare i32 @_ZNK5blink15SegmentedString13CurrentColumnEv(%"class.blink::SegmentedString"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser23ResumeParsingAfterPauseEv(%"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = bitcast i8** %2 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %8, align 8
  %9 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  %12 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.28, i64 0, i64 0), %6 ]
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %9, %6 ]
  %14 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  %15 = load i8, i8* %14, align 2, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  store i8 0, i8* %14, align 2
  %18 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  store i8 1, i8* %18, align 1
  br label %19

19:                                               ; preds = %10, %17
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp sgt i32 %21, 1
  br i1 %22, label %95, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %25 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %25, i64 0, i32 12, i32 0, i32 0
  %27 = load %"class.blink::Element"*, %"class.blink::Element"** %26, align 8
  %28 = icmp ne %"class.blink::Element"* %27, null
  %29 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %30 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %29, align 8
  %31 = icmp eq %"class.blink::HTMLParserScriptRunner"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %23
  %33 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %30) #16
  br label %34

34:                                               ; preds = %32, %23
  %35 = phi i1 [ false, %23 ], [ %33, %32 ]
  %36 = or i1 %28, %35
  br i1 %36, label %95, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %39 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %39, i64 0, i32 1
  %41 = load i8, i8* %40, align 4, !range !3
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %95

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %45 = load i8, i8* %44, align 1, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %95

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %49 = load i8, i8* %48, align 2, !range !3
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %63, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %53 = load %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %52, align 8
  %54 = icmp eq %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  store %"struct.blink::HTMLDocumentParser::TokenizedChunk"* null, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %52, align 8
  call void @_ZN5blink18HTMLDocumentParser20ValidateSpeculationsENSt3__110unique_ptrINS0_14TokenizedChunkENS1_14default_deleteIS3_EEEE(%"class.blink::HTMLDocumentParser"* %0, %"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %53)
  call void @_ZN5blink18HTMLDocumentParser23PumpPendingSpeculationsEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %95

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 13, i32 0, i32 0
  %58 = load %"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLParserScheduler"** %57, align 8
  %59 = icmp eq %"class.blink::HTMLParserScheduler"* %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = call zeroext i1 @_ZNK5blink19HTMLParserScheduler21IsScheduledForUnpauseEv(%"class.blink::HTMLParserScheduler"* nonnull %58) #16
  br i1 %61, label %95, label %62

62:                                               ; preds = %56, %60
  call void @_ZN5blink18HTMLDocumentParser23PumpPendingSpeculationsEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %95

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %65 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %64, align 8
  store %"class.blink::HTMLPreloadScanner"* null, %"class.blink::HTMLPreloadScanner"** %64, align 8
  %66 = icmp eq %"class.blink::HTMLPreloadScanner"* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  call void @_ZN5blink18HTMLPreloadScannerD1Ev(%"class.blink::HTMLPreloadScanner"* nonnull %65) #16
  %68 = bitcast %"class.blink::HTMLPreloadScanner"* %65 to i8*
  call void @free(i8* %68) #16
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %71 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %70, align 8
  %72 = icmp eq %"class.blink::HTMLTokenizer"* %71, null
  br i1 %72, label %94, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 19, i32 0, i32 0
  %75 = load %"class.blink::HTMLDocumentParserState"*, %"class.blink::HTMLDocumentParserState"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %75, i64 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 1
  %79 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %75, i64 0, i32 4
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  %82 = and i1 %78, %81
  br i1 %82, label %83, label %88

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 28
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %83
  call void @_ZN5blink18HTMLDocumentParser21SchedulePumpTokenizerEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %95

88:                                               ; preds = %73, %83
  %89 = phi i32 [ 0, %83 ], [ %80, %73 ]
  %90 = getelementptr inbounds %"class.blink::HTMLDocumentParserState", %"class.blink::HTMLDocumentParserState"* %75, i64 0, i32 4
  %91 = add nsw i32 %89, 1
  store i32 %91, i32* %90, align 4
  call void @_ZN5blink18HTMLDocumentParser23PumpTokenizerIfPossibleEv(%"class.blink::HTMLDocumentParser"* %0)
  %92 = load i32, i32* %90, align 4
  %93 = add nsw i32 %92, -1
  store i32 %93, i32* %90, align 4
  br label %95

94:                                               ; preds = %69
  call void @_ZN5blink18HTMLDocumentParser12EndIfDelayedEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %95

95:                                               ; preds = %43, %34, %37, %94, %88, %87, %55, %62, %60, %19
  %96 = icmp eq i8* %11, null
  br i1 %96, label %101, label %97

97:                                               ; preds = %95
  %98 = load i8, i8* %11, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %11, i8* %12, i64 %13) #16
  br label %101

101:                                              ; preds = %95, %97, %100
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser47AppendCurrentInputStreamToPreloadScannerAndScanEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = bitcast i8** %2 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %8, align 8
  %9 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.29, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i64 [ -6148914691236517206, %1 ], [ %9, %6 ]
  %12 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([68 x i8], [68 x i8]* @.str.29, i64 0, i64 0), %6 ]
  %13 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  %14 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %15 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4, i32 0
  call void @_ZN5blink18HTMLPreloadScanner11AppendToEndERKNS_15SegmentedStringE(%"class.blink::HTMLPreloadScanner"* %15, %"class.blink::SegmentedString"* dereferenceable(88) %16) #16
  %17 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %14, align 8
  call void @_ZN5blink18HTMLDocumentParser14ScanAndPreloadEPNS_18HTMLPreloadScannerE(%"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLPreloadScanner"* %17)
  %18 = icmp eq i8* %13, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %10
  %20 = load i8, i8* %13, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %13, i8* %12, i64 %11) #16
  br label %23

23:                                               ; preds = %10, %19, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink18HTMLDocumentParser47AppendCurrentInputStreamToPreloadScannerAndScanEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 -1, i32 19
  %3 = bitcast %"class.blink::Member.474"* %2 to %"class.blink::HTMLDocumentParser"*
  tail call void @_ZN5blink18HTMLDocumentParser47AppendCurrentInputStreamToPreloadScannerAndScanEv(%"class.blink::HTMLDocumentParser"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser18NotifyScriptLoadedEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = alloca i8*, align 8
  %3 = alloca %"class.blink::scheduler::CooperativeSchedulingManager::AllowedStackScope", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7, !prof !5

7:                                                ; preds = %1
  %8 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = bitcast i8** %2 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %9, align 8
  %10 = call i64 @_ZN20trace_event_internal13AddTraceEventIPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.30, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i64 [ -6148914691236517206, %1 ], [ %10, %7 ]
  %13 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([39 x i8], [39 x i8]* @.str.30, i64 0, i64 0), %7 ]
  %14 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %7 ]
  %15 = bitcast %"class.blink::scheduler::CooperativeSchedulingManager::AllowedStackScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.blink::scheduler::CooperativeSchedulingManager::AllowedStackScope", %"class.blink::scheduler::CooperativeSchedulingManager::AllowedStackScope"* %3, i64 0, i32 0
  store %"class.blink::scheduler::CooperativeSchedulingManager"* inttoptr (i64 -6148914691236517206 to %"class.blink::scheduler::CooperativeSchedulingManager"*), %"class.blink::scheduler::CooperativeSchedulingManager"** %16, align 8
  %17 = call %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() #16
  call void @_ZN5blink9scheduler28CooperativeSchedulingManager17AllowedStackScopeC1EPS1_(%"class.blink::scheduler::CooperativeSchedulingManager::AllowedStackScope"* nonnull %3, %"class.blink::scheduler::CooperativeSchedulingManager"* %17) #16
  %18 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, 1
  br i1 %20, label %54, label %21

21:                                               ; preds = %11
  %22 = icmp eq i32 %19, 1
  %23 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %24 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %23, align 8
  br i1 %22, label %25, label %30

25:                                               ; preds = %21
  %26 = icmp eq %"class.blink::HTMLParserScriptRunner"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %25
  %28 = call zeroext i1 @_ZN5blink22HTMLParserScriptRunner31ExecuteScriptsWaitingForParsingEv(%"class.blink::HTMLParserScriptRunner"* nonnull %24) #16
  br i1 %28, label %29, label %54

29:                                               ; preds = %27, %25
  call void @_ZN5blink18HTMLDocumentParser3endEv(%"class.blink::HTMLDocumentParser"* %0) #16
  br label %54

30:                                               ; preds = %21
  call void @_ZN5blink22HTMLParserScriptRunner28ExecuteScriptsWaitingForLoadEv(%"class.blink::HTMLParserScriptRunner"* %24) #16
  %31 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %32 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %32, i64 0, i32 12, i32 0, i32 0
  %34 = load %"class.blink::Element"*, %"class.blink::Element"** %33, align 8
  %35 = icmp ne %"class.blink::Element"* %34, null
  %36 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %23, align 8
  %37 = icmp eq %"class.blink::HTMLParserScriptRunner"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %30
  %39 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %36) #16
  br label %40

40:                                               ; preds = %38, %30
  %41 = phi i1 [ false, %30 ], [ %39, %38 ]
  %42 = or i1 %35, %41
  br i1 %42, label %54, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %45 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %45, i64 0, i32 1
  %47 = load i8, i8* %46, align 4, !range !3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %54

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %51 = load i8, i8* %50, align 1, !range !3
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  call void @_ZN5blink18HTMLDocumentParser23ResumeParsingAfterPauseEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %54

54:                                               ; preds = %49, %40, %43, %29, %27, %53, %11
  call void @_ZN5blink9scheduler28CooperativeSchedulingManager17AllowedStackScopeD1Ev(%"class.blink::scheduler::CooperativeSchedulingManager::AllowedStackScope"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  %55 = icmp eq i8* %14, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %54
  %57 = load i8, i8* %14, align 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %14, i8* %13, i64 %12) #16
  br label %60

60:                                               ; preds = %54, %56, %59
  ret void
}

declare %"class.blink::scheduler::CooperativeSchedulingManager"* @_ZN5blink9scheduler28CooperativeSchedulingManager8InstanceEv() local_unnamed_addr #4

declare void @_ZN5blink9scheduler28CooperativeSchedulingManager17AllowedStackScopeC1EPS1_(%"class.blink::scheduler::CooperativeSchedulingManager::AllowedStackScope"*, %"class.blink::scheduler::CooperativeSchedulingManager"*) unnamed_addr #4

declare void @_ZN5blink22HTMLParserScriptRunner28ExecuteScriptsWaitingForLoadEv(%"class.blink::HTMLParserScriptRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink9scheduler28CooperativeSchedulingManager17AllowedStackScopeD1Ev(%"class.blink::scheduler::CooperativeSchedulingManager::AllowedStackScope"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink18HTMLDocumentParser18NotifyScriptLoadedEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 -1, i32 19
  %3 = bitcast %"class.blink::Member.474"* %2 to %"class.blink::HTMLDocumentParser"*
  tail call void @_ZN5blink18HTMLDocumentParser18NotifyScriptLoadedEv(%"class.blink::HTMLDocumentParser"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser33ExecuteScriptsWaitingForResourcesEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !5

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.31, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([54 x i8], [54 x i8]* @.str.31, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  %16 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp sgt i32 %17, 1
  br i1 %18, label %49, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 33
  %21 = load i8, i8* %20, align 1, !range !3
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %19
  store i8 0, i8* %20, align 1
  br label %24

24:                                               ; preds = %19, %23
  %25 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 8, i32 0, i32 0
  %26 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %25, align 8
  call void @_ZN5blink22HTMLParserScriptRunner33ExecuteScriptsWaitingForResourcesEv(%"class.blink::HTMLParserScriptRunner"* %26) #16
  %27 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 9, i32 0, i32 0
  %28 = load %"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLTreeBuilder"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLTreeBuilder", %"class.blink::HTMLTreeBuilder"* %28, i64 0, i32 12, i32 0, i32 0
  %30 = load %"class.blink::Element"*, %"class.blink::Element"** %29, align 8
  %31 = icmp ne %"class.blink::Element"* %30, null
  %32 = load %"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserScriptRunner"** %25, align 8
  %33 = icmp eq %"class.blink::HTMLParserScriptRunner"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = call zeroext i1 @_ZNK5blink22HTMLParserScriptRunner23HasParserBlockingScriptEv(%"class.blink::HTMLParserScriptRunner"* nonnull %32) #16
  br label %36

36:                                               ; preds = %34, %24
  %37 = phi i1 [ false, %24 ], [ %35, %34 ]
  %38 = or i1 %31, %37
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 5, i32 0, i32 0
  %41 = load %"class.blink::HTMLParserReentryPermit"*, %"class.blink::HTMLParserReentryPermit"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::HTMLParserReentryPermit", %"class.blink::HTMLParserReentryPermit"* %41, i64 0, i32 1
  %43 = load i8, i8* %42, align 4, !range !3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %39
  %46 = load i8, i8* %20, align 1, !range !3
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZN5blink18HTMLDocumentParser23ResumeParsingAfterPauseEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %49

49:                                               ; preds = %45, %36, %39, %48, %12
  %50 = icmp eq i8* %15, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %49
  %52 = load i8, i8* %15, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #16
  br label %55

55:                                               ; preds = %49, %51, %54
  ret void
}

declare void @_ZN5blink22HTMLParserScriptRunner33ExecuteScriptsWaitingForResourcesEv(%"class.blink::HTMLParserScriptRunner"*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18HTMLDocumentParser37DidAddPendingParserBlockingStylesheetEv(%"class.blink::HTMLDocumentParser"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  store i8 1, i8* %2, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18HTMLDocumentParser42DidLoadAllPendingParserBlockingStylesheetsEv(%"class.blink::HTMLDocumentParser"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 32
  store i8 0, i8* %2, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser21ParseDocumentFragmentERKN3WTF6StringEPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyE(%"class.WTF::String"* dereferenceable(8), %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32) local_unnamed_addr #2 align 2 {
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14DocumentParserEEEPhm(i64 408) #16
  %6 = bitcast i8* %5 to %"class.blink::HTMLDocumentParser"*
  tail call void @_ZN5blink18HTMLDocumentParserC2EPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyENS_20ParserPrefetchPolicyE(%"class.blink::HTMLDocumentParser"* %6, %"class.blink::DocumentFragment"* %1, %"class.blink::Element"* %2, i32 %3, i32 0) #16
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = bitcast i8* %5 to void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)***
  %12 = load void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)**, void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)*, void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)** %12, i64 12
  %14 = load void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)*, void (%"class.blink::HTMLDocumentParser"*, %"class.WTF::String"*)** %13, align 8
  tail call void %14(%"class.blink::HTMLDocumentParser"* %6, %"class.WTF::String"* dereferenceable(8) %0) #16
  tail call void @_ZN5blink18HTMLDocumentParser6FinishEv(%"class.blink::HTMLDocumentParser"* %6)
  tail call void @_ZN5blink18HTMLDocumentParser6DetachEv(%"class.blink::HTMLDocumentParser"* %6)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser11AppendBytesEPKcm(%"class.blink::HTMLDocumentParser"*, i8*, i64) unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback.757", align 8
  %8 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %9 = and i8 %8, 25
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11, !prof !5

11:                                               ; preds = %3
  %12 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #16
  %13 = trunc i64 %2 to i32
  store i32 %13, i32* %4, align 4
  %14 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = bitcast i8** %5 to %"class.blink::HTMLDocumentParser"**
  store %"class.blink::HTMLDocumentParser"* %0, %"class.blink::HTMLDocumentParser"** %15, align 8
  %16 = call i64 @_ZN20trace_event_internal13AddTraceEventIjPvEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.32, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i32* nonnull dereferenceable(4) %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #16
  br label %17

17:                                               ; preds = %3, %11
  %18 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %11 ]
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str.32, i64 0, i64 0), %11 ]
  %20 = phi i64 [ -6148914691236517206, %3 ], [ %16, %11 ]
  %21 = icmp eq i64 %2, 0
  br i1 %21, label %78, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %78, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 25
  %28 = load i8, i8* %27, align 4, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %76, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %32 = load i8, i8* %31, align 2, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  call void @_ZN5blink18HTMLDocumentParser21StartBackgroundParserEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %35

35:                                               ; preds = %30, %34
  %36 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIcLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #16
  %37 = trunc i64 %2 to i32
  %38 = bitcast i8* %36 to i8**
  store i8* null, i8** %38, align 8
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 8
  %41 = icmp eq i32 %37, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %35
  %43 = and i64 %2, 4294967295
  %44 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %43) #16
  %45 = call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %44) #16
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast i8* %36 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = trunc i64 %44 to i32
  store i32 %48, i32* %40, align 8
  br label %49

49:                                               ; preds = %42, %35
  %50 = phi i64 [ %43, %42 ], [ 0, %35 ]
  %51 = phi i8* [ %45, %42 ], [ null, %35 ]
  %52 = getelementptr inbounds i8, i8* %36, i64 12
  %53 = bitcast i8* %52 to i32*
  store i32 %37, i32* %53, align 4
  call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 0, i64 %50, i1 false) #16
  %54 = ptrtoint i8* %36 to i64
  %55 = load i8*, i8** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 %1, i64 %2, i1 false)
  %56 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  %57 = bitcast %"class.base::SingleThreadTaskRunner"** %56 to %"class.base::TaskRunner"**
  %58 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %57, align 8
  %59 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 1742) #16
  %60 = call i8* @_Znwm(i64 72) #17, !noalias !60
  %61 = bitcast i8* %60 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %61, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS7_18PartitionAllocatorEEENS5_14default_deleteISA_EEEEEJNS_7WeakPtrIS4_EESD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS6_18PartitionAllocatorEEENS4_14default_deleteIS9_EEEEEJNS_7WeakPtrIS3_EESC_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS7_18PartitionAllocatorEEENS5_14default_deleteISA_EEEEEJNS_7WeakPtrIS4_EESD_EEEEEbPKNS0_13BindStateBaseENSJ_21CancellationQueryModeE) #16, !noalias !60
  %62 = getelementptr inbounds i8, i8* %60, i64 32
  %63 = bitcast i8* %62 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::BackgroundHTMLParser"*, %"class.WTF::Vector"*)* @_ZN5blink20BackgroundHTMLParser28AppendRawBytesFromMainThreadENSt3__110unique_ptrIN3WTF6VectorIcLj0ENS3_18PartitionAllocatorEEENS1_14default_deleteIS6_EEEE to i64), i64 0>, <2 x i64>* %63, align 8, !noalias !60
  %64 = getelementptr inbounds i8, i8* %60, i64 48
  %65 = bitcast i8* %64 to %"class.base::internal::WeakReference"*
  %66 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %65, %"class.base::internal::WeakReference"* dereferenceable(8) %66) #16, !noalias !60
  %67 = getelementptr inbounds i8, i8* %60, i64 56
  %68 = bitcast i8* %67 to i64*
  %69 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %70 = load i64, i64* %69, align 8, !noalias !60
  store i64 %70, i64* %68, align 8, !noalias !60
  %71 = getelementptr inbounds i8, i8* %60, i64 64
  %72 = bitcast i8* %71 to i64*
  store i64 %54, i64* %72, align 8, !noalias !60
  %73 = bitcast %"class.base::OnceCallback.757"* %7 to i8**
  store i8* %60, i8** %73, align 8, !alias.scope !60
  %74 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %58, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback.757"* nonnull %7) #16
  %75 = getelementptr inbounds %"class.base::OnceCallback.757", %"class.base::OnceCallback.757"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %75) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #16
  br label %78

76:                                               ; preds = %26
  %77 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink25DecodedDataDocumentParser11AppendBytesEPKcm(%"class.blink::DecodedDataDocumentParser"* %77, i8* %1, i64 %2) #16
  br label %78

78:                                               ; preds = %22, %17, %76, %49
  %79 = icmp eq i8* %18, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %78
  %81 = load i8, i8* %18, align 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %84, label %83

83:                                               ; preds = %80
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %18, i8* %19, i64 %20) #16
  br label %84

84:                                               ; preds = %78, %80, %83
  ret void
}

declare void @_ZN5blink20BackgroundHTMLParser28AppendRawBytesFromMainThreadENSt3__110unique_ptrIN3WTF6VectorIcLj0ENS3_18PartitionAllocatorEEENS1_14default_deleteIS6_EEEE(%"class.blink::BackgroundHTMLParser"*, %"class.WTF::Vector"*) #4

declare void @_ZN5blink25DecodedDataDocumentParser11AppendBytesEPKcm(%"class.blink::DecodedDataDocumentParser"*, i8*, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink25DecodedDataDocumentParser12NeedsDecoderEv(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DecodedDataDocumentParser", %"class.blink::DecodedDataDocumentParser"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare void @_ZN5blink25DecodedDataDocumentParser5FlushEv(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #4

declare void @_ZN5blink20BackgroundHTMLParser5FlushEv(%"class.blink::BackgroundHTMLParser"*) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE(%"class.blink::HTMLDocumentParser"*, %"class.blink::TextResourceDecoder"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback.757", align 8
  %5 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink25DecodedDataDocumentParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE(%"class.blink::DecodedDataDocumentParser"* %5, %"class.blink::TextResourceDecoder"* %1) #16
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 27
  %7 = load i8, i8* %6, align 2, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %32, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 12, i32 0
  %11 = bitcast %"class.base::SingleThreadTaskRunner"** %10 to %"class.base::TaskRunner"**
  %12 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %11, align 8
  %13 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #16
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 1782) #16
  %14 = call %"class.blink::TextResourceDecoder"* @_ZN5blink25DecodedDataDocumentParser11TakeDecoderEv(%"class.blink::DecodedDataDocumentParser"* %5) #16
  %15 = ptrtoint %"class.blink::TextResourceDecoder"* %14 to i64
  %16 = call i8* @_Znwm(i64 72) #17, !noalias !67
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_19TextResourceDecoderENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS2_19TextResourceDecoderENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_19TextResourceDecoderENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE) #16, !noalias !67
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::BackgroundHTMLParser"*, %"class.blink::TextResourceDecoder"*)* @_ZN5blink20BackgroundHTMLParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE to i64), i64 0>, <2 x i64>* %19, align 8, !noalias !67
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to %"class.base::internal::WeakReference"*
  %22 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %21, %"class.base::internal::WeakReference"* dereferenceable(8) %22) #16, !noalias !67
  %23 = getelementptr inbounds i8, i8* %16, i64 56
  %24 = bitcast i8* %23 to i64*
  %25 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 17, i32 0, i32 1
  %26 = load i64, i64* %25, align 8, !noalias !67
  store i64 %26, i64* %24, align 8, !noalias !67
  %27 = getelementptr inbounds i8, i8* %16, i64 64
  %28 = bitcast i8* %27 to i64*
  store i64 %15, i64* %28, align 8, !noalias !67
  %29 = bitcast %"class.base::OnceCallback.757"* %4 to i8**
  store i8* %16, i8** %29, align 8, !alias.scope !67
  %30 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %12, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback.757"* nonnull %4) #16
  %31 = getelementptr inbounds %"class.base::OnceCallback.757", %"class.base::OnceCallback.757"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #16
  br label %32

32:                                               ; preds = %9, %2
  ret void
}

declare void @_ZN5blink25DecodedDataDocumentParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE(%"class.blink::DecodedDataDocumentParser"*, %"class.blink::TextResourceDecoder"*) unnamed_addr #4

declare void @_ZN5blink20BackgroundHTMLParser10SetDecoderENSt3__110unique_ptrINS_19TextResourceDecoderENS1_14default_deleteIS3_EEEE(%"class.blink::BackgroundHTMLParser"*, %"class.blink::TextResourceDecoder"*) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18HTMLDocumentParser24DocumentElementAvailableEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = load atomic i64, i64* @_ZZN5blink18HTMLDocumentParser24DocumentElementAvailableEvE29trace_event_unique_atomic1788 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %12, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN4base11trace_event8TraceLog23GetCategoryGroupEnabledEPKc(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0)) #16
  %11 = ptrtoint i8* %10 to i64
  store atomic volatile i64 %11, i64* @_ZZN5blink18HTMLDocumentParser24DocumentElementAvailableEvE29trace_event_unique_atomic1788 monotonic, align 8
  br label %12

12:                                               ; preds = %9, %1
  %13 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %14 = load i8, i8* %13, align 1
  %15 = and i8 %14, 25
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17, !prof !5

17:                                               ; preds = %12
  %18 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #16
  %19 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %21 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #16
  store i64 %21, i64* %20, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* %13, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.37, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %18, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  br label %23

23:                                               ; preds = %12, %17
  %24 = phi i64 [ -6148914691236517206, %12 ], [ %22, %17 ]
  %25 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %12 ], [ getelementptr inbounds ([45 x i8], [45 x i8]* @.str.37, i64 0, i64 0), %17 ]
  %26 = phi i8* [ null, %12 ], [ %13, %17 ]
  %27 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 47, i32 0, i32 0
  %30 = load %"class.blink::Element"*, %"class.blink::Element"** %29, align 8
  %31 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN3WTF12AtomicStringC1EPKDs(%"class.WTF::AtomicString"* nonnull %3, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.38, i64 0, i64 0)) #16
  %32 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKN3WTF12AtomicStringE(%"class.blink::Element"* %30, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #16
  br i1 %32, label %75, label %33

33:                                               ; preds = %23
  %34 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i64 0, i64 0), i64 3) #16
  %35 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKN3WTF12AtomicStringE(%"class.blink::Element"* %30, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #16
  br i1 %35, label %56, label %36

36:                                               ; preds = %33
  %37 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0), i64 16) #16
  %38 = call zeroext i1 @_ZNK5blink7Element12hasAttributeERKN3WTF12AtomicStringE(%"class.blink::Element"* %30, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #16
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #16
  br label %55

55:                                               ; preds = %54, %51, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  br label %56

56:                                               ; preds = %33, %55
  %57 = phi i1 [ %38, %55 ], [ true, %33 ]
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #16
  br label %74

74:                                               ; preds = %56, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  br label %75

75:                                               ; preds = %23, %74
  %76 = phi i1 [ %57, %74 ], [ true, %23 ]
  %77 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #16
  br label %93

93:                                               ; preds = %75, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br i1 %76, label %94, label %99

94:                                               ; preds = %93
  %95 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %28) #16
  %96 = icmp eq %"class.blink::DocumentLoader"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = call %"class.blink::DocumentLoader"* @_ZNK5blink8Document6LoaderEv(%"class.blink::Document"* %28) #16
  call void @_ZN5blink14DocumentLoader25DidObserveLoadingBehaviorENS_19LoadingBehaviorFlagE(%"class.blink::DocumentLoader"* %98, i32 128) #16
  br label %99

99:                                               ; preds = %94, %97, %93
  %100 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 18, i32 0, i32 0
  %101 = load %"class.blink::HTMLResourcePreloader"*, %"class.blink::HTMLResourcePreloader"** %100, align 8
  %102 = icmp eq %"class.blink::HTMLResourcePreloader"* %101, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  call void @_ZN5blink18HTMLDocumentParser19FetchQueuedPreloadsEv(%"class.blink::HTMLDocumentParser"* %0)
  br label %104

104:                                              ; preds = %99, %103
  %105 = icmp eq i8* %26, null
  br i1 %105, label %110, label %106

106:                                              ; preds = %104
  %107 = load i8, i8* %26, align 1
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %26, i8* %25, i64 %24) #16
  br label %110

110:                                              ; preds = %104, %106, %109
  ret void
}

declare zeroext i1 @_ZNK5blink7Element12hasAttributeERKN3WTF12AtomicStringE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN3WTF12AtomicStringC1EPKDs(%"class.WTF::AtomicString"*, i16*) unnamed_addr #4

declare void @_ZN5blink14DocumentLoader25DidObserveLoadingBehaviorENS_19LoadingBehaviorFlagE(%"class.blink::DocumentLoader"*, i32) local_unnamed_addr #4

declare void @_ZN5blink18HTMLPreloadScanner4ScanERKNS_4KURLEPN4absl8optionalINS_19ViewportDescriptionEEERb(%"class.WTF::Vector.183"* sret, %"class.blink::HTMLPreloadScanner"*, %"class.blink::KURL"* dereferenceable(112), %"class.absl::optional"*, i8* dereferenceable(1)) local_unnamed_addr #4

declare void @_ZNK5blink8Document19ValidBaseElementURLEv(%"class.blink::KURL"* sret, %"class.blink::Document"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #5

declare %"class.blink::SubresourceRedirectOriginsPreloader"* @_ZN5blink35SubresourceRedirectOriginsPreloader4FromERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #4

declare void @_ZN5blink35SubresourceRedirectOriginsPreloader17PreloadOriginsNowEv(%"class.blink::SubresourceRedirectOriginsPreloader"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink14DocumentParser18NameInHeapSnapshotEv(%"class.blink::DocumentParser"*) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptableDocumentParser"* @_ZN5blink24ScriptableDocumentParser26AsScriptableDocumentParserEv(%"class.blink::ScriptableDocumentParser"*) unnamed_addr #2 comdat align 2 {
  ret %"class.blink::ScriptableDocumentParser"* %0
}

declare %"class.blink::TextResourceDecoder"* @_ZN5blink25DecodedDataDocumentParser7DecoderEv(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14DocumentParser18SetHasAppendedDataEv(%"class.blink::DocumentParser"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink25DecodedDataDocumentParser10WellFormedEv(%"class.blink::DecodedDataDocumentParser"*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.blink::HTMLInputStream"* @_ZN5blink18HTMLDocumentParser11InputStreamEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 4
  ret %"class.blink::HTMLInputStream"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18HTMLDocumentParser17HasPreloadScannerEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLPreloadScanner"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 0, i32 25
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = icmp eq i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.blink::HTMLInputStream"* @_ZThn80_N5blink18HTMLDocumentParser11InputStreamEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 -1, i32 19
  %3 = getelementptr inbounds %"class.blink::Member.474", %"class.blink::Member.474"* %2, i64 12
  %4 = bitcast %"class.blink::Member.474"* %3 to %"class.blink::HTMLInputStream"*
  ret %"class.blink::HTMLInputStream"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn80_NK5blink18HTMLDocumentParser17HasPreloadScannerEv(%"class.blink::HTMLDocumentParser"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %0, i64 -1, i32 19
  %3 = getelementptr inbounds %"class.blink::Member.474", %"class.blink::Member.474"* %2, i64 29
  %4 = bitcast %"class.blink::Member.474"* %3 to %"class.blink::HTMLPreloadScanner"**
  %5 = load %"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLPreloadScanner"** %4, align 8
  %6 = icmp eq %"class.blink::HTMLPreloadScanner"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::Member.474"* %2 to %"class.blink::HTMLDocumentParser"*
  %9 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %8, i64 0, i32 25
  %10 = load i8, i8* %9, align 4, !range !3
  %11 = icmp eq i8 %10, 0
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi i1 [ false, %1 ], [ %11, %7 ]
  ret i1 %13
}

declare void @_ZN5blink22HTMLParserScriptRunnerC1EPNS_23HTMLParserReentryPermitEPNS_8DocumentEPNS_26HTMLParserScriptRunnerHostE(%"class.blink::HTMLParserScriptRunner"*, %"class.blink::HTMLParserReentryPermit"*, %"class.blink::Document"*, %"class.blink::HTMLParserScriptRunnerHost"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_22HTMLParserScriptRunnerEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_22HTMLParserScriptRunnerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_22HTMLParserScriptRunnerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_22HTMLParserScriptRunnerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22HTMLParserScriptRunnerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #16
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i64 0, i64 0), i8* %21, i8* %22) #16
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.46, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #16
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #16
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22HTMLParserScriptRunnerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLParserScriptRunner"*
  tail call void @_ZNK5blink22HTMLParserScriptRunner5TraceEPNS_7VisitorE(%"class.blink::HTMLParserScriptRunner"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_22HTMLParserScriptRunnerEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HTMLParserScriptRunner"*
  tail call void @_ZN5blink22HTMLParserScriptRunnerD1Ev(%"class.blink::HTMLParserScriptRunner"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_22HTMLParserScriptRunnerEE7GetNameEPKv(i8*) #2 comdat align 2 {
  %2 = icmp eq i8* %0, null
  %3 = getelementptr inbounds i8, i8* %0, i64 8
  %4 = bitcast i8* %3 to %"class.blink::NameClient"*
  %5 = select i1 %2, %"class.blink::NameClient"* null, %"class.blink::NameClient"* %4
  %6 = bitcast %"class.blink::NameClient"* %5 to i8* (%"class.blink::NameClient"*)***
  %7 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %6, align 8
  %8 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %7, align 8
  %9 = tail call i8* %8(%"class.blink::NameClient"* %5) #16
  %10 = insertvalue { i8*, i8 } undef, i8* %9, 0
  %11 = insertvalue { i8*, i8 } %10, i8 0, 1
  ret { i8*, i8 } %11
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #4

declare void @_ZNK5blink22HTMLParserScriptRunner5TraceEPNS_7VisitorE(%"class.blink::HTMLParserScriptRunner"*, %"class.blink::Visitor"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink22HTMLParserScriptRunnerD1Ev(%"class.blink::HTMLParserScriptRunner"*) unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #9

declare i32 @_ZN4base32GetFieldTrialParamByFeatureAsIntERKNS_7FeatureERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEi(%"struct.base::Feature"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 17, i32 0, i32 0
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair"* %3, null
  br i1 %4, label %37, label %5, !prof !5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 17, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %32, %9
  %12 = phi i64 [ 0, %9 ], [ %33, %32 ]
  %13 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 %12
  %14 = bitcast %"struct.std::__1::pair"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast i8* %15 to %"class.WTF::StringImpl"*
  %17 = ptrtoint i8* %15 to i64
  switch i64 %17, label %18 [
    i64 -1, label %32
    i64 0, label %32
  ]

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = bitcast i8* %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = bitcast i8* %15 to i32*
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %18
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %18
  %29 = phi i32 [ %27, %26 ], [ %25, %18 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #16
  br label %32

32:                                               ; preds = %31, %28, %11, %11
  %33 = add nuw nsw i64 %12, 1
  %34 = icmp eq i64 %33, %10
  br i1 %34, label %35, label %11

35:                                               ; preds = %32, %5
  %36 = bitcast %"struct.std::__1::pair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #16
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %2, align 8
  br label %37

37:                                               ; preds = %1, %35
  %38 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 10, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #16
  br label %54

54:                                               ; preds = %37, %50, %53
  %55 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 4, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #16
  br label %71

71:                                               ; preds = %54, %67, %70
  %72 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 3
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %72) #16
  %73 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 2, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #16
  br label %89

89:                                               ; preds = %71, %85, %88
  %90 = getelementptr inbounds %"class.blink::PreloadRequest", %"class.blink::PreloadRequest"* %0, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #16
  br label %106

106:                                              ; preds = %89, %102, %105
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque.458"*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %8, i64 %9
  br i1 %6, label %26, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %62, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %23
  %17 = phi %"class.std::__1::unique_ptr.431"* [ %24, %23 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %18, align 8
  store %"struct.blink::HTMLDocumentParser::TokenizedChunk"* null, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %18, align 8
  %20 = icmp eq %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  tail call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %19) #16
  %22 = bitcast %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %19 to i8*
  tail call void @free(i8* %22) #16
  br label %23

23:                                               ; preds = %21, %16
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %17, i64 1
  %25 = icmp eq %"class.std::__1::unique_ptr.431"* %24, %10
  br i1 %25, label %62, label %16

26:                                               ; preds = %1
  %27 = icmp eq i32 %5, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %26, %35
  %29 = phi %"class.std::__1::unique_ptr.431"* [ %36, %35 ], [ %8, %26 ]
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %30, align 8
  store %"struct.blink::HTMLDocumentParser::TokenizedChunk"* null, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %30, align 8
  %32 = icmp eq %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  tail call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %31) #16
  %34 = bitcast %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %31 to i8*
  tail call void @free(i8* %34) #16
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %29, i64 1
  %37 = icmp eq %"class.std::__1::unique_ptr.431"* %36, %10
  br i1 %37, label %38, label %28

38:                                               ; preds = %35
  %39 = load %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"** %7, align 8
  %40 = load i32, i32* %2, align 8
  br label %41

41:                                               ; preds = %38, %26
  %42 = phi i32 [ %40, %38 ], [ %3, %26 ]
  %43 = phi %"class.std::__1::unique_ptr.431"* [ %39, %38 ], [ %8, %26 ]
  %44 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %43, i64 %46
  %48 = icmp eq i32 %42, %45
  br i1 %48, label %62, label %49

49:                                               ; preds = %41
  %50 = zext i32 %42 to i64
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %43, i64 %50
  br label %52

52:                                               ; preds = %49, %59
  %53 = phi %"class.std::__1::unique_ptr.431"* [ %60, %59 ], [ %51, %49 ]
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"struct.blink::HTMLDocumentParser::TokenizedChunk"*, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %54, align 8
  store %"struct.blink::HTMLDocumentParser::TokenizedChunk"* null, %"struct.blink::HTMLDocumentParser::TokenizedChunk"** %54, align 8
  %56 = icmp eq %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %52
  tail call void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"* nonnull %55) #16
  %58 = bitcast %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %55 to i8*
  tail call void @free(i8* %58) #16
  br label %59

59:                                               ; preds = %57, %52
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %53, i64 1
  %61 = icmp eq %"class.std::__1::unique_ptr.431"* %60, %47
  br i1 %61, label %62, label %52

62:                                               ; preds = %23, %59, %41, %11
  ret void
}

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.451"*, i32*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZN5blink20HTMLConstructionSite16FlushPendingTextENS_9FlushModeE(%"class.blink::HTMLConstructionSite"*, i32) local_unnamed_addr #4

declare void @_ZN5blink20HTMLConstructionSite18ExecuteQueuedTasksEv(%"class.blink::HTMLConstructionSite"*) local_unnamed_addr #4

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #4

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink13lookupHTMLTagEPKDsj(i16*, i32) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AtomicHTMLToken20InitializeAttributesERKN3WTF6VectorINS_9HTMLToken9AttributeELj10ENS1_18PartitionAllocatorEEE(%"class.blink::AtomicHTMLToken"*, %"class.WTF::Vector.47"* dereferenceable(1936)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.blink::QualifiedName", align 8
  %5 = alloca %"class.blink::Attribute", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %264, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %9
  %15 = bitcast %"class.WTF::Vector.119"* %10 to i64*
  br label %52

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %48, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %10, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %21, align 8
  %23 = zext i32 %18 to i64
  %24 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %22, i64 %23
  br label %25

25:                                               ; preds = %43, %20
  %26 = phi %"class.blink::Attribute"* [ %45, %43 ], [ %22, %20 ]
  %27 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #16
  br label %43

43:                                               ; preds = %42, %39, %25
  %44 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %44) #16
  %45 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %26, i64 1
  %46 = icmp eq %"class.blink::Attribute"* %45, %24
  br i1 %46, label %47, label %25

47:                                               ; preds = %43
  store i32 0, i32* %17, align 4
  br label %48

48:                                               ; preds = %47, %16
  %49 = bitcast %"class.WTF::Vector.119"* %10 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"class.WTF::Vector.119"* %10 to i64*
  store atomic i64 0, i64* %51 monotonic, align 8
  store i32 0, i32* %11, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  br label %52

52:                                               ; preds = %14, %48
  %53 = phi i64* [ %15, %14 ], [ %51, %48 ]
  %54 = zext i32 %7 to i64
  %55 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %54) #16
  %56 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %55, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #16
  %57 = ptrtoint i8* %56 to i64
  store atomic i64 %57, i64* %53 monotonic, align 8
  %58 = lshr i64 %55, 4
  %59 = trunc i64 %58 to i32
  store i32 %59, i32* %11, align 8
  %60 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %1, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %60, align 8
  %62 = load i32, i32* %6, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %61, i64 %63
  %65 = icmp eq i32 %62, 0
  br i1 %65, label %264, label %66

66:                                               ; preds = %52
  %67 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %72 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = bitcast %"class.blink::QualifiedName"* %4 to i8*
  %74 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %75 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.blink::AtomicHTMLToken", %"class.blink::AtomicHTMLToken"* %0, i64 0, i32 5
  %77 = bitcast %"class.blink::Attribute"* %5 to i8*
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %5, i64 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %10, i64 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %5, i64 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.WTF::AtomicString"* %81 to i64*
  %84 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %5, i64 0, i32 0
  br label %85

85:                                               ; preds = %66, %261
  %86 = phi %"class.blink::HTMLToken::Attribute"* [ %61, %66 ], [ %262, %261 ]
  %87 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %86, i64 0, i32 0, i32 1
  %88 = bitcast i16** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::HTMLToken::Attribute"* %86 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %89, %91
  br i1 %92, label %261, label %93

93:                                               ; preds = %85
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #16
  %94 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %86, i64 0, i32 1, i32 0
  %95 = load i16*, i16** %94, align 8
  %96 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %86, i64 0, i32 1, i32 1
  %97 = bitcast i16** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = ptrtoint i16* %95 to i64
  %100 = sub i64 %98, %99
  %101 = lshr exact i64 %100, 1
  %102 = trunc i64 %101 to i32
  call void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"* nonnull %3, i16* %95, i32 %102) #16
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #16
  %104 = ptrtoint %"class.WTF::StringImpl"* %103 to i64
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %103, %105
  br i1 %106, label %107, label %143

107:                                              ; preds = %93
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %127, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %127

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #16
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !4

124:                                              ; preds = %115
  call void @llvm.trap() #16
  unreachable

125:                                              ; preds = %115
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %116, align 4
  br label %127

127:                                              ; preds = %125, %110, %107
  %128 = ptrtoint %"class.WTF::StringImpl"* %108 to i64
  %129 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #16
  br label %143

143:                                              ; preds = %142, %139, %127, %93
  %144 = phi i64 [ %104, %93 ], [ %128, %127 ], [ %128, %139 ], [ %128, %142 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #16
  call void @_ZNK5blink15AtomicHTMLToken16NameForAttributeERKNS_9HTMLToken9AttributeE(%"class.blink::QualifiedName"* nonnull sret %4, %"class.blink::AtomicHTMLToken"* %0, %"class.blink::HTMLToken::Attribute"* dereferenceable(192) %86) #16
  %145 = load i32, i32* %74, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %173, label %147

147:                                              ; preds = %143, %166
  %148 = phi i32 [ %167, %166 ], [ 0, %143 ]
  %149 = call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.119"* %10, i32 %148) #16
  %150 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %149, i64 0, i32 0, i32 0, i32 0
  %151 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %150, align 8
  %152 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %153 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %151, %152
  br i1 %153, label %170, label %154

154:                                              ; preds = %147
  %155 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %151, i64 0, i32 3, i32 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 3, i32 0, i32 0, i32 0
  %158 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %157, align 8
  %159 = icmp eq %"class.WTF::StringImpl"* %156, %158
  br i1 %159, label %160, label %166

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %151, i64 0, i32 4, i32 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %152, i64 0, i32 4, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %162, %164
  br i1 %165, label %170, label %166

166:                                              ; preds = %160, %154
  %167 = add nuw i32 %148, 1
  %168 = load i32, i32* %74, align 4
  %169 = icmp ult i32 %167, %168
  br i1 %169, label %147, label %173

170:                                              ; preds = %147, %160
  %171 = call dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.119"* %10, i32 %148) #16
  %172 = icmp eq %"class.blink::Attribute"* %171, null
  br i1 %172, label %173, label %243

173:                                              ; preds = %166, %143, %170
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #16
  %174 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %174, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %175 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %174, null
  br i1 %175, label %183, label %176

176:                                              ; preds = %173
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %174, i64 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = and i32 %178, 16777216
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %174, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %182) #16
  br label %183

183:                                              ; preds = %181, %176, %173
  %184 = inttoptr i64 %144 to %"class.WTF::StringImpl"*
  store %"class.WTF::StringImpl"* %184, %"class.WTF::StringImpl"** %79, align 8
  %185 = icmp eq i64 %144, 0
  br i1 %185, label %203, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %203

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = zext i32 %193 to i33
  %195 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %194, i33 1) #16
  %196 = extractvalue { i33, i1 } %195, 1
  %197 = extractvalue { i33, i1 } %195, 0
  %198 = icmp slt i33 %197, 0
  %199 = or i1 %196, %198
  br i1 %199, label %200, label %201, !prof !4

200:                                              ; preds = %191
  call void @llvm.trap() #16
  unreachable

201:                                              ; preds = %191
  %202 = trunc i33 %197 to i32
  store i32 %202, i32* %192, align 4
  br label %203

203:                                              ; preds = %183, %186, %201
  %204 = load i32, i32* %74, align 4
  %205 = load i32, i32* %11, align 8
  %206 = icmp eq i32 %204, %205
  br i1 %206, label %226, label %207, !prof !4

207:                                              ; preds = %203
  %208 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %80, align 8
  %209 = zext i32 %204 to i64
  %210 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %211 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %208, i64 %209, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %210, %"class.blink::QualifiedName::QualifiedNameImpl"** %211, align 8
  %212 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %210, null
  br i1 %212, label %220, label %213

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %210, i64 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = and i32 %215, 16777216
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %210, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %219) #16
  br label %220

220:                                              ; preds = %207, %213, %218
  %221 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %208, i64 %209, i32 1
  %222 = load i64, i64* %83, align 8
  %223 = bitcast %"class.WTF::AtomicString"* %221 to i64*
  store i64 %222, i64* %223, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %82, align 8
  %224 = load i32, i32* %74, align 4
  %225 = add i32 %224, 1
  store i32 %225, i32* %74, align 4
  br label %242

226:                                              ; preds = %203
  call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.119"* %10, %"class.blink::Attribute"* nonnull dereferenceable(16) %5) #16
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #16
  br label %242

242:                                              ; preds = %220, %226, %238, %241
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %84) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #16
  br label %245

243:                                              ; preds = %170
  store i8 1, i8* %76, align 1
  %244 = inttoptr i64 %144 to %"class.WTF::StringImpl"*
  br label %245

245:                                              ; preds = %243, %242
  %246 = phi %"class.WTF::StringImpl"* [ %244, %243 ], [ %184, %242 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #16
  %247 = icmp eq i64 %144, 0
  br i1 %247, label %261, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %261

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #16
  br label %261

261:                                              ; preds = %260, %257, %245, %85
  %262 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %86, i64 1
  %263 = icmp eq %"class.blink::HTMLToken::Attribute"* %262, %64
  br i1 %263, label %264, label %85

264:                                              ; preds = %261, %52, %2
  ret void
}

declare void @_ZN3WTF12AtomicStringC1EPKDsj(%"class.WTF::AtomicString"*, i16*, i32) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #13

declare void @_ZNK5blink15AtomicHTMLToken16NameForAttributeERKNS_9HTMLToken9AttributeE(%"class.blink::QualifiedName"* sret, %"class.blink::AtomicHTMLToken"*, %"class.blink::HTMLToken::Attribute"* dereferenceable(192)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.119"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %41

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.119"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %39, label %14

14:                                               ; preds = %4, %28
  %15 = phi %"class.blink::Attribute"* [ %37, %28 ], [ %6, %4 ]
  %16 = phi %"class.blink::Attribute"* [ %36, %28 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %18, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %18, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 16777216
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #16
  br label %28

28:                                               ; preds = %26, %21, %14
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.WTF::AtomicString"* %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.WTF::AtomicString"* %29 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %31, align 8
  %35 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %35) #16
  %36 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %16, i64 1
  %37 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %15, i64 1
  %38 = icmp eq %"class.blink::Attribute"* %37, %10
  br i1 %38, label %39, label %14

39:                                               ; preds = %28, %4
  %40 = bitcast %"class.blink::Attribute"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #16
  br label %91

41:                                               ; preds = %2
  %42 = zext i32 %1 to i64
  %43 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %42) #16
  %44 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #16
  %45 = lshr i64 %43, 4
  %46 = ptrtoint i8* %44 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %47, align 8
  %49 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %48, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %41
  %55 = bitcast %"class.blink::Attribute"* %48 to i8*
  br label %86

56:                                               ; preds = %41
  %57 = bitcast i8* %44 to %"class.blink::Attribute"*
  br label %58

58:                                               ; preds = %56, %72
  %59 = phi %"class.blink::Attribute"* [ %81, %72 ], [ %48, %56 ]
  %60 = phi %"class.blink::Attribute"* [ %80, %72 ], [ %57, %56 ]
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 16777216
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %71) #16
  br label %72

72:                                               ; preds = %70, %65, %58
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 1
  %74 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 1
  %75 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::AtomicString"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  store i64 %77, i64* %78, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %75, align 8
  %79 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 0, i32 0
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %79) #16
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 1
  %81 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %59, i64 1
  %82 = icmp eq %"class.blink::Attribute"* %81, %52
  br i1 %82, label %83, label %58

83:                                               ; preds = %72
  %84 = bitcast %"class.WTF::Vector.119"* %0 to i8**
  %85 = load i8*, i8** %84, align 8
  br label %86

86:                                               ; preds = %54, %83
  %87 = phi i8* [ %85, %83 ], [ %55, %54 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %87) #16
  %88 = bitcast %"class.WTF::Vector.119"* %0 to i64*
  store atomic i64 %46, i64* %88 monotonic, align 8
  %89 = trunc i64 %45 to i32
  %90 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %89, i32* %90, align 8
  br label %91

91:                                               ; preds = %86, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.53, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::Attribute"* @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.119"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.55, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %24, i64 %25
  ret %"class.blink::Attribute"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.119"*, %"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  %8 = icmp ugt %"class.blink::Attribute"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %7, i64 %10
  %12 = icmp ugt %"class.blink::Attribute"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::Attribute"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %27) #16
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #16
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.119"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.blink::Attribute"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.119"* %0, i32 %22) #16
  %36 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.blink::Attribute"* %1 to i64
  %39 = ptrtoint %"class.blink::Attribute"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector.119", %"class.WTF::Vector.119"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !5

52:                                               ; preds = %37
  %53 = icmp eq %"class.blink::Attribute"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9AttributeEEEmm(i64 %55) #16
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9AttributeEEEPKcv, i64 0, i64 0)) #16
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.119"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.blink::Attribute"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink9AttributeELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.119"* %0, i32 %50) #16
  %64 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.blink::Attribute"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.blink::Attribute"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.blink::Attribute"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %69, i64 %72, i32 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %74, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %76 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %74, null
  br i1 %76, label %84, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 16777216
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %83) #16
  br label %84

84:                                               ; preds = %68, %77, %82
  %85 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %69, i64 %72, i32 1
  %86 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %70, i64 0, i32 1
  %87 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::AtomicString"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::AtomicString"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %91 = load i32, i32* %3, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %3, align 4
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String23Make8BitFrom16BitSourceEPKDsj(i16*, i32) local_unnamed_addr #4

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #4

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::CompactHTMLToken::Attribute"* @_ZNK3WTF6VectorIN5blink16CompactHTMLToken9AttributeELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.437"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.55, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::CompactHTMLToken::Attribute"*, %"struct.blink::CompactHTMLToken::Attribute"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %24, i64 %25
  ret %"struct.blink::CompactHTMLToken::Attribute"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.56"*, i8*, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %52

13:                                               ; preds = %3
  %14 = lshr i32 %11, 2
  %15 = add nuw i32 %11, 1
  %16 = add i32 %15, %14
  %17 = icmp ugt i32 %16, 4
  %18 = select i1 %17, i32 %16, i32 4
  %19 = icmp ugt i32 %18, %9
  %20 = select i1 %19, i32 %18, i32 %9
  %21 = icmp ult i32 %11, %20
  br i1 %21, label %22, label %52, !prof !5

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = icmp eq i16* %24, null
  %26 = zext i32 %20 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %34

29:                                               ; preds = %22
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 1
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %10, align 8
  br label %52

34:                                               ; preds = %22
  %35 = lshr i64 %27, 1
  %36 = ptrtoint i8* %28 to i64
  %37 = load i16*, i16** %23, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne i16* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast i16* %37 to i8*
  br i1 %40, label %42, label %48, !prof !5

42:                                               ; preds = %34
  %43 = load i32, i32* %7, align 4
  %44 = zext i32 %43 to i64
  %45 = shl nuw nsw i64 %44, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %28, i8* nonnull align 2 %41, i64 %45, i1 false) #16
  %46 = bitcast %"class.WTF::Vector.56"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %42, %34
  %49 = phi i8* [ %47, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #16
  %50 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 %36, i64* %50 monotonic, align 8
  %51 = trunc i64 %35 to i32
  store i32 %51, i32* %10, align 8
  br label %52

52:                                               ; preds = %48, %29, %13, %3
  %53 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #16
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %54, align 8
  %55 = load i32, i32* %7, align 4
  %56 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56)
  %57 = icmp ult i32 %9, %55
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  store i8* null, i8** %54, align 8
  br label %68

59:                                               ; preds = %52
  %60 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  %61 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %55) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i64 0, i64 0), i8* %60, i8* %61) #16
  %62 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56)
  store i8* %63, i8** %54, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.55, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #16
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #16
  br label %68

68:                                               ; preds = %58, %59, %65
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #16
  %69 = zext i32 %2 to i64
  %70 = getelementptr inbounds i8, i8* %1, i64 %69
  %71 = icmp eq i32 %2, 0
  br i1 %71, label %158, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load i16*, i16** %73, align 8
  %75 = load i32, i32* %7, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i16, i16* %74, i64 %76
  %78 = icmp ult i32 %2, 16
  br i1 %78, label %147, label %79

79:                                               ; preds = %72
  %80 = bitcast i16* %77 to i8*
  %81 = add nuw nsw i64 %76, %69
  %82 = getelementptr i16, i16* %74, i64 %81
  %83 = bitcast i16* %82 to i8*
  %84 = icmp ugt i8* %70, %80
  %85 = icmp ugt i8* %83, %1
  %86 = and i1 %84, %85
  br i1 %86, label %147, label %87

87:                                               ; preds = %79
  %88 = and i64 %69, 4294967280
  %89 = getelementptr i16, i16* %77, i64 %88
  %90 = getelementptr i8, i8* %1, i64 %88
  %91 = add nsw i64 %88, -16
  %92 = lshr exact i64 %91, 4
  %93 = add nuw nsw i64 %92, 1
  %94 = and i64 %93, 1
  %95 = icmp eq i64 %91, 0
  br i1 %95, label %129, label %96

96:                                               ; preds = %87
  %97 = sub nuw nsw i64 %93, %94
  br label %98

98:                                               ; preds = %98, %96
  %99 = phi i64 [ 0, %96 ], [ %126, %98 ]
  %100 = phi i64 [ %97, %96 ], [ %127, %98 ]
  %101 = getelementptr i16, i16* %77, i64 %99
  %102 = getelementptr i8, i8* %1, i64 %99
  %103 = bitcast i8* %102 to <8 x i8>*
  %104 = load <8 x i8>, <8 x i8>* %103, align 1, !alias.scope !74
  %105 = getelementptr i8, i8* %102, i64 8
  %106 = bitcast i8* %105 to <8 x i8>*
  %107 = load <8 x i8>, <8 x i8>* %106, align 1, !alias.scope !74
  %108 = zext <8 x i8> %104 to <8 x i16>
  %109 = zext <8 x i8> %107 to <8 x i16>
  %110 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %110, align 2, !alias.scope !77, !noalias !74
  %111 = getelementptr i16, i16* %101, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !77, !noalias !74
  %113 = or i64 %99, 16
  %114 = getelementptr i16, i16* %77, i64 %113
  %115 = getelementptr i8, i8* %1, i64 %113
  %116 = bitcast i8* %115 to <8 x i8>*
  %117 = load <8 x i8>, <8 x i8>* %116, align 1, !alias.scope !74
  %118 = getelementptr i8, i8* %115, i64 8
  %119 = bitcast i8* %118 to <8 x i8>*
  %120 = load <8 x i8>, <8 x i8>* %119, align 1, !alias.scope !74
  %121 = zext <8 x i8> %117 to <8 x i16>
  %122 = zext <8 x i8> %120 to <8 x i16>
  %123 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %123, align 2, !alias.scope !77, !noalias !74
  %124 = getelementptr i16, i16* %114, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !77, !noalias !74
  %126 = add i64 %99, 32
  %127 = add i64 %100, -2
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %98, !llvm.loop !79

129:                                              ; preds = %98, %87
  %130 = phi i64 [ 0, %87 ], [ %126, %98 ]
  %131 = icmp eq i64 %94, 0
  br i1 %131, label %145, label %132

132:                                              ; preds = %129
  %133 = getelementptr i16, i16* %77, i64 %130
  %134 = getelementptr i8, i8* %1, i64 %130
  %135 = bitcast i8* %134 to <8 x i8>*
  %136 = load <8 x i8>, <8 x i8>* %135, align 1, !alias.scope !74
  %137 = getelementptr i8, i8* %134, i64 8
  %138 = bitcast i8* %137 to <8 x i8>*
  %139 = load <8 x i8>, <8 x i8>* %138, align 1, !alias.scope !74
  %140 = zext <8 x i8> %136 to <8 x i16>
  %141 = zext <8 x i8> %139 to <8 x i16>
  %142 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %142, align 2, !alias.scope !77, !noalias !74
  %143 = getelementptr i16, i16* %133, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %144, align 2, !alias.scope !77, !noalias !74
  br label %145

145:                                              ; preds = %129, %132
  %146 = icmp eq i64 %88, %69
  br i1 %146, label %158, label %147

147:                                              ; preds = %145, %79, %72
  %148 = phi i16* [ %77, %79 ], [ %77, %72 ], [ %89, %145 ]
  %149 = phi i8* [ %1, %79 ], [ %1, %72 ], [ %90, %145 ]
  br label %150

150:                                              ; preds = %147, %150
  %151 = phi i16* [ %155, %150 ], [ %148, %147 ]
  %152 = phi i8* [ %156, %150 ], [ %149, %147 ]
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i16
  store i16 %154, i16* %151, align 2
  %155 = getelementptr inbounds i16, i16* %151, i64 1
  %156 = getelementptr inbounds i8, i8* %152, i64 1
  %157 = icmp eq i8* %156, %70
  br i1 %157, label %158, label %150, !llvm.loop !81

158:                                              ; preds = %150, %145, %68
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj0ENS_18PartitionAllocatorEE6AppendIDsEEvPKT_j(%"class.WTF::Vector.56"*, i16*, i32) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %101

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = icmp ugt i16* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i16, i16* %15, i64 %18
  %20 = icmp ugt i16* %19, %1
  br i1 %20, label %58, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %101, !prof !5

30:                                               ; preds = %21
  %31 = icmp eq i16* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %32) #16
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  br i1 %31, label %35, label %40

35:                                               ; preds = %30
  %36 = ptrtoint i8* %34 to i64
  %37 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = lshr i64 %33, 1
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %10, align 8
  br label %101

40:                                               ; preds = %30
  %41 = lshr i64 %33, 1
  %42 = ptrtoint i8* %34 to i64
  %43 = load i16*, i16** %14, align 8
  %44 = icmp ne i8* %34, null
  %45 = icmp ne i16* %43, null
  %46 = and i1 %44, %45
  %47 = bitcast i16* %43 to i8*
  br i1 %46, label %48, label %54, !prof !5

48:                                               ; preds = %40
  %49 = load i32, i32* %7, align 4
  %50 = zext i32 %49 to i64
  %51 = shl nuw nsw i64 %50, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %34, i8* nonnull align 2 %47, i64 %51, i1 false) #16
  %52 = bitcast %"class.WTF::Vector.56"* %0 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %48, %40
  %55 = phi i8* [ %53, %48 ], [ %47, %40 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #16
  %56 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 %42, i64* %56 monotonic, align 8
  %57 = trunc i64 %41 to i32
  store i32 %57, i32* %10, align 8
  br label %101

58:                                               ; preds = %17
  %59 = ptrtoint i16* %1 to i64
  %60 = ptrtoint i16* %15 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 1
  %63 = lshr i32 %11, 2
  %64 = add nuw i32 %11, 1
  %65 = add i32 %64, %63
  %66 = icmp ugt i32 %65, 4
  %67 = select i1 %66, i32 %65, i32 4
  %68 = icmp ugt i32 %67, %9
  %69 = select i1 %68, i32 %67, i32 %9
  %70 = icmp ult i32 %11, %69
  br i1 %70, label %71, label %98, !prof !5

71:                                               ; preds = %58
  %72 = icmp eq i16* %15, null
  %73 = zext i32 %69 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %73) #16
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  %76 = ptrtoint i8* %75 to i64
  br i1 %72, label %77, label %79

77:                                               ; preds = %71
  %78 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 %76, i64* %78 monotonic, align 8
  br label %94

79:                                               ; preds = %71
  %80 = load i16*, i16** %14, align 8
  %81 = icmp ne i8* %75, null
  %82 = icmp ne i16* %80, null
  %83 = and i1 %81, %82
  %84 = bitcast i16* %80 to i8*
  br i1 %83, label %85, label %91, !prof !5

85:                                               ; preds = %79
  %86 = load i32, i32* %7, align 4
  %87 = zext i32 %86 to i64
  %88 = shl nuw nsw i64 %87, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %75, i8* nonnull align 2 %84, i64 %88, i1 false) #16
  %89 = bitcast %"class.WTF::Vector.56"* %0 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %85, %79
  %92 = phi i8* [ %90, %85 ], [ %84, %79 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %92) #16
  %93 = bitcast %"class.WTF::Vector.56"* %0 to i64*
  store atomic i64 %76, i64* %93 monotonic, align 8
  br label %94

94:                                               ; preds = %91, %77
  %95 = lshr i64 %74, 1
  %96 = trunc i64 %95 to i32
  store i32 %96, i32* %10, align 8
  %97 = bitcast i8* %75 to i16*
  br label %98

98:                                               ; preds = %94, %58
  %99 = phi i16* [ %15, %58 ], [ %97, %94 ]
  %100 = getelementptr inbounds i16, i16* %99, i64 %62
  br label %101

101:                                              ; preds = %98, %21, %35, %54, %3
  %102 = phi i16* [ %1, %3 ], [ %100, %98 ], [ %1, %21 ], [ %1, %35 ], [ %1, %54 ]
  %103 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #16
  %104 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %104, align 8
  %105 = load i32, i32* %7, align 4
  %106 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  %107 = icmp ult i32 %9, %105
  br i1 %107, label %109, label %108

108:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* null, i8** %104, align 8
  br label %118

109:                                              ; preds = %101
  %110 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  %111 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %105) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.57, i64 0, i64 0), i8* %110, i8* %111) #16
  %112 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  store i8* %113, i8** %104, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.55, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #16
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #16
  br label %118

118:                                              ; preds = %108, %109, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #16
  %119 = getelementptr inbounds %"class.WTF::Vector.56", %"class.WTF::Vector.56"* %0, i64 0, i32 0, i32 0, i32 0
  %120 = load i16*, i16** %119, align 8
  %121 = load i32, i32* %7, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds i16, i16* %120, i64 %122
  %124 = icmp ne i16* %123, null
  %125 = icmp ne i16* %102, null
  %126 = and i1 %125, %124
  br i1 %126, label %127, label %132, !prof !5

127:                                              ; preds = %118
  %128 = zext i32 %2 to i64
  %129 = bitcast i16* %123 to i8*
  %130 = bitcast i16* %102 to i8*
  %131 = shl nuw nsw i64 %128, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %129, i8* nonnull align 2 %130, i64 %131, i1 false) #16
  br label %132

132:                                              ; preds = %118, %127
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.53, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare void @_ZN5blink15SegmentedString6AppendERKS0_(%"class.blink::SegmentedString"*, %"class.blink::SegmentedString"* dereferenceable(88)) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIN5blink18SegmentedSubstringELj0ENS_18PartitionAllocatorEE10DestroyAllEv(%"class.WTF::Deque"*) local_unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  %7 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %9 = zext i32 %5 to i64
  %10 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %9
  br i1 %6, label %37, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %3, %5
  br i1 %12, label %95, label %13

13:                                               ; preds = %11
  %14 = zext i32 %3 to i64
  %15 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %8, i64 %14
  br label %16

16:                                               ; preds = %13, %34
  %17 = phi %"class.blink::SegmentedSubstring"* [ %35, %34 ], [ %15, %13 ]
  %18 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #16
  br label %34

34:                                               ; preds = %33, %30, %16
  %35 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %17, i64 1
  %36 = icmp eq %"class.blink::SegmentedSubstring"* %35, %10
  br i1 %36, label %95, label %16

37:                                               ; preds = %1
  %38 = icmp eq i32 %5, 0
  br i1 %38, label %63, label %39

39:                                               ; preds = %37, %57
  %40 = phi %"class.blink::SegmentedSubstring"* [ %58, %57 ], [ %8, %37 ]
  %41 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 0, i32 5, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #16
  br label %57

57:                                               ; preds = %56, %53, %39
  %58 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %40, i64 1
  %59 = icmp eq %"class.blink::SegmentedSubstring"* %58, %10
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  %61 = load %"class.blink::SegmentedSubstring"*, %"class.blink::SegmentedSubstring"** %7, align 8
  %62 = load i32, i32* %2, align 8
  br label %63

63:                                               ; preds = %60, %37
  %64 = phi i32 [ %62, %60 ], [ %3, %37 ]
  %65 = phi %"class.blink::SegmentedSubstring"* [ %61, %60 ], [ %8, %37 ]
  %66 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %68
  %70 = icmp eq i32 %64, %67
  br i1 %70, label %95, label %71

71:                                               ; preds = %63
  %72 = zext i32 %64 to i64
  %73 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %65, i64 %72
  br label %74

74:                                               ; preds = %71, %92
  %75 = phi %"class.blink::SegmentedSubstring"* [ %93, %92 ], [ %73, %71 ]
  %76 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 0, i32 5, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #16
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.blink::SegmentedSubstring", %"class.blink::SegmentedSubstring"* %75, i64 1
  %94 = icmp eq %"class.blink::SegmentedSubstring"* %93, %69
  br i1 %94, label %95, label %74

95:                                               ; preds = %34, %92, %63, %11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #5

declare void @_ZN5blink15SegmentedString5CloseEv(%"class.blink::SegmentedString"*) local_unnamed_addr #4

declare void @_ZN3WTF6StringC1EPKhj(%"class.WTF::String"*, i8*, i32) unnamed_addr #4

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #4

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #4

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink18HTMLDocumentParser18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLDocumentParser"*
  %4 = icmp eq i8* %1, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %2
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = icmp eq %"class.blink::ThreadState"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds i8, i8* %1, i64 -2
  %19 = bitcast i8* %18 to i16*
  %20 = load i16, i16* %19, align 2
  %21 = and i16 %20, 1
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  tail call void @_ZN5blink18HTMLDocumentParser7DisposeEv(%"class.blink::HTMLDocumentParser"* nonnull %3)
  br label %24

24:                                               ; preds = %17, %12, %2, %23
  %25 = phi i1 [ true, %23 ], [ false, %17 ], [ false, %2 ], [ false, %12 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.351"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.351", %"class.WTF::Deque.351"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.351", %"class.WTF::Deque.351"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.356"*, %"struct.std::__1::pair.356"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #16
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #16
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #16
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque.351"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque.351", %"class.WTF::Deque.351"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.351", %"class.WTF::Deque.351"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair.356"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.356", %"struct.std::__1::pair.356"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.356", %"struct.std::__1::pair.356"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair.356"* %28, null
  %30 = icmp ne %"struct.std::__1::pair.356"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !5

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair.356", %"struct.std::__1::pair.356"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair.356"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair.356"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair.356"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair.356"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #16
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair.356"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !5

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair.356"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #16
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair.356"*, %"struct.std::__1::pair.356"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair.356"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.356", %"struct.std::__1::pair.356"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.356", %"struct.std::__1::pair.356"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair.356"* %60, null
  %62 = icmp ne %"struct.std::__1::pair.356"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !5

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair.356", %"struct.std::__1::pair.356"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair.356"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair.356"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair.356"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair.356"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #16
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair.356"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.53, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare void @_ZN5blink23HTMLParserReentryPermitC1Ev(%"class.blink::HTMLParserReentryPermit"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_23HTMLParserReentryPermitEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_23HTMLParserReentryPermitEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_23HTMLParserReentryPermitEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_23HTMLParserReentryPermitEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23HTMLParserReentryPermitEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23HTMLParserReentryPermitEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_23HTMLParserReentryPermitEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

declare void @_ZN5blink15HTMLTreeBuilderC1EPNS_18HTMLDocumentParserERNS_8DocumentENS_19ParserContentPolicyERKNS_17HTMLParserOptionsEb(%"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLDocumentParser"*, %"class.blink::Document"* dereferenceable(2848), i32, %"class.blink::HTMLParserOptions"* dereferenceable(2), i1 zeroext) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15HTMLTreeBuilderEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15HTMLTreeBuilderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15HTMLTreeBuilderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15HTMLTreeBuilderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15HTMLTreeBuilderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLTreeBuilderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLTreeBuilder"*
  tail call void @_ZNK5blink15HTMLTreeBuilder5TraceEPNS_7VisitorE(%"class.blink::HTMLTreeBuilder"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15HTMLTreeBuilderEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HTMLTreeBuilder"*
  tail call void @_ZN5blink15HTMLTreeBuilderD1Ev(%"class.blink::HTMLTreeBuilder"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15HTMLTreeBuilderEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink15HTMLTreeBuilder5TraceEPNS_7VisitorE(%"class.blink::HTMLTreeBuilder"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink15HTMLTreeBuilderD1Ev(%"class.blink::HTMLTreeBuilder"*) unnamed_addr #5

declare void @_ZN5blink15HTMLTreeBuilderC1EPNS_18HTMLDocumentParserEPNS_16DocumentFragmentEPNS_7ElementENS_19ParserContentPolicyERKNS_17HTMLParserOptionsEb(%"class.blink::HTMLTreeBuilder"*, %"class.blink::HTMLDocumentParser"*, %"class.blink::DocumentFragment"*, %"class.blink::Element"*, i32, %"class.blink::HTMLParserOptions"* dereferenceable(2), i1 zeroext) unnamed_addr #4

declare void @_ZN5blink13HTMLTokenizerC1ERKNS_17HTMLParserOptionsE(%"class.blink::HTMLTokenizer"*, %"class.blink::HTMLParserOptions"* dereferenceable(2)) unnamed_addr #4

declare void @_ZN5blink19HTMLParserSchedulerC1EPNS_18HTMLDocumentParserE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::HTMLParserScheduler"*, %"class.blink::HTMLDocumentParser"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19HTMLParserSchedulerEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19HTMLParserSchedulerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19HTMLParserSchedulerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19HTMLParserSchedulerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19HTMLParserSchedulerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19HTMLParserSchedulerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLParserScheduler"*
  tail call void @_ZNK5blink19HTMLParserScheduler5TraceEPNS_7VisitorE(%"class.blink::HTMLParserScheduler"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19HTMLParserSchedulerEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::HTMLParserScheduler"*
  tail call void @_ZN5blink19HTMLParserSchedulerD1Ev(%"class.blink::HTMLParserScheduler"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19HTMLParserSchedulerEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19HTMLParserScheduler5TraceEPNS_7VisitorE(%"class.blink::HTMLParserScheduler"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink19HTMLParserSchedulerD1Ev(%"class.blink::HTMLParserScheduler"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_23HTMLDocumentParserStateEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_23HTMLDocumentParserStateEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_23HTMLDocumentParserStateEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_23HTMLDocumentParserStateEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23HTMLDocumentParserStateEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23HTMLDocumentParserStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_23HTMLDocumentParserStateEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18HTMLDocumentParser14TokenizedChunkD2Ev(%"struct.blink::HTMLDocumentParser::TokenizedChunk"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6, !prof !4

6:                                                ; preds = %1
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 4, i32 0, i32 1, i64 0
  %11 = bitcast i8* %10 to i32*
  %12 = icmp eq i32* %9, %11
  br i1 %12, label %15, label %13, !prof !5

13:                                               ; preds = %7
  %14 = bitcast %"class.WTF::Vector.450"* %2 to %"class.WTF::VectorBuffer.451"*
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.451"* %14, i32* %9) #16
  br label %15

15:                                               ; preds = %7, %13
  store i32* null, i32** %8, align 8
  %16 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = load i8, i8* %16, align 4, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %44, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #16
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #16
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #16
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #16
  br label %43

43:                                               ; preds = %41, %37
  store i8 0, i8* %16, align 4
  br label %44

44:                                               ; preds = %15, %43
  %45 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %46, align 8
  %48 = icmp eq %"class.std::__1::unique_ptr.186"* %47, null
  br i1 %48, label %72, label %49, !prof !5

49:                                               ; preds = %44
  %50 = bitcast %"class.std::__1::unique_ptr.186"* %47 to i8*
  %51 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %70, label %54, !prof !4

54:                                               ; preds = %49
  %55 = zext i32 %52 to i64
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %47, i64 %55
  br label %57

57:                                               ; preds = %64, %54
  %58 = phi %"class.std::__1::unique_ptr.186"* [ %65, %64 ], [ %47, %54 ]
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PreloadRequest"*, %"class.blink::PreloadRequest"** %59, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %59, align 8
  %61 = icmp eq %"class.blink::PreloadRequest"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  tail call void @_ZN5blink14PreloadRequestD2Ev(%"class.blink::PreloadRequest"* nonnull %60) #16
  %63 = bitcast %"class.blink::PreloadRequest"* %60 to i8*
  tail call void @free(i8* %63) #16
  br label %64

64:                                               ; preds = %62, %57
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %58, i64 1
  %66 = icmp eq %"class.std::__1::unique_ptr.186"* %65, %56
  br i1 %66, label %67, label %57

67:                                               ; preds = %64
  store i32 0, i32* %51, align 4
  %68 = bitcast %"class.WTF::Vector.183"* %45 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %49
  %71 = phi i8* [ %69, %67 ], [ %50, %49 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %71) #16
  store %"class.std::__1::unique_ptr.186"* null, %"class.std::__1::unique_ptr.186"** %46, align 8
  br label %72

72:                                               ; preds = %44, %70
  %73 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %73, align 8
  %75 = icmp eq %"class.blink::CompactHTMLToken"* %74, null
  br i1 %75, label %92, label %76, !prof !5

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"struct.blink::HTMLDocumentParser::TokenizedChunk", %"struct.blink::HTMLDocumentParser::TokenizedChunk"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %89, label %80, !prof !4

80:                                               ; preds = %76
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %74, i64 %81
  br label %83

83:                                               ; preds = %83, %80
  %84 = phi %"class.blink::CompactHTMLToken"* [ %85, %83 ], [ %74, %80 ]
  tail call void @_ZN5blink16CompactHTMLTokenD2Ev(%"class.blink::CompactHTMLToken"* %84) #16
  %85 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %84, i64 1
  %86 = icmp eq %"class.blink::CompactHTMLToken"* %85, %82
  br i1 %86, label %87, label %83

87:                                               ; preds = %83
  store i32 0, i32* %77, align 4
  %88 = load %"class.blink::CompactHTMLToken"*, %"class.blink::CompactHTMLToken"** %73, align 8
  br label %89

89:                                               ; preds = %87, %76
  %90 = phi %"class.blink::CompactHTMLToken"* [ %74, %76 ], [ %88, %87 ]
  %91 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %90, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #16
  store %"class.blink::CompactHTMLToken"* null, %"class.blink::CompactHTMLToken"** %73, align 8
  br label %92

92:                                               ; preds = %72, %89
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CompactHTMLTokenD2Ev(%"class.blink::CompactHTMLToken"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.437", %"class.WTF::Vector.437"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::CompactHTMLToken::Attribute"*, %"struct.blink::CompactHTMLToken::Attribute"** %3, align 8
  %5 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %4, null
  br i1 %5, label %57, label %6, !prof !5

6:                                                ; preds = %1
  %7 = bitcast %"struct.blink::CompactHTMLToken::Attribute"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %55, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %4, i64 %12
  br label %14

14:                                               ; preds = %11, %49
  %15 = phi %"struct.blink::CompactHTMLToken::Attribute"* [ %50, %49 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #16
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %15, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #16
  br label %49

49:                                               ; preds = %48, %45, %32
  %50 = getelementptr inbounds %"struct.blink::CompactHTMLToken::Attribute", %"struct.blink::CompactHTMLToken::Attribute"* %15, i64 1
  %51 = icmp eq %"struct.blink::CompactHTMLToken::Attribute"* %50, %13
  br i1 %51, label %52, label %14

52:                                               ; preds = %49
  store i32 0, i32* %8, align 4
  %53 = bitcast %"class.WTF::Vector.437"* %2 to i8**
  %54 = load i8*, i8** %53, align 8
  br label %55

55:                                               ; preds = %52, %6
  %56 = phi i8* [ %54, %52 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #16
  store %"struct.blink::CompactHTMLToken::Attribute"* null, %"struct.blink::CompactHTMLToken::Attribute"** %3, align 8
  br label %57

57:                                               ; preds = %1, %55
  %58 = getelementptr inbounds %"class.blink::CompactHTMLToken", %"class.blink::CompactHTMLToken"* %0, i64 0, i32 1, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #16
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

declare void @_ZN5blink17HTMLParserMetricsC1ElPN3ukm11UkmRecorderE(%"class.blink::HTMLParserMetrics"*, i64, %"class.ukm::UkmRecorder"*) unnamed_addr #4

declare void @_ZN5blink21HTMLResourcePreloaderC1ERNS_8DocumentE(%"class.blink::HTMLResourcePreloader"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21HTMLResourcePreloaderEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21HTMLResourcePreloaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21HTMLResourcePreloaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21HTMLResourcePreloaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21HTMLResourcePreloaderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21HTMLResourcePreloaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLResourcePreloader"*
  tail call void @_ZNK5blink21HTMLResourcePreloader5TraceEPNS_7VisitorE(%"class.blink::HTMLResourcePreloader"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21HTMLResourcePreloaderEE7GetNameEPKv(i8*) #2 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink21HTMLResourcePreloader5TraceEPNS_7VisitorE(%"class.blink::HTMLResourcePreloader"*, %"class.blink::Visitor"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink18HTMLPreloadScannerD1Ev(%"class.blink::HTMLPreloadScanner"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.blink::DoctypeData"*, %"class.blink::DoctypeData"** %2, align 8
  store %"class.blink::DoctypeData"* null, %"class.blink::DoctypeData"** %2, align 8
  %4 = icmp eq %"class.blink::DoctypeData"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp eq i16* %7, null
  %9 = bitcast i16* %7 to i8*
  br i1 %8, label %16, label %10, !prof !5

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 4, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14, !prof !4

14:                                               ; preds = %10
  store i32 0, i32* %11, align 4
  br label %15

15:                                               ; preds = %14, %10
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #16
  store i16* null, i16** %6, align 8
  br label %16

16:                                               ; preds = %15, %5
  %17 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = icmp eq i16* %18, null
  %20 = bitcast i16* %18 to i8*
  br i1 %19, label %27, label %21, !prof !5

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 3, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25, !prof !4

25:                                               ; preds = %21
  store i32 0, i32* %22, align 4
  br label %26

26:                                               ; preds = %25, %21
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %20) #16
  br label %27

27:                                               ; preds = %26, %16
  %28 = getelementptr inbounds %"class.blink::DoctypeData", %"class.blink::DoctypeData"* %3, i64 0, i32 0
  tail call void @free(i8* %28) #16
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6
  %31 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %30, i64 0, i32 0, i32 0, i32 0
  br i1 %33, label %58, label %35, !prof !4

35:                                               ; preds = %29
  %36 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %34, align 8
  %37 = zext i32 %32 to i64
  %38 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %36, i64 %37
  br label %39

39:                                               ; preds = %54, %35
  %40 = phi %"class.blink::HTMLToken::Attribute"* [ %55, %54 ], [ %36, %35 ]
  %41 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 1, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 1, i32 3, i64 0
  %44 = icmp eq i16* %42, %43
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  %46 = bitcast i16* %42 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %46) #16
  br label %47

47:                                               ; preds = %45, %39
  %48 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 0, i32 0
  %49 = load i16*, i16** %48, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 0, i32 0, i32 3, i64 0
  %51 = icmp eq i16* %49, %50
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = bitcast i16* %49 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %53) #16
  br label %54

54:                                               ; preds = %52, %47
  %55 = getelementptr inbounds %"class.blink::HTMLToken::Attribute", %"class.blink::HTMLToken::Attribute"* %40, i64 1
  %56 = icmp eq %"class.blink::HTMLToken::Attribute"* %55, %38
  br i1 %56, label %57, label %39

57:                                               ; preds = %54
  store i32 0, i32* %31, align 4
  br label %58

58:                                               ; preds = %57, %29
  %59 = load %"class.blink::HTMLToken::Attribute"*, %"class.blink::HTMLToken::Attribute"** %34, align 8
  %60 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 6, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"class.blink::HTMLToken::Attribute"*
  %62 = icmp eq %"class.blink::HTMLToken::Attribute"* %59, %61
  br i1 %62, label %65, label %63, !prof !5

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.48"* %64, %"class.blink::HTMLToken::Attribute"* %59) #16
  br label %65

65:                                               ; preds = %58, %63
  store %"class.blink::HTMLToken::Attribute"* null, %"class.blink::HTMLToken::Attribute"** %34, align 8
  %66 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 0
  %67 = load i16*, i16** %66, align 8
  %68 = getelementptr inbounds %"class.blink::HTMLToken", %"class.blink::HTMLToken"* %0, i64 0, i32 3, i32 3, i64 0
  %69 = icmp eq i16* %67, %68
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = bitcast i16* %67 to i8*
  tail call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* %71) #16
  br label %72

72:                                               ; preds = %65, %70
  ret void
}

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink9HTMLToken9AttributeELj10ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.48"*, %"class.blink::HTMLToken::Attribute"*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %"class.blink::HTMLToken::Attribute"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.183"*, %"class.std::__1::unique_ptr.186"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.186"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.186"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !5

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.186"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14PreloadRequestENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #16
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #16
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.183"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.186"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.186"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.186"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !5

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #16
  %47 = bitcast %"class.WTF::Vector.183"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #16
  %51 = bitcast %"class.WTF::Vector.183"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.186"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.186"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.186"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.183", %"class.WTF::Vector.183"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !5

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.186"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14PreloadRequestENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #16
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([141 x i8], [141 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink14PreloadRequestENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #16
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.183"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.186"*, %"class.std::__1::unique_ptr.186"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.186"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.186"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !5

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #16
  %87 = bitcast %"class.WTF::Vector.183"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #16
  %91 = bitcast %"class.WTF::Vector.183"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.186"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.186"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.186"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.186"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.186"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.186"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::PreloadRequest"* null, %"class.blink::PreloadRequest"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.186"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink14PreloadRequestENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.53, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.458"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS2_14default_deleteIS6_EEEEEEmm(i64 %11) #16
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS2_14default_deleteIS6_EEEEEEmm(i64 %11) #16
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #16
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque.458"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.458", %"class.WTF::Deque.458"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"class.std::__1::unique_ptr.431"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %5, i64 %26
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %24, i64 %26
  %29 = icmp ne %"class.std::__1::unique_ptr.431"* %28, null
  %30 = icmp ne %"class.std::__1::unique_ptr.431"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !5

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %5, i64 %33
  %35 = bitcast %"class.std::__1::unique_ptr.431"* %27 to i8*
  %36 = ptrtoint %"class.std::__1::unique_ptr.431"* %34 to i64
  %37 = ptrtoint %"class.std::__1::unique_ptr.431"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"class.std::__1::unique_ptr.431"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #16
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"class.std::__1::unique_ptr.431"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !5

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"class.std::__1::unique_ptr.431"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #16
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"class.std::__1::unique_ptr.431"*, %"class.std::__1::unique_ptr.431"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"class.std::__1::unique_ptr.431"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %52, i64 %59
  %61 = icmp ne %"class.std::__1::unique_ptr.431"* %60, null
  %62 = icmp ne %"class.std::__1::unique_ptr.431"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !5

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.431"* %5, i64 %65
  %67 = bitcast %"class.std::__1::unique_ptr.431"* %58 to i8*
  %68 = ptrtoint %"class.std::__1::unique_ptr.431"* %66 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr.431"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"class.std::__1::unique_ptr.431"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #16
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"class.std::__1::unique_ptr.431"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.53, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20BackgroundHTMLParser10CheckpointD2Ev(%"struct.blink::BackgroundHTMLParser::Checkpoint"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #16
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23, !prof !4

23:                                               ; preds = %18
  store i32 0, i32* %20, align 4
  br label %24

24:                                               ; preds = %23, %18
  %25 = getelementptr inbounds %"class.WTF::Vector.450", %"class.WTF::Vector.450"* %19, i64 0, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 3, i32 0, i32 1, i64 0
  %28 = bitcast i8* %27 to i32*
  %29 = icmp eq i32* %26, %28
  br i1 %29, label %32, label %30, !prof !5

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.450"* %19 to %"class.WTF::VectorBuffer.451"*
  tail call void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.451"* %31, i32* %26) #16
  br label %32

32:                                               ; preds = %24, %30
  store i32* null, i32** %25, align 8
  %33 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %"class.blink::HTMLTokenizer"*, %"class.blink::HTMLTokenizer"** %33, align 8
  store %"class.blink::HTMLTokenizer"* null, %"class.blink::HTMLTokenizer"** %33, align 8
  %35 = icmp eq %"class.blink::HTMLTokenizer"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  tail call void @_ZN5blink13HTMLTokenizerD1Ev(%"class.blink::HTMLTokenizer"* nonnull %34) #16
  %37 = bitcast %"class.blink::HTMLTokenizer"* %34 to i8*
  tail call void @free(i8* %37) #16
  br label %38

38:                                               ; preds = %32, %36
  %39 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.blink::HTMLToken"*, %"class.blink::HTMLToken"** %39, align 8
  store %"class.blink::HTMLToken"* null, %"class.blink::HTMLToken"** %39, align 8
  %41 = icmp eq %"class.blink::HTMLToken"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  tail call void @_ZN5blink9HTMLTokenD2Ev(%"class.blink::HTMLToken"* nonnull %40) #16
  %43 = bitcast %"class.blink::HTMLToken"* %40 to i8*
  tail call void @free(i8* %43) #16
  br label %44

44:                                               ; preds = %38, %42
  %45 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Checkpoint", %"struct.blink::BackgroundHTMLParser::Checkpoint"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %46 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8
  %47 = icmp eq %"class.blink::PersistentNode"* %46, null
  br i1 %47, label %67, label %48

48:                                               ; preds = %44
  %49 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %50 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %49, i64 0, i32 1
  %51 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %50) #16
  %52 = icmp eq i8* %51, null
  br i1 %52, label %53, label %55, !prof !4

53:                                               ; preds = %48
  %54 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %50, i8* %54) #16
  br label %55

55:                                               ; preds = %53, %48
  %56 = phi i8* [ %54, %53 ], [ %51, %48 ]
  %57 = bitcast i8* %56 to %"class.blink::ThreadState"**
  %58 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %58, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %59, align 8
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %45, align 8
  %62 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %60, i64 0, i32 0, i32 0
  %63 = bitcast %"class.blink::PersistentRegion"* %60 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.blink::PersistentNode"* %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %61, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %66, align 8
  store %"class.blink::PersistentNode"* %61, %"class.blink::PersistentNode"** %62, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %45, align 8
  br label %67

67:                                               ; preds = %44, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.2958"*, %"class.blink::HTMLDocumentParser"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.2958", %"class.blink::PersistentBase.2958"* %0, i64 0, i32 0
  store %"class.blink::HTMLDocumentParser"* %1, %"class.blink::HTMLDocumentParser"** %3, align 8
  %4 = ptrtoint %"class.blink::HTMLDocumentParser"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %10
    i64 -1, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.2958", %"class.blink::PersistentBase.2958"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  tail call void @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.2958"* %0) #16
  br label %33

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::PersistentBase.2958", %"class.blink::PersistentBase.2958"* %0, i64 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #16
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !4

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #16
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  br label %33

33:                                               ; preds = %21, %10, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.2958"*) local_unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.blink::PersistentBase.2958"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 0, label %31
    i64 -1, label %31
  ]

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #16
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %19 = icmp eq %"class.blink::PersistentNode"* %18, null
  br i1 %19, label %20, label %23, !prof !4

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %21) #16
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  br label %23

23:                                               ; preds = %11, %20
  %24 = phi %"class.blink::PersistentNode"* [ %22, %20 ], [ %18, %11 ]
  %25 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentRegion"* %16 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to %"class.blink::PersistentBase.2958"**
  store %"class.blink::PersistentBase.2958"* %0, %"class.blink::PersistentBase.2958"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentBase.2958", %"class.blink::PersistentBase.2958"* %0, i64 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %30, align 8
  br label %31

31:                                               ; preds = %1, %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLDocumentParser"**
  %4 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %3, align 8
  %5 = icmp eq %"class.blink::HTMLDocumentParser"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #16
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !4

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #16
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::HTMLDocumentParser", %"class.blink::HTMLDocumentParser"* %4, i64 -1, i32 34
  %20 = bitcast %"class.blink::ThreadScheduler"** %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::HTMLDocumentParser"* null, %"class.blink::HTMLDocumentParser"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #16
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !4

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #16
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24HTMLTreeBuilderSimulator9NamespaceELj1ENS_18PartitionAllocatorEE16SwapVectorBufferERS5_NS_16VectorBufferBaseIS3_S4_E11OffsetRangeES9_(%"class.WTF::VectorBuffer.451"*, %"class.WTF::VectorBuffer.451"* dereferenceable(24), i64, i64) local_unnamed_addr #2 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %0, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to i32*
  %12 = icmp eq i32* %9, %11
  %13 = ptrtoint i32* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to i32*
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint i32* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer.451"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer.451"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %149

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi i8* [ %17, %14 ], [ %38, %32 ]
  %44 = phi i32* [ %18, %14 ], [ %39, %32 ]
  %45 = phi i32* [ %16, %14 ], [ %41, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %48 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %49 = phi i32* [ null, %14 ], [ %9, %32 ]
  %50 = phi i32* [ null, %14 ], [ %39, %32 ]
  %51 = bitcast i32* %49 to i8*
  %52 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 1, i64 0
  %53 = icmp eq i32* %45, %44
  br i1 %53, label %54, label %57

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  br label %57

57:                                               ; preds = %42, %54
  %58 = phi i32 [ %7, %54 ], [ 0, %42 ]
  %59 = phi i32 [ %5, %54 ], [ 0, %42 ]
  %60 = phi i32 [ %56, %54 ], [ 0, %42 ]
  %61 = phi i8* [ %43, %54 ], [ null, %42 ]
  %62 = phi i32* [ %44, %54 ], [ null, %42 ]
  %63 = phi i32* [ %11, %54 ], [ null, %42 ]
  %64 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %0, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 0, i32 1
  %66 = load i32, i32* %64, align 4
  %67 = load i32, i32* %65, align 4
  store i32 %67, i32* %64, align 4
  store i32 %66, i32* %65, align 4
  %68 = icmp eq i32* %49, null
  %69 = icmp ne i32* %62, null
  %70 = or i1 %68, %69
  br i1 %70, label %76, label %71

71:                                               ; preds = %57
  %72 = bitcast %"class.WTF::VectorBuffer.451"* %1 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.WTF::VectorBuffer.451"* %0 to i64*
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = ptrtoint i8* %52 to i64
  store atomic i64 %75, i64* %72 monotonic, align 8
  br label %90

76:                                               ; preds = %57
  %77 = and i1 %68, %69
  br i1 %77, label %78, label %90

78:                                               ; preds = %76
  %79 = bitcast %"class.WTF::VectorBuffer.451"* %0 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.WTF::VectorBuffer.451"* %1 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = ptrtoint i8* %10 to i64
  store atomic i64 %82, i64* %79 monotonic, align 8
  %83 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %0, i64 0, i32 0, i32 2
  %84 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 0, i32 2
  %85 = load i32, i32* %83, align 4
  %86 = load i32, i32* %84, align 4
  store i32 %86, i32* %83, align 4
  store i32 %85, i32* %84, align 4
  %87 = icmp ne i32 %59, %58
  %88 = icmp ne i32 %60, 0
  %89 = and i1 %69, %88
  br i1 %89, label %108, label %149

90:                                               ; preds = %76, %71
  %91 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %0, i64 0, i32 0, i32 2
  %92 = getelementptr inbounds %"class.WTF::VectorBuffer.451", %"class.WTF::VectorBuffer.451"* %1, i64 0, i32 0, i32 2
  %93 = load i32, i32* %91, align 4
  %94 = load i32, i32* %92, align 4
  store i32 %94, i32* %91, align 4
  store i32 %93, i32* %92, align 4
  %95 = icmp ne i32* %49, null
  %96 = icmp ne i32 %59, %58
  %97 = icmp ne i32 %48, 0
  %98 = and i1 %95, %97
  %99 = icmp ne i32 %60, 0
  %100 = and i1 %69, %99
  br i1 %98, label %101, label %107

101:                                              ; preds = %90
  %102 = icmp eq i32 %47, %46
  %103 = icmp ne i32 %47, 0
  %104 = or i1 %102, %103
  %105 = icmp eq i32 %46, 0
  %106 = or i1 %105, %104
  br i1 %100, label %108, label %134

107:                                              ; preds = %90
  br i1 %100, label %108, label %149

108:                                              ; preds = %78, %101, %107
  %109 = phi i1 [ %106, %101 ], [ false, %107 ], [ false, %78 ]
  %110 = phi i1 [ %95, %101 ], [ %95, %107 ], [ false, %78 ]
  %111 = phi i1 [ %96, %101 ], [ %96, %107 ], [ %87, %78 ]
  %112 = icmp eq i32 %59, 0
  %113 = and i1 %112, %111
  %114 = icmp ne i32 %58, 0
  %115 = and i1 %114, %113
  %116 = xor i1 %109, true
  %117 = or i1 %115, %116
  %118 = xor i1 %115, true
  br i1 %117, label %134, label %119

119:                                              ; preds = %108
  %120 = load i8, i8* %51, align 1
  %121 = load i8, i8* %61, align 1
  store i8 %121, i8* %51, align 1
  store i8 %120, i8* %61, align 1
  %122 = getelementptr inbounds i8, i8* %51, i64 1
  %123 = getelementptr inbounds i8, i8* %61, i64 1
  %124 = load i8, i8* %122, align 1
  %125 = load i8, i8* %123, align 1
  store i8 %125, i8* %122, align 1
  store i8 %124, i8* %123, align 1
  %126 = getelementptr inbounds i8, i8* %51, i64 2
  %127 = getelementptr inbounds i8, i8* %61, i64 2
  %128 = load i8, i8* %126, align 1
  %129 = load i8, i8* %127, align 1
  store i8 %129, i8* %126, align 1
  store i8 %128, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %51, i64 3
  %131 = getelementptr inbounds i8, i8* %61, i64 3
  %132 = load i8, i8* %130, align 1
  %133 = load i8, i8* %131, align 1
  store i8 %133, i8* %130, align 1
  store i8 %132, i8* %131, align 1
  br label %149

134:                                              ; preds = %101, %108
  %135 = phi i1 [ %109, %108 ], [ %106, %101 ]
  %136 = phi i1 [ %110, %108 ], [ %95, %101 ]
  %137 = phi i1 [ %118, %108 ], [ false, %101 ]
  br i1 %135, label %138, label %143

138:                                              ; preds = %134
  %139 = icmp ne i32* %50, null
  %140 = and i1 %136, %139
  br i1 %140, label %141, label %149, !prof !5

141:                                              ; preds = %138
  %142 = load i32, i32* %49, align 4
  store i32 %142, i32* %50, align 4
  br label %149

143:                                              ; preds = %134
  %144 = icmp ne i32* %63, null
  %145 = and i1 %69, %144
  %146 = and i1 %137, %145
  br i1 %146, label %147, label %149, !prof !82

147:                                              ; preds = %143
  %148 = load i32, i32* %62, align 4
  store i32 %148, i32* %63, align 4
  br label %149

149:                                              ; preds = %107, %78, %119, %147, %141, %138, %143, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS4_10CheckpointENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %6, label %7, label %45

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::BackgroundHTMLParser"**
  %10 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %9, align 8
  %11 = icmp eq %"class.blink::BackgroundHTMLParser"* %10, null
  br i1 %11, label %45, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::BackgroundHTMLParser"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Checkpoint"*)**
  %37 = load void (%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Checkpoint"*)*, void (%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Checkpoint"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Checkpoint"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::BackgroundHTMLParser"*, %"struct.blink::BackgroundHTMLParser::Checkpoint"*)* [ %37, %31 ], [ %39, %38 ]
  %42 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %43 = bitcast void (%"class.base::internal::BindStateBase"*)** %42 to %"struct.blink::BackgroundHTMLParser::Checkpoint"**
  %44 = load %"struct.blink::BackgroundHTMLParser::Checkpoint"*, %"struct.blink::BackgroundHTMLParser::Checkpoint"** %43, align 8
  store %"struct.blink::BackgroundHTMLParser::Checkpoint"* null, %"struct.blink::BackgroundHTMLParser::Checkpoint"** %43, align 8
  call void %41(%"class.blink::BackgroundHTMLParser"* %28, %"struct.blink::BackgroundHTMLParser::Checkpoint"* %44) #16
  br label %45

45:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_10CheckpointENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"struct.blink::BackgroundHTMLParser::Checkpoint"**
  %6 = load %"struct.blink::BackgroundHTMLParser::Checkpoint"*, %"struct.blink::BackgroundHTMLParser::Checkpoint"** %5, align 8
  store %"struct.blink::BackgroundHTMLParser::Checkpoint"* null, %"struct.blink::BackgroundHTMLParser::Checkpoint"** %5, align 8
  %7 = icmp eq %"struct.blink::BackgroundHTMLParser::Checkpoint"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  tail call void @_ZN5blink20BackgroundHTMLParser10CheckpointD2Ev(%"struct.blink::BackgroundHTMLParser::Checkpoint"* nonnull %6) #16
  %9 = bitcast %"struct.blink::BackgroundHTMLParser::Checkpoint"* %6 to i8*
  tail call void @free(i8* %9) #16
  br label %10

10:                                               ; preds = %3, %8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %12) #16
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #17
  br label %14

14:                                               ; preds = %10, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS4_10CheckpointENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #2 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::BackgroundHTMLParser"**
  %9 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %8, align 8
  %10 = icmp ne %"class.blink::BackgroundHTMLParser"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #16
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvjEJNS_7WeakPtrIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.blink::BackgroundHTMLParser"**
  %12 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %11, align 8
  %13 = icmp eq %"class.blink::BackgroundHTMLParser"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #16
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.blink::BackgroundHTMLParser"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.blink::BackgroundHTMLParser"*, i32)**
  %39 = load void (%"class.blink::BackgroundHTMLParser"*, i32)*, void (%"class.blink::BackgroundHTMLParser"*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.blink::BackgroundHTMLParser"*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.blink::BackgroundHTMLParser"*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%"class.blink::BackgroundHTMLParser"* %30, i32 %44) #16
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvjEJNS_7WeakPtrIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #16
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #17
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvjEJNS_7WeakPtrIS4_EEjEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #2 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::BackgroundHTMLParser"**
  %9 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %8, align 8
  %10 = icmp ne %"class.blink::BackgroundHTMLParser"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #16
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HTMLDocumentParser"**
  %5 = load %"class.blink::HTMLDocumentParser"*, %"class.blink::HTMLDocumentParser"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #16
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #16
  %7 = icmp eq %"class.blink::HTMLDocumentParser"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HTMLDocumentParser"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18HTMLDocumentParserEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #16
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #16
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18HTMLDocumentParserEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLDocumentParser"*
  %4 = bitcast i8* %1 to void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)**, void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::HTMLDocumentParser"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::HTMLDocumentParser"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::HTMLDocumentParser"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::HTMLDocumentParser"*)**
  %21 = load void (%"class.blink::HTMLDocumentParser"*)*, void (%"class.blink::HTMLDocumentParser"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::HTMLDocumentParser"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::HTMLDocumentParser"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::HTMLDocumentParser"* %12) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.3215"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.2977"* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState.3215", %"struct.base::internal::BindState.3215"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #16
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState.3215", %"struct.base::internal::BindState.3215"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState.3215", %"struct.base::internal::BindState.3215"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple.3216", %"class.std::__1::tuple.3216"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.2977"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple.3216"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState.3215", %"struct.base::internal::BindState.3215"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #16
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !4

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #16
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !4

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #16
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.2978"**
  store %"class.blink::PersistentBase.2978"* %11, %"class.blink::PersistentBase.2978"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_18HTMLDocumentParserELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink18HTMLDocumentParserEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #16
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !4

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #16
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #17
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

declare void @_ZN5blink20BackgroundHTMLParser13ConfigurationC1Ev(%"struct.blink::BackgroundHTMLParser::Configuration"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink20BackgroundHTMLParser13ConfigurationEEclEPS3_(%"struct.std::__1::default_delete.2983"*, %"struct.blink::BackgroundHTMLParser::Configuration"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"struct.blink::BackgroundHTMLParser::Configuration"* %1, null
  br i1 %3, label %35, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %5, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %5, align 8
  %7 = icmp eq %"class.blink::TextResourceDecoder"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %6) #16
  %9 = bitcast %"class.blink::TextResourceDecoder"* %6 to i8*
  tail call void @free(i8* %9) #16
  br label %10

10:                                               ; preds = %8, %4
  %11 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #16
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !4

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #16
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  br label %33

33:                                               ; preds = %10, %21
  %34 = getelementptr inbounds %"struct.blink::BackgroundHTMLParser::Configuration", %"struct.blink::BackgroundHTMLParser::Configuration"* %1, i64 0, i32 0, i32 0
  tail call void @free(i8* %34) #16
  br label %35

35:                                               ; preds = %33, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"*) unnamed_addr #5

declare void @_ZN5blink24CachedDocumentParametersC1EPNS_8DocumentE(%"struct.blink::CachedDocumentParameters"*, %"class.blink::Document"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::BackgroundHTMLParser"**
  %10 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %9, align 8
  %11 = icmp eq %"class.blink::BackgroundHTMLParser"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::BackgroundHTMLParser"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::BackgroundHTMLParser"*)**
  %37 = load void (%"class.blink::BackgroundHTMLParser"*)*, void (%"class.blink::BackgroundHTMLParser"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::BackgroundHTMLParser"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::BackgroundHTMLParser"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.blink::BackgroundHTMLParser"* %28) #16
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #16
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #17
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #2 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::BackgroundHTMLParser"**
  %9 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %8, align 8
  %10 = icmp ne %"class.blink::BackgroundHTMLParser"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #16
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14DocumentParserEEEPhm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14DocumentParserEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14DocumentParserEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DocumentParser"*
  %4 = bitcast i8* %1 to void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)**, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::DocumentParser"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14DocumentParserEE8FinalizeEPv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::DocumentParser"*
  %3 = bitcast i8* %0 to void (%"class.blink::DocumentParser"*)***
  %4 = load void (%"class.blink::DocumentParser"*)**, void (%"class.blink::DocumentParser"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %4, i64 1
  %6 = load void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %5, align 8
  tail call void %6(%"class.blink::DocumentParser"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14DocumentParserEE7GetNameEPKv(i8*) #2 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #16
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.52, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.53, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #16
  ret i64 %20
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS7_18PartitionAllocatorEEENS5_14default_deleteISA_EEEEEJNS_7WeakPtrIS4_EESD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %6, label %7, label %45

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::BackgroundHTMLParser"**
  %10 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %9, align 8
  %11 = icmp eq %"class.blink::BackgroundHTMLParser"* %10, null
  br i1 %11, label %45, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::BackgroundHTMLParser"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::BackgroundHTMLParser"*, %"class.WTF::Vector"*)**
  %37 = load void (%"class.blink::BackgroundHTMLParser"*, %"class.WTF::Vector"*)*, void (%"class.blink::BackgroundHTMLParser"*, %"class.WTF::Vector"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::BackgroundHTMLParser"*, %"class.WTF::Vector"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::BackgroundHTMLParser"*, %"class.WTF::Vector"*)* [ %37, %31 ], [ %39, %38 ]
  %42 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %43 = bitcast void (%"class.base::internal::BindStateBase"*)** %42 to %"class.WTF::Vector"**
  %44 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %43, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %43, align 8
  call void %41(%"class.blink::BackgroundHTMLParser"* %28, %"class.WTF::Vector"* %44) #16
  br label %45

45:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS6_18PartitionAllocatorEEENS4_14default_deleteIS9_EEEEEJNS_7WeakPtrIS3_EESC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.WTF::Vector"**
  %6 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %5, align 8
  store %"class.WTF::Vector"* null, %"class.WTF::Vector"** %5, align 8
  %7 = icmp eq %"class.WTF::Vector"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %18, label %12, !prof !5

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %6, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16, !prof !4

16:                                               ; preds = %12
  store i32 0, i32* %13, align 4
  br label %17

17:                                               ; preds = %16, %12
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #16
  store i8* null, i8** %9, align 8
  br label %18

18:                                               ; preds = %17, %8
  %19 = bitcast %"class.WTF::Vector"* %6 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %19) #16
  br label %20

20:                                               ; preds = %3, %18
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %22 = bitcast void (%"class.base::internal::BindStateBase"*)** %21 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %22) #16
  %23 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %23) #17
  br label %24

24:                                               ; preds = %20, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS7_18PartitionAllocatorEEENS5_14default_deleteISA_EEEEEJNS_7WeakPtrIS4_EESD_EEEEEbPKNS0_13BindStateBaseENSJ_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #2 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::BackgroundHTMLParser"**
  %9 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %8, align 8
  %10 = icmp ne %"class.blink::BackgroundHTMLParser"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #16
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_19TextResourceDecoderENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %6, label %7, label %45

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::BackgroundHTMLParser"**
  %10 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %9, align 8
  %11 = icmp eq %"class.blink::BackgroundHTMLParser"* %10, null
  br i1 %11, label %45, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.61, i64 0, i64 0)) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::BackgroundHTMLParser"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::BackgroundHTMLParser"*, %"class.blink::TextResourceDecoder"*)**
  %37 = load void (%"class.blink::BackgroundHTMLParser"*, %"class.blink::TextResourceDecoder"*)*, void (%"class.blink::BackgroundHTMLParser"*, %"class.blink::TextResourceDecoder"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::BackgroundHTMLParser"*, %"class.blink::TextResourceDecoder"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::BackgroundHTMLParser"*, %"class.blink::TextResourceDecoder"*)* [ %37, %31 ], [ %39, %38 ]
  %42 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %43 = bitcast void (%"class.base::internal::BindStateBase"*)** %42 to %"class.blink::TextResourceDecoder"**
  %44 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %43, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %43, align 8
  call void %41(%"class.blink::BackgroundHTMLParser"* %28, %"class.blink::TextResourceDecoder"* %44) #16
  br label %45

45:                                               ; preds = %1, %7, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS2_19TextResourceDecoderENS4_14default_deleteIS6_EEEEEJNS_7WeakPtrIS3_EES9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #2 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::TextResourceDecoder"**
  %6 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %5, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %5, align 8
  %7 = icmp eq %"class.blink::TextResourceDecoder"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %6) #16
  %9 = bitcast %"class.blink::TextResourceDecoder"* %6 to i8*
  tail call void @free(i8* %9) #16
  br label %10

10:                                               ; preds = %3, %8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %12) #16
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #17
  br label %14

14:                                               ; preds = %10, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_19TextResourceDecoderENS5_14default_deleteIS7_EEEEEJNS_7WeakPtrIS4_EESA_EEEEEbPKNS0_13BindStateBaseENSG_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #2 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #16
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::BackgroundHTMLParser"**
  %9 = load %"class.blink::BackgroundHTMLParser"*, %"class.blink::BackgroundHTMLParser"** %8, align 8
  %10 = icmp ne %"class.blink::BackgroundHTMLParser"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #16
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN5blink18HTMLPreloadScannerC1ERKNS_17HTMLParserOptionsERKNS_4KURLENSt3__110unique_ptrINS_24CachedDocumentParametersENS7_14default_deleteIS9_EEEERKNS_17MediaValuesCached21MediaValuesCachedDataENS_19TokenPreloadScanner11ScannerTypeE(%"class.blink::HTMLPreloadScanner"*, %"class.blink::HTMLParserOptions"* dereferenceable(2), %"class.blink::KURL"* dereferenceable(112), %"struct.blink::CachedDocumentParameters"*, %"struct.blink::MediaValuesCached::MediaValuesCachedData"* dereferenceable(112), i32) unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink22WrapPersistentInternalINS_18HTMLDocumentParserEEENS_10PersistentIT_EEPS3_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink22WrapPersistentInternalINS_18HTMLDocumentParserEEENS_10PersistentIT_EEPS3_"}
!9 = !{!10, !12, !14}
!10 = distinct !{!10, !11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18HTMLDocumentParserEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18HTMLDocumentParserEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!12 = distinct !{!12, !13, !"_ZN4base8BindOnceIMN5blink18HTMLDocumentParserEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8BindOnceIMN5blink18HTMLDocumentParserEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!14 = distinct !{!14, !15, !"_ZN3WTF4BindIMN5blink18HTMLDocumentParserEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF4BindIMN5blink18HTMLDocumentParserEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink22WrapPersistentInternalINS_18HTMLDocumentParserEEENS_10PersistentIT_EEPS3_: argument 0"}
!18 = distinct !{!18, !"_ZN5blink22WrapPersistentInternalINS_18HTMLDocumentParserEEENS_10PersistentIT_EEPS3_"}
!19 = !{!20, !22, !24}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18HTMLDocumentParserEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink18HTMLDocumentParserEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base8BindOnceIMN5blink18HTMLDocumentParserEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8BindOnceIMN5blink18HTMLDocumentParserEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!24 = distinct !{!24, !25, !"_ZN3WTF4BindIMN5blink18HTMLDocumentParserEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTF4BindIMN5blink18HTMLDocumentParserEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE5beginEv: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE5beginEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!31 = distinct !{!31, !"_ZN3WTF5DequeINSt3__110unique_ptrIN5blink18HTMLDocumentParser14TokenizedChunkENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE3endEv"}
!32 = !{!33, !35, !37}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS4_10CheckpointENS5_14default_deleteIS7_EEEEEJRNS_7WeakPtrIS4_EESA_EEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS4_10CheckpointENS5_14default_deleteIS7_EEEEEJRNS_7WeakPtrIS4_EESA_EEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS2_10CheckpointENS3_14default_deleteIS5_EEEEEJRNS_7WeakPtrIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS2_10CheckpointENS3_14default_deleteIS5_EEEEEJRNS_7WeakPtrIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!37 = distinct !{!37, !38, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS2_10CheckpointENS3_14default_deleteIS5_EEEEEJRN4base7WeakPtrIS2_EES8_EFvvEEENSB_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!38 = distinct !{!38, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS2_10CheckpointENS3_14default_deleteIS5_EEEEEJRN4base7WeakPtrIS2_EES8_EFvvEEENSB_12OnceCallbackIT1_EEOT_DpOT0_"}
!39 = !{!40, !42, !44}
!40 = distinct !{!40, !41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvjEJRNS_7WeakPtrIS4_EERjEEEDcOT0_DpOT1_: argument 0"}
!41 = distinct !{!41, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvjEJRNS_7WeakPtrIS4_EERjEEEDcOT0_DpOT1_"}
!42 = distinct !{!42, !43, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvjEJRNS_7WeakPtrIS2_EERjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!43 = distinct !{!43, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvjEJRNS_7WeakPtrIS2_EERjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!44 = distinct !{!44, !45, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvjEJRN4base7WeakPtrIS2_EERjEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!45 = distinct !{!45, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvjEJRN4base7WeakPtrIS2_EERjEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_"}
!46 = !{!47, !49, !51}
!47 = distinct !{!47, !48, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvvEJRNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!48 = distinct !{!48, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvvEJRNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!49 = distinct !{!49, !50, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvvEJRNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!50 = distinct !{!50, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvvEJRNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!51 = distinct !{!51, !52, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvvEJRN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvvEJRN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_"}
!53 = !{!54, !56, !58}
!54 = distinct !{!54, !55, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvvEJRNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!55 = distinct !{!55, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvvEJRNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!56 = distinct !{!56, !57, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvvEJRNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!57 = distinct !{!57, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvvEJRNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!58 = distinct !{!58, !59, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvvEJRN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!59 = distinct !{!59, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvvEJRN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_"}
!60 = !{!61, !63, !65}
!61 = distinct !{!61, !62, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS7_18PartitionAllocatorEEENS5_14default_deleteISA_EEEEEJRNS_7WeakPtrIS4_EESD_EEEDcOT0_DpOT1_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS7_18PartitionAllocatorEEENS5_14default_deleteISA_EEEEEJRNS_7WeakPtrIS4_EESD_EEEDcOT0_DpOT1_"}
!63 = distinct !{!63, !64, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS5_18PartitionAllocatorEEENS3_14default_deleteIS8_EEEEEJRNS_7WeakPtrIS2_EESB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!64 = distinct !{!64, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrIN3WTF6VectorIcLj0ENS5_18PartitionAllocatorEEENS3_14default_deleteIS8_EEEEEJRNS_7WeakPtrIS2_EESB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!65 = distinct !{!65, !66, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS_6VectorIcLj0ENS_18PartitionAllocatorEEENS3_14default_deleteIS7_EEEEEJRN4base7WeakPtrIS2_EESA_EFvvEEENSD_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!66 = distinct !{!66, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS_6VectorIcLj0ENS_18PartitionAllocatorEEENS3_14default_deleteIS7_EEEEEJRN4base7WeakPtrIS2_EESA_EFvvEEENSD_12OnceCallbackIT1_EEOT_DpOT0_"}
!67 = !{!68, !70, !72}
!68 = distinct !{!68, !69, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_19TextResourceDecoderENS5_14default_deleteIS7_EEEEEJRNS_7WeakPtrIS4_EESA_EEEDcOT0_DpOT1_: argument 0"}
!69 = distinct !{!69, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS3_19TextResourceDecoderENS5_14default_deleteIS7_EEEEEJRNS_7WeakPtrIS4_EESA_EEEDcOT0_DpOT1_"}
!70 = distinct !{!70, !71, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS1_19TextResourceDecoderENS3_14default_deleteIS5_EEEEEJRNS_7WeakPtrIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!71 = distinct !{!71, !"_ZN4base8BindOnceIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS1_19TextResourceDecoderENS3_14default_deleteIS5_EEEEEJRNS_7WeakPtrIS2_EES8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!72 = distinct !{!72, !73, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS1_19TextResourceDecoderENS3_14default_deleteIS5_EEEEEJRN4base7WeakPtrIS2_EES8_EFvvEEENSB_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!73 = distinct !{!73, !"_ZN3WTF4BindIMN5blink20BackgroundHTMLParserEFvNSt3__110unique_ptrINS1_19TextResourceDecoderENS3_14default_deleteIS5_EEEEEJRN4base7WeakPtrIS2_EES8_EFvvEEENSB_12OnceCallbackIT1_EEOT_DpOT0_"}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !80}
!80 = !{!"llvm.loop.isvectorized", i32 1}
!81 = distinct !{!81, !80}
!82 = !{!"branch_weights", i32 2000, i32 2002}
