; ModuleID = '../../third_party/opus/src/silk/NLSF_VQ.c'
source_filename = "../../third_party/opus/src/silk/NLSF_VQ.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@.str = private unnamed_addr constant [41 x i8] c"assertion failed: ( LPC_order & 1 ) == 0\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"../../third_party/opus/src/silk/NLSF_VQ.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_NLSF_VQ(i32* nocapture, i16* nocapture readonly, i8* nocapture readonly, i16* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  %7 = bitcast i32* %0 to i8*
  %8 = and i32 %5, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %78

10:                                               ; preds = %6
  %11 = icmp sgt i32 %4, 0
  br i1 %11, label %12, label %79

12:                                               ; preds = %10
  %13 = add i32 %5, -2
  %14 = icmp sgt i32 %13, -1
  %15 = sext i32 %5 to i64
  br i1 %14, label %19, label %16

16:                                               ; preds = %12
  %17 = zext i32 %4 to i64
  %18 = shl nuw nsw i64 %17, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 %18, i1 false)
  br label %79

19:                                               ; preds = %12
  %20 = sext i32 %13 to i64
  %21 = zext i32 %4 to i64
  br label %22

22:                                               ; preds = %72, %19
  %23 = phi i64 [ 0, %19 ], [ %76, %72 ]
  %24 = phi i8* [ %2, %19 ], [ %74, %72 ]
  %25 = phi i16* [ %3, %19 ], [ %75, %72 ]
  br label %26

26:                                               ; preds = %22, %26
  %27 = phi i64 [ %20, %22 ], [ %69, %26 ]
  %28 = phi i32 [ 0, %22 ], [ %62, %26 ]
  %29 = phi i32 [ 0, %22 ], [ %68, %26 ]
  %30 = phi i32 [ %5, %22 ], [ %71, %26 ]
  %31 = add nsw i32 %30, -1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = getelementptr inbounds i8, i8* %24, i64 %32
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i16
  %38 = shl nuw nsw i16 %37, 7
  %39 = sub i16 %34, %38
  %40 = sext i16 %39 to i32
  %41 = getelementptr inbounds i16, i16* %25, i64 %32
  %42 = load i16, i16* %41, align 2
  %43 = sext i16 %42 to i32
  %44 = mul nsw i32 %40, %43
  %45 = ashr i32 %28, 1
  %46 = sub nsw i32 %44, %45
  %47 = icmp slt i32 %46, 0
  %48 = sub nsw i32 0, %46
  %49 = select i1 %47, i32 %48, i32 %46
  %50 = add nsw i32 %49, %29
  %51 = getelementptr inbounds i16, i16* %1, i64 %27
  %52 = load i16, i16* %51, align 2
  %53 = getelementptr inbounds i8, i8* %24, i64 %27
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i16
  %56 = shl nuw nsw i16 %55, 7
  %57 = sub i16 %52, %56
  %58 = sext i16 %57 to i32
  %59 = getelementptr inbounds i16, i16* %25, i64 %27
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i32
  %62 = mul nsw i32 %58, %61
  %63 = ashr i32 %44, 1
  %64 = sub nsw i32 %62, %63
  %65 = icmp slt i32 %64, 0
  %66 = sub nsw i32 0, %64
  %67 = select i1 %65, i32 %66, i32 %64
  %68 = add nsw i32 %50, %67
  %69 = add nsw i64 %27, -2
  %70 = icmp sgt i64 %69, -1
  %71 = trunc i64 %27 to i32
  br i1 %70, label %26, label %72

72:                                               ; preds = %26
  %73 = getelementptr inbounds i32, i32* %0, i64 %23
  store i32 %68, i32* %73, align 4
  %74 = getelementptr inbounds i8, i8* %24, i64 %15
  %75 = getelementptr inbounds i16, i16* %25, i64 %15
  %76 = add nuw nsw i64 %23, 1
  %77 = icmp eq i64 %76, %21
  br i1 %77, label %79, label %22

78:                                               ; preds = %6
  tail call void @celt_fatal(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 49) #3
  unreachable

79:                                               ; preds = %72, %16, %10
  ret void
}

; Function Attrs: noreturn
declare void @celt_fatal(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
