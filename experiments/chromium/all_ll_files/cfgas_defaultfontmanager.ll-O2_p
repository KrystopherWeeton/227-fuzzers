; ModuleID = '../../third_party/pdfium/xfa/fgas/font/cfgas_defaultfontmanager.cpp'
source_filename = "../../third_party/pdfium/xfa/fgas/font/cfgas_defaultfontmanager.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFGAS_GEFont* }
%class.CFGAS_GEFont = type { %"class.fxcrt::Retainable", %"class.pdfium::Optional", %"class.fxcrt::RetainPtr.0", %"class.fxcrt::MaybeOwned", %"class.std::__1::unique_ptr.9", %"class.std::__1::map", %"class.std::__1::map.21", %"class.std::__1::vector", %"class.std::__1::map.35" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.5", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.CFX_Font* }
%class.CFX_Font = type opaque
%"class.fxcrt::UnownedPtr" = type { %class.CFX_Font* }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.CFX_UnicodeEncodingEx* }
%class.CFX_UnicodeEncodingEx = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"class.std::__1::map.21" = type { %"class.std::__1::__tree.22" }
%"class.std::__1::__tree.22" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.fxcrt::RetainPtr"* }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.46", i64 }
%"class.fxcrt::UnownedPtr.46" = type { i32* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.47" }
%"class.fxcrt::RetainPtr.47" = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.fxcrt::StringViewTemplate.94" = type { %"class.pdfium::span.95" }
%"class.pdfium::span.95" = type { %"class.fxcrt::UnownedPtr.96", i64 }
%"class.fxcrt::UnownedPtr.96" = type { i8* }
%class.CFGAS_GEModule = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.CFGAS_FontMgr* }
%class.CFGAS_FontMgr = type { %"class.std::__1::map.53", %"class.std::__1::set", %"class.std::__1::vector.71", %"class.std::__1::map.79" }
%"class.std::__1::map.53" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.64" }
%"class.std::__1::__tree.64" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::unique_ptr.73" = type opaque
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::unique_ptr.73"* }
%"class.std::__1::map.79" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%struct.FGAS_FontInfo = type { i32, i8*, i8*, i16, i16 }

@.str = private unnamed_addr constant [13 x i32] [i32 65, i32 114, i32 105, i32 97, i32 108, i32 32, i32 78, i32 97, i32 114, i32 114, i32 111, i32 119, i32 0], align 4
@.str.1 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CFGAS_DefaultFontManager7GetFontEN5fxcrt18StringViewTemplateIwEEj(%"class.fxcrt::RetainPtr"* noalias sret, %"class.fxcrt::StringViewTemplate"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = alloca %"class.fxcrt::WideString", align 8
  %8 = alloca %"class.fxcrt::StringViewTemplate.94", align 8
  %9 = alloca %"class.fxcrt::RetainPtr", align 8
  %10 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #5
  %11 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %11, align 8
  %12 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %13 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 16, i1 false)
  call void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"* nonnull %4, %"class.fxcrt::StringViewTemplate"* nonnull %5) #5
  %14 = call %class.CFGAS_GEModule* @_ZN14CFGAS_GEModule3GetEv() #5
  %15 = getelementptr inbounds %class.CFGAS_GEModule, %class.CFGAS_GEModule* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %class.CFGAS_FontMgr*, %class.CFGAS_FontMgr** %15, align 8
  %17 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFGAS_GEFont* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEFont*), %class.CFGAS_GEFont** %17, align 8
  %18 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %11, align 8
  %19 = icmp eq %"class.fxcrt::StringDataTemplate"* %18, null
  %20 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %18, i64 0, i32 3
  %21 = select i1 %19, [1 x i32]* @.str.1, [1 x i32]* %20
  %22 = getelementptr inbounds [1 x i32], [1 x i32]* %21, i64 0, i64 0
  call void @_ZN13CFGAS_FontMgr8LoadFontEPKwjt(%"class.fxcrt::RetainPtr"* sret %0, %class.CFGAS_FontMgr* %16, i32* %22, i32 %2, i16 zeroext -1) #5
  %23 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %17, align 8
  %24 = icmp eq %class.CFGAS_GEFont* %23, null
  br i1 %24, label %25, label %122

25:                                               ; preds = %3
  %26 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %11, align 8, !noalias !2
  %27 = icmp eq %"class.fxcrt::StringDataTemplate"* %26, null
  %28 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %26, i64 0, i32 3
  %29 = select i1 %27, [1 x i32]* @.str.1, [1 x i32]* %28
  %30 = getelementptr inbounds [1 x i32], [1 x i32]* %29, i64 0, i64 0
  br i1 %27, label %34, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %26, i64 0, i32 1
  %33 = load i64, i64* %32, align 8, !noalias !2
  br label %34

34:                                               ; preds = %25, %31
  %35 = phi i64 [ %33, %31 ], [ 0, %25 ]
  %36 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %30, i32** %36, align 8, !alias.scope !2
  %37 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  store i64 %35, i64* %37, align 8, !alias.scope !2
  %38 = call %struct.FGAS_FontInfo* @_Z23FGAS_FontInfoByFontNameN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"* nonnull %6) #5
  %39 = icmp eq %struct.FGAS_FontInfo* %38, null
  br i1 %39, label %122, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.FGAS_FontInfo, %struct.FGAS_FontInfo* %38, i64 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %122, label %44

44:                                               ; preds = %40
  %45 = and i32 %2, 262208
  %46 = call i64 @strlen(i8* nonnull %42) #6
  %47 = trunc i64 %46 to i32
  %48 = bitcast %"class.fxcrt::WideString"* %7 to i8*
  %49 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.94", %"class.fxcrt::StringViewTemplate.94"* %8, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.94", %"class.fxcrt::StringViewTemplate.94"* %8, i64 0, i32 0, i32 1
  %52 = bitcast %"class.fxcrt::RetainPtr"* %9 to i8*
  %53 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.fxcrt::RetainPtr"* %9 to i64*
  %55 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  br label %56

56:                                               ; preds = %115, %44
  %57 = phi i8* [ %42, %44 ], [ %118, %115 ]
  %58 = phi i32 [ %47, %44 ], [ %121, %115 ]
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %60, label %122

60:                                               ; preds = %56
  %61 = load i8, i8* %57, align 1
  %62 = icmp eq i8 %61, 44
  br i1 %62, label %72, label %63

63:                                               ; preds = %60, %63
  %64 = phi i8* [ %66, %63 ], [ %57, %60 ]
  %65 = phi i32 [ %67, %63 ], [ %58, %60 ]
  %66 = getelementptr inbounds i8, i8* %64, i64 1
  %67 = add nsw i32 %65, -1
  %68 = load i8, i8* %66, align 1
  %69 = icmp ne i8 %68, 44
  %70 = icmp sgt i32 %67, 0
  %71 = and i1 %70, %69
  br i1 %71, label %63, label %72

72:                                               ; preds = %63, %60
  %73 = phi i32 [ %58, %60 ], [ %67, %63 ]
  %74 = phi i8* [ %57, %60 ], [ %66, %63 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #5
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %49, align 8
  %75 = ptrtoint i8* %74 to i64
  %76 = ptrtoint i8* %57 to i64
  %77 = sub i64 %75, %76
  store i8* %57, i8** %50, align 8
  store i64 %77, i64* %51, align 8
  call void @_ZN5fxcrt10WideString9FromASCIIENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* nonnull sret %7, %"class.fxcrt::StringViewTemplate.94"* nonnull %8) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #5
  %78 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %49, align 8
  %79 = icmp eq %"class.fxcrt::StringDataTemplate"* %78, null
  %80 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %78, i64 0, i32 3
  %81 = select i1 %79, [1 x i32]* @.str.1, [1 x i32]* %80
  %82 = getelementptr inbounds [1 x i32], [1 x i32]* %81, i64 0, i64 0
  call void @_ZN13CFGAS_FontMgr8LoadFontEPKwjt(%"class.fxcrt::RetainPtr"* nonnull sret %9, %class.CFGAS_FontMgr* %16, i32* %82, i32 %45, i16 zeroext -1) #5
  %83 = load i64, i64* %54, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %53, align 8
  %84 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %17, align 8
  store i64 %83, i64* %55, align 8
  %85 = icmp eq %class.CFGAS_GEFont* %84, null
  br i1 %85, label %86, label %88

86:                                               ; preds = %72
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %53, align 8
  %87 = inttoptr i64 %83 to %class.CFGAS_GEFont*
  br label %115

88:                                               ; preds = %72
  %89 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %84, i64 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  %91 = add nsw i64 %90, -1
  store i64 %91, i64* %89, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %88
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %53, align 8
  br label %113

94:                                               ; preds = %88
  %95 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %84, i64 0, i32 0
  %96 = bitcast %class.CFGAS_GEFont* %84 to void (%"class.fxcrt::Retainable"*)***
  %97 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %97, i64 1
  %99 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %98, align 8
  call void %99(%"class.fxcrt::Retainable"* nonnull %95) #5
  %100 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %53, align 8
  %101 = bitcast %class.CFGAS_GEFont* %100 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %53, align 8
  %102 = icmp eq %class.CFGAS_GEFont* %100, null
  br i1 %102, label %113, label %103

103:                                              ; preds = %94
  %104 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %100, i64 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = add nsw i64 %105, -1
  store i64 %106, i64* %104, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %113

108:                                              ; preds = %103
  %109 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %100, i64 0, i32 0
  %110 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %101, align 8
  %111 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %110, i64 1
  %112 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %111, align 8
  call void %112(%"class.fxcrt::Retainable"* nonnull %109) #5
  br label %113

113:                                              ; preds = %108, %103, %94, %93
  %114 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %17, align 8
  br label %115

115:                                              ; preds = %113, %86
  %116 = phi %class.CFGAS_GEFont* [ %114, %113 ], [ %87, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #5
  %117 = icmp ne %class.CFGAS_GEFont* %116, null
  %118 = getelementptr inbounds i8, i8* %74, i64 1
  %119 = xor i1 %117, true
  %120 = zext i1 %119 to i32
  %121 = sub nsw i32 %73, %120
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #5
  br i1 %117, label %122, label %56

122:                                              ; preds = %115, %56, %3, %34, %40
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5fxcrt10WideStringC1ENS_18StringViewTemplateIwEE(%"class.fxcrt::WideString"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #2

declare %class.CFGAS_GEModule* @_ZN14CFGAS_GEModule3GetEv() local_unnamed_addr #2

declare void @_ZN13CFGAS_FontMgr8LoadFontEPKwjt(%"class.fxcrt::RetainPtr"* sret, %class.CFGAS_FontMgr*, i32*, i32, i16 zeroext) local_unnamed_addr #2

declare %struct.FGAS_FontInfo* @_Z23FGAS_FontInfoByFontNameN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5fxcrt10WideString9FromASCIIENS_18StringViewTemplateIcEE(%"class.fxcrt::WideString"* sret, %"class.fxcrt::StringViewTemplate.94"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24CFGAS_DefaultFontManager14GetDefaultFontEj(%"class.fxcrt::RetainPtr"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr", align 8
  %4 = tail call %class.CFGAS_GEModule* @_ZN14CFGAS_GEModule3GetEv() #5
  %5 = getelementptr inbounds %class.CFGAS_GEModule, %class.CFGAS_GEModule* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFGAS_FontMgr*, %class.CFGAS_FontMgr** %5, align 8
  %7 = bitcast %"class.fxcrt::RetainPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFGAS_GEFont* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEFont*), %class.CFGAS_GEFont** %8, align 8
  call void @_ZN13CFGAS_FontMgr8LoadFontEPKwjt(%"class.fxcrt::RetainPtr"* nonnull sret %3, %class.CFGAS_FontMgr* %6, i32* getelementptr inbounds ([13 x i32], [13 x i32]* @.str, i64 0, i64 0), i32 %1, i16 zeroext -1) #5
  %9 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %8, align 8
  %10 = icmp eq %class.CFGAS_GEFont* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = ptrtoint %class.CFGAS_GEFont* %9 to i64
  %13 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %12, i64* %13, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %8, align 8
  br label %28

14:                                               ; preds = %2
  call void @_ZN13CFGAS_FontMgr8LoadFontEPKwjt(%"class.fxcrt::RetainPtr"* sret %0, %class.CFGAS_FontMgr* %6, i32* null, i32 %1, i16 zeroext -1) #5
  %15 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %8, align 8
  %16 = bitcast %class.CFGAS_GEFont* %15 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %8, align 8
  %17 = icmp eq %class.CFGAS_GEFont* %15, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %15, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %15, i64 0, i32 0
  %25 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %16, align 8
  %26 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, i64 1
  %27 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, align 8
  call void %27(%"class.fxcrt::Retainable"* nonnull %24) #5
  br label %28

28:                                               ; preds = %11, %14, %18, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
