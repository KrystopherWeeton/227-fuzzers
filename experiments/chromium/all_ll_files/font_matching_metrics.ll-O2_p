; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_matching_metrics.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_matching_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", %"class.WTF::HashSet", i32, [4 x i8], %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.1" }
%"class.WTF::HashTable.1" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"struct.blink::IdentifiableTokenKey", %"class.blink::IdentifiableToken" }
%"struct.blink::IdentifiableTokenKey" = type <{ %"class.blink::IdentifiableToken", i8, i8, [6 x i8] }>
%"class.blink::IdentifiableToken" = type { i64 }
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.4, %"class.base::WeakPtrFactory" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.4 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.11", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.blink::IdentifiabilityStudySettings" = type <{ %"class.std::__1::unique_ptr", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::IdentifiabilityStudySettingsProvider"* }
%"class.blink::IdentifiabilityStudySettingsProvider" = type { i32 (...)** }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.24", %class.scoped_refptr.31, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.23, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.5" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.5" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.12" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.21 }
%union.anon.21 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.23 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.27, %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.31 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.32", [4 x i8] }>
%"class.WTF::RefCounted.32" = type { %"class.base::RefCounted.33" }
%"class.base::RefCounted.33" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::FontGlobalContext" = type { %"class.blink::FontCache", %"class.std::__1::unique_ptr.290", %struct.hb_font_funcs_t*, %struct.hb_font_funcs_t*, %"class.std::__1::unique_ptr.296", %"class.WTF::LruCache", %"class.WTF::LruCache" }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.83, i16, i8, [5 x i8], %"class.blink::Persistent", %"class.WTF::HashMap.263", %"class.WTF::HashMap.268", %"class.blink::FontDataCache", %"class.blink::Persistent.288", float, [4 x i8] }>
%class.sk_sp.83 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::HeapHashSet"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashSet" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.84", i32, [4 x i8], %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.217", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.228", %"class.std::__1::unique_ptr.234", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.252", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.259", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.197", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { i64 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::Worklist.147"* }
%"class.blink::Worklist.147" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::Worklist.154"* }
%"class.blink::Worklist.154" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::Worklist.161"* }
%"class.blink::Worklist.161" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::Worklist.168"* }
%"class.blink::Worklist.168" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.78" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.189", %"class.std::__1::__compressed_pair.191", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { i64 }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { float }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.200", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.209" }
%"class.WTF::Vector.209" = type { %"class.WTF::VectorBuffer.210" }
%"class.WTF::VectorBuffer.210" = type { %"class.WTF::VectorBufferBase.211" }
%"class.WTF::VectorBufferBase.211" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.225" }
%"class.WTF::VectorBuffer.225" = type { %"class.WTF::VectorBufferBase.226" }
%"class.WTF::VectorBufferBase.226" = type { %"struct.std::__1::pair.227"*, i32, i32 }
%"struct.std::__1::pair.227" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.240" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.133"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.140"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.147"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.154"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.307", i64 }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.309" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.258 }
%class.scoped_refptr.258 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.259" = type { %"struct.std::__1::__atomic_base.260" }
%"struct.std::__1::__atomic_base.260" = type { %"struct.std::__1::__cxx_atomic_impl.261" }
%"struct.std::__1::__cxx_atomic_impl.261" = type { %"struct.std::__1::__cxx_atomic_base_impl.262" }
%"struct.std::__1::__cxx_atomic_base_impl.262" = type { i8 }
%"class.WTF::HashMap.263" = type { %"class.WTF::HashTable.264" }
%"class.WTF::HashTable.264" = type <{ %"struct.WTF::KeyValuePair.267"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.267" = type opaque
%"class.WTF::HashMap.268" = type { %"class.WTF::HashTable.269" }
%"class.WTF::HashTable.269" = type <{ %"struct.WTF::KeyValuePair.272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.272" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.273", %"class.WTF::LinkedHashSet" }
%"class.WTF::HashMap.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %"struct.WTF::KeyValuePair.277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.277" = type opaque
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.278", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.278" = type { %"class.WTF::HashTable.279" }
%"class.WTF::HashTable.279" = type <{ %"struct.WTF::KeyValuePair.282"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.282" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.283", i32, i32 }
%"class.WTF::Vector.283" = type { %"class.WTF::VectorBuffer.284" }
%"class.WTF::VectorBuffer.284" = type { %"class.WTF::VectorBufferBase.285" }
%"class.WTF::VectorBufferBase.285" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::Persistent.288" = type { %"class.blink::PersistentBase.289" }
%"class.blink::PersistentBase.289" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::HarfBuzzFontCache"* }
%"class.blink::HarfBuzzFontCache" = type opaque
%struct.hb_font_funcs_t = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::FontUniqueNameLookup"* }
%"class.blink::FontUniqueNameLookup" = type opaque
%"class.WTF::LruCache" = type { %"class.WTF::HashMap.302", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap.302" = type { %"class.WTF::HashTable.303" }
%"class.WTF::HashTable.303" = type <{ %"struct.WTF::KeyValuePair.306"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.306" = type opaque
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<unsigned int, blink::IdentifiableToken, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int> >::MappedListNodeWithKey" = type opaque
%"class.blink::IdentifiableTokenBuilder" = type { %"struct.std::__1::array", i8*, i64 }
%"struct.std::__1::array" = type { [64 x i8] }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.35, %class.scoped_refptr.40, %class.scoped_refptr.50, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.56 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.35 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.38", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.38" = type { %"class.base::RefCounted.39" }
%"class.base::RefCounted.39" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.40 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.41", %"class.WTF::RefCounted.48", [4 x i8] }>
%"class.blink::FontSettings.41" = type { %"class.WTF::Vector.42" }
%"class.WTF::Vector.42" = type { %"class.WTF::VectorBuffer.43" }
%"class.WTF::VectorBuffer.43" = type { %"class.WTF::VectorBufferBase.44" }
%"class.WTF::VectorBufferBase.44" = type { %"class.blink::FontTagValuePair.45"*, i32, i32 }
%"class.blink::FontTagValuePair.45" = type { i32, float }
%"class.WTF::RefCounted.48" = type { %"class.base::RefCounted.49" }
%"class.base::RefCounted.49" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.50 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.51", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.53, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.51" = type { %"class.base::RefCounted.52" }
%"class.base::RefCounted.52" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.53 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.54", [4 x i8] }>
%"class.WTF::RefCounted.54" = type { %"class.base::RefCounted.55" }
%"class.base::RefCounted.55" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.56 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%"class.blink::IdentifiabilityMetricBuilder" = type { %"class.std::__1::vector", %"class.ukm::SourceIdObj" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::IdentifiableSample"*, %"struct.blink::IdentifiableSample"*, %"class.std::__1::__compressed_pair.59" }
%"struct.blink::IdentifiableSample" = type { %"class.blink::IdentifiableSurface", %"class.blink::IdentifiableToken" }
%"class.blink::IdentifiableSurface" = type { i64 }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.blink::IdentifiableSample"* }
%"class.ukm::SourceIdObj" = type { i64 }
%"struct.std::__1::pair" = type { %"class.WTF::HashMap"*, i64 }
%"class.ukm::builders::FontMatchAttempts" = type { %"class.ukm::internal::UkmEntryBuilderBase" }
%"class.ukm::internal::UkmEntryBuilderBase" = type { i32 (...)**, %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.64" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.ukm::mojom::UkmEntry"* }
%"class.ukm::mojom::UkmEntry" = type { i64, i64, %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.67" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.std::__1::pair.69"*, %"struct.std::__1::pair.69"*, %"class.std::__1::__compressed_pair.70" }
%"struct.std::__1::pair.69" = type opaque
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::pair.69"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.314 }
%class.scoped_refptr.314 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.315", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.315" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.316 }
%class.scoped_refptr.316 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink15TaskRunnerTimerINS_19FontMatchingMetricsEED0Ev = comdat any

$_ZN5blink15TaskRunnerTimerINS_19FontMatchingMetricsEE5FiredEv = comdat any

$_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RbEENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_ = comdat any

$_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EENSt3__14pairIPS5_bEERKT0_ = comdat any

$_ZNK3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EEPKS5_RKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_ = comdat any

$_ZTVN5blink15TaskRunnerTimerINS_19FontMatchingMetricsEEE = comdat any

@_ZN5blink17font_family_names15kWebkitStandardE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [43 x i8] c"Blink.Fonts.FontFamilyMatchAttempts.System\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"Blink.Fonts.FontMatchAttempts.System\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"Blink.Fonts.EmojiClusterBrokenness\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"OnFontLookup\00", align 1
@.str.4 = private unnamed_addr constant [73 x i8] c"../../third_party/blink/renderer/platform/fonts/font_matching_metrics.cc\00", align 1
@_ZTVN5blink15TaskRunnerTimerINS_19FontMatchingMetricsEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::TaskRunnerTimer"*)* @_ZN5blink15TaskRunnerTimerINS_19FontMatchingMetricsEED0Ev to i8*), i8* bitcast (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase4StopEv to i8*), i8* bitcast (void (%"class.blink::TaskRunnerTimer"*)* @_ZN5blink15TaskRunnerTimerINS_19FontMatchingMetricsEE5FiredEv to i8*), i8* bitcast (void (%"class.base::OnceCallback"*, %"class.blink::TimerBase"*, %"class.base::WeakPtr"*)* @_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink20IdentifiableTokenKeyENS2_17IdentifiableTokenEEEEEPKcv = private unnamed_addr constant [120 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::IdentifiableTokenKey, blink::IdentifiableToken>]\00", align 1
@_ZZN5blink19FontMatchingMetrics17PublishUkmMetricsEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink19FontMatchingMetrics17PublishUkmMetricsEvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink19FontMatchingMetrics24PublishEmojiGlyphMetricsEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink19FontMatchingMetricsC1EbPN3ukm11UkmRecorderEl13scoped_refptrIN4base22SingleThreadTaskRunnerEE = hidden unnamed_addr alias void (%"class.blink::FontMatchingMetrics"*, i1, %"class.ukm::UkmRecorder"*, i64, %"class.base::SingleThreadTaskRunner"*), void (%"class.blink::FontMatchingMetrics"*, i1, %"class.ukm::UkmRecorder"*, i64, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink19FontMatchingMetricsC2EbPN3ukm11UkmRecorderEl13scoped_refptrIN4base22SingleThreadTaskRunnerEE
@_ZN5blink19FontMatchingMetricsC1EPN3ukm11UkmRecorderEl13scoped_refptrIN4base22SingleThreadTaskRunnerEE = hidden unnamed_addr alias void (%"class.blink::FontMatchingMetrics"*, %"class.ukm::UkmRecorder"*, i64, %"class.base::SingleThreadTaskRunner"*), void (%"class.blink::FontMatchingMetrics"*, %"class.ukm::UkmRecorder"*, i64, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink19FontMatchingMetricsC2EPN3ukm11UkmRecorderEl13scoped_refptrIN4base22SingleThreadTaskRunnerEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetricsC2EbPN3ukm11UkmRecorderEl13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FontMatchingMetrics"*, i1 zeroext, %"class.ukm::UkmRecorder"*, i64, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.blink::FontMatchingMetrics"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false) #10
  %7 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::HashSet"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #10
  %9 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 2
  %10 = bitcast %"class.WTF::HashSet"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #10
  %11 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashSet"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 20, i1 false) #10
  %13 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 4
  %14 = bitcast %"class.WTF::HashSet"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #10
  %15 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 5
  %16 = bitcast %"class.WTF::HashSet"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #10
  %17 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 6
  %18 = xor i1 %1, true
  %19 = zext i1 %18 to i32
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 8
  %21 = bitcast %"class.WTF::HashMap"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 20, i1 false) #10
  %22 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 9
  %23 = bitcast %"class.WTF::HashMap"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #10
  %24 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 10
  %25 = bitcast %"class.WTF::HashMap"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 20, i1 false) #10
  %26 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 11
  %27 = bitcast %"class.WTF::HashMap"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 20, i1 false) #10
  %28 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 12
  %29 = bitcast %"class.WTF::HashMap"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 20, i1 false) #10
  %30 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 13
  %31 = bitcast %"class.WTF::HashMap"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 20, i1 false) #10
  %32 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 14
  %33 = bitcast %"class.WTF::HashMap"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 20, i1 false) #10
  %34 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 15
  %35 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 17
  %36 = bitcast i64* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false)
  store %"class.ukm::UkmRecorder"* %2, %"class.ukm::UkmRecorder"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 18
  store i64 %3, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19
  %39 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %5
  %41 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw add i32* %41, i32 1 monotonic
  br label %43

43:                                               ; preds = %5, %40
  %44 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %38, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %44, %"class.base::SingleThreadTaskRunner"* %4) #10
  %45 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %38, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink15TaskRunnerTimerINS_19FontMatchingMetricsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 1
  store %"class.blink::FontMatchingMetrics"* %0, %"class.blink::FontMatchingMetrics"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 2, i32 0
  %48 = bitcast i64* %47 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::FontMatchingMetrics"*, %"class.blink::TimerBase"*)* @_ZN5blink19FontMatchingMetrics32IdentifiabilityMetricsTimerFiredEPNS_9TimerBaseE to i64), i64 0>, <2 x i64>* %48, align 8
  %49 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %49, i32 7) #10
  %50 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %50, i32 7) #10
  br i1 %39, label %59, label %51

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = atomicrmw sub i32* %53, i32 1 acq_rel
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %52, i64 -2
  %58 = bitcast %"class.base::RefCountedThreadSafe"* %57 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %58) #10
  br label %59

59:                                               ; preds = %43, %51, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics32IdentifiabilityMetricsTimerFiredEPNS_9TimerBaseE(%"class.blink::FontMatchingMetrics"*, %"class.blink::TimerBase"* nocapture readnone) #0 align 2 {
  tail call void @_ZN5blink19FontMatchingMetrics29PublishIdentifiabilityMetricsEv(%"class.blink::FontMatchingMetrics"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics10InitializeEv(%"class.blink::FontMatchingMetrics"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %2, i32 7) #10
  %3 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %3, i32 7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetricsC2EPN3ukm11UkmRecorderEl13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FontMatchingMetrics"*, %"class.ukm::UkmRecorder"*, i64, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::FontMatchingMetrics"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #10
  %6 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 1
  %7 = bitcast %"class.WTF::HashSet"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #10
  %8 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 2
  %9 = bitcast %"class.WTF::HashSet"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #10
  %10 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashSet"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #10
  %12 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 4
  %13 = bitcast %"class.WTF::HashSet"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #10
  %14 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 5
  %15 = bitcast %"class.WTF::HashSet"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #10
  %16 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 6
  store i32 2, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 8
  %18 = bitcast %"class.WTF::HashMap"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #10
  %19 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 9
  %20 = bitcast %"class.WTF::HashMap"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #10
  %21 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 10
  %22 = bitcast %"class.WTF::HashMap"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #10
  %23 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 11
  %24 = bitcast %"class.WTF::HashMap"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 20, i1 false) #10
  %25 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 12
  %26 = bitcast %"class.WTF::HashMap"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #10
  %27 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 13
  %28 = bitcast %"class.WTF::HashMap"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 20, i1 false) #10
  %29 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 14
  %30 = bitcast %"class.WTF::HashMap"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 20, i1 false) #10
  %31 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 15
  %32 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 17
  %33 = bitcast i64* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false)
  store %"class.ukm::UkmRecorder"* %1, %"class.ukm::UkmRecorder"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 18
  store i64 %2, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19
  %36 = icmp eq %"class.base::SingleThreadTaskRunner"* %3, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic
  br label %40

40:                                               ; preds = %4, %37
  %41 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %35, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"* %41, %"class.base::SingleThreadTaskRunner"* %3) #10
  %42 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %35, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink15TaskRunnerTimerINS_19FontMatchingMetricsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 1
  store %"class.blink::FontMatchingMetrics"* %0, %"class.blink::FontMatchingMetrics"** %43, align 8
  %44 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 2, i32 0
  %45 = bitcast i64* %44 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::FontMatchingMetrics"*, %"class.blink::TimerBase"*)* @_ZN5blink19FontMatchingMetrics32IdentifiabilityMetricsTimerFiredEPNS_9TimerBaseE to i64), i64 0>, <2 x i64>* %45, align 8
  %46 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %46, i32 7) #10
  %47 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %47, i32 7) #10
  br i1 %36, label %56, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %3, i64 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %49, i64 -2
  %55 = bitcast %"class.base::RefCountedThreadSafe"* %54 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %55) #10
  br label %56

56:                                               ; preds = %40, %48, %53
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics31ReportSuccessfulFontFamilyMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 0, i32 0
  %4 = tail call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics27ReportFailedFontFamilyMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 1, i32 0
  %4 = tail call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics22ReportSystemFontFamilyERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 2, i32 0
  %4 = tail call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics19ReportWebFontFamilyERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 3, i32 0
  %4 = tail call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %3, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics30ReportSuccessfulLocalFontMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"struct.blink::IdentifiableTokenKey", align 8
  %5 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 4, i32 0
  %6 = tail call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 1, i8* %3, align 1
  %7 = tail call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %8 = tail call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %7, i64 26) #10
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = bitcast %"struct.blink::IdentifiableTokenKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #10
  %15 = tail call i64 @_ZN5blink43IdentifiabilityBenignCaseFoldingStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %14) #10
  store i64 %15, i64* %11, align 8
  store i8 0, i8* %12, align 8
  store i8 0, i8* %13, align 1
  %16 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 14, i32 0
  %17 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RbEENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %16, %"struct.blink::IdentifiableTokenKey"* nonnull dereferenceable(16) %4, i8* nonnull dereferenceable(1) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br label %18

18:                                               ; preds = %2, %9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics40ReportLocalFontExistenceByUniqueNameOnlyERKN3WTF12AtomicStringEb(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %"struct.blink::IdentifiableTokenKey", align 8
  %6 = zext i1 %2 to i8
  store i8 %6, i8* %4, align 1
  %7 = tail call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %8 = tail call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %7, i64 26) #10
  br i1 %8, label %9, label %19

9:                                                ; preds = %3
  %10 = bitcast %"struct.blink::IdentifiableTokenKey"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %5, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %5, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %15 = bitcast %"struct.blink::IdentifiableTokenKey"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  %16 = tail call i64 @_ZN5blink43IdentifiabilityBenignCaseFoldingStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %14) #10
  store i64 %16, i64* %11, align 8
  store i8 0, i8* %12, align 8
  store i8 0, i8* %13, align 1
  %17 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 14, i32 0
  %18 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RbEENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %17, %"struct.blink::IdentifiableTokenKey"* nonnull dereferenceable(16) %5, i8* nonnull dereferenceable(1) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br label %19

19:                                               ; preds = %3, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics26ReportFailedLocalFontMatchERKN3WTF12AtomicStringE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"struct.blink::IdentifiableTokenKey", align 8
  %5 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 5, i32 0
  %6 = tail call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %1) #10
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 0, i8* %3, align 1
  %7 = tail call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %8 = tail call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %7, i64 26) #10
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = bitcast %"struct.blink::IdentifiableTokenKey"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false) #10
  %15 = tail call i64 @_ZN5blink43IdentifiabilityBenignCaseFoldingStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %14) #10
  store i64 %15, i64* %11, align 8
  store i8 0, i8* %12, align 8
  store i8 0, i8* %13, align 1
  %16 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 14, i32 0
  %17 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RbEENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %16, %"struct.blink::IdentifiableTokenKey"* nonnull dereferenceable(16) %4, i8* nonnull dereferenceable(1) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #10
  br label %18

18:                                               ; preds = %2, %9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  ret void
}

declare %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"*, i64) local_unnamed_addr #2

declare i64 @_ZN5blink43IdentifiabilityBenignCaseFoldingStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics21InsertFontHashIntoMapENS_20IdentifiableTokenKeyEPNS_14SimpleFontDataERN3WTF7HashMapIS1_NS_17IdentifiableTokenENS_24IdentifiableTokenKeyHashENS_30IdentifiableTokenKeyHashTraitsENS4_10HashTraitsIS6_EENS4_18PartitionAllocatorEEE(%"class.blink::FontMatchingMetrics"*, i64, i64, %"class.blink::SimpleFontData"*, %"class.WTF::HashMap"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::IdentifiableTokenKey"*
  %8 = alloca %"class.blink::IdentifiableToken", align 8
  %9 = alloca %"struct.blink::IdentifiableTokenKey", align 8
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %4, i64 0, i32 0
  %13 = call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EEPKS5_RKT0_(%"class.WTF::HashTable.1"* %12, %"struct.blink::IdentifiableTokenKey"* nonnull dereferenceable(16) %7) #10
  %14 = icmp eq %"struct.WTF::KeyValuePair"* %13, null
  br i1 %14, label %15, label %39

15:                                               ; preds = %5
  %16 = bitcast %"class.blink::IdentifiableToken"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %8, i64 0, i32 0
  store i64 -6148914691236517206, i64* %17, align 8
  %18 = icmp eq %"class.blink::SimpleFontData"* %3, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  store i64 0, i64* %17, align 8
  %20 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %12, %"struct.blink::IdentifiableTokenKey"* nonnull dereferenceable(16) %7, %"class.blink::IdentifiableToken"* nonnull dereferenceable(8) %8) #10
  br label %38

21:                                               ; preds = %15
  %22 = call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #10
  %23 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %3, i64 0, i32 5
  %24 = call i64 @_ZN5blink17FontGlobalContext26GetOrComputeTypefaceDigestERKNS_16FontPlatformDataE(%"class.blink::FontGlobalContext"* %22, %"class.blink::FontPlatformData"* dereferenceable(72) %23) #10
  store i64 %24, i64* %17, align 8
  %25 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %12, %"struct.blink::IdentifiableTokenKey"* nonnull dereferenceable(16) %7, %"class.blink::IdentifiableToken"* nonnull dereferenceable(8) %8) #10
  %26 = call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %27 = call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %26, i64 29) #10
  br i1 %27, label %28, label %38

28:                                               ; preds = %21
  %29 = bitcast %"struct.blink::IdentifiableTokenKey"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %9, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %9, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %9, i64 0, i32 2
  %33 = bitcast %"struct.blink::IdentifiableTokenKey"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false)
  %34 = call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #10
  %35 = call i64 @_ZN5blink17FontGlobalContext32GetOrComputePostScriptNameDigestERKNS_16FontPlatformDataE(%"class.blink::FontGlobalContext"* %34, %"class.blink::FontPlatformData"* dereferenceable(72) %23) #10
  store i64 %35, i64* %30, align 8
  store i8 0, i8* %31, align 8
  store i8 0, i8* %32, align 1
  %36 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 13, i32 0
  %37 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %36, %"struct.blink::IdentifiableTokenKey"* nonnull dereferenceable(16) %9, %"class.blink::IdentifiableToken"* nonnull dereferenceable(8) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #10
  br label %38

38:                                               ; preds = %19, %21, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %39

39:                                               ; preds = %5, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink19FontMatchingMetrics18GetHashForFontDataEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"* nocapture readnone, %"class.blink::SimpleFontData"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::SimpleFontData"* %1, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #10
  %6 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %1, i64 0, i32 5
  %7 = tail call i64 @_ZN5blink17FontGlobalContext26GetOrComputeTypefaceDigestERKNS_16FontPlatformDataE(%"class.blink::FontGlobalContext"* %5, %"class.blink::FontPlatformData"* dereferenceable(72) %6) #10
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i64 [ %7, %4 ], [ 0, %2 ]
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink19FontMatchingMetrics33GetPostScriptNameTokenForFontDataEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"* nocapture readnone, %"class.blink::SimpleFontData"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32 1) #10
  %4 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %1, i64 0, i32 5
  %5 = tail call i64 @_ZN5blink17FontGlobalContext32GetOrComputePostScriptNameDigestERKNS_16FontPlatformDataE(%"class.blink::FontGlobalContext"* %3, %"class.blink::FontPlatformData"* dereferenceable(72) %4) #10
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics39GetTokenBuilderWithFontSelectionRequestERKNS_15FontDescriptionE(%"class.blink::IdentifiableTokenBuilder"* noalias sret, %"class.blink::FontMatchingMetrics"* nocapture readnone, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"struct.blink::FontSelectionRequest", align 8
  %6 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %0, i64 0, i32 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 80, i1 false)
  tail call void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"* %0) #10
  %7 = bitcast %"struct.blink::FontSelectionRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %7) #10
  %8 = tail call i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"* %2) #10
  %9 = bitcast %"struct.blink::FontSelectionRequest"* %5 to i48*
  store i48 %8, i48* %9, align 8
  %10 = call i32 @_ZNK5blink20FontSelectionRequest7GetHashEv(%"struct.blink::FontSelectionRequest"* nonnull %5) #10
  call void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"* %0) #10
  %11 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  %12 = zext i32 %10 to i64
  store i64 %12, i64* %4, align 8
  %13 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* %0, i64 8, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"*) unnamed_addr #2

declare i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i32 @_ZNK5blink20FontSelectionRequest7GetHashEv(%"struct.blink::FontSelectionRequest"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics36ReportFontLookupByUniqueOrFamilyNameERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = alloca %"struct.blink::FontSelectionRequest", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.blink::IdentifiableTokenBuilder", align 8
  %9 = tail call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %10 = tail call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %9, i64 3) #10
  br i1 %10, label %11, label %34

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %13, i64 0, i32 0, i32 0
  %15 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %14) #10
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0
  %18 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 357) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %17, i64 60000000, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #10
  br label %19

19:                                               ; preds = %11, %16
  %20 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %8, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %8, i64 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"* nonnull %8) #10
  %22 = bitcast %"struct.blink::FontSelectionRequest"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %22) #10, !noalias !2
  %23 = call i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"* %2) #10
  %24 = bitcast %"struct.blink::FontSelectionRequest"* %6 to i48*
  store i48 %23, i48* %24, align 8, !noalias !2
  %25 = call i32 @_ZNK5blink20FontSelectionRequest7GetHashEv(%"struct.blink::FontSelectionRequest"* nonnull %6) #10
  call void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %8) #10
  %26 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10, !noalias !2
  %27 = zext i32 %25 to i64
  store i64 %27, i64* %5, align 8, !noalias !2
  %28 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* nonnull %8, i64 8, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %22) #10, !noalias !2
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %30 = call i64 @_ZN5blink43IdentifiabilityBenignCaseFoldingStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %29) #10
  %31 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddTokenENS_17IdentifiableTokenE(%"class.blink::IdentifiableTokenBuilder"* nonnull %8, i64 %30) #10
  %32 = call i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %8) #10
  %33 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 8
  call void @_ZN5blink19FontMatchingMetrics21InsertFontHashIntoMapENS_20IdentifiableTokenKeyEPNS_14SimpleFontDataERN3WTF7HashMapIS1_NS_17IdentifiableTokenENS_24IdentifiableTokenKeyHashENS_30IdentifiableTokenKeyHashTraitsENS4_10HashTraitsIS6_EENS4_18PartitionAllocatorEEE(%"class.blink::FontMatchingMetrics"* %0, i64 %32, i64 -6148914691236560896, %"class.blink::SimpleFontData"* %3, %"class.WTF::HashMap"* dereferenceable(24) %33)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %20) #10
  br label %34

34:                                               ; preds = %4, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics12OnFontLookupEv(%"class.blink::FontMatchingMetrics"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %4, i64 0, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %5) #10
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0
  %9 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 357) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %8, i64 60000000, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  br label %10

10:                                               ; preds = %1, %7
  ret void
}

declare dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddTokenENS_17IdentifiableTokenE(%"class.blink::IdentifiableTokenBuilder"*, i64) local_unnamed_addr #2

declare i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics32ReportFontLookupByUniqueNameOnlyERKN3WTF12AtomicStringERKNS_15FontDescriptionEPNS_14SimpleFontDataEb(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"struct.blink::FontSelectionRequest", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.blink::IdentifiableTokenBuilder", align 8
  br i1 %4, label %36, label %10

10:                                               ; preds = %5
  %11 = tail call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %12 = tail call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %11, i64 12) #10
  br i1 %12, label %13, label %36

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %15, i64 0, i32 0, i32 0
  %17 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %16) #10
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0
  %20 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 357) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %19, i64 60000000, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  br label %21

21:                                               ; preds = %13, %18
  %22 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %9, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %9, i64 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 80, i1 false)
  call void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"* nonnull %9) #10
  %24 = bitcast %"struct.blink::FontSelectionRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %24) #10, !noalias !5
  %25 = call i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"* %2) #10
  %26 = bitcast %"struct.blink::FontSelectionRequest"* %7 to i48*
  store i48 %25, i48* %26, align 8, !noalias !5
  %27 = call i32 @_ZNK5blink20FontSelectionRequest7GetHashEv(%"struct.blink::FontSelectionRequest"* nonnull %7) #10
  call void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %9) #10
  %28 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10, !noalias !5
  %29 = zext i32 %27 to i64
  store i64 %29, i64* %6, align 8, !noalias !5
  %30 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* nonnull %9, i64 8, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %24) #10, !noalias !5
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %32 = call i64 @_ZN5blink43IdentifiabilityBenignCaseFoldingStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %31) #10
  %33 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddTokenENS_17IdentifiableTokenE(%"class.blink::IdentifiableTokenBuilder"* nonnull %9, i64 %32) #10
  %34 = call i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %9) #10
  %35 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 9
  call void @_ZN5blink19FontMatchingMetrics21InsertFontHashIntoMapENS_20IdentifiableTokenKeyEPNS_14SimpleFontDataERN3WTF7HashMapIS1_NS_17IdentifiableTokenENS_24IdentifiableTokenKeyHashENS_30IdentifiableTokenKeyHashTraitsENS4_10HashTraitsIS6_EENS4_18PartitionAllocatorEEE(%"class.blink::FontMatchingMetrics"* %0, i64 %34, i64 -6148914691236560896, %"class.blink::SimpleFontData"* %3, %"class.WTF::HashMap"* dereferenceable(24) %35)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #10
  br label %36

36:                                               ; preds = %5, %10, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics35ReportFontLookupByFallbackCharacterEiNS_20FontFallbackPriorityERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"*, i32, i32, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) local_unnamed_addr #0 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.blink::FontSelectionRequest", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.blink::IdentifiableTokenBuilder", align 8
  %11 = tail call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %12 = tail call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %11, i64 13) #10
  br i1 %12, label %13, label %38

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %15, i64 0, i32 0, i32 0
  %17 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %16) #10
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0
  %20 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 357) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %19, i64 60000000, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  br label %21

21:                                               ; preds = %13, %18
  %22 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %10, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %10, i64 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 80, i1 false)
  call void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"* nonnull %10) #10
  %24 = bitcast %"struct.blink::FontSelectionRequest"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %24) #10, !noalias !8
  %25 = call i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"* %3) #10
  %26 = bitcast %"struct.blink::FontSelectionRequest"* %8 to i48*
  store i48 %25, i48* %26, align 8, !noalias !8
  %27 = call i32 @_ZNK5blink20FontSelectionRequest7GetHashEv(%"struct.blink::FontSelectionRequest"* nonnull %8) #10
  call void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %10) #10
  %28 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10, !noalias !8
  %29 = zext i32 %27 to i64
  store i64 %29, i64* %7, align 8, !noalias !8
  %30 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* nonnull %10, i64 8, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %24) #10, !noalias !8
  call void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %10) #10
  %31 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  %32 = sext i32 %1 to i64
  store i64 %32, i64* %6, align 8
  %33 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* nonnull %10, i64 8, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  %34 = sext i32 %2 to i64
  %35 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddTokenENS_17IdentifiableTokenE(%"class.blink::IdentifiableTokenBuilder"* %33, i64 %34) #10
  %36 = call i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %10) #10
  %37 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 10
  call void @_ZN5blink19FontMatchingMetrics21InsertFontHashIntoMapENS_20IdentifiableTokenKeyEPNS_14SimpleFontDataERN3WTF7HashMapIS1_NS_17IdentifiableTokenENS_24IdentifiableTokenKeyHashENS_30IdentifiableTokenKeyHashTraitsENS4_10HashTraitsIS6_EENS4_18PartitionAllocatorEEE(%"class.blink::FontMatchingMetrics"* %0, i64 %36, i64 -6148914691236560896, %"class.blink::SimpleFontData"* %4, %"class.WTF::HashMap"* dereferenceable(24) %37)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #10
  br label %38

38:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics34ReportLastResortFallbackFontLookupERKNS_15FontDescriptionEPNS_14SimpleFontDataE(%"class.blink::FontMatchingMetrics"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::SimpleFontData"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"struct.blink::FontSelectionRequest", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.blink::IdentifiableTokenBuilder", align 8
  %8 = tail call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %9 = tail call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %8, i64 14) #10
  br i1 %9, label %10, label %30

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %12, i64 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %13) #10
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0
  %17 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 357) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %16, i64 60000000, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #10
  br label %18

18:                                               ; preds = %10, %15
  %19 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 80, i1 false)
  call void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"* nonnull %7) #10
  %21 = bitcast %"struct.blink::FontSelectionRequest"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %21) #10, !noalias !11
  %22 = call i48 @_ZNK5blink15FontDescription23GetFontSelectionRequestEv(%"class.blink::FontDescription"* %1) #10
  %23 = bitcast %"struct.blink::FontSelectionRequest"* %5 to i48*
  store i48 %22, i48* %23, align 8, !noalias !11
  %24 = call i32 @_ZNK5blink20FontSelectionRequest7GetHashEv(%"struct.blink::FontSelectionRequest"* nonnull %5) #10
  call void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %7) #10
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #10, !noalias !11
  %26 = zext i32 %24 to i64
  store i64 %26, i64* %4, align 8, !noalias !11
  %27 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"* nonnull %7, i64 8, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #10, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %21) #10, !noalias !11
  %28 = call i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %7) #10
  %29 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 11
  call void @_ZN5blink19FontMatchingMetrics21InsertFontHashIntoMapENS_20IdentifiableTokenKeyEPNS_14SimpleFontDataERN3WTF7HashMapIS1_NS_17IdentifiableTokenENS_24IdentifiableTokenKeyHashENS_30IdentifiableTokenKeyHashTraitsENS4_10HashTraitsIS6_EENS4_18PartitionAllocatorEEE(%"class.blink::FontMatchingMetrics"* %0, i64 %28, i64 -6148914691236560896, %"class.blink::SimpleFontData"* %2, %"class.WTF::HashMap"* dereferenceable(24) %29)
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %19) #10
  br label %30

30:                                               ; preds = %3, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics37ReportFontFamilyLookupByGenericFamilyERKN3WTF12AtomicStringE11UScriptCodeNS_15FontDescription17GenericFamilyTypeES4_(%"class.blink::FontMatchingMetrics"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.blink::IdentifiableTokenBuilder", align 8
  %8 = alloca %"struct.blink::IdentifiableTokenKey", align 8
  %9 = alloca %"class.blink::IdentifiableToken", align 8
  %10 = tail call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %11 = tail call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings13IsTypeAllowedENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %10, i64 4) #10
  br i1 %11, label %12, label %42

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %14, i64 0, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"* %15) #10
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 19, i32 0
  %19 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0), i32 357) #10
  call void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"* %18, i64 60000000, i64 0, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #10
  br label %20

20:                                               ; preds = %12, %17
  %21 = icmp eq i32 %3, 1
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names15kWebkitStandardE, align 8
  %23 = select i1 %21, %"class.WTF::AtomicString"* %22, %"class.WTF::AtomicString"* %1
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0
  %25 = call i64 @_ZN5blink32IdentifiabilityBenignStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %24) #10
  %26 = getelementptr inbounds %"class.blink::IdentifiableTokenBuilder", %"class.blink::IdentifiableTokenBuilder"* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 80, i1 false)
  call void @_ZN5blink24IdentifiableTokenBuilderC1Ev(%"class.blink::IdentifiableTokenBuilder"* nonnull %7) #10
  %27 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddTokenENS_17IdentifiableTokenE(%"class.blink::IdentifiableTokenBuilder"* nonnull %7, i64 %25) #10
  %28 = sext i32 %2 to i64
  %29 = call dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddTokenENS_17IdentifiableTokenE(%"class.blink::IdentifiableTokenBuilder"* %27, i64 %28) #10
  %30 = bitcast %"struct.blink::IdentifiableTokenKey"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %8, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %8, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %8, i64 0, i32 2
  %34 = bitcast %"struct.blink::IdentifiableTokenKey"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  %35 = call i64 @_ZNK5blink24IdentifiableTokenBuilder8GetTokenEv(%"class.blink::IdentifiableTokenBuilder"* nonnull %7) #10
  store i64 %35, i64* %31, align 8
  store i8 0, i8* %32, align 8
  store i8 0, i8* %33, align 1
  %36 = bitcast %"class.blink::IdentifiableToken"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0
  %38 = call i64 @_ZN5blink43IdentifiabilityBenignCaseFoldingStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %37) #10
  %39 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %9, i64 0, i32 0
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 12, i32 0
  %41 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"* %40, %"struct.blink::IdentifiableTokenKey"* nonnull dereferenceable(16) %8, %"class.blink::IdentifiableToken"* nonnull dereferenceable(8) %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %26) #10
  br label %42

42:                                               ; preds = %5, %20
  ret void
}

declare i64 @_ZN5blink32IdentifiabilityBenignStringTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics31ReportEmojiSegmentGlyphCoverageEjj(%"class.blink::FontMatchingMetrics"* nocapture, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 15
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  store i64 %7, i64* %5, align 8
  %8 = zext i32 %2 to i64
  %9 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 16
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %8
  store i64 %11, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics29PublishIdentifiabilityMetricsEv(%"class.blink::FontMatchingMetrics"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::IdentifiabilityMetricBuilder", align 8
  %3 = alloca [7 x %"struct.std::__1::pair"], align 16
  %4 = tail call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %5 = tail call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings8IsActiveEv(%"class.blink::IdentifiabilityStudySettings"* %4) #10
  br i1 %5, label %6, label %134

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::IdentifiabilityMetricBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 18
  %9 = bitcast %"class.blink::IdentifiabilityMetricBuilder"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  %10 = load i64, i64* %8, align 8
  call void @_ZN5blink28IdentifiabilityMetricBuilderC2EN3ukm11SourceIdObjE(%"class.blink::IdentifiabilityMetricBuilder"* nonnull %2, i64 %10) #10
  %11 = bitcast [7 x %"struct.std::__1::pair"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #10
  %12 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 0
  %13 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 8
  %14 = ptrtoint %"class.WTF::HashMap"* %13 to i64
  %15 = bitcast [7 x %"struct.std::__1::pair"]* %3 to i64*
  store i64 %14, i64* %15, align 16
  %16 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 0, i32 1
  store i64 3, i64* %16, align 8
  %17 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 1
  %18 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 9
  %19 = ptrtoint %"class.WTF::HashMap"* %18 to i64
  %20 = bitcast %"struct.std::__1::pair"* %17 to i64*
  store i64 %19, i64* %20, align 16
  %21 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 1, i32 1
  store i64 12, i64* %21, align 8
  %22 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 2
  %23 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 10
  %24 = ptrtoint %"class.WTF::HashMap"* %23 to i64
  %25 = bitcast %"struct.std::__1::pair"* %22 to i64*
  store i64 %24, i64* %25, align 16
  %26 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 2, i32 1
  store i64 13, i64* %26, align 8
  %27 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 3
  %28 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 11
  %29 = ptrtoint %"class.WTF::HashMap"* %28 to i64
  %30 = bitcast %"struct.std::__1::pair"* %27 to i64*
  store i64 %29, i64* %30, align 16
  %31 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 3, i32 1
  store i64 14, i64* %31, align 8
  %32 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 4
  %33 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 12
  %34 = ptrtoint %"class.WTF::HashMap"* %33 to i64
  %35 = bitcast %"struct.std::__1::pair"* %32 to i64*
  store i64 %34, i64* %35, align 16
  %36 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 4, i32 1
  store i64 4, i64* %36, align 8
  %37 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 5
  %38 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 13
  %39 = ptrtoint %"class.WTF::HashMap"* %38 to i64
  %40 = bitcast %"struct.std::__1::pair"* %37 to i64*
  store i64 %39, i64* %40, align 16
  %41 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 5, i32 1
  store i64 29, i64* %41, align 8
  %42 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 6
  %43 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 14
  %44 = ptrtoint %"class.WTF::HashMap"* %43 to i64
  %45 = bitcast %"struct.std::__1::pair"* %42 to i64*
  store i64 %44, i64* %45, align 16
  %46 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 6, i32 1
  store i64 26, i64* %46, align 8
  %47 = getelementptr inbounds [7 x %"struct.std::__1::pair"], [7 x %"struct.std::__1::pair"]* %3, i64 0, i64 7
  br label %51

48:                                               ; preds = %95
  %49 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 17
  %50 = load %"class.ukm::UkmRecorder"*, %"class.ukm::UkmRecorder"** %49, align 8
  call void @_ZN5blink28IdentifiabilityMetricBuilder6RecordEPN3ukm11UkmRecorderE(%"class.blink::IdentifiabilityMetricBuilder"* nonnull %2, %"class.ukm::UkmRecorder"* %50) #10
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #10
  call void @_ZN5blink28IdentifiabilityMetricBuilderD1Ev(%"class.blink::IdentifiabilityMetricBuilder"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  br label %134

51:                                               ; preds = %6, %95
  %52 = phi %"struct.std::__1::pair"* [ %12, %6 ], [ %96, %95 ]
  %53 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 0, i32 0
  %54 = load %"class.WTF::HashMap"*, %"class.WTF::HashMap"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 0, i32 1
  %56 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %54, i64 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %54, i64 0, i32 0, i32 0
  %60 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %59, align 8
  %61 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %54, i64 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %60, i64 %63
  br i1 %58, label %89, label %65

65:                                               ; preds = %51
  %66 = icmp eq i32 %62, 0
  br i1 %66, label %84, label %67

67:                                               ; preds = %65, %81
  %68 = phi %"struct.WTF::KeyValuePair"* [ %82, %81 ], [ %60, %65 ]
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, -7286425919675154353
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0, i32 1
  %73 = load i8, i8* %72, align 8, !range !14
  %74 = icmp eq i8 %73, 0
  %75 = and i1 %71, %74
  br i1 %75, label %76, label %80

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0, i32 2
  %78 = load i8, i8* %77, align 1, !range !14
  %79 = icmp eq i8 %78, 1
  br i1 %79, label %81, label %84

80:                                               ; preds = %67
  br i1 %74, label %84, label %81

81:                                               ; preds = %80, %76
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 1
  %83 = icmp eq %"struct.WTF::KeyValuePair"* %82, %64
  br i1 %83, label %89, label %67

84:                                               ; preds = %76, %80, %65
  %85 = phi %"struct.WTF::KeyValuePair"* [ %60, %65 ], [ %68, %80 ], [ %68, %76 ]
  %86 = icmp eq %"struct.WTF::KeyValuePair"* %85, %64
  br i1 %86, label %89, label %98

87:                                               ; preds = %112, %132, %129
  %88 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %59, align 8
  br label %89

89:                                               ; preds = %81, %51, %87, %84
  %90 = phi %"struct.WTF::KeyValuePair"* [ %88, %87 ], [ %60, %84 ], [ %60, %51 ], [ %60, %81 ]
  %91 = icmp eq %"struct.WTF::KeyValuePair"* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = bitcast %"struct.WTF::KeyValuePair"* %90 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %93) #10
  %94 = bitcast %"class.WTF::HashMap"* %54 to i64*
  store atomic i64 0, i64* %94 monotonic, align 8
  store i32 0, i32* %61, align 8
  store i32 0, i32* %56, align 4
  br label %95

95:                                               ; preds = %89, %92
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 1
  %97 = icmp eq %"struct.std::__1::pair"* %96, %47
  br i1 %97, label %48, label %51

98:                                               ; preds = %84, %132
  %99 = phi %"struct.WTF::KeyValuePair"* [ %116, %132 ], [ %85, %84 ]
  %100 = call %"class.blink::IdentifiabilityStudySettings"* @_ZN5blink28IdentifiabilityStudySettings3GetEv() #10
  %101 = load i64, i64* %55, align 8
  %102 = call zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings12ShouldSampleENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"* %100, i64 %101) #10
  br i1 %102, label %103, label %112

103:                                              ; preds = %98
  %104 = load i64, i64* %55, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 0, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = shl i64 %106, 8
  %108 = or i64 %107, %104
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 0, i32 1, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = call dereferenceable(32) %"class.blink::IdentifiabilityMetricBuilder"* @_ZN5blink28IdentifiabilityMetricBuilder3SetENS_19IdentifiableSurfaceENS_17IdentifiableTokenE(%"class.blink::IdentifiabilityMetricBuilder"* nonnull %2, i64 %108, i64 %110) #10
  br label %112

112:                                              ; preds = %103, %98
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 1
  %114 = icmp eq %"struct.WTF::KeyValuePair"* %113, %64
  br i1 %114, label %87, label %115

115:                                              ; preds = %112, %129
  %116 = phi %"struct.WTF::KeyValuePair"* [ %130, %129 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %118, -7286425919675154353
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0, i32 1
  %121 = load i8, i8* %120, align 8, !range !14
  %122 = icmp eq i8 %121, 0
  %123 = and i1 %119, %122
  br i1 %123, label %124, label %128

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0, i32 2
  %126 = load i8, i8* %125, align 1, !range !14
  %127 = icmp eq i8 %126, 1
  br i1 %127, label %129, label %132

128:                                              ; preds = %115
  br i1 %122, label %132, label %129

129:                                              ; preds = %128, %124
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 1
  %131 = icmp eq %"struct.WTF::KeyValuePair"* %130, %64
  br i1 %131, label %87, label %115

132:                                              ; preds = %124, %128
  %133 = icmp eq %"struct.WTF::KeyValuePair"* %116, %64
  br i1 %133, label %87, label %98

134:                                              ; preds = %1, %48
  ret void
}

declare zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings8IsActiveEv(%"class.blink::IdentifiabilityStudySettings"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink28IdentifiabilityStudySettings12ShouldSampleENS_19IdentifiableSurface4TypeE(%"class.blink::IdentifiabilityStudySettings"*, i64) local_unnamed_addr #2

declare dereferenceable(32) %"class.blink::IdentifiabilityMetricBuilder"* @_ZN5blink28IdentifiabilityMetricBuilder3SetENS_19IdentifiableSurfaceENS_17IdentifiableTokenE(%"class.blink::IdentifiabilityMetricBuilder"*, i64, i64) local_unnamed_addr #2

declare void @_ZN5blink28IdentifiabilityMetricBuilder6RecordEPN3ukm11UkmRecorderE(%"class.blink::IdentifiabilityMetricBuilder"*, %"class.ukm::UkmRecorder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink28IdentifiabilityMetricBuilderD1Ev(%"class.blink::IdentifiabilityMetricBuilder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics17PublishUkmMetricsEv(%"class.blink::FontMatchingMetrics"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.ukm::builders::FontMatchAttempts", align 8
  %3 = alloca %"class.WTF::HashSet", align 8
  %4 = alloca %"class.WTF::HashSet", align 8
  %5 = alloca %"class.WTF::HashSet", align 8
  %6 = alloca %"class.WTF::HashSet", align 8
  %7 = bitcast %"class.ukm::builders::FontMatchAttempts"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 18
  %9 = load i64, i64* %8, align 8
  call void @_ZN3ukm8builders17FontMatchAttemptsC1El(%"class.ukm::builders::FontMatchAttempts"* nonnull %2, i64 %9) #10
  %10 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = call dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts14SetLoadContextEl(%"class.ukm::builders::FontMatchAttempts"* nonnull %2, i64 %12) #10
  %14 = bitcast %"class.WTF::HashSet"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 2
  call fastcc void @_ZN12_GLOBAL__N_115SetIntersectionIN3WTF12AtomicStringEEENS1_7HashSetIT_NS1_11DefaultHashIS4_E4HashENS1_10HashTraitsIS4_EENS1_18PartitionAllocatorEEERKSB_SD_(%"class.WTF::HashSet"* nonnull sret %3, %"class.WTF::HashSet"* dereferenceable(24) %15, %"class.WTF::HashSet"* dereferenceable(24) %16)
  %17 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = call i64 @_ZN3ukm23GetExponentialBucketMinEld(i64 %19, double 1.300000e+00) #10
  %21 = call dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts28SetSystemFontFamilySuccessesEl(%"class.ukm::builders::FontMatchAttempts"* %13, i64 %20) #10
  %22 = bitcast %"class.WTF::HashSet"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 1
  call fastcc void @_ZN12_GLOBAL__N_115SetIntersectionIN3WTF12AtomicStringEEENS1_7HashSetIT_NS1_11DefaultHashIS4_E4HashENS1_10HashTraitsIS4_EENS1_18PartitionAllocatorEEERKSB_SD_(%"class.WTF::HashSet"* nonnull sret %4, %"class.WTF::HashSet"* dereferenceable(24) %23, %"class.WTF::HashSet"* dereferenceable(24) %16)
  %24 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = call i64 @_ZN3ukm23GetExponentialBucketMinEld(i64 %26, double 1.300000e+00) #10
  %28 = call dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts27SetSystemFontFamilyFailuresEl(%"class.ukm::builders::FontMatchAttempts"* %21, i64 %27) #10
  %29 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 2, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = call i64 @_ZN3ukm23GetExponentialBucketMinEld(i64 %31, double 1.300000e+00) #10
  %33 = call dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts24SetSystemFontFamilyTotalEl(%"class.ukm::builders::FontMatchAttempts"* %28, i64 %32) #10
  %34 = bitcast %"class.WTF::HashSet"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 3
  call fastcc void @_ZN12_GLOBAL__N_115SetIntersectionIN3WTF12AtomicStringEEENS1_7HashSetIT_NS1_11DefaultHashIS4_E4HashENS1_10HashTraitsIS4_EENS1_18PartitionAllocatorEEERKSB_SD_(%"class.WTF::HashSet"* nonnull sret %5, %"class.WTF::HashSet"* dereferenceable(24) %15, %"class.WTF::HashSet"* dereferenceable(24) %35)
  %36 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = call i64 @_ZN3ukm23GetExponentialBucketMinEld(i64 %38, double 1.300000e+00) #10
  %40 = call dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts25SetWebFontFamilySuccessesEl(%"class.ukm::builders::FontMatchAttempts"* %33, i64 %39) #10
  %41 = bitcast %"class.WTF::HashSet"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #10
  call fastcc void @_ZN12_GLOBAL__N_115SetIntersectionIN3WTF12AtomicStringEEENS1_7HashSetIT_NS1_11DefaultHashIS4_E4HashENS1_10HashTraitsIS4_EENS1_18PartitionAllocatorEEERKSB_SD_(%"class.WTF::HashSet"* nonnull sret %6, %"class.WTF::HashSet"* dereferenceable(24) %23, %"class.WTF::HashSet"* dereferenceable(24) %35)
  %42 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %6, i64 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i64
  %45 = call i64 @_ZN3ukm23GetExponentialBucketMinEld(i64 %44, double 1.300000e+00) #10
  %46 = call dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts24SetWebFontFamilyFailuresEl(%"class.ukm::builders::FontMatchAttempts"* %40, i64 %45) #10
  %47 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 3, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i64
  %50 = call i64 @_ZN3ukm23GetExponentialBucketMinEld(i64 %49, double 1.300000e+00) #10
  %51 = call dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts21SetWebFontFamilyTotalEl(%"class.ukm::builders::FontMatchAttempts"* %46, i64 %50) #10
  %52 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 5, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = call i64 @_ZN3ukm23GetExponentialBucketMinEld(i64 %54, double 1.300000e+00) #10
  %56 = call dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts20SetLocalFontFailuresEl(%"class.ukm::builders::FontMatchAttempts"* %51, i64 %55) #10
  %57 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 4, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i64
  %60 = call i64 @_ZN3ukm23GetExponentialBucketMinEld(i64 %59, double 1.300000e+00) #10
  %61 = call dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts21SetLocalFontSuccessesEl(%"class.ukm::builders::FontMatchAttempts"* %56, i64 %60) #10
  %62 = load i32, i32* %57, align 4
  %63 = load i32, i32* %52, align 4
  %64 = add i32 %63, %62
  %65 = zext i32 %64 to i64
  %66 = call i64 @_ZN3ukm23GetExponentialBucketMinEld(i64 %65, double 1.300000e+00) #10
  %67 = call dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts17SetLocalFontTotalEl(%"class.ukm::builders::FontMatchAttempts"* %61, i64 %66) #10
  %68 = getelementptr inbounds %"class.ukm::builders::FontMatchAttempts", %"class.ukm::builders::FontMatchAttempts"* %67, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 17
  %70 = load %"class.ukm::UkmRecorder"*, %"class.ukm::UkmRecorder"** %69, align 8
  call void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"* %68, %"class.ukm::UkmRecorder"* %70) #10
  %71 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %6, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %71, align 8
  %73 = icmp eq %"class.WTF::AtomicString"* %72, null
  br i1 %73, label %106, label %74, !prof !15

74:                                               ; preds = %1
  %75 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %6, i64 0, i32 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %104, label %78

78:                                               ; preds = %74
  %79 = zext i32 %76 to i64
  br label %80

80:                                               ; preds = %101, %78
  %81 = phi i64 [ 0, %78 ], [ %102, %101 ]
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %72, i64 %81
  %83 = bitcast %"class.WTF::AtomicString"* %82 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast i8* %84 to %"class.WTF::StringImpl"*
  %86 = ptrtoint i8* %84 to i64
  switch i64 %86, label %87 [
    i64 -1, label %101
    i64 0, label %101
  ]

87:                                               ; preds = %80
  %88 = getelementptr inbounds i8, i8* %84, i64 8
  %89 = bitcast i8* %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = bitcast i8* %84 to i32*
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %87
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %87
  %98 = phi i32 [ %96, %95 ], [ %94, %87 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #10
  br label %101

101:                                              ; preds = %100, %97, %80, %80
  %102 = add nuw nsw i64 %81, 1
  %103 = icmp eq i64 %102, %79
  br i1 %103, label %104, label %80

104:                                              ; preds = %101, %74
  %105 = bitcast %"class.WTF::AtomicString"* %72 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %105) #10
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %71, align 8
  br label %106

106:                                              ; preds = %1, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #10
  %107 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %107, align 8
  %109 = icmp eq %"class.WTF::AtomicString"* %108, null
  br i1 %109, label %142, label %110, !prof !15

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %5, i64 0, i32 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %140, label %114

114:                                              ; preds = %110
  %115 = zext i32 %112 to i64
  br label %116

116:                                              ; preds = %137, %114
  %117 = phi i64 [ 0, %114 ], [ %138, %137 ]
  %118 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %108, i64 %117
  %119 = bitcast %"class.WTF::AtomicString"* %118 to i8**
  %120 = load i8*, i8** %119, align 8
  %121 = bitcast i8* %120 to %"class.WTF::StringImpl"*
  %122 = ptrtoint i8* %120 to i64
  switch i64 %122, label %123 [
    i64 -1, label %137
    i64 0, label %137
  ]

123:                                              ; preds = %116
  %124 = getelementptr inbounds i8, i8* %120, i64 8
  %125 = bitcast i8* %124 to i32*
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = bitcast i8* %120 to i32*
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %123
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %123
  %134 = phi i32 [ %132, %131 ], [ %130, %123 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #10
  br label %137

137:                                              ; preds = %136, %133, %116, %116
  %138 = add nuw nsw i64 %117, 1
  %139 = icmp eq i64 %138, %115
  br i1 %139, label %140, label %116

140:                                              ; preds = %137, %110
  %141 = bitcast %"class.WTF::AtomicString"* %108 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %141) #10
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %107, align 8
  br label %142

142:                                              ; preds = %106, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  %143 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 0
  %144 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %143, align 8
  %145 = icmp eq %"class.WTF::AtomicString"* %144, null
  br i1 %145, label %178, label %146, !prof !15

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 1
  %148 = load i32, i32* %147, align 8
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %176, label %150

150:                                              ; preds = %146
  %151 = zext i32 %148 to i64
  br label %152

152:                                              ; preds = %173, %150
  %153 = phi i64 [ 0, %150 ], [ %174, %173 ]
  %154 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %144, i64 %153
  %155 = bitcast %"class.WTF::AtomicString"* %154 to i8**
  %156 = load i8*, i8** %155, align 8
  %157 = bitcast i8* %156 to %"class.WTF::StringImpl"*
  %158 = ptrtoint i8* %156 to i64
  switch i64 %158, label %159 [
    i64 -1, label %173
    i64 0, label %173
  ]

159:                                              ; preds = %152
  %160 = getelementptr inbounds i8, i8* %156, i64 8
  %161 = bitcast i8* %160 to i32*
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = bitcast i8* %156 to i32*
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %159
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %159
  %170 = phi i32 [ %168, %167 ], [ %166, %159 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #10
  br label %173

173:                                              ; preds = %172, %169, %152, %152
  %174 = add nuw nsw i64 %153, 1
  %175 = icmp eq i64 %174, %151
  br i1 %175, label %176, label %152

176:                                              ; preds = %173, %146
  %177 = bitcast %"class.WTF::AtomicString"* %144 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %177) #10
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %143, align 8
  br label %178

178:                                              ; preds = %142, %176
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #10
  %179 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %180 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %179, align 8
  %181 = icmp eq %"class.WTF::AtomicString"* %180, null
  br i1 %181, label %214, label %182, !prof !15

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 1
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %212, label %186

186:                                              ; preds = %182
  %187 = zext i32 %184 to i64
  br label %188

188:                                              ; preds = %209, %186
  %189 = phi i64 [ 0, %186 ], [ %210, %209 ]
  %190 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %180, i64 %189
  %191 = bitcast %"class.WTF::AtomicString"* %190 to i8**
  %192 = load i8*, i8** %191, align 8
  %193 = bitcast i8* %192 to %"class.WTF::StringImpl"*
  %194 = ptrtoint i8* %192 to i64
  switch i64 %194, label %195 [
    i64 -1, label %209
    i64 0, label %209
  ]

195:                                              ; preds = %188
  %196 = getelementptr inbounds i8, i8* %192, i64 8
  %197 = bitcast i8* %196 to i32*
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = bitcast i8* %192 to i32*
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %195
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %195
  %206 = phi i32 [ %204, %203 ], [ %202, %195 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %193) #10
  br label %209

209:                                              ; preds = %208, %205, %188, %188
  %210 = add nuw nsw i64 %189, 1
  %211 = icmp eq i64 %210, %187
  br i1 %211, label %212, label %188

212:                                              ; preds = %209, %182
  %213 = bitcast %"class.WTF::AtomicString"* %180 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %213) #10
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %179, align 8
  br label %214

214:                                              ; preds = %178, %212
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  call void @_ZN3ukm8builders17FontMatchAttemptsD1Ev(%"class.ukm::builders::FontMatchAttempts"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  %215 = load atomic i64, i64* @_ZZN5blink19FontMatchingMetrics17PublishUkmMetricsEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %216 = inttoptr i64 %215 to %"class.base::HistogramBase"*
  %217 = icmp eq i64 %215, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %214
  %219 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #10
  %220 = ptrtoint %"class.base::HistogramBase"* %219 to i64
  store atomic i64 %220, i64* @_ZZN5blink19FontMatchingMetrics17PublishUkmMetricsEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %221

221:                                              ; preds = %214, %218
  %222 = phi %"class.base::HistogramBase"* [ %216, %214 ], [ %219, %218 ]
  %223 = load i32, i32* %29, align 4
  %224 = bitcast %"class.base::HistogramBase"* %222 to void (%"class.base::HistogramBase"*, i32)***
  %225 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %224, align 8
  %226 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %225, i64 6
  %227 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %226, align 8
  call void %227(%"class.base::HistogramBase"* %222, i32 %223) #10
  %228 = load atomic i64, i64* @_ZZN5blink19FontMatchingMetrics17PublishUkmMetricsEvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %229 = inttoptr i64 %228 to %"class.base::HistogramBase"*
  %230 = icmp eq i64 %228, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %221
  %232 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 10000, i32 50, i32 1) #10
  %233 = ptrtoint %"class.base::HistogramBase"* %232 to i64
  store atomic i64 %233, i64* @_ZZN5blink19FontMatchingMetrics17PublishUkmMetricsEvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %234

234:                                              ; preds = %221, %231
  %235 = phi %"class.base::HistogramBase"* [ %229, %221 ], [ %232, %231 ]
  %236 = load i32, i32* %52, align 4
  %237 = load i32, i32* %57, align 4
  %238 = add i32 %237, %236
  %239 = bitcast %"class.base::HistogramBase"* %235 to void (%"class.base::HistogramBase"*, i32)***
  %240 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %240, i64 6
  %242 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %241, align 8
  call void %242(%"class.base::HistogramBase"* %235, i32 %238) #10
  ret void
}

declare void @_ZN3ukm8builders17FontMatchAttemptsC1El(%"class.ukm::builders::FontMatchAttempts"*, i64) unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts14SetLoadContextEl(%"class.ukm::builders::FontMatchAttempts"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts28SetSystemFontFamilySuccessesEl(%"class.ukm::builders::FontMatchAttempts"*, i64) local_unnamed_addr #2

declare i64 @_ZN3ukm23GetExponentialBucketMinEld(i64, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_115SetIntersectionIN3WTF12AtomicStringEEENS1_7HashSetIT_NS1_11DefaultHashIS4_E4HashENS1_10HashTraitsIS4_EENS1_18PartitionAllocatorEEERKSB_SD_(%"class.WTF::HashSet"* noalias sret, %"class.WTF::HashSet"* nocapture readonly dereferenceable(24), %"class.WTF::HashSet"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %4 = bitcast %"class.WTF::HashSet"* %0 to i8*
  %5 = bitcast %"class.WTF::HashSet"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 20, i1 false) #10
  %6 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 %13
  br i1 %8, label %31, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %12, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %15, %21
  %18 = phi %"class.WTF::AtomicString"* [ %22, %21 ], [ %10, %15 ]
  %19 = bitcast %"class.WTF::AtomicString"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  switch i64 %20, label %24 [
    i64 -1, label %21
    i64 0, label %21
  ]

21:                                               ; preds = %17, %17
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 1
  %23 = icmp eq %"class.WTF::AtomicString"* %22, %14
  br i1 %23, label %31, label %17

24:                                               ; preds = %17, %15
  %25 = phi %"class.WTF::AtomicString"* [ %10, %15 ], [ %18, %17 ]
  %26 = icmp eq %"class.WTF::AtomicString"* %25, %14
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %2, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %0, i64 0, i32 0
  br label %32

31:                                               ; preds = %21, %88, %98, %95, %3, %24
  ret void

32:                                               ; preds = %27, %98
  %33 = phi %"class.WTF::AtomicString"* [ %25, %27 ], [ %92, %98 ]
  %34 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %28, align 8
  %35 = icmp eq %"class.WTF::AtomicString"* %34, null
  br i1 %35, label %88, label %36

36:                                               ; preds = %32
  %37 = load i32, i32* %29, align 8
  %38 = add i32 %37, -1
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = lshr i32 %43, 8
  %45 = and i32 %44, %38
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 %46
  %48 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %88, label %51

51:                                               ; preds = %36
  %52 = xor i32 %44, -1
  %53 = lshr i32 %43, 31
  %54 = add nsw i32 %53, %52
  %55 = shl i32 %54, 12
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 7
  %58 = xor i32 %57, %56
  %59 = shl i32 %58, 2
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 20
  %62 = xor i32 %61, %60
  %63 = or i32 %62, 1
  %64 = zext i32 %63 to i64
  br label %65

65:                                               ; preds = %75, %51
  %66 = phi %"class.WTF::StringImpl"* [ %49, %51 ], [ %82, %75 ]
  %67 = phi %"class.WTF::AtomicString"* [ %47, %51 ], [ %80, %75 ]
  %68 = phi i64 [ %46, %51 ], [ %79, %75 ]
  %69 = phi i64 [ 0, %51 ], [ %77, %75 ]
  %70 = bitcast %"class.WTF::AtomicString"* %67 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = icmp ne i8* %71, inttoptr (i64 -1 to i8*)
  %73 = icmp eq %"class.WTF::StringImpl"* %66, %41
  %74 = and i1 %73, %72
  br i1 %74, label %84, label %75

75:                                               ; preds = %65
  %76 = icmp eq i64 %69, 0
  %77 = select i1 %76, i64 %64, i64 %69
  %78 = add i64 %77, %68
  %79 = and i64 %78, %39
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 %79
  %81 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %88, label %65

84:                                               ; preds = %65
  %85 = icmp eq %"class.WTF::AtomicString"* %67, null
  br i1 %85, label %88, label %86

86:                                               ; preds = %84
  %87 = tail call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"* %30, %"class.WTF::AtomicString"* dereferenceable(8) %33, %"class.WTF::AtomicString"* dereferenceable(8) %33) #10
  br label %88

88:                                               ; preds = %75, %84, %36, %32, %86
  %89 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 1
  %90 = icmp eq %"class.WTF::AtomicString"* %89, %14
  br i1 %90, label %31, label %91

91:                                               ; preds = %88, %95
  %92 = phi %"class.WTF::AtomicString"* [ %96, %95 ], [ %89, %88 ]
  %93 = bitcast %"class.WTF::AtomicString"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  switch i64 %94, label %98 [
    i64 -1, label %95
    i64 0, label %95
  ]

95:                                               ; preds = %91, %91
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %92, i64 1
  %97 = icmp eq %"class.WTF::AtomicString"* %96, %14
  br i1 %97, label %31, label %91

98:                                               ; preds = %91
  %99 = icmp eq %"class.WTF::AtomicString"* %92, %14
  br i1 %99, label %31, label %32
}

declare dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts27SetSystemFontFamilyFailuresEl(%"class.ukm::builders::FontMatchAttempts"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts24SetSystemFontFamilyTotalEl(%"class.ukm::builders::FontMatchAttempts"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts25SetWebFontFamilySuccessesEl(%"class.ukm::builders::FontMatchAttempts"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts24SetWebFontFamilyFailuresEl(%"class.ukm::builders::FontMatchAttempts"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts21SetWebFontFamilyTotalEl(%"class.ukm::builders::FontMatchAttempts"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts20SetLocalFontFailuresEl(%"class.ukm::builders::FontMatchAttempts"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts21SetLocalFontSuccessesEl(%"class.ukm::builders::FontMatchAttempts"*, i64) local_unnamed_addr #2

declare dereferenceable(16) %"class.ukm::builders::FontMatchAttempts"* @_ZN3ukm8builders17FontMatchAttempts17SetLocalFontTotalEl(%"class.ukm::builders::FontMatchAttempts"*, i64) local_unnamed_addr #2

declare void @_ZN3ukm8internal19UkmEntryBuilderBase6RecordEPNS_11UkmRecorderE(%"class.ukm::internal::UkmEntryBuilderBase"*, %"class.ukm::UkmRecorder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3ukm8builders17FontMatchAttemptsD1Ev(%"class.ukm::builders::FontMatchAttempts"*) unnamed_addr #4

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics24PublishEmojiGlyphMetricsEv(%"class.blink::FontMatchingMetrics"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 15
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 16
  %7 = load i64, i64* %6, align 8
  %8 = uitofp i64 %7 to double
  %9 = uitofp i64 %3 to double
  %10 = fdiv double %8, %9
  %11 = load atomic i64, i64* @_ZZN5blink19FontMatchingMetrics24PublishEmojiGlyphMetricsEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %12 = inttoptr i64 %11 to %"class.base::HistogramBase"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %5
  %15 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 101, i32 102, i32 1) #10
  %16 = ptrtoint %"class.base::HistogramBase"* %15 to i64
  store atomic i64 %16, i64* @_ZZN5blink19FontMatchingMetrics24PublishEmojiGlyphMetricsEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %17

17:                                               ; preds = %5, %14
  %18 = phi %"class.base::HistogramBase"* [ %12, %5 ], [ %15, %14 ]
  %19 = fmul double %10, 1.000000e+02
  %20 = tail call double @llvm.round.f64(double %19)
  %21 = fptosi double %20 to i32
  %22 = bitcast %"class.base::HistogramBase"* %18 to void (%"class.base::HistogramBase"*, i32)***
  %23 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %23, i64 6
  %25 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %24, align 8
  tail call void %25(%"class.base::HistogramBase"* %18, i32 %21) #10
  br label %26

26:                                               ; preds = %1, %17
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19FontMatchingMetrics17PublishAllMetricsEv(%"class.blink::FontMatchingMetrics"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19FontMatchingMetrics29PublishIdentifiabilityMetricsEv(%"class.blink::FontMatchingMetrics"* %0)
  tail call void @_ZN5blink19FontMatchingMetrics17PublishUkmMetricsEv(%"class.blink::FontMatchingMetrics"* %0)
  %2 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 15
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FontMatchingMetrics", %"class.blink::FontMatchingMetrics"* %0, i64 0, i32 16
  %7 = load i64, i64* %6, align 8
  %8 = uitofp i64 %7 to double
  %9 = uitofp i64 %3 to double
  %10 = fdiv double %8, %9
  %11 = load atomic i64, i64* @_ZZN5blink19FontMatchingMetrics24PublishEmojiGlyphMetricsEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %12 = inttoptr i64 %11 to %"class.base::HistogramBase"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %5
  %15 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 101, i32 102, i32 1) #10
  %16 = ptrtoint %"class.base::HistogramBase"* %15 to i64
  store atomic i64 %16, i64* @_ZZN5blink19FontMatchingMetrics24PublishEmojiGlyphMetricsEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %17

17:                                               ; preds = %14, %5
  %18 = phi %"class.base::HistogramBase"* [ %12, %5 ], [ %15, %14 ]
  %19 = fmul double %10, 1.000000e+02
  %20 = tail call double @llvm.round.f64(double %19) #10
  %21 = fptosi double %20 to i32
  %22 = bitcast %"class.base::HistogramBase"* %18 to void (%"class.base::HistogramBase"*, i32)***
  %23 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %23, i64 6
  %25 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %24, align 8
  tail call void %25(%"class.base::HistogramBase"* %18, i32 %21) #10
  br label %26

26:                                               ; preds = %1, %17
  ret void
}

declare %"class.blink::FontGlobalContext"* @_ZN5blink17FontGlobalContext3GetENS_14CreateIfNeededE(i32) local_unnamed_addr #2

declare i64 @_ZN5blink17FontGlobalContext26GetOrComputeTypefaceDigestERKNS_16FontPlatformDataE(%"class.blink::FontGlobalContext"*, %"class.blink::FontPlatformData"* dereferenceable(72)) local_unnamed_addr #2

declare i64 @_ZN5blink17FontGlobalContext32GetOrComputePostScriptNameDigestERKNS_16FontPlatformDataE(%"class.blink::FontGlobalContext"*, %"class.blink::FontPlatformData"* dereferenceable(72)) local_unnamed_addr #2

declare void @_ZN5blink28IdentifiabilityMetricBuilderC2EN3ukm11SourceIdObjE(%"class.blink::IdentifiabilityMetricBuilder"*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base6subtle24RefCountedThreadSafeBase9HasOneRefEv(%"class.base::subtle::RefCountedThreadSafeBase"*) local_unnamed_addr #2

declare void @_ZN5blink9TimerBase5StartEN4base9TimeDeltaES2_RKNS1_8LocationE(%"class.blink::TimerBase"*, i64, i64, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZN5blink9TimerBaseC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::TimerBase"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15TaskRunnerTimerINS_19FontMatchingMetricsEED0Ev(%"class.blink::TaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 0
  tail call void @_ZN5blink9TimerBaseD2Ev(%"class.blink::TimerBase"* %2) #10
  %3 = bitcast %"class.blink::TaskRunnerTimer"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

declare void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15TaskRunnerTimerINS_19FontMatchingMetricsEE5FiredEv(%"class.blink::TaskRunnerTimer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::FontMatchingMetrics"** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 2, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 %8
  %10 = bitcast i8* %9 to %"class.blink::FontMatchingMetrics"*
  %11 = and i64 %6, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %1
  %14 = bitcast i8* %9 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = add i64 %6, -1
  %17 = getelementptr i8, i8* %15, i64 %16
  %18 = bitcast i8* %17 to void (%"class.blink::FontMatchingMetrics"*, %"class.blink::TimerBase"*)**
  %19 = load void (%"class.blink::FontMatchingMetrics"*, %"class.blink::TimerBase"*)*, void (%"class.blink::FontMatchingMetrics"*, %"class.blink::TimerBase"*)** %18, align 8
  br label %22

20:                                               ; preds = %1
  %21 = inttoptr i64 %6 to void (%"class.blink::FontMatchingMetrics"*, %"class.blink::TimerBase"*)*
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi void (%"class.blink::FontMatchingMetrics"*, %"class.blink::TimerBase"*)* [ %19, %13 ], [ %21, %20 ]
  %24 = getelementptr inbounds %"class.blink::TaskRunnerTimer", %"class.blink::TaskRunnerTimer"* %0, i64 0, i32 0
  tail call void %23(%"class.blink::FontMatchingMetrics"* %10, %"class.blink::TimerBase"* %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9TimerBase16BindTimerClosureEN4base7WeakPtrIS0_EE(%"class.base::OnceCallback"* noalias sret, %"class.blink::TimerBase"*, %"class.base::WeakPtr"*) unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_Znwm(i64 64) #11, !noalias !16
  %5 = bitcast i8* %4 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %5, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #10, !noalias !16
  %6 = getelementptr inbounds i8, i8* %4, i64 32
  %7 = bitcast i8* %6 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::TimerBase"*)* @_ZN5blink9TimerBase11RunInternalEv to i64), i64 0>, <2 x i64>* %7, align 8, !noalias !16
  %8 = getelementptr inbounds i8, i8* %4, i64 48
  %9 = bitcast i8* %8 to %"class.base::internal::WeakReference"*
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %9, %"class.base::internal::WeakReference"* dereferenceable(8) %10) #10, !noalias !16
  %11 = getelementptr inbounds i8, i8* %4, i64 56
  %12 = bitcast i8* %11 to i64*
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8, !noalias !16
  store i64 %14, i64* %12, align 8, !noalias !16
  %15 = bitcast %"class.base::OnceCallback"* %0 to i8**
  store i8* %4, i8** %15, align 8, !alias.scope !16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN5blink9TimerBase11RunInternalEv(%"class.blink::TimerBase"*) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::TimerBase"**
  %10 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %9, align 8
  %11 = icmp eq %"class.blink::TimerBase"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0)) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.blink::TimerBase"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.blink::TimerBase"*)**
  %37 = load void (%"class.blink::TimerBase"*)*, void (%"class.blink::TimerBase"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.blink::TimerBase"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.blink::TimerBase"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.blink::TimerBase"* %28) #10
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.blink::TimerBase"**
  %9 = load %"class.blink::TimerBase"*, %"class.blink::TimerBase"** %8, align 8
  %10 = icmp ne %"class.blink::TimerBase"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #10
  %30 = bitcast i8* %29 to %"class.WTF::AtomicString"*
  %31 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"* %0, %"class.WTF::AtomicString"* %30, i32 %17, %"class.WTF::AtomicString"* null) #10
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #10
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #10
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #10
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %125, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"class.WTF::AtomicString"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #10
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !23

91:                                               ; preds = %82
  tail call void @llvm.trap() #10
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #10
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"* %0, %"class.WTF::AtomicString"* %73)
  br label %125

125:                                              ; preds = %50, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %50 ]
  %127 = phi %"class.WTF::AtomicString"* [ %73, %113 ], [ %124, %123 ], [ %43, %50 ]
  %128 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %127, 0
  %129 = insertvalue { %"class.WTF::AtomicString"*, i8 } %128, i8 %126, 1
  ret { %"class.WTF::AtomicString"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable"*, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #10
  ret %"class.WTF::AtomicString"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RbEENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"*, %"struct.blink::IdentifiableTokenKey"* dereferenceable(16), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 1
  %36 = load i8, i8* %35, align 8, !range !14
  %37 = shl nuw nsw i8 %36, 1
  %38 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 2
  %39 = load i8, i8* %38, align 1, !range !14
  %40 = or i8 %37, %39
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 32
  %43 = xor i64 %42, -1
  %44 = add nsw i64 %43, %41
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl nsw i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %34, %33
  %60 = xor i64 %59, %57
  %61 = xor i64 %60, %58
  %62 = trunc i64 %61 to i32
  %63 = and i32 %14, %62
  %64 = zext i32 %63 to i64
  %65 = xor i32 %62, -1
  %66 = lshr i32 %62, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %78

78:                                               ; preds = %104, %10
  %79 = phi i64 [ 0, %10 ], [ %109, %104 ]
  %80 = phi i64 [ %64, %10 ], [ %111, %104 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %107, %104 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, -7286425919675154353
  br i1 %85, label %86, label %94

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 1
  %88 = load i8, i8* %87, align 8, !range !14
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 2
  %92 = load i8, i8* %91, align 1, !range !14
  %93 = icmp eq i8 %92, 1
  br i1 %93, label %112, label %94

94:                                               ; preds = %78, %86, %90
  %95 = icmp eq i64 %84, %17
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 1
  %97 = load i8, i8* %96, align 8, !range !14
  %98 = icmp eq i8 %97, %36
  %99 = and i1 %95, %98
  br i1 %99, label %100, label %104

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 2
  %102 = load i8, i8* %101, align 1, !range !14
  %103 = icmp eq i8 %102, %39
  br i1 %103, label %141, label %104

104:                                              ; preds = %94, %100
  %105 = phi i8 [ %36, %100 ], [ %97, %94 ]
  %106 = icmp eq i8 %105, 0
  %107 = select i1 %106, %"struct.WTF::KeyValuePair"* %81, %"struct.WTF::KeyValuePair"* %82
  %108 = icmp eq i64 %79, 0
  %109 = select i1 %108, i64 %77, i64 %79
  %110 = add i64 %109, %80
  %111 = and i64 %110, %15
  br label %78

112:                                              ; preds = %90
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %81, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %112
  %115 = bitcast %"struct.WTF::KeyValuePair"* %81 to <2 x i64>*
  store <2 x i64> <i64 -7286425919675154353, i64 256>, <2 x i64>* %115, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1, i32 0
  store i64 -7286425919675154353, i64* %116, align 8
  %117 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, 2147483647
  %120 = and i32 %119, 2147483647
  %121 = and i32 %118, -2147483648
  %122 = or i32 %120, %121
  store i32 %122, i32* %117, align 8
  br label %123

123:                                              ; preds = %112, %114
  %124 = phi %"struct.WTF::KeyValuePair"* [ %81, %114 ], [ %82, %112 ]
  %125 = bitcast %"struct.WTF::KeyValuePair"* %124 to i8*
  %126 = bitcast %"struct.blink::IdentifiableTokenKey"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 10, i1 false) #10
  %127 = load i8, i8* %2, align 1, !range !14
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %124, i64 0, i32 1, i32 0
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %130, align 4
  %133 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = add i32 %134, %132
  %136 = shl i32 %135, 1
  %137 = load i32, i32* %12, align 8
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %141, label %139

139:                                              ; preds = %123
  %140 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair"* %124)
  br label %141

141:                                              ; preds = %100, %123, %139
  %142 = phi i8 [ 1, %123 ], [ 1, %139 ], [ 0, %100 ]
  %143 = phi %"struct.WTF::KeyValuePair"* [ %124, %123 ], [ %140, %139 ], [ %82, %100 ]
  %144 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %143, 0
  %145 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %144, i8 %142, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %145
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([120 x i8], [120 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink20IdentifiableTokenKeyENS2_17IdentifiableTokenEEEEEPKcv, i64 0, i64 0)) #10
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0, i32 0, i32 0
  %48 = bitcast i64* %47 to <2 x i64>*
  store <2 x i64> <i64 -7286425919675154353, i64 256>, <2 x i64>* %48, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 1, i32 0
  store i64 -7286425919675154353, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 0, i32 0, i32 0
  %52 = bitcast i64* %51 to <2 x i64>*
  store <2 x i64> <i64 -7286425919675154353, i64 256>, <2 x i64>* %52, align 8
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 1, i32 0
  store i64 -7286425919675154353, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0, i32 0, i32 0
  %56 = bitcast i64* %55 to <2 x i64>*
  store <2 x i64> <i64 -7286425919675154353, i64 256>, <2 x i64>* %56, align 8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 1, i32 0
  store i64 -7286425919675154353, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 0, i32 0, i32 0
  %60 = bitcast i64* %59 to <2 x i64>*
  store <2 x i64> <i64 -7286425919675154353, i64 256>, <2 x i64>* %60, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 1, i32 0
  store i64 -7286425919675154353, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 0, i32 0, i32 0
  %72 = bitcast i64* %71 to <2 x i64>*
  store <2 x i64> <i64 -7286425919675154353, i64 256>, <2 x i64>* %72, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 1, i32 0
  store i64 -7286425919675154353, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !24

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #10
  ret %"struct.WTF::KeyValuePair"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE8RehashToEPS5_jSF_(%"class.WTF::HashTable.1"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.1", align 8
  %6 = bitcast %"class.WTF::HashTable.1"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.1"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.1"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.1"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %74
  %25 = bitcast %"class.WTF::HashTable.1"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.1"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %75, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %78, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %76, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #10
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %74
  %43 = phi i64 [ %75, %74 ], [ %23, %21 ]
  %44 = phi i32 [ %76, %74 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %77, %74 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %78, %74 ], [ null, %21 ]
  %47 = phi i32 [ %79, %74 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, -7286425919675154353
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48, i32 0, i32 1
  %54 = load i8, i8* %53, align 8, !range !14
  %55 = icmp eq i8 %54, 0
  %56 = and i1 %52, %55
  br i1 %56, label %57, label %61

57:                                               ; preds = %42
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48, i32 0, i32 2
  %59 = load i8, i8* %58, align 1, !range !14
  %60 = icmp eq i8 %59, 1
  br i1 %60, label %74, label %62

61:                                               ; preds = %42
  br i1 %55, label %62, label %74

62:                                               ; preds = %61, %57
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 0
  %64 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EENSt3__14pairIPS5_bEERKT0_(%"class.WTF::HashTable.1"* nonnull %5, %"struct.blink::IdentifiableTokenKey"* dereferenceable(16) %63) #10
  %65 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %64, 0
  %66 = bitcast %"struct.WTF::KeyValuePair"* %65 to i8*
  %67 = bitcast %"struct.WTF::KeyValuePair"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #10
  %68 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 %48
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %69, %3
  %71 = select i1 %70, %"struct.WTF::KeyValuePair"* %65, %"struct.WTF::KeyValuePair"* %46
  %72 = load i32, i32* %12, align 8
  %73 = ptrtoint %"struct.WTF::KeyValuePair"* %68 to i64
  br label %74

74:                                               ; preds = %61, %57, %62
  %75 = phi i64 [ %43, %61 ], [ %73, %62 ], [ %43, %57 ]
  %76 = phi i32 [ %44, %61 ], [ %72, %62 ], [ %44, %57 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %45, %61 ], [ %68, %62 ], [ %45, %57 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %46, %61 ], [ %71, %62 ], [ %46, %57 ]
  %79 = add i32 %47, 1
  %80 = icmp eq i32 %79, %76
  br i1 %80, label %24, label %42
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EENSt3__14pairIPS5_bEERKT0_(%"class.WTF::HashTable.1"*, %"struct.blink::IdentifiableTokenKey"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 1
  %29 = load i8, i8* %28, align 8, !range !14
  %30 = shl nuw nsw i8 %29, 1
  %31 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 2
  %32 = load i8, i8* %31, align 1, !range !14
  %33 = or i8 %30, %32
  %34 = zext i8 %33 to i64
  %35 = shl nuw nsw i64 %34, 32
  %36 = xor i64 %35, -1
  %37 = add nsw i64 %36, %34
  %38 = lshr i64 %37, 22
  %39 = xor i64 %38, %37
  %40 = shl nsw i64 %39, 13
  %41 = xor i64 %40, -1
  %42 = add i64 %39, %41
  %43 = lshr i64 %42, 8
  %44 = xor i64 %43, %42
  %45 = mul i64 %44, 9
  %46 = lshr i64 %45, 15
  %47 = xor i64 %46, %45
  %48 = shl i64 %47, 27
  %49 = xor i64 %48, -1
  %50 = add i64 %47, %49
  %51 = lshr i64 %50, 31
  %52 = xor i64 %27, %26
  %53 = xor i64 %52, %50
  %54 = xor i64 %53, %51
  %55 = trunc i64 %54 to i32
  %56 = and i32 %7, %55
  %57 = zext i32 %56 to i64
  %58 = xor i32 %55, -1
  %59 = lshr i32 %55, 23
  %60 = add i32 %59, %58
  %61 = shl i32 %60, 12
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 7
  %64 = xor i32 %63, %62
  %65 = shl i32 %64, 2
  %66 = xor i32 %65, %64
  %67 = lshr i32 %66, 20
  %68 = xor i32 %67, %66
  %69 = or i32 %68, 1
  %70 = zext i32 %69 to i64
  br label %71

71:                                               ; preds = %102, %2
  %72 = phi i64 [ 0, %2 ], [ %105, %102 ]
  %73 = phi i64 [ 0, %2 ], [ %107, %102 ]
  %74 = phi i64 [ %57, %2 ], [ %109, %102 ]
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, -7286425919675154353
  br i1 %79, label %80, label %92

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74, i32 0, i32 1
  %82 = load i8, i8* %81, align 8, !range !14
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %92

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74, i32 0, i32 2
  %86 = load i8, i8* %85, align 1, !range !14
  %87 = icmp eq i8 %86, 1
  br i1 %87, label %88, label %92

88:                                               ; preds = %84
  %89 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  %90 = icmp eq i64 %72, 0
  %91 = select i1 %90, i64 %89, i64 %72
  br label %112

92:                                               ; preds = %71, %80, %84
  %93 = icmp eq i64 %78, %10
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74, i32 0, i32 1
  %95 = load i8, i8* %94, align 8, !range !14
  %96 = icmp eq i8 %95, %29
  %97 = and i1 %93, %96
  br i1 %97, label %98, label %102

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %74, i32 0, i32 2
  %100 = load i8, i8* %99, align 1, !range !14
  %101 = icmp eq i8 %100, %32
  br i1 %101, label %110, label %102

102:                                              ; preds = %92, %98
  %103 = phi i8 [ %29, %98 ], [ %95, %92 ]
  %104 = icmp eq i8 %103, 0
  %105 = select i1 %104, i64 %72, i64 %76
  %106 = icmp eq i64 %73, 0
  %107 = select i1 %106, i64 %70, i64 %73
  %108 = add i64 %107, %74
  %109 = and i64 %108, %8
  br label %71

110:                                              ; preds = %98
  %111 = ptrtoint %"struct.WTF::KeyValuePair"* %75 to i64
  br label %112

112:                                              ; preds = %110, %88
  %113 = phi i64 [ %91, %88 ], [ %111, %110 ]
  %114 = phi i8 [ 0, %88 ], [ 1, %110 ]
  %115 = inttoptr i64 %113 to %"struct.WTF::KeyValuePair"*
  %116 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %115, 0
  %117 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %116, i8 %114, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %117
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6LookupINS_22IdentityHashTranslatorIS7_SC_SD_EES2_EEPKS5_RKT0_(%"class.WTF::HashTable.1"*, %"struct.blink::IdentifiableTokenKey"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %103, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 1
  %31 = load i8, i8* %30, align 8, !range !14
  %32 = shl nuw nsw i8 %31, 1
  %33 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 2
  %34 = load i8, i8* %33, align 1, !range !14
  %35 = or i8 %32, %34
  %36 = zext i8 %35 to i64
  %37 = shl nuw nsw i64 %36, 32
  %38 = xor i64 %37, -1
  %39 = add nsw i64 %38, %36
  %40 = lshr i64 %39, 22
  %41 = xor i64 %40, %39
  %42 = shl nsw i64 %41, 13
  %43 = xor i64 %42, -1
  %44 = add i64 %41, %43
  %45 = lshr i64 %44, 8
  %46 = xor i64 %45, %44
  %47 = mul i64 %46, 9
  %48 = lshr i64 %47, 15
  %49 = xor i64 %48, %47
  %50 = shl i64 %49, 27
  %51 = xor i64 %50, -1
  %52 = add i64 %49, %51
  %53 = lshr i64 %52, 31
  %54 = xor i64 %29, %28
  %55 = xor i64 %54, %52
  %56 = xor i64 %55, %53
  %57 = trunc i64 %56 to i32
  %58 = and i32 %9, %57
  %59 = zext i32 %58 to i64
  %60 = xor i32 %57, -1
  %61 = lshr i32 %57, 23
  %62 = add i32 %61, %60
  %63 = shl i32 %62, 12
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 7
  %66 = xor i32 %65, %64
  %67 = shl i32 %66, 2
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 20
  %70 = xor i32 %69, %68
  %71 = or i32 %70, 1
  %72 = zext i32 %71 to i64
  br label %73

73:                                               ; preds = %98, %6
  %74 = phi i64 [ 0, %6 ], [ %100, %98 ]
  %75 = phi i64 [ %59, %6 ], [ %102, %98 ]
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %75
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, %12
  br i1 %79, label %80, label %88

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %75, i32 0, i32 1
  %82 = load i8, i8* %81, align 8, !range !14
  %83 = icmp eq i8 %82, %31
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %75, i32 0, i32 2
  %86 = load i8, i8* %85, align 1, !range !14
  %87 = icmp eq i8 %86, %34
  br i1 %87, label %103, label %88

88:                                               ; preds = %73, %80, %84
  %89 = icmp eq i64 %78, -7286425919675154353
  br i1 %89, label %90, label %98

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %75, i32 0, i32 1
  %92 = load i8, i8* %91, align 8, !range !14
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %75, i32 0, i32 2
  %96 = load i8, i8* %95, align 1, !range !14
  %97 = icmp eq i8 %96, 1
  br i1 %97, label %103, label %98

98:                                               ; preds = %88, %90, %94
  %99 = icmp eq i64 %74, 0
  %100 = select i1 %99, i64 %72, i64 %74
  %101 = add i64 %100, %75
  %102 = and i64 %101, %10
  br label %73

103:                                              ; preds = %94, %84, %2
  %104 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %76, %84 ], [ null, %94 ]
  ret %"struct.WTF::KeyValuePair"* %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_RS4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"*, %"struct.blink::IdentifiableTokenKey"* dereferenceable(16), %"class.blink::IdentifiableToken"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 1
  %36 = load i8, i8* %35, align 8, !range !14
  %37 = shl nuw nsw i8 %36, 1
  %38 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 2
  %39 = load i8, i8* %38, align 1, !range !14
  %40 = or i8 %37, %39
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 32
  %43 = xor i64 %42, -1
  %44 = add nsw i64 %43, %41
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl nsw i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %34, %33
  %60 = xor i64 %59, %57
  %61 = xor i64 %60, %58
  %62 = trunc i64 %61 to i32
  %63 = and i32 %14, %62
  %64 = zext i32 %63 to i64
  %65 = xor i32 %62, -1
  %66 = lshr i32 %62, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %78

78:                                               ; preds = %104, %10
  %79 = phi i64 [ 0, %10 ], [ %109, %104 ]
  %80 = phi i64 [ %64, %10 ], [ %111, %104 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %107, %104 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, -7286425919675154353
  br i1 %85, label %86, label %94

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 1
  %88 = load i8, i8* %87, align 8, !range !14
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 2
  %92 = load i8, i8* %91, align 1, !range !14
  %93 = icmp eq i8 %92, 1
  br i1 %93, label %112, label %94

94:                                               ; preds = %78, %86, %90
  %95 = icmp eq i64 %84, %17
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 1
  %97 = load i8, i8* %96, align 8, !range !14
  %98 = icmp eq i8 %97, %36
  %99 = and i1 %95, %98
  br i1 %99, label %100, label %104

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 2
  %102 = load i8, i8* %101, align 1, !range !14
  %103 = icmp eq i8 %102, %39
  br i1 %103, label %141, label %104

104:                                              ; preds = %94, %100
  %105 = phi i8 [ %36, %100 ], [ %97, %94 ]
  %106 = icmp eq i8 %105, 0
  %107 = select i1 %106, %"struct.WTF::KeyValuePair"* %81, %"struct.WTF::KeyValuePair"* %82
  %108 = icmp eq i64 %79, 0
  %109 = select i1 %108, i64 %77, i64 %79
  %110 = add i64 %109, %80
  %111 = and i64 %110, %15
  br label %78

112:                                              ; preds = %90
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %81, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %112
  %115 = bitcast %"struct.WTF::KeyValuePair"* %81 to <2 x i64>*
  store <2 x i64> <i64 -7286425919675154353, i64 256>, <2 x i64>* %115, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1, i32 0
  store i64 -7286425919675154353, i64* %116, align 8
  %117 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, 2147483647
  %120 = and i32 %119, 2147483647
  %121 = and i32 %118, -2147483648
  %122 = or i32 %120, %121
  store i32 %122, i32* %117, align 8
  br label %123

123:                                              ; preds = %112, %114
  %124 = phi %"struct.WTF::KeyValuePair"* [ %81, %114 ], [ %82, %112 ]
  %125 = bitcast %"struct.WTF::KeyValuePair"* %124 to i8*
  %126 = bitcast %"struct.blink::IdentifiableTokenKey"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 10, i1 false) #10
  %127 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %2, i64 0, i32 0
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %124, i64 0, i32 1, i32 0
  %129 = load i64, i64* %127, align 8
  store i64 %129, i64* %128, align 8
  %130 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %130, align 4
  %133 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = add i32 %134, %132
  %136 = shl i32 %135, 1
  %137 = load i32, i32* %12, align 8
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %141, label %139

139:                                              ; preds = %123
  %140 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair"* %124)
  br label %141

141:                                              ; preds = %100, %123, %139
  %142 = phi i8 [ 1, %123 ], [ 1, %139 ], [ 0, %100 ]
  %143 = phi %"struct.WTF::KeyValuePair"* [ %124, %123 ], [ %140, %139 ], [ %82, %100 ]
  %144 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %143, 0
  %145 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %144, i8 %142, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %145
}

declare void @_ZN5blink24IdentifiableTokenBuilder18AlignPartialBufferEv(%"class.blink::IdentifiableTokenBuilder"*) local_unnamed_addr #2

declare dereferenceable(80) %"class.blink::IdentifiableTokenBuilder"* @_ZN5blink24IdentifiableTokenBuilder8AddBytesEN4base4spanIKhLm18446744073709551615EEE(%"class.blink::IdentifiableTokenBuilder"*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISC_S7_SD_EERS2_S4_EENS_18HashTableAddResultISE_S5_EEOT0_OT1_(%"class.WTF::HashTable.1"*, %"struct.blink::IdentifiableTokenKey"* dereferenceable(16), %"class.blink::IdentifiableToken"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 1
  %36 = load i8, i8* %35, align 8, !range !14
  %37 = shl nuw nsw i8 %36, 1
  %38 = getelementptr inbounds %"struct.blink::IdentifiableTokenKey", %"struct.blink::IdentifiableTokenKey"* %1, i64 0, i32 2
  %39 = load i8, i8* %38, align 1, !range !14
  %40 = or i8 %37, %39
  %41 = zext i8 %40 to i64
  %42 = shl nuw nsw i64 %41, 32
  %43 = xor i64 %42, -1
  %44 = add nsw i64 %43, %41
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl nsw i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %34, %33
  %60 = xor i64 %59, %57
  %61 = xor i64 %60, %58
  %62 = trunc i64 %61 to i32
  %63 = and i32 %14, %62
  %64 = zext i32 %63 to i64
  %65 = xor i32 %62, -1
  %66 = lshr i32 %62, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %78

78:                                               ; preds = %104, %10
  %79 = phi i64 [ 0, %10 ], [ %109, %104 ]
  %80 = phi i64 [ %64, %10 ], [ %111, %104 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %107, %104 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, -7286425919675154353
  br i1 %85, label %86, label %94

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 1
  %88 = load i8, i8* %87, align 8, !range !14
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 2
  %92 = load i8, i8* %91, align 1, !range !14
  %93 = icmp eq i8 %92, 1
  br i1 %93, label %112, label %94

94:                                               ; preds = %78, %86, %90
  %95 = icmp eq i64 %84, %17
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 1
  %97 = load i8, i8* %96, align 8, !range !14
  %98 = icmp eq i8 %97, %36
  %99 = and i1 %95, %98
  br i1 %99, label %100, label %104

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %80, i32 0, i32 2
  %102 = load i8, i8* %101, align 1, !range !14
  %103 = icmp eq i8 %102, %39
  br i1 %103, label %141, label %104

104:                                              ; preds = %94, %100
  %105 = phi i8 [ %36, %100 ], [ %97, %94 ]
  %106 = icmp eq i8 %105, 0
  %107 = select i1 %106, %"struct.WTF::KeyValuePair"* %81, %"struct.WTF::KeyValuePair"* %82
  %108 = icmp eq i64 %79, 0
  %109 = select i1 %108, i64 %77, i64 %79
  %110 = add i64 %109, %80
  %111 = and i64 %110, %15
  br label %78

112:                                              ; preds = %90
  %113 = icmp eq %"struct.WTF::KeyValuePair"* %81, null
  br i1 %113, label %123, label %114

114:                                              ; preds = %112
  %115 = bitcast %"struct.WTF::KeyValuePair"* %81 to <2 x i64>*
  store <2 x i64> <i64 -7286425919675154353, i64 256>, <2 x i64>* %115, align 8
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1, i32 0
  store i64 -7286425919675154353, i64* %116, align 8
  %117 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, 2147483647
  %120 = and i32 %119, 2147483647
  %121 = and i32 %118, -2147483648
  %122 = or i32 %120, %121
  store i32 %122, i32* %117, align 8
  br label %123

123:                                              ; preds = %112, %114
  %124 = phi %"struct.WTF::KeyValuePair"* [ %81, %114 ], [ %82, %112 ]
  %125 = bitcast %"struct.WTF::KeyValuePair"* %124 to i8*
  %126 = bitcast %"struct.blink::IdentifiableTokenKey"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 10, i1 false) #10
  %127 = getelementptr inbounds %"class.blink::IdentifiableToken", %"class.blink::IdentifiableToken"* %2, i64 0, i32 0
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %124, i64 0, i32 1, i32 0
  %129 = load i64, i64* %127, align 8
  store i64 %129, i64* %128, align 8
  %130 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 2
  %131 = load i32, i32* %130, align 4
  %132 = add i32 %131, 1
  store i32 %132, i32* %130, align 4
  %133 = getelementptr inbounds %"class.WTF::HashTable.1", %"class.WTF::HashTable.1"* %0, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = add i32 %134, %132
  %136 = shl i32 %135, 1
  %137 = load i32, i32* %12, align 8
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %141, label %139

139:                                              ; preds = %123
  %140 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink20IdentifiableTokenKeyENS_12KeyValuePairIS2_NS1_17IdentifiableTokenEEENS_24KeyValuePairKeyExtractorENS1_24IdentifiableTokenKeyHashENS_18HashMapValueTraitsINS1_30IdentifiableTokenKeyHashTraitsENS_10HashTraitsIS4_EEEES9_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable.1"* %0, %"struct.WTF::KeyValuePair"* %124)
  br label %141

141:                                              ; preds = %100, %123, %139
  %142 = phi i8 [ 1, %123 ], [ 1, %139 ], [ 0, %100 ]
  %143 = phi %"struct.WTF::KeyValuePair"* [ %124, %123 ], [ %140, %139 ], [ %82, %100 ]
  %144 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %143, 0
  %145 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %144, i8 %142, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %145
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink19FontMatchingMetrics39GetTokenBuilderWithFontSelectionRequestERKNS_15FontDescriptionE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink19FontMatchingMetrics39GetTokenBuilderWithFontSelectionRequestERKNS_15FontDescriptionE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink19FontMatchingMetrics39GetTokenBuilderWithFontSelectionRequestERKNS_15FontDescriptionE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink19FontMatchingMetrics39GetTokenBuilderWithFontSelectionRequestERKNS_15FontDescriptionE"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink19FontMatchingMetrics39GetTokenBuilderWithFontSelectionRequestERKNS_15FontDescriptionE: argument 0"}
!10 = distinct !{!10, !"_ZN5blink19FontMatchingMetrics39GetTokenBuilderWithFontSelectionRequestERKNS_15FontDescriptionE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink19FontMatchingMetrics39GetTokenBuilderWithFontSelectionRequestERKNS_15FontDescriptionE: argument 0"}
!13 = distinct !{!13, !"_ZN5blink19FontMatchingMetrics39GetTokenBuilderWithFontSelectionRequestERKNS_15FontDescriptionE"}
!14 = !{i8 0, i8 2}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{!17, !19, !21}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIMN5blink9TimerBaseEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!21 = distinct !{!21, !22, !"_ZN3WTF4BindIMN5blink9TimerBaseEFvvEJN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!22 = distinct !{!22, !"_ZN3WTF4BindIMN5blink9TimerBaseEFvvEJN4base7WeakPtrIS2_EEEFvvEEENS5_12OnceCallbackIT1_EEOT_DpOT0_"}
!23 = !{!"branch_weights", i32 1, i32 2000}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.unroll.disable"}
