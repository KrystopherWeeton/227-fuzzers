; ModuleID = 'gen/third_party/blink/public/mojom/font_access/font_access.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/font_access/font_access.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::FontAccessManagerAsyncWaiter" = type { %"class.blink::mojom::blink::FontAccessManager"* }
%"class.blink::mojom::blink::FontAccessManager" = type { i32 (...)** }
%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting" = type { %"class.blink::mojom::blink::FontAccessManager" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.base::OnceCallback.7" = type { %"class.base::internal::CallbackBase" }
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.16, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.9", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.11" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.16 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.17" }>
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.19", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.WTF::Vector.25" = type { %"class.WTF::VectorBuffer.26" }
%"class.WTF::VectorBuffer.26" = type { %"class.WTF::VectorBufferBase.27" }
%"class.WTF::VectorBufferBase.27" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::mojom::blink::FontMetadata"* }
%"class.blink::mojom::blink::FontMetadata" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, [3 x i8], float, float, [4 x i8] }>

$_ZN5blink5mojom5blink17FontAccessManagerD2Ev = comdat any

$_ZN5blink5mojom5blink38FontAccessManagerInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [20 x i8] c"EnumerateLocalFonts\00", align 1
@.str.1 = private unnamed_addr constant [85 x i8] c"gen/third_party/blink/public/mojom/font_access/font_access.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"ChooseLocalFonts\00", align 1
@_ZTVN5blink5mojom5blink38FontAccessManagerInterceptorForTestingE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::FontAccessManager"*)* @_ZN5blink5mojom5blink17FontAccessManagerD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)* @_ZN5blink5mojom5blink38FontAccessManagerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink38FontAccessManagerInterceptorForTesting19EnumerateLocalFontsEN4base12OnceCallbackIFvNS0_21FontEnumerationStatusENS3_26ReadOnlySharedMemoryRegionEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)* @_ZN5blink5mojom5blink38FontAccessManagerInterceptorForTesting16ChooseLocalFontsERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS0_21FontEnumerationStatusENS4_IN4mojo9StructPtrINS1_12FontMetadataEEELj0ES6_EEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink28FontAccessManagerAsyncWaiterC1EPNS1_17FontAccessManagerE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"*, %"class.blink::mojom::blink::FontAccessManager"*), void (%"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"*, %"class.blink::mojom::blink::FontAccessManager"*)* @_ZN5blink5mojom5blink28FontAccessManagerAsyncWaiterC2EPNS1_17FontAccessManagerE
@_ZN5blink5mojom5blink28FontAccessManagerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"*), void (%"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"*)* @_ZN5blink5mojom5blink28FontAccessManagerAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38FontAccessManagerInterceptorForTesting19EnumerateLocalFontsEN4base12OnceCallbackIFvNS0_21FontEnumerationStatusENS3_26ReadOnlySharedMemoryRegionEEEE(%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)**, %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)*, %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)** %5, i64 4
  %7 = load %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)*, %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::FontAccessManager"* %7(%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"* %0) #10
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::FontAccessManager"* %8 to void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)** %14, i64 2
  %16 = load void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::FontAccessManager"* %8, %"class.base::OnceCallback"* nonnull %3) #10
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink38FontAccessManagerInterceptorForTesting16ChooseLocalFontsERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEN4base12OnceCallbackIFvNS0_21FontEnumerationStatusENS4_IN4mojo9StructPtrINS1_12FontMetadataEEELj0ES6_EEEEE(%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*, %"class.WTF::Vector"* dereferenceable(16), %"class.base::OnceCallback.7"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.7", align 8
  %5 = bitcast %"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)**, %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)*, %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)** %6, i64 4
  %8 = load %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)*, %"class.blink::mojom::blink::FontAccessManager"* (%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::FontAccessManager"* %8(%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback.7", %"class.base::OnceCallback.7"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.7"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.7"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::FontAccessManager"* %9 to void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)***
  %15 = load void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)**, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)*, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)** %15, i64 3
  %17 = load void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)*, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::FontAccessManager"* %9, %"class.WTF::Vector"* dereferenceable(16) %1, %"class.base::OnceCallback.7"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback.7", %"class.base::OnceCallback.7"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink28FontAccessManagerAsyncWaiterC2EPNS1_17FontAccessManagerE(%"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"* nocapture, %"class.blink::mojom::blink::FontAccessManager"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::FontAccessManagerAsyncWaiter", %"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::FontAccessManager"* %1, %"class.blink::mojom::blink::FontAccessManager"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink28FontAccessManagerAsyncWaiterD2Ev(%"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28FontAccessManagerAsyncWaiter19EnumerateLocalFontsEPNS0_21FontEnumerationStatusEPN4base26ReadOnlySharedMemoryRegionE(%"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"* nocapture readonly, i32*, %"class.base::ReadOnlySharedMemoryRegion"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint i32* %1 to i64
  %8 = ptrtoint %"class.base::ReadOnlySharedMemoryRegion"* %2 to i64
  %9 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::mojom::blink::FontAccessManagerAsyncWaiter", %"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::FontAccessManager"*, %"class.blink::mojom::blink::FontAccessManager"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %13 = call i8* @_Znwm(i64 64) #11, !noalias !2
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.base::ReadOnlySharedMemoryRegion"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter19EnumerateLocalFontsEPNS4_21FontEnumerationStatusEPNS_26ReadOnlySharedMemoryRegionEE3$_0JPNS_7RunLoopES8_SA_EEEFvS7_S9_EE7RunOnceEPNS0_13BindStateBaseES7_OS9_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter19EnumerateLocalFontsEPNS3_21FontEnumerationStatusEPNS_26ReadOnlySharedMemoryRegionEE3$_0JPNS_7RunLoopES7_S9_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !2
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %7, i64* %18, align 8, !noalias !2
  %19 = getelementptr inbounds i8, i8* %13, i64 56
  %20 = bitcast i8* %19 to i64*
  store i64 %8, i64* %20, align 8, !noalias !2
  %21 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %13, i8** %21, align 8, !alias.scope !2
  %22 = bitcast %"class.blink::mojom::blink::FontAccessManager"* %11 to void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)***
  %23 = load void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)** %23, i64 2
  %25 = load void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.base::OnceCallback"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::FontAccessManager"* %11, %"class.base::OnceCallback"* nonnull %5) #10
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #10
  %27 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.1, i64 0, i64 0), i32 62) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink28FontAccessManagerAsyncWaiter16ChooseLocalFontsERKN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEPNS0_21FontEnumerationStatusEPNS4_IN4mojo9StructPtrINS1_12FontMetadataEEELj0ES6_EE(%"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"* nocapture readonly, %"class.WTF::Vector"* dereferenceable(16), i32*, %"class.WTF::Vector.25"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.7", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %2 to i64
  %9 = ptrtoint %"class.WTF::Vector.25"* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.blink::mojom::blink::FontAccessManagerAsyncWaiter", %"class.blink::mojom::blink::FontAccessManagerAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::FontAccessManager"*, %"class.blink::mojom::blink::FontAccessManager"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %14 = call i8* @_Znwm(i64 64) #11, !noalias !7
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::Vector.25"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter16ChooseLocalFontsERKN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEPNS4_21FontEnumerationStatusEPNS8_IN4mojo9StructPtrINS5_12FontMetadataEEELj0ESA_EEE3$_1JPNS_7RunLoopESF_SL_EEEFvSE_SK_EE7RunOnceEPNS0_13BindStateBaseESE_OSK_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter16ChooseLocalFontsERKN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEPNS3_21FontEnumerationStatusEPNS7_IN4mojo9StructPtrINS4_12FontMetadataEEELj0ES9_EEE3$_1JPNS_7RunLoopESE_SK_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !7
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !7
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8, !noalias !7
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !7
  %22 = bitcast %"class.base::OnceCallback.7"* %6 to i8**
  store i8* %14, i8** %22, align 8, !alias.scope !7
  %23 = bitcast %"class.blink::mojom::blink::FontAccessManager"* %12 to void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)***
  %24 = load void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)**, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)*, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)** %24, i64 3
  %26 = load void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)*, void (%"class.blink::mojom::blink::FontAccessManager"*, %"class.WTF::Vector"*, %"class.base::OnceCallback.7"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::FontAccessManager"* %12, %"class.WTF::Vector"* dereferenceable(16) %1, %"class.base::OnceCallback.7"* nonnull %6) #10
  %27 = getelementptr inbounds %"class.base::OnceCallback.7", %"class.base::OnceCallback.7"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #10
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.1, i64 0, i64 0), i32 81) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink17FontAccessManagerD2Ev(%"class.blink::mojom::blink::FontAccessManager"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink38FontAccessManagerInterceptorForTestingD0Ev(%"class.blink::mojom::blink::FontAccessManagerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter19EnumerateLocalFontsEPNS4_21FontEnumerationStatusEPNS_26ReadOnlySharedMemoryRegionEE3$_0JPNS_7RunLoopES8_SA_EEEFvS7_S9_EE7RunOnceEPNS0_13BindStateBaseES7_OS9_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) #0 align 2 {
  %4 = alloca %"class.base::ReadOnlySharedMemoryRegion", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::RunLoop"**
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to i32**
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %10 = bitcast void ()** %9 to %"class.base::ReadOnlySharedMemoryRegion"**
  %11 = bitcast %"class.base::ReadOnlySharedMemoryRegion"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #10
  %12 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %6, align 8
  %13 = load i32*, i32** %8, align 8
  %14 = load %"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"** %10, align 8
  call void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %4, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64) %2) #10
  store i32 %1, i32* %13, align 4
  %15 = call dereferenceable(64) %"class.base::ReadOnlySharedMemoryRegion"* @_ZN4base26ReadOnlySharedMemoryRegionaSEOS0_(%"class.base::ReadOnlySharedMemoryRegion"* %14, %"class.base::ReadOnlySharedMemoryRegion"* nonnull dereferenceable(64) %4) #10
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %12) #10
  call void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #10
  ret void
}

declare void @_ZN4base26ReadOnlySharedMemoryRegionC1EOS0_(%"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base26ReadOnlySharedMemoryRegionD1Ev(%"class.base::ReadOnlySharedMemoryRegion"*) unnamed_addr #1

declare dereferenceable(64) %"class.base::ReadOnlySharedMemoryRegion"* @_ZN4base26ReadOnlySharedMemoryRegionaSEOS0_(%"class.base::ReadOnlySharedMemoryRegion"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) local_unnamed_addr #5

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter19EnumerateLocalFontsEPNS3_21FontEnumerationStatusEPNS_26ReadOnlySharedMemoryRegionEE3$_0JPNS_7RunLoopES7_S9_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter16ChooseLocalFontsERKN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEPNS4_21FontEnumerationStatusEPNS8_IN4mojo9StructPtrINS5_12FontMetadataEEELj0ESA_EEE3$_1JPNS_7RunLoopESF_SL_EEEFvSE_SK_EE7RunOnceEPNS0_13BindStateBaseESE_OSK_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::Vector.25"* nocapture dereferenceable(16)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.WTF::Vector.25"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.WTF::Vector.25"*, %"class.WTF::Vector.25"** %9, align 8
  %13 = bitcast %"class.WTF::Vector.25"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store atomic i64 0, i64* %13 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %2, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 0, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %2, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 0, i32* %17, align 4
  store i32 %1, i32* %11, align 4
  %19 = bitcast %"class.WTF::Vector.25"* %12 to i64*
  %20 = load i64, i64* %19, align 8
  store atomic i64 %14, i64* %19 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %12, i64 0, i32 0, i32 0, i32 1
  store i32 %16, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.25", %"class.WTF::Vector.25"* %12, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  store i32 %18, i32* %22, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #10
  %24 = inttoptr i64 %20 to %"class.mojo::StructPtr"*
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %43, label %26, !prof !12

26:                                               ; preds = %3
  %27 = icmp eq i32 %23, 0
  br i1 %27, label %41, label %28, !prof !13

28:                                               ; preds = %26
  %29 = zext i32 %23 to i64
  %30 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 %29
  br label %31

31:                                               ; preds = %38, %28
  %32 = phi %"class.mojo::StructPtr"* [ %39, %38 ], [ %24, %28 ]
  %33 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::mojom::blink::FontMetadata"*, %"class.blink::mojom::blink::FontMetadata"** %33, align 8
  store %"class.blink::mojom::blink::FontMetadata"* null, %"class.blink::mojom::blink::FontMetadata"** %33, align 8
  %35 = icmp eq %"class.blink::mojom::blink::FontMetadata"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  tail call void @_ZN5blink5mojom5blink12FontMetadataD1Ev(%"class.blink::mojom::blink::FontMetadata"* nonnull %34) #10
  %37 = bitcast %"class.blink::mojom::blink::FontMetadata"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %36, %31
  %39 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %32, i64 1
  %40 = icmp eq %"class.mojo::StructPtr"* %39, %30
  br i1 %40, label %41, label %31

41:                                               ; preds = %38, %26
  %42 = inttoptr i64 %20 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #10
  br label %43

43:                                               ; preds = %3, %41
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink12FontMetadataD1Ev(%"class.blink::mojom::blink::FontMetadata"*) unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter16ChooseLocalFontsERKN3WTF6VectorINS6_6StringELj0ENS6_18PartitionAllocatorEEEPNS3_21FontEnumerationStatusEPNS7_IN4mojo9StructPtrINS4_12FontMetadataEEELj0ES9_EEE3$_1JPNS_7RunLoopESE_SK_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28FontAccessManagerAsyncWaiter19EnumerateLocalFontsEPNS4_21FontEnumerationStatusEPNS_26ReadOnlySharedMemoryRegionEE3$_0JPNS_7RunLoopERS8_RSA_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28FontAccessManagerAsyncWaiter19EnumerateLocalFontsEPNS4_21FontEnumerationStatusEPNS_26ReadOnlySharedMemoryRegionEE3$_0JPNS_7RunLoopERS8_RSA_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter19EnumerateLocalFontsEPNS2_21FontEnumerationStatusEPNS_26ReadOnlySharedMemoryRegionEE3$_0JPNS_7RunLoopERS6_RS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter19EnumerateLocalFontsEPNS2_21FontEnumerationStatusEPNS_26ReadOnlySharedMemoryRegionEE3$_0JPNS_7RunLoopERS6_RS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28FontAccessManagerAsyncWaiter16ChooseLocalFontsERKN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEPNS4_21FontEnumerationStatusEPNS8_IN4mojo9StructPtrINS5_12FontMetadataEEELj0ESA_EEE3$_1JPNS_7RunLoopERSF_RSL_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink28FontAccessManagerAsyncWaiter16ChooseLocalFontsERKN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEPNS4_21FontEnumerationStatusEPNS8_IN4mojo9StructPtrINS5_12FontMetadataEEELj0ESA_EEE3$_1JPNS_7RunLoopERSF_RSL_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter16ChooseLocalFontsERKN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEPNS2_21FontEnumerationStatusEPNS6_IN4mojo9StructPtrINS3_12FontMetadataEEELj0ES8_EEE3$_1JPNS_7RunLoopERSD_RSJ_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5blink5mojom5blink28FontAccessManagerAsyncWaiter16ChooseLocalFontsERKN3WTF6VectorINS5_6StringELj0ENS5_18PartitionAllocatorEEEPNS2_21FontEnumerationStatusEPNS6_IN4mojo9StructPtrINS3_12FontMetadataEEELj0ES8_EEE3$_1JPNS_7RunLoopERSD_RSJ_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_"}
!12 = !{!"branch_weights", i32 2000, i32 1}
!13 = !{!"branch_weights", i32 1, i32 2000}
