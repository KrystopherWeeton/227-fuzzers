; ModuleID = '../../ui/views/bubble/bubble_border.cc'
source_filename = "../../ui/views/bubble/bubble_border.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.base::NoDestructor" = type { [24 x i8] }
%"class.base::NoDestructor.248" = type { [24 x i8] }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.213, %class.sk_sp.214, %class.sk_sp.243, %class.sk_sp.244, %class.sk_sp.245, %class.sk_sp.246, i32, float, float, i32, %union.anon.247, [4 x i8] }>
%class.sk_sp.213 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.214 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.215", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.116, i32, %"class.absl::optional.223", %"class.std::__1::vector.228", %"class.std::__1::vector.235", %class.sk_sp.242, %class.sk_sp.220, i32, [4 x i8] }>
%"class.absl::optional.215" = type { %"class.absl::optional_internal::optional_data.216" }
%"class.absl::optional_internal::optional_data.216" = type { %"class.absl::optional_internal::optional_data_base.217" }
%"class.absl::optional_internal::optional_data_base.217" = type { %"class.absl::optional_internal::optional_data_dtor_base.218" }
%"class.absl::optional_internal::optional_data_dtor_base.218" = type { i8, %union.anon.219 }
%union.anon.219 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.220, %class.sk_sp.116, %"class.gfx::Rect", i32, %class.sk_sp.221, %class.sk_sp.222, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.220, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.221 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.222 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.116 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.117", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { i8* }
%"class.absl::optional.223" = type { %"class.absl::optional_internal::optional_data.224" }
%"class.absl::optional_internal::optional_data.224" = type { %"class.absl::optional_internal::optional_data_base.225" }
%"class.absl::optional_internal::optional_data_base.225" = type { %"class.absl::optional_internal::optional_data_dtor_base.226" }
%"class.absl::optional_internal::optional_data_dtor_base.226" = type { i8, %union.anon.227 }
%union.anon.227 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { i32*, i32*, %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { i32* }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { float*, float*, %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { float* }
%class.sk_sp.242 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.89", [7 x i8] }>
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i8 }
%class.sk_sp.220 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.168, i32, i32 }
%class.sk_sp.168 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.169, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.169 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.83" }
%"struct.std::__1::atomic.83" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__atomic_base.85" }
%"struct.std::__1::__atomic_base.85" = type { %"struct.std::__1::__cxx_atomic_impl.86" }
%"struct.std::__1::__cxx_atomic_impl.86" = type { %"struct.std::__1::__cxx_atomic_base_impl.87" }
%"struct.std::__1::__cxx_atomic_base_impl.87" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.243 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.244 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.245 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.246 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.247 = type { i32 }
%"class.views::BubbleBorder" = type { %"class.views::Border.base", i32, i32, i32, i32, %"class.absl::optional", i32, i8, i8, %"class.absl::optional.0" }
%"class.views::Border.base" = type <{ i32 (...)**, i32 }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.gfx::Insets" }
%"class.views::Border" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::ShadowValue"* }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::ObserverList", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.14", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.16" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"struct.std::__1::pair" = type { %"class.std::__1::tuple", %"class.std::__1::vector" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.200" }
%"class.std::__1::__tuple_leaf" = type { i32 }
%"class.std::__1::__tuple_leaf.200" = type { i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree.202" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.62", i8, [3 x i8], %"class.absl::optional.69", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.74", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.93", %"class.absl::optional.99", i8, [7 x i8], %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.121", i8, i8, [3 x i8], %"class.std::__1::vector.126", %"class.std::__1::unique_ptr.133", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.139", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.base::ObserverList.158", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList.24" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList.24" = type <{ %"class.std::__1::vector.14", %"class.base::LinkedList.25", i64, i32, [4 x i8] }>
%"class.base::LinkedList.25" = type { %"class.base::LinkNode.26" }
%"class.base::LinkNode.26" = type { %"class.base::internal::LinkNodeBase" }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.28", %"class.std::__1::vector.35", %"class.ui::EventHandler"* }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.30" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.42" }
%"class.std::__1::map.42" = type { %"class.std::__1::__tree.43" }
%"class.std::__1::__tree.43" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.53" }
%"class.std::__1::map.53" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.views::View"** }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, %union.anon.73 }
%union.anon.73 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.std::__1::vector.62"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.83", %"struct.std::__1::atomic.83", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.81, %class.SkTDArray.82, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.81 = type { i8*, i32, i32 }
%class.SkTDArray.82 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.88 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.88 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.89", [3 x i8] }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.99" = type { %"class.absl::optional_internal::optional_data.100" }
%"class.absl::optional_internal::optional_data.100" = type { %"class.absl::optional_internal::optional_data_base.101" }
%"class.absl::optional_internal::optional_data_base.101" = type { %"class.absl::optional_internal::optional_data_dtor_base.102" }
%"class.absl::optional_internal::optional_data_dtor_base.102" = type { i8, %union.anon.103 }
%union.anon.103 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.views::Background"* }
%"class.views::Background" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.views::Border"* }
%"class.ui::PaintCache" = type <{ %class.sk_sp.116, float, [4 x i8] }>
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%union.anon.125 = type { i8 }
%"class.std::__1::vector.126" = type { %"class.std::__1::__vector_base.127" }
%"class.std::__1::__vector_base.127" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.std::__1::vector.142"* }
%"class.std::__1::vector.142" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.158" = type <{ %"class.std::__1::vector.14", %"class.base::LinkedList.159", i64, i32, [4 x i8] }>
%"class.base::LinkedList.159" = type { %"class.base::LinkNode.160" }
%"class.base::LinkNode.160" = type { %"class.base::internal::LinkNodeBase" }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional.162", %"class.absl::optional.171", %"class.cc::PaintCanvas"* }
%"class.absl::optional.162" = type { %"class.absl::optional_internal::optional_data.163" }
%"class.absl::optional_internal::optional_data.163" = type { %"class.absl::optional_internal::optional_data_base.164" }
%"class.absl::optional_internal::optional_data_base.164" = type { %"class.absl::optional_internal::optional_data_dtor_base.165" }
%"class.absl::optional_internal::optional_data_dtor_base.165" = type { i8, %union.anon.166 }
%union.anon.166 = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp.167, %class.SkPixmap, %class.sk_sp.170 }
%class.sk_sp.167 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.170 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.absl::optional.171" = type { %"class.absl::optional_internal::optional_data.172" }
%"class.absl::optional_internal::optional_data.172" = type { %"class.absl::optional_internal::optional_data_base.173" }
%"class.absl::optional_internal::optional_data_base.173" = type { %"class.absl::optional_internal::optional_data_dtor_base.174" }
%"class.absl::optional_internal::optional_data_dtor_base.174" = type { i8, [7 x i8], %union.anon.175 }
%union.anon.175 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.190", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.176, [384 x i64], %class.sk_sp.177, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.178", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.184" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.176 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.177 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type opaque
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::ScopedCanvas" = type { i32 (...)**, %"class.gfx::Canvas"* }
%"class.gfx::InsetsF" = type { float, float, float, float }
%"struct.std::__1::pair.260" = type { %"class.std::__1::tuple", %"class.cc::PaintFlags" }
%"class.std::__1::__tree_node.274" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.275" }
%"struct.std::__1::__value_type.275" = type { %"struct.std::__1::pair.260" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::__tree.252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.views::BubbleBackground" = type { %"class.views::Background.base", %"class.views::BubbleBorder"* }
%"class.views::Background.base" = type <{ i32 (...)**, i32 }>

$_ZNK3gfx6InsetsngEv = comdat any

$_ZN5views16BubbleBackgroundD0Ev = comdat any

$_ZN3gfx6InsetspLERKS0_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJijEEENS_6vectorIN3gfx11ShadowValueENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJijEEEN2cc10PaintFlagsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_S5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

@_ZTVN5views12BubbleBorderE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::BubbleBorder"*)* @_ZN5views12BubbleBorderD2Ev to i8*), i8* bitcast (void (%"class.views::BubbleBorder"*)* @_ZN5views12BubbleBorderD0Ev to i8*), i8* bitcast (void (%"class.views::BubbleBorder"*, %"class.views::View"*, %"class.gfx::Canvas"*)* @_ZN5views12BubbleBorder5PaintERKNS_4ViewEPN3gfx6CanvasE to i8*), i8* bitcast ({ i64, i64 } (%"class.views::BubbleBorder"*)* @_ZNK5views12BubbleBorder9GetInsetsEv to i8*), i8* bitcast (i64 (%"class.views::BubbleBorder"*)* @_ZNK5views12BubbleBorder14GetMinimumSizeEv to i8*), i8* bitcast ({ i64, i64 } (%"class.views::BubbleBorder"*, %"class.gfx::Rect"*, %"class.gfx::Size"*)* @_ZNK5views12BubbleBorder9GetBoundsERKN3gfx4RectERKNS1_4SizeE to i8*)] }, align 8
@_ZZN5views12BubbleBorder24GetBorderAndShadowInsetsEN4absl8optionalIiEEE6offset = internal constant %"class.gfx::Insets" { i32 -2, i32 0, i32 2, i32 0 }, align 4
@_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map = internal global i64 0, align 8
@_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map = internal global %"class.base::NoDestructor.248" zeroinitializer, align 8
@_ZGVZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map = internal global i64 0, align 8
@__const._ZNK5views16BubbleBackground5PaintEPN3gfx6CanvasEPNS_4ViewE.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.213 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.214 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.243 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.244 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.245 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.246 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.247 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5views16BubbleBackgroundE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::Background"*)* @_ZN5views10BackgroundD2Ev to i8*), i8* bitcast (void (%"class.views::BubbleBackground"*)* @_ZN5views16BubbleBackgroundD0Ev to i8*), i8* bitcast (void (%"class.views::BubbleBackground"*, %"class.gfx::Canvas"*, %"class.views::View"*)* @_ZNK5views16BubbleBackground5PaintEPN3gfx6CanvasEPNS_4ViewE to i8*)] }, align 8

@_ZN5views12BubbleBorderC1ENS0_5ArrowENS0_6ShadowEj = hidden unnamed_addr alias void (%"class.views::BubbleBorder"*, i32, i32, i32), void (%"class.views::BubbleBorder"*, i32, i32, i32)* @_ZN5views12BubbleBorderC2ENS0_5ArrowENS0_6ShadowEj
@_ZN5views12BubbleBorderD1Ev = hidden unnamed_addr alias void (%"class.views::BubbleBorder"*), void (%"class.views::BubbleBorder"*)* @_ZN5views12BubbleBorderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views12BubbleBorderC2ENS0_5ArrowENS0_6ShadowEj(%"class.views::BubbleBorder"*, i32, i32, i32) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.views::BubbleBorder"* %0 to %"class.views::Border"*
  tail call void @_ZN5views6BorderC2Ev(%"class.views::Border"* %5) #12
  %6 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5views12BubbleBorderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 1
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 3
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 4
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 4
  %12 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 6
  store i32 %3, i32* %12, align 4
  %13 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 7
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 8
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 4
  ret void
}

declare void @_ZN5views6BorderC2Ev(%"class.views::Border"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5views6BorderD2Ev(%"class.views::Border"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views12BubbleBorderD2Ev(%"class.views::BubbleBorder"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::BubbleBorder"* %0 to %"class.views::Border"*
  tail call void @_ZN5views6BorderD2Ev(%"class.views::Border"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views12BubbleBorderD0Ev(%"class.views::BubbleBorder"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::BubbleBorder"* %0 to %"class.views::Border"*
  tail call void @_ZN5views6BorderD2Ev(%"class.views::Border"* %2) #12
  %3 = bitcast %"class.views::BubbleBorder"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5views12BubbleBorder24GetBorderAndShadowInsetsEN4absl8optionalIiEE(i64) local_unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = alloca { i64, i64 }, align 8
  %4 = trunc i64 %0 to i8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = bitcast { i64, i64 }* %3 to %"class.gfx::Insets"*
  %8 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEE(%"class.ui::NativeTheme"* null, i64 %0)
  %10 = tail call { i64, i64 } @_ZN3gfx11ShadowValue9GetMarginERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector"* dereferenceable(24) %9) #12
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %12 = extractvalue { i64, i64 } %10, 0
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %14 = extractvalue { i64, i64 } %10, 1
  store i64 %14, i64* %13, align 8
  %15 = call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* nonnull %7)
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  br label %26

18:                                               ; preds = %1
  %19 = bitcast <2 x i64>* %2 to { i64, i64 }*
  %20 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  %21 = bitcast <2 x i64>* %2 to %"class.gfx::Insets"*
  %22 = getelementptr inbounds <2 x i64>, <2 x i64>* %2, i64 0, i64 0
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i64 0, i32 1
  store <2 x i64> <i64 30064771079, i64 30064771079>, <2 x i64>* %2, align 16
  call void @_ZN3gfx6InsetspLERKS0_(%"class.gfx::Insets"* nonnull %21, %"class.gfx::Insets"* nonnull dereferenceable(16) @_ZZN5views12BubbleBorder24GetBorderAndShadowInsetsEN4absl8optionalIiEEE6offset) #12
  %24 = load i64, i64* %22, align 16
  %25 = load i64, i64* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20)
  br label %26

26:                                               ; preds = %18, %6
  %27 = phi i64 [ %16, %6 ], [ %24, %18 ]
  %28 = phi i64 [ %17, %6 ], [ %25, %18 ]
  %29 = insertvalue { i64, i64 } undef, i64 %27, 0
  %30 = insertvalue { i64, i64 } %29, i64 %28, 1
  ret { i64, i64 } %30
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare { i64, i64 } @_ZN3gfx11ShadowValue9GetMarginERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEE(%"class.ui::NativeTheme"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = trunc i64 %1 to i8
  %6 = lshr i64 %1, 32
  %7 = trunc i64 %6 to i32
  %8 = icmp ne %"class.ui::NativeTheme"* %0, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"* nonnull %0, i32 79, i32 0) #12
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ -65536, %2 ]
  %13 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map to i8*) acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %19, !prof !2

15:                                               ; preds = %11
  %16 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map) #12
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8), i8** bitcast (%"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map) #12
  br label %19

19:                                               ; preds = %15, %18, %11
  %20 = icmp eq i8 %5, 0
  %21 = select i1 %20, i32 -1, i32 %7
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node"**), align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %108, label %24

24:                                               ; preds = %19, %44
  %25 = phi %"class.std::__1::__tree_end_node"* [ %46, %44 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %19 ]
  %26 = phi %"class.std::__1::__tree_node"* [ %47, %44 ], [ %22, %19 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, %21
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::__tree_node_base"** %31 to %"class.std::__1::__tree_node"**
  br label %44

33:                                               ; preds = %24
  %34 = icmp slt i32 %21, %28
  br i1 %34, label %41, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp ult i32 %37, %12
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 1
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  br i1 %38, label %44, label %41

41:                                               ; preds = %35, %33
  %42 = bitcast %"class.std::__1::__tree_node"* %26 to %"class.std::__1::__tree_node"**
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %26, i64 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %41, %35, %30
  %45 = phi %"class.std::__1::__tree_node"** [ %42, %41 ], [ %32, %30 ], [ %40, %35 ]
  %46 = phi %"class.std::__1::__tree_end_node"* [ %43, %41 ], [ %25, %30 ], [ %25, %35 ]
  %47 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %45, align 8
  %48 = icmp eq %"class.std::__1::__tree_node"* %47, null
  br i1 %48, label %49, label %24

49:                                               ; preds = %44
  %50 = icmp eq %"class.std::__1::__tree_end_node"* %46, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %50, label %108, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %46, i64 4
  %53 = bitcast %"class.std::__1::__tree_end_node"* %52 to %"struct.std::__1::__value_type"*
  %54 = bitcast %"class.std::__1::__tree_end_node"* %52 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %21, %55
  br i1 %56, label %108, label %57

57:                                               ; preds = %51
  %58 = icmp slt i32 %55, %21
  br i1 %58, label %63, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %53, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp ult i32 %12, %61
  br i1 %62, label %108, label %63

63:                                               ; preds = %57, %59
  br label %64

64:                                               ; preds = %63, %84
  %65 = phi %"class.std::__1::__tree_end_node"* [ %86, %84 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %63 ]
  %66 = phi %"class.std::__1::__tree_node"* [ %87, %84 ], [ %22, %63 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, %21
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 1
  %72 = bitcast %"class.std::__1::__tree_node_base"** %71 to %"class.std::__1::__tree_node"**
  br label %84

73:                                               ; preds = %64
  %74 = icmp slt i32 %21, %68
  br i1 %74, label %81, label %75

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp ult i32 %77, %12
  %79 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 1
  %80 = bitcast %"class.std::__1::__tree_node_base"** %79 to %"class.std::__1::__tree_node"**
  br i1 %78, label %84, label %81

81:                                               ; preds = %75, %73
  %82 = bitcast %"class.std::__1::__tree_node"* %66 to %"class.std::__1::__tree_node"**
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %66, i64 0, i32 0, i32 0
  br label %84

84:                                               ; preds = %81, %75, %70
  %85 = phi %"class.std::__1::__tree_node"** [ %82, %81 ], [ %72, %70 ], [ %80, %75 ]
  %86 = phi %"class.std::__1::__tree_end_node"* [ %83, %81 ], [ %65, %70 ], [ %65, %75 ]
  %87 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %85, align 8
  %88 = icmp eq %"class.std::__1::__tree_node"* %87, null
  br i1 %88, label %89, label %64

89:                                               ; preds = %84
  %90 = icmp eq %"class.std::__1::__tree_end_node"* %86, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %90, label %103, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %86, i64 4
  %93 = bitcast %"class.std::__1::__tree_end_node"* %92 to %"struct.std::__1::__value_type"*
  %94 = bitcast %"class.std::__1::__tree_end_node"* %92 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %21, %95
  br i1 %96, label %103, label %97

97:                                               ; preds = %91
  %98 = icmp slt i32 %95, %21
  br i1 %98, label %104, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %93, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp ult i32 %12, %101
  br i1 %102, label %103, label %104

103:                                              ; preds = %99, %91, %89
  br label %104

104:                                              ; preds = %97, %99, %103
  %105 = phi %"class.std::__1::__tree_end_node"* [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %103 ], [ %86, %99 ], [ %86, %97 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 4
  %107 = bitcast %"class.std::__1::__tree_end_node"* %106 to %"struct.std::__1::pair"*
  br label %246

108:                                              ; preds = %59, %51, %49, %19
  br i1 %20, label %127, label %109

109:                                              ; preds = %108
  br i1 %8, label %110, label %118

110:                                              ; preds = %109
  switch i32 %7, label %112 [
    i32 3, label %113
    i32 16, label %111
  ]

111:                                              ; preds = %110
  br label %113

112:                                              ; preds = %110
  br label %113

113:                                              ; preds = %110, %112, %111
  %114 = phi i32 [ 83, %111 ], [ 79, %112 ], [ 81, %110 ]
  %115 = phi i32 [ 82, %111 ], [ 79, %112 ], [ 80, %110 ]
  %116 = tail call i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"* nonnull %0, i32 %114, i32 0) #12
  %117 = tail call i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"* nonnull %0, i32 %115, i32 0) #12
  br label %118

118:                                              ; preds = %113, %109
  %119 = phi i32 [ -65536, %109 ], [ %116, %113 ]
  %120 = phi i32 [ -65536, %109 ], [ %117, %113 ]
  %121 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #12
  call void @_ZN3gfx11ShadowValue16MakeShadowValuesEijj(%"class.std::__1::vector"* nonnull sret %3, i32 %7, i32 %119, i32 %120) #12
  %122 = bitcast %"class.std::__1::vector"* %3 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %125 = bitcast %"class.gfx::ShadowValue"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #12
  br label %149

127:                                              ; preds = %108
  br i1 %8, label %128, label %131

128:                                              ; preds = %127
  %129 = tail call i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"* nonnull %0, i32 125, i32 0) #12
  %130 = tail call i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"* nonnull %0, i32 124, i32 0) #12
  br label %131

131:                                              ; preds = %127, %128
  %132 = phi i32 [ %129, %128 ], [ -65536, %127 ]
  %133 = phi i32 [ %130, %128 ], [ -65536, %127 ]
  %134 = tail call i8* @_Znwm(i64 48) #13
  %135 = ptrtoint i8* %134 to i64
  %136 = getelementptr inbounds i8, i8* %134, i64 48
  %137 = bitcast i8* %134 to i64*
  store i64 8589934592, i64* %137, align 8
  %138 = getelementptr inbounds i8, i8* %134, i64 8
  %139 = bitcast i8* %138 to double*
  store double 8.000000e+00, double* %139, align 8
  %140 = getelementptr inbounds i8, i8* %134, i64 16
  %141 = bitcast i8* %140 to i32*
  store i32 %132, i32* %141, align 8
  %142 = getelementptr inbounds i8, i8* %134, i64 24
  %143 = bitcast i8* %142 to i64*
  store i64 8589934592, i64* %143, align 8
  %144 = getelementptr inbounds i8, i8* %134, i64 32
  %145 = bitcast i8* %144 to double*
  store double 1.200000e+01, double* %145, align 8
  %146 = getelementptr inbounds i8, i8* %134, i64 40
  %147 = bitcast i8* %146 to i32*
  store i32 %133, i32* %147, align 8
  %148 = ptrtoint i8* %136 to i64
  br label %149

149:                                              ; preds = %131, %118
  %150 = phi i64 [ %126, %118 ], [ %148, %131 ]
  %151 = phi i64 [ %123, %118 ], [ %135, %131 ]
  %152 = bitcast %"struct.std::__1::pair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %152) #12
  %153 = bitcast %"struct.std::__1::pair"* %4 to i64*
  %154 = zext i32 %12 to i64
  %155 = shl nuw i64 %154, 32
  %156 = zext i32 %21 to i64
  %157 = or i64 %155, %156
  store i64 %157, i64* %153, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %159 = bitcast %"class.std::__1::vector"* %158 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 24, i1 false) #12
  %160 = sub i64 %150, %151
  %161 = sdiv exact i64 %160, 24
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %185, label %163

163:                                              ; preds = %149
  %164 = icmp ugt i64 %161, 768614336404564650
  br i1 %164, label %165, label %167

165:                                              ; preds = %163
  %166 = bitcast %"class.std::__1::vector"* %158 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %166) #14
  unreachable

167:                                              ; preds = %163
  %168 = call i8* @_Znwm(i64 %160) #13
  %169 = bitcast i8* %168 to %"class.gfx::ShadowValue"*
  %170 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 1
  %171 = bitcast %"class.gfx::ShadowValue"** %170 to i8**
  store i8* %168, i8** %171, align 8
  %172 = bitcast %"class.std::__1::vector"* %158 to i8**
  store i8* %168, i8** %172, align 8
  %173 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %169, i64 %161
  %174 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::ShadowValue"* %173, %"class.gfx::ShadowValue"** %174, align 8
  %175 = bitcast %"class.gfx::ShadowValue"** %170 to i64*
  %176 = ptrtoint i8* %168 to i64
  %177 = icmp sgt i64 %160, 0
  br i1 %177, label %178, label %183

178:                                              ; preds = %167
  %179 = udiv exact i64 %160, 24
  %180 = inttoptr i64 %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %168, i8* align 8 %180, i64 %160, i1 false) #12
  %181 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %169, i64 %179
  %182 = ptrtoint %"class.gfx::ShadowValue"* %181 to i64
  br label %183

183:                                              ; preds = %178, %167
  %184 = phi i64 [ %182, %178 ], [ %176, %167 ]
  store i64 %184, i64* %175, align 8
  br label %185

185:                                              ; preds = %149, %183
  %186 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %187 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJijEEENS_6vectorIN3gfx11ShadowValueENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.202"* bitcast (%"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map to %"class.std::__1::__tree.202"*), %"class.std::__1::tuple"* nonnull dereferenceable(8) %186, %"struct.std::__1::pair"* nonnull dereferenceable(32) %4) #12
  %188 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 0
  %189 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %188, align 8
  %190 = icmp eq %"class.gfx::ShadowValue"* %189, null
  br i1 %190, label %196, label %191

191:                                              ; preds = %185
  %192 = ptrtoint %"class.gfx::ShadowValue"* %189 to i64
  %193 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 1
  %194 = bitcast %"class.gfx::ShadowValue"** %193 to i64*
  store i64 %192, i64* %194, align 8
  %195 = bitcast %"class.gfx::ShadowValue"* %189 to i8*
  call void @_ZdlPv(i8* %195) #13
  br label %196

196:                                              ; preds = %185, %191
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %152) #12
  %197 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node"**), align 8
  %198 = icmp eq %"class.std::__1::__tree_node"* %197, null
  br i1 %198, label %238, label %199

199:                                              ; preds = %196, %219
  %200 = phi %"class.std::__1::__tree_end_node"* [ %221, %219 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %196 ]
  %201 = phi %"class.std::__1::__tree_node"* [ %222, %219 ], [ %197, %196 ]
  %202 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %201, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = icmp slt i32 %203, %21
  br i1 %204, label %205, label %208

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %201, i64 0, i32 0, i32 1
  %207 = bitcast %"class.std::__1::__tree_node_base"** %206 to %"class.std::__1::__tree_node"**
  br label %219

208:                                              ; preds = %199
  %209 = icmp slt i32 %21, %203
  br i1 %209, label %216, label %210

210:                                              ; preds = %208
  %211 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %201, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = icmp ult i32 %212, %12
  %214 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %201, i64 0, i32 0, i32 1
  %215 = bitcast %"class.std::__1::__tree_node_base"** %214 to %"class.std::__1::__tree_node"**
  br i1 %213, label %219, label %216

216:                                              ; preds = %210, %208
  %217 = bitcast %"class.std::__1::__tree_node"* %201 to %"class.std::__1::__tree_node"**
  %218 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %201, i64 0, i32 0, i32 0
  br label %219

219:                                              ; preds = %216, %210, %205
  %220 = phi %"class.std::__1::__tree_node"** [ %217, %216 ], [ %207, %205 ], [ %215, %210 ]
  %221 = phi %"class.std::__1::__tree_end_node"* [ %218, %216 ], [ %200, %205 ], [ %200, %210 ]
  %222 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %220, align 8
  %223 = icmp eq %"class.std::__1::__tree_node"* %222, null
  br i1 %223, label %224, label %199

224:                                              ; preds = %219
  %225 = icmp eq %"class.std::__1::__tree_end_node"* %221, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %225, label %238, label %226

226:                                              ; preds = %224
  %227 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %221, i64 4
  %228 = bitcast %"class.std::__1::__tree_end_node"* %227 to %"struct.std::__1::__value_type"*
  %229 = bitcast %"class.std::__1::__tree_end_node"* %227 to i32*
  %230 = load i32, i32* %229, align 4
  %231 = icmp slt i32 %21, %230
  br i1 %231, label %238, label %232

232:                                              ; preds = %226
  %233 = icmp slt i32 %230, %21
  br i1 %233, label %239, label %234

234:                                              ; preds = %232
  %235 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %228, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = icmp ult i32 %12, %236
  br i1 %237, label %238, label %239

238:                                              ; preds = %234, %226, %224, %196
  br label %239

239:                                              ; preds = %232, %234, %238
  %240 = phi %"class.std::__1::__tree_end_node"* [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEEE10shadow_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %238 ], [ %221, %234 ], [ %221, %232 ]
  %241 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %240, i64 4
  %242 = bitcast %"class.std::__1::__tree_end_node"* %241 to %"struct.std::__1::pair"*
  %243 = icmp eq i64 %151, 0
  br i1 %243, label %246, label %244

244:                                              ; preds = %239
  %245 = inttoptr i64 %151 to i8*
  call void @_ZdlPv(i8* %245) #13
  br label %246

246:                                              ; preds = %244, %239, %104
  %247 = phi %"struct.std::__1::pair"* [ %107, %104 ], [ %242, %239 ], [ %242, %244 ]
  %248 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %247, i64 0, i32 1
  ret %"class.std::__1::vector"* %248
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = tail call i1 @llvm.is.constant.i32(i32 %3) #12
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = sub i32 0, %3
  %7 = icmp eq i32 %6, -2147483648
  %8 = select i1 %7, i32 2147483647, i32 %6
  br label %14

9:                                                ; preds = %1
  %10 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %3) #12
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 2147483647, i32 %12
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi i32 [ %8, %5 ], [ %13, %9 ]
  %16 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = tail call i1 @llvm.is.constant.i32(i32 %17) #12
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = sub i32 0, %17
  %21 = icmp eq i32 %20, -2147483648
  %22 = select i1 %21, i32 2147483647, i32 %20
  br label %28

23:                                               ; preds = %14
  %24 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %17) #12
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 2147483647, i32 %26
  br label %28

28:                                               ; preds = %19, %23
  %29 = phi i32 [ %22, %19 ], [ %27, %23 ]
  %30 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = tail call i1 @llvm.is.constant.i32(i32 %31) #12
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = sub i32 0, %31
  %35 = icmp eq i32 %34, -2147483648
  %36 = select i1 %35, i32 2147483647, i32 %34
  br label %42

37:                                               ; preds = %28
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %31) #12
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 2147483647, i32 %40
  br label %42

42:                                               ; preds = %33, %37
  %43 = phi i32 [ %36, %33 ], [ %41, %37 ]
  %44 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = tail call i1 @llvm.is.constant.i32(i32 %45) #12
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = sub i32 0, %45
  %49 = icmp eq i32 %48, -2147483648
  %50 = select i1 %49, i32 2147483647, i32 %48
  br label %56

51:                                               ; preds = %42
  %52 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %45) #12
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 2147483647, i32 %54
  br label %56

56:                                               ; preds = %47, %51
  %57 = phi i32 [ %50, %47 ], [ %55, %51 ]
  %58 = icmp sgt i32 %15, 0
  %59 = icmp sgt i32 %43, 0
  %60 = and i1 %58, %59
  %61 = sub nuw nsw i32 2147483647, %15
  %62 = icmp ult i32 %61, %43
  %63 = and i1 %62, %60
  br i1 %63, label %71, label %64

64:                                               ; preds = %56
  %65 = and i32 %43, %15
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 -2147483648, %15
  %68 = icmp sgt i32 %67, %43
  %69 = and i1 %68, %66
  %70 = select i1 %69, i32 %67, i32 %43
  br label %71

71:                                               ; preds = %64, %56
  %72 = phi i32 [ %70, %64 ], [ %61, %56 ]
  %73 = icmp sgt i32 %29, 0
  %74 = icmp sgt i32 %57, 0
  %75 = and i1 %73, %74
  %76 = sub nuw nsw i32 2147483647, %29
  %77 = icmp ult i32 %76, %57
  %78 = and i1 %77, %75
  br i1 %78, label %86, label %79

79:                                               ; preds = %71
  %80 = and i32 %57, %29
  %81 = icmp slt i32 %80, 0
  %82 = sub nsw i32 -2147483648, %29
  %83 = icmp sgt i32 %82, %57
  %84 = and i1 %83, %81
  %85 = select i1 %84, i32 %82, i32 %57
  br label %86

86:                                               ; preds = %71, %79
  %87 = phi i32 [ %85, %79 ], [ %76, %71 ]
  %88 = zext i32 %29 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %15 to i64
  %91 = or i64 %89, %90
  %92 = insertvalue { i64, i64 } undef, i64 %91, 0
  %93 = zext i32 %87 to i64
  %94 = shl nuw i64 %93, 32
  %95 = zext i32 %72 to i64
  %96 = or i64 %94, %95
  %97 = insertvalue { i64, i64 } %92, i64 %96, 1
  ret { i64, i64 } %97
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views12BubbleBorder15SetCornerRadiusEi(%"class.views::BubbleBorder"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 3
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5views12BubbleBorder9GetBoundsERKN3gfx4RectERKNS1_4SizeE(%"class.views::BubbleBorder"*, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.gfx::Rect"*
  %7 = alloca <4 x i32>, align 16
  %8 = bitcast <4 x i32>* %7 to %"class.gfx::Insets"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"class.gfx::Insets"*
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %"class.gfx::Insets"*
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast { i64, i64 }* %13 to %"class.gfx::Insets"*
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca { i64, i64 }, align 8
  %28 = bitcast { i64, i64 }* %27 to %"class.gfx::Insets"*
  %29 = alloca %"class.gfx::Vector2d", align 4
  %30 = alloca %"class.gfx::Vector2d", align 4
  %31 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 16
  br i1 %33, label %34, label %533

34:                                               ; preds = %3
  %35 = bitcast { i64, i64 }* %5 to %"class.gfx::Point"*
  %36 = bitcast { i64, i64 }* %5 to i32*
  %37 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %35, i64 0, i32 1
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %39 = bitcast i64* %38 to i32*
  store i32 0, i32* %36, align 8
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  store i32 0, i32* %40, align 4
  %41 = bitcast %"class.gfx::Size"* %2 to i64*
  %42 = load i64, i64* %41, align 4
  store i64 %42, i64* %38, align 8
  %43 = bitcast <4 x i32>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #12
  %44 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 4
  %45 = bitcast <4 x i32>* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 -86, i64 16, i1 false)
  %46 = load i32, i32* %44, align 8
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %52, label %48

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 4, !range !3
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %48, %34
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %43, i8 0, i64 16, i1 false) #12
  br label %54

53:                                               ; preds = %48
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %7, align 16
  br label %54

54:                                               ; preds = %53, %52
  %55 = phi i32 [ 1, %53 ], [ 0, %52 ]
  %56 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #12
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %58 = bitcast %"class.views::BubbleBorder"* %0 to { i64, i64 } (%"class.views::BubbleBorder"*)***
  %59 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 16, i1 false)
  %60 = load { i64, i64 } (%"class.views::BubbleBorder"*)**, { i64, i64 } (%"class.views::BubbleBorder"*)*** %58, align 8
  %61 = getelementptr inbounds { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %60, i64 3
  %62 = load { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %61, align 8
  %63 = tail call { i64, i64 } %62(%"class.views::BubbleBorder"* %0) #12
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = trunc i64 %64 to i32
  %67 = lshr i64 %64, 32
  %68 = trunc i64 %67 to i32
  %69 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %66, i32 %55) #12
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 -2147483648, i32 %71, !prof !4
  %73 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %68, i32 %55) #12
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 -2147483648, i32 %75, !prof !4
  %77 = trunc i64 %65 to i32
  %78 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %77, i32 %55) #12
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 -2147483648, i32 %80, !prof !4
  %82 = icmp sgt i32 %72, 0
  %83 = icmp sgt i32 %81, 0
  %84 = and i1 %82, %83
  %85 = sub nuw nsw i32 2147483647, %72
  %86 = icmp ult i32 %85, %81
  %87 = and i1 %86, %84
  br i1 %87, label %95, label %88

88:                                               ; preds = %54
  %89 = and i32 %81, %72
  %90 = icmp slt i32 %89, 0
  %91 = sub nsw i32 -2147483648, %72
  %92 = icmp sgt i32 %91, %81
  %93 = and i1 %92, %90
  %94 = select i1 %93, i32 %91, i32 %81
  br label %95

95:                                               ; preds = %88, %54
  %96 = phi i32 [ %94, %88 ], [ %85, %54 ]
  %97 = zext i32 %96 to i64
  %98 = lshr i64 %65, 32
  %99 = trunc i64 %98 to i32
  %100 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %99, i32 %55) #12
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 -2147483648, i32 %102, !prof !4
  %104 = icmp sgt i32 %76, 0
  %105 = icmp sgt i32 %103, 0
  %106 = and i1 %104, %105
  %107 = sub nuw nsw i32 2147483647, %76
  %108 = icmp ult i32 %107, %103
  %109 = and i1 %108, %106
  br i1 %109, label %117, label %110

110:                                              ; preds = %95
  %111 = and i32 %103, %76
  %112 = icmp slt i32 %111, 0
  %113 = sub nsw i32 -2147483648, %76
  %114 = icmp sgt i32 %113, %103
  %115 = and i1 %114, %112
  %116 = select i1 %115, i32 %113, i32 %103
  br label %117

117:                                              ; preds = %95, %110
  %118 = phi i32 [ %116, %110 ], [ %107, %95 ]
  %119 = zext i32 %118 to i64
  %120 = shl nuw i64 %119, 32
  %121 = or i64 %120, %97
  %122 = zext i32 %76 to i64
  %123 = shl nuw i64 %122, 32
  %124 = zext i32 %72 to i64
  %125 = or i64 %123, %124
  %126 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  store i64 %125, i64* %126, align 8
  store i64 %121, i64* %57, align 8
  %127 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #12
  %128 = call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* nonnull %8)
  %129 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  %130 = extractvalue { i64, i64 } %128, 0
  store i64 %130, i64* %129, align 8
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %132 = extractvalue { i64, i64 } %128, 1
  store i64 %132, i64* %131, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Insets"* nonnull dereferenceable(16) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #12
  %133 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 8
  %134 = load i8, i8* %133, align 1, !range !3
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %143, label %136

136:                                              ; preds = %117
  %137 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #12
  %138 = call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* nonnull %10)
  %139 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  %140 = extractvalue { i64, i64 } %138, 0
  store i64 %140, i64* %139, align 8
  %141 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %142 = extractvalue { i64, i64 } %138, 1
  store i64 %142, i64* %141, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Insets"* nonnull dereferenceable(16) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #12
  br label %143

143:                                              ; preds = %117, %136
  %144 = load i32, i32* %31, align 4
  switch i32 %144, label %500 [
    i32 0, label %145
    i32 1, label %172
    i32 2, label %204
    i32 3, label %231
    i32 4, label %263
    i32 5, label %290
    i32 6, label %316
    i32 7, label %349
    i32 8, label %381
    i32 10, label %409
    i32 12, label %437
    i32 13, label %467
  ]

145:                                              ; preds = %143
  %146 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #12
  %147 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = add nsw i32 %152, %150
  %154 = load i32, i32* %36, align 8
  %155 = icmp sgt i32 %154, -1
  %156 = select i1 %155, i32 -2147483648, i32 2147483647
  %157 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %148, i32 %154) #12
  %158 = extractvalue { i32, i1 } %157, 1
  %159 = extractvalue { i32, i1 } %157, 0
  %160 = select i1 %158, i32 %156, i32 %159, !prof !4
  %161 = load i32, i32* %37, align 4
  %162 = icmp sgt i32 %161, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %153, i32 %161) #12
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !4
  %168 = zext i32 %167 to i64
  %169 = shl nuw i64 %168, 32
  %170 = zext i32 %160 to i64
  %171 = or i64 %169, %170
  store i64 %171, i64* %15, align 8
  br label %496

172:                                              ; preds = %143
  %173 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #12
  %174 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = add nsw i32 %177, %175
  %179 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = add nsw i32 %182, %180
  %184 = load i32, i32* %36, align 8
  %185 = load i32, i32* %39, align 8
  %186 = add nsw i32 %185, %184
  %187 = load i32, i32* %40, align 4
  %188 = icmp sgt i32 %186, -1
  %189 = select i1 %188, i32 -2147483648, i32 2147483647
  %190 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %178, i32 %186) #12
  %191 = extractvalue { i32, i1 } %190, 1
  %192 = extractvalue { i32, i1 } %190, 0
  %193 = select i1 %191, i32 %189, i32 %192, !prof !4
  %194 = icmp sgt i32 %187, -1
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %183, i32 %187) #12
  %197 = extractvalue { i32, i1 } %196, 1
  %198 = extractvalue { i32, i1 } %196, 0
  %199 = select i1 %197, i32 %195, i32 %198, !prof !4
  %200 = zext i32 %199 to i64
  %201 = shl nuw i64 %200, 32
  %202 = zext i32 %193 to i64
  %203 = or i64 %201, %202
  store i64 %203, i64* %16, align 8
  br label %496

204:                                              ; preds = %143
  %205 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #12
  %206 = load i32, i32* %36, align 8
  %207 = load i32, i32* %40, align 4
  %208 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = add nsw i32 %209, %207
  %211 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %212 = load i32, i32* %211, align 4
  %213 = icmp sgt i32 %206, -1
  %214 = select i1 %213, i32 -2147483648, i32 2147483647
  %215 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %212, i32 %206) #12
  %216 = extractvalue { i32, i1 } %215, 1
  %217 = extractvalue { i32, i1 } %215, 0
  %218 = select i1 %216, i32 %214, i32 %217, !prof !4
  %219 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = icmp sgt i32 %210, -1
  %222 = select i1 %221, i32 -2147483648, i32 2147483647
  %223 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %220, i32 %210) #12
  %224 = extractvalue { i32, i1 } %223, 1
  %225 = extractvalue { i32, i1 } %223, 0
  %226 = select i1 %224, i32 %222, i32 %225, !prof !4
  %227 = zext i32 %226 to i64
  %228 = shl nuw i64 %227, 32
  %229 = zext i32 %218 to i64
  %230 = or i64 %228, %229
  store i64 %230, i64* %17, align 8
  br label %496

231:                                              ; preds = %143
  %232 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #12
  %233 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = add nsw i32 %236, %234
  %238 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %239 = load i32, i32* %238, align 4
  %240 = load i32, i32* %36, align 8
  %241 = load i32, i32* %39, align 8
  %242 = add nsw i32 %241, %240
  %243 = load i32, i32* %40, align 4
  %244 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = add nsw i32 %245, %243
  %247 = icmp sgt i32 %242, -1
  %248 = select i1 %247, i32 -2147483648, i32 2147483647
  %249 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %237, i32 %242) #12
  %250 = extractvalue { i32, i1 } %249, 1
  %251 = extractvalue { i32, i1 } %249, 0
  %252 = select i1 %250, i32 %248, i32 %251, !prof !4
  %253 = icmp sgt i32 %246, -1
  %254 = select i1 %253, i32 -2147483648, i32 2147483647
  %255 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %239, i32 %246) #12
  %256 = extractvalue { i32, i1 } %255, 1
  %257 = extractvalue { i32, i1 } %255, 0
  %258 = select i1 %256, i32 %254, i32 %257, !prof !4
  %259 = zext i32 %258 to i64
  %260 = shl nuw i64 %259, 32
  %261 = zext i32 %252 to i64
  %262 = or i64 %260, %261
  store i64 %262, i64* %18, align 8
  br label %496

263:                                              ; preds = %143
  %264 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #12
  %265 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %266 = load i32, i32* %265, align 4
  %267 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %268 = load i32, i32* %267, align 4
  %269 = add nsw i32 %268, %266
  %270 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %271 = load i32, i32* %270, align 4
  %272 = load i32, i32* %36, align 8
  %273 = icmp sgt i32 %272, -1
  %274 = select i1 %273, i32 -2147483648, i32 2147483647
  %275 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %269, i32 %272) #12
  %276 = extractvalue { i32, i1 } %275, 1
  %277 = extractvalue { i32, i1 } %275, 0
  %278 = select i1 %276, i32 %274, i32 %277, !prof !4
  %279 = load i32, i32* %37, align 4
  %280 = icmp sgt i32 %279, -1
  %281 = select i1 %280, i32 -2147483648, i32 2147483647
  %282 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %271, i32 %279) #12
  %283 = extractvalue { i32, i1 } %282, 1
  %284 = extractvalue { i32, i1 } %282, 0
  %285 = select i1 %283, i32 %281, i32 %284, !prof !4
  %286 = zext i32 %285 to i64
  %287 = shl nuw i64 %286, 32
  %288 = zext i32 %278 to i64
  %289 = or i64 %287, %288
  store i64 %289, i64* %19, align 8
  br label %496

290:                                              ; preds = %143
  %291 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291) #12
  %292 = load i32, i32* %36, align 8
  %293 = load i32, i32* %39, align 8
  %294 = add nsw i32 %293, %292
  %295 = load i32, i32* %40, align 4
  %296 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = icmp sgt i32 %294, -1
  %299 = select i1 %298, i32 -2147483648, i32 2147483647
  %300 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %297, i32 %294) #12
  %301 = extractvalue { i32, i1 } %300, 1
  %302 = extractvalue { i32, i1 } %300, 0
  %303 = select i1 %301, i32 %299, i32 %302, !prof !4
  %304 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %305 = load i32, i32* %304, align 4
  %306 = icmp sgt i32 %295, -1
  %307 = select i1 %306, i32 -2147483648, i32 2147483647
  %308 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %305, i32 %295) #12
  %309 = extractvalue { i32, i1 } %308, 1
  %310 = extractvalue { i32, i1 } %308, 0
  %311 = select i1 %309, i32 %307, i32 %310, !prof !4
  %312 = zext i32 %311 to i64
  %313 = shl nuw i64 %312, 32
  %314 = zext i32 %303 to i64
  %315 = or i64 %313, %314
  store i64 %315, i64* %20, align 8
  br label %496

316:                                              ; preds = %143
  %317 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %317) #12
  %318 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %319 = load i32, i32* %318, align 4
  %320 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %321 = load i32, i32* %320, align 4
  %322 = add nsw i32 %321, %319
  %323 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %324 = load i32, i32* %323, align 4
  %325 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %326 = load i32, i32* %325, align 4
  %327 = add nsw i32 %326, %324
  %328 = load i32, i32* %36, align 8
  %329 = load i32, i32* %40, align 4
  %330 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %331 = load i32, i32* %330, align 4
  %332 = add nsw i32 %331, %329
  %333 = icmp sgt i32 %328, -1
  %334 = select i1 %333, i32 -2147483648, i32 2147483647
  %335 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %322, i32 %328) #12
  %336 = extractvalue { i32, i1 } %335, 1
  %337 = extractvalue { i32, i1 } %335, 0
  %338 = select i1 %336, i32 %334, i32 %337, !prof !4
  %339 = icmp sgt i32 %332, -1
  %340 = select i1 %339, i32 -2147483648, i32 2147483647
  %341 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %327, i32 %332) #12
  %342 = extractvalue { i32, i1 } %341, 1
  %343 = extractvalue { i32, i1 } %341, 0
  %344 = select i1 %342, i32 %340, i32 %343, !prof !4
  %345 = zext i32 %344 to i64
  %346 = shl nuw i64 %345, 32
  %347 = zext i32 %338 to i64
  %348 = or i64 %346, %347
  store i64 %348, i64* %21, align 8
  br label %496

349:                                              ; preds = %143
  %350 = bitcast i64* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #12
  %351 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %354 = load i32, i32* %353, align 4
  %355 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %356 = load i32, i32* %355, align 4
  %357 = add nsw i32 %356, %354
  %358 = load i32, i32* %36, align 8
  %359 = load i32, i32* %39, align 8
  %360 = add nsw i32 %359, %358
  %361 = load i32, i32* %40, align 4
  %362 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %363 = load i32, i32* %362, align 4
  %364 = add nsw i32 %363, %361
  %365 = icmp sgt i32 %360, -1
  %366 = select i1 %365, i32 -2147483648, i32 2147483647
  %367 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %352, i32 %360) #12
  %368 = extractvalue { i32, i1 } %367, 1
  %369 = extractvalue { i32, i1 } %367, 0
  %370 = select i1 %368, i32 %366, i32 %369, !prof !4
  %371 = icmp sgt i32 %364, -1
  %372 = select i1 %371, i32 -2147483648, i32 2147483647
  %373 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %357, i32 %364) #12
  %374 = extractvalue { i32, i1 } %373, 1
  %375 = extractvalue { i32, i1 } %373, 0
  %376 = select i1 %374, i32 %372, i32 %375, !prof !4
  %377 = zext i32 %376 to i64
  %378 = shl nuw i64 %377, 32
  %379 = zext i32 %370 to i64
  %380 = or i64 %378, %379
  store i64 %380, i64* %22, align 8
  br label %496

381:                                              ; preds = %143
  %382 = bitcast i64* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %382) #12
  %383 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* %1) #12
  %384 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %385 = load i32, i32* %384, align 4
  %386 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %387 = load i32, i32* %386, align 4
  %388 = add nsw i32 %387, %385
  %389 = trunc i64 %383 to i32
  %390 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* nonnull %6) #12
  %391 = load i32, i32* %40, align 4
  %392 = trunc i64 %390 to i32
  %393 = icmp sgt i32 %392, -1
  %394 = select i1 %393, i32 -2147483648, i32 2147483647
  %395 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %389, i32 %392) #12
  %396 = extractvalue { i32, i1 } %395, 1
  %397 = extractvalue { i32, i1 } %395, 0
  %398 = select i1 %396, i32 %394, i32 %397, !prof !4
  %399 = icmp sgt i32 %391, -1
  %400 = select i1 %399, i32 -2147483648, i32 2147483647
  %401 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %388, i32 %391) #12
  %402 = extractvalue { i32, i1 } %401, 1
  %403 = extractvalue { i32, i1 } %401, 0
  %404 = select i1 %402, i32 %400, i32 %403, !prof !4
  %405 = zext i32 %404 to i64
  %406 = shl nuw i64 %405, 32
  %407 = zext i32 %398 to i64
  %408 = or i64 %406, %407
  store i64 %408, i64* %23, align 8
  br label %496

409:                                              ; preds = %143
  %410 = bitcast i64* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %410) #12
  %411 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* %1) #12
  %412 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %413 = load i32, i32* %412, align 4
  %414 = trunc i64 %411 to i32
  %415 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* nonnull %6) #12
  %416 = load i32, i32* %40, align 4
  %417 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %418 = load i32, i32* %417, align 4
  %419 = add nsw i32 %418, %416
  %420 = trunc i64 %415 to i32
  %421 = icmp sgt i32 %420, -1
  %422 = select i1 %421, i32 -2147483648, i32 2147483647
  %423 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %414, i32 %420) #12
  %424 = extractvalue { i32, i1 } %423, 1
  %425 = extractvalue { i32, i1 } %423, 0
  %426 = select i1 %424, i32 %422, i32 %425, !prof !4
  %427 = icmp sgt i32 %419, -1
  %428 = select i1 %427, i32 -2147483648, i32 2147483647
  %429 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %413, i32 %419) #12
  %430 = extractvalue { i32, i1 } %429, 1
  %431 = extractvalue { i32, i1 } %429, 0
  %432 = select i1 %430, i32 %428, i32 %431, !prof !4
  %433 = zext i32 %432 to i64
  %434 = shl nuw i64 %433, 32
  %435 = zext i32 %426 to i64
  %436 = or i64 %434, %435
  store i64 %436, i64* %24, align 8
  br label %496

437:                                              ; preds = %143
  %438 = bitcast i64* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %438) #12
  %439 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %440 = load i32, i32* %439, align 4
  %441 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %442 = load i32, i32* %441, align 4
  %443 = add nsw i32 %442, %440
  %444 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* %1) #12
  %445 = lshr i64 %444, 32
  %446 = trunc i64 %445 to i32
  %447 = load i32, i32* %36, align 8
  %448 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* nonnull %6) #12
  %449 = lshr i64 %448, 32
  %450 = trunc i64 %449 to i32
  %451 = icmp sgt i32 %447, -1
  %452 = select i1 %451, i32 -2147483648, i32 2147483647
  %453 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %443, i32 %447) #12
  %454 = extractvalue { i32, i1 } %453, 1
  %455 = extractvalue { i32, i1 } %453, 0
  %456 = select i1 %454, i32 %452, i32 %455, !prof !4
  %457 = icmp sgt i32 %450, -1
  %458 = select i1 %457, i32 -2147483648, i32 2147483647
  %459 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %446, i32 %450) #12
  %460 = extractvalue { i32, i1 } %459, 1
  %461 = extractvalue { i32, i1 } %459, 0
  %462 = select i1 %460, i32 %458, i32 %461, !prof !4
  %463 = zext i32 %462 to i64
  %464 = shl nuw i64 %463, 32
  %465 = zext i32 %456 to i64
  %466 = or i64 %464, %465
  store i64 %466, i64* %25, align 8
  br label %496

467:                                              ; preds = %143
  %468 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %468) #12
  %469 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %470 = load i32, i32* %469, align 4
  %471 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* %1) #12
  %472 = lshr i64 %471, 32
  %473 = trunc i64 %472 to i32
  %474 = load i32, i32* %36, align 8
  %475 = load i32, i32* %39, align 8
  %476 = add nsw i32 %475, %474
  %477 = call i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"* nonnull %6) #12
  %478 = lshr i64 %477, 32
  %479 = trunc i64 %478 to i32
  %480 = icmp sgt i32 %476, -1
  %481 = select i1 %480, i32 -2147483648, i32 2147483647
  %482 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %470, i32 %476) #12
  %483 = extractvalue { i32, i1 } %482, 1
  %484 = extractvalue { i32, i1 } %482, 0
  %485 = select i1 %483, i32 %481, i32 %484, !prof !4
  %486 = icmp sgt i32 %479, -1
  %487 = select i1 %486, i32 -2147483648, i32 2147483647
  %488 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %473, i32 %479) #12
  %489 = extractvalue { i32, i1 } %488, 1
  %490 = extractvalue { i32, i1 } %488, 0
  %491 = select i1 %489, i32 %487, i32 %490, !prof !4
  %492 = zext i32 %491 to i64
  %493 = shl nuw i64 %492, 32
  %494 = zext i32 %485 to i64
  %495 = or i64 %493, %494
  store i64 %495, i64* %26, align 8
  br label %496

496:                                              ; preds = %145, %172, %204, %231, %263, %290, %316, %349, %381, %409, %437, %467
  %497 = phi i64* [ %26, %467 ], [ %25, %437 ], [ %24, %409 ], [ %23, %381 ], [ %22, %349 ], [ %21, %316 ], [ %20, %290 ], [ %19, %263 ], [ %18, %231 ], [ %17, %204 ], [ %16, %172 ], [ %15, %145 ]
  %498 = phi i8* [ %468, %467 ], [ %438, %437 ], [ %410, %409 ], [ %382, %381 ], [ %350, %349 ], [ %317, %316 ], [ %291, %290 ], [ %264, %263 ], [ %232, %231 ], [ %205, %204 ], [ %173, %172 ], [ %146, %145 ]
  %499 = bitcast i64* %497 to %"class.gfx::Vector2d"*
  call void @_ZN3gfx4RectpLERKNS_8Vector2dE(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %499) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %498) #12
  br label %500

500:                                              ; preds = %496, %143
  %501 = load i8, i8* %133, align 1, !range !3
  %502 = icmp eq i8 %501, 0
  br i1 %502, label %503, label %510

503:                                              ; preds = %500
  %504 = bitcast { i64, i64 }* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %504) #12
  %505 = call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* nonnull %10)
  %506 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 0
  %507 = extractvalue { i64, i64 } %505, 0
  store i64 %507, i64* %506, align 8
  %508 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i64 0, i32 1
  %509 = extractvalue { i64, i64 } %505, 1
  store i64 %509, i64* %508, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Insets"* nonnull dereferenceable(16) %28) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %504) #12
  br label %510

510:                                              ; preds = %500, %503
  %511 = load i32, i32* %31, align 4
  %512 = icmp slt i32 %511, 16
  %513 = and i32 %511, 4
  %514 = icmp eq i32 %513, 0
  %515 = and i1 %512, %514
  br i1 %515, label %516, label %521

516:                                              ; preds = %510
  %517 = bitcast %"class.gfx::Vector2d"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %517) #12
  %518 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 2
  %519 = load i32, i32* %518, align 8
  %520 = sub nsw i32 0, %519
  br label %526

521:                                              ; preds = %510
  %522 = bitcast %"class.gfx::Vector2d"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %522) #12
  %523 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 2
  %524 = load i32, i32* %523, align 8
  %525 = sub nsw i32 0, %524
  br label %526

526:                                              ; preds = %521, %516
  %527 = phi %"class.gfx::Vector2d"* [ %30, %521 ], [ %29, %516 ]
  %528 = phi i32 [ 0, %521 ], [ %520, %516 ]
  %529 = phi i32 [ %525, %521 ], [ 0, %516 ]
  %530 = phi i8* [ %522, %521 ], [ %517, %516 ]
  %531 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %527, i64 0, i32 0
  store i32 %528, i32* %531, align 4
  %532 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %527, i64 0, i32 1
  store i32 %529, i32* %532, align 4
  call void @_ZN3gfx4RectpLERKNS_8Vector2dE(%"class.gfx::Rect"* nonnull %6, %"class.gfx::Vector2d"* nonnull dereferenceable(8) %527) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %530) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #12
  br label %659

533:                                              ; preds = %3
  %534 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %535 = load i32, i32* %534, align 4
  %536 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %537 = load i32, i32* %536, align 4
  %538 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %539 = load i32, i32* %538, align 4
  %540 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %541 = load i32, i32* %540, align 4
  %542 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %542)
  %543 = bitcast i64* %4 to %"class.gfx::Size"*
  %544 = bitcast %"class.gfx::Size"* %2 to i64*
  %545 = load i64, i64* %544, align 4
  store i64 %545, i64* %4, align 8
  %546 = bitcast %"class.views::BubbleBorder"* %0 to { i64, i64 } (%"class.views::BubbleBorder"*)***
  %547 = load { i64, i64 } (%"class.views::BubbleBorder"*)**, { i64, i64 } (%"class.views::BubbleBorder"*)*** %546, align 8
  %548 = getelementptr inbounds { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %547, i64 3
  %549 = load { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %548, align 8
  %550 = tail call { i64, i64 } %549(%"class.views::BubbleBorder"* %0) #12
  %551 = extractvalue { i64, i64 } %550, 0
  %552 = trunc i64 %551 to i32
  %553 = lshr i64 %551, 32
  %554 = trunc i64 %553 to i32
  %555 = extractvalue { i64, i64 } %550, 1
  %556 = lshr i64 %555, 32
  %557 = trunc i64 %556 to i32
  %558 = add nsw i32 %557, %554
  %559 = trunc i64 %555 to i32
  %560 = add nsw i32 %559, %552
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %543, i32 %558, i32 %560) #12
  %561 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %542)
  %562 = trunc i64 %561 to i32
  %563 = sub i32 0, %562
  %564 = lshr i64 %561, 32
  %565 = trunc i64 %564 to i32
  %566 = sub i32 0, %565
  %567 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 4
  %568 = load i32, i32* %567, align 8
  %569 = icmp ne i32 %568, 2
  %570 = zext i1 %569 to i32
  %571 = sext i1 %569 to i32
  %572 = load i32, i32* %31, align 4
  %573 = icmp slt i32 %572, 16
  %574 = and i32 %572, 4
  %575 = icmp eq i32 %574, 0
  %576 = and i1 %573, %575
  br i1 %576, label %577, label %601

577:                                              ; preds = %533
  %578 = icmp eq i32 %572, 12
  br i1 %578, label %579, label %581

579:                                              ; preds = %577
  %580 = add nsw i32 %535, %570
  br label %599

581:                                              ; preds = %577
  %582 = and i32 %572, 9
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %592, label %584

584:                                              ; preds = %581
  %585 = and i32 %572, 8
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %589, label %587

587:                                              ; preds = %584
  %588 = sdiv i32 %539, 2
  br label %592

589:                                              ; preds = %584
  %590 = sub i32 %539, %562
  %591 = add i32 %590, %571
  br label %592

592:                                              ; preds = %589, %587, %581
  %593 = phi i32 [ %588, %587 ], [ %591, %589 ], [ %570, %581 ]
  %594 = add nsw i32 %593, %535
  %595 = icmp eq i32 %572, 8
  %596 = and i32 %572, 10
  %597 = icmp eq i32 %596, 0
  %598 = or i1 %595, %597
  br i1 %598, label %632, label %599

599:                                              ; preds = %592, %579
  %600 = phi i32 [ %580, %579 ], [ %594, %592 ]
  br label %632

601:                                              ; preds = %533
  br i1 %573, label %602, label %624

602:                                              ; preds = %601
  %603 = icmp eq i32 %572, 12
  br i1 %603, label %604, label %606

604:                                              ; preds = %602
  %605 = add nsw i32 %539, %535
  br label %618

606:                                              ; preds = %602
  %607 = and i32 %572, 9
  %608 = icmp eq i32 %607, 0
  %609 = select i1 %608, i32 %539, i32 %563
  %610 = add nsw i32 %609, %535
  %611 = icmp eq i32 %572, 8
  %612 = and i32 %572, 10
  %613 = icmp eq i32 %612, 0
  %614 = or i1 %611, %613
  br i1 %614, label %632, label %615

615:                                              ; preds = %606
  %616 = and i32 %572, 8
  %617 = icmp eq i32 %616, 0
  br i1 %617, label %621, label %618

618:                                              ; preds = %615, %604
  %619 = phi i32 [ %605, %604 ], [ %610, %615 ]
  %620 = sdiv i32 %541, 2
  br label %632

621:                                              ; preds = %615
  %622 = sub i32 %541, %565
  %623 = add i32 %622, %571
  br label %632

624:                                              ; preds = %601
  %625 = sub nsw i32 %539, %562
  %626 = sdiv i32 %625, 2
  %627 = add nsw i32 %626, %535
  %628 = icmp eq i32 %572, 16
  br i1 %628, label %632, label %629

629:                                              ; preds = %624
  %630 = sub nsw i32 %541, %565
  %631 = sdiv i32 %630, 2
  br label %632

632:                                              ; preds = %606, %592, %629, %624, %599, %618, %621
  %633 = phi i32 [ %619, %618 ], [ %610, %621 ], [ %600, %599 ], [ %627, %624 ], [ %627, %629 ], [ %594, %592 ], [ %610, %606 ]
  %634 = phi i32 [ %620, %618 ], [ %623, %621 ], [ %566, %599 ], [ %541, %624 ], [ %631, %629 ], [ %541, %592 ], [ %570, %606 ]
  %635 = add nsw i32 %634, %537
  %636 = bitcast { i64, i64 }* %5 to i32*
  store i32 %633, i32* %636, align 8
  %637 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  store i32 %635, i32* %637, align 4
  %638 = icmp sgt i32 %633, 0
  %639 = icmp sgt i32 %562, 0
  %640 = and i1 %639, %638
  %641 = sub nuw nsw i32 2147483647, %633
  %642 = icmp ult i32 %641, %562
  %643 = and i1 %642, %640
  %644 = select i1 %643, i32 %641, i32 %562
  %645 = icmp sgt i32 %635, 0
  %646 = icmp sgt i32 %565, 0
  %647 = and i1 %646, %645
  %648 = sub nuw nsw i32 2147483647, %635
  %649 = icmp ult i32 %648, %565
  %650 = and i1 %649, %647
  %651 = select i1 %650, i32 %648, i32 %565
  %652 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %653 = bitcast i64* %652 to i32*
  %654 = icmp sgt i32 %644, 0
  %655 = select i1 %654, i32 %644, i32 0
  store i32 %655, i32* %653, align 8
  %656 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1, i32 1
  %657 = icmp sgt i32 %651, 0
  %658 = select i1 %657, i32 %651, i32 0
  store i32 %658, i32* %656, align 4
  br label %659

659:                                              ; preds = %632, %526
  %660 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %661 = load i64, i64* %660, align 8
  %662 = insertvalue { i64, i64 } undef, i64 %661, 0
  %663 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %664 = load i64, i64* %663, align 8
  %665 = insertvalue { i64, i64 } %662, i64 %664, 1
  ret { i64, i64 } %665
}

declare void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gfx4RectpLERKNS_8Vector2dE(%"class.gfx::Rect"*, %"class.gfx::Vector2d"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views12BubbleBorder22GetSizeForContentsSizeERKN3gfx4SizeE(%"class.views::BubbleBorder"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Size"*
  %5 = bitcast %"class.gfx::Size"* %1 to i64*
  %6 = load i64, i64* %5, align 4
  store i64 %6, i64* %3, align 8
  %7 = bitcast %"class.views::BubbleBorder"* %0 to { i64, i64 } (%"class.views::BubbleBorder"*)***
  %8 = load { i64, i64 } (%"class.views::BubbleBorder"*)**, { i64, i64 } (%"class.views::BubbleBorder"*)*** %7, align 8
  %9 = getelementptr inbounds { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %8, i64 3
  %10 = load { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %9, align 8
  %11 = tail call { i64, i64 } %10(%"class.views::BubbleBorder"* %0) #12
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 32
  %15 = trunc i64 %14 to i32
  %16 = extractvalue { i64, i64 } %11, 1
  %17 = lshr i64 %16, 32
  %18 = trunc i64 %17 to i32
  %19 = add nsw i32 %18, %15
  %20 = trunc i64 %16 to i32
  %21 = add nsw i32 %20, %13
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %4, i32 %19, i32 %21) #12
  %22 = load i64, i64* %3, align 8
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views12BubbleBorder5PaintERKNS_4ViewEPN3gfx6CanvasE(%"class.views::BubbleBorder"*, %"class.views::View"* dereferenceable(664), %"class.gfx::Canvas"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkRRect, align 8
  %5 = alloca %"class.gfx::RectF", align 4
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %"class.gfx::ScopedCanvas", align 8
  %9 = alloca %class.SkRRect, align 4
  %10 = alloca %class.SkRRect, align 8
  %11 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  switch i32 %12, label %15 [
    i32 2, label %13
    i32 0, label %14
  ]

13:                                               ; preds = %3
  tail call void @_ZN5views12BubbleBorder13PaintNoShadowERKNS_4ViewEPN3gfx6CanvasE(%"class.views::BubbleBorder"* %0, %"class.views::View"* dereferenceable(664) %1, %"class.gfx::Canvas"* %2)
  br label %104

14:                                               ; preds = %3
  tail call void @_ZN5views12BubbleBorder19PaintNoShadowLegacyERKNS_4ViewEPN3gfx6CanvasE(%"class.views::BubbleBorder"* %0, %"class.views::View"* dereferenceable(664) %1, %"class.gfx::Canvas"* %2)
  br label %104

15:                                               ; preds = %3
  %16 = bitcast %"class.gfx::ScopedCanvas"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %17 = bitcast %"class.gfx::ScopedCanvas"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %8, %"class.gfx::Canvas"* %2) #12
  %18 = bitcast %class.SkRRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %18) #12
  %19 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.gfx::InsetsF"*
  %20 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %21 = bitcast %"class.gfx::RectF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #12, !noalias !5
  %22 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %26 = call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %1) #12, !noalias !5
  %27 = extractvalue { i64, i64 } %26, 0
  %28 = trunc i64 %27 to i32
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = extractvalue { i64, i64 } %26, 1
  %32 = sitofp i32 %28 to float
  %33 = sitofp i32 %30 to float
  %34 = trunc i64 %31 to i32
  %35 = lshr i64 %31, 32
  %36 = trunc i64 %35 to i32
  store float %32, float* %22, align 4, !noalias !5
  store float %33, float* %23, align 4, !noalias !5
  %37 = icmp sgt i32 %34, 0
  %38 = select i1 %37, i32 %34, i32 0
  %39 = sitofp i32 %38 to float
  store float %39, float* %24, align 4, !noalias !5
  %40 = icmp sgt i32 %36, 0
  %41 = select i1 %40, i32 %36, i32 0
  %42 = sitofp i32 %41 to float
  store float %42, float* %25, align 4, !noalias !5
  %43 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #12, !noalias !5
  %44 = bitcast %"class.views::BubbleBorder"* %0 to { i64, i64 } (%"class.views::BubbleBorder"*)***
  %45 = load { i64, i64 } (%"class.views::BubbleBorder"*)**, { i64, i64 } (%"class.views::BubbleBorder"*)*** %44, align 8, !noalias !5
  %46 = getelementptr inbounds { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %45, i64 3
  %47 = load { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %46, align 8, !noalias !5
  %48 = call { i64, i64 } %47(%"class.views::BubbleBorder"* %0) #12, !noalias !5
  %49 = extractvalue { i64, i64 } %48, 0
  %50 = trunc i64 %49 to i32
  %51 = lshr i64 %49, 32
  %52 = trunc i64 %51 to i32
  %53 = extractvalue { i64, i64 } %48, 1
  %54 = sitofp i32 %50 to float
  %55 = sitofp i32 %52 to float
  %56 = trunc i64 %53 to i32
  %57 = sitofp i32 %56 to float
  %58 = lshr i64 %53, 32
  %59 = trunc i64 %58 to i32
  %60 = sitofp i32 %59 to float
  %61 = insertelement <2 x float> undef, float %54, i32 0
  %62 = insertelement <2 x float> %61, float %55, i32 1
  %63 = insertelement <2 x float> undef, float %57, i32 0
  %64 = insertelement <2 x float> %63, float %60, i32 1
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %62, <2 x float>* %65, align 8, !noalias !5
  %66 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %64, <2 x float>* %66, align 8, !noalias !5
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %5, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %19) #12, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #12, !noalias !5
  %67 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #12, !noalias !5
  %68 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %5) #12, !noalias !5
  %69 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %70 = extractvalue { <2 x float>, <2 x float> } %68, 0
  store <2 x float> %70, <2 x float>* %69, align 8, !noalias !5
  %71 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %72 = extractvalue { <2 x float>, <2 x float> } %68, 1
  store <2 x float> %72, <2 x float>* %71, align 8, !noalias !5
  %73 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 3
  %74 = load i32, i32* %73, align 4, !noalias !5
  %75 = sitofp i32 %74 to float
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 0, i64 52, i1 false) #12, !alias.scope !8
  call void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %20, float %75, float %75) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #12, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #12, !noalias !5
  %76 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %2, i64 0, i32 4
  %77 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %76, align 8
  %78 = bitcast %"class.cc::PaintCanvas"* %77 to void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)***
  %79 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)**, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)** %79, i64 19
  %81 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)** %80, align 8
  call void %81(%"class.cc::PaintCanvas"* %77, %class.SkRRect* nonnull dereferenceable(52) %9, i32 0, i1 zeroext true) #12
  %82 = bitcast %class.SkRRect* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %82, i8* nonnull align 4 %18, i64 52, i1 false)
  %83 = call %"class.ui::NativeTheme"* @_ZNK5views4View14GetNativeThemeEv(%"class.views::View"* %1) #12
  %84 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 5
  %85 = bitcast %"class.absl::optional"* %84 to i64*
  %86 = load i64, i64* %85, align 4
  %87 = bitcast %class.SkRRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %87)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* nonnull align 8 %82, i64 52, i1 false) #12
  %88 = trunc i64 %86 to i8
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %15
  %91 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %2, i64 0, i32 1
  %92 = load float, float* %91, align 8
  %93 = fdiv float -1.000000e+00, %92
  call void @_ZNK7SkRRect5insetEffPS_(%class.SkRRect* nonnull %4, float %93, float %93, %class.SkRRect* nonnull %4) #12
  br label %94

94:                                               ; preds = %15, %90
  %95 = bitcast %"class.cc::PaintCanvas"** %76 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast i8* %96 to %"class.cc::PaintCanvas"*
  %98 = bitcast i8* %96 to i8**
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr i8, i8* %99, i64 248
  %101 = bitcast i8* %100 to void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)**
  %102 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, %"class.cc::PaintFlags"*)** %101, align 8
  %103 = call dereferenceable(72) %"class.cc::PaintFlags"* @_ZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEE(%"class.ui::NativeTheme"* %83, i64 %86) #12
  call void %102(%"class.cc::PaintCanvas"* %97, %class.SkRRect* nonnull dereferenceable(52) %4, %"class.cc::PaintFlags"* dereferenceable(72) %103) #12
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %87)
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %18) #12
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  br label %104

104:                                              ; preds = %94, %14, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views12BubbleBorder13PaintNoShadowERKNS_4ViewEPN3gfx6CanvasE(%"class.views::BubbleBorder"*, %"class.views::View"* dereferenceable(664), %"class.gfx::Canvas"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::RectF", align 4
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = alloca %"class.gfx::ScopedCanvas", align 8
  %8 = alloca %class.SkRRect, align 4
  %9 = bitcast %"class.gfx::ScopedCanvas"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = bitcast %"class.gfx::ScopedCanvas"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %7, %"class.gfx::Canvas"* %2) #12
  %11 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %2, i64 0, i32 4
  %12 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %11, align 8
  %13 = bitcast %class.SkRRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %13) #12
  %14 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.gfx::InsetsF"*
  %15 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %16 = bitcast %"class.gfx::RectF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12, !noalias !11
  %17 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1, i32 1
  %21 = call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %1) #12, !noalias !11
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = extractvalue { i64, i64 } %21, 1
  %27 = sitofp i32 %23 to float
  %28 = sitofp i32 %25 to float
  %29 = trunc i64 %26 to i32
  %30 = lshr i64 %26, 32
  %31 = trunc i64 %30 to i32
  store float %27, float* %17, align 4, !noalias !11
  store float %28, float* %18, align 4, !noalias !11
  %32 = icmp sgt i32 %29, 0
  %33 = select i1 %32, i32 %29, i32 0
  %34 = sitofp i32 %33 to float
  store float %34, float* %19, align 4, !noalias !11
  %35 = icmp sgt i32 %31, 0
  %36 = select i1 %35, i32 %31, i32 0
  %37 = sitofp i32 %36 to float
  store float %37, float* %20, align 4, !noalias !11
  %38 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #12, !noalias !11
  %39 = bitcast %"class.views::BubbleBorder"* %0 to { i64, i64 } (%"class.views::BubbleBorder"*)***
  %40 = load { i64, i64 } (%"class.views::BubbleBorder"*)**, { i64, i64 } (%"class.views::BubbleBorder"*)*** %39, align 8, !noalias !11
  %41 = getelementptr inbounds { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %40, i64 3
  %42 = load { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %41, align 8, !noalias !11
  %43 = call { i64, i64 } %42(%"class.views::BubbleBorder"* %0) #12, !noalias !11
  %44 = extractvalue { i64, i64 } %43, 0
  %45 = trunc i64 %44 to i32
  %46 = lshr i64 %44, 32
  %47 = trunc i64 %46 to i32
  %48 = extractvalue { i64, i64 } %43, 1
  %49 = sitofp i32 %45 to float
  %50 = sitofp i32 %47 to float
  %51 = trunc i64 %48 to i32
  %52 = sitofp i32 %51 to float
  %53 = lshr i64 %48, 32
  %54 = trunc i64 %53 to i32
  %55 = sitofp i32 %54 to float
  %56 = insertelement <2 x float> undef, float %49, i32 0
  %57 = insertelement <2 x float> %56, float %50, i32 1
  %58 = insertelement <2 x float> undef, float %52, i32 0
  %59 = insertelement <2 x float> %58, float %55, i32 1
  %60 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %57, <2 x float>* %60, align 8, !noalias !11
  %61 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %59, <2 x float>* %61, align 8, !noalias !11
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %4, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %14) #12, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #12, !noalias !11
  %62 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #12, !noalias !11
  %63 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %4) #12, !noalias !11
  %64 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %65 = extractvalue { <2 x float>, <2 x float> } %63, 0
  store <2 x float> %65, <2 x float>* %64, align 8, !noalias !11
  %66 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %67 = extractvalue { <2 x float>, <2 x float> } %63, 1
  store <2 x float> %67, <2 x float>* %66, align 8, !noalias !11
  %68 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 4, !noalias !11
  %70 = sitofp i32 %69 to float
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 0, i64 52, i1 false) #12, !alias.scope !14
  call void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect* nonnull %8, %struct.SkRect* nonnull dereferenceable(16) %15, float %70, float %70) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #12, !noalias !11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12, !noalias !11
  %71 = bitcast %"class.cc::PaintCanvas"* %12 to void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)***
  %72 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)**, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)** %72, i64 19
  %74 = load void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %class.SkRRect*, i32, i1)** %73, align 8
  call void %74(%"class.cc::PaintCanvas"* %12, %class.SkRRect* nonnull dereferenceable(52) %8, i32 0, i1 zeroext true) #12
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %13) #12
  %75 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %11, align 8
  %76 = bitcast %"class.cc::PaintCanvas"* %75 to void (%"class.cc::PaintCanvas"*, i32, i32)***
  %77 = load void (%"class.cc::PaintCanvas"*, i32, i32)**, void (%"class.cc::PaintCanvas"*, i32, i32)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, i32, i32)*, void (%"class.cc::PaintCanvas"*, i32, i32)** %77, i64 25
  %79 = load void (%"class.cc::PaintCanvas"*, i32, i32)*, void (%"class.cc::PaintCanvas"*, i32, i32)** %78, align 8
  call void %79(%"class.cc::PaintCanvas"* %75, i32 0, i32 1) #12
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views12BubbleBorder19PaintNoShadowLegacyERKNS_4ViewEPN3gfx6CanvasE(%"class.views::BubbleBorder"* nocapture readonly, %"class.views::View"* dereferenceable(664), %"class.gfx::Canvas"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::RectF", align 4
  %5 = alloca <4 x float>, align 16
  %6 = bitcast <4 x float>* %5 to %"class.gfx::InsetsF"*
  %7 = alloca %"class.cc::PaintFlags", align 8
  %8 = bitcast %"class.gfx::RectF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1, i32 1
  %13 = tail call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %1) #12
  %14 = extractvalue { i64, i64 } %13, 0
  %15 = trunc i64 %14 to i32
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  %18 = extractvalue { i64, i64 } %13, 1
  %19 = sitofp i32 %15 to float
  %20 = sitofp i32 %17 to float
  %21 = trunc i64 %18 to i32
  %22 = lshr i64 %18, 32
  %23 = trunc i64 %22 to i32
  store float %19, float* %9, align 4
  store float %20, float* %10, align 4
  %24 = icmp sgt i32 %21, 0
  %25 = select i1 %24, i32 %21, i32 0
  %26 = sitofp i32 %25 to float
  store float %26, float* %11, align 4
  %27 = icmp sgt i32 %23, 0
  %28 = select i1 %27, i32 %23, i32 0
  %29 = sitofp i32 %28 to float
  store float %29, float* %12, align 4
  %30 = bitcast <4 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #12
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, <4 x float>* %5, align 16
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %4, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #12
  %31 = bitcast %"class.cc::PaintFlags"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %31) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK5views16BubbleBackground5PaintEPN3gfx6CanvasEPNS_4ViewE.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %7) #12
  %32 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %7, i64 0, i32 10
  %33 = bitcast %union.anon.247* %32 to i16*
  %34 = load i16, i16* %33, align 8
  %35 = and i16 %34, -194
  %36 = or i16 %35, 65
  store i16 %36, i16* %33, align 8
  %37 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %7, i64 0, i32 7
  store float 1.000000e+00, float* %37, align 4
  %38 = call %"class.ui::NativeTheme"* @_ZNK5views4View14GetNativeThemeEv(%"class.views::View"* %1) #12
  %39 = call i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"* %38, i32 123, i32 0) #12
  %40 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %7, i64 0, i32 6
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = sitofp i32 %42 to float
  call void @_ZN3gfx6Canvas13DrawRoundRectERKNS_5RectFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %2, %"class.gfx::RectF"* nonnull dereferenceable(16) %4, float %43, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %7) #12
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %31) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  ret void
}

declare void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"*, %"class.gfx::Canvas"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views12BubbleBorder13GetClientRectERKNS_4ViewE(%class.SkRRect* noalias sret, %"class.views::BubbleBorder"*, %"class.views::View"* dereferenceable(664)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::RectF", align 4
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %"class.gfx::InsetsF"*
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %9 = bitcast %"class.gfx::RectF"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %4, i64 0, i32 1, i32 1
  %14 = tail call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %2) #12
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = trunc i64 %15 to i32
  %17 = lshr i64 %15, 32
  %18 = trunc i64 %17 to i32
  %19 = extractvalue { i64, i64 } %14, 1
  %20 = sitofp i32 %16 to float
  %21 = sitofp i32 %18 to float
  %22 = trunc i64 %19 to i32
  %23 = lshr i64 %19, 32
  %24 = trunc i64 %23 to i32
  store float %20, float* %10, align 4
  store float %21, float* %11, align 4
  %25 = icmp sgt i32 %22, 0
  %26 = select i1 %25, i32 %22, i32 0
  %27 = sitofp i32 %26 to float
  store float %27, float* %12, align 4
  %28 = icmp sgt i32 %24, 0
  %29 = select i1 %28, i32 %24, i32 0
  %30 = sitofp i32 %29 to float
  store float %30, float* %13, align 4
  %31 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #12
  %32 = bitcast %"class.views::BubbleBorder"* %1 to { i64, i64 } (%"class.views::BubbleBorder"*)***
  %33 = load { i64, i64 } (%"class.views::BubbleBorder"*)**, { i64, i64 } (%"class.views::BubbleBorder"*)*** %32, align 8
  %34 = getelementptr inbounds { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %33, i64 3
  %35 = load { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %34, align 8
  %36 = tail call { i64, i64 } %35(%"class.views::BubbleBorder"* %1) #12
  %37 = extractvalue { i64, i64 } %36, 0
  %38 = trunc i64 %37 to i32
  %39 = lshr i64 %37, 32
  %40 = trunc i64 %39 to i32
  %41 = extractvalue { i64, i64 } %36, 1
  %42 = sitofp i32 %38 to float
  %43 = sitofp i32 %40 to float
  %44 = trunc i64 %41 to i32
  %45 = sitofp i32 %44 to float
  %46 = lshr i64 %41, 32
  %47 = trunc i64 %46 to i32
  %48 = sitofp i32 %47 to float
  %49 = insertelement <2 x float> undef, float %42, i32 0
  %50 = insertelement <2 x float> %49, float %43, i32 1
  %51 = insertelement <2 x float> undef, float %45, i32 0
  %52 = insertelement <2 x float> %51, float %48, i32 1
  %53 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %50, <2 x float>* %53, align 8
  %54 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %52, <2 x float>* %54, align 8
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %4, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #12
  %55 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #12
  %56 = call { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* nonnull dereferenceable(16) %4) #12
  %57 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %58 = extractvalue { <2 x float>, <2 x float> } %56, 0
  store <2 x float> %58, <2 x float>* %57, align 8
  %59 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %60 = extractvalue { <2 x float>, <2 x float> } %56, 1
  store <2 x float> %60, <2 x float>* %59, align 8
  %61 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %1, i64 0, i32 3
  %62 = load i32, i32* %61, align 4
  %63 = sitofp i32 %62 to float
  %64 = bitcast %class.SkRRect* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 52, i1 false) #12, !alias.scope !17
  call void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect* %0, %struct.SkRect* nonnull dereferenceable(16) %8, float %63, float %63) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret void
}

declare %"class.ui::NativeTheme"* @_ZNK5views4View14GetNativeThemeEv(%"class.views::View"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5views12BubbleBorder9GetInsetsEv(%"class.views::BubbleBorder"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to { i64, i64 }*
  %4 = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %union.anon.4* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = and i64 %11, -4294967296
  %13 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %14 = bitcast i32* %13 to i64*
  %15 = load i64, i64* %14, align 4
  br label %50

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %20 [
    i32 2, label %50
    i32 0, label %19
  ]

19:                                               ; preds = %16
  br label %50

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %0, i64 0, i32 5
  %22 = bitcast %"class.absl::optional"* %21 to i64*
  %23 = load i64, i64* %22, align 4
  %24 = trunc i64 %23 to i8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %20
  %27 = bitcast { i64, i64 }* %4 to %"class.gfx::Insets"*
  %28 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #12
  %29 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEE(%"class.ui::NativeTheme"* null, i64 %23) #12
  %30 = tail call { i64, i64 } @_ZN3gfx11ShadowValue9GetMarginERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector"* dereferenceable(24) %29) #12
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %32 = extractvalue { i64, i64 } %30, 0
  store i64 %32, i64* %31, align 8
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %34 = extractvalue { i64, i64 } %30, 1
  store i64 %34, i64* %33, align 8
  %35 = call { i64, i64 } @_ZNK3gfx6InsetsngEv(%"class.gfx::Insets"* nonnull %27) #12
  %36 = extractvalue { i64, i64 } %35, 0
  %37 = extractvalue { i64, i64 } %35, 1
  br label %45

38:                                               ; preds = %20
  %39 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #12
  %40 = bitcast <2 x i64>* %2 to %"class.gfx::Insets"*
  %41 = getelementptr inbounds <2 x i64>, <2 x i64>* %2, i64 0, i64 0
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store <2 x i64> <i64 30064771079, i64 30064771079>, <2 x i64>* %2, align 16
  call void @_ZN3gfx6InsetspLERKS0_(%"class.gfx::Insets"* nonnull %40, %"class.gfx::Insets"* nonnull dereferenceable(16) @_ZZN5views12BubbleBorder24GetBorderAndShadowInsetsEN4absl8optionalIiEEE6offset) #12
  %43 = load i64, i64* %41, align 16
  %44 = load i64, i64* %42, align 8
  br label %45

45:                                               ; preds = %26, %38
  %46 = phi i8* [ %28, %26 ], [ %39, %38 ]
  %47 = phi i64 [ %36, %26 ], [ %43, %38 ]
  %48 = phi i64 [ %37, %26 ], [ %44, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #12
  %49 = and i64 %47, -4294967296
  br label %50

50:                                               ; preds = %16, %45, %19, %8
  %51 = phi i64 [ %11, %8 ], [ %47, %45 ], [ 1, %19 ], [ 0, %16 ]
  %52 = phi i64 [ %12, %8 ], [ %49, %45 ], [ 4294967296, %19 ], [ 0, %16 ]
  %53 = phi i64 [ %15, %8 ], [ %48, %45 ], [ 4294967297, %19 ], [ 0, %16 ]
  %54 = and i64 %51, 4294967295
  %55 = or i64 %52, %54
  %56 = insertvalue { i64, i64 } undef, i64 %55, 0
  %57 = insertvalue { i64, i64 } %56, i64 %53, 1
  ret { i64, i64 } %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views12BubbleBorder14GetMinimumSizeEv(%"class.views::BubbleBorder"*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  %4 = bitcast i64* %2 to %"class.gfx::Size"*
  store i64 0, i64* %2, align 8
  %5 = bitcast %"class.views::BubbleBorder"* %0 to { i64, i64 } (%"class.views::BubbleBorder"*)***
  %6 = load { i64, i64 } (%"class.views::BubbleBorder"*)**, { i64, i64 } (%"class.views::BubbleBorder"*)*** %5, align 8
  %7 = getelementptr inbounds { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %6, i64 3
  %8 = load { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %7, align 8
  %9 = tail call { i64, i64 } %8(%"class.views::BubbleBorder"* %0) #12
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = extractvalue { i64, i64 } %9, 1
  %15 = lshr i64 %14, 32
  %16 = trunc i64 %15 to i32
  %17 = add nsw i32 %16, %13
  %18 = trunc i64 %14 to i32
  %19 = add nsw i32 %18, %11
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %4, i32 %17, i32 %19) #12
  %20 = load i64, i64* %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret i64 %20
}

declare i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

declare void @_ZN3gfx11ShadowValue16MakeShadowValuesEijj(%"class.std::__1::vector"* sret, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.cc::PaintFlags"* @_ZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEE(%"class.ui::NativeTheme"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::PaintFlags", align 8
  %4 = alloca %class.sk_sp.245, align 8
  %5 = alloca %"struct.std::__1::pair.260", align 8
  %6 = trunc i64 %1 to i8
  %7 = lshr i64 %1, 32
  %8 = trunc i64 %7 to i32
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !2

11:                                               ; preds = %2
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map) #12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8), i8 0, i64 16, i1 false) #12
  store i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8), i8** bitcast (%"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map) #12
  br label %15

15:                                               ; preds = %11, %14, %2
  %16 = icmp eq i8 %6, 0
  %17 = select i1 %16, i32 -1, i32 %8
  %18 = tail call i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"* %0, i32 79, i32 0) #12
  %19 = load %"class.std::__1::__tree_node.274"*, %"class.std::__1::__tree_node.274"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node.274"**), align 8
  %20 = icmp eq %"class.std::__1::__tree_node.274"* %19, null
  br i1 %20, label %101, label %21

21:                                               ; preds = %15, %41
  %22 = phi %"class.std::__1::__tree_end_node"* [ %43, %41 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %15 ]
  %23 = phi %"class.std::__1::__tree_node.274"* [ %44, %41 ], [ %19, %15 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, %17
  br i1 %26, label %27, label %30

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %23, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::__tree_node_base"** %28 to %"class.std::__1::__tree_node.274"**
  br label %41

30:                                               ; preds = %21
  %31 = icmp slt i32 %17, %25
  br i1 %31, label %38, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %34, %18
  %36 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %23, i64 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::__tree_node_base"** %36 to %"class.std::__1::__tree_node.274"**
  br i1 %35, label %41, label %38

38:                                               ; preds = %32, %30
  %39 = bitcast %"class.std::__1::__tree_node.274"* %23 to %"class.std::__1::__tree_node.274"**
  %40 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %23, i64 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %38, %32, %27
  %42 = phi %"class.std::__1::__tree_node.274"** [ %39, %38 ], [ %29, %27 ], [ %37, %32 ]
  %43 = phi %"class.std::__1::__tree_end_node"* [ %40, %38 ], [ %22, %27 ], [ %22, %32 ]
  %44 = load %"class.std::__1::__tree_node.274"*, %"class.std::__1::__tree_node.274"** %42, align 8
  %45 = icmp eq %"class.std::__1::__tree_node.274"* %44, null
  br i1 %45, label %46, label %21

46:                                               ; preds = %41
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %43, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %47, label %101, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 4
  %50 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"struct.std::__1::__value_type.275"*
  %51 = bitcast %"class.std::__1::__tree_end_node"* %49 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %17, %52
  br i1 %53, label %101, label %54

54:                                               ; preds = %48
  %55 = icmp slt i32 %52, %17
  br i1 %55, label %60, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"struct.std::__1::__value_type.275", %"struct.std::__1::__value_type.275"* %50, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp ult i32 %18, %58
  br i1 %59, label %101, label %60

60:                                               ; preds = %54, %56
  br label %61

61:                                               ; preds = %60, %81
  %62 = phi %"class.std::__1::__tree_end_node"* [ %83, %81 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %60 ]
  %63 = phi %"class.std::__1::__tree_node.274"* [ %84, %81 ], [ %19, %60 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp slt i32 %65, %17
  br i1 %66, label %67, label %70

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %63, i64 0, i32 0, i32 1
  %69 = bitcast %"class.std::__1::__tree_node_base"** %68 to %"class.std::__1::__tree_node.274"**
  br label %81

70:                                               ; preds = %61
  %71 = icmp slt i32 %17, %65
  br i1 %71, label %78, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp ult i32 %74, %18
  %76 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %63, i64 0, i32 0, i32 1
  %77 = bitcast %"class.std::__1::__tree_node_base"** %76 to %"class.std::__1::__tree_node.274"**
  br i1 %75, label %81, label %78

78:                                               ; preds = %72, %70
  %79 = bitcast %"class.std::__1::__tree_node.274"* %63 to %"class.std::__1::__tree_node.274"**
  %80 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %63, i64 0, i32 0, i32 0
  br label %81

81:                                               ; preds = %78, %72, %67
  %82 = phi %"class.std::__1::__tree_node.274"** [ %79, %78 ], [ %69, %67 ], [ %77, %72 ]
  %83 = phi %"class.std::__1::__tree_end_node"* [ %80, %78 ], [ %62, %67 ], [ %62, %72 ]
  %84 = load %"class.std::__1::__tree_node.274"*, %"class.std::__1::__tree_node.274"** %82, align 8
  %85 = icmp eq %"class.std::__1::__tree_node.274"* %84, null
  br i1 %85, label %86, label %61

86:                                               ; preds = %81
  %87 = icmp eq %"class.std::__1::__tree_end_node"* %83, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %87, label %100, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %83, i64 4
  %90 = bitcast %"class.std::__1::__tree_end_node"* %89 to %"struct.std::__1::__value_type.275"*
  %91 = bitcast %"class.std::__1::__tree_end_node"* %89 to i32*
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %17, %92
  br i1 %93, label %100, label %94

94:                                               ; preds = %88
  %95 = icmp slt i32 %92, %17
  br i1 %95, label %195, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"struct.std::__1::__value_type.275", %"struct.std::__1::__value_type.275"* %90, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp ult i32 %18, %98
  br i1 %99, label %100, label %195

100:                                              ; preds = %96, %88, %86
  br label %195

101:                                              ; preds = %56, %48, %46, %15
  %102 = bitcast %"class.cc::PaintFlags"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %102) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %102, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK5views16BubbleBackground5PaintEPN3gfx6CanvasEPNS_4ViewE.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %3) #12
  %103 = call i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"* %0, i32 126, i32 0) #12
  %104 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %3, i64 0, i32 6
  store i32 %103, i32* %104, align 8
  %105 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %3, i64 0, i32 10
  %106 = bitcast %union.anon.247* %105 to i16*
  %107 = load i16, i16* %106, align 8
  %108 = or i16 %107, 1
  store i16 %108, i16* %106, align 8
  %109 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN5views12BubbleBorder15GetShadowValuesEPKN2ui11NativeThemeEN4absl8optionalIiEE(%"class.ui::NativeTheme"* %0, i64 %1)
  call void @_ZN3gfx22CreateShadowDrawLooperERKNSt3__16vectorINS_11ShadowValueENS0_9allocatorIS2_EEEE(%class.sk_sp.245* nonnull sret %4, %"class.std::__1::vector"* dereferenceable(24) %109) #12
  %110 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %3, i64 0, i32 4
  %111 = getelementptr inbounds %class.sk_sp.245, %class.sk_sp.245* %4, i64 0, i32 0
  %112 = bitcast %class.sk_sp.245* %4 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.SkDrawLooper* null, %class.SkDrawLooper** %111, align 8
  %114 = getelementptr inbounds %class.sk_sp.245, %class.sk_sp.245* %110, i64 0, i32 0
  %115 = load %class.SkDrawLooper*, %class.SkDrawLooper** %114, align 8
  %116 = bitcast %class.sk_sp.245* %110 to i64*
  store i64 %113, i64* %116, align 8
  %117 = icmp eq %class.SkDrawLooper* %115, null
  br i1 %117, label %128, label %118

118:                                              ; preds = %101
  %119 = getelementptr inbounds %class.SkDrawLooper, %class.SkDrawLooper* %115, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = atomicrmw add i32* %119, i32 -1 acq_rel
  %121 = icmp eq i32 %120, 1
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = bitcast %class.SkDrawLooper* %115 to %class.SkRefCntBase*
  %124 = bitcast %class.SkDrawLooper* %115 to void (%class.SkRefCntBase*)***
  %125 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %124, align 8
  %126 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %125, i64 2
  %127 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %126, align 8
  call void %127(%class.SkRefCntBase* nonnull %123) #12
  br label %128

128:                                              ; preds = %101, %118, %122
  %129 = load %class.SkDrawLooper*, %class.SkDrawLooper** %111, align 8
  %130 = icmp eq %class.SkDrawLooper* %129, null
  br i1 %130, label %141, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %class.SkDrawLooper, %class.SkDrawLooper* %129, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = atomicrmw add i32* %132, i32 -1 acq_rel
  %134 = icmp eq i32 %133, 1
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = bitcast %class.SkDrawLooper* %129 to %class.SkRefCntBase*
  %137 = bitcast %class.SkDrawLooper* %129 to void (%class.SkRefCntBase*)***
  %138 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %137, align 8
  %139 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %138, i64 2
  %140 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %139, align 8
  call void %140(%class.SkRefCntBase* nonnull %136) #12
  br label %141

141:                                              ; preds = %128, %131, %135
  %142 = bitcast %"struct.std::__1::pair.260"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %142) #12
  %143 = bitcast %"struct.std::__1::pair.260"* %5 to i64*
  %144 = zext i32 %18 to i64
  %145 = shl nuw i64 %144, 32
  %146 = zext i32 %17 to i64
  %147 = or i64 %145, %146
  store i64 %147, i64* %143, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.260", %"struct.std::__1::pair.260"* %5, i64 0, i32 1
  call void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"* %148, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %3) #12
  %149 = getelementptr inbounds %"struct.std::__1::pair.260", %"struct.std::__1::pair.260"* %5, i64 0, i32 0
  %150 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJijEEEN2cc10PaintFlagsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_S5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.252"* bitcast (%"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map to %"class.std::__1::__tree.252"*), %"class.std::__1::tuple"* nonnull dereferenceable(8) %149, %"struct.std::__1::pair.260"* nonnull dereferenceable(80) %5) #12
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %148) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %142) #12
  %151 = load %"class.std::__1::__tree_node.274"*, %"class.std::__1::__tree_node.274"** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_node.274"**), align 8
  %152 = icmp eq %"class.std::__1::__tree_node.274"* %151, null
  br i1 %152, label %192, label %153

153:                                              ; preds = %141, %173
  %154 = phi %"class.std::__1::__tree_end_node"* [ %175, %173 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %141 ]
  %155 = phi %"class.std::__1::__tree_node.274"* [ %176, %173 ], [ %151, %141 ]
  %156 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp slt i32 %157, %17
  br i1 %158, label %159, label %162

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %155, i64 0, i32 0, i32 1
  %161 = bitcast %"class.std::__1::__tree_node_base"** %160 to %"class.std::__1::__tree_node.274"**
  br label %173

162:                                              ; preds = %153
  %163 = icmp slt i32 %17, %157
  br i1 %163, label %170, label %164

164:                                              ; preds = %162
  %165 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp ult i32 %166, %18
  %168 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %155, i64 0, i32 0, i32 1
  %169 = bitcast %"class.std::__1::__tree_node_base"** %168 to %"class.std::__1::__tree_node.274"**
  br i1 %167, label %173, label %170

170:                                              ; preds = %164, %162
  %171 = bitcast %"class.std::__1::__tree_node.274"* %155 to %"class.std::__1::__tree_node.274"**
  %172 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %155, i64 0, i32 0, i32 0
  br label %173

173:                                              ; preds = %170, %164, %159
  %174 = phi %"class.std::__1::__tree_node.274"** [ %171, %170 ], [ %161, %159 ], [ %169, %164 ]
  %175 = phi %"class.std::__1::__tree_end_node"* [ %172, %170 ], [ %154, %159 ], [ %154, %164 ]
  %176 = load %"class.std::__1::__tree_node.274"*, %"class.std::__1::__tree_node.274"** %174, align 8
  %177 = icmp eq %"class.std::__1::__tree_node.274"* %176, null
  br i1 %177, label %178, label %153

178:                                              ; preds = %173
  %179 = icmp eq %"class.std::__1::__tree_end_node"* %175, bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*)
  br i1 %179, label %192, label %180

180:                                              ; preds = %178
  %181 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 4
  %182 = bitcast %"class.std::__1::__tree_end_node"* %181 to %"struct.std::__1::__value_type.275"*
  %183 = bitcast %"class.std::__1::__tree_end_node"* %181 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = icmp slt i32 %17, %184
  br i1 %185, label %192, label %186

186:                                              ; preds = %180
  %187 = icmp slt i32 %184, %17
  br i1 %187, label %193, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"struct.std::__1::__value_type.275", %"struct.std::__1::__value_type.275"* %182, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = icmp ult i32 %18, %190
  br i1 %191, label %192, label %193

192:                                              ; preds = %188, %180, %178, %141
  br label %193

193:                                              ; preds = %186, %188, %192
  %194 = phi %"class.std::__1::__tree_end_node"* [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %192 ], [ %175, %188 ], [ %175, %186 ]
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %102) #12
  br label %195

195:                                              ; preds = %100, %96, %94, %193
  %196 = phi %"class.std::__1::__tree_end_node"* [ %194, %193 ], [ bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.248", %"class.base::NoDestructor.248"* @_ZZN5views12BubbleBorder23GetBorderAndShadowFlagsEPKN2ui11NativeThemeEN4absl8optionalIiEEE8flag_map, i64 0, i32 0, i64 8) to %"class.std::__1::__tree_end_node"*), %100 ], [ %83, %96 ], [ %83, %94 ]
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 5
  %198 = bitcast %"class.std::__1::__tree_end_node"* %197 to %"class.cc::PaintFlags"*
  ret %"class.cc::PaintFlags"* %198
}

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #1

declare void @_ZN3gfx22CreateShadowDrawLooperERKNSt3__16vectorINS_11ShadowValueENS0_9allocatorIS2_EEEE(%class.sk_sp.245* sret, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #2

declare void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"*, i32, i32) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"*) local_unnamed_addr #1

declare void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"*, %"class.gfx::InsetsF"* dereferenceable(16)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN3gfx13RectFToSkRectERKNS_5RectFE(%"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gfx6Canvas13DrawRoundRectERKNS_5RectFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %"class.gfx::RectF"* dereferenceable(16), float, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views16BubbleBackground5PaintEPN3gfx6CanvasEPNS_4ViewE(%"class.views::BubbleBackground"* nocapture readonly, %"class.gfx::Canvas"*, %"class.views::View"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::PaintFlags", align 8
  %5 = alloca %"class.gfx::RectF", align 4
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.gfx::InsetsF"*
  %8 = bitcast %"class.cc::PaintFlags"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZNK5views16BubbleBackground5PaintEPN3gfx6CanvasEPNS_4ViewE.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %4) #12
  %9 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %4, i64 0, i32 10
  %10 = bitcast %union.anon.247* %9 to i16*
  %11 = load i16, i16* %10, align 8
  %12 = and i16 %11, -194
  %13 = or i16 %12, 1
  store i16 %13, i16* %10, align 8
  %14 = getelementptr inbounds %"class.views::BubbleBackground", %"class.views::BubbleBackground"* %0, i64 0, i32 1
  %15 = load %"class.views::BubbleBorder"*, %"class.views::BubbleBorder"** %14, align 8
  %16 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %15, i64 0, i32 6
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %4, i64 0, i32 6
  store i32 %17, i32* %18, align 8
  %19 = bitcast %"class.gfx::RectF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %5, i64 0, i32 1, i32 1
  %24 = call { i64, i64 } @_ZNK5views4View14GetLocalBoundsEv(%"class.views::View"* %2) #12
  %25 = extractvalue { i64, i64 } %24, 0
  %26 = trunc i64 %25 to i32
  %27 = lshr i64 %25, 32
  %28 = trunc i64 %27 to i32
  %29 = extractvalue { i64, i64 } %24, 1
  %30 = sitofp i32 %26 to float
  %31 = sitofp i32 %28 to float
  %32 = trunc i64 %29 to i32
  %33 = lshr i64 %29, 32
  %34 = trunc i64 %33 to i32
  store float %30, float* %20, align 4
  store float %31, float* %21, align 4
  %35 = icmp sgt i32 %32, 0
  %36 = select i1 %35, i32 %32, i32 0
  %37 = sitofp i32 %36 to float
  store float %37, float* %22, align 4
  %38 = icmp sgt i32 %34, 0
  %39 = select i1 %38, i32 %34, i32 0
  %40 = sitofp i32 %39 to float
  store float %40, float* %23, align 4
  %41 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #12
  %42 = load %"class.views::BubbleBorder"*, %"class.views::BubbleBorder"** %14, align 8
  %43 = bitcast %"class.views::BubbleBorder"* %42 to { i64, i64 } (%"class.views::BubbleBorder"*)***
  %44 = load { i64, i64 } (%"class.views::BubbleBorder"*)**, { i64, i64 } (%"class.views::BubbleBorder"*)*** %43, align 8
  %45 = getelementptr inbounds { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %44, i64 3
  %46 = load { i64, i64 } (%"class.views::BubbleBorder"*)*, { i64, i64 } (%"class.views::BubbleBorder"*)** %45, align 8
  %47 = call { i64, i64 } %46(%"class.views::BubbleBorder"* %42) #12
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = trunc i64 %50 to i32
  %52 = extractvalue { i64, i64 } %47, 1
  %53 = sitofp i32 %49 to float
  %54 = sitofp i32 %51 to float
  %55 = trunc i64 %52 to i32
  %56 = sitofp i32 %55 to float
  %57 = lshr i64 %52, 32
  %58 = trunc i64 %57 to i32
  %59 = sitofp i32 %58 to float
  %60 = insertelement <2 x float> undef, float %53, i32 0
  %61 = insertelement <2 x float> %60, float %54, i32 1
  %62 = insertelement <2 x float> undef, float %56, i32 0
  %63 = insertelement <2 x float> %62, float %59, i32 1
  %64 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %61, <2 x float>* %64, align 8
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %63, <2 x float>* %65, align 8
  call void @_ZN3gfx5RectF5InsetERKNS_7InsetsFE(%"class.gfx::RectF"* nonnull %5, %"class.gfx::InsetsF"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #12
  %66 = load %"class.views::BubbleBorder"*, %"class.views::BubbleBorder"** %14, align 8
  %67 = getelementptr inbounds %"class.views::BubbleBorder", %"class.views::BubbleBorder"* %66, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = sitofp i32 %68 to float
  call void @_ZN3gfx6Canvas13DrawRoundRectERKNS_5RectFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::RectF"* nonnull dereferenceable(16) %5, float %69, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5views10BackgroundD2Ev(%"class.views::Background"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views16BubbleBackgroundD0Ev(%"class.views::BubbleBackground"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.views::BubbleBackground"* %0 to %"class.views::Background"*
  tail call void @_ZN5views10BackgroundD2Ev(%"class.views::Background"* %2) #12
  %3 = bitcast %"class.views::BubbleBackground"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #13
  ret void
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx6InsetspLERKS0_(%"class.gfx::Insets"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = select i1 %7, i32 -2147483648, i32 2147483647
  %9 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %6) #12
  %10 = extractvalue { i32, i1 } %9, 1
  %11 = extractvalue { i32, i1 } %9, 0
  %12 = select i1 %10, i32 %8, i32 %11, !prof !4
  store i32 %12, i32* %3, align 4
  %13 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %16) #12
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !4
  store i32 %22, i32* %13, align 4
  %23 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %26) #12
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 %28, i32 %31, !prof !4
  %33 = icmp sgt i32 %12, 0
  %34 = icmp sgt i32 %32, 0
  %35 = and i1 %33, %34
  %36 = sub nuw nsw i32 2147483647, %12
  %37 = icmp ult i32 %36, %32
  %38 = and i1 %37, %35
  br i1 %38, label %46, label %39

39:                                               ; preds = %2
  %40 = and i32 %32, %12
  %41 = icmp slt i32 %40, 0
  %42 = sub nsw i32 -2147483648, %12
  %43 = icmp sgt i32 %42, %32
  %44 = and i1 %43, %41
  %45 = select i1 %44, i32 %42, i32 %32
  br label %46

46:                                               ; preds = %2, %39
  %47 = phi i32 [ %45, %39 ], [ %36, %2 ]
  store i32 %47, i32* %23, align 4
  %48 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %51) #12
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !4
  %58 = icmp sgt i32 %22, 0
  %59 = icmp sgt i32 %57, 0
  %60 = and i1 %58, %59
  %61 = sub nuw nsw i32 2147483647, %22
  %62 = icmp ult i32 %61, %57
  %63 = and i1 %62, %60
  br i1 %63, label %71, label %64

64:                                               ; preds = %46
  %65 = and i32 %57, %22
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 -2147483648, %22
  %68 = icmp sgt i32 %67, %57
  %69 = and i1 %68, %66
  %70 = select i1 %69, i32 %67, i32 %57
  br label %71

71:                                               ; preds = %46, %64
  %72 = phi i32 [ %70, %64 ], [ %61, %46 ]
  store i32 %72, i32* %48, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #9

declare i64 @_ZNK3gfx4Rect11CenterPointEv(%"class.gfx::Rect"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN2cc10PaintFlagsC1ERKS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

declare void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect*, %struct.SkRect* dereferenceable(16), float, float) local_unnamed_addr #1

declare void @_ZNK7SkRRect5insetEffPS_(%class.SkRRect*, float, float, %class.SkRRect*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJijEEENS_6vectorIN3gfx11ShadowValueENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_S9_EEEEENSI_INS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.202"*, %"class.std::__1::tuple"* dereferenceable(8), %"struct.std::__1::pair"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.202", %"class.std::__1::__tree.202"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %46, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.202", %"class.std::__1::__tree.202"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %42, %8
  %15 = phi %"class.std::__1::__tree_node"* [ %45, %42 ], [ %6, %8 ]
  %16 = phi %"class.std::__1::__tree_node_base"** [ %44, %42 ], [ %9, %8 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %11, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = icmp slt i32 %18, %11
  br i1 %21, label %34, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %13, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %22, %14
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %48

32:                                               ; preds = %22
  %33 = icmp ult i32 %24, %13
  br i1 %33, label %34, label %40

34:                                               ; preds = %32, %20
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %48

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %48

42:                                               ; preds = %34, %26
  %43 = phi %"class.std::__1::__tree_node_base"* [ %28, %26 ], [ %36, %34 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %27, %26 ], [ %35, %34 ]
  %45 = bitcast %"class.std::__1::__tree_node_base"* %43 to %"class.std::__1::__tree_node"*
  br label %14

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %48

48:                                               ; preds = %30, %38, %40, %46
  %49 = phi %"class.std::__1::__tree_end_node"* [ %4, %46 ], [ %31, %30 ], [ %39, %38 ], [ %41, %40 ]
  %50 = phi %"class.std::__1::__tree_node_base"** [ %47, %46 ], [ %27, %30 ], [ %35, %38 ], [ %16, %40 ]
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node"**
  %52 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node"* %52, null
  br i1 %53, label %54, label %88

54:                                               ; preds = %48
  %55 = tail call i8* @_Znwm(i64 64) #13, !noalias !20
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1
  %58 = bitcast %"struct.std::__1::pair"* %2 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8, !noalias !20
  %60 = bitcast i8* %56 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %60, align 8, !noalias !20
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %2, i64 0, i32 1, i32 0, i32 1
  %62 = getelementptr inbounds i8, i8* %55, i64 48
  %63 = bitcast %"class.gfx::ShadowValue"** %61 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 8, !noalias !20
  %65 = bitcast i8* %62 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %65, align 8, !noalias !20
  %66 = bitcast %"class.std::__1::vector"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #12, !noalias !20
  %67 = bitcast i8* %55 to %"class.std::__1::__tree_node"*
  %68 = bitcast i8* %55 to %"class.std::__1::__tree_node_base"*
  %69 = getelementptr inbounds i8, i8* %55, i64 16
  %70 = bitcast i8* %69 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %70, align 8
  %71 = bitcast %"class.std::__1::__tree_node_base"** %50 to i8**
  store i8* %55, i8** %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::__tree.202", %"class.std::__1::__tree.202"* %0, i64 0, i32 0
  %73 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = icmp eq %"class.std::__1::__tree_node_base"* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %54
  %78 = ptrtoint %"class.std::__1::__tree_node_base"* %75 to i64
  %79 = bitcast %"class.std::__1::__tree.202"* %0 to i64*
  store i64 %78, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br label %81

81:                                               ; preds = %77, %54
  %82 = phi %"class.std::__1::__tree_node_base"* [ %68, %54 ], [ %80, %77 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree.202", %"class.std::__1::__tree.202"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %84 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %83, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %84, %"class.std::__1::__tree_node_base"* %82) #12
  %85 = getelementptr inbounds %"class.std::__1::__tree.202", %"class.std::__1::__tree.202"* %0, i64 0, i32 2, i32 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %85, align 8
  br label %88

88:                                               ; preds = %81, %48
  %89 = phi i8 [ 1, %81 ], [ 0, %48 ]
  %90 = phi %"class.std::__1::__tree_node"* [ %67, %81 ], [ %52, %48 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 0, i32 0
  %92 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %91, 0
  %93 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %92, i8 %89, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJijEEEN2cc10PaintFlagsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS3_JNS_4pairIKS3_S5_EEEEENSF_INS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.252"*, %"class.std::__1::tuple"* dereferenceable(8), %"struct.std::__1::pair.260"* dereferenceable(80)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.252", %"class.std::__1::__tree.252"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.274"**
  %6 = load %"class.std::__1::__tree_node.274"*, %"class.std::__1::__tree_node.274"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.274"* %6, null
  br i1 %7, label %46, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.252", %"class.std::__1::__tree.252"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %42, %8
  %15 = phi %"class.std::__1::__tree_node.274"* [ %45, %42 ], [ %6, %8 ]
  %16 = phi %"class.std::__1::__tree_node_base"** [ %44, %42 ], [ %9, %8 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %11, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %14
  %21 = icmp slt i32 %18, %11
  br i1 %21, label %34, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp ult i32 %13, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %22, %14
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %15, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %42

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %15, i64 0, i32 0, i32 0
  br label %48

32:                                               ; preds = %22
  %33 = icmp ult i32 %24, %13
  br i1 %33, label %34, label %40

34:                                               ; preds = %32, %20
  %35 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %15, i64 0, i32 0, i32 1
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %15, i64 0, i32 0, i32 0
  br label %48

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %15, i64 0, i32 0, i32 0
  br label %48

42:                                               ; preds = %34, %26
  %43 = phi %"class.std::__1::__tree_node_base"* [ %28, %26 ], [ %36, %34 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %27, %26 ], [ %35, %34 ]
  %45 = bitcast %"class.std::__1::__tree_node_base"* %43 to %"class.std::__1::__tree_node.274"*
  br label %14

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %48

48:                                               ; preds = %30, %38, %40, %46
  %49 = phi %"class.std::__1::__tree_end_node"* [ %4, %46 ], [ %31, %30 ], [ %39, %38 ], [ %41, %40 ]
  %50 = phi %"class.std::__1::__tree_node_base"** [ %47, %46 ], [ %27, %30 ], [ %35, %38 ], [ %16, %40 ]
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node.274"**
  %52 = load %"class.std::__1::__tree_node.274"*, %"class.std::__1::__tree_node.274"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node.274"* %52, null
  br i1 %53, label %54, label %84

54:                                               ; preds = %48
  %55 = tail call i8* @_Znwm(i64 112) #13, !noalias !23
  %56 = getelementptr inbounds i8, i8* %55, i64 32
  %57 = bitcast %"struct.std::__1::pair.260"* %2 to i64*
  %58 = bitcast i8* %56 to i64*
  %59 = load i64, i64* %57, align 8, !noalias !23
  store i64 %59, i64* %58, align 8, !noalias !23
  %60 = getelementptr inbounds i8, i8* %55, i64 40
  %61 = bitcast i8* %60 to %"class.cc::PaintFlags"*
  %62 = getelementptr inbounds %"struct.std::__1::pair.260", %"struct.std::__1::pair.260"* %2, i64 0, i32 1
  tail call void @_ZN2cc10PaintFlagsC1EOS0_(%"class.cc::PaintFlags"* %61, %"class.cc::PaintFlags"* dereferenceable(72) %62) #12, !noalias !23
  %63 = bitcast i8* %55 to %"class.std::__1::__tree_node.274"*
  %64 = bitcast i8* %55 to %"class.std::__1::__tree_node_base"*
  %65 = getelementptr inbounds i8, i8* %55, i64 16
  %66 = bitcast i8* %65 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #12
  store %"class.std::__1::__tree_end_node"* %49, %"class.std::__1::__tree_end_node"** %66, align 8
  %67 = bitcast %"class.std::__1::__tree_node_base"** %50 to i8**
  store i8* %55, i8** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree.252", %"class.std::__1::__tree.252"* %0, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %68, align 8
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %69, i64 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  %72 = icmp eq %"class.std::__1::__tree_node_base"* %71, null
  br i1 %72, label %77, label %73

73:                                               ; preds = %54
  %74 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %75 = bitcast %"class.std::__1::__tree.252"* %0 to i64*
  store i64 %74, i64* %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br label %77

77:                                               ; preds = %73, %54
  %78 = phi %"class.std::__1::__tree_node_base"* [ %64, %54 ], [ %76, %73 ]
  %79 = getelementptr inbounds %"class.std::__1::__tree.252", %"class.std::__1::__tree.252"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"* %78) #12
  %81 = getelementptr inbounds %"class.std::__1::__tree.252", %"class.std::__1::__tree.252"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %81, align 8
  br label %84

84:                                               ; preds = %77, %48
  %85 = phi i8 [ 1, %77 ], [ 0, %48 ]
  %86 = phi %"class.std::__1::__tree_node.274"* [ %63, %77 ], [ %52, %48 ]
  %87 = getelementptr inbounds %"class.std::__1::__tree_node.274", %"class.std::__1::__tree_node.274"* %86, i64 0, i32 0, i32 0
  %88 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %87, 0
  %89 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %88, i8 %85, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %89
}

declare void @_ZN2cc10PaintFlagsC1EOS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5views12BubbleBorder13GetClientRectERKNS_4ViewE: argument 0"}
!7 = distinct !{!7, !"_ZNK5views12BubbleBorder13GetClientRectERKNS_4ViewE"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZN7SkRRect10MakeRectXYERK6SkRectff: argument 0"}
!10 = distinct !{!10, !"_ZN7SkRRect10MakeRectXYERK6SkRectff"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5views12BubbleBorder13GetClientRectERKNS_4ViewE: argument 0"}
!13 = distinct !{!13, !"_ZNK5views12BubbleBorder13GetClientRectERKNS_4ViewE"}
!14 = !{!15, !12}
!15 = distinct !{!15, !16, !"_ZN7SkRRect10MakeRectXYERK6SkRectff: argument 0"}
!16 = distinct !{!16, !"_ZN7SkRRect10MakeRectXYERK6SkRectff"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN7SkRRect10MakeRectXYERK6SkRectff: argument 0"}
!19 = distinct !{!19, !"_ZN7SkRRect10MakeRectXYERK6SkRectff"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJijEEENS_6vectorIN3gfx11ShadowValueENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE16__construct_nodeIJNS_4pairIKS3_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_ISO_EEEEEEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJijEEENS_6vectorIN3gfx11ShadowValueENS_9allocatorIS6_EEEEEENS_19__map_value_compareIS3_SA_NS_4lessIS3_EELb1EEENS7_ISA_EEE16__construct_nodeIJNS_4pairIKS3_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS7_ISO_EEEEEEDpOT_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJijEEEN2cc10PaintFlagsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIKS3_S5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__16__treeINS_12__value_typeINS_5tupleIJijEEEN2cc10PaintFlagsEEENS_19__map_value_compareIS3_S6_NS_4lessIS3_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJNS_4pairIKS3_S5_EEEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISL_EEEEEEDpOT_"}
