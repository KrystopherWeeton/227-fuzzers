; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/transparent_mode.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/transparent_mode.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::TransparentMode" = type { i32 (...)** }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.webrtc::TransparentModeImpl" = type { %"class.webrtc::TransparentMode", i8, float }
%"class.webrtc::LegacyTransparentModeImpl" = type { %"class.webrtc::TransparentMode", i8, i64, i8, i64, i8, i8, i64, i64, i64, i64, i8, i64 }

$_ZN6webrtc11field_trial9IsEnabledEPKc = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN6webrtc19TransparentModeImplD0Ev = comdat any

$_ZNK6webrtc19TransparentModeImpl6ActiveEv = comdat any

$_ZN6webrtc19TransparentModeImpl5ResetEv = comdat any

$_ZN6webrtc19TransparentModeImpl6UpdateEibbbbbb = comdat any

$_ZN6webrtc15TransparentModeD2Ev = comdat any

$_ZN6webrtc25LegacyTransparentModeImplD0Ev = comdat any

$_ZNK6webrtc25LegacyTransparentModeImpl6ActiveEv = comdat any

$_ZN6webrtc25LegacyTransparentModeImpl5ResetEv = comdat any

$_ZN6webrtc25LegacyTransparentModeImpl6UpdateEibbbbbb = comdat any

$_ZTVN6webrtc19TransparentModeImplE = comdat any

$_ZTVN6webrtc25LegacyTransparentModeImplE = comdat any

@.str = private unnamed_addr constant [75 x i8] c"../../third_party/webrtc/modules/audio_processing/aec3/transparent_mode.cc\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"AEC3 Transparent Mode: Disabled\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"AEC3 Transparent Mode: HMM\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"AEC3 Transparent Mode: Legacy\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"WebRTC-Aec3TransparentModeKillSwitch\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"WebRTC-Aec3TransparentModeHmm\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN6webrtc19TransparentModeImplE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::TransparentMode"*)* @_ZN6webrtc15TransparentModeD2Ev to i8*), i8* bitcast (void (%"class.webrtc::TransparentModeImpl"*)* @_ZN6webrtc19TransparentModeImplD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::TransparentModeImpl"*)* @_ZNK6webrtc19TransparentModeImpl6ActiveEv to i8*), i8* bitcast (void (%"class.webrtc::TransparentModeImpl"*)* @_ZN6webrtc19TransparentModeImpl5ResetEv to i8*), i8* bitcast (void (%"class.webrtc::TransparentModeImpl"*, i32, i1, i1, i1, i1, i1, i1)* @_ZN6webrtc19TransparentModeImpl6UpdateEibbbbbb to i8*)] }, comdat, align 8
@_ZZN6webrtc19TransparentModeImpl6UpdateEibbbbbbE2kB = internal unnamed_addr constant [2 x [2 x float]] [[2 x float] [float 0x3FEFAE1480000000, float 0x3F847AE140000000], [2 x float] [float 0x3FEFF7CEE0000000, float 0x3F50624DE0000000]], align 16
@_ZTVN6webrtc25LegacyTransparentModeImplE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::TransparentMode"*)* @_ZN6webrtc15TransparentModeD2Ev to i8*), i8* bitcast (void (%"class.webrtc::LegacyTransparentModeImpl"*)* @_ZN6webrtc25LegacyTransparentModeImplD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::LegacyTransparentModeImpl"*)* @_ZNK6webrtc25LegacyTransparentModeImpl6ActiveEv to i8*), i8* bitcast (void (%"class.webrtc::LegacyTransparentModeImpl"*)* @_ZN6webrtc25LegacyTransparentModeImpl5ResetEv to i8*), i8* bitcast (void (%"class.webrtc::LegacyTransparentModeImpl"*, i32, i1, i1, i1, i1, i1, i1)* @_ZN6webrtc25LegacyTransparentModeImpl6UpdateEibbbbbb to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::TransparentMode"* @_ZN6webrtc15TransparentMode6CreateERKNS_20EchoCanceller3ConfigE(%"struct.webrtc::EchoCanceller3Config"* nocapture readonly dereferenceable(560)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %0, i64 0, i32 4, i32 3
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0)) #11
  br i1 %9, label %10, label %15

10:                                               ; preds = %1, %8
  %11 = bitcast %"class.rtc::DiagnosticLogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #11
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %2, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 232, i32 3, i32 0, i32 0) #11
  %12 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %2, i64 0, i32 7
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i64 31) #11
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #11
  br label %51

15:                                               ; preds = %8
  %16 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0)) #11
  br i1 %16, label %17, label %28

17:                                               ; preds = %15
  %18 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %18) #11
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 236, i32 3, i32 0, i32 0) #11
  %19 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %20 = bitcast %"class.std::__1::basic_ostringstream"* %19 to %"class.std::__1::basic_ostream"*
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i64 26) #11
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %18) #11
  %22 = call i8* @_Znwm(i64 16) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 0, i64 16, i1 false) #11
  %23 = bitcast i8* %22 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6webrtc19TransparentModeImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds i8, i8* %22, i64 12
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 4
  %27 = ptrtoint i8* %22 to i64
  br label %51

28:                                               ; preds = %15
  %29 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %29) #11
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 239, i32 3, i32 0, i32 0) #11
  %30 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %31 = bitcast %"class.std::__1::basic_ostringstream"* %30 to %"class.std::__1::basic_ostream"*
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %31, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i64 29) #11
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %29) #11
  %33 = call i8* @_Znwm(i64 96) #12
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6webrtc25LegacyTransparentModeImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 8
  %36 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %0, i64 0, i32 7, i32 1
  %37 = load i8, i8* %36, align 1, !range !2
  store i8 %37, i8* %35, align 8
  %38 = getelementptr inbounds i8, i8* %33, i64 16
  %39 = bitcast i8* %38 to i64*
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %33, i64 24
  store i8 0, i8* %40, align 8
  %41 = getelementptr inbounds i8, i8* %33, i64 32
  %42 = bitcast i8* %41 to i64*
  store i64 10000, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %33, i64 40
  store i8 0, i8* %43, align 8
  %44 = getelementptr inbounds i8, i8* %33, i64 41
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds i8, i8* %33, i64 48
  %46 = bitcast i8* %45 to i64*
  store i64 10000, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %33, i64 56
  %48 = getelementptr inbounds i8, i8* %33, i64 88
  %49 = bitcast i8* %48 to i64*
  store i64 0, i64* %49, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 25, i1 false) #11
  %50 = ptrtoint i8* %33 to i64
  br label %51

51:                                               ; preds = %28, %17, %10
  %52 = phi i64 [ 0, %10 ], [ %27, %17 ], [ %50, %28 ]
  %53 = inttoptr i64 %52 to %"class.webrtc::TransparentMode"*
  ret %"class.webrtc::TransparentMode"* %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8*) local_unnamed_addr #4 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #11
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = tail call i64 @strlen(i8* %0) #11
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #13
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #12
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %6, i1 false) #11
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #11
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %36 to i64
  %44 = icmp slt i64 %40, 7
  br i1 %44, label %63, label %45

45:                                               ; preds = %27, %58
  %46 = phi i64 [ %61, %58 ], [ %40, %27 ]
  %47 = phi i8* [ %59, %58 ], [ %36, %27 ]
  %48 = add nsw i64 %46, -6
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = call i8* @memchr(i8* %47, i32 69, i64 %48) #11
  %52 = icmp eq i8* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = call i32 @bcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i64 7) #11
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint i8* %51 to i64
  br label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %51, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %42, %60
  %62 = icmp slt i64 %61, 7
  br i1 %62, label %63, label %45

63:                                               ; preds = %58, %50, %45, %56, %27
  %64 = phi i64 [ %42, %27 ], [ %57, %56 ], [ %42, %45 ], [ %42, %50 ], [ %42, %58 ]
  %65 = phi i8* [ %41, %27 ], [ %51, %56 ], [ %41, %45 ], [ %41, %50 ], [ %41, %58 ]
  %66 = icmp ne i8* %65, %41
  %67 = icmp eq i64 %64, %43
  %68 = and i1 %67, %66
  br i1 %33, label %69, label %70

69:                                               ; preds = %63
  call void @_ZdlPv(i8* %35) #12
  br label %70

70:                                               ; preds = %63, %69
  %71 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #12
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #11
  ret i1 %68
}

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc19TransparentModeImplD0Ev(%"class.webrtc::TransparentModeImpl"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.webrtc::TransparentModeImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc19TransparentModeImpl6ActiveEv(%"class.webrtc::TransparentModeImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::TransparentModeImpl", %"class.webrtc::TransparentModeImpl"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc19TransparentModeImpl5ResetEv(%"class.webrtc::TransparentModeImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::TransparentModeImpl", %"class.webrtc::TransparentModeImpl"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::TransparentModeImpl", %"class.webrtc::TransparentModeImpl"* %0, i64 0, i32 2
  store float 0.000000e+00, float* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc19TransparentModeImpl6UpdateEibbbbbb(%"class.webrtc::TransparentModeImpl"*, i32, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 comdat align 2 {
  br i1 %6, label %9, label %33

9:                                                ; preds = %8
  %10 = getelementptr inbounds %"class.webrtc::TransparentModeImpl", %"class.webrtc::TransparentModeImpl"* %0, i64 0, i32 2
  %11 = load float, float* %10, align 4
  %12 = fsub float 1.000000e+00, %11
  %13 = fmul float %12, 0x3EB0C6F7A0000000
  %14 = fmul float %11, 0x3FEFFFFDE0000000
  %15 = fadd float %14, %13
  %16 = fsub float 1.000000e+00, %15
  %17 = zext i1 %4 to i64
  %18 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* @_ZZN6webrtc19TransparentModeImpl6UpdateEibbbbbbE2kB, i64 0, i64 0, i64 %17
  %19 = load float, float* %18, align 4
  %20 = fmul float %19, %16
  %21 = getelementptr inbounds [2 x [2 x float]], [2 x [2 x float]]* @_ZZN6webrtc19TransparentModeImpl6UpdateEibbbbbbE2kB, i64 0, i64 1, i64 %17
  %22 = load float, float* %21, align 4
  %23 = fmul float %22, %15
  %24 = fadd float %23, %20
  %25 = fdiv float %23, %24
  store float %25, float* %10, align 4
  %26 = fcmp ogt float %25, 0x3FEE666660000000
  br i1 %26, label %27, label %29

27:                                               ; preds = %9
  %28 = getelementptr inbounds %"class.webrtc::TransparentModeImpl", %"class.webrtc::TransparentModeImpl"* %0, i64 0, i32 1
  store i8 1, i8* %28, align 8
  br label %33

29:                                               ; preds = %9
  %30 = fcmp olt float %25, 5.000000e-01
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.webrtc::TransparentModeImpl", %"class.webrtc::TransparentModeImpl"* %0, i64 0, i32 1
  store i8 0, i8* %32, align 8
  br label %33

33:                                               ; preds = %27, %31, %29, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc15TransparentModeD2Ev(%"class.webrtc::TransparentMode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc25LegacyTransparentModeImplD0Ev(%"class.webrtc::LegacyTransparentModeImpl"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.webrtc::LegacyTransparentModeImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK6webrtc25LegacyTransparentModeImpl6ActiveEv(%"class.webrtc::LegacyTransparentModeImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc25LegacyTransparentModeImpl5ResetEv(%"class.webrtc::LegacyTransparentModeImpl"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 7
  %3 = bitcast i64* %2 to <2 x i64>*
  store <2 x i64> <i64 10000, i64 0>, <2 x i64>* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 12
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 11
  store i8 0, i8* %9, align 8
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc25LegacyTransparentModeImpl6UpdateEibbbbbb(%"class.webrtc::LegacyTransparentModeImpl"*, i32, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 comdat align 2 {
  %9 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, 1
  store i64 %11, i64* %9, align 8
  %12 = xor i1 %7, true
  %13 = and i1 %12, %6
  %14 = zext i1 %13 to i64
  %15 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 12
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, %14
  store i64 %17, i64* %15, align 8
  %18 = icmp slt i32 %1, 5
  %19 = and i1 %18, %2
  br i1 %19, label %20, label %23

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 5
  store i8 1, i8* %21, align 8
  %22 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 4
  store i64 0, i64* %22, align 8
  br label %28

23:                                               ; preds = %8
  br i1 %6, label %24, label %28

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 4
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %25, align 8
  br label %28

28:                                               ; preds = %23, %24, %20
  %29 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 5
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = icmp ult i64 %11, 1251
  br label %38

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 4
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %36, 7501
  br label %38

38:                                               ; preds = %34, %32
  %39 = phi i1 [ %37, %34 ], [ %33, %32 ]
  br i1 %3, label %40, label %47

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 11
  store i8 1, i8* %41, align 8
  %42 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 9
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 7
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 10
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %44, align 8
  br label %62

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 7
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %48, align 8
  %51 = icmp ugt i64 %50, 5000
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 10
  store i64 0, i64* %53, align 8
  br label %54

54:                                               ; preds = %52, %47
  br i1 %6, label %55, label %62

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 9
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %56, align 8
  %59 = icmp ugt i64 %58, 15000
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 11
  store i8 0, i8* %61, align 8
  br label %62

62:                                               ; preds = %54, %55, %60, %40
  %63 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 8
  br i1 %5, label %65, label %64

64:                                               ; preds = %62
  store i64 0, i64* %63, align 8
  br label %71

65:                                               ; preds = %62
  %66 = load i64, i64* %63, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %63, align 8
  %68 = icmp ugt i64 %67, 59
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 7
  store i64 10000, i64* %70, align 8
  br label %71

71:                                               ; preds = %65, %69, %64
  %72 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 9
  %73 = load i64, i64* %72, align 8
  %74 = icmp ugt i64 %73, 15000
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 6
  store i8 0, i8* %76, align 1
  br label %77

77:                                               ; preds = %75, %71
  %78 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 10
  %79 = load i64, i64* %78, align 8
  %80 = icmp ugt i64 %79, 50
  %81 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 6
  br i1 %80, label %82, label %83

82:                                               ; preds = %77
  store i8 1, i8* %81, align 1
  br label %94

83:                                               ; preds = %77
  %84 = load i8, i8* %81, align 1, !range !2
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %94

86:                                               ; preds = %83
  br i1 %39, label %87, label %91

87:                                               ; preds = %86
  %88 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 11
  %89 = load i8, i8* %88, align 8, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %87, %86
  %92 = icmp ugt i64 %17, 1500
  %93 = zext i1 %92 to i8
  br label %94

94:                                               ; preds = %87, %83, %82, %91
  %95 = phi i8 [ %93, %91 ], [ 0, %82 ], [ 0, %83 ], [ 0, %87 ]
  %96 = getelementptr inbounds %"class.webrtc::LegacyTransparentModeImpl", %"class.webrtc::LegacyTransparentModeImpl"* %0, i64 0, i32 3
  store i8 %95, i8* %96, align 8
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
