; ModuleID = '../../third_party/skia/src/gpu/GrBlockAllocator.cpp'
source_filename = "../../third_party/skia/src/gpu/GrBlockAllocator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }

@_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm = hidden unnamed_addr alias void (%class.GrBlockAllocator*, i32, i64, i64), void (%class.GrBlockAllocator*, i32, i64, i64)* @_ZN16GrBlockAllocatorC2ENS_12GrowthPolicyEmm
@_ZN16GrBlockAllocator5BlockC1EPS0_i = hidden unnamed_addr alias void (%"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32), void (%"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32)* @_ZN16GrBlockAllocator5BlockC2EPS0_i
@_ZN16GrBlockAllocator5BlockD1Ev = hidden unnamed_addr alias void (%"class.GrBlockAllocator::Block"*), void (%"class.GrBlockAllocator::Block"*)* @_ZN16GrBlockAllocator5BlockD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16GrBlockAllocatorC2ENS_12GrowthPolicyEmm(%class.GrBlockAllocator*, i32, i64, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2
  store %"class.GrBlockAllocator::Block"* %6, %"class.GrBlockAllocator::Block"** %5, align 16
  %7 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 1
  %8 = add i64 %2, 15
  %9 = lshr i64 %8, 4
  %10 = and i64 %9, 65535
  %11 = shl i32 %1, 16
  %12 = or i32 %1, 2
  %13 = icmp eq i32 %12, 3
  %14 = zext i1 %13 to i64
  %15 = shl nuw nsw i64 %14, 18
  %16 = and i32 %11, 196608
  %17 = zext i32 %16 to i64
  %18 = or i64 %10, %17
  %19 = or i64 %18, %15
  %20 = or i64 %19, 2199023255552
  store i64 %20, i64* %7, align 8
  %21 = trunc i64 %3 to i32
  %22 = add i32 %21, 32
  %23 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 2
  %24 = bitcast %"class.GrBlockAllocator::Block"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  store i32 %22, i32* %23, align 8
  %25 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 3
  store i32 32, i32* %25, align 4
  %26 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 4
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 5
  store i32 0, i32* %27, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16GrBlockAllocator5BlockC2EPS0_i(%"class.GrBlockAllocator::Block"* nocapture, %"class.GrBlockAllocator::Block"*, i32) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %0, i64 0, i32 0
  store %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"** %4, align 8
  %5 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %0, i64 0, i32 1
  store %"class.GrBlockAllocator::Block"* %1, %"class.GrBlockAllocator::Block"** %5, align 8
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %0, i64 0, i32 3
  store i32 32, i32* %7, align 4
  %8 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %0, i64 0, i32 5
  store i32 0, i32* %9, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden void @_ZN16GrBlockAllocator5BlockD2Ev(%"class.GrBlockAllocator::Block"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK16GrBlockAllocator9totalSizeEv(%class.GrBlockAllocator*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 1
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 8
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = add nsw i64 %8, 16
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i64 [ %9, %5 ], [ 16, %1 ]
  %12 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2
  %13 = icmp eq %"class.GrBlockAllocator::Block"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %16, %10
  %15 = phi i64 [ %11, %10 ], [ %24, %16 ]
  ret i64 %15

16:                                               ; preds = %10, %16
  %17 = phi i64 [ %24, %16 ], [ %11, %10 ]
  %18 = phi %"class.GrBlockAllocator::Block"* [ %20, %16 ], [ %12, %10 ]
  %19 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %18, i64 0, i32 0
  %20 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %19, align 8
  %21 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %18, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %22 to i64
  %24 = add i64 %17, %23
  %25 = icmp eq %"class.GrBlockAllocator::Block"* %20, null
  br i1 %25, label %14, label %16
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK16GrBlockAllocator16totalUsableSpaceEv(%class.GrBlockAllocator*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 1
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 8
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = sext i32 %7 to i64
  %9 = icmp eq i32 %7, 0
  %10 = add nsw i64 %8, -32
  br i1 %9, label %11, label %12

11:                                               ; preds = %1, %5
  br label %12

12:                                               ; preds = %5, %11
  %13 = phi i64 [ 0, %11 ], [ %10, %5 ]
  %14 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2
  %15 = icmp eq %"class.GrBlockAllocator::Block"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %18, %12
  %17 = phi i64 [ %13, %12 ], [ %27, %18 ]
  ret i64 %17

18:                                               ; preds = %12, %18
  %19 = phi i64 [ %27, %18 ], [ %13, %12 ]
  %20 = phi %"class.GrBlockAllocator::Block"* [ %22, %18 ], [ %14, %12 ]
  %21 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %20, i64 0, i32 0
  %22 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %21, align 8
  %23 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %20, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = add nsw i32 %24, -32
  %26 = sext i32 %25 to i64
  %27 = add i64 %19, %26
  %28 = icmp eq %"class.GrBlockAllocator::Block"* %22, null
  br i1 %28, label %16, label %18
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK16GrBlockAllocator15totalSpaceInUseEv(%class.GrBlockAllocator*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2
  %3 = icmp eq %"class.GrBlockAllocator::Block"* %2, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %6, %1
  %5 = phi i64 [ 0, %1 ], [ %15, %6 ]
  ret i64 %5

6:                                                ; preds = %1, %6
  %7 = phi i64 [ %15, %6 ], [ 0, %1 ]
  %8 = phi %"class.GrBlockAllocator::Block"* [ %10, %6 ], [ %2, %1 ]
  %9 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %8, i64 0, i32 0
  %10 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %9, align 8
  %11 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %8, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 %12, -32
  %14 = sext i32 %13 to i64
  %15 = add i64 %7, %14
  %16 = icmp eq %"class.GrBlockAllocator::Block"* %10, null
  br i1 %16, label %4, label %6
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.GrBlockAllocator::Block"* @_ZN16GrBlockAllocator15findOwningBlockEPKv(%class.GrBlockAllocator*, i8*) local_unnamed_addr #3 align 2 {
  %3 = ptrtoint i8* %1 to i64
  %4 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 0
  %5 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %4, align 16
  %6 = icmp eq %"class.GrBlockAllocator::Block"* %5, null
  br i1 %6, label %43, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %5, i64 0, i32 1
  %9 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %10 = icmp eq %"class.GrBlockAllocator::Block"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 0
  %15 = select i1 %14, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %9
  br label %16

16:                                               ; preds = %7, %11
  %17 = phi %"class.GrBlockAllocator::Block"* [ null, %7 ], [ %15, %11 ]
  br label %18

18:                                               ; preds = %41, %16
  %19 = phi %"class.GrBlockAllocator::Block"* [ %17, %16 ], [ %42, %41 ]
  %20 = phi %"class.GrBlockAllocator::Block"* [ %5, %16 ], [ %19, %41 ]
  %21 = ptrtoint %"class.GrBlockAllocator::Block"* %20 to i64
  %22 = add i64 %21, 32
  %23 = icmp ugt i64 %22, %3
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %20, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = sext i32 %26 to i64
  %28 = add i64 %27, %21
  %29 = icmp ugt i64 %28, %3
  br i1 %29, label %43, label %30

30:                                               ; preds = %24, %18
  %31 = icmp eq %"class.GrBlockAllocator::Block"* %19, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %19, i64 0, i32 1
  %34 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %33, align 8
  %35 = icmp eq %"class.GrBlockAllocator::Block"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %34, i64 0, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  %40 = select i1 %39, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %34
  br label %41

41:                                               ; preds = %36, %32
  %42 = phi %"class.GrBlockAllocator::Block"* [ null, %32 ], [ %40, %36 ]
  br label %18

43:                                               ; preds = %30, %24, %2
  %44 = phi %"class.GrBlockAllocator::Block"* [ null, %2 ], [ null, %30 ], [ %20, %24 ]
  ret %"class.GrBlockAllocator::Block"* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBlockAllocator12releaseBlockEPNS_5BlockE(%class.GrBlockAllocator*, %"class.GrBlockAllocator::Block"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, %1
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %1, i64 0, i32 3
  store i32 32, i32* %6, align 4
  %7 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %1, i64 0, i32 4
  store i32 0, i32* %7, align 8
  br label %45

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %1, i64 0, i32 0
  %10 = bitcast %"class.GrBlockAllocator::Block"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %1, i64 0, i32 1
  %13 = bitcast %"class.GrBlockAllocator::Block"** %12 to i64**
  %14 = load i64*, i64** %13, align 8
  store i64 %11, i64* %14, align 8
  %15 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %9, align 8
  %16 = icmp eq %"class.GrBlockAllocator::Block"* %15, null
  %17 = bitcast %"class.GrBlockAllocator::Block"** %12 to i64*
  %18 = load i64, i64* %17, align 8
  br i1 %16, label %22, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %15, i64 0, i32 1
  %21 = bitcast %"class.GrBlockAllocator::Block"** %20 to i64*
  store i64 %18, i64* %21, align 8
  br label %24

22:                                               ; preds = %8
  %23 = bitcast %class.GrBlockAllocator* %0 to i64*
  store i64 %18, i64* %23, align 16
  br label %24

24:                                               ; preds = %22, %19
  %25 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 1
  %26 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %25, align 8
  %27 = icmp eq %"class.GrBlockAllocator::Block"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %26, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  br label %31

31:                                               ; preds = %24, %28
  %32 = phi i32 [ %30, %28 ], [ 0, %24 ]
  %33 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %1, i64 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp slt i32 %32, %34
  br i1 %35, label %36, label %41

36:                                               ; preds = %31
  br i1 %27, label %39, label %37

37:                                               ; preds = %36
  %38 = bitcast %"class.GrBlockAllocator::Block"* %26 to i8*
  tail call void @_ZdlPv(i8* nonnull %38) #8
  br label %39

39:                                               ; preds = %36, %37
  %40 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %1, i64 0, i32 3
  store i32 -1, i32* %40, align 4
  store %"class.GrBlockAllocator::Block"* %1, %"class.GrBlockAllocator::Block"** %25, align 8
  br label %45

41:                                               ; preds = %31
  %42 = icmp eq %"class.GrBlockAllocator::Block"* %1, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = bitcast %"class.GrBlockAllocator::Block"* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %44) #8
  br label %45

45:                                               ; preds = %39, %43, %41, %5
  %46 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = lshr i64 %47, 16
  %49 = trunc i64 %48 to i32
  %50 = and i32 %49, 3
  %51 = lshr i64 %47, 18
  %52 = and i64 %47, 2199022993408
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %83, label %54

54:                                               ; preds = %45
  %55 = lshr i64 %47, 41
  %56 = trunc i64 %55 to i32
  %57 = icmp ugt i32 %56, 1
  %58 = icmp eq i32 %50, 2
  %59 = or i1 %57, %58
  br i1 %59, label %60, label %83

60:                                               ; preds = %54
  %61 = icmp eq i32 %50, 1
  br i1 %61, label %62, label %67

62:                                               ; preds = %60
  %63 = sub nsw i64 %55, %51
  %64 = shl i64 %63, 41
  %65 = and i64 %47, 2199023255551
  %66 = or i64 %64, %65
  store i64 %66, i64* %46, align 8
  br label %83

67:                                               ; preds = %60
  br i1 %58, label %68, label %76

68:                                               ; preds = %67
  %69 = sub nsw i64 %55, %51
  %70 = shl i64 %51, 41
  %71 = and i64 %47, 262143
  %72 = or i64 %70, %71
  %73 = shl i64 %69, 18
  %74 = and i64 %73, 2199022993408
  %75 = or i64 %72, %74
  store i64 %75, i64* %46, align 8
  br label %83

76:                                               ; preds = %67
  %77 = lshr i64 %47, 42
  %78 = shl nuw nsw i64 %77, 41
  %79 = and i64 %47, 262143
  %80 = or i64 %78, %79
  %81 = shl nuw nsw i64 %77, 18
  %82 = or i64 %80, %81
  store i64 %82, i64* %46, align 8
  br label %83

83:                                               ; preds = %45, %62, %76, %68, %54
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16GrBlockAllocator15stealHeapBlocksEPS_(%class.GrBlockAllocator* nocapture, %class.GrBlockAllocator*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 0
  %5 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %4, align 16
  %6 = icmp eq %"class.GrBlockAllocator::Block"* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 0
  %9 = bitcast %class.GrBlockAllocator* %0 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %5, i64 0, i32 1
  %12 = bitcast %"class.GrBlockAllocator::Block"** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 16
  %14 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %13, i64 0, i32 0
  store %"class.GrBlockAllocator::Block"* %5, %"class.GrBlockAllocator::Block"** %14, align 8
  %15 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %1, i64 0, i32 0
  %16 = bitcast %class.GrBlockAllocator* %1 to i64*
  %17 = load i64, i64* %16, align 16
  store i64 %17, i64* %9, align 16
  store %"class.GrBlockAllocator::Block"* %3, %"class.GrBlockAllocator::Block"** %15, align 16
  store %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"** %4, align 16
  br label %18

18:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 0
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 16
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 1
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8
  %8 = icmp eq %"class.GrBlockAllocator::Block"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %7
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %"class.GrBlockAllocator::Block"* [ %13, %9 ], [ null, %5 ]
  %16 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2
  %17 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 1
  %18 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %16, i64 0, i32 0
  %19 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 3
  %20 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 4
  %21 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 5
  br label %35

22:                                               ; preds = %46, %1
  %23 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = lshr i64 %24, 16
  %26 = trunc i64 %25 to i32
  %27 = and i32 %26, 1
  %28 = or i32 %27, 2
  %29 = icmp eq i32 %28, 3
  %30 = zext i1 %29 to i64
  %31 = shl nuw nsw i64 %30, 18
  %32 = and i64 %24, 262143
  %33 = or i64 %32, %31
  %34 = or i64 %33, 2199023255552
  store i64 %34, i64* %23, align 8
  ret void

35:                                               ; preds = %57, %14
  %36 = phi %"class.GrBlockAllocator::Block"* [ %15, %14 ], [ %58, %57 ]
  %37 = phi %"class.GrBlockAllocator::Block"* [ %3, %14 ], [ %36, %57 ]
  %38 = icmp eq %"class.GrBlockAllocator::Block"* %37, %16
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  store %"class.GrBlockAllocator::Block"* %16, %"class.GrBlockAllocator::Block"** %2, align 16
  store %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"** %18, align 8
  store i32 32, i32* %19, align 4
  store i32 0, i32* %20, align 8
  store i32 0, i32* %21, align 4
  %40 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %17, align 8
  %41 = icmp eq %"class.GrBlockAllocator::Block"* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = bitcast %"class.GrBlockAllocator::Block"* %40 to i8*
  tail call void @_ZdlPv(i8* nonnull %43) #8
  store %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"** %17, align 8
  br label %46

44:                                               ; preds = %35
  %45 = bitcast %"class.GrBlockAllocator::Block"* %37 to i8*
  tail call void @_ZdlPv(i8* nonnull %45) #8
  br label %46

46:                                               ; preds = %42, %39, %44
  %47 = icmp eq %"class.GrBlockAllocator::Block"* %36, null
  br i1 %47, label %22, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %36, i64 0, i32 1
  %50 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %49, align 8
  %51 = icmp eq %"class.GrBlockAllocator::Block"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %50, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %54, 0
  %56 = select i1 %55, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %50
  br label %57

57:                                               ; preds = %52, %48
  %58 = phi %"class.GrBlockAllocator::Block"* [ null, %48 ], [ %56, %52 ]
  br label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBlockAllocator17resetScratchSpaceEv(%class.GrBlockAllocator* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 1
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 8
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.GrBlockAllocator::Block"* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #8
  store %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"** %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator* nocapture, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 2, i32 1
  %5 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %4, align 8
  %6 = icmp eq %"class.GrBlockAllocator::Block"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %5, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %9, %7 ], [ 0, %3 ]
  %12 = icmp slt i32 %11, %1
  br i1 %12, label %13, label %64

13:                                               ; preds = %10
  %14 = icmp slt i32 %1, %2
  br i1 %14, label %15, label %58

15:                                               ; preds = %13
  %16 = getelementptr inbounds %class.GrBlockAllocator, %class.GrBlockAllocator* %0, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %17, 16
  %19 = trunc i64 %18 to i32
  %20 = and i32 %19, 3
  %21 = lshr i64 %17, 18
  %22 = trunc i64 %21 to i32
  %23 = and i32 %22, 8388607
  %24 = lshr i64 %17, 41
  %25 = trunc i64 %24 to i32
  %26 = add nuw nsw i32 %23, %25
  %27 = icmp ult i32 %20, 2
  %28 = icmp eq i32 %20, 2
  %29 = select i1 %28, i32 %25, i32 %26
  %30 = select i1 %27, i32 %23, i32 %29
  %31 = icmp ult i32 %30, 8388607
  %32 = select i1 %31, i32 %30, i32 8388607
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 18
  %35 = and i64 %17, 262143
  %36 = icmp ult i32 %26, 8388607
  %37 = select i1 %36, i32 %26, i32 8388607
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 41
  %40 = or i64 %39, %35
  %41 = or i64 %40, %34
  store i64 %41, i64* %16, align 8
  %42 = trunc i64 %17 to i32
  %43 = shl i32 %42, 4
  %44 = and i32 %43, 1048560
  %45 = sdiv i32 %2, %44
  %46 = icmp slt i32 %45, %26
  br i1 %46, label %68, label %47

47:                                               ; preds = %15
  %48 = mul nsw i32 %26, %44
  %49 = icmp sgt i32 %48, %1
  %50 = select i1 %49, i32 %48, i32 %1
  %51 = icmp sgt i32 %50, 32768
  %52 = select i1 %51, i32 4095, i32 15
  %53 = add nuw nsw i32 %52, %50
  %54 = xor i32 %52, -1
  %55 = and i32 %53, %54
  %56 = icmp sgt i32 %55, %2
  %57 = select i1 %56, i32 %2, i32 %55
  br label %68

58:                                               ; preds = %13
  %59 = icmp sgt i32 %1, 32768
  %60 = select i1 %59, i32 4095, i32 15
  %61 = add nsw i32 %60, %1
  %62 = xor i32 %60, -1
  %63 = and i32 %61, %62
  br label %68

64:                                               ; preds = %10
  %65 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %5, i64 0, i32 2
  %66 = load i32, i32* %65, align 8
  %67 = bitcast %"class.GrBlockAllocator::Block"* %5 to i8*
  store %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"** %4, align 8
  br i1 %6, label %68, label %72

68:                                               ; preds = %47, %15, %58, %64
  %69 = phi i32 [ %66, %64 ], [ %2, %15 ], [ %57, %47 ], [ %63, %58 ]
  %70 = sext i32 %69 to i64
  %71 = tail call i8* @_Znwm(i64 %70) #8
  br label %72

72:                                               ; preds = %64, %68
  %73 = phi i32 [ %66, %64 ], [ %69, %68 ]
  %74 = phi i8* [ %67, %64 ], [ %71, %68 ]
  %75 = bitcast %class.GrBlockAllocator* %0 to i64*
  %76 = load i64, i64* %75, align 16
  %77 = bitcast i8* %74 to %"class.GrBlockAllocator::Block"**
  store %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"** %77, align 8
  %78 = getelementptr inbounds i8, i8* %74, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %76, i64* %79, align 8
  %80 = getelementptr inbounds i8, i8* %74, i64 16
  %81 = bitcast i8* %80 to i32*
  store i32 %73, i32* %81, align 8
  %82 = getelementptr inbounds i8, i8* %74, i64 20
  %83 = bitcast i8* %82 to i32*
  store i32 32, i32* %83, align 4
  %84 = getelementptr inbounds i8, i8* %74, i64 24
  %85 = bitcast i8* %84 to i32*
  store i32 0, i32* %85, align 8
  %86 = getelementptr inbounds i8, i8* %74, i64 28
  %87 = bitcast i8* %86 to i32*
  store i32 0, i32* %87, align 4
  %88 = bitcast %class.GrBlockAllocator* %0 to i8***
  %89 = load i8**, i8*** %88, align 16
  store i8* %74, i8** %89, align 8
  %90 = bitcast %class.GrBlockAllocator* %0 to i64**
  %91 = load i64*, i64** %90, align 16
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %75, align 16
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
