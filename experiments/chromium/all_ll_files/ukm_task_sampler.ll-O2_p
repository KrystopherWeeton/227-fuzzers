; ModuleID = '../../third_party/blink/renderer/platform/scheduler/common/ukm_task_sampler.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/common/ukm_task_sampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }

@_ZN5blink9scheduler14UkmTaskSamplerC1Edd = hidden unnamed_addr alias void (%"class.blink::scheduler::UkmTaskSampler"*, double, double), void (%"class.blink::scheduler::UkmTaskSampler"*, double, double)* @_ZN5blink9scheduler14UkmTaskSamplerC2Edd

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9scheduler14UkmTaskSamplerC2Edd(%"class.blink::scheduler::UkmTaskSampler"* nocapture, double, double) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 0
  %5 = fcmp ult double %1, 1.000000e+00
  %6 = fcmp ole double %1, 0.000000e+00
  %7 = select i1 %6, double 0.000000e+00, double %1
  %8 = select i1 %5, double %7, double 1.000000e+00
  store double %8, double* %4, align 8
  %9 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 1
  %10 = fcmp ult double %2, 1.000000e+00
  %11 = fcmp ole double %2, 0.000000e+00
  %12 = select i1 %11, double 0.000000e+00, double %2
  %13 = select i1 %10, double %12, double 1.000000e+00
  store double %13, double* %9, align 8
  %14 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 2, i32 0, i64 0
  store i64 5489, i64* %14, align 8
  br label %15

15:                                               ; preds = %27, %3
  %16 = phi i64 [ 5489, %3 ], [ %31, %27 ]
  %17 = phi i64 [ 1, %3 ], [ %33, %27 ]
  %18 = lshr i64 %16, 62
  %19 = xor i64 %18, %16
  %20 = mul i64 %19, 6364136223846793005
  %21 = add i64 %20, %17
  %22 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 2, i32 0, i64 %17
  store i64 %21, i64* %22, align 8
  %23 = add nuw nsw i64 %17, 1
  %24 = icmp eq i64 %23, 312
  br i1 %24, label %25, label %27

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 2, i32 1
  store i64 0, i64* %26, align 8
  ret void

27:                                               ; preds = %15
  %28 = lshr i64 %21, 62
  %29 = xor i64 %28, %21
  %30 = mul i64 %29, 6364136223846793005
  %31 = add i64 %30, %23
  %32 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 2, i32 0, i64 %23
  store i64 %31, i64* %32, align 8
  %33 = add nuw nsw i64 %17, 2
  br label %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden double @_ZN5blink9scheduler14UkmTaskSampler33GetConditionalSamplingProbabilityEb(%"class.blink::scheduler::UkmTaskSampler"* nocapture readonly, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = fcmp oeq double %4, 0.000000e+00
  %6 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 1
  %7 = load double, double* %6, align 8
  br i1 %5, label %22, label %8

8:                                                ; preds = %2
  %9 = fcmp une double %7, 0.000000e+00
  %10 = fcmp olt double %7, 1.000000e+00
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %22

12:                                               ; preds = %8
  %13 = fcmp olt double %4, %7
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  br i1 %1, label %22, label %15

15:                                               ; preds = %14
  %16 = fsub double %7, %4
  %17 = fsub double 1.000000e+00, %4
  %18 = fdiv double %16, %17
  br label %22

19:                                               ; preds = %12
  br i1 %1, label %20, label %22

20:                                               ; preds = %19
  %21 = fdiv double %7, %4
  br label %22

22:                                               ; preds = %2, %8, %19, %14, %20, %15
  %23 = phi double [ %18, %15 ], [ %21, %20 ], [ 1.000000e+00, %14 ], [ 0.000000e+00, %19 ], [ %7, %8 ], [ %7, %2 ]
  ret double %23
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9scheduler14UkmTaskSampler19ShouldRecordTaskUkmEb(%"class.blink::scheduler::UkmTaskSampler"* nocapture, i1 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 0
  %4 = load double, double* %3, align 8
  %5 = fcmp oeq double %4, 0.000000e+00
  %6 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 1
  %7 = load double, double* %6, align 8
  br i1 %5, label %22, label %8

8:                                                ; preds = %2
  %9 = fcmp une double %7, 0.000000e+00
  %10 = fcmp olt double %7, 1.000000e+00
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %22

12:                                               ; preds = %8
  %13 = fcmp olt double %4, %7
  br i1 %13, label %14, label %19

14:                                               ; preds = %12
  br i1 %1, label %22, label %15

15:                                               ; preds = %14
  %16 = fsub double %7, %4
  %17 = fsub double 1.000000e+00, %4
  %18 = fdiv double %16, %17
  br label %22

19:                                               ; preds = %12
  br i1 %1, label %20, label %22

20:                                               ; preds = %19
  %21 = fdiv double %7, %4
  br label %22

22:                                               ; preds = %2, %8, %14, %15, %19, %20
  %23 = phi double [ %18, %15 ], [ %21, %20 ], [ 1.000000e+00, %14 ], [ 0.000000e+00, %19 ], [ %7, %8 ], [ %7, %2 ]
  %24 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 2, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 1
  %27 = urem i64 %26, 312
  %28 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 2, i32 0, i64 %25
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, -2147483648
  %31 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 2, i32 0, i64 %27
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 2147483646
  %34 = or i64 %33, %30
  %35 = add i64 %25, 156
  %36 = urem i64 %35, 312
  %37 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 2, i32 0, i64 %36
  %38 = load i64, i64* %37, align 8
  %39 = lshr exact i64 %34, 1
  %40 = and i64 %32, 1
  %41 = mul nuw i64 %40, -5403634167711393303
  %42 = xor i64 %41, %38
  %43 = xor i64 %42, %39
  store i64 %43, i64* %28, align 8
  %44 = load i64, i64* %24, align 8
  %45 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 2, i32 0, i64 %44
  %46 = load i64, i64* %45, align 8
  %47 = lshr i64 %46, 29
  %48 = and i64 %47, 22906492245
  %49 = xor i64 %48, %46
  store i64 %27, i64* %24, align 8
  %50 = shl i64 %49, 17
  %51 = and i64 %50, 8202884508482404352
  %52 = xor i64 %51, %49
  %53 = shl i64 %52, 37
  %54 = and i64 %53, -2270628950310912
  %55 = xor i64 %54, %52
  %56 = lshr i64 %55, 43
  %57 = xor i64 %56, %55
  %58 = uitofp i64 %57 to double
  %59 = fmul double %58, 0x3BF0000000000000
  %60 = fadd double %59, 0.000000e+00
  %61 = fcmp olt double %60, %23
  ret i1 %61
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink9scheduler14UkmTaskSampler22SetUkmTaskSamplingRateEd(%"class.blink::scheduler::UkmTaskSampler"* nocapture, double) local_unnamed_addr #0 align 2 {
  %3 = fcmp ult double %1, 1.000000e+00
  %4 = fcmp ole double %1, 0.000000e+00
  %5 = select i1 %4, double 0.000000e+00, double %1
  %6 = select i1 %3, double %5, double 1.000000e+00
  %7 = getelementptr inbounds %"class.blink::scheduler::UkmTaskSampler", %"class.blink::scheduler::UkmTaskSampler"* %0, i64 0, i32 1
  store double %6, double* %7, align 8
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
