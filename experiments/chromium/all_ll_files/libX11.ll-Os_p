; ModuleID = '../../third_party/swiftshader/src/Main/libX11.cpp'
source_filename = "../../third_party/swiftshader/src/Main/libX11.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.LibX11exports = type { %struct._XDisplay* (i8*)*, i32 (%struct._XDisplay*, i64, %struct.XWindowAttributes*)*, %struct.Screen* (%struct._XDisplay*)*, i32 (%struct.Screen*)*, i32 (%struct.Screen*)*, i32 (%struct.Screen*)*, %struct._XGC* (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, i32, i32, i32, %struct.XVisualInfo*)*, %struct.Visual* (%struct._XDisplay*, i32)*, i32 (%struct._XDisplay*, %struct.XErrorEvent*)* (i32 (%struct._XDisplay*, %struct.XErrorEvent*)*)*, i32 (%struct._XDisplay*, i32)*, %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i32, i8*, i32, i32, i32, i32)*, i32 (%struct._XDisplay*)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, i32, i32, i8*, i32)*, i32 (%struct._XDisplay*)*, %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i8*, %struct.XShmSegmentInfo*, i32, i32)*, i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)*, i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)*, i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32, i1)* }
%struct._XDisplay = type opaque
%struct.XWindowAttributes = type { i32, i32, i32, i32, i32, i32, %struct.Visual*, i64, i32, i32, i32, i32, i64, i64, i32, i64, i32, i32, i64, i64, i64, i32, %struct.Screen* }
%struct.Visual = type { %struct._XExtData*, i64, i32, i64, i64, i64, i32, i32 }
%struct._XExtData = type { i32, %struct._XExtData*, i32 (%struct._XExtData*)*, i8* }
%struct.Screen = type { %struct._XExtData*, %struct._XDisplay*, i64, i32, i32, i32, i32, i32, %struct.Depth*, i32, %struct.Visual*, %struct._XGC*, i64, i64, i64, i32, i32, i32, i32, i64 }
%struct.Depth = type { i32, i32, %struct.Visual* }
%struct._XGC = type opaque
%struct.XVisualInfo = type { %struct.Visual*, i64, i32, i32, i32, i64, i64, i64, i32, i32 }
%struct.XErrorEvent = type { i32, %struct._XDisplay*, i64, i64, i8, i8, i8 }
%struct._XImage = type { i32, i32, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i8*, %"struct._XImage::funcs" }
%"struct._XImage::funcs" = type { {}*, i32 (%struct._XImage*)*, i64 (%struct._XImage*, i32, i32)*, i32 (%struct._XImage*, i32, i32, i64)*, %struct._XImage* (%struct._XImage*, i32, i32, i32, i32)*, i32 (%struct._XImage*, i64)* }
%struct.XShmSegmentInfo = type { i64, i32, i8*, i32 }
%class.LibX11 = type { i8 }

@.str = private unnamed_addr constant [13 x i8] c"XOpenDisplay\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"XGetWindowAttributes\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"XDefaultScreenOfDisplay\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"XWidthOfScreen\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"XHeightOfScreen\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"XPlanesOfScreen\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"XDefaultGC\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"XDefaultDepth\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"XMatchVisualInfo\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"XDefaultVisual\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"XSetErrorHandler\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"XSync\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"XCreateImage\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"XCloseDisplay\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"XPutImage\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"XDrawString\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"XShmQueryExtension\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"XShmCreateImage\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"XShmAttach\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"XShmDetach\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"XShmPutImage\00", align 1
@_ZZN6LibX1111loadExportsEvE6libX11 = internal unnamed_addr global i8* null, align 8
@_ZZN6LibX1111loadExportsEvE7libXext = internal unnamed_addr global i8* null, align 8
@_ZZN6LibX1111loadExportsEvE13libX11exports = internal unnamed_addr global %struct.LibX11exports* null, align 8
@.str.21 = private unnamed_addr constant [10 x i8] c"libX11.so\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"libXext.so\00", align 1
@libX11 = hidden local_unnamed_addr global %class.LibX11 zeroinitializer, align 1

@_ZN13LibX11exportsC1EPvS0_ = hidden unnamed_addr alias void (%struct.LibX11exports*, i8*, i8*), void (%struct.LibX11exports*, i8*, i8*)* @_ZN13LibX11exportsC2EPvS0_

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN13LibX11exportsC2EPvS0_(%struct.LibX11exports*, i8*, i8*) unnamed_addr #0 align 2 {
  %4 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #3
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call i8* @dlerror() #3
  br label %8

8:                                                ; preds = %3, %6
  %9 = bitcast %struct.LibX11exports* %0 to i8**
  store i8* %4, i8** %9, align 8
  %10 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0)) #3
  %11 = icmp eq i8* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = tail call i8* @dlerror() #3
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 1
  %16 = bitcast i32 (%struct._XDisplay*, i64, %struct.XWindowAttributes*)** %15 to i8**
  store i8* %10, i8** %16, align 8
  %17 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #3
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call i8* @dlerror() #3
  br label %21

21:                                               ; preds = %14, %19
  %22 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 2
  %23 = bitcast %struct.Screen* (%struct._XDisplay*)** %22 to i8**
  store i8* %17, i8** %23, align 8
  %24 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #3
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = tail call i8* @dlerror() #3
  br label %28

28:                                               ; preds = %21, %26
  %29 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 3
  %30 = bitcast i32 (%struct.Screen*)** %29 to i8**
  store i8* %24, i8** %30, align 8
  %31 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #3
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = tail call i8* @dlerror() #3
  br label %35

35:                                               ; preds = %28, %33
  %36 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 4
  %37 = bitcast i32 (%struct.Screen*)** %36 to i8**
  store i8* %31, i8** %37, align 8
  %38 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #3
  %39 = icmp eq i8* %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = tail call i8* @dlerror() #3
  br label %42

42:                                               ; preds = %35, %40
  %43 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 5
  %44 = bitcast i32 (%struct.Screen*)** %43 to i8**
  store i8* %38, i8** %44, align 8
  %45 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0)) #3
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %42
  %48 = tail call i8* @dlerror() #3
  br label %49

49:                                               ; preds = %42, %47
  %50 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 6
  %51 = bitcast %struct._XGC* (%struct._XDisplay*, i32)** %50 to i8**
  store i8* %45, i8** %51, align 8
  %52 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0)) #3
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  %55 = tail call i8* @dlerror() #3
  br label %56

56:                                               ; preds = %49, %54
  %57 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 7
  %58 = bitcast i32 (%struct._XDisplay*, i32)** %57 to i8**
  store i8* %52, i8** %58, align 8
  %59 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #3
  %60 = icmp eq i8* %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = tail call i8* @dlerror() #3
  br label %63

63:                                               ; preds = %56, %61
  %64 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 8
  %65 = bitcast i32 (%struct._XDisplay*, i32, i32, i32, %struct.XVisualInfo*)** %64 to i8**
  store i8* %59, i8** %65, align 8
  %66 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #3
  %67 = icmp eq i8* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = tail call i8* @dlerror() #3
  br label %70

70:                                               ; preds = %63, %68
  %71 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 9
  %72 = bitcast %struct.Visual* (%struct._XDisplay*, i32)** %71 to i8**
  store i8* %66, i8** %72, align 8
  %73 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)) #3
  %74 = icmp eq i8* %73, null
  br i1 %74, label %75, label %77

75:                                               ; preds = %70
  %76 = tail call i8* @dlerror() #3
  br label %77

77:                                               ; preds = %70, %75
  %78 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 10
  %79 = bitcast i32 (%struct._XDisplay*, %struct.XErrorEvent*)* (i32 (%struct._XDisplay*, %struct.XErrorEvent*)*)** %78 to i8**
  store i8* %73, i8** %79, align 8
  %80 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0)) #3
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84

82:                                               ; preds = %77
  %83 = tail call i8* @dlerror() #3
  br label %84

84:                                               ; preds = %77, %82
  %85 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 11
  %86 = bitcast i32 (%struct._XDisplay*, i32)** %85 to i8**
  store i8* %80, i8** %86, align 8
  %87 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0)) #3
  %88 = icmp eq i8* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %84
  %90 = tail call i8* @dlerror() #3
  br label %91

91:                                               ; preds = %84, %89
  %92 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 12
  %93 = bitcast %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i32, i8*, i32, i32, i32, i32)** %92 to i8**
  store i8* %87, i8** %93, align 8
  %94 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #3
  %95 = icmp eq i8* %94, null
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  %97 = tail call i8* @dlerror() #3
  br label %98

98:                                               ; preds = %91, %96
  %99 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 13
  %100 = bitcast i32 (%struct._XDisplay*)** %99 to i8**
  store i8* %94, i8** %100, align 8
  %101 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0)) #3
  %102 = icmp eq i8* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %98
  %104 = tail call i8* @dlerror() #3
  br label %105

105:                                              ; preds = %98, %103
  %106 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 14
  %107 = bitcast i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32)** %106 to i8**
  store i8* %101, i8** %107, align 8
  %108 = tail call i8* @dlsym(i8* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0)) #3
  %109 = icmp eq i8* %108, null
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = tail call i8* @dlerror() #3
  br label %112

112:                                              ; preds = %105, %110
  %113 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 15
  %114 = bitcast i32 (%struct._XDisplay*, i64, %struct._XGC*, i32, i32, i8*, i32)** %113 to i8**
  store i8* %108, i8** %114, align 8
  %115 = tail call i8* @dlsym(i8* %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0)) #3
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %119

117:                                              ; preds = %112
  %118 = tail call i8* @dlerror() #3
  br label %119

119:                                              ; preds = %112, %117
  %120 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 16
  %121 = bitcast i32 (%struct._XDisplay*)** %120 to i8**
  store i8* %115, i8** %121, align 8
  %122 = tail call i8* @dlsym(i8* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0)) #3
  %123 = icmp eq i8* %122, null
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  %125 = tail call i8* @dlerror() #3
  br label %126

126:                                              ; preds = %119, %124
  %127 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 17
  %128 = bitcast %struct._XImage* (%struct._XDisplay*, %struct.Visual*, i32, i32, i8*, %struct.XShmSegmentInfo*, i32, i32)** %127 to i8**
  store i8* %122, i8** %128, align 8
  %129 = tail call i8* @dlsym(i8* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0)) #3
  %130 = icmp eq i8* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %126
  %132 = tail call i8* @dlerror() #3
  br label %133

133:                                              ; preds = %126, %131
  %134 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 18
  %135 = bitcast i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)** %134 to i8**
  store i8* %129, i8** %135, align 8
  %136 = tail call i8* @dlsym(i8* %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0)) #3
  %137 = icmp eq i8* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = tail call i8* @dlerror() #3
  br label %140

140:                                              ; preds = %133, %138
  %141 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 19
  %142 = bitcast i32 (%struct._XDisplay*, %struct.XShmSegmentInfo*)** %141 to i8**
  store i8* %136, i8** %142, align 8
  %143 = tail call i8* @dlsym(i8* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0)) #3
  %144 = icmp eq i8* %143, null
  br i1 %144, label %145, label %147

145:                                              ; preds = %140
  %146 = tail call i8* @dlerror() #3
  br label %147

147:                                              ; preds = %140, %145
  %148 = getelementptr inbounds %struct.LibX11exports, %struct.LibX11exports* %0, i64 0, i32 20
  %149 = bitcast i32 (%struct._XDisplay*, i64, %struct._XGC*, %struct._XImage*, i32, i32, i32, i32, i32, i32, i1)** %148 to i8**
  store i8* %143, i8** %149, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %struct.LibX11exports* @_ZN6LibX11ptEv(%class.LibX11* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = tail call %struct.LibX11exports* @_ZN6LibX1111loadExportsEv(%class.LibX11* undef) #4
  ret %struct.LibX11exports* %2
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %struct.LibX11exports* @_ZN6LibX1111loadExportsEv(%class.LibX11* nocapture readnone) local_unnamed_addr #0 align 2 {
  %2 = load i8*, i8** @_ZZN6LibX1111loadExportsEvE6libX11, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %20

4:                                                ; preds = %1
  %5 = tail call i8* @dlsym(i8* null, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #3
  %6 = icmp eq i8* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 168) #5
  %9 = bitcast i8* %8 to %struct.LibX11exports*
  tail call void @_ZN13LibX11exportsC2EPvS0_(%struct.LibX11exports* nonnull %9, i8* null, i8* null) #4
  store i8* %8, i8** bitcast (%struct.LibX11exports** @_ZZN6LibX1111loadExportsEvE13libX11exports to i8**), align 8
  store i8* inttoptr (i64 -1 to i8*), i8** @_ZZN6LibX1111loadExportsEvE6libX11, align 8
  br label %20

10:                                               ; preds = %4
  %11 = tail call i8* @dlerror() #3
  %12 = tail call i8* @dlopen(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i32 1) #3
  store i8* %12, i8** @_ZZN6LibX1111loadExportsEvE6libX11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = tail call i8* @dlopen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i32 1) #3
  store i8* %15, i8** @_ZZN6LibX1111loadExportsEvE7libXext, align 8
  %16 = tail call i8* @_Znwm(i64 168) #5
  %17 = bitcast i8* %16 to %struct.LibX11exports*
  %18 = load i8*, i8** @_ZZN6LibX1111loadExportsEvE6libX11, align 8
  tail call void @_ZN13LibX11exportsC2EPvS0_(%struct.LibX11exports* nonnull %17, i8* %18, i8* %15) #4
  store i8* %16, i8** bitcast (%struct.LibX11exports** @_ZZN6LibX1111loadExportsEvE13libX11exports to i8**), align 8
  br label %20

19:                                               ; preds = %10
  store i8* inttoptr (i64 -1 to i8*), i8** @_ZZN6LibX1111loadExportsEvE6libX11, align 8
  br label %20

20:                                               ; preds = %1, %7, %19, %14
  %21 = load %struct.LibX11exports*, %struct.LibX11exports** @_ZZN6LibX1111loadExportsEvE13libX11exports, align 8
  ret %struct.LibX11exports* %21
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize
declare i8* @dlsym(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare i8* @dlerror() local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare i8* @dlopen(i8*, i32) local_unnamed_addr #2

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind optsize }
attributes #4 = { optsize }
attributes #5 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
