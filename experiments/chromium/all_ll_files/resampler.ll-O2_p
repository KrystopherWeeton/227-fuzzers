; ModuleID = '../../third_party/webrtc/common_audio/resampler/resampler.cc'
source_filename = "../../third_party/webrtc/common_audio/resampler/resampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::Resampler" = type { i8*, i8*, i8*, i16*, i16*, i64, i64, i64, i64, i32, i32, i32, i64, %"class.webrtc::Resampler"*, %"class.webrtc::Resampler"* }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%struct.WebRtcSpl_State16khzTo48khz = type { [8 x i32], [8 x i32], [8 x i32] }
%struct.WebRtcSpl_State8khzTo22khz = type { [8 x i32], [8 x i32], [8 x i32] }
%struct.WebRtcSpl_State16khzTo22khz = type { [8 x i32], [8 x i32] }
%struct.WebRtcSpl_State22khzTo16khz = type { [8 x i32], [8 x i32], [8 x i32] }
%struct.WebRtcSpl_State48khzTo16khz = type { [16 x i32], [8 x i32], [8 x i32] }
%struct.WebRtcSpl_State22khzTo8khz = type { [16 x i32], [8 x i32], [8 x i32] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [61 x i8] c"../../third_party/webrtc/common_audio/resampler/resampler.cc\00", align 1
@.str.1 = private unnamed_addr constant [63 x i8] c"Reset() called with unsupported channel count, num_channels = \00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"Reset() called with unsupported sample rates, inFreq = \00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c", outFreq = \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc9ResamplerC1Ev = hidden unnamed_addr alias void (%"class.webrtc::Resampler"*), void (%"class.webrtc::Resampler"*)* @_ZN6webrtc9ResamplerC2Ev
@_ZN6webrtc9ResamplerC1Eiim = hidden unnamed_addr alias void (%"class.webrtc::Resampler"*, i32, i32, i64), void (%"class.webrtc::Resampler"*, i32, i32, i64)* @_ZN6webrtc9ResamplerC2Eiim
@_ZN6webrtc9ResamplerD1Ev = hidden unnamed_addr alias void (%"class.webrtc::Resampler"*), void (%"class.webrtc::Resampler"*)* @_ZN6webrtc9ResamplerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc9ResamplerC2Ev(%"class.webrtc::Resampler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 12
  %3 = bitcast %"class.webrtc::Resampler"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 84, i1 false)
  %4 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc9ResamplerC2Eiim(%"class.webrtc::Resampler"*, i32, i32, i64) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 12
  %6 = bitcast %"class.webrtc::Resampler"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 84, i1 false) #9
  %7 = bitcast i64* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #9
  %8 = tail call i32 @_ZN6webrtc9Resampler5ResetEiim(%"class.webrtc::Resampler"* %0, i32 %1, i32 %2, i64 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc9Resampler5ResetEiim(%"class.webrtc::Resampler"*, i32, i32, i64) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %8 = add i64 %3, -1
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %4
  %11 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %11) #9
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str, i64 0, i64 0), i32 87, i32 2, i32 0, i32 0) #9
  %12 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i64 62) #9
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %14, i64 %3) #9
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %11) #9
  br label %165

16:                                               ; preds = %4
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #9
  store i32 -1431655766, i32* %6, align 4
  %18 = call i32 @_ZN6webrtc9Resampler20ComputeResamplerModeEiiPNS0_13ResamplerModeE(i32 %1, i32 %2, i32* nonnull %6)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.rtc::DiagnosticLogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %21) #9
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %7, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str, i64 0, i64 0), i32 94, i32 2, i32 0, i32 0) #9
  %22 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %7, i64 0, i32 7
  %23 = bitcast %"class.std::__1::basic_ostringstream"* %22 to %"class.std::__1::basic_ostream"*
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0), i64 55) #9
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %24, i32 %1) #9
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 12) #9
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %26, i32 %2) #9
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %21) #9
  br label %163

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 12
  store i64 %3, i64* %29, align 8
  %30 = load i32, i32* %6, align 4
  %31 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 11
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %28
  call void @free(i8* nonnull %33) #9
  store i8* null, i8** %32, align 8
  br label %36

36:                                               ; preds = %28, %35
  %37 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  call void @free(i8* nonnull %38) #9
  store i8* null, i8** %37, align 8
  br label %41

41:                                               ; preds = %36, %40
  %42 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 2
  %43 = load i8*, i8** %42, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  call void @free(i8* nonnull %43) #9
  store i8* null, i8** %42, align 8
  br label %46

46:                                               ; preds = %41, %45
  %47 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 3
  %48 = load i16*, i16** %47, align 8
  %49 = icmp eq i16* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast i16* %48 to i8*
  call void @free(i8* %51) #9
  store i16* null, i16** %47, align 8
  br label %52

52:                                               ; preds = %46, %50
  %53 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 4
  %54 = load i16*, i16** %53, align 8
  %55 = icmp eq i16* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = bitcast i16* %54 to i8*
  call void @free(i8* %57) #9
  store i16* null, i16** %53, align 8
  br label %58

58:                                               ; preds = %52, %56
  %59 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 13
  %60 = load %"class.webrtc::Resampler"*, %"class.webrtc::Resampler"** %59, align 8
  %61 = icmp eq %"class.webrtc::Resampler"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %58
  call void @_ZN6webrtc9ResamplerD2Ev(%"class.webrtc::Resampler"* nonnull %60) #9
  %63 = bitcast %"class.webrtc::Resampler"* %60 to i8*
  call void @_ZdlPv(i8* %63) #10
  store %"class.webrtc::Resampler"* null, %"class.webrtc::Resampler"** %59, align 8
  br label %64

64:                                               ; preds = %58, %62
  %65 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 14
  %66 = load %"class.webrtc::Resampler"*, %"class.webrtc::Resampler"** %65, align 8
  %67 = icmp eq %"class.webrtc::Resampler"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  call void @_ZN6webrtc9ResamplerD2Ev(%"class.webrtc::Resampler"* nonnull %66) #9
  %69 = bitcast %"class.webrtc::Resampler"* %66 to i8*
  call void @_ZdlPv(i8* %69) #10
  store %"class.webrtc::Resampler"* null, %"class.webrtc::Resampler"** %65, align 8
  br label %70

70:                                               ; preds = %64, %68
  %71 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 5
  %72 = sdiv i32 %1, 1000
  %73 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 9
  %74 = bitcast i64* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 32, i1 false)
  store i32 %72, i32* %73, align 8
  %75 = sdiv i32 %2, 1000
  %76 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 10
  store i32 %75, i32* %76, align 4
  %77 = load i64, i64* %29, align 8
  %78 = icmp eq i64 %77, 2
  br i1 %78, label %79, label %90

79:                                               ; preds = %70
  %80 = call i8* @_Znwm(i64 112) #10
  %81 = bitcast i8* %80 to %"class.webrtc::Resampler"*
  %82 = getelementptr inbounds i8, i8* %80, i64 88
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 84, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #9
  %83 = call i32 @_ZN6webrtc9Resampler5ResetEiim(%"class.webrtc::Resampler"* nonnull %81, i32 %1, i32 %2, i64 1) #9
  %84 = bitcast %"class.webrtc::Resampler"** %59 to i8**
  store i8* %80, i8** %84, align 8
  %85 = call i8* @_Znwm(i64 112) #10
  %86 = bitcast i8* %85 to %"class.webrtc::Resampler"*
  %87 = getelementptr inbounds i8, i8* %85, i64 88
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 84, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #9
  %88 = call i32 @_ZN6webrtc9Resampler5ResetEiim(%"class.webrtc::Resampler"* nonnull %86, i32 %1, i32 %2, i64 1) #9
  %89 = bitcast %"class.webrtc::Resampler"** %65 to i8**
  store i8* %85, i8** %89, align 8
  br label %90

90:                                               ; preds = %79, %70
  %91 = load i32, i32* %31, align 8
  switch i32 %91, label %163 [
    i32 20, label %160
    i32 1, label %92
    i32 2, label %94
    i32 3, label %97
    i32 4, label %100
    i32 5, label %104
    i32 6, label %109
    i32 7, label %113
    i32 8, label %117
    i32 9, label %120
    i32 10, label %123
    i32 11, label %127
    i32 12, label %132
    i32 13, label %134
    i32 14, label %137
    i32 15, label %140
    i32 16, label %144
    i32 17, label %149
    i32 18, label %153
    i32 19, label %157
  ]

92:                                               ; preds = %90
  %93 = call noalias i8* @malloc(i64 32) #9
  store i8* %93, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %93, i8 0, i64 32, i1 false)
  br label %163

94:                                               ; preds = %90
  %95 = call noalias i8* @malloc(i64 96) #9
  store i8* %95, i8** %32, align 8
  %96 = bitcast i8* %95 to %struct.WebRtcSpl_State16khzTo48khz*
  call void @WebRtcSpl_ResetResample16khzTo48khz(%struct.WebRtcSpl_State16khzTo48khz* %96) #9
  br label %163

97:                                               ; preds = %90
  %98 = call noalias i8* @malloc(i64 32) #9
  store i8* %98, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %98, i8 0, i64 32, i1 false)
  %99 = call noalias i8* @malloc(i64 32) #9
  store i8* %99, i8** %37, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %99, i8 0, i64 32, i1 false)
  br label %163

100:                                              ; preds = %90
  %101 = call noalias i8* @malloc(i64 32) #9
  store i8* %101, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %101, i8 0, i64 32, i1 false)
  %102 = call noalias i8* @malloc(i64 96) #9
  store i8* %102, i8** %37, align 8
  %103 = bitcast i8* %102 to %struct.WebRtcSpl_State16khzTo48khz*
  call void @WebRtcSpl_ResetResample16khzTo48khz(%struct.WebRtcSpl_State16khzTo48khz* %103) #9
  br label %163

104:                                              ; preds = %90
  %105 = call noalias i8* @malloc(i64 32) #9
  store i8* %105, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %105, i8 0, i64 32, i1 false)
  %106 = call noalias i8* @malloc(i64 32) #9
  store i8* %106, i8** %37, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %106, i8 0, i64 32, i1 false)
  %107 = call noalias i8* @malloc(i64 96) #9
  store i8* %107, i8** %42, align 8
  %108 = bitcast i8* %107 to %struct.WebRtcSpl_State16khzTo48khz*
  call void @WebRtcSpl_ResetResample16khzTo48khz(%struct.WebRtcSpl_State16khzTo48khz* %108) #9
  br label %163

109:                                              ; preds = %90
  %110 = call noalias i8* @malloc(i64 96) #9
  store i8* %110, i8** %32, align 8
  %111 = bitcast i8* %110 to %struct.WebRtcSpl_State16khzTo48khz*
  call void @WebRtcSpl_ResetResample16khzTo48khz(%struct.WebRtcSpl_State16khzTo48khz* %111) #9
  %112 = call noalias i8* @malloc(i64 32) #9
  store i8* %112, i8** %37, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %112, i8 0, i64 32, i1 false)
  br label %163

113:                                              ; preds = %90
  %114 = call noalias i8* @malloc(i64 32) #9
  store i8* %114, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %114, i8 0, i64 32, i1 false)
  %115 = call noalias i8* @malloc(i64 96) #9
  store i8* %115, i8** %37, align 8
  %116 = bitcast i8* %115 to %struct.WebRtcSpl_State8khzTo22khz*
  call void @WebRtcSpl_ResetResample8khzTo22khz(%struct.WebRtcSpl_State8khzTo22khz* %116) #9
  br label %163

117:                                              ; preds = %90
  %118 = call noalias i8* @malloc(i64 96) #9
  store i8* %118, i8** %32, align 8
  %119 = bitcast i8* %118 to %struct.WebRtcSpl_State8khzTo22khz*
  call void @WebRtcSpl_ResetResample8khzTo22khz(%struct.WebRtcSpl_State8khzTo22khz* %119) #9
  br label %163

120:                                              ; preds = %90
  %121 = call noalias i8* @malloc(i64 64) #9
  store i8* %121, i8** %32, align 8
  %122 = bitcast i8* %121 to %struct.WebRtcSpl_State16khzTo22khz*
  call void @WebRtcSpl_ResetResample16khzTo22khz(%struct.WebRtcSpl_State16khzTo22khz* %122) #9
  br label %163

123:                                              ; preds = %90
  %124 = call noalias i8* @malloc(i64 32) #9
  store i8* %124, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %124, i8 0, i64 32, i1 false)
  %125 = call noalias i8* @malloc(i64 96) #9
  store i8* %125, i8** %37, align 8
  %126 = bitcast i8* %125 to %struct.WebRtcSpl_State22khzTo16khz*
  call void @WebRtcSpl_ResetResample22khzTo16khz(%struct.WebRtcSpl_State22khzTo16khz* %126) #9
  br label %163

127:                                              ; preds = %90
  %128 = call noalias i8* @malloc(i64 32) #9
  store i8* %128, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %128, i8 0, i64 32, i1 false)
  %129 = call noalias i8* @malloc(i64 96) #9
  store i8* %129, i8** %37, align 8
  %130 = bitcast i8* %129 to %struct.WebRtcSpl_State22khzTo16khz*
  call void @WebRtcSpl_ResetResample22khzTo16khz(%struct.WebRtcSpl_State22khzTo16khz* %130) #9
  %131 = call noalias i8* @malloc(i64 32) #9
  store i8* %131, i8** %42, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %131, i8 0, i64 32, i1 false)
  br label %163

132:                                              ; preds = %90
  %133 = call noalias i8* @malloc(i64 32) #9
  store i8* %133, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %133, i8 0, i64 32, i1 false)
  br label %163

134:                                              ; preds = %90
  %135 = call noalias i8* @malloc(i64 128) #9
  store i8* %135, i8** %32, align 8
  %136 = bitcast i8* %135 to %struct.WebRtcSpl_State48khzTo16khz*
  call void @WebRtcSpl_ResetResample48khzTo16khz(%struct.WebRtcSpl_State48khzTo16khz* %136) #9
  br label %163

137:                                              ; preds = %90
  %138 = call noalias i8* @malloc(i64 32) #9
  store i8* %138, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %138, i8 0, i64 32, i1 false)
  %139 = call noalias i8* @malloc(i64 32) #9
  store i8* %139, i8** %37, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %139, i8 0, i64 32, i1 false)
  br label %163

140:                                              ; preds = %90
  %141 = call noalias i8* @malloc(i64 128) #9
  store i8* %141, i8** %32, align 8
  %142 = bitcast i8* %141 to %struct.WebRtcSpl_State48khzTo16khz*
  call void @WebRtcSpl_ResetResample48khzTo16khz(%struct.WebRtcSpl_State48khzTo16khz* %142) #9
  %143 = call noalias i8* @malloc(i64 32) #9
  store i8* %143, i8** %37, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %143, i8 0, i64 32, i1 false)
  br label %163

144:                                              ; preds = %90
  %145 = call noalias i8* @malloc(i64 128) #9
  store i8* %145, i8** %32, align 8
  %146 = bitcast i8* %145 to %struct.WebRtcSpl_State48khzTo16khz*
  call void @WebRtcSpl_ResetResample48khzTo16khz(%struct.WebRtcSpl_State48khzTo16khz* %146) #9
  %147 = call noalias i8* @malloc(i64 32) #9
  store i8* %147, i8** %37, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %147, i8 0, i64 32, i1 false)
  %148 = call noalias i8* @malloc(i64 32) #9
  store i8* %148, i8** %42, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %148, i8 0, i64 32, i1 false)
  br label %163

149:                                              ; preds = %90
  %150 = call noalias i8* @malloc(i64 32) #9
  store i8* %150, i8** %32, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %150, i8 0, i64 32, i1 false)
  %151 = call noalias i8* @malloc(i64 128) #9
  store i8* %151, i8** %37, align 8
  %152 = bitcast i8* %151 to %struct.WebRtcSpl_State48khzTo16khz*
  call void @WebRtcSpl_ResetResample48khzTo16khz(%struct.WebRtcSpl_State48khzTo16khz* %152) #9
  br label %163

153:                                              ; preds = %90
  %154 = call noalias i8* @malloc(i64 128) #9
  store i8* %154, i8** %32, align 8
  %155 = bitcast i8* %154 to %struct.WebRtcSpl_State22khzTo8khz*
  call void @WebRtcSpl_ResetResample22khzTo8khz(%struct.WebRtcSpl_State22khzTo8khz* %155) #9
  %156 = call noalias i8* @malloc(i64 32) #9
  store i8* %156, i8** %37, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %156, i8 0, i64 32, i1 false)
  br label %163

157:                                              ; preds = %90
  %158 = call noalias i8* @malloc(i64 128) #9
  store i8* %158, i8** %32, align 8
  %159 = bitcast i8* %158 to %struct.WebRtcSpl_State22khzTo8khz*
  call void @WebRtcSpl_ResetResample22khzTo8khz(%struct.WebRtcSpl_State22khzTo8khz* %159) #9
  br label %163

160:                                              ; preds = %90
  %161 = call noalias i8* @malloc(i64 96) #9
  store i8* %161, i8** %32, align 8
  %162 = bitcast i8* %161 to %struct.WebRtcSpl_State22khzTo16khz*
  call void @WebRtcSpl_ResetResample22khzTo16khz(%struct.WebRtcSpl_State22khzTo16khz* %162) #9
  br label %163

163:                                              ; preds = %92, %94, %97, %100, %104, %109, %113, %117, %120, %123, %127, %132, %134, %137, %140, %144, %149, %153, %157, %160, %90, %20
  %164 = phi i32 [ -1, %20 ], [ 0, %90 ], [ 0, %160 ], [ 0, %157 ], [ 0, %153 ], [ 0, %149 ], [ 0, %144 ], [ 0, %140 ], [ 0, %137 ], [ 0, %134 ], [ 0, %132 ], [ 0, %127 ], [ 0, %123 ], [ 0, %120 ], [ 0, %117 ], [ 0, %113 ], [ 0, %109 ], [ 0, %104 ], [ 0, %100 ], [ 0, %97 ], [ 0, %94 ], [ 0, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #9
  br label %165

165:                                              ; preds = %163, %10
  %166 = phi i32 [ -1, %10 ], [ %164, %163 ]
  ret i32 %166
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc9ResamplerD2Ev(%"class.webrtc::Resampler"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @free(i8* nonnull %3) #9
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @free(i8* nonnull %8) #9
  br label %11

11:                                               ; preds = %6, %10
  %12 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 2
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @free(i8* nonnull %13) #9
  br label %16

16:                                               ; preds = %11, %15
  %17 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 3
  %18 = load i16*, i16** %17, align 8
  %19 = icmp eq i16* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = bitcast i16* %18 to i8*
  tail call void @free(i8* %21) #9
  br label %22

22:                                               ; preds = %16, %20
  %23 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 4
  %24 = load i16*, i16** %23, align 8
  %25 = icmp eq i16* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast i16* %24 to i8*
  tail call void @free(i8* %27) #9
  br label %28

28:                                               ; preds = %22, %26
  %29 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 13
  %30 = load %"class.webrtc::Resampler"*, %"class.webrtc::Resampler"** %29, align 8
  %31 = icmp eq %"class.webrtc::Resampler"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  tail call void @_ZN6webrtc9ResamplerD2Ev(%"class.webrtc::Resampler"* nonnull %30) #9
  %33 = bitcast %"class.webrtc::Resampler"* %30 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 14
  %36 = load %"class.webrtc::Resampler"*, %"class.webrtc::Resampler"** %35, align 8
  %37 = icmp eq %"class.webrtc::Resampler"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  tail call void @_ZN6webrtc9ResamplerD2Ev(%"class.webrtc::Resampler"* nonnull %36) #9
  %39 = bitcast %"class.webrtc::Resampler"* %36 to i8*
  tail call void @_ZdlPv(i8* %39) #10
  ret void

40:                                               ; preds = %34
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc9Resampler13ResetIfNeededEiim(%"class.webrtc::Resampler"*, i32, i32, i64) local_unnamed_addr #1 align 2 {
  %5 = sdiv i32 %1, 1000
  %6 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 9
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %18

9:                                                ; preds = %4
  %10 = sdiv i32 %2, 1000
  %11 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 10
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %18

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 12
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, %3
  br i1 %17, label %20, label %18

18:                                               ; preds = %14, %9, %4
  %19 = tail call i32 @_ZN6webrtc9Resampler5ResetEiim(%"class.webrtc::Resampler"* %0, i32 %1, i32 %2, i64 %3)
  br label %20

20:                                               ; preds = %14, %18
  %21 = phi i32 [ %19, %18 ], [ 0, %14 ]
  ret i32 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6webrtc9Resampler20ComputeResamplerModeEiiPNS0_13ResamplerModeE(i32, i32, i32*) local_unnamed_addr #0 align 2 {
  %4 = srem i32 %0, %1
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %9, %6 ], [ %4, %3 ]
  %8 = phi i32 [ %7, %6 ], [ %1, %3 ]
  %9 = srem i32 %8, %7
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %6

11:                                               ; preds = %6, %3
  %12 = phi i32 [ %1, %3 ], [ %7, %6 ]
  %13 = sdiv i32 %0, %12
  %14 = sdiv i32 %1, %12
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %11
  store i32 0, i32* %2, align 4
  br label %75

17:                                               ; preds = %11
  %18 = icmp eq i32 %13, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %17
  switch i32 %14, label %75 [
    i32 2, label %20
    i32 3, label %21
    i32 4, label %22
    i32 6, label %23
    i32 12, label %24
  ]

20:                                               ; preds = %19
  store i32 1, i32* %2, align 4
  br label %75

21:                                               ; preds = %19
  store i32 2, i32* %2, align 4
  br label %75

22:                                               ; preds = %19
  store i32 3, i32* %2, align 4
  br label %75

23:                                               ; preds = %19
  store i32 4, i32* %2, align 4
  br label %75

24:                                               ; preds = %19
  store i32 5, i32* %2, align 4
  br label %75

25:                                               ; preds = %17
  %26 = icmp eq i32 %14, 1
  br i1 %26, label %27, label %33

27:                                               ; preds = %25
  switch i32 %13, label %75 [
    i32 2, label %28
    i32 3, label %29
    i32 4, label %30
    i32 6, label %31
    i32 12, label %32
  ]

28:                                               ; preds = %27
  store i32 12, i32* %2, align 4
  br label %75

29:                                               ; preds = %27
  store i32 13, i32* %2, align 4
  br label %75

30:                                               ; preds = %27
  store i32 14, i32* %2, align 4
  br label %75

31:                                               ; preds = %27
  store i32 15, i32* %2, align 4
  br label %75

32:                                               ; preds = %27
  store i32 16, i32* %2, align 4
  br label %75

33:                                               ; preds = %25
  %34 = icmp eq i32 %13, 2
  %35 = icmp eq i32 %14, 3
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  store i32 6, i32* %2, align 4
  br label %75

38:                                               ; preds = %33
  %39 = icmp eq i32 %14, 11
  %40 = and i1 %34, %39
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  store i32 7, i32* %2, align 4
  br label %75

42:                                               ; preds = %38
  %43 = icmp eq i32 %13, 4
  %44 = and i1 %43, %39
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  store i32 8, i32* %2, align 4
  br label %75

46:                                               ; preds = %42
  %47 = icmp eq i32 %13, 8
  %48 = and i1 %47, %39
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  store i32 9, i32* %2, align 4
  br label %75

50:                                               ; preds = %46
  %51 = icmp eq i32 %13, 3
  %52 = icmp eq i32 %14, 2
  %53 = and i1 %51, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %50
  store i32 17, i32* %2, align 4
  br label %75

55:                                               ; preds = %50
  %56 = icmp eq i32 %13, 11
  %57 = and i1 %56, %52
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  store i32 18, i32* %2, align 4
  br label %75

59:                                               ; preds = %55
  %60 = icmp eq i32 %14, 4
  %61 = and i1 %56, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  store i32 19, i32* %2, align 4
  br label %75

63:                                               ; preds = %59
  %64 = icmp eq i32 %14, 16
  %65 = and i1 %56, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  store i32 10, i32* %2, align 4
  br label %75

67:                                               ; preds = %63
  %68 = icmp eq i32 %14, 32
  %69 = and i1 %56, %68
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  store i32 11, i32* %2, align 4
  br label %75

71:                                               ; preds = %67
  %72 = icmp eq i32 %14, 8
  %73 = and i1 %56, %72
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  store i32 20, i32* %2, align 4
  br label %75

75:                                               ; preds = %16, %32, %31, %30, %29, %28, %41, %49, %58, %66, %74, %70, %62, %54, %45, %37, %20, %21, %22, %23, %24, %71, %27, %19
  %76 = phi i32 [ -1, %19 ], [ -1, %27 ], [ -1, %71 ], [ 0, %24 ], [ 0, %23 ], [ 0, %22 ], [ 0, %21 ], [ 0, %20 ], [ 0, %37 ], [ 0, %45 ], [ 0, %54 ], [ 0, %62 ], [ 0, %70 ], [ 0, %74 ], [ 0, %66 ], [ 0, %58 ], [ 0, %49 ], [ 0, %41 ], [ 0, %28 ], [ 0, %29 ], [ 0, %30 ], [ 0, %31 ], [ 0, %32 ], [ 0, %16 ]
  ret i32 %76
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @WebRtcSpl_ResetResample16khzTo48khz(%struct.WebRtcSpl_State16khzTo48khz*) local_unnamed_addr #5

declare void @WebRtcSpl_ResetResample8khzTo22khz(%struct.WebRtcSpl_State8khzTo22khz*) local_unnamed_addr #5

declare void @WebRtcSpl_ResetResample16khzTo22khz(%struct.WebRtcSpl_State16khzTo22khz*) local_unnamed_addr #5

declare void @WebRtcSpl_ResetResample22khzTo16khz(%struct.WebRtcSpl_State22khzTo16khz*) local_unnamed_addr #5

declare void @WebRtcSpl_ResetResample48khzTo16khz(%struct.WebRtcSpl_State48khzTo16khz*) local_unnamed_addr #5

declare void @WebRtcSpl_ResetResample22khzTo8khz(%struct.WebRtcSpl_State22khzTo8khz*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc9Resampler4PushEPKsmPsmRm(%"class.webrtc::Resampler"* readonly, i16*, i64, i16*, i64, i64* dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %7 = ptrtoint i16* %3 to i64
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 12
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 2
  br i1 %12, label %13, label %176

13:                                               ; preds = %6
  %14 = and i64 %2, 9223372036854775807
  %15 = tail call noalias i8* @malloc(i64 %14) #9
  %16 = bitcast i8* %15 to i16*
  %17 = tail call noalias i8* @malloc(i64 %14) #9
  %18 = bitcast i8* %17 to i16*
  %19 = lshr i64 %4, 1
  %20 = and i64 %4, -2
  %21 = tail call noalias i8* @malloc(i64 %20) #9
  %22 = bitcast i8* %21 to i16*
  %23 = tail call noalias i8* @malloc(i64 %20) #9
  %24 = bitcast i8* %23 to i16*
  %25 = icmp eq i64 %2, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %38, %13
  %27 = lshr i64 %2, 1
  %28 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  store i64 0, i64* %8, align 8
  %29 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #9
  store i64 0, i64* %9, align 8
  %30 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 13
  %31 = load %"class.webrtc::Resampler"*, %"class.webrtc::Resampler"** %30, align 8
  %32 = call i32 @_ZN6webrtc9Resampler4PushEPKsmPsmRm(%"class.webrtc::Resampler"* %31, i16* %16, i64 %27, i16* %22, i64 %19, i64* nonnull dereferenceable(8) %8)
  %33 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 14
  %34 = load %"class.webrtc::Resampler"*, %"class.webrtc::Resampler"** %33, align 8
  %35 = call i32 @_ZN6webrtc9Resampler4PushEPKsmPsmRm(%"class.webrtc::Resampler"* %34, i16* %18, i64 %27, i16* %24, i64 %19, i64* nonnull dereferenceable(8) %9)
  %36 = or i32 %35, %32
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %50, label %174

38:                                               ; preds = %13, %38
  %39 = phi i64 [ %48, %38 ], [ 0, %13 ]
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = lshr exact i64 %39, 1
  %43 = getelementptr inbounds i16, i16* %16, i64 %42
  store i16 %41, i16* %43, align 2
  %44 = or i64 %39, 1
  %45 = getelementptr inbounds i16, i16* %1, i64 %44
  %46 = load i16, i16* %45, align 2
  %47 = getelementptr inbounds i16, i16* %18, i64 %42
  store i16 %46, i16* %47, align 2
  %48 = add i64 %39, 2
  %49 = icmp ult i64 %48, %2
  br i1 %49, label %38, label %26

50:                                               ; preds = %26
  %51 = load i64, i64* %8, align 8
  %52 = load i64, i64* %9, align 8
  %53 = icmp eq i64 %51, %52
  br i1 %53, label %54, label %174

54:                                               ; preds = %50
  %55 = icmp eq i64 %51, 0
  br i1 %55, label %151, label %56

56:                                               ; preds = %54
  %57 = icmp ult i64 %51, 8
  br i1 %57, label %58, label %76

58:                                               ; preds = %149, %76, %56
  %59 = phi i64 [ 0, %76 ], [ 0, %56 ], [ %94, %149 ]
  %60 = and i64 %51, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %72, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds i16, i16* %22, i64 %59
  %64 = load i16, i16* %63, align 2
  %65 = shl i64 %59, 1
  %66 = getelementptr inbounds i16, i16* %3, i64 %65
  store i16 %64, i16* %66, align 2
  %67 = getelementptr inbounds i16, i16* %24, i64 %59
  %68 = load i16, i16* %67, align 2
  %69 = or i64 %65, 1
  %70 = getelementptr inbounds i16, i16* %3, i64 %69
  store i16 %68, i16* %70, align 2
  %71 = or i64 %59, 1
  br label %72

72:                                               ; preds = %58, %62
  %73 = phi i64 [ %59, %58 ], [ %71, %62 ]
  %74 = or i64 %59, 1
  %75 = icmp eq i64 %51, %74
  br i1 %75, label %151, label %153

76:                                               ; preds = %56
  %77 = add i64 %51, -1
  %78 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %77, i64 4)
  %79 = extractvalue { i64, i1 } %78, 0
  %80 = extractvalue { i64, i1 } %78, 1
  %81 = xor i64 %7, -1
  %82 = icmp ugt i64 %79, %81
  %83 = or i1 %82, %80
  %84 = getelementptr i16, i16* %3, i64 1
  %85 = ptrtoint i16* %84 to i64
  %86 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %77, i64 4)
  %87 = extractvalue { i64, i1 } %86, 0
  %88 = extractvalue { i64, i1 } %86, 1
  %89 = xor i64 %85, -1
  %90 = icmp ugt i64 %87, %89
  %91 = or i1 %90, %88
  %92 = or i1 %83, %91
  br i1 %92, label %58, label %93

93:                                               ; preds = %76
  %94 = and i64 %51, -8
  %95 = add i64 %94, -8
  %96 = lshr exact i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %95, 0
  br i1 %99, label %133, label %100

100:                                              ; preds = %93
  %101 = sub nuw nsw i64 %97, %98
  %102 = getelementptr inbounds i16, i16* %3, i64 -1
  %103 = getelementptr inbounds i16, i16* %3, i64 -1
  br label %104

104:                                              ; preds = %104, %100
  %105 = phi i64 [ 0, %100 ], [ %130, %104 ]
  %106 = phi i64 [ %101, %100 ], [ %131, %104 ]
  %107 = getelementptr inbounds i16, i16* %22, i64 %105
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2
  %110 = shl i64 %105, 1
  %111 = getelementptr inbounds i16, i16* %24, i64 %105
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2
  %114 = or i64 %110, 1
  %115 = getelementptr inbounds i16, i16* %102, i64 %114
  %116 = bitcast i16* %115 to <16 x i16>*
  %117 = shufflevector <8 x i16> %109, <8 x i16> %113, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %117, <16 x i16>* %116, align 2
  %118 = or i64 %105, 8
  %119 = getelementptr inbounds i16, i16* %22, i64 %118
  %120 = bitcast i16* %119 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2
  %122 = shl i64 %118, 1
  %123 = getelementptr inbounds i16, i16* %24, i64 %118
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2
  %126 = or i64 %122, 1
  %127 = getelementptr inbounds i16, i16* %103, i64 %126
  %128 = bitcast i16* %127 to <16 x i16>*
  %129 = shufflevector <8 x i16> %121, <8 x i16> %125, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %129, <16 x i16>* %128, align 2
  %130 = add i64 %105, 16
  %131 = add i64 %106, -2
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %104, !llvm.loop !2

133:                                              ; preds = %104, %93
  %134 = phi i64 [ 0, %93 ], [ %130, %104 ]
  %135 = icmp eq i64 %98, 0
  br i1 %135, label %149, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds i16, i16* %22, i64 %134
  %138 = bitcast i16* %137 to <8 x i16>*
  %139 = load <8 x i16>, <8 x i16>* %138, align 2
  %140 = shl i64 %134, 1
  %141 = getelementptr inbounds i16, i16* %24, i64 %134
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2
  %144 = or i64 %140, 1
  %145 = getelementptr inbounds i16, i16* %3, i64 -1
  %146 = getelementptr inbounds i16, i16* %145, i64 %144
  %147 = bitcast i16* %146 to <16 x i16>*
  %148 = shufflevector <8 x i16> %139, <8 x i16> %143, <16 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11, i32 4, i32 12, i32 5, i32 13, i32 6, i32 14, i32 7, i32 15>
  store <16 x i16> %148, <16 x i16>* %147, align 2
  br label %149

149:                                              ; preds = %133, %136
  %150 = icmp eq i64 %51, %94
  br i1 %150, label %151, label %58

151:                                              ; preds = %72, %153, %149, %54
  %152 = shl i64 %51, 1
  store i64 %152, i64* %5, align 8
  br label %174

153:                                              ; preds = %72, %153
  %154 = phi i64 [ %172, %153 ], [ %73, %72 ]
  %155 = getelementptr inbounds i16, i16* %22, i64 %154
  %156 = load i16, i16* %155, align 2
  %157 = shl i64 %154, 1
  %158 = getelementptr inbounds i16, i16* %3, i64 %157
  store i16 %156, i16* %158, align 2
  %159 = getelementptr inbounds i16, i16* %24, i64 %154
  %160 = load i16, i16* %159, align 2
  %161 = or i64 %157, 1
  %162 = getelementptr inbounds i16, i16* %3, i64 %161
  store i16 %160, i16* %162, align 2
  %163 = add nuw i64 %154, 1
  %164 = getelementptr inbounds i16, i16* %22, i64 %163
  %165 = load i16, i16* %164, align 2
  %166 = shl i64 %163, 1
  %167 = getelementptr inbounds i16, i16* %3, i64 %166
  store i16 %165, i16* %167, align 2
  %168 = getelementptr inbounds i16, i16* %24, i64 %163
  %169 = load i16, i16* %168, align 2
  %170 = or i64 %166, 1
  %171 = getelementptr inbounds i16, i16* %3, i64 %170
  store i16 %169, i16* %171, align 2
  %172 = add nuw i64 %154, 2
  %173 = icmp eq i64 %172, %51
  br i1 %173, label %151, label %153, !llvm.loop !4

174:                                              ; preds = %26, %50, %151
  %175 = phi i32 [ 0, %151 ], [ -1, %50 ], [ -1, %26 ]
  call void @free(i8* %15) #9
  call void @free(i8* %17) #9
  call void @free(i8* %21) #9
  call void @free(i8* %23) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  br label %682

176:                                              ; preds = %6
  %177 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 11
  %178 = load i32, i32* %177, align 8
  switch i32 %178, label %682 [
    i32 0, label %179
    i32 1, label %183
    i32 2, label %189
    i32 3, label %210
    i32 4, label %222
    i32 5, label %254
    i32 6, label %291
    i32 7, label %319
    i32 8, label %351
    i32 9, label %374
    i32 10, label %397
    i32 11, label %427
    i32 12, label %462
    i32 13, label %468
    i32 14, label %489
    i32 15, label %502
    i32 16, label %534
    i32 17, label %575
    i32 18, label %604
    i32 19, label %636
    i32 20, label %659
  ]

179:                                              ; preds = %176
  %180 = bitcast i16* %3 to i8*
  %181 = bitcast i16* %1 to i8*
  %182 = shl i64 %2, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %180, i8* align 2 %181, i64 %182, i1 false)
  store i64 %2, i64* %5, align 8
  br label %682

183:                                              ; preds = %176
  %184 = shl i64 %2, 1
  %185 = icmp ugt i64 %184, %4
  br i1 %185, label %682, label %186

186:                                              ; preds = %183
  %187 = bitcast %"class.webrtc::Resampler"* %0 to i32**
  %188 = load i32*, i32** %187, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %1, i64 %2, i16* %3, i32* %188) #9
  store i64 %184, i64* %5, align 8
  br label %682

189:                                              ; preds = %176
  %190 = urem i64 %2, 160
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %682

192:                                              ; preds = %189
  %193 = mul i64 %2, 3
  %194 = icmp ugt i64 %193, %4
  br i1 %194, label %682, label %195

195:                                              ; preds = %192
  %196 = tail call noalias i8* @malloc(i64 1344) #9
  %197 = bitcast i8* %196 to i32*
  %198 = icmp eq i64 %2, 0
  br i1 %198, label %201, label %199

199:                                              ; preds = %195
  %200 = bitcast %"class.webrtc::Resampler"* %0 to %struct.WebRtcSpl_State16khzTo48khz**
  br label %202

201:                                              ; preds = %202, %195
  store i64 %193, i64* %5, align 8
  tail call void @free(i8* %196) #9
  br label %682

202:                                              ; preds = %199, %202
  %203 = phi i64 [ 0, %199 ], [ %208, %202 ]
  %204 = getelementptr inbounds i16, i16* %1, i64 %203
  %205 = mul i64 %203, 3
  %206 = getelementptr inbounds i16, i16* %3, i64 %205
  %207 = load %struct.WebRtcSpl_State16khzTo48khz*, %struct.WebRtcSpl_State16khzTo48khz** %200, align 8
  tail call void @WebRtcSpl_Resample16khzTo48khz(i16* %204, i16* %206, %struct.WebRtcSpl_State16khzTo48khz* %207, i32* %197) #9
  %208 = add i64 %203, 160
  %209 = icmp ult i64 %208, %2
  br i1 %209, label %202, label %201

210:                                              ; preds = %176
  %211 = shl i64 %2, 2
  %212 = icmp ugt i64 %211, %4
  br i1 %212, label %682, label %213

213:                                              ; preds = %210
  %214 = tail call noalias i8* @malloc(i64 %211) #9
  %215 = bitcast i8* %214 to i16*
  %216 = bitcast %"class.webrtc::Resampler"* %0 to i32**
  %217 = load i32*, i32** %216, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %1, i64 %2, i16* %215, i32* %217) #9
  %218 = shl i64 %2, 1
  %219 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %220 = bitcast i8** %219 to i32**
  %221 = load i32*, i32** %220, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %215, i64 %218, i16* %3, i32* %221) #9
  store i64 %211, i64* %5, align 8
  tail call void @free(i8* %214) #9
  br label %682

222:                                              ; preds = %176
  %223 = urem i64 %2, 80
  %224 = icmp ne i64 %223, 0
  %225 = mul i64 %2, 6
  %226 = icmp ugt i64 %225, %4
  %227 = or i1 %224, %226
  br i1 %227, label %682, label %228

228:                                              ; preds = %222
  %229 = tail call noalias i8* @malloc(i64 1344) #9
  %230 = bitcast i8* %229 to i32*
  %231 = shl i64 %2, 2
  %232 = tail call noalias i8* @malloc(i64 %231) #9
  %233 = bitcast i8* %232 to i16*
  %234 = bitcast %"class.webrtc::Resampler"* %0 to i32**
  %235 = load i32*, i32** %234, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %1, i64 %2, i16* %233, i32* %235) #9
  %236 = shl i64 %2, 1
  store i64 %236, i64* %5, align 8
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %243, label %238

238:                                              ; preds = %228
  %239 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %240 = bitcast i8** %239 to %struct.WebRtcSpl_State16khzTo48khz**
  br label %245

241:                                              ; preds = %245
  %242 = mul i64 %252, 3
  br label %243

243:                                              ; preds = %241, %228
  %244 = phi i64 [ 0, %228 ], [ %242, %241 ]
  store i64 %244, i64* %5, align 8
  tail call void @free(i8* %229) #9
  tail call void @free(i8* %232) #9
  br label %682

245:                                              ; preds = %238, %245
  %246 = phi i64 [ 0, %238 ], [ %251, %245 ]
  %247 = getelementptr inbounds i16, i16* %233, i64 %246
  %248 = mul i64 %246, 3
  %249 = getelementptr inbounds i16, i16* %3, i64 %248
  %250 = load %struct.WebRtcSpl_State16khzTo48khz*, %struct.WebRtcSpl_State16khzTo48khz** %240, align 8
  tail call void @WebRtcSpl_Resample16khzTo48khz(i16* %247, i16* %249, %struct.WebRtcSpl_State16khzTo48khz* %250, i32* %230) #9
  %251 = add i64 %246, 160
  %252 = load i64, i64* %5, align 8
  %253 = icmp ult i64 %251, %252
  br i1 %253, label %245, label %241

254:                                              ; preds = %176
  %255 = urem i64 %2, 40
  %256 = icmp ne i64 %255, 0
  %257 = mul i64 %2, 12
  %258 = icmp ugt i64 %257, %4
  %259 = or i1 %256, %258
  br i1 %259, label %682, label %260

260:                                              ; preds = %254
  %261 = tail call noalias i8* @malloc(i64 1344) #9
  %262 = bitcast i8* %261 to i32*
  %263 = shl i64 %2, 3
  %264 = tail call noalias i8* @malloc(i64 %263) #9
  %265 = bitcast i8* %264 to i16*
  %266 = bitcast %"class.webrtc::Resampler"* %0 to i32**
  %267 = load i32*, i32** %266, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %1, i64 %2, i16* %3, i32* %267) #9
  %268 = shl i64 %2, 1
  store i64 %268, i64* %5, align 8
  %269 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %270 = bitcast i8** %269 to i32**
  %271 = load i32*, i32** %270, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %3, i64 %268, i16* %265, i32* %271) #9
  %272 = load i64, i64* %5, align 8
  %273 = shl i64 %272, 1
  store i64 %273, i64* %5, align 8
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %280, label %275

275:                                              ; preds = %260
  %276 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 2
  %277 = bitcast i8** %276 to %struct.WebRtcSpl_State16khzTo48khz**
  br label %282

278:                                              ; preds = %282
  %279 = mul i64 %289, 3
  br label %280

280:                                              ; preds = %278, %260
  %281 = phi i64 [ 0, %260 ], [ %279, %278 ]
  store i64 %281, i64* %5, align 8
  tail call void @free(i8* %261) #9
  tail call void @free(i8* %264) #9
  br label %682

282:                                              ; preds = %275, %282
  %283 = phi i64 [ 0, %275 ], [ %288, %282 ]
  %284 = getelementptr inbounds i16, i16* %265, i64 %283
  %285 = mul i64 %283, 3
  %286 = getelementptr inbounds i16, i16* %3, i64 %285
  %287 = load %struct.WebRtcSpl_State16khzTo48khz*, %struct.WebRtcSpl_State16khzTo48khz** %277, align 8
  tail call void @WebRtcSpl_Resample16khzTo48khz(i16* %284, i16* %286, %struct.WebRtcSpl_State16khzTo48khz* %287, i32* %262) #9
  %288 = add i64 %283, 160
  %289 = load i64, i64* %5, align 8
  %290 = icmp ult i64 %288, %289
  br i1 %290, label %282, label %278

291:                                              ; preds = %176
  %292 = mul i64 %2, 3
  %293 = lshr i64 %292, 1
  %294 = icmp ule i64 %293, %4
  %295 = urem i64 %2, 160
  %296 = icmp eq i64 %295, 0
  %297 = and i1 %296, %294
  br i1 %297, label %298, label %682

298:                                              ; preds = %291
  %299 = mul i64 %2, 6
  %300 = tail call noalias i8* @malloc(i64 %299) #9
  %301 = bitcast i8* %300 to i16*
  %302 = tail call noalias i8* @malloc(i64 1344) #9
  %303 = bitcast i8* %302 to i32*
  %304 = icmp eq i64 %2, 0
  br i1 %304, label %307, label %305

305:                                              ; preds = %298
  %306 = bitcast %"class.webrtc::Resampler"* %0 to %struct.WebRtcSpl_State16khzTo48khz**
  br label %311

307:                                              ; preds = %311, %298
  %308 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %309 = bitcast i8** %308 to i32**
  %310 = load i32*, i32** %309, align 8
  tail call void @WebRtcSpl_DownsampleBy2(i16* %301, i64 %292, i16* %3, i32* %310) #9
  store i64 %293, i64* %5, align 8
  tail call void @free(i8* %300) #9
  tail call void @free(i8* %302) #9
  br label %682

311:                                              ; preds = %305, %311
  %312 = phi i64 [ 0, %305 ], [ %317, %311 ]
  %313 = getelementptr inbounds i16, i16* %1, i64 %312
  %314 = mul i64 %312, 3
  %315 = getelementptr inbounds i16, i16* %301, i64 %314
  %316 = load %struct.WebRtcSpl_State16khzTo48khz*, %struct.WebRtcSpl_State16khzTo48khz** %306, align 8
  tail call void @WebRtcSpl_Resample16khzTo48khz(i16* %313, i16* %315, %struct.WebRtcSpl_State16khzTo48khz* %316, i32* %303) #9
  %317 = add i64 %312, 160
  %318 = icmp ult i64 %317, %2
  br i1 %318, label %311, label %307

319:                                              ; preds = %176
  %320 = urem i64 %2, 80
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %682

322:                                              ; preds = %319
  %323 = mul i64 %2, 11
  %324 = lshr i64 %323, 1
  %325 = icmp ugt i64 %324, %4
  br i1 %325, label %682, label %326

326:                                              ; preds = %322
  %327 = shl i64 %2, 2
  %328 = tail call noalias i8* @malloc(i64 %327) #9
  %329 = bitcast i8* %328 to i16*
  %330 = bitcast %"class.webrtc::Resampler"* %0 to i32**
  %331 = load i32*, i32** %330, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %1, i64 %2, i16* %329, i32* %331) #9
  %332 = shl i64 %2, 1
  %333 = tail call noalias i8* @malloc(i64 392) #9
  %334 = bitcast i8* %333 to i32*
  %335 = icmp eq i64 %332, 0
  br i1 %335, label %339, label %336

336:                                              ; preds = %326
  %337 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %338 = bitcast i8** %337 to %struct.WebRtcSpl_State8khzTo22khz**
  br label %342

339:                                              ; preds = %342, %326
  %340 = mul i64 %2, 22
  %341 = lshr i64 %340, 2
  store i64 %341, i64* %5, align 8
  tail call void @free(i8* %333) #9
  tail call void @free(i8* %328) #9
  br label %682

342:                                              ; preds = %336, %342
  %343 = phi i64 [ 0, %336 ], [ %349, %342 ]
  %344 = getelementptr inbounds i16, i16* %329, i64 %343
  %345 = mul i64 %343, 11
  %346 = lshr exact i64 %345, 2
  %347 = getelementptr inbounds i16, i16* %3, i64 %346
  %348 = load %struct.WebRtcSpl_State8khzTo22khz*, %struct.WebRtcSpl_State8khzTo22khz** %338, align 8
  tail call void @WebRtcSpl_Resample8khzTo22khz(i16* %344, i16* %347, %struct.WebRtcSpl_State8khzTo22khz* %348, i32* %334) #9
  %349 = add i64 %343, 80
  %350 = icmp ult i64 %349, %332
  br i1 %350, label %342, label %339

351:                                              ; preds = %176
  %352 = urem i64 %2, 80
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %354, label %682

354:                                              ; preds = %351
  %355 = mul i64 %2, 11
  %356 = lshr i64 %355, 2
  %357 = icmp ugt i64 %356, %4
  br i1 %357, label %682, label %358

358:                                              ; preds = %354
  %359 = tail call noalias i8* @malloc(i64 392) #9
  %360 = bitcast i8* %359 to i32*
  %361 = icmp eq i64 %2, 0
  br i1 %361, label %364, label %362

362:                                              ; preds = %358
  %363 = bitcast %"class.webrtc::Resampler"* %0 to %struct.WebRtcSpl_State8khzTo22khz**
  br label %365

364:                                              ; preds = %365, %358
  store i64 %356, i64* %5, align 8
  tail call void @free(i8* %359) #9
  br label %682

365:                                              ; preds = %362, %365
  %366 = phi i64 [ 0, %362 ], [ %372, %365 ]
  %367 = getelementptr inbounds i16, i16* %1, i64 %366
  %368 = mul i64 %366, 11
  %369 = lshr exact i64 %368, 2
  %370 = getelementptr inbounds i16, i16* %3, i64 %369
  %371 = load %struct.WebRtcSpl_State8khzTo22khz*, %struct.WebRtcSpl_State8khzTo22khz** %363, align 8
  tail call void @WebRtcSpl_Resample8khzTo22khz(i16* %367, i16* %370, %struct.WebRtcSpl_State8khzTo22khz* %371, i32* %360) #9
  %372 = add i64 %366, 80
  %373 = icmp ult i64 %372, %2
  br i1 %373, label %365, label %364

374:                                              ; preds = %176
  %375 = urem i64 %2, 160
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %682

377:                                              ; preds = %374
  %378 = mul i64 %2, 11
  %379 = lshr i64 %378, 3
  %380 = icmp ugt i64 %379, %4
  br i1 %380, label %682, label %381

381:                                              ; preds = %377
  %382 = tail call noalias i8* @malloc(i64 352) #9
  %383 = bitcast i8* %382 to i32*
  %384 = icmp eq i64 %2, 0
  br i1 %384, label %387, label %385

385:                                              ; preds = %381
  %386 = bitcast %"class.webrtc::Resampler"* %0 to %struct.WebRtcSpl_State16khzTo22khz**
  br label %388

387:                                              ; preds = %388, %381
  store i64 %379, i64* %5, align 8
  tail call void @free(i8* %382) #9
  br label %682

388:                                              ; preds = %385, %388
  %389 = phi i64 [ 0, %385 ], [ %395, %388 ]
  %390 = getelementptr inbounds i16, i16* %1, i64 %389
  %391 = mul i64 %389, 11
  %392 = lshr exact i64 %391, 3
  %393 = getelementptr inbounds i16, i16* %3, i64 %392
  %394 = load %struct.WebRtcSpl_State16khzTo22khz*, %struct.WebRtcSpl_State16khzTo22khz** %386, align 8
  tail call void @WebRtcSpl_Resample16khzTo22khz(i16* %390, i16* %393, %struct.WebRtcSpl_State16khzTo22khz* %394, i32* %383) #9
  %395 = add i64 %389, 160
  %396 = icmp ult i64 %395, %2
  br i1 %396, label %388, label %387

397:                                              ; preds = %176
  %398 = urem i64 %2, 110
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %400, label %682

400:                                              ; preds = %397
  %401 = shl i64 %2, 4
  %402 = udiv i64 %401, 11
  %403 = icmp ugt i64 %402, %4
  br i1 %403, label %682, label %404

404:                                              ; preds = %400
  %405 = tail call noalias i8* @malloc(i64 416) #9
  %406 = bitcast i8* %405 to i32*
  %407 = shl i64 %2, 1
  %408 = shl i64 %2, 2
  %409 = tail call noalias i8* @malloc(i64 %408) #9
  %410 = bitcast i8* %409 to i16*
  %411 = bitcast %"class.webrtc::Resampler"* %0 to i32**
  %412 = load i32*, i32** %411, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %1, i64 %2, i16* %410, i32* %412) #9
  %413 = icmp eq i64 %407, 0
  br i1 %413, label %417, label %414

414:                                              ; preds = %404
  %415 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %416 = bitcast i8** %415 to %struct.WebRtcSpl_State22khzTo16khz**
  br label %418

417:                                              ; preds = %418, %404
  store i64 %402, i64* %5, align 8
  tail call void @free(i8* %405) #9
  tail call void @free(i8* %409) #9
  br label %682

418:                                              ; preds = %414, %418
  %419 = phi i64 [ 0, %414 ], [ %425, %418 ]
  %420 = getelementptr inbounds i16, i16* %410, i64 %419
  %421 = udiv i64 %419, 220
  %422 = mul i64 %421, 160
  %423 = getelementptr inbounds i16, i16* %3, i64 %422
  %424 = load %struct.WebRtcSpl_State22khzTo16khz*, %struct.WebRtcSpl_State22khzTo16khz** %416, align 8
  tail call void @WebRtcSpl_Resample22khzTo16khz(i16* %420, i16* %423, %struct.WebRtcSpl_State22khzTo16khz* %424, i32* %406) #9
  %425 = add i64 %419, 220
  %426 = icmp ult i64 %425, %407
  br i1 %426, label %418, label %417

427:                                              ; preds = %176
  %428 = urem i64 %2, 110
  %429 = icmp eq i64 %428, 0
  br i1 %429, label %430, label %682

430:                                              ; preds = %427
  %431 = shl i64 %2, 5
  %432 = udiv i64 %431, 11
  %433 = icmp ugt i64 %432, %4
  br i1 %433, label %682, label %434

434:                                              ; preds = %430
  %435 = tail call noalias i8* @malloc(i64 416) #9
  %436 = bitcast i8* %435 to i32*
  %437 = shl i64 %2, 1
  %438 = shl i64 %2, 2
  %439 = tail call noalias i8* @malloc(i64 %438) #9
  %440 = bitcast i8* %439 to i16*
  %441 = bitcast %"class.webrtc::Resampler"* %0 to i32**
  %442 = load i32*, i32** %441, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %1, i64 %2, i16* %3, i32* %442) #9
  %443 = icmp eq i64 %437, 0
  br i1 %443, label %447, label %444

444:                                              ; preds = %434
  %445 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %446 = bitcast i8** %445 to %struct.WebRtcSpl_State22khzTo16khz**
  br label %453

447:                                              ; preds = %453, %434
  %448 = shl i64 %2, 4
  %449 = udiv i64 %448, 11
  %450 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 2
  %451 = bitcast i8** %450 to i32**
  %452 = load i32*, i32** %451, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %440, i64 %449, i16* %3, i32* %452) #9
  store i64 %432, i64* %5, align 8
  tail call void @free(i8* %435) #9
  tail call void @free(i8* %439) #9
  br label %682

453:                                              ; preds = %444, %453
  %454 = phi i64 [ 0, %444 ], [ %460, %453 ]
  %455 = getelementptr inbounds i16, i16* %3, i64 %454
  %456 = udiv i64 %454, 220
  %457 = mul i64 %456, 160
  %458 = getelementptr inbounds i16, i16* %440, i64 %457
  %459 = load %struct.WebRtcSpl_State22khzTo16khz*, %struct.WebRtcSpl_State22khzTo16khz** %446, align 8
  tail call void @WebRtcSpl_Resample22khzTo16khz(i16* %455, i16* %458, %struct.WebRtcSpl_State22khzTo16khz* %459, i32* %436) #9
  %460 = add i64 %454, 220
  %461 = icmp ult i64 %460, %437
  br i1 %461, label %453, label %447

462:                                              ; preds = %176
  %463 = lshr i64 %2, 1
  %464 = icmp ugt i64 %463, %4
  br i1 %464, label %682, label %465

465:                                              ; preds = %462
  %466 = bitcast %"class.webrtc::Resampler"* %0 to i32**
  %467 = load i32*, i32** %466, align 8
  tail call void @WebRtcSpl_DownsampleBy2(i16* %1, i64 %2, i16* %3, i32* %467) #9
  store i64 %463, i64* %5, align 8
  br label %682

468:                                              ; preds = %176
  %469 = urem i64 %2, 480
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %471, label %682

471:                                              ; preds = %468
  %472 = udiv i64 %2, 3
  %473 = icmp ugt i64 %472, %4
  br i1 %473, label %682, label %474

474:                                              ; preds = %471
  %475 = tail call noalias i8* @malloc(i64 1984) #9
  %476 = bitcast i8* %475 to i32*
  %477 = icmp eq i64 %2, 0
  br i1 %477, label %480, label %478

478:                                              ; preds = %474
  %479 = bitcast %"class.webrtc::Resampler"* %0 to %struct.WebRtcSpl_State48khzTo16khz**
  br label %481

480:                                              ; preds = %481, %474
  store i64 %472, i64* %5, align 8
  tail call void @free(i8* %475) #9
  br label %682

481:                                              ; preds = %478, %481
  %482 = phi i64 [ 0, %478 ], [ %487, %481 ]
  %483 = getelementptr inbounds i16, i16* %1, i64 %482
  %484 = udiv i64 %482, 3
  %485 = getelementptr inbounds i16, i16* %3, i64 %484
  %486 = load %struct.WebRtcSpl_State48khzTo16khz*, %struct.WebRtcSpl_State48khzTo16khz** %479, align 8
  tail call void @WebRtcSpl_Resample48khzTo16khz(i16* %483, i16* %485, %struct.WebRtcSpl_State48khzTo16khz* %486, i32* %476) #9
  %487 = add i64 %482, 480
  %488 = icmp ult i64 %487, %2
  br i1 %488, label %481, label %480

489:                                              ; preds = %176
  %490 = lshr i64 %2, 2
  %491 = icmp ugt i64 %490, %4
  br i1 %491, label %682, label %492

492:                                              ; preds = %489
  %493 = and i64 %2, 9223372036854775807
  %494 = tail call noalias i8* @malloc(i64 %493) #9
  %495 = bitcast i8* %494 to i16*
  %496 = bitcast %"class.webrtc::Resampler"* %0 to i32**
  %497 = load i32*, i32** %496, align 8
  tail call void @WebRtcSpl_DownsampleBy2(i16* %1, i64 %2, i16* %495, i32* %497) #9
  %498 = lshr i64 %2, 1
  %499 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %500 = bitcast i8** %499 to i32**
  %501 = load i32*, i32** %500, align 8
  tail call void @WebRtcSpl_DownsampleBy2(i16* %495, i64 %498, i16* %3, i32* %501) #9
  store i64 %490, i64* %5, align 8
  tail call void @free(i8* %494) #9
  br label %682

502:                                              ; preds = %176
  %503 = urem i64 %2, 480
  %504 = icmp ne i64 %503, 0
  %505 = udiv i64 %2, 6
  %506 = icmp ugt i64 %505, %4
  %507 = or i1 %504, %506
  br i1 %507, label %682, label %508

508:                                              ; preds = %502
  %509 = tail call noalias i8* @malloc(i64 1984) #9
  %510 = bitcast i8* %509 to i32*
  %511 = shl i64 %2, 1
  %512 = udiv i64 %511, 3
  %513 = tail call noalias i8* @malloc(i64 %512) #9
  %514 = bitcast i8* %513 to i16*
  %515 = icmp eq i64 %2, 0
  br i1 %515, label %518, label %516

516:                                              ; preds = %508
  %517 = bitcast %"class.webrtc::Resampler"* %0 to %struct.WebRtcSpl_State48khzTo16khz**
  br label %526

518:                                              ; preds = %526, %508
  %519 = udiv i64 %2, 3
  store i64 %519, i64* %5, align 8
  tail call void @free(i8* %509) #9
  %520 = load i64, i64* %5, align 8
  %521 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %522 = bitcast i8** %521 to i32**
  %523 = load i32*, i32** %522, align 8
  tail call void @WebRtcSpl_DownsampleBy2(i16* %514, i64 %520, i16* %3, i32* %523) #9
  tail call void @free(i8* %513) #9
  %524 = load i64, i64* %5, align 8
  %525 = lshr i64 %524, 1
  store i64 %525, i64* %5, align 8
  br label %682

526:                                              ; preds = %516, %526
  %527 = phi i64 [ 0, %516 ], [ %532, %526 ]
  %528 = getelementptr inbounds i16, i16* %1, i64 %527
  %529 = udiv i64 %527, 3
  %530 = getelementptr inbounds i16, i16* %514, i64 %529
  %531 = load %struct.WebRtcSpl_State48khzTo16khz*, %struct.WebRtcSpl_State48khzTo16khz** %517, align 8
  tail call void @WebRtcSpl_Resample48khzTo16khz(i16* %528, i16* %530, %struct.WebRtcSpl_State48khzTo16khz* %531, i32* %510) #9
  %532 = add i64 %527, 480
  %533 = icmp ult i64 %532, %2
  br i1 %533, label %526, label %518

534:                                              ; preds = %176
  %535 = urem i64 %2, 480
  %536 = icmp ne i64 %535, 0
  %537 = udiv i64 %2, 12
  %538 = icmp ugt i64 %537, %4
  %539 = or i1 %536, %538
  br i1 %539, label %682, label %540

540:                                              ; preds = %534
  %541 = tail call noalias i8* @malloc(i64 1984) #9
  %542 = bitcast i8* %541 to i32*
  %543 = shl i64 %2, 1
  %544 = udiv i64 %543, 3
  %545 = tail call noalias i8* @malloc(i64 %544) #9
  %546 = bitcast i8* %545 to i16*
  %547 = udiv i64 %543, 6
  %548 = tail call noalias i8* @malloc(i64 %547) #9
  %549 = bitcast i8* %548 to i16*
  %550 = icmp eq i64 %2, 0
  br i1 %550, label %553, label %551

551:                                              ; preds = %540
  %552 = bitcast %"class.webrtc::Resampler"* %0 to %struct.WebRtcSpl_State48khzTo16khz**
  br label %567

553:                                              ; preds = %567, %540
  %554 = udiv i64 %2, 3
  store i64 %554, i64* %5, align 8
  tail call void @free(i8* %541) #9
  %555 = load i64, i64* %5, align 8
  %556 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %557 = bitcast i8** %556 to i32**
  %558 = load i32*, i32** %557, align 8
  tail call void @WebRtcSpl_DownsampleBy2(i16* %546, i64 %555, i16* %549, i32* %558) #9
  %559 = load i64, i64* %5, align 8
  %560 = lshr i64 %559, 1
  store i64 %560, i64* %5, align 8
  tail call void @free(i8* %545) #9
  %561 = load i64, i64* %5, align 8
  %562 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 2
  %563 = bitcast i8** %562 to i32**
  %564 = load i32*, i32** %563, align 8
  tail call void @WebRtcSpl_DownsampleBy2(i16* %549, i64 %561, i16* %3, i32* %564) #9
  tail call void @free(i8* %548) #9
  %565 = load i64, i64* %5, align 8
  %566 = lshr i64 %565, 1
  store i64 %566, i64* %5, align 8
  br label %682

567:                                              ; preds = %551, %567
  %568 = phi i64 [ 0, %551 ], [ %573, %567 ]
  %569 = getelementptr inbounds i16, i16* %1, i64 %568
  %570 = udiv i64 %568, 3
  %571 = getelementptr inbounds i16, i16* %546, i64 %570
  %572 = load %struct.WebRtcSpl_State48khzTo16khz*, %struct.WebRtcSpl_State48khzTo16khz** %552, align 8
  tail call void @WebRtcSpl_Resample48khzTo16khz(i16* %569, i16* %571, %struct.WebRtcSpl_State48khzTo16khz* %572, i32* %542) #9
  %573 = add i64 %568, 480
  %574 = icmp ult i64 %573, %2
  br i1 %574, label %567, label %553

575:                                              ; preds = %176
  %576 = shl i64 %2, 1
  %577 = udiv i64 %576, 3
  %578 = icmp ugt i64 %577, %4
  br i1 %578, label %682, label %579

579:                                              ; preds = %575
  %580 = shl i64 %2, 2
  %581 = tail call noalias i8* @malloc(i64 %580) #9
  %582 = bitcast i8* %581 to i16*
  %583 = bitcast %"class.webrtc::Resampler"* %0 to i32**
  %584 = load i32*, i32** %583, align 8
  tail call void @WebRtcSpl_UpsampleBy2(i16* %1, i64 %2, i16* %582, i32* %584) #9
  %585 = urem i64 %576, 480
  %586 = icmp eq i64 %585, 0
  br i1 %586, label %588, label %587

587:                                              ; preds = %579
  tail call void @free(i8* %581) #9
  br label %682

588:                                              ; preds = %579
  %589 = tail call noalias i8* @malloc(i64 1984) #9
  %590 = bitcast i8* %589 to i32*
  %591 = icmp eq i64 %576, 0
  br i1 %591, label %595, label %592

592:                                              ; preds = %588
  %593 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %594 = bitcast i8** %593 to %struct.WebRtcSpl_State48khzTo16khz**
  br label %596

595:                                              ; preds = %596, %588
  store i64 %577, i64* %5, align 8
  tail call void @free(i8* %581) #9
  tail call void @free(i8* %589) #9
  br label %682

596:                                              ; preds = %592, %596
  %597 = phi i64 [ 0, %592 ], [ %602, %596 ]
  %598 = getelementptr inbounds i16, i16* %582, i64 %597
  %599 = udiv i64 %597, 3
  %600 = getelementptr inbounds i16, i16* %3, i64 %599
  %601 = load %struct.WebRtcSpl_State48khzTo16khz*, %struct.WebRtcSpl_State48khzTo16khz** %594, align 8
  tail call void @WebRtcSpl_Resample48khzTo16khz(i16* %598, i16* %600, %struct.WebRtcSpl_State48khzTo16khz* %601, i32* %590) #9
  %602 = add i64 %597, 480
  %603 = icmp ult i64 %602, %576
  br i1 %603, label %596, label %595

604:                                              ; preds = %176
  %605 = urem i64 %2, 220
  %606 = icmp eq i64 %605, 0
  br i1 %606, label %607, label %682

607:                                              ; preds = %604
  %608 = shl i64 %2, 1
  %609 = udiv i64 %608, 11
  %610 = icmp ugt i64 %609, %4
  br i1 %610, label %682, label %611

611:                                              ; preds = %607
  %612 = tail call noalias i8* @malloc(i64 504) #9
  %613 = bitcast i8* %612 to i32*
  %614 = shl i64 %2, 2
  %615 = udiv i64 %614, 11
  %616 = shl nuw nsw i64 %615, 1
  %617 = tail call noalias i8* @malloc(i64 %616) #9
  %618 = bitcast i8* %617 to i16*
  %619 = icmp eq i64 %2, 0
  br i1 %619, label %622, label %620

620:                                              ; preds = %611
  %621 = bitcast %"class.webrtc::Resampler"* %0 to %struct.WebRtcSpl_State22khzTo8khz**
  br label %627

622:                                              ; preds = %627, %611
  %623 = getelementptr inbounds %"class.webrtc::Resampler", %"class.webrtc::Resampler"* %0, i64 0, i32 1
  %624 = bitcast i8** %623 to i32**
  %625 = load i32*, i32** %624, align 8
  tail call void @WebRtcSpl_DownsampleBy2(i16* %618, i64 %615, i16* %3, i32* %625) #9
  %626 = udiv i64 %614, 22
  store i64 %626, i64* %5, align 8
  tail call void @free(i8* %612) #9
  tail call void @free(i8* %617) #9
  br label %682

627:                                              ; preds = %620, %627
  %628 = phi i64 [ 0, %620 ], [ %634, %627 ]
  %629 = getelementptr inbounds i16, i16* %1, i64 %628
  %630 = shl i64 %628, 2
  %631 = udiv i64 %630, 11
  %632 = getelementptr inbounds i16, i16* %618, i64 %631
  %633 = load %struct.WebRtcSpl_State22khzTo8khz*, %struct.WebRtcSpl_State22khzTo8khz** %621, align 8
  tail call void @WebRtcSpl_Resample22khzTo8khz(i16* %629, i16* %632, %struct.WebRtcSpl_State22khzTo8khz* %633, i32* %613) #9
  %634 = add i64 %628, 220
  %635 = icmp ult i64 %634, %2
  br i1 %635, label %627, label %622

636:                                              ; preds = %176
  %637 = urem i64 %2, 220
  %638 = icmp eq i64 %637, 0
  br i1 %638, label %639, label %682

639:                                              ; preds = %636
  %640 = shl i64 %2, 2
  %641 = udiv i64 %640, 11
  %642 = icmp ugt i64 %641, %4
  br i1 %642, label %682, label %643

643:                                              ; preds = %639
  %644 = tail call noalias i8* @malloc(i64 504) #9
  %645 = bitcast i8* %644 to i32*
  %646 = icmp eq i64 %2, 0
  br i1 %646, label %649, label %647

647:                                              ; preds = %643
  %648 = bitcast %"class.webrtc::Resampler"* %0 to %struct.WebRtcSpl_State22khzTo8khz**
  br label %650

649:                                              ; preds = %650, %643
  store i64 %641, i64* %5, align 8
  tail call void @free(i8* %644) #9
  br label %682

650:                                              ; preds = %647, %650
  %651 = phi i64 [ 0, %647 ], [ %657, %650 ]
  %652 = getelementptr inbounds i16, i16* %1, i64 %651
  %653 = shl i64 %651, 2
  %654 = udiv i64 %653, 11
  %655 = getelementptr inbounds i16, i16* %3, i64 %654
  %656 = load %struct.WebRtcSpl_State22khzTo8khz*, %struct.WebRtcSpl_State22khzTo8khz** %648, align 8
  tail call void @WebRtcSpl_Resample22khzTo8khz(i16* %652, i16* %655, %struct.WebRtcSpl_State22khzTo8khz* %656, i32* %645) #9
  %657 = add i64 %651, 220
  %658 = icmp ult i64 %657, %2
  br i1 %658, label %650, label %649

659:                                              ; preds = %176
  %660 = urem i64 %2, 220
  %661 = icmp eq i64 %660, 0
  br i1 %661, label %662, label %682

662:                                              ; preds = %659
  %663 = shl i64 %2, 3
  %664 = udiv i64 %663, 11
  %665 = icmp ugt i64 %664, %4
  br i1 %665, label %682, label %666

666:                                              ; preds = %662
  %667 = tail call noalias i8* @malloc(i64 416) #9
  %668 = bitcast i8* %667 to i32*
  %669 = icmp eq i64 %2, 0
  br i1 %669, label %672, label %670

670:                                              ; preds = %666
  %671 = bitcast %"class.webrtc::Resampler"* %0 to %struct.WebRtcSpl_State22khzTo16khz**
  br label %673

672:                                              ; preds = %673, %666
  store i64 %664, i64* %5, align 8
  tail call void @free(i8* %667) #9
  br label %682

673:                                              ; preds = %670, %673
  %674 = phi i64 [ 0, %670 ], [ %680, %673 ]
  %675 = getelementptr inbounds i16, i16* %1, i64 %674
  %676 = shl i64 %674, 3
  %677 = udiv i64 %676, 11
  %678 = getelementptr inbounds i16, i16* %3, i64 %677
  %679 = load %struct.WebRtcSpl_State22khzTo16khz*, %struct.WebRtcSpl_State22khzTo16khz** %671, align 8
  tail call void @WebRtcSpl_Resample22khzTo16khz(i16* %675, i16* %678, %struct.WebRtcSpl_State22khzTo16khz* %679, i32* %668) #9
  %680 = add i64 %674, 220
  %681 = icmp ult i64 %680, %2
  br i1 %681, label %673, label %672

682:                                              ; preds = %534, %502, %291, %254, %222, %186, %201, %213, %243, %280, %307, %339, %364, %387, %417, %447, %465, %480, %492, %518, %553, %587, %595, %622, %649, %672, %183, %189, %192, %210, %319, %322, %351, %354, %374, %377, %397, %400, %427, %430, %462, %468, %471, %489, %575, %604, %607, %636, %639, %659, %662, %176, %179, %174
  %683 = phi i32 [ %175, %174 ], [ 0, %672 ], [ 0, %649 ], [ 0, %622 ], [ -1, %587 ], [ 0, %595 ], [ 0, %553 ], [ 0, %518 ], [ 0, %492 ], [ 0, %480 ], [ 0, %465 ], [ 0, %447 ], [ 0, %417 ], [ 0, %387 ], [ 0, %364 ], [ 0, %339 ], [ 0, %307 ], [ 0, %280 ], [ 0, %243 ], [ 0, %213 ], [ 0, %201 ], [ 0, %186 ], [ -1, %183 ], [ -1, %189 ], [ -1, %192 ], [ -1, %210 ], [ -1, %222 ], [ -1, %254 ], [ -1, %291 ], [ -1, %319 ], [ -1, %322 ], [ -1, %351 ], [ -1, %354 ], [ -1, %374 ], [ -1, %377 ], [ -1, %397 ], [ -1, %400 ], [ -1, %427 ], [ -1, %430 ], [ -1, %462 ], [ -1, %468 ], [ -1, %471 ], [ -1, %489 ], [ -1, %502 ], [ -1, %534 ], [ -1, %575 ], [ -1, %604 ], [ -1, %607 ], [ -1, %636 ], [ -1, %639 ], [ -1, %659 ], [ -1, %662 ], [ 0, %176 ], [ 0, %179 ]
  ret i32 %683
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @WebRtcSpl_UpsampleBy2(i16*, i64, i16*, i32*) local_unnamed_addr #5

declare void @WebRtcSpl_Resample16khzTo48khz(i16*, i16*, %struct.WebRtcSpl_State16khzTo48khz*, i32*) local_unnamed_addr #5

declare void @WebRtcSpl_DownsampleBy2(i16*, i64, i16*, i32*) local_unnamed_addr #5

declare void @WebRtcSpl_Resample8khzTo22khz(i16*, i16*, %struct.WebRtcSpl_State8khzTo22khz*, i32*) local_unnamed_addr #5

declare void @WebRtcSpl_Resample16khzTo22khz(i16*, i16*, %struct.WebRtcSpl_State16khzTo22khz*, i32*) local_unnamed_addr #5

declare void @WebRtcSpl_Resample22khzTo16khz(i16*, i16*, %struct.WebRtcSpl_State22khzTo16khz*, i32*) local_unnamed_addr #5

declare void @WebRtcSpl_Resample48khzTo16khz(i16*, i16*, %struct.WebRtcSpl_State48khzTo16khz*, i32*) local_unnamed_addr #5

declare void @WebRtcSpl_Resample22khzTo8khz(i16*, i16*, %struct.WebRtcSpl_State22khzTo8khz*, i32*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !5
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !3}
!5 = !{i8 0, i8 2}
