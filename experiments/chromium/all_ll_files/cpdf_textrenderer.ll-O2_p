; ModuleID = '../../third_party/pdfium/core/fpdfapi/render/cpdf_textrenderer.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/render/cpdf_textrenderer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.1" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%"class.pdfium::span.131" = type { %"class.fxcrt::UnownedPtr.132", i64 }
%"class.fxcrt::UnownedPtr.132" = type { i32* }
%"class.pdfium::span.133" = type { %"class.fxcrt::UnownedPtr.134", i64 }
%"class.fxcrt::UnownedPtr.134" = type { float* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.58", %"class.fxcrt::RetainPtr.66", %"class.fxcrt::RetainPtr.105", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.111", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.11", %"class.std::__1::unique_ptr.17", %"class.fxcrt::RetainPtr.23", %"class.fxcrt::RetainPtr.39", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.std::__1::vector", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.23" = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.27", %"class.fxcrt::RetainPtr.31" }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.31" = type { %"class.std::__1::unique_ptr.32" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.39" = type { %"class.std::__1::unique_ptr.40" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.57", i64 }
%"class.fxcrt::UnownedPtr.57" = type { i8* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.std::__1::unique_ptr.60"*, %"class.std::__1::unique_ptr.60"*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::unique_ptr.60" = type opaque
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::unique_ptr.60"* }
%"class.fxcrt::RetainPtr.66" = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.76", %"class.fxcrt::RetainPtr.97" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.51", %"class.fxcrt::UnownedPtr.57" }
%"class.fxcrt::RetainPtr.76" = type { %"class.std::__1::unique_ptr.77" }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.80" }
%"class.fxcrt::RetainPtr.80" = type { %"class.std::__1::unique_ptr.81" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.171", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.186", [4 x i8] }>
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173", %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree.86" }
%"class.std::__1::__tree.86" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::RetainPtr.97" = type { %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type opaque
%"class.fxcrt::RetainPtr.105" = type { %"class.std::__1::unique_ptr.106" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.70" }
%"class.fxcrt::RetainPtr.70" = type { %"class.std::__1::unique_ptr.71" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.117" }
%"class.std::__1::vector.117" = type { %"class.std::__1::__vector_base.118" }
%"class.std::__1::__vector_base.118" = type { float*, float*, %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { float* }
%class.CFX_PathData = type { %"class.std::__1::vector.124" }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.126" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %class.FX_PATHPOINT* }
%struct.CFX_FillRenderOptions = type { i8, i8 }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %class.TextCharPos*, %class.TextCharPos*, %"class.std::__1::__compressed_pair.137" }
%class.TextCharPos = type { %class.CFX_PTemplate, i32, i32, i32, i32, i8, i8, [4 x float] }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %class.TextCharPos* }
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr.142" }
%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr.142" = type { %"class.std::__1::unique_ptr.143" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr", i32, %"class.std::__1::map.146" }
%"class.std::__1::map.146" = type { %"class.std::__1::__tree.147" }
%"class.std::__1::__tree.147" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.159" }
%"class.pdfium::span.159" = type { %"class.fxcrt::UnownedPtr.160", i64 }
%"class.fxcrt::UnownedPtr.160" = type { i8* }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { i32*, i32*, %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i32* }
%struct.CFX_TextRenderOptions = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

$_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17CPDF_TextRenderer12DrawTextPathEP16CFX_RenderDeviceN6pdfium4spanIKjEENS3_IKfEEP9CPDF_FontfRK10CFX_MatrixPSB_PK18CFX_GraphStateDatajjP12CFX_PathDataRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, %"class.pdfium::span.131"* nocapture readonly, %"class.pdfium::span.133"* nocapture readonly, %class.CPDF_Font*, float, %class.CFX_Matrix* dereferenceable(24), %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %class.CFX_PathData*, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %13 = alloca %"class.std::__1::vector.135", align 8
  %14 = alloca %"class.pdfium::span.131", align 8
  %15 = alloca %"class.pdfium::span.133", align 8
  %16 = bitcast %"class.std::__1::vector.135"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.std::__1::vector.135", %"class.std::__1::vector.135"* %13, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.135", %"class.std::__1::vector.135"* %13, i64 0, i32 0, i32 1
  %19 = bitcast %"class.pdfium::span.131"* %14 to i8*
  %20 = bitcast %"class.pdfium::span.131"* %1 to i8*
  %21 = bitcast %"class.std::__1::vector.135"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %20, i64 16, i1 false)
  %22 = bitcast %"class.pdfium::span.133"* %15 to i8*
  %23 = bitcast %"class.pdfium::span.133"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 %23, i64 16, i1 false)
  call void @_Z14GetCharPosListN6pdfium4spanIKjEENS0_IKfEEP9CPDF_Fontf(%"class.std::__1::vector.135"* nonnull sret %13, %"class.pdfium::span.131"* nonnull %14, %"class.pdfium::span.133"* nonnull %15, %class.CPDF_Font* %3, float %4) #8
  %24 = load %class.TextCharPos*, %class.TextCharPos** %17, align 8
  %25 = load %class.TextCharPos*, %class.TextCharPos** %18, align 8
  %26 = icmp eq %class.TextCharPos* %24, %25
  %27 = ptrtoint %class.TextCharPos* %25 to i64
  %28 = ptrtoint %class.TextCharPos* %24 to i64
  br i1 %26, label %100, label %29

29:                                               ; preds = %12
  %30 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %24, i64 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = bitcast %class.TextCharPos** %18 to i64*
  %33 = bitcast %"class.std::__1::vector.135"* %13 to i64*
  %34 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %3, i64 0, i32 3
  br label %58

35:                                               ; preds = %85
  %36 = icmp eq i32 %64, -1
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %3, i64 0, i32 3
  br label %43

39:                                               ; preds = %35
  %40 = call %class.CFX_Font* @_ZN9CPDF_Font15GetFontFallbackEi(%class.CPDF_Font* %3, i32 %64) #8
  %41 = load i64, i64* %32, align 8
  %42 = load i64, i64* %33, align 8
  br label %43

43:                                               ; preds = %37, %39
  %44 = phi i64 [ %86, %37 ], [ %42, %39 ]
  %45 = phi i64 [ %87, %37 ], [ %41, %39 ]
  %46 = phi %class.CFX_Font* [ %38, %37 ], [ %40, %39 ]
  %47 = sub i64 %45, %44
  %48 = sdiv exact i64 %47, 44
  %49 = sub i64 %48, %91
  %50 = trunc i64 %49 to i32
  %51 = inttoptr i64 %44 to %class.TextCharPos*
  %52 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %51, i64 %91
  %53 = call zeroext i1 @_ZN16CFX_RenderDevice12DrawTextPathEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixPS6_PK18CFX_GraphStateDatajjP12CFX_PathDataRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %0, i32 %50, %class.TextCharPos* %52, %class.CFX_Font* %46, float %4, %class.CFX_Matrix* dereferenceable(24) %5, %class.CFX_Matrix* %6, %class.CFX_GraphStateData* %7, i32 %8, i32 %9, %class.CFX_PathData* %10, %struct.CFX_FillRenderOptions* dereferenceable(2) %11) #8
  %54 = and i8 %90, 1
  %55 = icmp ne i8 %54, 0
  %56 = and i1 %55, %53
  %57 = load %class.TextCharPos*, %class.TextCharPos** %17, align 8
  br label %100

58:                                               ; preds = %97, %29
  %59 = phi i64 [ %28, %29 ], [ %86, %97 ]
  %60 = phi i64 [ %27, %29 ], [ %87, %97 ]
  %61 = phi i64 [ %28, %29 ], [ %88, %97 ]
  %62 = phi i64 [ %27, %29 ], [ %89, %97 ]
  %63 = phi %class.TextCharPos* [ %24, %29 ], [ %96, %97 ]
  %64 = phi i32 [ %31, %29 ], [ %99, %97 ]
  %65 = phi i64 [ 0, %29 ], [ %92, %97 ]
  %66 = phi i64 [ 0, %29 ], [ %91, %97 ]
  %67 = phi i32 [ %31, %29 ], [ %64, %97 ]
  %68 = phi i8 [ 1, %29 ], [ %90, %97 ]
  %69 = icmp eq i32 %67, %64
  br i1 %69, label %85, label %70

70:                                               ; preds = %58
  %71 = icmp eq i32 %67, -1
  br i1 %71, label %75, label %72

72:                                               ; preds = %70
  %73 = call %class.CFX_Font* @_ZN9CPDF_Font15GetFontFallbackEi(%class.CPDF_Font* %3, i32 %67) #8
  %74 = load %class.TextCharPos*, %class.TextCharPos** %17, align 8
  br label %75

75:                                               ; preds = %70, %72
  %76 = phi %class.TextCharPos* [ %74, %72 ], [ %63, %70 ]
  %77 = phi %class.CFX_Font* [ %73, %72 ], [ %34, %70 ]
  %78 = sub i64 %65, %66
  %79 = trunc i64 %78 to i32
  %80 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %76, i64 %66
  %81 = call zeroext i1 @_ZN16CFX_RenderDevice12DrawTextPathEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixPS6_PK18CFX_GraphStateDatajjP12CFX_PathDataRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %0, i32 %79, %class.TextCharPos* %80, %class.CFX_Font* %77, float %4, %class.CFX_Matrix* dereferenceable(24) %5, %class.CFX_Matrix* %6, %class.CFX_GraphStateData* %7, i32 %8, i32 %9, %class.CFX_PathData* %10, %struct.CFX_FillRenderOptions* dereferenceable(2) %11) #8
  %82 = select i1 %81, i8 %68, i8 0
  %83 = load i64, i64* %32, align 8
  %84 = load i64, i64* %33, align 8
  br label %85

85:                                               ; preds = %58, %75
  %86 = phi i64 [ %84, %75 ], [ %59, %58 ]
  %87 = phi i64 [ %83, %75 ], [ %60, %58 ]
  %88 = phi i64 [ %84, %75 ], [ %61, %58 ]
  %89 = phi i64 [ %83, %75 ], [ %62, %58 ]
  %90 = phi i8 [ %82, %75 ], [ %68, %58 ]
  %91 = phi i64 [ %65, %75 ], [ %66, %58 ]
  %92 = add nuw i64 %65, 1
  %93 = sub i64 %89, %88
  %94 = sdiv exact i64 %93, 44
  %95 = icmp ult i64 %92, %94
  %96 = inttoptr i64 %88 to %class.TextCharPos*
  br i1 %95, label %97, label %35

97:                                               ; preds = %85
  %98 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %96, i64 %92, i32 4
  %99 = load i32, i32* %98, align 4
  br label %58

100:                                              ; preds = %12, %43
  %101 = phi %class.TextCharPos* [ %24, %12 ], [ %57, %43 ]
  %102 = phi i1 [ true, %12 ], [ %56, %43 ]
  %103 = icmp eq %class.TextCharPos* %101, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %100
  %105 = bitcast %class.TextCharPos* %101 to i8*
  %106 = load %class.TextCharPos*, %class.TextCharPos** %18, align 8
  %107 = icmp eq %class.TextCharPos* %106, %101
  br i1 %107, label %115, label %108

108:                                              ; preds = %104, %108
  %109 = phi %class.TextCharPos* [ %110, %108 ], [ %106, %104 ]
  %110 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %109, i64 -1
  call void @_ZN11TextCharPosD1Ev(%class.TextCharPos* %110) #8
  %111 = icmp eq %class.TextCharPos* %110, %101
  br i1 %111, label %112, label %108

112:                                              ; preds = %108
  %113 = bitcast %"class.std::__1::vector.135"* %13 to i8**
  %114 = load i8*, i8** %113, align 8
  br label %115

115:                                              ; preds = %112, %104
  %116 = phi i8* [ %114, %112 ], [ %105, %104 ]
  store %class.TextCharPos* %101, %class.TextCharPos** %18, align 8
  call void @_ZdlPv(i8* %116) #9
  br label %117

117:                                              ; preds = %100, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  ret i1 %102
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_Z14GetCharPosListN6pdfium4spanIKjEENS0_IKfEEP9CPDF_Fontf(%"class.std::__1::vector.135"* sret, %"class.pdfium::span.131"*, %"class.pdfium::span.133"*, %class.CPDF_Font*, float) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZN16CFX_RenderDevice12DrawTextPathEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixPS6_PK18CFX_GraphStateDatajjP12CFX_PathDataRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, i32, %class.TextCharPos*, %class.CFX_Font*, float, %class.CFX_Matrix* dereferenceable(24), %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %class.CFX_PathData*, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_TextRenderer14DrawTextStringEP16CFX_RenderDeviceffP9CPDF_FontfRK10CFX_MatrixRKN5fxcrt10ByteStringEjRK18CPDF_RenderOptions(%class.CFX_RenderDevice*, float, float, %class.CPDF_Font*, float, %class.CFX_Matrix* nocapture readonly dereferenceable(24), %"class.fxcrt::ByteString"* nocapture readonly dereferenceable(8), i32, %class.CPDF_RenderOptions* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.std::__1::vector.161", align 8
  %13 = alloca %"class.std::__1::vector.117", align 8
  %14 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %15 = alloca %class.CFX_Matrix, align 4
  %16 = alloca %"class.pdfium::span.131", align 8
  %17 = alloca %"class.pdfium::span.133", align 8
  %18 = bitcast %class.CPDF_Font* %3 to i1 (%class.CPDF_Font*)***
  %19 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %19, i64 4
  %21 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %20, align 8
  %22 = tail call zeroext i1 %21(%class.CPDF_Font* %3) #8
  br i1 %22, label %151, label %23

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %24, align 8, !noalias !2
  %26 = icmp eq %"class.fxcrt::StringDataTemplate"* %25, null
  %27 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %25, i64 0, i32 3, i64 0
  %28 = select i1 %26, i8* null, i8* %27
  br i1 %26, label %32, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %25, i64 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !2
  br label %32

32:                                               ; preds = %23, %29
  %33 = phi i64 [ %31, %29 ], [ 0, %23 ]
  %34 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %34, align 8, !alias.scope !2
  %35 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %10, i64 0, i32 0, i32 1
  store i64 %33, i64* %35, align 8, !alias.scope !2
  %36 = bitcast %class.CPDF_Font* %3 to i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)***
  %37 = load i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)**, i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)*** %36, align 8
  %38 = getelementptr inbounds i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)*, i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)** %37, i64 18
  %39 = load i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)*, i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)** %38, align 8
  %40 = call i64 %39(%class.CPDF_Font* %3, %"class.fxcrt::StringViewTemplate"* nonnull %10) #8
  %41 = trunc i64 %40 to i32
  %42 = icmp slt i32 %41, 1
  br i1 %42, label %151, label %43

43:                                               ; preds = %32
  %44 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8
  store i64 0, i64* %11, align 8
  %45 = bitcast %"class.std::__1::vector.161"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %12, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %12, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 24, i1 false) #8
  %48 = bitcast %"class.std::__1::vector.117"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"class.std::__1::vector.117", %"class.std::__1::vector.117"* %13, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::vector.117", %"class.std::__1::vector.117"* %13, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #8
  %51 = shl i64 %40, 32
  %52 = bitcast i32** %47 to i64*
  %53 = bitcast %"class.std::__1::vector.161"* %12 to i64*
  %54 = icmp eq i64 %51, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %43
  %56 = ashr exact i64 %51, 32
  call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.161"* nonnull %12, i64 %56) #8
  %57 = bitcast float** %50 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector.117"* %13 to i64*
  %60 = load i64, i64* %59, align 8
  br label %61

61:                                               ; preds = %43, %55
  %62 = phi i64 [ %60, %55 ], [ 0, %43 ]
  %63 = phi i64 [ %58, %55 ], [ 0, %43 ]
  %64 = add i64 %51, -4294967296
  %65 = ashr exact i64 %64, 32
  %66 = bitcast float** %50 to i64*
  %67 = bitcast %"class.std::__1::vector.117"* %13 to i64*
  %68 = sub i64 %63, %62
  %69 = ashr exact i64 %68, 2
  %70 = icmp ugt i64 %65, %69
  %71 = inttoptr i64 %62 to float*
  br i1 %70, label %72, label %74

72:                                               ; preds = %61
  %73 = sub nsw i64 %65, %69
  call void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.117"* nonnull %13, i64 %73) #8
  br label %78

74:                                               ; preds = %61
  %75 = icmp ult i64 %65, %69
  br i1 %75, label %76, label %78

76:                                               ; preds = %74
  %77 = getelementptr inbounds float, float* %71, i64 %65
  store float* %77, float** %50, align 8
  br label %78

78:                                               ; preds = %76, %74, %72
  %79 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %14, i64 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %14, i64 0, i32 0, i32 1
  %81 = bitcast %class.CPDF_Font* %3 to i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)***
  %82 = bitcast %class.CPDF_Font* %3 to i32 (%class.CPDF_Font*, i32)***
  %83 = and i64 %40, 4294967295
  br label %114

84:                                               ; preds = %137
  %85 = bitcast %class.CFX_Matrix* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #8
  %86 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %15, i64 0, i32 4
  %87 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %15, i64 0, i32 5
  %88 = bitcast %class.CFX_Matrix* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %85, i8* align 4 %88, i64 16, i1 false)
  store float %1, float* %86, align 4
  store float %2, float* %87, align 4
  %89 = load i64, i64* %53, align 8
  %90 = load i64, i64* %52, align 8
  %91 = sub i64 %90, %89
  %92 = ashr exact i64 %91, 2
  %93 = bitcast %"class.pdfium::span.131"* %16 to i64*
  store i64 %89, i64* %93, align 8
  %94 = getelementptr inbounds %"class.pdfium::span.131", %"class.pdfium::span.131"* %16, i64 0, i32 1
  store i64 %92, i64* %94, align 8
  %95 = load i64, i64* %67, align 8
  %96 = load i64, i64* %66, align 8
  %97 = sub i64 %96, %95
  %98 = ashr exact i64 %97, 2
  %99 = bitcast %"class.pdfium::span.133"* %17 to i64*
  store i64 %95, i64* %99, align 8
  %100 = getelementptr inbounds %"class.pdfium::span.133", %"class.pdfium::span.133"* %17, i64 0, i32 1
  store i64 %98, i64* %100, align 8
  %101 = call zeroext i1 @_ZN17CPDF_TextRenderer14DrawNormalTextEP16CFX_RenderDeviceN6pdfium4spanIKjEENS3_IKfEEP9CPDF_FontfRK10CFX_MatrixjRK18CPDF_RenderOptions(%class.CFX_RenderDevice* %0, %"class.pdfium::span.131"* nonnull %16, %"class.pdfium::span.133"* nonnull %17, %class.CPDF_Font* %3, float %4, %class.CFX_Matrix* nonnull dereferenceable(24) %15, i32 %7, %class.CPDF_RenderOptions* dereferenceable(40) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #8
  %102 = load float*, float** %49, align 8
  %103 = icmp eq float* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %84
  %105 = ptrtoint float* %102 to i64
  store i64 %105, i64* %66, align 8
  %106 = bitcast float* %102 to i8*
  call void @_ZdlPv(i8* %106) #9
  br label %107

107:                                              ; preds = %84, %104
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #8
  %108 = load i32*, i32** %46, align 8
  %109 = icmp eq i32* %108, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %107
  %111 = ptrtoint i32* %108 to i64
  store i64 %111, i64* %52, align 8
  %112 = bitcast i32* %108 to i8*
  call void @_ZdlPv(i8* %112) #9
  br label %113

113:                                              ; preds = %107, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8
  br label %151

114:                                              ; preds = %137, %78
  %115 = phi i64 [ 0, %78 ], [ %149, %137 ]
  %116 = phi float [ 0.000000e+00, %78 ], [ %148, %137 ]
  %117 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %24, align 8, !noalias !5
  %118 = icmp eq %"class.fxcrt::StringDataTemplate"* %117, null
  %119 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %117, i64 0, i32 3, i64 0
  %120 = select i1 %118, i8* null, i8* %119
  br i1 %118, label %124, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %117, i64 0, i32 1
  %123 = load i64, i64* %122, align 8, !noalias !5
  br label %124

124:                                              ; preds = %114, %121
  %125 = phi i64 [ %123, %121 ], [ 0, %114 ]
  store i8* %120, i8** %79, align 8, !alias.scope !5
  store i64 %125, i64* %80, align 8, !alias.scope !5
  %126 = load i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)**, i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)*** %81, align 8
  %127 = getelementptr inbounds i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)*, i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)** %126, i64 17
  %128 = load i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)*, i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)** %127, align 8
  %129 = call i32 %128(%class.CPDF_Font* %3, %"class.fxcrt::StringViewTemplate"* nonnull %14, i64* nonnull %11) #8
  %130 = load i32*, i32** %46, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 %115
  store i32 %129, i32* %131, align 4
  %132 = icmp eq i64 %115, 0
  br i1 %132, label %137, label %133

133:                                              ; preds = %124
  %134 = add nsw i64 %115, -1
  %135 = load float*, float** %49, align 8
  %136 = getelementptr inbounds float, float* %135, i64 %134
  store float %116, float* %136, align 4
  br label %137

137:                                              ; preds = %124, %133
  %138 = load i32*, i32** %46, align 8
  %139 = getelementptr inbounds i32, i32* %138, i64 %115
  %140 = load i32, i32* %139, align 4
  %141 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %82, align 8
  %142 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %141, i64 24
  %143 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %142, align 8
  %144 = call i32 %143(%class.CPDF_Font* %3, i32 %140) #8
  %145 = sitofp i32 %144 to float
  %146 = fmul float %145, %4
  %147 = fdiv float %146, 1.000000e+03
  %148 = fadd float %116, %147
  %149 = add nuw nsw i64 %115, 1
  %150 = icmp eq i64 %149, %83
  br i1 %150, label %84, label %114

151:                                              ; preds = %113, %32, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17CPDF_TextRenderer14DrawNormalTextEP16CFX_RenderDeviceN6pdfium4spanIKjEENS3_IKfEEP9CPDF_FontfRK10CFX_MatrixjRK18CPDF_RenderOptions(%class.CFX_RenderDevice*, %"class.pdfium::span.131"* nocapture readonly, %"class.pdfium::span.133"* nocapture readonly, %class.CPDF_Font*, float, %class.CFX_Matrix* dereferenceable(24), i32, %class.CPDF_RenderOptions* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::vector.135", align 8
  %10 = alloca %"class.pdfium::span.131", align 8
  %11 = alloca %"class.pdfium::span.133", align 8
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %struct.CFX_TextRenderOptions*
  %14 = bitcast %"class.std::__1::vector.135"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.std::__1::vector.135", %"class.std::__1::vector.135"* %9, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.135", %"class.std::__1::vector.135"* %9, i64 0, i32 0, i32 1
  %17 = bitcast %"class.pdfium::span.131"* %10 to i8*
  %18 = bitcast %"class.pdfium::span.131"* %1 to i8*
  %19 = bitcast %"class.std::__1::vector.135"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %18, i64 16, i1 false)
  %20 = bitcast %"class.pdfium::span.133"* %11 to i8*
  %21 = bitcast %"class.pdfium::span.133"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %21, i64 16, i1 false)
  call void @_Z14GetCharPosListN6pdfium4spanIKjEENS0_IKfEEP9CPDF_Fontf(%"class.std::__1::vector.135"* nonnull sret %9, %"class.pdfium::span.131"* nonnull %10, %"class.pdfium::span.133"* nonnull %11, %class.CPDF_Font* %3, float %4) #8
  %22 = load %class.TextCharPos*, %class.TextCharPos** %15, align 8
  %23 = load %class.TextCharPos*, %class.TextCharPos** %16, align 8
  %24 = icmp eq %class.TextCharPos* %22, %23
  br i1 %24, label %130, label %25

25:                                               ; preds = %8
  %26 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = bitcast %class.CPDF_Font* %3 to i1 (%class.CPDF_Font*)***
  store i64 -6148914691236517206, i64* %12, align 8
  %28 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %28, i64 5
  %30 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %29, align 8
  %31 = call zeroext i1 %30(%class.CPDF_Font* %3) #8
  %32 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %7, i64 0, i32 2, i32 5
  %33 = load i8, i8* %32, align 1, !range !8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %25
  %36 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %7, i64 0, i32 2, i32 0
  %37 = load i8, i8* %36, align 1, !range !8
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %38, i64 1, i64 2
  br label %40

40:                                               ; preds = %25, %35
  %41 = phi i64 [ 0, %25 ], [ %39, %35 ]
  %42 = getelementptr inbounds %class.CPDF_RenderOptions, %class.CPDF_RenderOptions* %7, i64 0, i32 2, i32 1
  %43 = load i8, i8* %42, align 1, !range !8
  %44 = xor i8 %43, 1
  %45 = zext i8 %44 to i64
  %46 = shl nuw nsw i64 %45, 40
  %47 = zext i1 %31 to i64
  %48 = shl nuw nsw i64 %47, 32
  %49 = or i64 %48, %41
  %50 = or i64 %49, %46
  %51 = or i64 %50, -6149102341220990976
  store i64 %51, i64* %12, align 8
  %52 = load %class.TextCharPos*, %class.TextCharPos** %15, align 8
  %53 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %52, i64 0, i32 4
  %54 = load i32, i32* %53, align 4
  %55 = bitcast %class.TextCharPos** %16 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector.135"* %9 to i64*
  %58 = ptrtoint %class.TextCharPos* %52 to i64
  %59 = icmp eq i64 %56, %58
  br i1 %59, label %62, label %60

60:                                               ; preds = %40
  %61 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %3, i64 0, i32 3
  br label %90

62:                                               ; preds = %116, %40
  %63 = phi i64 [ %56, %40 ], [ %117, %116 ]
  %64 = phi i64 [ %56, %40 ], [ %119, %116 ]
  %65 = phi i8 [ 1, %40 ], [ %120, %116 ]
  %66 = phi i32 [ %54, %40 ], [ %95, %116 ]
  %67 = phi i64 [ 0, %40 ], [ %121, %116 ]
  %68 = icmp eq i32 %66, -1
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %3, i64 0, i32 3
  br label %75

71:                                               ; preds = %62
  %72 = call %class.CFX_Font* @_ZN9CPDF_Font15GetFontFallbackEi(%class.CPDF_Font* %3, i32 %66) #8
  %73 = load i64, i64* %55, align 8
  %74 = load i64, i64* %57, align 8
  br label %75

75:                                               ; preds = %69, %71
  %76 = phi i64 [ %63, %69 ], [ %74, %71 ]
  %77 = phi i64 [ %64, %69 ], [ %73, %71 ]
  %78 = phi %class.CFX_Font* [ %70, %69 ], [ %72, %71 ]
  %79 = sub i64 %77, %76
  %80 = sdiv exact i64 %79, 44
  %81 = sub i64 %80, %67
  %82 = trunc i64 %81 to i32
  %83 = inttoptr i64 %76 to %class.TextCharPos*
  %84 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %83, i64 %67
  %85 = call zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice* %0, i32 %82, %class.TextCharPos* %84, %class.CFX_Font* %78, float %4, %class.CFX_Matrix* dereferenceable(24) %5, i32 %6, %struct.CFX_TextRenderOptions* nonnull dereferenceable(8) %13) #8
  %86 = and i8 %65, 1
  %87 = icmp ne i8 %86, 0
  %88 = and i1 %87, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %89 = load %class.TextCharPos*, %class.TextCharPos** %15, align 8
  br label %130

90:                                               ; preds = %127, %60
  %91 = phi i64 [ %58, %60 ], [ %117, %127 ]
  %92 = phi i64 [ %58, %60 ], [ %118, %127 ]
  %93 = phi i64 [ %56, %60 ], [ %119, %127 ]
  %94 = phi %class.TextCharPos* [ %52, %60 ], [ %126, %127 ]
  %95 = phi i32 [ %54, %60 ], [ %129, %127 ]
  %96 = phi i64 [ 0, %60 ], [ %122, %127 ]
  %97 = phi i64 [ 0, %60 ], [ %121, %127 ]
  %98 = phi i32 [ %54, %60 ], [ %95, %127 ]
  %99 = phi i8 [ 1, %60 ], [ %120, %127 ]
  %100 = icmp eq i32 %98, %95
  br i1 %100, label %116, label %101

101:                                              ; preds = %90
  %102 = icmp eq i32 %98, -1
  br i1 %102, label %106, label %103

103:                                              ; preds = %101
  %104 = call %class.CFX_Font* @_ZN9CPDF_Font15GetFontFallbackEi(%class.CPDF_Font* %3, i32 %98) #8
  %105 = load %class.TextCharPos*, %class.TextCharPos** %15, align 8
  br label %106

106:                                              ; preds = %101, %103
  %107 = phi %class.TextCharPos* [ %105, %103 ], [ %94, %101 ]
  %108 = phi %class.CFX_Font* [ %104, %103 ], [ %61, %101 ]
  %109 = sub i64 %96, %97
  %110 = trunc i64 %109 to i32
  %111 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %107, i64 %97
  %112 = call zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice* %0, i32 %110, %class.TextCharPos* %111, %class.CFX_Font* %108, float %4, %class.CFX_Matrix* dereferenceable(24) %5, i32 %6, %struct.CFX_TextRenderOptions* nonnull dereferenceable(8) %13) #8
  %113 = select i1 %112, i8 %99, i8 0
  %114 = load i64, i64* %55, align 8
  %115 = load i64, i64* %57, align 8
  br label %116

116:                                              ; preds = %90, %106
  %117 = phi i64 [ %115, %106 ], [ %91, %90 ]
  %118 = phi i64 [ %115, %106 ], [ %92, %90 ]
  %119 = phi i64 [ %114, %106 ], [ %93, %90 ]
  %120 = phi i8 [ %113, %106 ], [ %99, %90 ]
  %121 = phi i64 [ %96, %106 ], [ %97, %90 ]
  %122 = add nuw i64 %96, 1
  %123 = sub i64 %119, %118
  %124 = sdiv exact i64 %123, 44
  %125 = icmp ult i64 %122, %124
  %126 = inttoptr i64 %118 to %class.TextCharPos*
  br i1 %125, label %127, label %62

127:                                              ; preds = %116
  %128 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %126, i64 %122, i32 4
  %129 = load i32, i32* %128, align 4
  br label %90

130:                                              ; preds = %8, %75
  %131 = phi %class.TextCharPos* [ %22, %8 ], [ %89, %75 ]
  %132 = phi i1 [ true, %8 ], [ %88, %75 ]
  %133 = icmp eq %class.TextCharPos* %131, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %130
  %135 = bitcast %class.TextCharPos* %131 to i8*
  %136 = load %class.TextCharPos*, %class.TextCharPos** %16, align 8
  %137 = icmp eq %class.TextCharPos* %136, %131
  br i1 %137, label %145, label %138

138:                                              ; preds = %134, %138
  %139 = phi %class.TextCharPos* [ %140, %138 ], [ %136, %134 ]
  %140 = getelementptr inbounds %class.TextCharPos, %class.TextCharPos* %139, i64 -1
  call void @_ZN11TextCharPosD1Ev(%class.TextCharPos* %140) #8
  %141 = icmp eq %class.TextCharPos* %140, %131
  br i1 %141, label %142, label %138

142:                                              ; preds = %138
  %143 = bitcast %"class.std::__1::vector.135"* %9 to i8**
  %144 = load i8*, i8** %143, align 8
  br label %145

145:                                              ; preds = %142, %134
  %146 = phi i8* [ %144, %142 ], [ %135, %134 ]
  store %class.TextCharPos* %131, %class.TextCharPos** %16, align 8
  call void @_ZdlPv(i8* %146) #9
  br label %147

147:                                              ; preds = %130, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  ret i1 %132
}

declare zeroext i1 @_ZN16CFX_RenderDevice14DrawNormalTextEiPK11TextCharPosP8CFX_FontfRK10CFX_MatrixjRK21CFX_TextRenderOptions(%class.CFX_RenderDevice*, i32, %class.TextCharPos*, %class.CFX_Font*, float, %class.CFX_Matrix* dereferenceable(24), i32, %struct.CFX_TextRenderOptions* dereferenceable(8)) local_unnamed_addr #2

declare %class.CFX_Font* @_ZN9CPDF_Font15GetFontFallbackEi(%class.CPDF_Font*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN11TextCharPosD1Ev(%class.TextCharPos*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.161"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.161"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.161"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #8
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.161", %"class.std::__1::vector.161"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #8
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIfNS_9allocatorIfEEE8__appendEm(%"class.std::__1::vector.117"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.117", %"class.std::__1::vector.117"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.117", %"class.std::__1::vector.117"* %0, i64 0, i32 0, i32 1
  %7 = bitcast float** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to float*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds float, float* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr float, float* %13, i64 %18
  %20 = bitcast float* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint float* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.117"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.117"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to float*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi float* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds float, float* %57, i64 %33
  %59 = getelementptr inbounds float, float* %57, i64 %56
  %60 = getelementptr inbounds float, float* %58, i64 %1
  %61 = bitcast float* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #8
  %63 = ptrtoint float* %59 to i64
  %64 = ptrtoint float* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.117", %"class.std::__1::vector.117"* %0, i64 0, i32 0, i32 0
  %66 = load float*, float** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint float* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds float, float* %58, i64 %71
  %73 = ptrtoint float* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast float* %72 to i8*
  %77 = bitcast float* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #8
  %78 = load float*, float** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi float* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq float* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast float* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!8 = !{i8 0, i8 2}
