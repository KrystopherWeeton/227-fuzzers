; ModuleID = '../../gpu/command_buffer/service/query_manager.cc'
source_filename = "../../gpu/command_buffer/service/query_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.gpu::QueryManager" = type { i32 (...)**, i32, [4 x i8], %"class.std::__1::unordered_map", %"class.std::__1::unordered_set", %"class.std::__1::map", %"class.base::circular_deque" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.14" }
%"class.std::__1::__hash_table.14" = type <{ %"class.std::__1::unique_ptr.15", %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.32", [4 x i8] }>
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base.18"** }
%"struct.std::__1::__hash_node_base.18" = type { %"struct.std::__1::__hash_node_base.18"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator.20" }
%"class.std::__1::__bucket_list_deallocator.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base.18" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.35", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %class.scoped_refptr*, i64 }
%class.scoped_refptr = type { %"class.gpu::QueryManager::Query"* }
%"class.gpu::QueryManager::Query" = type { i32 (...)**, %"class.base::RefCounted", %"class.gpu::QueryManager"*, i32, %class.scoped_refptr.42, %"struct.gpu::QuerySync"*, i32, i32, i8, %"class.std::__1::vector" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.42 = type { %"class.gpu::Buffer"* }
%"class.gpu::Buffer" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::unique_ptr.44", i8*, i32, [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.gpu::BufferBacking"* }
%"class.gpu::BufferBacking" = type { i32 (...)** }
%"struct.gpu::QuerySync" = type <{ i32, i64 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.50" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.49", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.49" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.base::OnceCallback"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %class.scoped_refptr }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74", %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }
%"struct.std::__1::pair.67" = type { i32, %class.scoped_refptr }
%"class.gl::GLApi" = type { i32 (...)** }
%"class.gpu::(anonymous namespace)::CommandsIssuedQuery" = type { %"class.gpu::QueryManager::Query", i32, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery" = type { %"class.gpu::QueryManager::Query" }
%"class.gpu::(anonymous namespace)::CommandsCompletedQuery" = type { %"class.gpu::QueryManager::Query", %"class.std::__1::unique_ptr.60", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.gl::GLFence"* }
%"class.gl::GLFence" = type { i32 (...)** }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::__hash_node.70"* }
%"struct.std::__1::__hash_node.70" = type <{ %"struct.std::__1::__hash_node_base.18", i64, i32, [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__hash_node_destructor.85" }
%"class.std::__1::__hash_node_destructor.85" = type <{ %"class.std::__1::allocator.28"*, i8, [7 x i8] }>
%"class.std::__1::allocator.28" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv = comdat any

$_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeEmm = comdat any

$_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeIS6_Li0EEEvPS6_S9_ = comdat any

$_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm = comdat any

$_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN3gpu12QueryManager5QueryEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS7_14remove_pointerIS9_E4typeEEE5valueEPcE4typeESB_ENUlRNS7_13basic_ostreamIcNS7_11char_traitsIcEEEEPKvE_8__invokeESM_SO_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE5eraseENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE = comdat any

$_ZNSt3__16vectorIN4base12OnceCallbackIFvvEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE10MoveBufferERNS_8internal12VectorBufferIS5_EEmmPS9_PmSC_ = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZNK4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm = comdat any

$_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE5eraseENS_8internal29circular_deque_const_iteratorIS5_EES9_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN3gpu12QueryManagerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::QueryManager"*)* @_ZN3gpu12QueryManagerD2Ev to i8*), i8* bitcast (void (%"class.gpu::QueryManager"*)* @_ZN3gpu12QueryManagerD0Ev to i8*), i8* bitcast (%"class.gpu::QueryManager::Query"* (%"class.gpu::QueryManager"*, i32, i32, %"class.gpu::Buffer"*, %"struct.gpu::QuerySync"*)* @_ZN3gpu12QueryManager11CreateQueryEjj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE to i8*), i8* bitcast (i32 (%"class.gpu::QueryManager"*, i32)* @_ZN3gpu12QueryManager24AdjustTargetForEmulationEj to i8*)] }, align 8
@.str = private unnamed_addr constant [19 x i8] c"query_count_ == 0u\00", align 1
@.str.1 = private unnamed_addr constant [50 x i8] c"../../gpu/command_buffer/service/query_manager.cc\00", align 1
@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@_ZTVN3gpu12QueryManager5QueryE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5QueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5QueryD0Ev to i8*)] }, align 8
@_ZTVN3gpu12_GLOBAL__N_119CommandsIssuedQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)* @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*, i32)* @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*, i32)* @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery12QueryCounterEi to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*, i1)* @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery7ProcessEb to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)* @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)* @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*, i1)* @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)* @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)* @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5QueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)* @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQueryD0Ev to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZTVN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"*)* @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"*, i32)* @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"*, i32)* @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery12QueryCounterEi to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"*, i1)* @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery7ProcessEb to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"*)* @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"*)* @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"*, i1)* @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5QueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"*)* @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQueryD0Ev to i8*)] }, align 8
@_ZTVN3gpu12_GLOBAL__N_122CommandsCompletedQueryE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*)* @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery5BeginEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*, i32)* @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery3EndEi to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*, i32)* @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery12QueryCounterEi to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*, i1)* @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery7ProcessEb to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*)* @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery5PauseEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*)* @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery6ResumeEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*, i1)* @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery7DestroyEb to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*)* @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQueryD2Ev to i8*), i8* bitcast (void (%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*)* @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQueryD0Ev to i8*)] }, align 8
@.str.4 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1

@_ZN3gpu12QueryManagerC1Ev = hidden unnamed_addr alias void (%"class.gpu::QueryManager"*), void (%"class.gpu::QueryManager"*)* @_ZN3gpu12QueryManagerC2Ev
@_ZN3gpu12QueryManagerD1Ev = hidden unnamed_addr alias void (%"class.gpu::QueryManager"*), void (%"class.gpu::QueryManager"*)* @_ZN3gpu12QueryManagerD2Ev
@_ZN3gpu12QueryManager5QueryD1Ev = hidden unnamed_addr alias void (%"class.gpu::QueryManager::Query"*), void (%"class.gpu::QueryManager::Query"*)* @_ZN3gpu12QueryManager5QueryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManagerC2Ev(%"class.gpu::QueryManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu12QueryManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.11"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #18
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 4, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.32"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_set"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #18
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %14, align 8
  %16 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6
  %17 = bitcast %"class.base::circular_deque"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManagerD2Ev(%"class.gpu::QueryManager"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3gpu12QueryManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp eq i32 %9, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %1
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i32 297, %"class.logging::CheckOpResult"* nonnull %3) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 2
  %27 = load i64, i64* %26, align 8
  call void @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeEmm(%"class.base::circular_deque"* %23, i64 %25, i64 %27) #18
  %28 = bitcast %"class.base::circular_deque"* %23 to i8**
  %29 = load i8*, i8** %28, align 8
  call void @free(i8* %29) #18
  %30 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0
  %31 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_node"**
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %30, %"class.std::__1::__tree_node"* %33) #18
  %34 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.18"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %22, %37
  %38 = phi %"struct.std::__1::__hash_node_base.18"* [ %40, %37 ], [ %35, %22 ]
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %38, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %39, align 8
  %41 = bitcast %"struct.std::__1::__hash_node_base.18"* %38 to i8*
  call void @_ZdlPv(i8* %41) #19
  %42 = icmp eq %"struct.std::__1::__hash_node_base.18"* %40, null
  br i1 %42, label %43, label %37

43:                                               ; preds = %37, %22
  %44 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %44, align 8
  store %"struct.std::__1::__hash_node_base.18"** null, %"struct.std::__1::__hash_node_base.18"*** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.18"** %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %43
  %48 = bitcast %"struct.std::__1::__hash_node_base.18"** %45 to i8*
  call void @_ZdlPv(i8* %48) #19
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base"* %51, null
  br i1 %52, label %77, label %53

53:                                               ; preds = %49, %74
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %56, %74 ], [ %51, %49 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 3
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to %"class.gpu::QueryManager::Query"**
  %59 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %58, align 8
  %60 = icmp eq %"class.gpu::QueryManager::Query"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %59, i64 0, i32 1
  %63 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %62, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #18
  %64 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %62, i64 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %74

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %62, i64 -2
  %69 = bitcast %"class.base::RefCounted"* %68 to %"class.gpu::QueryManager::Query"*
  %70 = bitcast %"class.base::RefCounted"* %68 to void (%"class.gpu::QueryManager::Query"*)***
  %71 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %71, i64 10
  %73 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %72, align 8
  call void %73(%"class.gpu::QueryManager::Query"* nonnull %69) #18
  br label %74

74:                                               ; preds = %67, %61, %53
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i8*
  call void @_ZdlPv(i8* %75) #19
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %76, label %77, label %53

77:                                               ; preds = %74, %49
  %78 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %78, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base"** %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %77
  %82 = bitcast %"struct.std::__1::__hash_node_base"** %79 to i8*
  call void @_ZdlPv(i8* %82) #19
  br label %83

83:                                               ; preds = %77, %81
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManagerD0Ev(%"class.gpu::QueryManager"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu12QueryManagerD2Ev(%"class.gpu::QueryManager"* %0) #18
  %2 = bitcast %"class.gpu::QueryManager"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager7DestroyEb(%"class.gpu::QueryManager"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.72", align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %5, %"class.std::__1::__tree_node"* %8) #18
  %9 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %6, %"class.std::__1::__tree_end_node"** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %6, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %11, align 8
  %12 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 2
  %16 = load i64, i64* %15, align 8
  tail call void @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeEmm(%"class.base::circular_deque"* %12, i64 %14, i64 %16) #18
  %17 = bitcast i64* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #18
  %18 = bitcast %"class.base::circular_deque"* %12 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @free(i8* %19) #18
  %20 = bitcast %"class.base::circular_deque"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #18
  %21 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %67, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %26 = bitcast %"struct.std::__1::__hash_node_base"** %25 to %"struct.std::__1::__hash_node"**
  %27 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.72"* %3 to i8*
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72"* %3, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  br label %31

31:                                               ; preds = %24, %64
  %32 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %26, align 8
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %32, i64 0, i32 2, i32 0, i32 1, i32 0
  %34 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %33, align 8
  %35 = bitcast %"class.gpu::QueryManager::Query"* %34 to void (%"class.gpu::QueryManager::Query"*, i1)***
  %36 = load void (%"class.gpu::QueryManager::Query"*, i1)**, void (%"class.gpu::QueryManager::Query"*, i1)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*, i1)*, void (%"class.gpu::QueryManager::Query"*, i1)** %36, i64 6
  %38 = load void (%"class.gpu::QueryManager::Query"*, i1)*, void (%"class.gpu::QueryManager::Query"*, i1)** %37, align 8
  call void %38(%"class.gpu::QueryManager::Query"* %34, i1 zeroext %1) #18
  %39 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #18
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::unique_ptr.72"* nonnull sret %3, %"class.std::__1::__hash_table"* %27, %"struct.std::__1::__hash_node_base"* %39) #18
  %40 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %29, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %29, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node"* %40, null
  br i1 %41, label %64, label %42

42:                                               ; preds = %31
  %43 = load i8, i8* %30, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %62, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %40, i64 0, i32 2, i32 0, i32 1, i32 0
  %47 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %46, align 8
  %48 = icmp eq %"class.gpu::QueryManager::Query"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %47, i64 0, i32 1
  %51 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #18
  %52 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 -2
  %57 = bitcast %"class.base::RefCounted"* %56 to %"class.gpu::QueryManager::Query"*
  %58 = bitcast %"class.base::RefCounted"* %56 to void (%"class.gpu::QueryManager::Query"*)***
  %59 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %59, i64 10
  %61 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %60, align 8
  call void %61(%"class.gpu::QueryManager::Query"* nonnull %57) #18
  br label %62

62:                                               ; preds = %55, %49, %45, %42
  %63 = bitcast %"struct.std::__1::__hash_node"* %40 to i8*
  call void @_ZdlPv(i8* %63) #19
  br label %64

64:                                               ; preds = %31, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #18
  %65 = load i64, i64* %21, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %31

67:                                               ; preds = %64, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::QueryManager::Query"* @_ZN3gpu12QueryManager11CreateQueryEjj13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager"*, i32, i32, %"class.gpu::Buffer"*, %"struct.gpu::QuerySync"*) unnamed_addr #0 align 2 {
  %6 = alloca %"struct.std::__1::pair.67", align 8
  %7 = ptrtoint %"class.gpu::Buffer"* %3 to i64
  switch i32 %1, label %8 [
    i32 24580, label %10
    i32 24581, label %31
    i32 34040, label %49
    i32 34039, label %49
  ]

8:                                                ; preds = %5
  %9 = bitcast %"struct.std::__1::pair.67"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #18
  br label %74

10:                                               ; preds = %5
  %11 = tail call i8* @_Znwm(i64 112) #19
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = bitcast i8* %11 to i32 (...)***
  %15 = getelementptr inbounds i8, i8* %11, i64 16
  %16 = bitcast i8* %15 to %"class.gpu::QueryManager"**
  store %"class.gpu::QueryManager"* %0, %"class.gpu::QueryManager"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 24
  %18 = bitcast i8* %17 to i32*
  store i32 24580, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 32
  %20 = bitcast i8* %19 to i64*
  store i64 %7, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %11, i64 40
  %22 = bitcast i8* %21 to %"struct.gpu::QuerySync"**
  store %"struct.gpu::QuerySync"* %4, %"struct.gpu::QuerySync"** %22, align 8
  %23 = getelementptr inbounds i8, i8* %11, i64 48
  %24 = getelementptr inbounds i8, i8* %11, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #18
  %25 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 9, i1 false) #18
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, 1
  store i32 %27, i32* %25, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu12_GLOBAL__N_119CommandsIssuedQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %28 = getelementptr inbounds i8, i8* %11, i64 88
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %11, i64 96
  store i32 0, i32* %29, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #18
  br label %68

31:                                               ; preds = %5
  %32 = tail call i8* @_Znwm(i64 88) #19
  %33 = getelementptr inbounds i8, i8* %32, i64 8
  %34 = bitcast i8* %33 to i32*
  store i32 0, i32* %34, align 4
  %35 = bitcast i8* %32 to i32 (...)***
  %36 = getelementptr inbounds i8, i8* %32, i64 16
  %37 = bitcast i8* %36 to %"class.gpu::QueryManager"**
  store %"class.gpu::QueryManager"* %0, %"class.gpu::QueryManager"** %37, align 8
  %38 = getelementptr inbounds i8, i8* %32, i64 24
  %39 = bitcast i8* %38 to i32*
  store i32 24581, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %32, i64 32
  %41 = bitcast i8* %40 to i64*
  store i64 %7, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %32, i64 40
  %43 = bitcast i8* %42 to %"struct.gpu::QuerySync"**
  store %"struct.gpu::QuerySync"* %4, %"struct.gpu::QuerySync"** %43, align 8
  %44 = getelementptr inbounds i8, i8* %32, i64 48
  %45 = getelementptr inbounds i8, i8* %32, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #18
  %46 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 9, i1 false) #18
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, 1
  store i32 %48, i32* %46, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  br label %68

49:                                               ; preds = %5, %5
  %50 = tail call i8* @_Znwm(i64 104) #19
  %51 = getelementptr inbounds i8, i8* %50, i64 8
  %52 = bitcast i8* %51 to i32*
  store i32 0, i32* %52, align 4
  %53 = bitcast i8* %50 to i32 (...)***
  %54 = getelementptr inbounds i8, i8* %50, i64 16
  %55 = bitcast i8* %54 to %"class.gpu::QueryManager"**
  store %"class.gpu::QueryManager"* %0, %"class.gpu::QueryManager"** %55, align 8
  %56 = getelementptr inbounds i8, i8* %50, i64 24
  %57 = bitcast i8* %56 to i32*
  store i32 %1, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %50, i64 32
  %59 = bitcast i8* %58 to i64*
  store i64 %7, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %50, i64 40
  %61 = bitcast i8* %60 to %"struct.gpu::QuerySync"**
  store %"struct.gpu::QuerySync"* %4, %"struct.gpu::QuerySync"** %61, align 8
  %62 = getelementptr inbounds i8, i8* %50, i64 48
  %63 = getelementptr inbounds i8, i8* %50, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #18
  %64 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 9, i1 false) #18
  %65 = load i32, i32* %64, align 8
  %66 = add i32 %65, 1
  store i32 %66, i32* %64, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu12_GLOBAL__N_122CommandsCompletedQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %67 = getelementptr inbounds i8, i8* %50, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #18
  br label %68

68:                                               ; preds = %49, %31, %10
  %69 = phi i8* [ %51, %49 ], [ %33, %31 ], [ %12, %10 ]
  %70 = phi i8* [ %50, %49 ], [ %32, %31 ], [ %11, %10 ]
  %71 = bitcast i8* %69 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %71) #18
  %72 = bitcast %"struct.std::__1::pair.67"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #18
  %73 = bitcast i8* %70 to %"class.gpu::QueryManager::Query"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %71) #18
  br label %74

74:                                               ; preds = %8, %68
  %75 = phi i1 [ true, %8 ], [ false, %68 ]
  %76 = phi %"class.gpu::QueryManager::Query"* [ null, %8 ], [ %73, %68 ]
  %77 = phi i8* [ %9, %8 ], [ %72, %68 ]
  %78 = phi %"class.gpu::Buffer"* [ %3, %8 ], [ null, %68 ]
  %79 = getelementptr inbounds %"struct.std::__1::pair.67", %"struct.std::__1::pair.67"* %6, i64 0, i32 0
  store i32 %2, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.67", %"struct.std::__1::pair.67"* %6, i64 0, i32 1, i32 0
  store %"class.gpu::QueryManager::Query"* %76, %"class.gpu::QueryManager::Query"** %80, align 8
  %81 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3, i32 0
  %82 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %81, i32* nonnull dereferenceable(4) %79, %"struct.std::__1::pair.67"* nonnull dereferenceable(16) %6) #18
  %83 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %80, align 8
  %84 = icmp eq %"class.gpu::QueryManager::Query"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %83, i64 0, i32 1
  %87 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %86, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %87) #18
  %88 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %86, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %98

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %86, i64 -2
  %93 = bitcast %"class.base::RefCounted"* %92 to %"class.gpu::QueryManager::Query"*
  %94 = bitcast %"class.base::RefCounted"* %92 to void (%"class.gpu::QueryManager::Query"*)***
  %95 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %95, i64 10
  %97 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %96, align 8
  call void %97(%"class.gpu::QueryManager::Query"* nonnull %93) #18
  br label %98

98:                                               ; preds = %74, %85, %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #18
  br i1 %75, label %112, label %99

99:                                               ; preds = %98
  %100 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %76, i64 0, i32 1
  %101 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %100, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %101) #18
  %102 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %100, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %112

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %100, i64 -2
  %107 = bitcast %"class.base::RefCounted"* %106 to %"class.gpu::QueryManager::Query"*
  %108 = bitcast %"class.base::RefCounted"* %106 to void (%"class.gpu::QueryManager::Query"*)***
  %109 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %109, i64 10
  %111 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %110, align 8
  call void %111(%"class.gpu::QueryManager::Query"* nonnull %107) #18
  br label %112

112:                                              ; preds = %98, %99, %105
  %113 = icmp eq %"class.gpu::Buffer"* %78, null
  br i1 %113, label %120, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw sub i32* %115, i32 1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %120

118:                                              ; preds = %114
  call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %78) #18
  %119 = bitcast %"class.gpu::Buffer"* %78 to i8*
  call void @_ZdlPv(i8* %119) #19
  br label %120

120:                                              ; preds = %112, %114, %118
  ret %"class.gpu::QueryManager::Query"* %76
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager10GenQueriesEiPKj(%"class.gpu::QueryManager"*, i32, i32*) local_unnamed_addr #0 align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 4, i32 0
  %7 = zext i32 %1 to i64
  br label %9

8:                                                ; preds = %9, %3
  ret void

9:                                                ; preds = %9, %5
  %10 = phi i64 [ 0, %5 ], [ %13, %9 ]
  %11 = getelementptr inbounds i32, i32* %2, i64 %10
  %12 = tail call { %"struct.std::__1::__hash_node_base.18"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.14"* %6, i32* dereferenceable(4) %11, i32* dereferenceable(4) %11) #18
  %13 = add nuw nsw i64 %10, 1
  %14 = icmp eq i64 %13, %7
  br i1 %14, label %8, label %9
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3gpu12QueryManager12IsValidQueryEj(%"class.gpu::QueryManager"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %55, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #18, !range !3
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, 4294967295
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.18"* %22, null
  br i1 %23, label %55, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.18"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base.18"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base.18"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %55

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base.18"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.18"* %53, null
  br i1 %54, label %55, label %30

55:                                               ; preds = %43, %46, %51, %2, %17, %24
  %56 = phi %"struct.std::__1::__hash_node_base.18"* [ null, %17 ], [ null, %2 ], [ null, %24 ], [ %31, %46 ], [ null, %51 ], [ null, %43 ]
  %57 = icmp ne %"struct.std::__1::__hash_node_base.18"* %56, null
  ret i1 %57
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.gpu::QueryManager::Query"* @_ZN3gpu12QueryManager8GetQueryEj(%"class.gpu::QueryManager"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = zext i32 %1 to i64
  %4 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %59, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #18, !range !3
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, 4294967295
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %59, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %59, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %59

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %59, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 3
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"class.gpu::QueryManager::Query"**
  %58 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %57, align 8
  br label %59

59:                                               ; preds = %51, %43, %24, %2, %17, %55
  %60 = phi %"class.gpu::QueryManager::Query"* [ %58, %55 ], [ null, %17 ], [ null, %2 ], [ null, %24 ], [ null, %43 ], [ null, %51 ]
  ret %"class.gpu::QueryManager::Query"* %60
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.gpu::QueryManager::Query"* @_ZN3gpu12QueryManager14GetActiveQueryEj(%"class.gpu::QueryManager"*, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %32, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %32, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %26, %1
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.gpu::QueryManager::Query"**
  %31 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %30, align 8
  br label %32

32:                                               ; preds = %23, %21, %2, %28
  %33 = phi %"class.gpu::QueryManager::Query"* [ %31, %28 ], [ null, %2 ], [ null, %21 ], [ null, %23 ]
  ret %"class.gpu::QueryManager::Query"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager11RemoveQueryEj(%"class.gpu::QueryManager"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.72", align 8
  %4 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3
  %6 = zext i32 %1 to i64
  %7 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %132, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #18, !range !3
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %132, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %132, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %132

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %1
  br i1 %53, label %58, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %132, label %33

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 3
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to %"class.gpu::QueryManager::Query"**
  %61 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %60, align 8
  %62 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %61, i64 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %65 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node"**
  %66 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node"* %66, null
  br i1 %67, label %97, label %68

68:                                               ; preds = %58, %68
  %69 = phi %"class.std::__1::__tree_end_node"* [ %79, %68 ], [ %64, %58 ]
  %70 = phi %"class.std::__1::__tree_node"* [ %80, %68 ], [ %66, %58 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 1, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp ult i32 %72, %63
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 0, i32 1
  %75 = bitcast %"class.std::__1::__tree_node_base"** %74 to %"class.std::__1::__tree_node"**
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 0, i32 0
  %77 = bitcast %"class.std::__1::__tree_node"* %70 to %"class.std::__1::__tree_node"**
  %78 = select i1 %73, %"class.std::__1::__tree_node"** %75, %"class.std::__1::__tree_node"** %77
  %79 = select i1 %73, %"class.std::__1::__tree_end_node"* %69, %"class.std::__1::__tree_end_node"* %76
  %80 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %78, align 8
  %81 = icmp eq %"class.std::__1::__tree_node"* %80, null
  br i1 %81, label %82, label %68

82:                                               ; preds = %68
  %83 = icmp eq %"class.std::__1::__tree_end_node"* %79, %64
  br i1 %83, label %97, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 4
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = icmp ult i32 %63, %87
  br i1 %88, label %97, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 5
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.gpu::QueryManager::Query"**
  %92 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %91, align 8
  %93 = icmp eq %"class.gpu::QueryManager::Query"* %61, %92
  br i1 %93, label %94, label %97

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0
  %96 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE5eraseENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEE(%"class.std::__1::__tree"* %95, %"class.std::__1::__tree_end_node"* %79) #18
  br label %97

97:                                               ; preds = %84, %82, %58, %94, %89
  %98 = bitcast %"class.gpu::QueryManager::Query"* %61 to void (%"class.gpu::QueryManager::Query"*, i1)***
  %99 = load void (%"class.gpu::QueryManager::Query"*, i1)**, void (%"class.gpu::QueryManager::Query"*, i1)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*, i1)*, void (%"class.gpu::QueryManager::Query"*, i1)** %99, i64 6
  %101 = load void (%"class.gpu::QueryManager::Query"*, i1)*, void (%"class.gpu::QueryManager::Query"*, i1)** %100, align 8
  tail call void %101(%"class.gpu::QueryManager::Query"* %61, i1 zeroext true) #18
  tail call void @_ZN3gpu12QueryManager18RemovePendingQueryEPNS0_5QueryE(%"class.gpu::QueryManager"* %0, %"class.gpu::QueryManager::Query"* %61)
  %102 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %61, i64 0, i32 8
  store i8 1, i8* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.72"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #18
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::unique_ptr.72"* nonnull sret %3, %"class.std::__1::__hash_table"* %103, %"struct.std::__1::__hash_node_base"* %34) #18
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72"* %3, i64 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %105, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node"* %106, null
  br i1 %107, label %131, label %108

108:                                              ; preds = %97
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %110 = load i8, i8* %109, align 8, !range !2
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %129, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %106, i64 0, i32 2, i32 0, i32 1, i32 0
  %114 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %113, align 8
  %115 = icmp eq %"class.gpu::QueryManager::Query"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %114, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %117, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %118) #18
  %119 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %117, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %129

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %117, i64 -2
  %124 = bitcast %"class.base::RefCounted"* %123 to %"class.gpu::QueryManager::Query"*
  %125 = bitcast %"class.base::RefCounted"* %123 to void (%"class.gpu::QueryManager::Query"*)***
  %126 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %126, i64 10
  %128 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %127, align 8
  call void %128(%"class.gpu::QueryManager::Query"* nonnull %124) #18
  br label %129

129:                                              ; preds = %122, %116, %112, %108
  %130 = bitcast %"struct.std::__1::__hash_node"* %106 to i8*
  call void @_ZdlPv(i8* %130) #19
  br label %131

131:                                              ; preds = %97, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #18
  br label %132

132:                                              ; preds = %54, %46, %27, %2, %20, %131
  %133 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 4, i32 0
  %134 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.14"* %133, i32* nonnull dereferenceable(4) %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager18RemovePendingQueryEPNS0_5QueryE(%"class.gpu::QueryManager"*, %"class.gpu::QueryManager::Query"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %98

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 2
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %47, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %8, i64 0, i32 0
  %16 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 0, i32 1
  br label %17

17:                                               ; preds = %14, %40
  %18 = phi i64 [ %10, %14 ], [ %44, %40 ]
  %19 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %15, i64 %18) #18
  %20 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %19, i64 0, i32 0
  %21 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %20, align 8
  %22 = icmp eq %"class.gpu::QueryManager::Query"* %21, %1
  br i1 %22, label %23, label %40

23:                                               ; preds = %17
  %24 = load i64, i64* %9, align 8
  %25 = icmp ult i64 %18, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = sub i64 %18, %24
  %28 = load i64, i64* %16, align 8
  br label %33

29:                                               ; preds = %23
  %30 = load i64, i64* %16, align 8
  %31 = sub i64 %18, %24
  %32 = add i64 %31, %30
  br label %33

33:                                               ; preds = %26, %29
  %34 = phi i64 [ %28, %26 ], [ %30, %29 ]
  %35 = phi i64 [ %27, %26 ], [ %32, %29 ]
  %36 = add i64 %24, 1
  %37 = add i64 %36, %35
  %38 = urem i64 %37, %34
  %39 = tail call { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE5eraseENS_8internal29circular_deque_const_iteratorIS5_EES9_(%"class.base::circular_deque"* %8, %"class.base::circular_deque"* %8, i64 %18, %"class.base::circular_deque"* %8, i64 %38) #18
  br label %47

40:                                               ; preds = %17
  %41 = add i64 %18, 1
  %42 = load i64, i64* %16, align 8
  %43 = icmp eq i64 %41, %42
  %44 = select i1 %43, i64 0, i64 %41
  %45 = load i64, i64* %11, align 8
  %46 = icmp eq i64 %44, %45
  br i1 %46, label %47, label %17

47:                                               ; preds = %40, %7, %33
  store i32 4, i32* %4, align 4
  %48 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 5
  %49 = load %"struct.gpu::QuerySync"*, %"struct.gpu::QuerySync"** %48, align 8
  %50 = getelementptr inbounds %"struct.gpu::QuerySync", %"struct.gpu::QuerySync"* %49, i64 0, i32 1
  store i64 0, i64* %50, align 4
  %51 = load %"struct.gpu::QuerySync"*, %"struct.gpu::QuerySync"** %48, align 8
  %52 = getelementptr inbounds %"struct.gpu::QuerySync", %"struct.gpu::QuerySync"* %51, i64 0, i32 0
  %53 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 6
  %54 = load i32, i32* %53, align 8
  store atomic volatile i32 %54, i32* %52 release, align 4
  %55 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 9
  %56 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 9, i32 0, i32 1
  %57 = bitcast %"class.base::OnceCallback"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.std::__1::vector"* %55 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %58, %60
  %62 = inttoptr i64 %60 to %"class.base::OnceCallback"*
  br i1 %61, label %69, label %63

63:                                               ; preds = %47
  %64 = bitcast %"class.base::OnceCallback"* %3 to i8*
  %65 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  br label %79

67:                                               ; preds = %79
  %68 = inttoptr i64 %92 to %"class.base::OnceCallback"*
  br label %69

69:                                               ; preds = %67, %47
  %70 = phi i64 [ %58, %47 ], [ %91, %67 ]
  %71 = phi %"class.base::OnceCallback"* [ %62, %47 ], [ %68, %67 ]
  %72 = inttoptr i64 %70 to %"class.base::OnceCallback"*
  %73 = icmp eq %"class.base::OnceCallback"* %71, %72
  br i1 %73, label %97, label %74

74:                                               ; preds = %69, %74
  %75 = phi %"class.base::OnceCallback"* [ %76, %74 ], [ %72, %69 ]
  %76 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %75, i64 -1
  %77 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %76, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %77) #18
  %78 = icmp eq %"class.base::OnceCallback"* %76, %71
  br i1 %78, label %97, label %74

79:                                               ; preds = %79, %63
  %80 = phi %"class.base::OnceCallback"* [ %62, %63 ], [ %96, %79 ]
  %81 = phi i64 [ 0, %63 ], [ %90, %79 ]
  %82 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 %81
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #18
  %83 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"class.base::OnceCallback"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  store i64 %85, i64* %65, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %83, align 8
  %86 = inttoptr i64 %85 to %"class.base::internal::BindStateBase"*
  %87 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %86, i64 0, i32 1
  %88 = bitcast void ()** %87 to void (%"class.base::internal::BindStateBase"*)**
  %89 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %88, align 8
  call void %89(%"class.base::internal::BindStateBase"* %86) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #18
  %90 = add nuw i64 %81, 1
  %91 = load i64, i64* %57, align 8
  %92 = load i64, i64* %59, align 8
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 3
  %95 = icmp ult i64 %90, %94
  %96 = inttoptr i64 %92 to %"class.base::OnceCallback"*
  br i1 %95, label %79, label %67

97:                                               ; preds = %74, %69
  store %"class.base::OnceCallback"* %71, %"class.base::OnceCallback"** %56, align 8
  br label %98

98:                                               ; preds = %97, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager13StartTrackingEPNS0_5QueryE(%"class.gpu::QueryManager"* nocapture, %"class.gpu::QueryManager::Query"* nocapture readnone) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager12StopTrackingEPNS0_5QueryE(%"class.gpu::QueryManager"* nocapture, %"class.gpu::QueryManager::Query"* nocapture readnone) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -1
  store i32 %5, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3gpu12QueryManager24AdjustTargetForEmulationEj(%"class.gpu::QueryManager"* nocapture readnone, i32 returned) unnamed_addr #8 align 2 {
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager16BeginQueryHelperEjj(%"class.gpu::QueryManager"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.gpu::QueryManager"* %0 to i32 (%"class.gpu::QueryManager"*, i32)***
  %5 = load i32 (%"class.gpu::QueryManager"*, i32)**, i32 (%"class.gpu::QueryManager"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gpu::QueryManager"*, i32)*, i32 (%"class.gpu::QueryManager"*, i32)** %5, i64 3
  %7 = load i32 (%"class.gpu::QueryManager"*, i32)*, i32 (%"class.gpu::QueryManager"*, i32)** %6, align 8
  %8 = tail call i32 %7(%"class.gpu::QueryManager"* %0, i32 %1) #18
  %9 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %10 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %9, i64 0, i32 0
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #18
  %12 = bitcast i8* %11 to %"class.gl::GLApi"**
  %13 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %12, align 8
  %14 = bitcast %"class.gl::GLApi"* %13 to void (%"class.gl::GLApi"*, i32, i32)***
  %15 = load void (%"class.gl::GLApi"*, i32, i32)**, void (%"class.gl::GLApi"*, i32, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %15, i64 6
  %17 = load void (%"class.gl::GLApi"*, i32, i32)*, void (%"class.gl::GLApi"*, i32, i32)** %16, align 8
  tail call void %17(%"class.gl::GLApi"* %13, i32 %8, i32 %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager14EndQueryHelperEj(%"class.gpu::QueryManager"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.gpu::QueryManager"* %0 to i32 (%"class.gpu::QueryManager"*, i32)***
  %4 = load i32 (%"class.gpu::QueryManager"*, i32)**, i32 (%"class.gpu::QueryManager"*, i32)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.gpu::QueryManager"*, i32)*, i32 (%"class.gpu::QueryManager"*, i32)** %4, i64 3
  %6 = load i32 (%"class.gpu::QueryManager"*, i32)*, i32 (%"class.gpu::QueryManager"*, i32)** %5, align 8
  %7 = tail call i32 %6(%"class.gpu::QueryManager"* %0, i32 %1) #18
  %8 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %9 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %8, i64 0, i32 0
  %10 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %9) #18
  %11 = bitcast i8* %10 to %"class.gl::GLApi"**
  %12 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %11, align 8
  %13 = bitcast %"class.gl::GLApi"* %12 to void (%"class.gl::GLApi"*, i32)***
  %14 = load void (%"class.gl::GLApi"*, i32)**, void (%"class.gl::GLApi"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %14, i64 128
  %16 = load void (%"class.gl::GLApi"*, i32)*, void (%"class.gl::GLApi"*, i32)** %15, align 8
  tail call void %16(%"class.gl::GLApi"* %12, i32 %7) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager5QueryC2EPS0_j13scoped_refptrINS_6BufferEEPNS_9QuerySyncE(%"class.gpu::QueryManager::Query"* nocapture, %"class.gpu::QueryManager"*, i32, %"class.gpu::Buffer"*, %"struct.gpu::QuerySync"*) unnamed_addr #0 align 2 {
  %6 = ptrtoint %"class.gpu::Buffer"* %3 to i64
  %7 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu12QueryManager5QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 2
  store %"class.gpu::QueryManager"* %1, %"class.gpu::QueryManager"** %9, align 8
  %10 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 3
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 4
  %12 = bitcast %class.scoped_refptr.42* %11 to i64*
  store i64 %6, i64* %12, align 8
  %13 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 5
  store %"struct.gpu::QuerySync"* %4, %"struct.gpu::QuerySync"** %13, align 8
  %14 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 6
  %15 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 9
  %16 = bitcast %"class.std::__1::vector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #18
  %17 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %1, i64 0, i32 1
  %18 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 9, i1 false)
  %19 = load i32, i32* %17, align 8
  %20 = add i32 %19, 1
  store i32 %20, i32* %17, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager5Query12RunCallbacksEv(%"class.gpu::QueryManager::Query"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 9
  %4 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 9, i32 0, i32 1
  %5 = bitcast %"class.base::OnceCallback"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = inttoptr i64 %8 to %"class.base::OnceCallback"*
  br i1 %9, label %17, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %13 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  br label %28

15:                                               ; preds = %28
  %16 = inttoptr i64 %41 to %"class.base::OnceCallback"*
  br label %17

17:                                               ; preds = %15, %1
  %18 = phi i64 [ %6, %1 ], [ %40, %15 ]
  %19 = phi %"class.base::OnceCallback"* [ %10, %1 ], [ %16, %15 ]
  %20 = inttoptr i64 %18 to %"class.base::OnceCallback"*
  %21 = icmp eq %"class.base::OnceCallback"* %19, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %17, %22
  %23 = phi %"class.base::OnceCallback"* [ %24, %22 ], [ %20, %17 ]
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %23, i64 -1
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %25) #18
  %26 = icmp eq %"class.base::OnceCallback"* %24, %19
  br i1 %26, label %27, label %22

27:                                               ; preds = %22, %17
  store %"class.base::OnceCallback"* %19, %"class.base::OnceCallback"** %4, align 8
  ret void

28:                                               ; preds = %11, %28
  %29 = phi %"class.base::OnceCallback"* [ %10, %11 ], [ %45, %28 ]
  %30 = phi i64 [ 0, %11 ], [ %39, %28 ]
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %29, i64 %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #18
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.base::OnceCallback"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8
  %35 = inttoptr i64 %34 to %"class.base::internal::BindStateBase"*
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %37 = bitcast void ()** %36 to void (%"class.base::internal::BindStateBase"*)**
  %38 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %37, align 8
  call void %38(%"class.base::internal::BindStateBase"* %35) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #18
  %39 = add nuw i64 %30, 1
  %40 = load i64, i64* %5, align 8
  %41 = load i64, i64* %7, align 8
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %39, %43
  %45 = inttoptr i64 %41 to %"class.base::OnceCallback"*
  br i1 %44, label %28, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager5Query11AddCallbackEN4base12OnceCallbackIFvvEEE(%"class.gpu::QueryManager::Query"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 3
  br i1 %6, label %7, label %23

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 9, i32 0, i32 1
  %9 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %8, align 8
  %10 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %10, align 8
  %12 = icmp ult %"class.base::OnceCallback"* %9, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 1
  %19 = ptrtoint %"class.base::OnceCallback"* %18 to i64
  %20 = bitcast %"class.base::OnceCallback"** %8 to i64*
  store i64 %19, i64* %20, align 8
  br label %34

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 9
  tail call void @_ZNSt3__16vectorIN4base12OnceCallbackIFvvEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"* %22, %"class.base::OnceCallback"* dereferenceable(8) %1) #18
  br label %34

23:                                               ; preds = %2
  %24 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %30 = inttoptr i64 %27 to %"class.base::internal::BindStateBase"*
  %31 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %30, i64 0, i32 1
  %32 = bitcast void ()** %31 to void (%"class.base::internal::BindStateBase"*)**
  %33 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %32, align 8
  tail call void %33(%"class.base::internal::BindStateBase"* %30) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  br label %34

34:                                               ; preds = %21, %13, %23
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager5QueryD0Ev(%"class.gpu::QueryManager::Query"* nocapture readnone) unnamed_addr #9 align 2 {
  tail call void @llvm.trap() #20
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager5Query15MarkAsCompletedEm(%"class.gpu::QueryManager::Query"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 7
  store i32 4, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 5
  %6 = load %"struct.gpu::QuerySync"*, %"struct.gpu::QuerySync"** %5, align 8
  %7 = getelementptr inbounds %"struct.gpu::QuerySync", %"struct.gpu::QuerySync"* %6, i64 0, i32 1
  store i64 %1, i64* %7, align 4
  %8 = load %"struct.gpu::QuerySync"*, %"struct.gpu::QuerySync"** %5, align 8
  %9 = getelementptr inbounds %"struct.gpu::QuerySync", %"struct.gpu::QuerySync"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  store atomic volatile i32 %11, i32* %9 release, align 4
  %12 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 9
  %13 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 9, i32 0, i32 1
  %14 = bitcast %"class.base::OnceCallback"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %15, %17
  %19 = inttoptr i64 %17 to %"class.base::OnceCallback"*
  br i1 %18, label %26, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.base::OnceCallback"* %3 to i8*
  %22 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  br label %36

24:                                               ; preds = %36
  %25 = inttoptr i64 %49 to %"class.base::OnceCallback"*
  br label %26

26:                                               ; preds = %24, %2
  %27 = phi i64 [ %15, %2 ], [ %48, %24 ]
  %28 = phi %"class.base::OnceCallback"* [ %19, %2 ], [ %25, %24 ]
  %29 = inttoptr i64 %27 to %"class.base::OnceCallback"*
  %30 = icmp eq %"class.base::OnceCallback"* %28, %29
  br i1 %30, label %54, label %31

31:                                               ; preds = %26, %31
  %32 = phi %"class.base::OnceCallback"* [ %33, %31 ], [ %29, %26 ]
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %32, i64 -1
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %33, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %34) #18
  %35 = icmp eq %"class.base::OnceCallback"* %33, %28
  br i1 %35, label %54, label %31

36:                                               ; preds = %36, %20
  %37 = phi %"class.base::OnceCallback"* [ %19, %20 ], [ %53, %36 ]
  %38 = phi i64 [ 0, %20 ], [ %47, %36 ]
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %37, i64 %38
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback"* %39 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  %43 = inttoptr i64 %42 to %"class.base::internal::BindStateBase"*
  %44 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %43, i64 0, i32 1
  %45 = bitcast void ()** %44 to void (%"class.base::internal::BindStateBase"*)**
  %46 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %45, align 8
  call void %46(%"class.base::internal::BindStateBase"* %43) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  %47 = add nuw i64 %38, 1
  %48 = load i64, i64* %14, align 8
  %49 = load i64, i64* %16, align 8
  %50 = sub i64 %48, %49
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %47, %51
  %53 = inttoptr i64 %49 to %"class.base::OnceCallback"*
  br i1 %52, label %36, label %24

54:                                               ; preds = %31, %26
  store %"class.base::OnceCallback"* %28, %"class.base::OnceCallback"** %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager21ProcessPendingQueriesEb(%"class.gpu::QueryManager"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  br i1 %9, label %38, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 0, i32 1
  br label %12

12:                                               ; preds = %10, %24
  %13 = phi i64 [ %6, %10 ], [ %35, %24 ]
  %14 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %4, i64 %13) #18
  %15 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %14, i64 0, i32 0
  %16 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %15, align 8
  %17 = bitcast %"class.gpu::QueryManager::Query"* %16 to void (%"class.gpu::QueryManager::Query"*, i1)***
  %18 = load void (%"class.gpu::QueryManager::Query"*, i1)**, void (%"class.gpu::QueryManager::Query"*, i1)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*, i1)*, void (%"class.gpu::QueryManager::Query"*, i1)** %18, i64 3
  %20 = load void (%"class.gpu::QueryManager::Query"*, i1)*, void (%"class.gpu::QueryManager::Query"*, i1)** %19, align 8
  tail call void %20(%"class.gpu::QueryManager::Query"* %16, i1 zeroext %1) #18
  %21 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %16, i64 0, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %38, label %24

24:                                               ; preds = %12
  %25 = load i64, i64* %5, align 8
  %26 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %4, i64 %25) #18
  %27 = load i64, i64* %5, align 8
  %28 = add i64 %27, 1
  %29 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %4, i64 %28) #18
  tail call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeIS6_Li0EEEvPS6_S9_(%"class.base::internal::VectorBuffer"* %4, %class.scoped_refptr* %26, %class.scoped_refptr* %29) #18
  %30 = load i64, i64* %5, align 8
  %31 = add i64 %30, 1
  %32 = load i64, i64* %11, align 8
  %33 = icmp eq i64 %31, %32
  %34 = select i1 %33, i64 0, i64 %31
  store i64 %34, i64* %5, align 8
  tail call void @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %3) #18
  %35 = load i64, i64* %5, align 8
  %36 = load i64, i64* %7, align 8
  %37 = icmp eq i64 %35, %36
  br i1 %37, label %38, label %12

38:                                               ; preds = %24, %12, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3gpu12QueryManager18HavePendingQueriesEv(%"class.gpu::QueryManager"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp ne i64 %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager15AddPendingQueryEPNS0_5QueryEi(%"class.gpu::QueryManager"*, %"class.gpu::QueryManager::Query"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu12QueryManager18RemovePendingQueryEPNS0_5QueryE(%"class.gpu::QueryManager"* %0, %"class.gpu::QueryManager::Query"* %1)
  %4 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 7
  store i32 3, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 6
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6
  %7 = ptrtoint %"class.gpu::QueryManager::Query"* %1 to i64
  %8 = icmp eq %"class.gpu::QueryManager::Query"* %1, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #18
  br label %11

11:                                               ; preds = %3, %9
  tail call void @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %6, i64 1) #18
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %6, i64 0, i32 0
  %13 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %12, i64 %14) #18
  %16 = bitcast %class.scoped_refptr* %15 to i64*
  store i64 %7, i64* %16, align 8
  %17 = load i64, i64* %13, align 8
  %18 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 6, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, -1
  %21 = icmp eq i64 %17, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %11
  store i64 0, i64* %13, align 8
  br label %26

23:                                               ; preds = %11
  %24 = add i64 %17, 1
  store i64 %24, i64* %13, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23, %22
  br label %27

27:                                               ; preds = %26, %23
  %28 = phi i64 [ %20, %26 ], [ %17, %23 ]
  %29 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %12, i64 %28) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager10BeginQueryEPNS0_5QueryE(%"class.gpu::QueryManager"*, %"class.gpu::QueryManager::Query"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu12QueryManager18RemovePendingQueryEPNS0_5QueryE(%"class.gpu::QueryManager"* %0, %"class.gpu::QueryManager::Query"* %1)
  %3 = bitcast %"class.gpu::QueryManager::Query"* %1 to void (%"class.gpu::QueryManager::Query"*)***
  %4 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %3, align 8
  %5 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %4, align 8
  tail call void %5(%"class.gpu::QueryManager::Query"* %1) #18
  %6 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  %11 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node"* %11, null
  br i1 %12, label %41, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %37, %13
  %16 = phi %"class.std::__1::__tree_node"* [ %40, %37 ], [ %11, %13 ]
  %17 = phi %"class.std::__1::__tree_node_base"** [ %39, %37 ], [ %14, %13 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 1, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp ult i32 %8, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  br label %43

27:                                               ; preds = %15
  %28 = icmp ult i32 %19, %8
  br i1 %28, label %29, label %35

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 1
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  br label %43

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  br label %43

37:                                               ; preds = %29, %21
  %38 = phi %"class.std::__1::__tree_node_base"* [ %23, %21 ], [ %31, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %22, %21 ], [ %30, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"* %38 to %"class.std::__1::__tree_node"*
  br label %15

41:                                               ; preds = %2
  %42 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  br label %43

43:                                               ; preds = %41, %35, %33, %25
  %44 = phi %"class.std::__1::__tree_end_node"* [ %9, %41 ], [ %26, %25 ], [ %34, %33 ], [ %36, %35 ]
  %45 = phi %"class.std::__1::__tree_node_base"** [ %42, %41 ], [ %22, %25 ], [ %30, %33 ], [ %17, %35 ]
  %46 = bitcast %"class.std::__1::__tree_node_base"** %45 to %"class.std::__1::__tree_node"**
  %47 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %46, align 8
  %48 = icmp eq %"class.std::__1::__tree_node"* %47, null
  br i1 %48, label %49, label %76

49:                                               ; preds = %43
  %50 = tail call i8* @_Znwm(i64 48) #19, !noalias !4
  %51 = getelementptr inbounds i8, i8* %50, i64 32
  %52 = bitcast i8* %51 to i32*
  store i32 %8, i32* %52, align 8, !noalias !4
  %53 = getelementptr inbounds i8, i8* %50, i64 40
  %54 = bitcast i8* %53 to %"class.gpu::QueryManager::Query"**
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %54, align 8, !noalias !4
  %55 = bitcast i8* %50 to %"class.std::__1::__tree_node"*
  %56 = bitcast i8* %50 to %"class.std::__1::__tree_node_base"*
  %57 = getelementptr inbounds i8, i8* %50, i64 16
  %58 = bitcast i8* %57 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 16, i1 false) #18
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %58, align 8
  %59 = bitcast %"class.std::__1::__tree_node_base"** %45 to i8**
  store i8* %50, i8** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %49
  %66 = ptrtoint %"class.std::__1::__tree_node_base"* %63 to i64
  %67 = bitcast %"class.std::__1::map"* %6 to i64*
  store i64 %66, i64* %67, align 8
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  br label %69

69:                                               ; preds = %65, %49
  %70 = phi %"class.std::__1::__tree_node_base"* [ %56, %49 ], [ %68, %65 ]
  %71 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %72, %"class.std::__1::__tree_node_base"* %70) #18
  %73 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 1
  store i64 %75, i64* %73, align 8
  br label %76

76:                                               ; preds = %43, %69
  %77 = phi %"class.std::__1::__tree_node"* [ %55, %69 ], [ %47, %43 ]
  %78 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %77, i64 0, i32 1, i32 0, i32 1
  %79 = icmp eq %"class.gpu::QueryManager::Query"* %1, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %81) #18
  br label %82

82:                                               ; preds = %80, %76
  %83 = ptrtoint %"class.gpu::QueryManager::Query"* %1 to i64
  %84 = bitcast %class.scoped_refptr* %78 to i64*
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %78, i64 0, i32 0
  %86 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %85, align 8
  store i64 %83, i64* %84, align 8
  %87 = icmp eq %"class.gpu::QueryManager::Query"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %86, i64 0, i32 1
  %90 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %89, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %90) #18
  %91 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %89, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %101

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %89, i64 -2
  %96 = bitcast %"class.base::RefCounted"* %95 to %"class.gpu::QueryManager::Query"*
  %97 = bitcast %"class.base::RefCounted"* %95 to void (%"class.gpu::QueryManager::Query"*)***
  %98 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %98, i64 10
  %100 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %99, align 8
  tail call void %100(%"class.gpu::QueryManager::Query"* nonnull %96) #18
  br label %101

101:                                              ; preds = %82, %88, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager8EndQueryEPNS0_5QueryEi(%"class.gpu::QueryManager"*, %"class.gpu::QueryManager::Query"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu12QueryManager18RemovePendingQueryEPNS0_5QueryE(%"class.gpu::QueryManager"* %0, %"class.gpu::QueryManager::Query"* %1)
  %4 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %31, label %10

10:                                               ; preds = %3, %10
  %11 = phi %"class.std::__1::__tree_end_node"* [ %21, %10 ], [ %6, %3 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %22, %10 ], [ %8, %3 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %14, %5
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %6
  br i1 %25, label %31, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = icmp ult i32 %5, %29
  br i1 %30, label %31, label %32

31:                                               ; preds = %26, %24, %3
  br label %32

32:                                               ; preds = %26, %31
  %33 = phi %"class.std::__1::__tree_end_node"* [ %6, %31 ], [ %21, %26 ]
  %34 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0
  %35 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE5eraseENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEE(%"class.std::__1::__tree"* %34, %"class.std::__1::__tree_end_node"* %33) #18
  %36 = bitcast %"class.gpu::QueryManager::Query"* %1 to void (%"class.gpu::QueryManager::Query"*, i32)***
  %37 = load void (%"class.gpu::QueryManager::Query"*, i32)**, void (%"class.gpu::QueryManager::Query"*, i32)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*, i32)*, void (%"class.gpu::QueryManager::Query"*, i32)** %37, i64 1
  %39 = load void (%"class.gpu::QueryManager::Query"*, i32)*, void (%"class.gpu::QueryManager::Query"*, i32)** %38, align 8
  tail call void %39(%"class.gpu::QueryManager::Query"* %1, i32 %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager12QueryCounterEPNS0_5QueryEi(%"class.gpu::QueryManager"*, %"class.gpu::QueryManager::Query"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu12QueryManager18RemovePendingQueryEPNS0_5QueryE(%"class.gpu::QueryManager"* %0, %"class.gpu::QueryManager::Query"* %1)
  %4 = bitcast %"class.gpu::QueryManager::Query"* %1 to void (%"class.gpu::QueryManager::Query"*, i32)***
  %5 = load void (%"class.gpu::QueryManager::Query"*, i32)**, void (%"class.gpu::QueryManager::Query"*, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*, i32)*, void (%"class.gpu::QueryManager::Query"*, i32)** %5, i64 2
  %7 = load void (%"class.gpu::QueryManager::Query"*, i32)*, void (%"class.gpu::QueryManager::Query"*, i32)** %6, align 8
  tail call void %7(%"class.gpu::QueryManager::Query"* %1, i32 %2) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager12PauseQueriesEv(%"class.gpu::QueryManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %48, %1
  ret void

7:                                                ; preds = %1, %48
  %8 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 5
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.gpu::QueryManager::Query"**
  %11 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %10, align 8
  %12 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %11, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %20

15:                                               ; preds = %7
  %16 = bitcast %"class.gpu::QueryManager::Query"* %11 to void (%"class.gpu::QueryManager::Query"*)***
  %17 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %17, i64 4
  %19 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %18, align 8
  tail call void %19(%"class.gpu::QueryManager::Query"* %11) #18
  br label %20

20:                                               ; preds = %15, %7
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node_base"* %22, null
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_end_node"**
  %28 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %25
  br i1 %31, label %48, label %39

32:                                               ; preds = %20, %32
  %33 = phi %"class.std::__1::__tree_node_base"* [ %35, %32 ], [ %22, %20 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %32

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 0
  br label %48

39:                                               ; preds = %24, %39
  %40 = phi %"class.std::__1::__tree_end_node"** [ %43, %39 ], [ %27, %24 ]
  %41 = bitcast %"class.std::__1::__tree_end_node"** %40 to %"class.std::__1::__tree_node_base"**
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 0, i32 2
  %44 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, %42
  br i1 %47, label %48, label %39

48:                                               ; preds = %39, %24, %37
  %49 = phi %"class.std::__1::__tree_end_node"* [ %38, %37 ], [ %28, %24 ], [ %44, %39 ]
  %50 = icmp eq %"class.std::__1::__tree_end_node"* %49, %4
  br i1 %50, label %6, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager13ResumeQueriesEv(%"class.gpu::QueryManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %48, %1
  ret void

7:                                                ; preds = %1, %48
  %8 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 5
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.gpu::QueryManager::Query"**
  %11 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %10, align 8
  %12 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %11, i64 0, i32 7
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %20

15:                                               ; preds = %7
  %16 = bitcast %"class.gpu::QueryManager::Query"* %11 to void (%"class.gpu::QueryManager::Query"*)***
  %17 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %17, i64 5
  %19 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %18, align 8
  tail call void %19(%"class.gpu::QueryManager::Query"* %11) #18
  br label %20

20:                                               ; preds = %15, %7
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node_base"* %22, null
  br i1 %23, label %24, label %32

24:                                               ; preds = %20
  %25 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_end_node"**
  %28 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, %25
  br i1 %31, label %48, label %39

32:                                               ; preds = %20, %32
  %33 = phi %"class.std::__1::__tree_node_base"* [ %35, %32 ], [ %22, %20 ]
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %32

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %33, i64 0, i32 0
  br label %48

39:                                               ; preds = %24, %39
  %40 = phi %"class.std::__1::__tree_end_node"** [ %43, %39 ], [ %27, %24 ]
  %41 = bitcast %"class.std::__1::__tree_end_node"** %40 to %"class.std::__1::__tree_node_base"**
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %42, i64 0, i32 2
  %44 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %44, i64 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, %42
  br i1 %47, label %48, label %39

48:                                               ; preds = %39, %24, %37
  %49 = phi %"class.std::__1::__tree_end_node"* [ %38, %37 ], [ %28, %24 ], [ %44, %39 ]
  %50 = icmp eq %"class.std::__1::__tree_end_node"* %49, %4
  br i1 %50, label %6, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager23BeginProcessingCommandsEv(%"class.gpu::QueryManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %43, %1
  ret void

7:                                                ; preds = %1, %43
  %8 = phi %"class.std::__1::__tree_end_node"* [ %44, %43 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 5
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.gpu::QueryManager::Query"**
  %11 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %10, align 8
  %12 = bitcast %"class.gpu::QueryManager::Query"* %11 to void (%"class.gpu::QueryManager::Query"*)***
  %13 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %13, i64 7
  %15 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %14, align 8
  tail call void %15(%"class.gpu::QueryManager::Query"* %11) #18
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %27

19:                                               ; preds = %7
  %20 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_end_node"**
  %23 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, %20
  br i1 %26, label %43, label %34

27:                                               ; preds = %7, %27
  %28 = phi %"class.std::__1::__tree_node_base"* [ %30, %27 ], [ %17, %7 ]
  %29 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %27

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %28, i64 0, i32 0
  br label %43

34:                                               ; preds = %19, %34
  %35 = phi %"class.std::__1::__tree_end_node"** [ %38, %34 ], [ %22, %19 ]
  %36 = bitcast %"class.std::__1::__tree_end_node"** %35 to %"class.std::__1::__tree_node_base"**
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 2
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, %37
  br i1 %42, label %43, label %34

43:                                               ; preds = %34, %19, %32
  %44 = phi %"class.std::__1::__tree_end_node"* [ %33, %32 ], [ %23, %19 ], [ %39, %34 ]
  %45 = icmp eq %"class.std::__1::__tree_end_node"* %44, %4
  br i1 %45, label %6, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager21EndProcessingCommandsEv(%"class.gpu::QueryManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %43, %1
  ret void

7:                                                ; preds = %1, %43
  %8 = phi %"class.std::__1::__tree_end_node"* [ %44, %43 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 5
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.gpu::QueryManager::Query"**
  %11 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %10, align 8
  %12 = bitcast %"class.gpu::QueryManager::Query"* %11 to void (%"class.gpu::QueryManager::Query"*)***
  %13 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %13, i64 8
  %15 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %14, align 8
  tail call void %15(%"class.gpu::QueryManager::Query"* %11) #18
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %27

19:                                               ; preds = %7
  %20 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %21 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %22 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_end_node"**
  %23 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, %20
  br i1 %26, label %43, label %34

27:                                               ; preds = %7, %27
  %28 = phi %"class.std::__1::__tree_node_base"* [ %30, %27 ], [ %17, %7 ]
  %29 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %27

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %28, i64 0, i32 0
  br label %43

34:                                               ; preds = %19, %34
  %35 = phi %"class.std::__1::__tree_end_node"** [ %38, %34 ], [ %22, %19 ]
  %36 = bitcast %"class.std::__1::__tree_end_node"** %35 to %"class.std::__1::__tree_node_base"**
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 2
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, %37
  br i1 %42, label %43, label %34

43:                                               ; preds = %34, %19, %32
  %44 = phi %"class.std::__1::__tree_end_node"* [ %33, %32 ], [ %23, %19 ], [ %39, %34 ]
  %45 = icmp eq %"class.std::__1::__tree_end_node"* %44, %4
  br i1 %45, label %6, label %7
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu12QueryManager5Query23BeginProcessingCommandsEv(%"class.gpu::QueryManager::Query"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu12QueryManager5Query21EndProcessingCommandsEv(%"class.gpu::QueryManager::Query"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery5BeginEv(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  %3 = bitcast %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0 to void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)***
  %4 = load void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)**, void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)*, void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)** %4, i64 7
  %6 = load void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)*, void (%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*)** %5, align 8
  tail call void %6(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery3EndEi(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 2, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  %12 = load i64, i64* %7, align 8
  %13 = sub nsw i64 %11, %12
  %14 = add i64 %13, -9223372036854775807
  %15 = icmp ult i64 %14, 2
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = icmp slt i64 %13, 0
  %18 = select i1 %17, i64 -9223372036854775808, i64 9223372036854775807
  %19 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %6, i64 %13) #18
  %20 = extractvalue { i64, i1 } %19, 1
  %21 = extractvalue { i64, i1 } %19, 0
  %22 = select i1 %20, i64 %18, i64 %21, !prof !7
  br label %31

23:                                               ; preds = %10
  %24 = add i64 %6, -9223372036854775807
  %25 = icmp ugt i64 %24, 1
  %26 = icmp eq i64 %6, %13
  %27 = or i1 %25, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #18
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #18
  br label %31

31:                                               ; preds = %2, %28, %23, %16
  %32 = phi i64 [ %6, %2 ], [ %22, %16 ], [ %13, %23 ], [ %13, %28 ]
  %33 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 0, i32 7
  %34 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 0, i32 6
  store i32 %1, i32* %34, align 8
  store i32 4, i32* %33, align 4
  %35 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 0, i32 5
  %36 = load %"struct.gpu::QuerySync"*, %"struct.gpu::QuerySync"** %35, align 8
  %37 = getelementptr inbounds %"struct.gpu::QuerySync", %"struct.gpu::QuerySync"* %36, i64 0, i32 1
  store i64 %32, i64* %37, align 4
  %38 = load %"struct.gpu::QuerySync"*, %"struct.gpu::QuerySync"** %35, align 8
  %39 = getelementptr inbounds %"struct.gpu::QuerySync", %"struct.gpu::QuerySync"* %38, i64 0, i32 0
  %40 = load i32, i32* %34, align 8
  store atomic volatile i32 %40, i32* %39 release, align 4
  %41 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 0, i32 9
  %42 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 0, i32 9, i32 0, i32 1
  %43 = bitcast %"class.base::OnceCallback"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %44, %46
  %48 = inttoptr i64 %46 to %"class.base::OnceCallback"*
  br i1 %47, label %55, label %49

49:                                               ; preds = %31
  %50 = bitcast %"class.base::OnceCallback"* %4 to i8*
  %51 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %52 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  br label %65

53:                                               ; preds = %65
  %54 = inttoptr i64 %78 to %"class.base::OnceCallback"*
  br label %55

55:                                               ; preds = %53, %31
  %56 = phi i64 [ %44, %31 ], [ %77, %53 ]
  %57 = phi %"class.base::OnceCallback"* [ %48, %31 ], [ %54, %53 ]
  %58 = inttoptr i64 %56 to %"class.base::OnceCallback"*
  %59 = icmp eq %"class.base::OnceCallback"* %57, %58
  br i1 %59, label %83, label %60

60:                                               ; preds = %55, %60
  %61 = phi %"class.base::OnceCallback"* [ %62, %60 ], [ %58, %55 ]
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %61, i64 -1
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %62, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %63) #18
  %64 = icmp eq %"class.base::OnceCallback"* %62, %57
  br i1 %64, label %83, label %60

65:                                               ; preds = %65, %49
  %66 = phi %"class.base::OnceCallback"* [ %48, %49 ], [ %82, %65 ]
  %67 = phi i64 [ 0, %49 ], [ %76, %65 ]
  %68 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %66, i64 %67
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #18
  %69 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.base::OnceCallback"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %51, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %69, align 8
  %72 = inttoptr i64 %71 to %"class.base::internal::BindStateBase"*
  %73 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %72, i64 0, i32 1
  %74 = bitcast void ()** %73 to void (%"class.base::internal::BindStateBase"*)**
  %75 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %74, align 8
  call void %75(%"class.base::internal::BindStateBase"* %72) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %52) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #18
  %76 = add nuw i64 %67, 1
  %77 = load i64, i64* %43, align 8
  %78 = load i64, i64* %45, align 8
  %79 = sub i64 %77, %78
  %80 = ashr exact i64 %79, 3
  %81 = icmp ult i64 %76, %80
  %82 = inttoptr i64 %78 to %"class.base::OnceCallback"*
  br i1 %81, label %65, label %53

83:                                               ; preds = %60, %55
  store %"class.base::OnceCallback"* %57, %"class.base::OnceCallback"** %42, align 8
  %84 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 1
  store i32 0, i32* %84, align 8
  %85 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 16, i1 false) #18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery12QueryCounterEi(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* nocapture, i32) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery7ProcessEb(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* nocapture, i1 zeroext) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery5PauseEv(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* nocapture) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 0, i32 7
  store i32 2, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery6ResumeEv(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* nocapture) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery7DestroyEb(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* nocapture, i1 zeroext) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 0, i32 8
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i8 1, i8* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery23BeginProcessingCommandsEv(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 1
  store i32 1, i32* %2, align 8
  %3 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  %4 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 3, i32 0, i32 0
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQuery21EndProcessingCommandsEv(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %32, label %6

6:                                                ; preds = %1
  store i32 2, i32* %3, align 8
  %7 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  %8 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = sub nsw i64 %7, %9
  %11 = add i64 %10, -9223372036854775807
  %12 = icmp ult i64 %11, 2
  %13 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 2, i32 0
  %14 = load i64, i64* %13, align 8
  br i1 %12, label %22, label %15

15:                                               ; preds = %6
  %16 = icmp slt i64 %10, 0
  %17 = select i1 %16, i64 -9223372036854775808, i64 9223372036854775807
  %18 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %14, i64 %10) #18
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 %17, i64 %20, !prof !7
  br label %30

22:                                               ; preds = %6
  %23 = add i64 %14, -9223372036854775807
  %24 = icmp ugt i64 %23, 1
  %25 = icmp eq i64 %14, %10
  %26 = or i1 %25, %24
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #18
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #18
  br label %30

30:                                               ; preds = %15, %22, %27
  %31 = phi i64 [ %21, %15 ], [ %10, %22 ], [ %10, %27 ]
  store i64 %31, i64* %13, align 8
  store i64 0, i64* %8, align 8
  br label %32

32:                                               ; preds = %1, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu12QueryManager5QueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 9
  %5 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 9, i32 0, i32 1
  %6 = bitcast %"class.base::OnceCallback"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  %11 = inttoptr i64 %9 to %"class.base::OnceCallback"*
  br i1 %10, label %18, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.base::OnceCallback"* %2 to i8*
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  br label %28

16:                                               ; preds = %28
  %17 = inttoptr i64 %41 to %"class.base::OnceCallback"*
  br label %18

18:                                               ; preds = %16, %1
  %19 = phi i64 [ %7, %1 ], [ %40, %16 ]
  %20 = phi %"class.base::OnceCallback"* [ %11, %1 ], [ %17, %16 ]
  %21 = inttoptr i64 %19 to %"class.base::OnceCallback"*
  %22 = icmp eq %"class.base::OnceCallback"* %20, %21
  br i1 %22, label %46, label %23

23:                                               ; preds = %18, %23
  %24 = phi %"class.base::OnceCallback"* [ %25, %23 ], [ %21, %18 ]
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %24, i64 -1
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %25, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %26) #18
  %27 = icmp eq %"class.base::OnceCallback"* %25, %20
  br i1 %27, label %46, label %23

28:                                               ; preds = %28, %12
  %29 = phi %"class.base::OnceCallback"* [ %11, %12 ], [ %45, %28 ]
  %30 = phi i64 [ 0, %12 ], [ %39, %28 ]
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %29, i64 %30
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #18
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.base::OnceCallback"* %31 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8
  %35 = inttoptr i64 %34 to %"class.base::internal::BindStateBase"*
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %37 = bitcast void ()** %36 to void (%"class.base::internal::BindStateBase"*)**
  %38 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %37, align 8
  call void %38(%"class.base::internal::BindStateBase"* %35) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #18
  %39 = add nuw i64 %30, 1
  %40 = load i64, i64* %6, align 8
  %41 = load i64, i64* %8, align 8
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 3
  %44 = icmp ult i64 %39, %43
  %45 = inttoptr i64 %41 to %"class.base::OnceCallback"*
  br i1 %44, label %28, label %16

46:                                               ; preds = %23, %18
  store %"class.base::OnceCallback"* %20, %"class.base::OnceCallback"** %5, align 8
  %47 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 2
  %48 = load %"class.gpu::QueryManager"*, %"class.gpu::QueryManager"** %47, align 8
  %49 = icmp eq %"class.gpu::QueryManager"* %48, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.gpu::QueryManager", %"class.gpu::QueryManager"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = add i32 %52, -1
  store i32 %53, i32* %51, align 8
  store %"class.gpu::QueryManager"* null, %"class.gpu::QueryManager"** %47, align 8
  br label %54

54:                                               ; preds = %46, %50
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %56 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %55, align 8
  %57 = icmp eq %"class.base::OnceCallback"* %56, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.base::OnceCallback"* %56 to i8*
  %60 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %5, align 8
  %61 = icmp eq %"class.base::OnceCallback"* %60, %56
  br i1 %61, label %70, label %62

62:                                               ; preds = %58, %62
  %63 = phi %"class.base::OnceCallback"* [ %64, %62 ], [ %60, %58 ]
  %64 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %63, i64 -1
  %65 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %64, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %65) #18
  %66 = icmp eq %"class.base::OnceCallback"* %64, %56
  br i1 %66, label %67, label %62

67:                                               ; preds = %62
  %68 = bitcast %"class.std::__1::vector"* %4 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %58
  %71 = phi i8* [ %69, %67 ], [ %59, %58 ]
  store %"class.base::OnceCallback"* %56, %"class.base::OnceCallback"** %5, align 8
  call void @_ZdlPv(i8* %71) #19
  br label %72

72:                                               ; preds = %54, %70
  %73 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %0, i64 0, i32 4, i32 0
  %74 = load %"class.gpu::Buffer"*, %"class.gpu::Buffer"** %73, align 8
  %75 = icmp eq %"class.gpu::Buffer"* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.gpu::Buffer", %"class.gpu::Buffer"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw sub i32* %77, i32 1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  call void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"* nonnull %74) #18
  %81 = bitcast %"class.gpu::Buffer"* %74 to i8*
  call void @_ZdlPv(i8* %81) #19
  br label %82

82:                                               ; preds = %72, %76, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_119CommandsIssuedQueryD0Ev(%"class.gpu::(anonymous namespace)::CommandsIssuedQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %2) #18
  %3 = bitcast %"class.gpu::(anonymous namespace)::CommandsIssuedQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #13

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery5BeginEv(%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* nocapture) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery3EndEi(%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* nocapture, i32) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery12QueryCounterEi(%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  %5 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* %0, i64 0, i32 0, i32 7
  %6 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* %0, i64 0, i32 0, i32 6
  store i32 %1, i32* %6, align 8
  store i32 4, i32* %5, align 4
  %7 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* %0, i64 0, i32 0, i32 5
  %8 = load %"struct.gpu::QuerySync"*, %"struct.gpu::QuerySync"** %7, align 8
  %9 = getelementptr inbounds %"struct.gpu::QuerySync", %"struct.gpu::QuerySync"* %8, i64 0, i32 1
  store i64 %4, i64* %9, align 4
  %10 = load %"struct.gpu::QuerySync"*, %"struct.gpu::QuerySync"** %7, align 8
  %11 = getelementptr inbounds %"struct.gpu::QuerySync", %"struct.gpu::QuerySync"* %10, i64 0, i32 0
  %12 = load i32, i32* %6, align 8
  store atomic volatile i32 %12, i32* %11 release, align 4
  %13 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* %0, i64 0, i32 0, i32 9
  %14 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* %0, i64 0, i32 0, i32 9, i32 0, i32 1
  %15 = bitcast %"class.base::OnceCallback"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  %20 = inttoptr i64 %18 to %"class.base::OnceCallback"*
  br i1 %19, label %27, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.base::OnceCallback"* %3 to i8*
  %23 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  br label %37

25:                                               ; preds = %37
  %26 = inttoptr i64 %50 to %"class.base::OnceCallback"*
  br label %27

27:                                               ; preds = %25, %2
  %28 = phi i64 [ %16, %2 ], [ %49, %25 ]
  %29 = phi %"class.base::OnceCallback"* [ %20, %2 ], [ %26, %25 ]
  %30 = inttoptr i64 %28 to %"class.base::OnceCallback"*
  %31 = icmp eq %"class.base::OnceCallback"* %29, %30
  br i1 %31, label %55, label %32

32:                                               ; preds = %27, %32
  %33 = phi %"class.base::OnceCallback"* [ %34, %32 ], [ %30, %27 ]
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %33, i64 -1
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %34, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %35) #18
  %36 = icmp eq %"class.base::OnceCallback"* %34, %29
  br i1 %36, label %55, label %32

37:                                               ; preds = %37, %21
  %38 = phi %"class.base::OnceCallback"* [ %20, %21 ], [ %54, %37 ]
  %39 = phi i64 [ 0, %21 ], [ %48, %37 ]
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %38, i64 %39
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #18
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.base::OnceCallback"* %40 to i64*
  %43 = load i64, i64* %42, align 8
  store i64 %43, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  %44 = inttoptr i64 %43 to %"class.base::internal::BindStateBase"*
  %45 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %44, i64 0, i32 1
  %46 = bitcast void ()** %45 to void (%"class.base::internal::BindStateBase"*)**
  %47 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %46, align 8
  call void %47(%"class.base::internal::BindStateBase"* %44) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #18
  %48 = add nuw i64 %39, 1
  %49 = load i64, i64* %15, align 8
  %50 = load i64, i64* %17, align 8
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 3
  %53 = icmp ult i64 %48, %52
  %54 = inttoptr i64 %50 to %"class.base::OnceCallback"*
  br i1 %53, label %37, label %25

55:                                               ; preds = %32, %27
  store %"class.base::OnceCallback"* %29, %"class.base::OnceCallback"** %14, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery7ProcessEb(%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* nocapture, i1 zeroext) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery5PauseEv(%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* nocapture) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* %0, i64 0, i32 0, i32 7
  store i32 2, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery6ResumeEv(%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* nocapture) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* %0, i64 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQuery7DestroyEb(%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* nocapture, i1 zeroext) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* %0, i64 0, i32 0, i32 8
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i8 1, i8* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_128CommandsIssuedTimestampQueryD0Ev(%"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery", %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %2) #18
  %3 = bitcast %"class.gpu::(anonymous namespace)::CommandsIssuedTimestampQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery5BeginEv(%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  %3 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  %4 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery3EndEi(%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.60"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.gl::GLFence"*, %"class.gl::GLFence"** %4, align 8
  %6 = icmp eq %"class.gl::GLFence"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.gl::GLFence"* %5 to i1 (%"class.gl::GLFence"*)***
  %9 = load i1 (%"class.gl::GLFence"*)**, i1 (%"class.gl::GLFence"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.gl::GLFence"*)*, i1 (%"class.gl::GLFence"*)** %9, i64 5
  %11 = load i1 (%"class.gl::GLFence"*)*, i1 (%"class.gl::GLFence"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.gl::GLFence"* nonnull %5) #18
  br i1 %12, label %13, label %19

13:                                               ; preds = %7
  %14 = load %"class.gl::GLFence"*, %"class.gl::GLFence"** %4, align 8
  %15 = bitcast %"class.gl::GLFence"* %14 to void (%"class.gl::GLFence"*)***
  %16 = load void (%"class.gl::GLFence"*)**, void (%"class.gl::GLFence"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %16, i64 6
  %18 = load void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %17, align 8
  tail call void %18(%"class.gl::GLFence"* %14) #18
  br label %30

19:                                               ; preds = %2, %7
  %20 = tail call %"class.gl::GLFence"* @_ZN2gl7GLFence6CreateEv() #18
  %21 = ptrtoint %"class.gl::GLFence"* %20 to i64
  %22 = load %"class.gl::GLFence"*, %"class.gl::GLFence"** %4, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.60"* %3 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %"class.gl::GLFence"* %22, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.gl::GLFence"* %22 to void (%"class.gl::GLFence"*)***
  %27 = load void (%"class.gl::GLFence"*)**, void (%"class.gl::GLFence"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %27, i64 1
  %29 = load void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %28, align 8
  tail call void %29(%"class.gl::GLFence"* nonnull %22) #18
  br label %30

30:                                               ; preds = %19, %25, %13
  %31 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 2
  %33 = load %"class.gpu::QueryManager"*, %"class.gpu::QueryManager"** %32, align 8
  tail call void @_ZN3gpu12QueryManager15AddPendingQueryEPNS0_5QueryEi(%"class.gpu::QueryManager"* %33, %"class.gpu::QueryManager::Query"* %31, i32 %1) #18
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery12QueryCounterEi(%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* nocapture, i32) unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery7ProcessEb(%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  br i1 %1, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.gl::GLFence"*, %"class.gl::GLFence"** %5, align 8
  %7 = icmp eq %"class.gl::GLFence"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = bitcast %"class.gl::GLFence"* %6 to i1 (%"class.gl::GLFence"*)***
  %10 = load i1 (%"class.gl::GLFence"*)**, i1 (%"class.gl::GLFence"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.gl::GLFence"*)*, i1 (%"class.gl::GLFence"*)** %10, i64 2
  %12 = load i1 (%"class.gl::GLFence"*)*, i1 (%"class.gl::GLFence"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.gl::GLFence"* nonnull %6) #18
  br i1 %13, label %14, label %70

14:                                               ; preds = %4, %8, %2
  %15 = tail call i64 @_ZN4base9TimeTicks3NowEv() #18
  %16 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = sub nsw i64 %15, %17
  %19 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 7
  store i32 4, i32* %19, align 4
  %20 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 5
  %21 = load %"struct.gpu::QuerySync"*, %"struct.gpu::QuerySync"** %20, align 8
  %22 = getelementptr inbounds %"struct.gpu::QuerySync", %"struct.gpu::QuerySync"* %21, i64 0, i32 1
  store i64 %18, i64* %22, align 4
  %23 = load %"struct.gpu::QuerySync"*, %"struct.gpu::QuerySync"** %20, align 8
  %24 = getelementptr inbounds %"struct.gpu::QuerySync", %"struct.gpu::QuerySync"* %23, i64 0, i32 0
  %25 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 6
  %26 = load i32, i32* %25, align 8
  store atomic volatile i32 %26, i32* %24 release, align 4
  %27 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 9
  %28 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 9, i32 0, i32 1
  %29 = bitcast %"class.base::OnceCallback"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %30, %32
  %34 = inttoptr i64 %32 to %"class.base::OnceCallback"*
  br i1 %33, label %41, label %35

35:                                               ; preds = %14
  %36 = bitcast %"class.base::OnceCallback"* %3 to i8*
  %37 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  br label %51

39:                                               ; preds = %51
  %40 = inttoptr i64 %64 to %"class.base::OnceCallback"*
  br label %41

41:                                               ; preds = %39, %14
  %42 = phi i64 [ %30, %14 ], [ %63, %39 ]
  %43 = phi %"class.base::OnceCallback"* [ %34, %14 ], [ %40, %39 ]
  %44 = inttoptr i64 %42 to %"class.base::OnceCallback"*
  %45 = icmp eq %"class.base::OnceCallback"* %43, %44
  br i1 %45, label %69, label %46

46:                                               ; preds = %41, %46
  %47 = phi %"class.base::OnceCallback"* [ %48, %46 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %47, i64 -1
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %48, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %49) #18
  %50 = icmp eq %"class.base::OnceCallback"* %48, %43
  br i1 %50, label %69, label %46

51:                                               ; preds = %51, %35
  %52 = phi %"class.base::OnceCallback"* [ %34, %35 ], [ %68, %51 ]
  %53 = phi i64 [ 0, %35 ], [ %62, %51 ]
  %54 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %52, i64 %53
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #18
  %55 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.base::OnceCallback"* %54 to i64*
  %57 = load i64, i64* %56, align 8
  store i64 %57, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8
  %58 = inttoptr i64 %57 to %"class.base::internal::BindStateBase"*
  %59 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %58, i64 0, i32 1
  %60 = bitcast void ()** %59 to void (%"class.base::internal::BindStateBase"*)**
  %61 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %60, align 8
  call void %61(%"class.base::internal::BindStateBase"* %58) #18
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #18
  %62 = add nuw i64 %53, 1
  %63 = load i64, i64* %29, align 8
  %64 = load i64, i64* %31, align 8
  %65 = sub i64 %63, %64
  %66 = ashr exact i64 %65, 3
  %67 = icmp ult i64 %62, %66
  %68 = inttoptr i64 %64 to %"class.base::OnceCallback"*
  br i1 %67, label %51, label %39

69:                                               ; preds = %46, %41
  store %"class.base::OnceCallback"* %43, %"class.base::OnceCallback"** %28, align 8
  br label %70

70:                                               ; preds = %8, %69
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery5PauseEv(%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* nocapture) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 7
  store i32 2, i32* %2, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery6ResumeEv(%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* nocapture) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 7
  store i32 1, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQuery7DestroyEb(%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  br i1 %1, label %3, label %17

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 8
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %26

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.gl::GLFence"*, %"class.gl::GLFence"** %8, align 8
  store %"class.gl::GLFence"* null, %"class.gl::GLFence"** %8, align 8
  %10 = icmp eq %"class.gl::GLFence"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.gl::GLFence"* %9 to void (%"class.gl::GLFence"*)***
  %13 = load void (%"class.gl::GLFence"*)**, void (%"class.gl::GLFence"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %13, i64 1
  %15 = load void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %14, align 8
  tail call void %15(%"class.gl::GLFence"* nonnull %9) #18
  br label %16

16:                                               ; preds = %7, %11
  store i8 1, i8* %4, align 8
  br label %26

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.gl::GLFence"*, %"class.gl::GLFence"** %18, align 8
  %20 = icmp eq %"class.gl::GLFence"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.gl::GLFence"* %19 to void (%"class.gl::GLFence"*)***
  %23 = load void (%"class.gl::GLFence"*)**, void (%"class.gl::GLFence"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %23, i64 7
  %25 = load void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %24, align 8
  tail call void %25(%"class.gl::GLFence"* nonnull %19) #18
  br label %26

26:                                               ; preds = %3, %17, %21, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQueryD2Ev(%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu12_GLOBAL__N_122CommandsCompletedQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLFence"*, %"class.gl::GLFence"** %3, align 8
  store %"class.gl::GLFence"* null, %"class.gl::GLFence"** %3, align 8
  %5 = icmp eq %"class.gl::GLFence"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::GLFence"* %4 to void (%"class.gl::GLFence"*)***
  %8 = load void (%"class.gl::GLFence"*)**, void (%"class.gl::GLFence"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %8, i64 1
  %10 = load void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %9, align 8
  tail call void %10(%"class.gl::GLFence"* nonnull %4) #18
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %12) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu12_GLOBAL__N_122CommandsCompletedQueryD0Ev(%"class.gpu::(anonymous namespace)::CommandsCompletedQuery"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN3gpu12_GLOBAL__N_122CommandsCompletedQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.gl::GLFence"*, %"class.gl::GLFence"** %3, align 8
  store %"class.gl::GLFence"* null, %"class.gl::GLFence"** %3, align 8
  %5 = icmp eq %"class.gl::GLFence"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.gl::GLFence"* %4 to void (%"class.gl::GLFence"*)***
  %8 = load void (%"class.gl::GLFence"*)**, void (%"class.gl::GLFence"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %8, i64 1
  %10 = load void (%"class.gl::GLFence"*)*, void (%"class.gl::GLFence"*)** %9, align 8
  tail call void %10(%"class.gl::GLFence"* nonnull %4) #18
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gpu::(anonymous namespace)::CommandsCompletedQuery", %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0, i64 0, i32 0
  tail call void @_ZN3gpu12QueryManager5QueryD2Ev(%"class.gpu::QueryManager::Query"* %12) #18
  %13 = bitcast %"class.gpu::(anonymous namespace)::CommandsCompletedQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #19
  ret void
}

declare %"class.gl::GLFence"* @_ZN2gl7GLFence6CreateEv() local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gpu6BufferD1Ev(%"class.gpu::Buffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #18
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #18
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0
  %11 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %10, align 8
  %12 = icmp eq %"class.gpu::QueryManager::Query"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #18
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %14, i64 -2
  %21 = bitcast %"class.base::RefCounted"* %20 to %"class.gpu::QueryManager::Query"*
  %22 = bitcast %"class.base::RefCounted"* %20 to void (%"class.gpu::QueryManager::Query"*)***
  %23 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %23, i64 10
  %25 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %24, align 8
  tail call void %25(%"class.gpu::QueryManager::Query"* nonnull %21) #18
  br label %26

26:                                               ; preds = %4, %13, %19
  %27 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %27) #19
  br label %28

28:                                               ; preds = %2, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeEmm(%"class.base::circular_deque"*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, %1
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, %1
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %8 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %1)
  br i1 %6, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %11)
  tail call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeIS6_Li0EEEvPS6_S9_(%"class.base::internal::VectorBuffer"* %7, %class.scoped_refptr* %8, %class.scoped_refptr* %12)
  %13 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 0)
  br label %14

14:                                               ; preds = %5, %9
  %15 = phi %class.scoped_refptr* [ %13, %9 ], [ %8, %5 ]
  %16 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %7, i64 %2)
  tail call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeIS6_Li0EEEvPS6_S9_(%"class.base::internal::VectorBuffer"* %7, %class.scoped_refptr* %15, %class.scoped_refptr* %16)
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeIS6_Li0EEEvPS6_S9_(%"class.base::internal::VectorBuffer"*, %class.scoped_refptr*, %class.scoped_refptr*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %class.scoped_refptr*, align 8
  %6 = alloca %class.scoped_refptr*, align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  store %class.scoped_refptr* %1, %class.scoped_refptr** %5, align 8
  store %class.scoped_refptr* %2, %class.scoped_refptr** %6, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt %class.scoped_refptr* %1, %2
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %25

14:                                               ; preds = %3
  %15 = bitcast %class.scoped_refptr** %5 to i8*
  %16 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN3gpu12QueryManager5QueryEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS7_14remove_pointerIS9_E4typeEEE5valueEPcE4typeESB_ENUlRNS7_13basic_ostreamIcNS7_11char_traitsIcEEEEPKvE_8__invokeESM_SO_) #18
  %17 = bitcast %class.scoped_refptr** %6 to i8*
  %18 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN3gpu12QueryManager5QueryEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS7_14remove_pointerIS9_E4typeEEE5valueEPcE4typeESB_ENUlRNS7_13basic_ostreamIcNS7_11char_traitsIcEEEEPKvE_8__invokeESM_SO_) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* %16, i8* %18) #18
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %20, i8** %10, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %7) #18
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #18
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %26 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %28 = icmp eq %class.scoped_refptr* %26, %27
  br i1 %28, label %52, label %29

29:                                               ; preds = %25, %47
  %30 = phi %class.scoped_refptr* [ %49, %47 ], [ %26, %25 ]
  %31 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %30, i64 0, i32 0
  %32 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %31, align 8
  %33 = icmp eq %"class.gpu::QueryManager::Query"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %32, i64 0, i32 1
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #18
  %37 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %47

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 -2
  %42 = bitcast %"class.base::RefCounted"* %41 to %"class.gpu::QueryManager::Query"*
  %43 = bitcast %"class.base::RefCounted"* %41 to void (%"class.gpu::QueryManager::Query"*)***
  %44 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %44, i64 10
  %46 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %45, align 8
  call void %46(%"class.gpu::QueryManager::Query"* nonnull %42) #18
  br label %47

47:                                               ; preds = %29, %34, %40
  %48 = load %class.scoped_refptr*, %class.scoped_refptr** %5, align 8
  %49 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %48, i64 1
  store %class.scoped_refptr* %49, %class.scoped_refptr** %5, align 8
  %50 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %51 = icmp eq %class.scoped_refptr* %49, %50
  br i1 %51, label %52, label %29

52:                                               ; preds = %47, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %1
  ret %class.scoped_refptr* %25
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIP13scoped_refptrIN3gpu12QueryManager5QueryEEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS7_14remove_pointerIS9_E4typeEEE5valueEPcE4typeESB_ENUlRNS7_13basic_ostreamIcNS7_11char_traitsIcEEEEPKvE_8__invokeESM_SO_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #14 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #18
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS7_PvEEEE(%"class.std::__1::unique_ptr.72"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #18, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.4"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.72"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.7"** %98 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %30, %"class.std::__1::__compressed_pair.4"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE25__emplace_unique_key_argsIjJNS_4pairIjS6_EEEEENSK_INS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::pair.67"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #18, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %147, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 32) #19, !noalias !8
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %"struct.std::__1::pair.67", %"struct.std::__1::pair.67"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !8
  store i32 %59, i32* %57, align 8, !noalias !8
  %60 = getelementptr inbounds i8, i8* %55, i64 24
  %61 = getelementptr inbounds %"struct.std::__1::pair.67", %"struct.std::__1::pair.67"* %2, i64 0, i32 1
  %62 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %61, i64 0, i32 0
  %63 = bitcast %class.scoped_refptr* %61 to i64*
  %64 = load i64, i64* %63, align 8, !noalias !8
  %65 = bitcast i8* %60 to i64*
  store i64 %64, i64* %65, align 8, !noalias !8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %62, align 8, !noalias !8
  %66 = getelementptr inbounds i8, i8* %55, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %5, i64* %67, align 8, !noalias !8
  %68 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %68, align 8, !noalias !8
  %69 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %7 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %8, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %53
  %80 = shl i64 %7, 1
  %81 = icmp ult i64 %7, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %7) #18, !range !3
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #18
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %91)
  %92 = load i64, i64* %6, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #18, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %5
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %5
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %5, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %53
  %103 = phi i64 [ %7, %53 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %54, %53 ], [ %97, %95 ], [ %5, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %55 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i8**
  store i8* %55, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base"* %111, %"struct.std::__1::__hash_node_base"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #18, !range !3
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %55 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %55, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %48, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %48 ]
  %149 = phi %"struct.std::__1::__hash_node_base"* [ %144, %143 ], [ %31, %48 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #18
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #18, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #18
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #18, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #18
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #19
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #19
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !11

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #18, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #19
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #13

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.18"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.14"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #18, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.18"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.18"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.18"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.18"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.18"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #19, !noalias !13
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !13
  store i32 %58, i32* %57, align 4, !noalias !13
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !13
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.18"**
  store %"struct.std::__1::__hash_node_base.18"* null, %"struct.std::__1::__hash_node_base.18"** %61, align 8, !noalias !13
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #18, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #18
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.14"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #18, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.18"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.18"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.18"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.18"* %104, %"struct.std::__1::__hash_node_base.18"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.18"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.18"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #18, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.18"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.18"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.18"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.18"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.18"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.18"*, i8 } undef, %"struct.std::__1::__hash_node_base.18"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.18"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.18"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.14"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #18
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.14"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #18, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #18
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #18, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #18
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.14"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.14"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #20
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #19
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.14"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.18"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.18"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #19
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.20", %"class.std::__1::__bucket_list_deallocator.20"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.18"* null, %"struct.std::__1::__hash_node_base.18"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !16

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.18"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.18"* null, %"struct.std::__1::__hash_node_base.18"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.18"* null, %"struct.std::__1::__hash_node_base.18"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.18"* null, %"struct.std::__1::__hash_node_base.18"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.18"* null, %"struct.std::__1::__hash_node_base.18"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.18"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #18, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.18"* %36, %"struct.std::__1::__hash_node_base.18"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.18"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.18"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.18"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.18"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.18"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.18"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.18"* %82, %"struct.std::__1::__hash_node_base.18"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.18"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.18"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.18"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.18"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.18"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.18"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.18"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.18"* %80, %"struct.std::__1::__hash_node_base.18"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.18"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.18"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.18"** null, %"struct.std::__1::__hash_node_base.18"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.18"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.18"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #19
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.20", %"class.std::__1::__bucket_list_deallocator.20"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE5eraseENS_21__tree_const_iteratorIS7_PNS_11__tree_nodeIS7_PvEElEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #18
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.gpu::QueryManager::Query"**
  %47 = load %"class.gpu::QueryManager::Query"*, %"class.gpu::QueryManager::Query"** %46, align 8
  %48 = icmp eq %"class.gpu::QueryManager::Query"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.gpu::QueryManager::Query", %"class.gpu::QueryManager::Query"* %47, i64 0, i32 1
  %51 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #18
  %52 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %62

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %50, i64 -2
  %57 = bitcast %"class.base::RefCounted"* %56 to %"class.gpu::QueryManager::Query"*
  %58 = bitcast %"class.base::RefCounted"* %56 to void (%"class.gpu::QueryManager::Query"*)***
  %59 = load void (%"class.gpu::QueryManager::Query"*)**, void (%"class.gpu::QueryManager::Query"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %59, i64 10
  %61 = load void (%"class.gpu::QueryManager::Query"*)*, void (%"class.gpu::QueryManager::Query"*)** %60, align 8
  tail call void %61(%"class.gpu::QueryManager::Query"* nonnull %57) #18
  br label %62

62:                                               ; preds = %38, %49, %55
  %63 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %63) #19
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.14"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.81", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #18, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.18"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.18"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.18"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.18"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.18"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.18"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.81"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.81"* nonnull sret %3, %"class.std::__1::__hash_table.14"* %0, %"struct.std::__1::__hash_node_base.18"* nonnull %33) #18
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.81"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.70"*, %"struct.std::__1::__hash_node.70"** %59, align 8
  store %"struct.std::__1::__hash_node.70"* null, %"struct.std::__1::__hash_node.70"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.70"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.70"* %60 to i8*
  call void @_ZdlPv(i8* %63) #19
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.81"* noalias sret, %"class.std::__1::__hash_table.14"*, %"struct.std::__1::__hash_node_base.18"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.18"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #18, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.18"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.18"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.25"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.18"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.18"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.18"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.18"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.18"* null, %"struct.std::__1::__hash_node_base.18"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.18"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.18"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18", %"struct.std::__1::__hash_node_base.18"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.18"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.18"**, %"struct.std::__1::__hash_node_base.18"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.18"*, %"struct.std::__1::__hash_node_base.18"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.18"* %25, %"struct.std::__1::__hash_node_base.18"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.18"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.18"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.18"* null, %"struct.std::__1::__hash_node_base.18"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.14", %"class.std::__1::__hash_table.14"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.18"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.81"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.81"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.28"** %98 to %"class.std::__1::__compressed_pair.25"**
  store %"class.std::__1::__compressed_pair.25"* %30, %"class.std::__1::__compressed_pair.25"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.81"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base12OnceCallbackIFvvEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector"*, %"class.base::OnceCallback"* dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::OnceCallback"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #20
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::OnceCallback"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #20
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #19
  %33 = bitcast i8* %32 to %"class.base::OnceCallback"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::OnceCallback"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %36, i64 %35
  %39 = ptrtoint %"class.base::OnceCallback"* %38 to i64
  %40 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.base::OnceCallback"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %40, align 8
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %37, i64 1
  %45 = ptrtoint %"class.base::OnceCallback"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %46, align 8
  %48 = ptrtoint %"class.base::OnceCallback"* %47 to i64
  %49 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %3, align 8
  %50 = icmp eq %"class.base::OnceCallback"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.base::OnceCallback", %"class.base::OnceCallback"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.base::internal::BindStateBase"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.base::OnceCallback"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.base::OnceCallback"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %60, i64 -1
  %64 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %61, i64 -1
  %65 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.base::OnceCallback"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.base::OnceCallback"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !17

71:                                               ; preds = %59, %51
  %72 = phi %"class.base::OnceCallback"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.base::OnceCallback"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.base::OnceCallback"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.base::OnceCallback"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.base::OnceCallback"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -1
  %80 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -1
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.base::OnceCallback"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.base::OnceCallback"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %81, align 8
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -2
  %86 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -2
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.base::OnceCallback"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.base::OnceCallback"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %87, align 8
  %91 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -3
  %92 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -3
  %93 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.base::OnceCallback"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.base::OnceCallback"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %93, align 8
  %97 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -4
  %98 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -4
  %99 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.base::OnceCallback"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.base::OnceCallback"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %99, align 8
  %103 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -5
  %104 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -5
  %105 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.base::OnceCallback"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.base::OnceCallback"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %105, align 8
  %109 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -6
  %110 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -6
  %111 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.base::OnceCallback"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.base::OnceCallback"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %111, align 8
  %115 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -7
  %116 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -7
  %117 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.base::OnceCallback"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.base::OnceCallback"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %117, align 8
  %121 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %77, i64 -8
  %122 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %78, i64 -8
  %123 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.base::OnceCallback"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.base::OnceCallback"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %123, align 8
  %127 = icmp eq %"class.base::OnceCallback"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.base::OnceCallback"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.base::OnceCallback"*, %"class.base::OnceCallback"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.base::OnceCallback"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.base::OnceCallback"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.base::OnceCallback"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.base::OnceCallback"*
  %138 = icmp eq %"class.base::OnceCallback"* %133, %137
  br i1 %138, label %144, label %139

139:                                              ; preds = %132, %139
  %140 = phi %"class.base::OnceCallback"* [ %141, %139 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %140, i64 -1
  %142 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %141, i64 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %142) #18
  %143 = icmp eq %"class.base::OnceCallback"* %141, %137
  br i1 %143, label %144, label %139

144:                                              ; preds = %139, %132
  %145 = icmp eq i64 %135, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %147) #19
  br label %148

148:                                              ; preds = %144, %146
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #18
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #18
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #18
  br i1 %31, label %32, label %33, !prof !7

32:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #18
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE10MoveBufferERNS_8internal12VectorBufferIS5_EEmmPS9_PmSC_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #18
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #18
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #18
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE10MoveBufferERNS_8internal12VectorBufferIS5_EEmmPS9_PmSC_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 0, i64* %4, align 8
  %12 = icmp ugt i64 %2, %1
  br i1 %12, label %13, label %116

13:                                               ; preds = %6
  %14 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %15 = ptrtoint %class.scoped_refptr* %14 to i64
  %16 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %17 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %18 = load %class.scoped_refptr*, %class.scoped_refptr** %17, align 8
  %19 = icmp ult %class.scoped_refptr* %18, %16
  br i1 %19, label %20, label %36

20:                                               ; preds = %13
  %21 = ptrtoint %class.scoped_refptr* %18 to i64
  %22 = ptrtoint %class.scoped_refptr* %16 to i64
  %23 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %22, i64 %15) #18
  %24 = extractvalue { i64, i1 } %23, 1
  %25 = extractvalue { i64, i1 } %23, 0
  %26 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %21, i64 %25) #18
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = or i1 %24, %27
  br i1 %28, label %29, label %30, !prof !7

29:                                               ; preds = %20
  tail call void @llvm.trap() #18
  unreachable

30:                                               ; preds = %20
  %31 = extractvalue { i64, i1 } %26, 0
  %32 = icmp ugt i64 %31, %15
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #18
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  br label %36

36:                                               ; preds = %33, %30, %13
  %37 = icmp eq %class.scoped_refptr* %14, %16
  br i1 %37, label %114, label %38

38:                                               ; preds = %36
  %39 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %16, i64 -1, i32 0
  %40 = ptrtoint %"class.gpu::QueryManager::Query"** %39 to i64
  %41 = sub i64 %40, %15
  %42 = lshr i64 %41, 3
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 7
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %38, %46
  %47 = phi %class.scoped_refptr* [ %55, %46 ], [ %18, %38 ]
  %48 = phi %class.scoped_refptr* [ %54, %46 ], [ %14, %38 ]
  %49 = phi i64 [ %56, %46 ], [ %44, %38 ]
  %50 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %48, i64 0, i32 0
  %51 = bitcast %class.scoped_refptr* %48 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %class.scoped_refptr* %47 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %50, align 8
  %54 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %48, i64 1
  %55 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %47, i64 1
  %56 = add i64 %49, -1
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %46, !llvm.loop !18

58:                                               ; preds = %46, %38
  %59 = phi %class.scoped_refptr* [ %18, %38 ], [ %55, %46 ]
  %60 = phi %class.scoped_refptr* [ %14, %38 ], [ %54, %46 ]
  %61 = icmp ult i64 %41, 56
  br i1 %61, label %114, label %62

62:                                               ; preds = %58, %62
  %63 = phi %class.scoped_refptr* [ %112, %62 ], [ %59, %58 ]
  %64 = phi %class.scoped_refptr* [ %111, %62 ], [ %60, %58 ]
  %65 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 0, i32 0
  %66 = bitcast %class.scoped_refptr* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %class.scoped_refptr* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %65, align 8
  %69 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 1
  %70 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 1
  %71 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %69, i64 0, i32 0
  %72 = bitcast %class.scoped_refptr* %69 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %class.scoped_refptr* %70 to i64*
  store i64 %73, i64* %74, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %71, align 8
  %75 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 2
  %76 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 2
  %77 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %75, i64 0, i32 0
  %78 = bitcast %class.scoped_refptr* %75 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %class.scoped_refptr* %76 to i64*
  store i64 %79, i64* %80, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %77, align 8
  %81 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 3
  %82 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 3
  %83 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %81, i64 0, i32 0
  %84 = bitcast %class.scoped_refptr* %81 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %class.scoped_refptr* %82 to i64*
  store i64 %85, i64* %86, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %83, align 8
  %87 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 4
  %88 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 4
  %89 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %87, i64 0, i32 0
  %90 = bitcast %class.scoped_refptr* %87 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %class.scoped_refptr* %88 to i64*
  store i64 %91, i64* %92, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %89, align 8
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 5
  %94 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 5
  %95 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %93, i64 0, i32 0
  %96 = bitcast %class.scoped_refptr* %93 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %class.scoped_refptr* %94 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %95, align 8
  %99 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 6
  %100 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 6
  %101 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %99, i64 0, i32 0
  %102 = bitcast %class.scoped_refptr* %99 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.scoped_refptr* %100 to i64*
  store i64 %103, i64* %104, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %101, align 8
  %105 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 7
  %106 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 7
  %107 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %105, i64 0, i32 0
  %108 = bitcast %class.scoped_refptr* %105 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %class.scoped_refptr* %106 to i64*
  store i64 %109, i64* %110, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %107, align 8
  %111 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %64, i64 8
  %112 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %63, i64 8
  %113 = icmp eq %class.scoped_refptr* %111, %16
  br i1 %113, label %114, label %62

114:                                              ; preds = %58, %62, %36
  %115 = sub i64 %2, %1
  br label %322

116:                                              ; preds = %6
  %117 = icmp ult i64 %2, %1
  br i1 %117, label %118, label %322

118:                                              ; preds = %116
  %119 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %120 = ptrtoint %class.scoped_refptr* %119 to i64
  %121 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %11)
  %122 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %123 = load %class.scoped_refptr*, %class.scoped_refptr** %122, align 8
  %124 = icmp ult %class.scoped_refptr* %123, %121
  br i1 %124, label %125, label %141

125:                                              ; preds = %118
  %126 = ptrtoint %class.scoped_refptr* %123 to i64
  %127 = ptrtoint %class.scoped_refptr* %121 to i64
  %128 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %127, i64 %120) #18
  %129 = extractvalue { i64, i1 } %128, 1
  %130 = extractvalue { i64, i1 } %128, 0
  %131 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %126, i64 %130) #18
  %132 = extractvalue { i64, i1 } %131, 1
  %133 = or i1 %129, %132
  br i1 %133, label %134, label %135, !prof !7

134:                                              ; preds = %125
  tail call void @llvm.trap() #18
  unreachable

135:                                              ; preds = %125
  %136 = extractvalue { i64, i1 } %131, 0
  %137 = icmp ugt i64 %136, %120
  br i1 %137, label %138, label %141

138:                                              ; preds = %135
  %139 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #18
  %140 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #18
  br label %141

141:                                              ; preds = %138, %135, %118
  %142 = icmp eq %class.scoped_refptr* %119, %121
  br i1 %142, label %219, label %143

143:                                              ; preds = %141
  %144 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %121, i64 -1, i32 0
  %145 = ptrtoint %"class.gpu::QueryManager::Query"** %144 to i64
  %146 = sub i64 %145, %120
  %147 = lshr i64 %146, 3
  %148 = add nuw nsw i64 %147, 1
  %149 = and i64 %148, 7
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %163, label %151

151:                                              ; preds = %143, %151
  %152 = phi %class.scoped_refptr* [ %160, %151 ], [ %123, %143 ]
  %153 = phi %class.scoped_refptr* [ %159, %151 ], [ %119, %143 ]
  %154 = phi i64 [ %161, %151 ], [ %149, %143 ]
  %155 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %153, i64 0, i32 0
  %156 = bitcast %class.scoped_refptr* %153 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %class.scoped_refptr* %152 to i64*
  store i64 %157, i64* %158, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %155, align 8
  %159 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %153, i64 1
  %160 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %152, i64 1
  %161 = add i64 %154, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %151, !llvm.loop !19

163:                                              ; preds = %151, %143
  %164 = phi %class.scoped_refptr* [ %123, %143 ], [ %160, %151 ]
  %165 = phi %class.scoped_refptr* [ %119, %143 ], [ %159, %151 ]
  %166 = icmp ult i64 %146, 56
  br i1 %166, label %219, label %167

167:                                              ; preds = %163, %167
  %168 = phi %class.scoped_refptr* [ %217, %167 ], [ %164, %163 ]
  %169 = phi %class.scoped_refptr* [ %216, %167 ], [ %165, %163 ]
  %170 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 0, i32 0
  %171 = bitcast %class.scoped_refptr* %169 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = bitcast %class.scoped_refptr* %168 to i64*
  store i64 %172, i64* %173, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %170, align 8
  %174 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 1
  %175 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 1
  %176 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %174, i64 0, i32 0
  %177 = bitcast %class.scoped_refptr* %174 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %class.scoped_refptr* %175 to i64*
  store i64 %178, i64* %179, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %176, align 8
  %180 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 2
  %181 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 2
  %182 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %180, i64 0, i32 0
  %183 = bitcast %class.scoped_refptr* %180 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %class.scoped_refptr* %181 to i64*
  store i64 %184, i64* %185, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %182, align 8
  %186 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 3
  %187 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 3
  %188 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %186, i64 0, i32 0
  %189 = bitcast %class.scoped_refptr* %186 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %class.scoped_refptr* %187 to i64*
  store i64 %190, i64* %191, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %188, align 8
  %192 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 4
  %193 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 4
  %194 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %192, i64 0, i32 0
  %195 = bitcast %class.scoped_refptr* %192 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %class.scoped_refptr* %193 to i64*
  store i64 %196, i64* %197, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %194, align 8
  %198 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 5
  %199 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 5
  %200 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %198, i64 0, i32 0
  %201 = bitcast %class.scoped_refptr* %198 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %class.scoped_refptr* %199 to i64*
  store i64 %202, i64* %203, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %200, align 8
  %204 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 6
  %205 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 6
  %206 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %204, i64 0, i32 0
  %207 = bitcast %class.scoped_refptr* %204 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %class.scoped_refptr* %205 to i64*
  store i64 %208, i64* %209, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %206, align 8
  %210 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 7
  %211 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 7
  %212 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %210, i64 0, i32 0
  %213 = bitcast %class.scoped_refptr* %210 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %class.scoped_refptr* %211 to i64*
  store i64 %214, i64* %215, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %212, align 8
  %216 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %169, i64 8
  %217 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %168, i64 8
  %218 = icmp eq %class.scoped_refptr* %216, %121
  br i1 %218, label %219, label %167

219:                                              ; preds = %163, %167, %141
  %220 = sub i64 %11, %1
  %221 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %222 = ptrtoint %class.scoped_refptr* %221 to i64
  %223 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %224 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %220)
  %225 = icmp ult %class.scoped_refptr* %224, %223
  br i1 %225, label %226, label %242

226:                                              ; preds = %219
  %227 = ptrtoint %class.scoped_refptr* %224 to i64
  %228 = ptrtoint %class.scoped_refptr* %223 to i64
  %229 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %228, i64 %222) #18
  %230 = extractvalue { i64, i1 } %229, 1
  %231 = extractvalue { i64, i1 } %229, 0
  %232 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %227, i64 %231) #18
  %233 = extractvalue { i64, i1 } %232, 1
  %234 = or i1 %230, %233
  br i1 %234, label %235, label %236, !prof !7

235:                                              ; preds = %226
  call void @llvm.trap() #18
  unreachable

236:                                              ; preds = %226
  %237 = extractvalue { i64, i1 } %232, 0
  %238 = icmp ugt i64 %237, %222
  br i1 %238, label %239, label %242

239:                                              ; preds = %236
  %240 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #18
  %241 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #18
  br label %242

242:                                              ; preds = %239, %236, %219
  %243 = icmp eq %class.scoped_refptr* %221, %223
  br i1 %243, label %320, label %244

244:                                              ; preds = %242
  %245 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %223, i64 -1, i32 0
  %246 = ptrtoint %"class.gpu::QueryManager::Query"** %245 to i64
  %247 = sub i64 %246, %222
  %248 = lshr i64 %247, 3
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 7
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %264, label %252

252:                                              ; preds = %244, %252
  %253 = phi %class.scoped_refptr* [ %261, %252 ], [ %224, %244 ]
  %254 = phi %class.scoped_refptr* [ %260, %252 ], [ %221, %244 ]
  %255 = phi i64 [ %262, %252 ], [ %250, %244 ]
  %256 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %254, i64 0, i32 0
  %257 = bitcast %class.scoped_refptr* %254 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %class.scoped_refptr* %253 to i64*
  store i64 %258, i64* %259, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %256, align 8
  %260 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %254, i64 1
  %261 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %253, i64 1
  %262 = add i64 %255, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %252, !llvm.loop !20

264:                                              ; preds = %252, %244
  %265 = phi %class.scoped_refptr* [ %224, %244 ], [ %261, %252 ]
  %266 = phi %class.scoped_refptr* [ %221, %244 ], [ %260, %252 ]
  %267 = icmp ult i64 %247, 56
  br i1 %267, label %320, label %268

268:                                              ; preds = %264, %268
  %269 = phi %class.scoped_refptr* [ %318, %268 ], [ %265, %264 ]
  %270 = phi %class.scoped_refptr* [ %317, %268 ], [ %266, %264 ]
  %271 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 0, i32 0
  %272 = bitcast %class.scoped_refptr* %270 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %class.scoped_refptr* %269 to i64*
  store i64 %273, i64* %274, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %271, align 8
  %275 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 1
  %276 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 1
  %277 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %275, i64 0, i32 0
  %278 = bitcast %class.scoped_refptr* %275 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = bitcast %class.scoped_refptr* %276 to i64*
  store i64 %279, i64* %280, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %277, align 8
  %281 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 2
  %282 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 2
  %283 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %281, i64 0, i32 0
  %284 = bitcast %class.scoped_refptr* %281 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %class.scoped_refptr* %282 to i64*
  store i64 %285, i64* %286, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %283, align 8
  %287 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 3
  %288 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 3
  %289 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %287, i64 0, i32 0
  %290 = bitcast %class.scoped_refptr* %287 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %class.scoped_refptr* %288 to i64*
  store i64 %291, i64* %292, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %289, align 8
  %293 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 4
  %294 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 4
  %295 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %293, i64 0, i32 0
  %296 = bitcast %class.scoped_refptr* %293 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %class.scoped_refptr* %294 to i64*
  store i64 %297, i64* %298, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %295, align 8
  %299 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 5
  %300 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 5
  %301 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %299, i64 0, i32 0
  %302 = bitcast %class.scoped_refptr* %299 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast %class.scoped_refptr* %300 to i64*
  store i64 %303, i64* %304, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %301, align 8
  %305 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 6
  %306 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 6
  %307 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %305, i64 0, i32 0
  %308 = bitcast %class.scoped_refptr* %305 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %class.scoped_refptr* %306 to i64*
  store i64 %309, i64* %310, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %307, align 8
  %311 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 7
  %312 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 7
  %313 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %311, i64 0, i32 0
  %314 = bitcast %class.scoped_refptr* %311 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %class.scoped_refptr* %312 to i64*
  store i64 %315, i64* %316, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %313, align 8
  %317 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %270, i64 8
  %318 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %269, i64 8
  %319 = icmp eq %class.scoped_refptr* %317, %223
  br i1 %319, label %320, label %268

320:                                              ; preds = %264, %268, %242
  %321 = add i64 %220, %2
  br label %322

322:                                              ; preds = %116, %320, %114
  %323 = phi i64 [ %321, %320 ], [ %115, %114 ], [ 0, %116 ]
  store i64 %323, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #17

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #13

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #13

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #18
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #18
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #18
  br i1 %37, label %38, label %39, !prof !7

38:                                               ; preds = %27
  tail call void @llvm.trap() #18
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #18
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE10MoveBufferERNS_8internal12VectorBufferIS5_EEmmPS9_PmSC_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #18
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #18
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #18
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZNK4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %1
  ret %class.scoped_refptr* %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.base::circular_deque"*, i64 } @_ZN4base14circular_dequeI13scoped_refptrIN3gpu12QueryManager5QueryEEE5eraseENS_8internal29circular_deque_const_iteratorIS5_EES9_(%"class.base::circular_deque"*, %"class.base::circular_deque"*, i64, %"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i64 %2, %4
  br i1 %7, label %161, label %8

8:                                                ; preds = %5
  %9 = icmp ult i64 %2, %4
  %10 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %11 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %2)
  br i1 %9, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %14)
  tail call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeIS6_Li0EEEvPS6_S9_(%"class.base::internal::VectorBuffer"* %10, %class.scoped_refptr* %11, %class.scoped_refptr* %15)
  %16 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 0)
  br label %17

17:                                               ; preds = %8, %12
  %18 = phi %class.scoped_refptr* [ %16, %12 ], [ %11, %8 ]
  %19 = tail call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %4)
  tail call void @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEE13DestructRangeIS6_Li0EEEvPS6_S9_(%"class.base::internal::VectorBuffer"* %10, %class.scoped_refptr* %18, %class.scoped_refptr* %19)
  %20 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, %2
  br i1 %22, label %23, label %24

23:                                               ; preds = %17
  store i64 %4, i64* %20, align 8
  br label %161

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %28 = bitcast %"class.logging::CheckError"* %6 to i8*
  br label %29

29:                                               ; preds = %152, %24
  %30 = phi i64 [ %21, %24 ], [ %159, %152 ]
  %31 = phi i64 [ %4, %24 ], [ %155, %152 ]
  %32 = phi i64 [ %2, %24 ], [ %158, %152 ]
  %33 = icmp ult i64 %31, %30
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = sub i64 %31, %30
  br label %40

36:                                               ; preds = %29
  %37 = load i64, i64* %27, align 8
  %38 = sub i64 %31, %30
  %39 = add i64 %38, %37
  br label %40

40:                                               ; preds = %36, %34
  %41 = phi i64 [ %35, %34 ], [ %39, %36 ]
  %42 = icmp ult i64 %26, %30
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  %44 = sub i64 %26, %30
  br label %49

45:                                               ; preds = %40
  %46 = load i64, i64* %27, align 8
  %47 = sub i64 %26, %30
  %48 = add i64 %47, %46
  br label %49

49:                                               ; preds = %43, %45
  %50 = phi i64 [ %44, %43 ], [ %48, %45 ]
  %51 = icmp ult i64 %41, %50
  br i1 %51, label %52, label %160

52:                                               ; preds = %49
  %53 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %31)
  %54 = ptrtoint %class.scoped_refptr* %53 to i64
  %55 = add i64 %31, 1
  %56 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %55)
  %57 = call dereferenceable(8) %class.scoped_refptr* @_ZN4base8internal12VectorBufferI13scoped_refptrIN3gpu12QueryManager5QueryEEEixEm(%"class.base::internal::VectorBuffer"* %10, i64 %32)
  %58 = icmp ult %class.scoped_refptr* %57, %56
  br i1 %58, label %59, label %74

59:                                               ; preds = %52
  %60 = ptrtoint %class.scoped_refptr* %57 to i64
  %61 = ptrtoint %class.scoped_refptr* %56 to i64
  %62 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %61, i64 %54) #18
  %63 = extractvalue { i64, i1 } %62, 1
  %64 = extractvalue { i64, i1 } %62, 0
  %65 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %60, i64 %64) #18
  %66 = extractvalue { i64, i1 } %65, 1
  %67 = or i1 %63, %66
  br i1 %67, label %68, label %69, !prof !7

68:                                               ; preds = %59
  call void @llvm.trap() #18
  unreachable

69:                                               ; preds = %59
  %70 = extractvalue { i64, i1 } %65, 0
  %71 = icmp ugt i64 %70, %54
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #18
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #18
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #18
  br label %74

74:                                               ; preds = %72, %69, %52
  %75 = icmp eq %class.scoped_refptr* %53, %56
  br i1 %75, label %152, label %76

76:                                               ; preds = %74
  %77 = getelementptr %class.scoped_refptr, %class.scoped_refptr* %56, i64 -1
  %78 = ptrtoint %class.scoped_refptr* %77 to i64
  %79 = sub i64 %78, %54
  %80 = lshr i64 %79, 3
  %81 = add nuw nsw i64 %80, 1
  %82 = and i64 %81, 7
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %96, label %84

84:                                               ; preds = %76, %84
  %85 = phi %class.scoped_refptr* [ %93, %84 ], [ %57, %76 ]
  %86 = phi %class.scoped_refptr* [ %92, %84 ], [ %53, %76 ]
  %87 = phi i64 [ %94, %84 ], [ %82, %76 ]
  %88 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %86, i64 0, i32 0
  %89 = bitcast %class.scoped_refptr* %86 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %class.scoped_refptr* %85 to i64*
  store i64 %90, i64* %91, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %88, align 8
  %92 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %86, i64 1
  %93 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %85, i64 1
  %94 = add i64 %87, -1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %84, !llvm.loop !21

96:                                               ; preds = %84, %76
  %97 = phi %class.scoped_refptr* [ %57, %76 ], [ %93, %84 ]
  %98 = phi %class.scoped_refptr* [ %53, %76 ], [ %92, %84 ]
  %99 = icmp ult i64 %79, 56
  br i1 %99, label %152, label %100

100:                                              ; preds = %96, %100
  %101 = phi %class.scoped_refptr* [ %150, %100 ], [ %97, %96 ]
  %102 = phi %class.scoped_refptr* [ %149, %100 ], [ %98, %96 ]
  %103 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 0, i32 0
  %104 = bitcast %class.scoped_refptr* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %class.scoped_refptr* %101 to i64*
  store i64 %105, i64* %106, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %103, align 8
  %107 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 1
  %108 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 1
  %109 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %107, i64 0, i32 0
  %110 = bitcast %class.scoped_refptr* %107 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %class.scoped_refptr* %108 to i64*
  store i64 %111, i64* %112, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %109, align 8
  %113 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 2
  %114 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 2
  %115 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %113, i64 0, i32 0
  %116 = bitcast %class.scoped_refptr* %113 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %class.scoped_refptr* %114 to i64*
  store i64 %117, i64* %118, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %115, align 8
  %119 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 3
  %120 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 3
  %121 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %119, i64 0, i32 0
  %122 = bitcast %class.scoped_refptr* %119 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %class.scoped_refptr* %120 to i64*
  store i64 %123, i64* %124, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %121, align 8
  %125 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 4
  %126 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 4
  %127 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %125, i64 0, i32 0
  %128 = bitcast %class.scoped_refptr* %125 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %class.scoped_refptr* %126 to i64*
  store i64 %129, i64* %130, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %127, align 8
  %131 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 5
  %132 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 5
  %133 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %131, i64 0, i32 0
  %134 = bitcast %class.scoped_refptr* %131 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %class.scoped_refptr* %132 to i64*
  store i64 %135, i64* %136, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %133, align 8
  %137 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 6
  %138 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 6
  %139 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %137, i64 0, i32 0
  %140 = bitcast %class.scoped_refptr* %137 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %class.scoped_refptr* %138 to i64*
  store i64 %141, i64* %142, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %139, align 8
  %143 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 7
  %144 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 7
  %145 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %143, i64 0, i32 0
  %146 = bitcast %class.scoped_refptr* %143 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %class.scoped_refptr* %144 to i64*
  store i64 %147, i64* %148, align 8
  store %"class.gpu::QueryManager::Query"* null, %"class.gpu::QueryManager::Query"** %145, align 8
  %149 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %102, i64 8
  %150 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %101, i64 8
  %151 = icmp eq %class.scoped_refptr* %149, %56
  br i1 %151, label %152, label %100

152:                                              ; preds = %96, %100, %74
  %153 = load i64, i64* %27, align 8
  %154 = icmp eq i64 %55, %153
  %155 = select i1 %154, i64 0, i64 %55
  %156 = add i64 %32, 1
  %157 = icmp eq i64 %156, %153
  %158 = select i1 %157, i64 0, i64 %156
  %159 = load i64, i64* %20, align 8
  br label %29

160:                                              ; preds = %49
  store i64 %32, i64* %25, align 8
  br label %161

161:                                              ; preds = %5, %160, %23
  %162 = phi i64 [ %4, %23 ], [ %2, %160 ], [ %2, %5 ]
  %163 = insertvalue { %"class.base::circular_deque"*, i64 } undef, %"class.base::circular_deque"* %0, 0
  %164 = insertvalue { %"class.base::circular_deque"*, i64 } %163, i64 %162, 1
  ret { %"class.base::circular_deque"*, i64 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeINS_12__value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_19__map_value_compareIjS7_NS_4lessIjEELb1EEENS_9allocatorIS7_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSJ_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS7_PvEENS_22__tree_node_destructorINSC_ISQ_EEEEEEDpOT_"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashINS_4pairIjS6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIj13scoped_refptrIN3gpu12QueryManager5QueryEEEENS_22__unordered_map_hasherIjS7_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS7_SC_SA_Lb1EEENS_9allocatorIS7_EEE21__construct_node_hashINS_4pairIjS6_EEJEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISP_EEEEEEmOT_DpOT0_"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!16 = distinct !{!16, !12}
!17 = distinct !{!17, !12}
!18 = distinct !{!18, !12}
!19 = distinct !{!19, !12}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !12}
