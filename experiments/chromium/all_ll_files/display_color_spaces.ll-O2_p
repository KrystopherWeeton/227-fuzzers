; ModuleID = '../../ui/gfx/display_color_spaces.cc'
source_filename = "../../ui/gfx/display_color_spaces.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.gfx::ColorSpace"*, %"class.gfx::ColorSpace"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.gfx::ColorSpace"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { i32*, i32*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i32* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@__const._ZNK3gfx18DisplayColorSpaces24GetCompositingColorSpaceEbNS_17ContentColorUsageE.result = private unnamed_addr constant %"class.gfx::ColorSpace" { i8 -86, i8 -86, i8 -86, i8 -86, [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [7 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, align 4
@.str = private unnamed_addr constant [14 x i8] c"sRGB/no-alpha\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"sRGB/alpha\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"WCG/no-alpha\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"WCG/alpha\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"HDR/no-alpha\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"HDR/alpha\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"sRGB\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"WCG\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"SDR\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"HDR\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c",\00", align 1

@_ZN3gfx18DisplayColorSpacesC1Ev = hidden unnamed_addr alias void (%"class.gfx::DisplayColorSpaces"*), void (%"class.gfx::DisplayColorSpaces"*)* @_ZN3gfx18DisplayColorSpacesC2Ev
@_ZN3gfx18DisplayColorSpacesC1ERKS0_ = hidden unnamed_addr alias void (%"class.gfx::DisplayColorSpaces"*, %"class.gfx::DisplayColorSpaces"*), void (%"class.gfx::DisplayColorSpaces"*, %"class.gfx::DisplayColorSpaces"*)* @_ZN3gfx18DisplayColorSpacesC2ERKS0_
@_ZN3gfx18DisplayColorSpacesC1ERKNS_10ColorSpaceE = hidden unnamed_addr alias void (%"class.gfx::DisplayColorSpaces"*, %"class.gfx::ColorSpace"*), void (%"class.gfx::DisplayColorSpaces"*, %"class.gfx::ColorSpace"*)* @_ZN3gfx18DisplayColorSpacesC2ERKNS_10ColorSpaceE
@_ZN3gfx18DisplayColorSpacesC1ERKNS_10ColorSpaceENS_12BufferFormatE = hidden unnamed_addr alias void (%"class.gfx::DisplayColorSpaces"*, %"class.gfx::ColorSpace"*, i32), void (%"class.gfx::DisplayColorSpaces"*, %"class.gfx::ColorSpace"*, i32)* @_ZN3gfx18DisplayColorSpacesC2ERKNS_10ColorSpaceENS_12BufferFormatE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18DisplayColorSpacesC2Ev(%"class.gfx::DisplayColorSpaces"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 2
  store float 1.000000e+02, float* %2, align 8
  %3 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %union.anon* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 0
  store i8 1, i8* %6, align 4
  %7 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 1
  store i8 14, i8* %7, align 1
  %8 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 2
  store i8 1, i8* %8, align 2
  %9 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 3
  store i8 2, i8* %9, align 1
  %10 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 4
  %11 = bitcast [9 x float]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 64, i1 false)
  %12 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 0
  store i8 1, i8* %12, align 4
  %13 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 1
  store i8 14, i8* %13, align 1
  %14 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 2
  store i8 1, i8* %14, align 2
  %15 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 3
  store i8 2, i8* %15, align 1
  %16 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 4
  %17 = bitcast [9 x float]* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 64, i1 false)
  %18 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 0
  store i8 1, i8* %18, align 4
  %19 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 1
  store i8 14, i8* %19, align 1
  %20 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 2
  store i8 1, i8* %20, align 2
  %21 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 3
  store i8 2, i8* %21, align 1
  %22 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 4
  %23 = bitcast [9 x float]* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 64, i1 false)
  %24 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 0
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 1
  store i8 14, i8* %25, align 1
  %26 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 2
  store i8 1, i8* %26, align 2
  %27 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 3
  store i8 2, i8* %27, align 1
  %28 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 4
  %29 = bitcast [9 x float]* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %29, i8 0, i64 64, i1 false)
  %30 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 0
  store i8 1, i8* %30, align 4
  %31 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 1
  store i8 14, i8* %31, align 1
  %32 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 2
  store i8 1, i8* %32, align 2
  %33 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 3
  store i8 2, i8* %33, align 1
  %34 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 4
  %35 = bitcast [9 x float]* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 64, i1 false)
  %36 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 0
  store i8 1, i8* %36, align 4
  %37 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 1
  store i8 14, i8* %37, align 1
  %38 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 2
  store i8 1, i8* %38, align 2
  %39 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 3
  store i8 2, i8* %39, align 1
  %40 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 4
  %41 = bitcast [9 x float]* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 64, i1 false)
  %42 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 0
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 6, i32 6, i32 6, i32 6>, <4 x i32>* %43, align 4
  %44 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 4
  store i32 6, i32* %44, align 4
  %45 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 5
  store i32 6, i32* %45, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18DisplayColorSpacesC2ERKS0_(%"class.gfx::DisplayColorSpaces"*, %"class.gfx::DisplayColorSpaces"* dereferenceable(472)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 436, i1 false)
  %5 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 32, i1 false) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"* %11, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24) %10) #12
  store i8 1, i8* %5, align 8
  br label %12

12:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18DisplayColorSpacesC2ERKNS_10ColorSpaceE(%"class.gfx::DisplayColorSpaces"*, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 2
  store float 1.000000e+02, float* %3, align 8
  %4 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %union.anon* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 0
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 1
  store i8 14, i8* %8, align 1
  %9 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 2
  store i8 1, i8* %9, align 2
  %10 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 3
  store i8 2, i8* %10, align 1
  %11 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 4
  %12 = bitcast [9 x float]* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 64, i1 false) #12
  %13 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 0
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 1
  store i8 14, i8* %14, align 1
  %15 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 2
  store i8 1, i8* %15, align 2
  %16 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 3
  store i8 2, i8* %16, align 1
  %17 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 4
  %18 = bitcast [9 x float]* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 64, i1 false) #12
  %19 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 0
  store i8 1, i8* %19, align 4
  %20 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 1
  store i8 14, i8* %20, align 1
  %21 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 2
  store i8 1, i8* %21, align 2
  %22 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 3
  store i8 2, i8* %22, align 1
  %23 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 4
  %24 = bitcast [9 x float]* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 64, i1 false) #12
  %25 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 0
  store i8 1, i8* %25, align 4
  %26 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 1
  store i8 14, i8* %26, align 1
  %27 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 2
  store i8 1, i8* %27, align 2
  %28 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 3
  store i8 2, i8* %28, align 1
  %29 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 4
  %30 = bitcast [9 x float]* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 64, i1 false) #12
  %31 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 0
  store i8 1, i8* %31, align 4
  %32 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 1
  store i8 14, i8* %32, align 1
  %33 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 2
  store i8 1, i8* %33, align 2
  %34 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 3
  store i8 2, i8* %34, align 1
  %35 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 4
  %36 = bitcast [9 x float]* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 64, i1 false) #12
  %37 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 0
  store i8 1, i8* %37, align 4
  %38 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 1
  store i8 14, i8* %38, align 1
  %39 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 2
  store i8 1, i8* %39, align 2
  %40 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 3
  store i8 2, i8* %40, align 1
  %41 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 4
  %42 = bitcast [9 x float]* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 64, i1 false) #12
  %43 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 0
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 6, i32 6, i32 6, i32 6>, <4 x i32>* %44, align 4
  %45 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 4
  store i32 6, i32* %45, align 4
  %46 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 5
  store i32 6, i32* %46, align 4
  %47 = tail call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* %1) #12
  br i1 %47, label %48, label %56

48:                                               ; preds = %2
  %49 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %1, i64 0, i32 0
  %50 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %49, i64 68, i1 false)
  %51 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %49, i64 68, i1 false)
  %52 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %49, i64 68, i1 false)
  %53 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %49, i64 68, i1 false)
  %54 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* align 4 %49, i64 68, i1 false)
  %55 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %49, i64 68, i1 false)
  br label %56

56:                                               ; preds = %48, %2
  ret void
}

declare zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18DisplayColorSpacesC2ERKNS_10ColorSpaceENS_12BufferFormatE(%"class.gfx::DisplayColorSpaces"*, %"class.gfx::ColorSpace"* dereferenceable(68), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 0
  %5 = alloca { [9 x float], [7 x float] }, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 408, i1 false)
  %6 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 2
  store float 1.000000e+02, float* %6, align 8
  %7 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %union.anon* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  %10 = bitcast { [9 x float], [7 x float] }* %5 to i8*
  %11 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %1, i64 0, i32 2
  %14 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %1, i64 0, i32 3
  %15 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %1, i64 0, i32 4
  %16 = bitcast [9 x float]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10)
  %17 = tail call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* %1) #12
  br i1 %17, label %18, label %23

18:                                               ; preds = %3
  %19 = load i8, i8* %11, align 4
  %20 = load i8, i8* %12, align 1
  %21 = load i8, i8* %13, align 2
  %22 = load i8, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 4 %16, i64 64, i1 false)
  br label %24

23:                                               ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 64, i1 false), !alias.scope !3
  br label %24

24:                                               ; preds = %23, %18
  %25 = phi i8 [ %22, %18 ], [ 2, %23 ]
  %26 = phi i8 [ %21, %18 ], [ 1, %23 ]
  %27 = phi i8 [ %20, %18 ], [ 14, %23 ]
  %28 = phi i8 [ %19, %18 ], [ 1, %23 ]
  %29 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 0
  store i8 %28, i8* %29, align 4
  %30 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 1
  store i8 %27, i8* %30, align 1
  %31 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 2
  store i8 %26, i8* %31, align 2
  %32 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 3
  store i8 %25, i8* %32, align 1
  %33 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0, i32 4
  %34 = bitcast [9 x float]* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* nonnull align 8 %10, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10)
  %35 = tail call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* %1) #12
  br i1 %35, label %37, label %36

36:                                               ; preds = %24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 64, i1 false), !alias.scope !3
  br label %42

37:                                               ; preds = %24
  %38 = load i8, i8* %11, align 4
  %39 = load i8, i8* %12, align 1
  %40 = load i8, i8* %13, align 2
  %41 = load i8, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 4 %16, i64 64, i1 false)
  br label %42

42:                                               ; preds = %37, %36
  %43 = phi i8 [ %41, %37 ], [ 2, %36 ]
  %44 = phi i8 [ %40, %37 ], [ 1, %36 ]
  %45 = phi i8 [ %39, %37 ], [ 14, %36 ]
  %46 = phi i8 [ %38, %37 ], [ 1, %36 ]
  %47 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 0
  store i8 %46, i8* %47, align 4
  %48 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 1
  store i8 %45, i8* %48, align 1
  %49 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 2
  store i8 %44, i8* %49, align 2
  %50 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 3
  store i8 %43, i8* %50, align 1
  %51 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1, i32 4
  %52 = bitcast [9 x float]* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* nonnull align 8 %10, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10)
  %53 = tail call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* %1) #12
  br i1 %53, label %55, label %54

54:                                               ; preds = %42
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 64, i1 false), !alias.scope !3
  br label %60

55:                                               ; preds = %42
  %56 = load i8, i8* %11, align 4
  %57 = load i8, i8* %12, align 1
  %58 = load i8, i8* %13, align 2
  %59 = load i8, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 4 %16, i64 64, i1 false)
  br label %60

60:                                               ; preds = %55, %54
  %61 = phi i8 [ %59, %55 ], [ 2, %54 ]
  %62 = phi i8 [ %58, %55 ], [ 1, %54 ]
  %63 = phi i8 [ %57, %55 ], [ 14, %54 ]
  %64 = phi i8 [ %56, %55 ], [ 1, %54 ]
  %65 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 0
  store i8 %64, i8* %65, align 4
  %66 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 1
  store i8 %63, i8* %66, align 1
  %67 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 2
  store i8 %62, i8* %67, align 2
  %68 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 3
  store i8 %61, i8* %68, align 1
  %69 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2, i32 4
  %70 = bitcast [9 x float]* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* nonnull align 8 %10, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10)
  %71 = tail call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* %1) #12
  br i1 %71, label %73, label %72

72:                                               ; preds = %60
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 64, i1 false), !alias.scope !3
  br label %78

73:                                               ; preds = %60
  %74 = load i8, i8* %11, align 4
  %75 = load i8, i8* %12, align 1
  %76 = load i8, i8* %13, align 2
  %77 = load i8, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 4 %16, i64 64, i1 false)
  br label %78

78:                                               ; preds = %73, %72
  %79 = phi i8 [ %77, %73 ], [ 2, %72 ]
  %80 = phi i8 [ %76, %73 ], [ 1, %72 ]
  %81 = phi i8 [ %75, %73 ], [ 14, %72 ]
  %82 = phi i8 [ %74, %73 ], [ 1, %72 ]
  %83 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 0
  store i8 %82, i8* %83, align 4
  %84 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 1
  store i8 %81, i8* %84, align 1
  %85 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 2
  store i8 %80, i8* %85, align 2
  %86 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 3
  store i8 %79, i8* %86, align 1
  %87 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3, i32 4
  %88 = bitcast [9 x float]* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* nonnull align 8 %10, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10)
  %89 = tail call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* %1) #12
  br i1 %89, label %91, label %90

90:                                               ; preds = %78
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 64, i1 false), !alias.scope !3
  br label %96

91:                                               ; preds = %78
  %92 = load i8, i8* %11, align 4
  %93 = load i8, i8* %12, align 1
  %94 = load i8, i8* %13, align 2
  %95 = load i8, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 4 %16, i64 64, i1 false)
  br label %96

96:                                               ; preds = %91, %90
  %97 = phi i8 [ %95, %91 ], [ 2, %90 ]
  %98 = phi i8 [ %94, %91 ], [ 1, %90 ]
  %99 = phi i8 [ %93, %91 ], [ 14, %90 ]
  %100 = phi i8 [ %92, %91 ], [ 1, %90 ]
  %101 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 0
  store i8 %100, i8* %101, align 4
  %102 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 1
  store i8 %99, i8* %102, align 1
  %103 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 2
  store i8 %98, i8* %103, align 2
  %104 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 3
  store i8 %97, i8* %104, align 1
  %105 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 4
  %106 = bitcast [9 x float]* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %106, i8* nonnull align 8 %10, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10)
  %107 = tail call zeroext i1 @_ZNK3gfx10ColorSpace7IsValidEv(%"class.gfx::ColorSpace"* %1) #12
  br i1 %107, label %109, label %108

108:                                              ; preds = %96
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 64, i1 false), !alias.scope !3
  br label %114

109:                                              ; preds = %96
  %110 = load i8, i8* %11, align 4
  %111 = load i8, i8* %12, align 1
  %112 = load i8, i8* %13, align 2
  %113 = load i8, i8* %14, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 4 %16, i64 64, i1 false)
  br label %114

114:                                              ; preds = %109, %108
  %115 = phi i8 [ %113, %109 ], [ 2, %108 ]
  %116 = phi i8 [ %112, %109 ], [ 1, %108 ]
  %117 = phi i8 [ %111, %109 ], [ 14, %108 ]
  %118 = phi i8 [ %110, %109 ], [ 1, %108 ]
  %119 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 0
  store i8 %118, i8* %119, align 4
  %120 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 1
  store i8 %117, i8* %120, align 1
  %121 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 2
  store i8 %116, i8* %121, align 2
  %122 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 3
  store i8 %115, i8* %122, align 1
  %123 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 4
  %124 = bitcast [9 x float]* %123 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* nonnull align 8 %10, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10)
  %125 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 0
  %126 = insertelement <4 x i32> undef, i32 %2, i32 0
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> zeroinitializer
  %128 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %128, align 4
  %129 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 4
  store i32 %2, i32* %129, align 4
  %130 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 5
  store i32 %2, i32* %130, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3gfx18DisplayColorSpaces22SetOutputBufferFormatsENS_12BufferFormatES1_(%"class.gfx::DisplayColorSpaces"* nocapture, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 1
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 2
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 3
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 4
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 5
  store i32 %2, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx18DisplayColorSpaces34SetOutputColorSpaceAndBufferFormatENS_17ContentColorUsageEbRKNS_10ColorSpaceENS_12BufferFormatE(%"class.gfx::DisplayColorSpaces"* nocapture, i8 zeroext, i1 zeroext, %"class.gfx::ColorSpace"* nocapture readonly dereferenceable(68), i32) local_unnamed_addr #0 align 2 {
  switch i8 %1, label %12 [
    i8 0, label %6
    i8 1, label %8
    i8 2, label %10
  ]

6:                                                ; preds = %5
  %7 = zext i1 %2 to i64
  br label %13

8:                                                ; preds = %5
  %9 = select i1 %2, i64 3, i64 2
  br label %13

10:                                               ; preds = %5
  %11 = select i1 %2, i64 5, i64 4
  br label %13

12:                                               ; preds = %5
  unreachable

13:                                               ; preds = %6, %8, %10
  %14 = phi i64 [ %11, %10 ], [ %9, %8 ], [ %7, %6 ]
  %15 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 %14, i32 0
  %16 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 68, i1 false)
  %17 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 %14
  store i32 %4, i32* %17, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx18DisplayColorSpaces19GetOutputColorSpaceENS_17ContentColorUsageEb(%"class.gfx::ColorSpace"* noalias nocapture sret, %"class.gfx::DisplayColorSpaces"* nocapture readonly, i8 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  switch i8 %2, label %11 [
    i8 0, label %5
    i8 1, label %7
    i8 2, label %9
  ]

5:                                                ; preds = %4
  %6 = zext i1 %3 to i64
  br label %12

7:                                                ; preds = %4
  %8 = select i1 %3, i64 3, i64 2
  br label %12

9:                                                ; preds = %4
  %10 = select i1 %3, i64 5, i64 4
  br label %12

11:                                               ; preds = %4
  unreachable

12:                                               ; preds = %5, %7, %9
  %13 = phi i64 [ %10, %9 ], [ %8, %7 ], [ %6, %5 ]
  %14 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 %13, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 68, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3gfx18DisplayColorSpaces21GetOutputBufferFormatENS_17ContentColorUsageEb(%"class.gfx::DisplayColorSpaces"* nocapture readonly, i8 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  switch i8 %1, label %10 [
    i8 0, label %4
    i8 1, label %6
    i8 2, label %8
  ]

4:                                                ; preds = %3
  %5 = zext i1 %2 to i64
  br label %11

6:                                                ; preds = %3
  %7 = select i1 %2, i64 3, i64 2
  br label %11

8:                                                ; preds = %3
  %9 = select i1 %2, i64 5, i64 4
  br label %11

10:                                               ; preds = %3
  unreachable

11:                                               ; preds = %4, %6, %8
  %12 = phi i64 [ %9, %8 ], [ %7, %6 ], [ %5, %4 ]
  %13 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 %12
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx18DisplayColorSpaces19GetRasterColorSpaceEv(%"class.gfx::ColorSpace"* noalias nocapture sret, %"class.gfx::DisplayColorSpaces"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 4, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 68, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx18DisplayColorSpaces24GetCompositingColorSpaceEbNS_17ContentColorUsageE(%"class.gfx::ColorSpace"* noalias sret, %"class.gfx::DisplayColorSpaces"* nocapture readonly, i1 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 getelementptr inbounds (%"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* @__const._ZNK3gfx18DisplayColorSpaces24GetCompositingColorSpaceEbNS_17ContentColorUsageE.result, i64 0, i32 0), i64 68, i1 false)
  switch i8 %3, label %12 [
    i8 0, label %6
    i8 1, label %8
    i8 2, label %10
  ]

6:                                                ; preds = %4
  %7 = zext i1 %2 to i64
  br label %13

8:                                                ; preds = %4
  %9 = select i1 %2, i64 3, i64 2
  br label %13

10:                                               ; preds = %4
  %11 = select i1 %2, i64 5, i64 4
  br label %13

12:                                               ; preds = %4
  unreachable

13:                                               ; preds = %6, %8, %10
  %14 = phi i64 [ %11, %10 ], [ %9, %8 ], [ %7, %6 ]
  %15 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 %14, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %15, i64 68, i1 false) #12
  %16 = tail call zeroext i1 @_ZNK3gfx10ColorSpace21IsSuitableForBlendingEv(%"class.gfx::ColorSpace"* %0) #12
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  store i8 1, i8* %5, align 4
  %18 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 1
  store i8 20, i8* %18, align 1
  %19 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 2
  store i8 1, i8* %19, align 2
  %20 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 3
  store i8 2, i8* %20, align 1
  %21 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 4
  %22 = bitcast [9 x float]* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 64, i1 false)
  br label %23

23:                                               ; preds = %17, %13
  ret void
}

declare zeroext i1 @_ZNK3gfx10ColorSpace21IsSuitableForBlendingEv(%"class.gfx::ColorSpace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx18DisplayColorSpaces11SupportsHDREv(%"class.gfx::DisplayColorSpaces"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.gfx::ColorSpace", align 4
  %3 = alloca %"class.gfx::ColorSpace", align 4
  %4 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %5, i64 68, i1 false) #12
  %6 = call zeroext i1 @_ZNK3gfx10ColorSpace5IsHDREv(%"class.gfx::ColorSpace"* nonnull %2) #12
  %7 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %7) #12
  br i1 %6, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %7, i8* align 4 %9, i64 68, i1 false) #12
  %10 = call zeroext i1 @_ZNK3gfx10ColorSpace5IsHDREv(%"class.gfx::ColorSpace"* nonnull %3) #12
  br label %11

11:                                               ; preds = %8, %1
  %12 = phi i1 [ true, %1 ], [ %10, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %4) #12
  ret i1 %12
}

declare zeroext i1 @_ZNK3gfx10ColorSpace5IsHDREv(%"class.gfx::ColorSpace"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx18DisplayColorSpaces23GetScreenInfoColorSpaceEv(%"class.gfx::ColorSpace"* noalias nocapture sret, %"class.gfx::DisplayColorSpaces"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 4, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 68, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx18DisplayColorSpaces9ToStringsEPNSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEPNS2_INS_10ColorSpaceENS6_ISC_EEEEPNS2_INS_12BufferFormatENS6_ISG_EEEE(%"class.gfx::DisplayColorSpaces"*, %"class.std::__1::vector"*, %"class.std::__1::vector.7"*, %"class.std::__1::vector.14"*) local_unnamed_addr #0 align 2 {
  %5 = alloca [6 x i8*], align 16
  %6 = alloca [5 x i8*], align 16
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast [6 x i8*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  %10 = bitcast [6 x i8*]* %5 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)>, <2 x i8*>* %10, align 16
  %11 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 2
  %12 = bitcast i8** %11 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %12, align 16
  %13 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 4
  %14 = bitcast i8** %13 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0)>, <2 x i8*>* %14, align 16
  %15 = bitcast [5 x i8*]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #12
  %16 = bitcast [5 x i8*]* %6 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0)>, <2 x i8*>* %16, align 16
  %17 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 2
  %18 = bitcast i8** %17 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)>, <2 x i8*>* %18, align 16
  %19 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 4
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i8** %19, align 16
  %20 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"** %31 to i64*
  %34 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast i32** %34 to i64*
  %37 = bitcast %"class.std::__1::vector.14"* %3 to i64*
  %38 = bitcast i32** %35 to i64*
  %39 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %2, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"class.gfx::ColorSpace"** %40 to i64*
  %43 = bitcast %"class.std::__1::vector.7"* %2 to i64*
  %44 = bitcast %"class.gfx::ColorSpace"** %41 to i64*
  %45 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %2, i64 0, i32 0, i32 0
  br label %46

46:                                               ; preds = %4, %284
  %47 = phi i64 [ 0, %4 ], [ %65, %284 ]
  %48 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 %47
  %49 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 %47
  %50 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 %47
  %51 = call zeroext i1 @_ZNK3gfx10ColorSpaceeqERKS0_(%"class.gfx::ColorSpace"* %48, %"class.gfx::ColorSpace"* dereferenceable(68) %50) #12
  br i1 %51, label %52, label %64

52:                                               ; preds = %46, %60
  %53 = phi i64 [ %61, %60 ], [ %47, %46 ]
  %54 = load i32, i32* %49, align 4
  %55 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 %53
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %54, %56
  %58 = icmp ne i64 %53, 6
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %64

60:                                               ; preds = %52
  %61 = add i64 %53, 1
  %62 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 %61
  %63 = call zeroext i1 @_ZNK3gfx10ColorSpaceeqERKS0_(%"class.gfx::ColorSpace"* %48, %"class.gfx::ColorSpace"* dereferenceable(68) %62) #12
  br i1 %63, label %52, label %64

64:                                               ; preds = %60, %52, %46
  %65 = phi i64 [ %47, %46 ], [ %61, %60 ], [ %53, %52 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #12
  switch i64 %47, label %88 [
    i64 0, label %66
    i64 2, label %287
    i64 4, label %289
  ]

66:                                               ; preds = %64
  switch i64 %65, label %88 [
    i64 2, label %69
    i64 4, label %67
    i64 6, label %68
  ]

67:                                               ; preds = %66
  br label %69

68:                                               ; preds = %66
  br label %69

69:                                               ; preds = %66, %68, %67, %289, %287
  %70 = phi i64 [ 0, %66 ], [ 1, %287 ], [ 3, %289 ], [ 2, %67 ], [ 4, %68 ]
  %71 = getelementptr inbounds [5 x i8*], [5 x i8*]* %6, i64 0, i64 %70
  %72 = load i8*, i8** %71, align 8
  %73 = load i8, i8* %72, align 1
  %74 = call i1 @llvm.is.constant.i8(i8 %73) #12
  br i1 %74, label %75, label %86

75:                                               ; preds = %69
  %76 = call i64 @strlen(i8* %72) #12
  %77 = icmp ult i64 %76, 23
  br i1 %77, label %78, label %84

78:                                               ; preds = %75
  %79 = trunc i64 %76 to i8
  store i8 %79, i8* %24, align 1
  %80 = icmp eq i64 %76, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 1 %72, i64 %76, i1 false) #12
  br label %82

82:                                               ; preds = %81, %78
  %83 = getelementptr inbounds i8, i8* %20, i64 %76
  store i8 0, i8* %83, align 1
  br label %88

84:                                               ; preds = %75
  %85 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %72, i64 %76) #12
  br label %88

86:                                               ; preds = %69
  %87 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* %72) #12
  br label %88

88:                                               ; preds = %66, %64, %287, %289, %86, %84, %82
  %89 = load i8, i8* %24, align 1
  %90 = icmp slt i8 %89, 0
  %91 = load i64, i64* %22, align 8
  %92 = zext i8 %89 to i64
  %93 = select i1 %90, i64 %91, i64 %92
  %94 = icmp eq i64 %93, 0
  %95 = icmp ult i64 %47, %65
  %96 = and i1 %94, %95
  br i1 %96, label %97, label %141

97:                                               ; preds = %88
  %98 = add i64 %65, -1
  br label %99

99:                                               ; preds = %138, %97
  %100 = phi i64 [ %47, %97 ], [ %139, %138 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #12
  %101 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 %100
  %102 = load i8*, i8** %101, align 8
  %103 = call i64 @strlen(i8* %102) #12
  %104 = icmp ugt i64 %103, -17
  br i1 %104, label %105, label %107

105:                                              ; preds = %99
  %106 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %106) #13
  unreachable

107:                                              ; preds = %99
  %108 = icmp ult i64 %103, 23
  br i1 %108, label %114, label %109

109:                                              ; preds = %107
  %110 = add nuw i64 %103, 16
  %111 = and i64 %110, -16
  %112 = call i8* @_Znwm(i64 %111) #14
  store i8* %112, i8** %26, align 8
  %113 = or i64 %111, -9223372036854775808
  store i64 %113, i64* %27, align 8
  store i64 %103, i64* %28, align 8
  br label %117

114:                                              ; preds = %107
  %115 = trunc i64 %103 to i8
  store i8 %115, i8* %30, align 1
  %116 = icmp eq i64 %103, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %114, %109
  %118 = phi i8* [ %112, %109 ], [ %25, %114 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %118, i8* align 1 %102, i64 %103, i1 false) #12
  br label %119

119:                                              ; preds = %114, %117
  %120 = phi i8* [ %25, %114 ], [ %118, %117 ]
  %121 = getelementptr inbounds i8, i8* %120, i64 %103
  store i8 0, i8* %121, align 1
  %122 = load i8, i8* %30, align 1
  %123 = icmp slt i8 %122, 0
  %124 = load i8*, i8** %26, align 8
  %125 = load i64, i64* %28, align 8
  %126 = zext i8 %122 to i64
  %127 = select i1 %123, i8* %124, i8* %25
  %128 = select i1 %123, i64 %125, i64 %126
  %129 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %127, i64 %128) #12
  %130 = load i8, i8* %30, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %119
  %133 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %133) #14
  br label %134

134:                                              ; preds = %119, %132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #12
  %135 = icmp eq i64 %100, %98
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0)) #12
  br label %138

138:                                              ; preds = %134, %136
  %139 = add i64 %100, 1
  %140 = icmp eq i64 %139, %65
  br i1 %140, label %141, label %99

141:                                              ; preds = %138, %88
  %142 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %143 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %144 = icmp eq %"class.std::__1::basic_string"* %142, %143
  br i1 %144, label %156, label %145

145:                                              ; preds = %141
  %146 = load i8, i8* %24, align 1
  %147 = icmp slt i8 %146, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %145
  %149 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* nonnull align 8 %20, i64 24, i1 false) #12
  br label %153

150:                                              ; preds = %145
  %151 = load i8*, i8** %21, align 8
  %152 = load i64, i64* %22, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %142, i8* %151, i64 %152) #12
  br label %153

153:                                              ; preds = %150, %148
  %154 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %142, i64 1
  %155 = ptrtoint %"class.std::__1::basic_string"* %154 to i64
  store i64 %155, i64* %33, align 8
  br label %157

156:                                              ; preds = %141
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #12
  br label %157

157:                                              ; preds = %153, %156
  %158 = load i32*, i32** %34, align 8
  %159 = load i32*, i32** %35, align 8
  %160 = icmp eq i32* %158, %159
  %161 = ptrtoint i32* %159 to i64
  br i1 %160, label %166, label %162

162:                                              ; preds = %157
  %163 = load i32, i32* %49, align 4
  store i32 %163, i32* %158, align 4
  %164 = getelementptr inbounds i32, i32* %158, i64 1
  %165 = ptrtoint i32* %164 to i64
  store i64 %165, i64* %36, align 8
  br label %219

166:                                              ; preds = %157
  %167 = ptrtoint i32* %158 to i64
  %168 = load i64, i64* %37, align 8
  %169 = sub i64 %167, %168
  %170 = ashr exact i64 %169, 2
  %171 = add nsw i64 %170, 1
  %172 = icmp ugt i64 %171, 4611686018427387903
  br i1 %172, label %173, label %175

173:                                              ; preds = %166
  %174 = bitcast %"class.std::__1::vector.14"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %174) #13
  unreachable

175:                                              ; preds = %166
  %176 = sub i64 %161, %168
  %177 = ashr exact i64 %176, 2
  %178 = icmp ult i64 %177, 2305843009213693951
  br i1 %178, label %179, label %187

179:                                              ; preds = %175
  %180 = ashr exact i64 %176, 1
  %181 = icmp ult i64 %180, %171
  %182 = select i1 %181, i64 %171, i64 %180
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %192, label %184

184:                                              ; preds = %179
  %185 = icmp ugt i64 %182, 4611686018427387903
  br i1 %185, label %186, label %187

186:                                              ; preds = %184
  call void @abort() #13
  unreachable

187:                                              ; preds = %184, %175
  %188 = phi i64 [ %182, %184 ], [ 4611686018427387903, %175 ]
  %189 = shl i64 %188, 2
  %190 = call i8* @_Znwm(i64 %189) #14
  %191 = bitcast i8* %190 to i32*
  br label %192

192:                                              ; preds = %187, %179
  %193 = phi i64 [ %188, %187 ], [ 0, %179 ]
  %194 = phi i32* [ %191, %187 ], [ null, %179 ]
  %195 = getelementptr inbounds i32, i32* %194, i64 %170
  %196 = getelementptr inbounds i32, i32* %194, i64 %193
  %197 = ptrtoint i32* %196 to i64
  %198 = load i32, i32* %49, align 4
  store i32 %198, i32* %195, align 4
  %199 = getelementptr inbounds i32, i32* %195, i64 1
  %200 = ptrtoint i32* %199 to i64
  %201 = load i32*, i32** %39, align 8
  %202 = load i64, i64* %36, align 8
  %203 = ptrtoint i32* %201 to i64
  %204 = sub i64 %202, %203
  %205 = ashr exact i64 %204, 2
  %206 = sub nsw i64 0, %205
  %207 = getelementptr inbounds i32, i32* %195, i64 %206
  %208 = ptrtoint i32* %207 to i64
  %209 = icmp sgt i64 %204, 0
  br i1 %209, label %210, label %214

210:                                              ; preds = %192
  %211 = bitcast i32* %207 to i8*
  %212 = bitcast i32* %201 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %212, i64 %204, i1 false) #12
  %213 = load i32*, i32** %39, align 8
  br label %214

214:                                              ; preds = %210, %192
  %215 = phi i32* [ %201, %192 ], [ %213, %210 ]
  store i64 %208, i64* %37, align 8
  store i64 %200, i64* %36, align 8
  store i64 %197, i64* %38, align 8
  %216 = icmp eq i32* %215, null
  br i1 %216, label %219, label %217

217:                                              ; preds = %214
  %218 = bitcast i32* %215 to i8*
  call void @_ZdlPv(i8* %218) #14
  br label %219

219:                                              ; preds = %162, %214, %217
  %220 = load %"class.gfx::ColorSpace"*, %"class.gfx::ColorSpace"** %40, align 8
  %221 = load %"class.gfx::ColorSpace"*, %"class.gfx::ColorSpace"** %41, align 8
  %222 = icmp eq %"class.gfx::ColorSpace"* %220, %221
  %223 = ptrtoint %"class.gfx::ColorSpace"* %221 to i64
  br i1 %222, label %229, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %220, i64 0, i32 0
  %226 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %48, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %225, i8* align 4 %226, i64 68, i1 false) #12
  %227 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %220, i64 1
  %228 = ptrtoint %"class.gfx::ColorSpace"* %227 to i64
  store i64 %228, i64* %42, align 8
  br label %279

229:                                              ; preds = %219
  %230 = ptrtoint %"class.gfx::ColorSpace"* %220 to i64
  %231 = load i64, i64* %43, align 8
  %232 = sub i64 %230, %231
  %233 = sdiv exact i64 %232, 68
  %234 = add nsw i64 %233, 1
  %235 = icmp ugt i64 %234, 271275648142787523
  br i1 %235, label %236, label %238

236:                                              ; preds = %229
  %237 = bitcast %"class.std::__1::vector.7"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %237) #13
  unreachable

238:                                              ; preds = %229
  %239 = sub i64 %223, %231
  %240 = sdiv exact i64 %239, 68
  %241 = icmp ult i64 %240, 135637824071393761
  br i1 %241, label %242, label %247

242:                                              ; preds = %238
  %243 = shl nsw i64 %240, 1
  %244 = icmp ult i64 %243, %234
  %245 = select i1 %244, i64 %234, i64 %243
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %252, label %247

247:                                              ; preds = %242, %238
  %248 = phi i64 [ %245, %242 ], [ 271275648142787523, %238 ]
  %249 = mul i64 %248, 68
  %250 = call i8* @_Znwm(i64 %249) #14
  %251 = bitcast i8* %250 to %"class.gfx::ColorSpace"*
  br label %252

252:                                              ; preds = %247, %242
  %253 = phi i64 [ %248, %247 ], [ 0, %242 ]
  %254 = phi %"class.gfx::ColorSpace"* [ %251, %247 ], [ null, %242 ]
  %255 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %254, i64 %233
  %256 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %254, i64 %253
  %257 = ptrtoint %"class.gfx::ColorSpace"* %256 to i64
  %258 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %255, i64 0, i32 0
  %259 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %48, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %258, i8* align 4 %259, i64 68, i1 false) #12
  %260 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %255, i64 1
  %261 = ptrtoint %"class.gfx::ColorSpace"* %260 to i64
  %262 = load %"class.gfx::ColorSpace"*, %"class.gfx::ColorSpace"** %45, align 8
  %263 = load i64, i64* %42, align 8
  %264 = ptrtoint %"class.gfx::ColorSpace"* %262 to i64
  %265 = sub i64 %263, %264
  %266 = sdiv exact i64 %265, -68
  %267 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %255, i64 %266
  %268 = ptrtoint %"class.gfx::ColorSpace"* %267 to i64
  %269 = icmp sgt i64 %265, 0
  br i1 %269, label %270, label %274

270:                                              ; preds = %252
  %271 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %267, i64 0, i32 0
  %272 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %262, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %271, i8* align 4 %272, i64 %265, i1 false) #12
  %273 = load %"class.gfx::ColorSpace"*, %"class.gfx::ColorSpace"** %45, align 8
  br label %274

274:                                              ; preds = %270, %252
  %275 = phi %"class.gfx::ColorSpace"* [ %262, %252 ], [ %273, %270 ]
  store i64 %268, i64* %43, align 8
  store i64 %261, i64* %42, align 8
  store i64 %257, i64* %44, align 8
  %276 = icmp eq %"class.gfx::ColorSpace"* %275, null
  br i1 %276, label %279, label %277

277:                                              ; preds = %274
  %278 = getelementptr inbounds %"class.gfx::ColorSpace", %"class.gfx::ColorSpace"* %275, i64 0, i32 0
  call void @_ZdlPv(i8* %278) #14
  br label %279

279:                                              ; preds = %224, %274, %277
  %280 = load i8, i8* %24, align 1
  %281 = icmp slt i8 %280, 0
  br i1 %281, label %282, label %284

282:                                              ; preds = %279
  %283 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %283) #14
  br label %284

284:                                              ; preds = %279, %282
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  %285 = icmp eq i64 %65, 6
  br i1 %285, label %286, label %46

286:                                              ; preds = %284
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  ret void

287:                                              ; preds = %64
  %288 = icmp eq i64 %65, 4
  br i1 %288, label %69, label %88

289:                                              ; preds = %64
  %290 = icmp eq i64 %65, 6
  br i1 %290, label %69, label %88
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK3gfx10ColorSpaceeqERKS0_(%"class.gfx::ColorSpace"*, %"class.gfx::ColorSpace"* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx18DisplayColorSpaceseqERKS0_(%"class.gfx::DisplayColorSpaces"*, %"class.gfx::DisplayColorSpaces"* dereferenceable(472)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 0
  %4 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 0
  %5 = tail call zeroext i1 @_ZNK3gfx10ColorSpaceneERKS0_(%"class.gfx::ColorSpace"* %3, %"class.gfx::ColorSpace"* dereferenceable(68) %4) #12
  br i1 %5, label %17, label %10

6:                                                ; preds = %10
  %7 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 1
  %8 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 1
  %9 = tail call zeroext i1 @_ZNK3gfx10ColorSpaceneERKS0_(%"class.gfx::ColorSpace"* %7, %"class.gfx::ColorSpace"* dereferenceable(68) %8) #12
  br i1 %9, label %17, label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 1, i64 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %6, label %17

16:                                               ; preds = %65
  br label %17

17:                                               ; preds = %2, %10, %6, %19, %25, %29, %35, %39, %45, %49, %55, %59, %65, %16
  %18 = phi i1 [ true, %16 ], [ false, %65 ], [ false, %59 ], [ false, %55 ], [ false, %49 ], [ false, %45 ], [ false, %39 ], [ false, %35 ], [ false, %29 ], [ false, %25 ], [ false, %19 ], [ false, %6 ], [ false, %10 ], [ false, %2 ]
  ret i1 %18

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 1, i64 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %25, label %17

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 2
  %27 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 2
  %28 = tail call zeroext i1 @_ZNK3gfx10ColorSpaceneERKS0_(%"class.gfx::ColorSpace"* %26, %"class.gfx::ColorSpace"* dereferenceable(68) %27) #12
  br i1 %28, label %17, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 1, i64 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %31, %33
  br i1 %34, label %35, label %17

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 3
  %37 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 3
  %38 = tail call zeroext i1 @_ZNK3gfx10ColorSpaceneERKS0_(%"class.gfx::ColorSpace"* %36, %"class.gfx::ColorSpace"* dereferenceable(68) %37) #12
  br i1 %38, label %17, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 3
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 1, i64 3
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %45, label %17

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 4
  %47 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 4
  %48 = tail call zeroext i1 @_ZNK3gfx10ColorSpaceneERKS0_(%"class.gfx::ColorSpace"* %46, %"class.gfx::ColorSpace"* dereferenceable(68) %47) #12
  br i1 %48, label %17, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 4
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 1, i64 4
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %51, %53
  br i1 %54, label %55, label %17

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 0, i64 5
  %57 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 0, i64 5
  %58 = tail call zeroext i1 @_ZNK3gfx10ColorSpaceneERKS0_(%"class.gfx::ColorSpace"* %56, %"class.gfx::ColorSpace"* dereferenceable(68) %57) #12
  br i1 %58, label %17, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 1, i64 5
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 1, i64 5
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %61, %63
  br i1 %64, label %65, label %17

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %0, i64 0, i32 2
  %67 = load float, float* %66, align 8
  %68 = getelementptr inbounds %"class.gfx::DisplayColorSpaces", %"class.gfx::DisplayColorSpaces"* %1, i64 0, i32 2
  %69 = load float, float* %68, align 8
  %70 = fcmp une float %67, %69
  br i1 %70, label %17, label %16
}

declare zeroext i1 @_ZNK3gfx10ColorSpaceneERKS0_(%"class.gfx::ColorSpace"*, %"class.gfx::ColorSpace"* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3gfx18DisplayColorSpacesneERKS0_(%"class.gfx::DisplayColorSpaces"*, %"class.gfx::DisplayColorSpaces"* dereferenceable(472)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK3gfx18DisplayColorSpaceseqERKS0_(%"class.gfx::DisplayColorSpaces"* %0, %"class.gfx::DisplayColorSpaces"* dereferenceable(472) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

declare void @_ZN3gfx17HDRStaticMetadataC1ERKS0_(%"struct.gfx::HDRStaticMetadata"*, %"struct.gfx::HDRStaticMetadata"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #12
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #12
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #14
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #14
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3gfx10ColorSpace10CreateSRGBEv: argument 0"}
!5 = distinct !{!5, !"_ZN3gfx10ColorSpace10CreateSRGBEv"}
