; ModuleID = '../../third_party/libvpx/source/libvpx/vpx_dsp/sum_squares.c'
source_filename = "../../third_party/libvpx/source/libvpx/vpx_dsp/sum_squares.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @vpx_sum_squares_2d_i16_c(i16* nocapture readonly, i32, i32) local_unnamed_addr #0 {
  %4 = icmp sgt i32 %2, 0
  br i1 %4, label %5, label %73

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = zext i32 %2 to i64
  %8 = add nsw i64 %7, -1
  %9 = and i64 %7, 3
  %10 = icmp ult i64 %8, 3
  %11 = sub nsw i64 %7, %9
  %12 = icmp eq i64 %9, 0
  br label %13

13:                                               ; preds = %5, %68
  %14 = phi i16* [ %0, %5 ], [ %70, %68 ]
  %15 = phi i64 [ 0, %5 ], [ %69, %68 ]
  %16 = phi i32 [ 0, %5 ], [ %71, %68 ]
  br i1 %10, label %51, label %17

17:                                               ; preds = %13, %17
  %18 = phi i64 [ %48, %17 ], [ 0, %13 ]
  %19 = phi i64 [ %47, %17 ], [ %15, %13 ]
  %20 = phi i64 [ %49, %17 ], [ %11, %13 ]
  %21 = getelementptr inbounds i16, i16* %14, i64 %18
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i32
  %24 = mul nsw i32 %23, %23
  %25 = zext i32 %24 to i64
  %26 = add i64 %19, %25
  %27 = or i64 %18, 1
  %28 = getelementptr inbounds i16, i16* %14, i64 %27
  %29 = load i16, i16* %28, align 2
  %30 = sext i16 %29 to i32
  %31 = mul nsw i32 %30, %30
  %32 = zext i32 %31 to i64
  %33 = add i64 %26, %32
  %34 = or i64 %18, 2
  %35 = getelementptr inbounds i16, i16* %14, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = sext i16 %36 to i32
  %38 = mul nsw i32 %37, %37
  %39 = zext i32 %38 to i64
  %40 = add i64 %33, %39
  %41 = or i64 %18, 3
  %42 = getelementptr inbounds i16, i16* %14, i64 %41
  %43 = load i16, i16* %42, align 2
  %44 = sext i16 %43 to i32
  %45 = mul nsw i32 %44, %44
  %46 = zext i32 %45 to i64
  %47 = add i64 %40, %46
  %48 = add nuw nsw i64 %18, 4
  %49 = add i64 %20, -4
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %17

51:                                               ; preds = %17, %13
  %52 = phi i64 [ undef, %13 ], [ %47, %17 ]
  %53 = phi i64 [ 0, %13 ], [ %48, %17 ]
  %54 = phi i64 [ %15, %13 ], [ %47, %17 ]
  br i1 %12, label %68, label %55

55:                                               ; preds = %51, %55
  %56 = phi i64 [ %65, %55 ], [ %53, %51 ]
  %57 = phi i64 [ %64, %55 ], [ %54, %51 ]
  %58 = phi i64 [ %66, %55 ], [ %9, %51 ]
  %59 = getelementptr inbounds i16, i16* %14, i64 %56
  %60 = load i16, i16* %59, align 2
  %61 = sext i16 %60 to i32
  %62 = mul nsw i32 %61, %61
  %63 = zext i32 %62 to i64
  %64 = add i64 %57, %63
  %65 = add nuw nsw i64 %56, 1
  %66 = add i64 %58, -1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %55, !llvm.loop !2

68:                                               ; preds = %55, %51
  %69 = phi i64 [ %52, %51 ], [ %64, %55 ]
  %70 = getelementptr inbounds i16, i16* %14, i64 %6
  %71 = add nuw nsw i32 %16, 1
  %72 = icmp eq i32 %71, %2
  br i1 %72, label %73, label %13

73:                                               ; preds = %68, %3
  %74 = phi i64 [ 0, %3 ], [ %69, %68 ]
  ret i64 %74
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
