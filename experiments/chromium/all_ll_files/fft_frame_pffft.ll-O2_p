; ModuleID = '../../third_party/blink/renderer/platform/audio/pffft/fft_frame_pffft.cc'
source_filename = "../../third_party/blink/renderer/platform/audio/pffft/fft_frame_pffft.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<unsigned int, std::__1::unique_ptr<blink::FFTFrame::FFTSetup, std::__1::default_delete<blink::FFTFrame::FFTSetup> >, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<std::__1::unique_ptr<blink::FFTFrame::FFTSetup, std::__1::default_delete<blink::FFTFrame::FFTSetup> > >, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<unsigned int, std::__1::unique_ptr<blink::FFTFrame::FFTSetup, std::__1::default_delete<blink::FFTFrame::FFTSetup> >, WTF::IntHash<unsigned int>, WTF::HashTraits<unsigned int>, WTF::HashTraits<std::__1::unique_ptr<blink::FFTFrame::FFTSetup, std::__1::default_delete<blink::FFTFrame::FFTSetup> > >, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::FFTFrame::FFTSetup" = type { %struct.PFFFT_Setup* }
%struct.PFFFT_Setup = type opaque
%"class.blink::FFTFrame" = type { i32, i32, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::FFTFrame::FFTSetup"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERjS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZN5blink10AudioArrayIfE8AllocateEm = comdat any

@_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call = internal unnamed_addr global i1 false, align 1
@_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups = internal global i64 0, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEEEEPKcv = private unnamed_addr constant [183 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned int, std::__1::unique_ptr<blink::FFTFrame::FFTSetup, std::__1::default_delete<blink::FFTFrame::FFTSetup> > >]\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"n <= std::numeric_limits<unsigned>::max() / sizeof(T)\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/platform/audio/audio_array.h\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"allocation_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioArray<float>]\00", align 1

@_ZN5blink8FFTFrame8FFTSetupC1Ej = hidden unnamed_addr alias void (%"class.blink::FFTFrame::FFTSetup"*, i32), void (%"class.blink::FFTFrame::FFTSetup"*, i32)* @_ZN5blink8FFTFrame8FFTSetupC2Ej
@_ZN5blink8FFTFrame8FFTSetupD1Ev = hidden unnamed_addr alias void (%"class.blink::FFTFrame::FFTSetup"*), void (%"class.blink::FFTFrame::FFTSetup"*)* @_ZN5blink8FFTFrame8FFTSetupD2Ev
@_ZN5blink8FFTFrameC1Ej = hidden unnamed_addr alias void (%"class.blink::FFTFrame"*, i32), void (%"class.blink::FFTFrame"*, i32)* @_ZN5blink8FFTFrameC2Ej
@_ZN5blink8FFTFrameC1Ev = hidden unnamed_addr alias void (%"class.blink::FFTFrame"*), void (%"class.blink::FFTFrame"*)* @_ZN5blink8FFTFrameC2Ev
@_ZN5blink8FFTFrameC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::FFTFrame"*, %"class.blink::FFTFrame"*), void (%"class.blink::FFTFrame"*, %"class.blink::FFTFrame"*)* @_ZN5blink8FFTFrameC2ERKS0_
@_ZN5blink8FFTFrameD1Ev = hidden unnamed_addr alias void (%"class.blink::FFTFrame"*), void (%"class.blink::FFTFrame"*)* @_ZN5blink8FFTFrameD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrame8FFTSetupC2Ej(%"class.blink::FFTFrame::FFTSetup"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = tail call %struct.PFFFT_Setup* @pffft_new_setup(i32 %1, i32 0) #11
  %4 = getelementptr inbounds %"class.blink::FFTFrame::FFTSetup", %"class.blink::FFTFrame::FFTSetup"* %0, i64 0, i32 0
  store %struct.PFFFT_Setup* %3, %struct.PFFFT_Setup** %4, align 8
  ret void
}

declare %struct.PFFFT_Setup* @pffft_new_setup(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrame8FFTSetupD2Ev(%"class.blink::FFTFrame::FFTSetup"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FFTFrame::FFTSetup", %"class.blink::FFTFrame::FFTSetup"* %0, i64 0, i32 0
  %3 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %2, align 8
  tail call void @pffft_destroy_setup(%struct.PFFFT_Setup* %3) #11
  ret void
}

declare void @pffft_destroy_setup(%struct.PFFFT_Setup*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap"* @_ZN5blink8FFTFrame9FFTSetupsEv() local_unnamed_addr #0 align 2 {
  %1 = load i1, i1* @_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call, align 1
  br i1 %1, label %3, label %2

2:                                                ; preds = %0
  store i1 true, i1* @_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call, align 1
  br label %3

3:                                                ; preds = %0, %2
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups) #11
  br label %10

10:                                               ; preds = %6, %9, %3
  ret %"class.WTF::HashMap"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups to %"class.WTF::HashMap"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrame25InitializeFFTSetupForSizeEj(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  store i32 %0, i32* %2, align 4
  %4 = load i1, i1* @_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call, align 1
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  store i1 true, i1* @_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call, align 1
  br label %6

6:                                                ; preds = %5, %1
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13, !prof !2

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups) #11
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups) #11
  br label %13

13:                                               ; preds = %6, %9, %12
  %14 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups to %"struct.WTF::KeyValuePair"**), align 8
  %15 = icmp eq %"struct.WTF::KeyValuePair"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = load i32, i32* %2, align 4
  br label %73

18:                                               ; preds = %13
  %19 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %20 = add i32 %19, -1
  %21 = zext i32 %20 to i64
  %22 = load i32, i32* %2, align 4
  %23 = shl i32 %22, 15
  %24 = xor i32 %23, -1
  %25 = add i32 %22, %24
  %26 = lshr i32 %25, 10
  %27 = xor i32 %26, %25
  %28 = mul i32 %27, 9
  %29 = lshr i32 %28, 6
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 11
  %32 = xor i32 %31, -1
  %33 = add i32 %30, %32
  %34 = lshr i32 %33, 16
  %35 = xor i32 %34, %33
  %36 = and i32 %35, %20
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %22
  br i1 %41, label %70, label %42

42:                                               ; preds = %18
  %43 = xor i32 %35, -1
  %44 = lshr i32 %33, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %61, %42
  %57 = phi i32 [ %40, %42 ], [ %68, %61 ]
  %58 = phi i64 [ %37, %42 ], [ %65, %61 ]
  %59 = phi i64 [ 0, %42 ], [ %63, %61 ]
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %73, label %61

61:                                               ; preds = %56
  %62 = icmp eq i64 %59, 0
  %63 = select i1 %62, i64 %55, i64 %59
  %64 = add i64 %63, %58
  %65 = and i64 %64, %21
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 %65
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %22
  br i1 %69, label %70, label %56

70:                                               ; preds = %61, %18
  %71 = phi %"struct.WTF::KeyValuePair"* [ %38, %18 ], [ %66, %61 ]
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %71, null
  br i1 %72, label %73, label %89

73:                                               ; preds = %56, %16, %70
  %74 = phi i32 [ %17, %16 ], [ %22, %70 ], [ %22, %56 ]
  %75 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  %76 = tail call i8* @_Znwm(i64 8) #12
  %77 = tail call %struct.PFFFT_Setup* @pffft_new_setup(i32 %74, i32 0) #11
  %78 = bitcast i8* %76 to %struct.PFFFT_Setup**
  store %struct.PFFFT_Setup* %77, %struct.PFFFT_Setup** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::unique_ptr"* %3 to i8**
  store i8* %76, i8** %80, align 8
  %81 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERjS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups to %"class.WTF::HashTable"*), i32* nonnull dereferenceable(4) %2, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %3) #11
  %82 = load %"class.blink::FFTFrame::FFTSetup"*, %"class.blink::FFTFrame::FFTSetup"** %79, align 8
  store %"class.blink::FFTFrame::FFTSetup"* null, %"class.blink::FFTFrame::FFTSetup"** %79, align 8
  %83 = icmp eq %"class.blink::FFTFrame::FFTSetup"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %73
  %85 = getelementptr inbounds %"class.blink::FFTFrame::FFTSetup", %"class.blink::FFTFrame::FFTSetup"* %82, i64 0, i32 0
  %86 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %85, align 8
  call void @pffft_destroy_setup(%struct.PFFFT_Setup* %86) #11
  %87 = bitcast %"class.blink::FFTFrame::FFTSetup"* %82 to i8*
  call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %73, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  br label %89

89:                                               ; preds = %70, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.PFFFT_Setup* @_ZN5blink8FFTFrame15FFTSetupForSizeEj(i32) local_unnamed_addr #0 align 2 {
  %2 = load i1, i1* @_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call, align 1
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  store i1 true, i1* @_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call, align 1
  br label %4

4:                                                ; preds = %3, %1
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !2

7:                                                ; preds = %4
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups) #11
  br label %11

11:                                               ; preds = %4, %7, %10
  %12 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups to %"struct.WTF::KeyValuePair"**), align 8
  %13 = icmp eq %"struct.WTF::KeyValuePair"* %12, null
  %14 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  br i1 %13, label %68, label %15

15:                                               ; preds = %11
  %16 = add i32 %14, -1
  %17 = zext i32 %16 to i64
  %18 = shl i32 %0, 15
  %19 = xor i32 %18, -1
  %20 = add i32 %19, %0
  %21 = lshr i32 %20, 10
  %22 = xor i32 %21, %20
  %23 = mul i32 %22, 9
  %24 = lshr i32 %23, 6
  %25 = xor i32 %24, %23
  %26 = shl i32 %25, 11
  %27 = xor i32 %26, -1
  %28 = add i32 %25, %27
  %29 = lshr i32 %28, 16
  %30 = xor i32 %29, %28
  %31 = and i32 %16, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %0
  br i1 %36, label %65, label %37

37:                                               ; preds = %15
  %38 = xor i32 %30, -1
  %39 = lshr i32 %28, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i32 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %68, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %17
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %0
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %15
  %66 = phi %"struct.WTF::KeyValuePair"* [ %33, %15 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %51, %65, %11
  %69 = zext i32 %14 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %69
  br label %71

71:                                               ; preds = %65, %68
  %72 = phi %"struct.WTF::KeyValuePair"* [ %70, %68 ], [ %66, %65 ]
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 0, i32 1, i32 0, i32 0, i32 0
  %74 = load %"class.blink::FFTFrame::FFTSetup"*, %"class.blink::FFTFrame::FFTSetup"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::FFTFrame::FFTSetup", %"class.blink::FFTFrame::FFTSetup"* %74, i64 0, i32 0
  %76 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %75, align 8
  ret %struct.PFFFT_Setup* %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrameC2Ej(%"class.blink::FFTFrame"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 0
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 1
  %5 = uitofp i32 %1 to double
  %6 = tail call double @log2(double %5) #11
  %7 = fptoui double %6 to i32
  store i32 %7, i32* %4, align 4
  %8 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 2
  %9 = lshr i32 %1, 1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::AudioArray"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 20, i1 false) #11
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %8, i64 %10) #11
  %12 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 3
  %13 = bitcast %"class.blink::AudioArray"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #11
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %12, i64 %10) #11
  %14 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 4
  %15 = zext i32 %1 to i64
  %16 = bitcast %"class.blink::AudioArray"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false) #11
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %14, i64 %15) #11
  %17 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 5
  %18 = bitcast %"class.blink::AudioArray"* %17 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #11
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %17, i64 %15) #11
  tail call void @_ZN5blink8FFTFrame25InitializeFFTSetupForSizeEj(i32 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrameC2Ev(%"class.blink::FFTFrame"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 3
  %3 = bitcast %"class.blink::AudioArray"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 20, i1 false) #11
  %4 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 4
  %5 = bitcast %"class.blink::AudioArray"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #11
  %6 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 5
  %7 = bitcast %"class.blink::AudioArray"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #11
  %8 = bitcast %"class.blink::FFTFrame"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrameC2ERKS0_(%"class.blink::FFTFrame"*, %"class.blink::FFTFrame"* nocapture readonly dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 2
  %10 = load i32, i32* %4, align 8
  %11 = lshr i32 %10, 1
  %12 = zext i32 %11 to i64
  %13 = bitcast %"class.blink::AudioArray"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #11
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %9, i64 %12) #11
  %14 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 3
  %15 = load i32, i32* %4, align 8
  %16 = lshr i32 %15, 1
  %17 = zext i32 %16 to i64
  %18 = bitcast %"class.blink::AudioArray"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 20, i1 false) #11
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %14, i64 %17) #11
  %19 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 4
  %20 = load i32, i32* %4, align 8
  %21 = zext i32 %20 to i64
  %22 = bitcast %"class.blink::AudioArray"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 20, i1 false) #11
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %19, i64 %21) #11
  %23 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 5
  %24 = load i32, i32* %4, align 8
  %25 = zext i32 %24 to i64
  %26 = bitcast %"class.blink::AudioArray"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 20, i1 false) #11
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %23, i64 %25) #11
  %27 = load i32, i32* %3, align 8
  tail call void @_ZN5blink8FFTFrame25InitializeFFTSetupForSizeEj(i32 %27)
  %28 = load i32, i32* %3, align 8
  %29 = lshr i32 %28, 1
  %30 = shl i32 %29, 2
  %31 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 2, i32 1
  %32 = bitcast float** %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %1, i64 0, i32 2, i32 1
  %35 = bitcast float** %34 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = zext i32 %30 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %36, i64 %37, i1 false)
  %38 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 3, i32 1
  %39 = bitcast float** %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %1, i64 0, i32 3, i32 1
  %42 = bitcast float** %41 to i8**
  %43 = load i8*, i8** %42, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %43, i64 %37, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink8FFTFrame10MinFFTSizeEv() local_unnamed_addr #4 align 2 {
  ret i32 32
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink8FFTFrame10MaxFFTSizeEv() local_unnamed_addr #4 align 2 {
  ret i32 1048576
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrame10InitializeEf(float) local_unnamed_addr #0 align 2 {
  %2 = load i1, i1* @_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call, align 1
  br i1 %2, label %4, label %3

3:                                                ; preds = %1
  store i1 true, i1* @_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call, align 1
  br label %4

4:                                                ; preds = %3, %1
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !2

7:                                                ; preds = %4
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups) #11
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups) #11
  br label %11

11:                                               ; preds = %4, %7, %10
  %12 = tail call i64 @_ZN5blink10HRTFPanner20FftSizeForSampleRateEf(float %0) #11
  %13 = trunc i64 %12 to i32
  tail call void @_ZN5blink8FFTFrame25InitializeFFTSetupForSizeEj(i32 %13)
  %14 = lshr i32 %13, 1
  tail call void @_ZN5blink8FFTFrame25InitializeFFTSetupForSizeEj(i32 %14)
  ret void
}

declare i64 @_ZN5blink10HRTFPanner20FftSizeForSampleRateEf(float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrame7CleanupEv() local_unnamed_addr #0 align 2 {
  %1 = load i1, i1* @_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call, align 1
  br i1 %1, label %3, label %2

2:                                                ; preds = %0
  store i1 true, i1* @_ZZN5blink8FFTFrame9FFTSetupsEvE10first_call, align 1
  br label %3

3:                                                ; preds = %2, %0
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups) #11
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups) #11
  br label %10

10:                                               ; preds = %3, %6, %9
  %11 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %12 = icmp eq i32 %11, 0
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups to %"struct.WTF::KeyValuePair"**), align 8
  %14 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink8FFTFrame9FFTSetupsEvE12s_fft_setups, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %15
  br i1 %12, label %31, label %17

17:                                               ; preds = %10
  %18 = icmp eq i32 %14, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %17, %25
  %20 = phi %"struct.WTF::KeyValuePair"* [ %26, %25 ], [ %13, %17 ]
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, 1
  %24 = icmp ult i32 %23, 2
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 1
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, %16
  br i1 %27, label %31, label %19

28:                                               ; preds = %19, %17
  %29 = phi %"struct.WTF::KeyValuePair"* [ %13, %17 ], [ %20, %19 ]
  %30 = icmp eq %"struct.WTF::KeyValuePair"* %29, %16
  br i1 %30, label %31, label %32

31:                                               ; preds = %25, %41, %53, %50, %10, %28
  ret void

32:                                               ; preds = %28, %53
  %33 = phi %"struct.WTF::KeyValuePair"* [ %45, %53 ], [ %29, %28 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.blink::FFTFrame::FFTSetup"*, %"class.blink::FFTFrame::FFTSetup"** %34, align 8
  store %"class.blink::FFTFrame::FFTSetup"* null, %"class.blink::FFTFrame::FFTSetup"** %34, align 8
  %36 = icmp eq %"class.blink::FFTFrame::FFTSetup"* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::FFTFrame::FFTSetup", %"class.blink::FFTFrame::FFTSetup"* %35, i64 0, i32 0
  %39 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %38, align 8
  tail call void @pffft_destroy_setup(%struct.PFFFT_Setup* %39) #11
  %40 = bitcast %"class.blink::FFTFrame::FFTSetup"* %35 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  br label %41

41:                                               ; preds = %32, %37
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 1
  %43 = icmp eq %"struct.WTF::KeyValuePair"* %42, %16
  br i1 %43, label %31, label %44

44:                                               ; preds = %41, %50
  %45 = phi %"struct.WTF::KeyValuePair"* [ %51, %50 ], [ %42, %41 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, 1
  %49 = icmp ult i32 %48, 2
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair"* %51, %16
  br i1 %52, label %31, label %44

53:                                               ; preds = %44
  %54 = icmp eq %"struct.WTF::KeyValuePair"* %45, %16
  br i1 %54, label %31, label %32
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrameD2Ev(%"class.blink::FFTFrame"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 5
  %3 = bitcast %"class.blink::AudioArray"* %2 to i8**
  %4 = load i8*, i8** %3, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %4) #11
  %5 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 4
  %6 = bitcast %"class.blink::AudioArray"* %5 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %7) #11
  %8 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 3
  %9 = bitcast %"class.blink::AudioArray"* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %10) #11
  %11 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 2
  %12 = bitcast %"class.blink::AudioArray"* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrame5DoFFTEPKf(%"class.blink::FFTFrame"* nocapture readonly, float*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = tail call %struct.PFFFT_Setup* @_ZN5blink8FFTFrame15FFTSetupForSizeEj(i32 %4)
  %6 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 4, i32 1
  %7 = load float*, float** %6, align 8
  %8 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 5, i32 1
  %9 = load float*, float** %8, align 8
  tail call void @pffft_transform_ordered(%struct.PFFFT_Setup* %5, float* %1, float* %7, float* %9, i32 0) #11
  %10 = load i32, i32* %3, align 8
  %11 = lshr i32 %10, 1
  %12 = load float*, float** %6, align 8
  %13 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 2, i32 1
  %14 = load float*, float** %13, align 8
  %15 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 3, i32 1
  %16 = load float*, float** %15, align 8
  %17 = icmp eq i32 %11, 0
  br i1 %17, label %130, label %18

18:                                               ; preds = %2
  %19 = zext i32 %11 to i64
  %20 = icmp ult i32 %10, 8
  br i1 %20, label %21, label %48

21:                                               ; preds = %128, %58, %48, %18
  %22 = phi i64 [ 0, %58 ], [ 0, %48 ], [ 0, %18 ], [ %76, %128 ]
  %23 = xor i64 %22, -1
  %24 = and i64 %19, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %21
  %27 = shl nuw i64 %22, 33
  %28 = ashr exact i64 %27, 32
  %29 = getelementptr inbounds float, float* %12, i64 %28
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds float, float* %14, i64 %22
  %33 = bitcast float* %32 to i32*
  store i32 %31, i32* %33, align 4
  %34 = trunc i64 %22 to i32
  %35 = shl nuw i32 %34, 1
  %36 = or i32 %35, 1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, float* %12, i64 %37
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds float, float* %16, i64 %22
  %42 = bitcast float* %41 to i32*
  store i32 %40, i32* %42, align 4
  %43 = or i64 %22, 1
  br label %44

44:                                               ; preds = %21, %26
  %45 = phi i64 [ %22, %21 ], [ %43, %26 ]
  %46 = sub nsw i64 0, %19
  %47 = icmp eq i64 %23, %46
  br i1 %47, label %130, label %131

48:                                               ; preds = %18
  %49 = add nsw i64 %19, -1
  %50 = trunc i64 %49 to i32
  %51 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %50, i32 2)
  %52 = extractvalue { i32, i1 } %51, 0
  %53 = extractvalue { i32, i1 } %51, 1
  %54 = icmp slt i32 %52, 0
  %55 = icmp ugt i64 %49, 4294967295
  %56 = or i1 %54, %55
  %57 = or i1 %56, %53
  br i1 %57, label %21, label %58

58:                                               ; preds = %48
  %59 = getelementptr float, float* %14, i64 %19
  %60 = getelementptr float, float* %16, i64 %19
  %61 = and i32 %10, -2
  %62 = zext i32 %61 to i64
  %63 = getelementptr float, float* %12, i64 %62
  %64 = icmp ult float* %14, %60
  %65 = icmp ult float* %16, %59
  %66 = and i1 %64, %65
  %67 = icmp ult float* %14, %63
  %68 = icmp ult float* %12, %59
  %69 = and i1 %67, %68
  %70 = or i1 %66, %69
  %71 = icmp ult float* %16, %63
  %72 = icmp ult float* %12, %60
  %73 = and i1 %71, %72
  %74 = or i1 %70, %73
  br i1 %74, label %21, label %75

75:                                               ; preds = %58
  %76 = and i64 %19, 2147483644
  %77 = add nsw i64 %76, -4
  %78 = lshr exact i64 %77, 2
  %79 = add nuw nsw i64 %78, 1
  %80 = and i64 %79, 1
  %81 = icmp eq i64 %77, 0
  br i1 %81, label %113, label %82

82:                                               ; preds = %75
  %83 = sub nuw nsw i64 %79, %80
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ 0, %82 ], [ %110, %84 ]
  %86 = phi i64 [ %83, %82 ], [ %111, %84 ]
  %87 = shl i64 %85, 33
  %88 = ashr exact i64 %87, 32
  %89 = getelementptr inbounds float, float* %12, i64 %88
  %90 = bitcast float* %89 to <8 x i32>*
  %91 = load <8 x i32>, <8 x i32>* %90, align 4
  %92 = shufflevector <8 x i32> %91, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %93 = shufflevector <8 x i32> %91, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %94 = getelementptr inbounds float, float* %14, i64 %85
  %95 = bitcast float* %94 to <4 x i32>*
  store <4 x i32> %92, <4 x i32>* %95, align 4, !alias.scope !3, !noalias !6
  %96 = getelementptr inbounds float, float* %16, i64 %85
  %97 = bitcast float* %96 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4, !alias.scope !9, !noalias !10
  %98 = or i64 %85, 4
  %99 = shl i64 %98, 33
  %100 = ashr exact i64 %99, 32
  %101 = getelementptr inbounds float, float* %12, i64 %100
  %102 = bitcast float* %101 to <8 x i32>*
  %103 = load <8 x i32>, <8 x i32>* %102, align 4
  %104 = shufflevector <8 x i32> %103, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %105 = shufflevector <8 x i32> %103, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %106 = getelementptr inbounds float, float* %14, i64 %98
  %107 = bitcast float* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !3, !noalias !6
  %108 = getelementptr inbounds float, float* %16, i64 %98
  %109 = bitcast float* %108 to <4 x i32>*
  store <4 x i32> %105, <4 x i32>* %109, align 4, !alias.scope !9, !noalias !10
  %110 = add i64 %85, 8
  %111 = add i64 %86, -2
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %84, !llvm.loop !11

113:                                              ; preds = %84, %75
  %114 = phi i64 [ 0, %75 ], [ %110, %84 ]
  %115 = icmp eq i64 %80, 0
  br i1 %115, label %128, label %116

116:                                              ; preds = %113
  %117 = shl i64 %114, 33
  %118 = ashr exact i64 %117, 32
  %119 = getelementptr inbounds float, float* %12, i64 %118
  %120 = bitcast float* %119 to <8 x i32>*
  %121 = load <8 x i32>, <8 x i32>* %120, align 4
  %122 = shufflevector <8 x i32> %121, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %123 = shufflevector <8 x i32> %121, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %124 = getelementptr inbounds float, float* %14, i64 %114
  %125 = bitcast float* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !3, !noalias !6
  %126 = getelementptr inbounds float, float* %16, i64 %114
  %127 = bitcast float* %126 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !9, !noalias !10
  br label %128

128:                                              ; preds = %113, %116
  %129 = icmp eq i64 %76, %19
  br i1 %129, label %130, label %21

130:                                              ; preds = %44, %131, %128, %2
  ret void

131:                                              ; preds = %44, %131
  %132 = phi i64 [ %166, %131 ], [ %45, %44 ]
  %133 = shl i64 %132, 33
  %134 = ashr exact i64 %133, 32
  %135 = getelementptr inbounds float, float* %12, i64 %134
  %136 = bitcast float* %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds float, float* %14, i64 %132
  %139 = bitcast float* %138 to i32*
  store i32 %137, i32* %139, align 4
  %140 = trunc i64 %132 to i32
  %141 = shl i32 %140, 1
  %142 = or i32 %141, 1
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds float, float* %12, i64 %143
  %145 = bitcast float* %144 to i32*
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds float, float* %16, i64 %132
  %148 = bitcast float* %147 to i32*
  store i32 %146, i32* %148, align 4
  %149 = add nuw nsw i64 %132, 1
  %150 = shl i64 %149, 33
  %151 = ashr exact i64 %150, 32
  %152 = getelementptr inbounds float, float* %12, i64 %151
  %153 = bitcast float* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds float, float* %14, i64 %149
  %156 = bitcast float* %155 to i32*
  store i32 %154, i32* %156, align 4
  %157 = trunc i64 %149 to i32
  %158 = shl i32 %157, 1
  %159 = or i32 %158, 1
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds float, float* %12, i64 %160
  %162 = bitcast float* %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = getelementptr inbounds float, float* %16, i64 %149
  %165 = bitcast float* %164 to i32*
  store i32 %163, i32* %165, align 4
  %166 = add nuw nsw i64 %132, 2
  %167 = icmp eq i64 %166, %19
  br i1 %167, label %130, label %131, !llvm.loop !13
}

declare void @pffft_transform_ordered(%struct.PFFFT_Setup*, float*, float*, float*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8FFTFrame12DoInverseFFTEPf(%"class.blink::FFTFrame"* nocapture readonly, float*) local_unnamed_addr #0 align 2 {
  %3 = alloca float, align 4
  %4 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 1
  %7 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 4, i32 1
  %8 = load float*, float** %7, align 8
  %9 = ptrtoint float* %8 to i64
  %10 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 2, i32 1
  %11 = load float*, float** %10, align 8
  %12 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 3, i32 1
  %13 = load float*, float** %12, align 8
  %14 = icmp eq i32 %6, 0
  br i1 %14, label %150, label %15

15:                                               ; preds = %2
  %16 = zext i32 %6 to i64
  %17 = icmp ult i32 %5, 8
  br i1 %17, label %18, label %45

18:                                               ; preds = %146, %71, %45, %15
  %19 = phi i64 [ 0, %71 ], [ 0, %45 ], [ 0, %15 ], [ %85, %146 ]
  %20 = xor i64 %19, -1
  %21 = and i64 %16, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %41, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds float, float* %11, i64 %19
  %25 = bitcast float* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = shl nuw i64 %19, 33
  %28 = ashr exact i64 %27, 32
  %29 = getelementptr inbounds float, float* %8, i64 %28
  %30 = bitcast float* %29 to i32*
  store i32 %26, i32* %30, align 4
  %31 = getelementptr inbounds float, float* %13, i64 %19
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = trunc i64 %19 to i32
  %35 = shl nuw i32 %34, 1
  %36 = or i32 %35, 1
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, float* %8, i64 %37
  %39 = bitcast float* %38 to i32*
  store i32 %33, i32* %39, align 4
  %40 = or i64 %19, 1
  br label %41

41:                                               ; preds = %18, %23
  %42 = phi i64 [ %19, %18 ], [ %40, %23 ]
  %43 = sub nsw i64 0, %16
  %44 = icmp eq i64 %20, %43
  br i1 %44, label %148, label %160

45:                                               ; preds = %15
  %46 = add nsw i64 %16, -1
  %47 = trunc i64 %46 to i32
  %48 = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %47, i32 2)
  %49 = extractvalue { i32, i1 } %48, 0
  %50 = extractvalue { i32, i1 } %48, 1
  %51 = icmp slt i32 %49, 0
  %52 = icmp ugt i64 %46, 4294967295
  %53 = or i1 %51, %52
  %54 = or i1 %53, %50
  %55 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 8)
  %56 = extractvalue { i64, i1 } %55, 0
  %57 = extractvalue { i64, i1 } %55, 1
  %58 = xor i64 %9, -1
  %59 = icmp ugt i64 %56, %58
  %60 = or i1 %59, %57
  %61 = or i1 %54, %60
  %62 = getelementptr float, float* %8, i64 1
  %63 = ptrtoint float* %62 to i64
  %64 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %46, i64 8)
  %65 = extractvalue { i64, i1 } %64, 0
  %66 = extractvalue { i64, i1 } %64, 1
  %67 = xor i64 %63, -1
  %68 = icmp ugt i64 %65, %67
  %69 = or i1 %68, %66
  %70 = or i1 %61, %69
  br i1 %70, label %18, label %71

71:                                               ; preds = %45
  %72 = getelementptr float, float* %11, i64 %16
  %73 = and i32 %5, -2
  %74 = zext i32 %73 to i64
  %75 = getelementptr float, float* %8, i64 %74
  %76 = getelementptr float, float* %13, i64 %16
  %77 = icmp ult float* %11, %75
  %78 = icmp ult float* %8, %72
  %79 = and i1 %77, %78
  %80 = icmp ult float* %13, %75
  %81 = icmp ult float* %8, %76
  %82 = and i1 %80, %81
  %83 = or i1 %79, %82
  br i1 %83, label %18, label %84

84:                                               ; preds = %71
  %85 = and i64 %16, 2147483644
  %86 = add nsw i64 %85, -4
  %87 = lshr exact i64 %86, 2
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 1
  %90 = icmp eq i64 %86, 0
  br i1 %90, label %128, label %91

91:                                               ; preds = %84
  %92 = sub nuw nsw i64 %88, %89
  %93 = getelementptr inbounds float, float* %8, i64 -1
  %94 = getelementptr inbounds float, float* %8, i64 -1
  br label %95

95:                                               ; preds = %95, %91
  %96 = phi i64 [ 0, %91 ], [ %125, %95 ]
  %97 = phi i64 [ %92, %91 ], [ %126, %95 ]
  %98 = getelementptr inbounds float, float* %11, i64 %96
  %99 = bitcast float* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !14, !noalias !17
  %101 = getelementptr inbounds float, float* %13, i64 %96
  %102 = bitcast float* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4, !alias.scope !19, !noalias !17
  %104 = trunc i64 %96 to i32
  %105 = shl i32 %104, 1
  %106 = or i32 %105, 1
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds float, float* %93, i64 %107
  %109 = bitcast float* %108 to <8 x i32>*
  %110 = shufflevector <4 x i32> %100, <4 x i32> %103, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %110, <8 x i32>* %109, align 4
  %111 = or i64 %96, 4
  %112 = getelementptr inbounds float, float* %11, i64 %111
  %113 = bitcast float* %112 to <4 x i32>*
  %114 = load <4 x i32>, <4 x i32>* %113, align 4, !alias.scope !14, !noalias !17
  %115 = getelementptr inbounds float, float* %13, i64 %111
  %116 = bitcast float* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4, !alias.scope !19, !noalias !17
  %118 = trunc i64 %111 to i32
  %119 = shl i32 %118, 1
  %120 = or i32 %119, 1
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds float, float* %94, i64 %121
  %123 = bitcast float* %122 to <8 x i32>*
  %124 = shufflevector <4 x i32> %114, <4 x i32> %117, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %124, <8 x i32>* %123, align 4
  %125 = add i64 %96, 8
  %126 = add i64 %97, -2
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %95, !llvm.loop !21

128:                                              ; preds = %95, %84
  %129 = phi i64 [ 0, %84 ], [ %125, %95 ]
  %130 = icmp eq i64 %89, 0
  br i1 %130, label %146, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds float, float* %11, i64 %129
  %133 = bitcast float* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !14, !noalias !17
  %135 = getelementptr inbounds float, float* %13, i64 %129
  %136 = bitcast float* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !19, !noalias !17
  %138 = trunc i64 %129 to i32
  %139 = shl i32 %138, 1
  %140 = or i32 %139, 1
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds float, float* %8, i64 -1
  %143 = getelementptr inbounds float, float* %142, i64 %141
  %144 = bitcast float* %143 to <8 x i32>*
  %145 = shufflevector <4 x i32> %134, <4 x i32> %137, <8 x i32> <i32 0, i32 4, i32 1, i32 5, i32 2, i32 6, i32 3, i32 7>
  store <8 x i32> %145, <8 x i32>* %144, align 4
  br label %146

146:                                              ; preds = %128, %131
  %147 = icmp eq i64 %85, %16
  br i1 %147, label %148, label %18

148:                                              ; preds = %41, %160, %146
  %149 = load i32, i32* %4, align 8
  br label %150

150:                                              ; preds = %148, %2
  %151 = phi i32 [ %149, %148 ], [ %5, %2 ]
  %152 = tail call %struct.PFFFT_Setup* @_ZN5blink8FFTFrame15FFTSetupForSizeEj(i32 %151)
  %153 = getelementptr inbounds %"class.blink::FFTFrame", %"class.blink::FFTFrame"* %0, i64 0, i32 5, i32 1
  %154 = load float*, float** %153, align 8
  tail call void @pffft_transform_ordered(%struct.PFFFT_Setup* %152, float* %8, float* %1, float* %154, i32 1) #11
  %155 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %155) #11
  %156 = load i32, i32* %4, align 8
  %157 = uitofp i32 %156 to double
  %158 = fdiv double 1.000000e+00, %157
  %159 = fptrunc double %158 to float
  store float %159, float* %3, align 4
  call void @_ZN5blink11vector_math5VsmulEPKfiS2_Pfij(float* %1, i32 1, float* nonnull %3, float* %1, i32 1, i32 %156) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %155) #11
  ret void

160:                                              ; preds = %41, %160
  %161 = phi i64 [ %195, %160 ], [ %42, %41 ]
  %162 = getelementptr inbounds float, float* %11, i64 %161
  %163 = bitcast float* %162 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = shl i64 %161, 33
  %166 = ashr exact i64 %165, 32
  %167 = getelementptr inbounds float, float* %8, i64 %166
  %168 = bitcast float* %167 to i32*
  store i32 %164, i32* %168, align 4
  %169 = getelementptr inbounds float, float* %13, i64 %161
  %170 = bitcast float* %169 to i32*
  %171 = load i32, i32* %170, align 4
  %172 = trunc i64 %161 to i32
  %173 = shl i32 %172, 1
  %174 = or i32 %173, 1
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds float, float* %8, i64 %175
  %177 = bitcast float* %176 to i32*
  store i32 %171, i32* %177, align 4
  %178 = add nuw nsw i64 %161, 1
  %179 = getelementptr inbounds float, float* %11, i64 %178
  %180 = bitcast float* %179 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = shl i64 %178, 33
  %183 = ashr exact i64 %182, 32
  %184 = getelementptr inbounds float, float* %8, i64 %183
  %185 = bitcast float* %184 to i32*
  store i32 %181, i32* %185, align 4
  %186 = getelementptr inbounds float, float* %13, i64 %178
  %187 = bitcast float* %186 to i32*
  %188 = load i32, i32* %187, align 4
  %189 = trunc i64 %178 to i32
  %190 = shl i32 %189, 1
  %191 = or i32 %190, 1
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds float, float* %8, i64 %192
  %194 = bitcast float* %193 to i32*
  store i32 %188, i32* %194, align 4
  %195 = add nuw nsw i64 %161, 2
  %196 = icmp eq i64 %195, %16
  br i1 %196, label %148, label %160, !llvm.loop !22
}

declare void @_ZN5blink11vector_math5VsmulEPKfiS2_Pfij(float*, i32, float*, float*, i32, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EERjS9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %107, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #11
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.blink::FFTFrame::FFTSetup"* null, %"class.blink::FFTFrame::FFTSetup"** %84, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::FFTFrame::FFTSetup"*, %"class.blink::FFTFrame::FFTSetup"** %87, align 8
  %89 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %86, i64* %89, align 8
  %90 = icmp eq %"class.blink::FFTFrame::FFTSetup"* %88, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %79
  %92 = getelementptr inbounds %"class.blink::FFTFrame::FFTSetup", %"class.blink::FFTFrame::FFTSetup"* %88, i64 0, i32 0
  %93 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %92, align 8
  tail call void @pffft_destroy_setup(%struct.PFFFT_Setup* %93) #11
  %94 = bitcast %"class.blink::FFTFrame::FFTSetup"* %88 to i8*
  tail call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %79, %91
  %96 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = add i32 %100, %98
  %102 = shl i32 %101, 1
  %103 = load i32, i32* %12, align 8
  %104 = icmp ult i32 %102, %103
  br i1 %104, label %107, label %105

105:                                              ; preds = %95
  %106 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %107

107:                                              ; preds = %50, %95, %105
  %108 = phi i8 [ 1, %95 ], [ 1, %105 ], [ 0, %50 ]
  %109 = phi %"struct.WTF::KeyValuePair"* [ %81, %95 ], [ %106, %105 ], [ %52, %50 ]
  %110 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %109, 0
  %111 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %110, i8 %108, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %111
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([183 x i8], [183 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #11
  ret %"struct.WTF::KeyValuePair"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink8FFTFrame8FFTSetupENS2_14default_deleteIS6_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_10HashTraitsIjEENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %53

18:                                               ; preds = %152
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %153, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %156, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %154, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %49, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %47, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %44, %29
  %32 = phi i64 [ 0, %29 ], [ %45, %44 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %44, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.blink::FFTFrame::FFTSetup"*, %"class.blink::FFTFrame::FFTSetup"** %37, align 8
  store %"class.blink::FFTFrame::FFTSetup"* null, %"class.blink::FFTFrame::FFTSetup"** %37, align 8
  %39 = icmp eq %"class.blink::FFTFrame::FFTSetup"* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::FFTFrame::FFTSetup", %"class.blink::FFTFrame::FFTSetup"* %38, i64 0, i32 0
  %42 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %41, align 8
  tail call void @pffft_destroy_setup(%struct.PFFFT_Setup* %42) #11
  %43 = bitcast %"class.blink::FFTFrame::FFTSetup"* %38 to i8*
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %40, %36, %31
  %45 = add nuw nsw i64 %32, 1
  %46 = icmp eq i64 %45, %30
  br i1 %46, label %47, label %31

47:                                               ; preds = %44, %27
  %48 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #11
  br label %49

49:                                               ; preds = %20, %47
  %50 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, -2147483648
  store i32 %52, i32* %50, align 8
  ret %"struct.WTF::KeyValuePair"* %23

53:                                               ; preds = %13, %152
  %54 = phi i64 [ %17, %13 ], [ %153, %152 ]
  %55 = phi i32 [ %7, %13 ], [ %154, %152 ]
  %56 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %155, %152 ]
  %57 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %156, %152 ]
  %58 = phi i32 [ 0, %13 ], [ %157, %152 ]
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 %59, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %61, 1
  %63 = icmp ult i32 %62, 2
  br i1 %63, label %152, label %64

64:                                               ; preds = %53
  %65 = shl i32 %61, 15
  %66 = xor i32 %65, -1
  %67 = add i32 %61, %66
  %68 = lshr i32 %67, 10
  %69 = xor i32 %68, %67
  %70 = mul i32 %69, 9
  %71 = lshr i32 %70, 6
  %72 = xor i32 %71, %70
  %73 = shl i32 %72, 11
  %74 = xor i32 %73, -1
  %75 = add i32 %72, %74
  %76 = lshr i32 %75, 16
  %77 = xor i32 %76, %75
  %78 = and i32 %77, %14
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %79
  %81 = ptrtoint %"struct.WTF::KeyValuePair"* %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %102, label %85

85:                                               ; preds = %64
  %86 = xor i32 %77, -1
  %87 = lshr i32 %75, 23
  %88 = add i32 %87, %86
  %89 = shl i32 %88, 12
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 7
  %92 = xor i32 %91, %90
  %93 = shl i32 %92, 2
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 20
  %96 = xor i32 %95, %94
  %97 = or i32 %96, 1
  %98 = zext i32 %97 to i64
  br label %108

99:                                               ; preds = %115
  %100 = ptrtoint %"struct.WTF::KeyValuePair"* %122 to i64
  %101 = inttoptr i64 %117 to %"struct.WTF::KeyValuePair"*
  br label %102

102:                                              ; preds = %99, %64
  %103 = phi i64 [ %100, %99 ], [ %81, %64 ]
  %104 = phi %"struct.WTF::KeyValuePair"* [ %101, %99 ], [ null, %64 ]
  %105 = icmp eq %"struct.WTF::KeyValuePair"* %104, null
  %106 = ptrtoint %"struct.WTF::KeyValuePair"* %104 to i64
  %107 = select i1 %105, i64 %103, i64 %106
  br label %127

108:                                              ; preds = %115, %85
  %109 = phi i64 [ 0, %85 ], [ %117, %115 ]
  %110 = phi i32 [ %83, %85 ], [ %125, %115 ]
  %111 = phi i64 [ %81, %85 ], [ %123, %115 ]
  %112 = phi i64 [ %79, %85 ], [ %121, %115 ]
  %113 = phi i64 [ 0, %85 ], [ %119, %115 ]
  %114 = icmp eq i32 %110, %61
  br i1 %114, label %127, label %115

115:                                              ; preds = %108
  %116 = icmp eq i32 %110, -1
  %117 = select i1 %116, i64 %111, i64 %109
  %118 = icmp eq i64 %113, 0
  %119 = select i1 %118, i64 %98, i64 %113
  %120 = add i64 %119, %112
  %121 = and i64 %120, %15
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %121
  %123 = ptrtoint %"struct.WTF::KeyValuePair"* %122 to i64
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %122, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %99, label %108

127:                                              ; preds = %108, %102
  %128 = phi i64 [ %107, %102 ], [ %111, %108 ]
  %129 = inttoptr i64 %128 to %"struct.WTF::KeyValuePair"*
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 0, i32 1, i32 0, i32 0, i32 0
  %131 = load %"class.blink::FFTFrame::FFTSetup"*, %"class.blink::FFTFrame::FFTSetup"** %130, align 8
  store %"class.blink::FFTFrame::FFTSetup"* null, %"class.blink::FFTFrame::FFTSetup"** %130, align 8
  %132 = icmp eq %"class.blink::FFTFrame::FFTSetup"* %131, null
  br i1 %132, label %137, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.blink::FFTFrame::FFTSetup", %"class.blink::FFTFrame::FFTSetup"* %131, i64 0, i32 0
  %135 = load %struct.PFFFT_Setup*, %struct.PFFFT_Setup** %134, align 8
  tail call void @pffft_destroy_setup(%struct.PFFFT_Setup* %135) #11
  %136 = bitcast %"class.blink::FFTFrame::FFTSetup"* %131 to i8*
  tail call void @_ZdlPv(i8* %136) #12
  br label %137

137:                                              ; preds = %127, %133
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 0, i32 0
  %139 = load i32, i32* %60, align 8
  store i32 %139, i32* %138, align 8
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %129, i64 0, i32 1
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %56, i64 %59, i32 1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.blink::FFTFrame::FFTSetup"* null, %"class.blink::FFTFrame::FFTSetup"** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %146, i64 %59
  %148 = icmp eq %"struct.WTF::KeyValuePair"* %147, %3
  %149 = select i1 %148, %"struct.WTF::KeyValuePair"* %129, %"struct.WTF::KeyValuePair"* %57
  %150 = load i32, i32* %6, align 8
  %151 = ptrtoint %"struct.WTF::KeyValuePair"* %146 to i64
  br label %152

152:                                              ; preds = %53, %137
  %153 = phi i64 [ %54, %53 ], [ %151, %137 ]
  %154 = phi i32 [ %55, %53 ], [ %150, %137 ]
  %155 = phi %"struct.WTF::KeyValuePair"* [ %56, %53 ], [ %146, %137 ]
  %156 = phi %"struct.WTF::KeyValuePair"* [ %57, %53 ], [ %149, %137 ]
  %157 = add i32 %58, 1
  %158 = icmp eq i32 %157, %154
  br i1 %158, label %18, label %53
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @log2(double) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp ugt i64 %1, 1073741823
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #11
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1073741823) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i8* %13, i8* %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 63, %"class.logging::CheckOpResult"* nonnull %4) #11
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %22 = trunc i64 %1 to i32
  %23 = shl i32 %22, 2
  %24 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 0
  %25 = load float*, float** %24, align 8
  %26 = icmp eq float* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast float* %25 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %28) #11
  br label %29

29:                                               ; preds = %21, %27
  %30 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %23, i32 32) #11
  %31 = extractvalue { i32, i1 } %30, 1
  br i1 %31, label %32, label %33, !prof !23

32:                                               ; preds = %29
  call void @llvm.trap() #11
  unreachable

33:                                               ; preds = %29
  %34 = extractvalue { i32, i1 } %30, 0
  %35 = zext i32 %34 to i64
  %36 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 %35, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv, i64 0, i64 0)) #11
  %37 = bitcast %"class.blink::AudioArray"* %0 to i8**
  store i8* %36, i8** %37, align 8
  %38 = icmp eq i8* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = ptrtoint i8* %36 to i64
  br label %46

41:                                               ; preds = %33
  %42 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #11
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #11
  %44 = bitcast %"class.blink::AudioArray"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %39, %41
  %47 = phi i64 [ %40, %39 ], [ %45, %41 ]
  %48 = add i64 %47, 31
  %49 = and i64 %48, -32
  %50 = inttoptr i64 %49 to float*
  %51 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 1
  store float* %50, float** %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 2
  store i32 %22, i32* %52, align 8
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #9

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7, !8}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !5}
!9 = !{!7}
!10 = !{!8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !12}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = !{!20}
!20 = distinct !{!20, !16}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !12}
!23 = !{!"branch_weights", i32 1, i32 2000}
