; ModuleID = '../../third_party/blink/renderer/core/css/abstract_property_set_css_style_declaration.cc'
source_filename = "../../third_party/blink/renderer/core/css/abstract_property_set_css_style_declaration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.263", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.263" = type { %"class.base::RefCounted.264" }
%"class.base::RefCounted.264" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.267" }
%"class.blink::HeapHashMap.267" = type { %"class.WTF::HashMap.270" }
%"class.WTF::HashMap.270" = type { %"class.WTF::HashTable.271" }
%"class.WTF::HashTable.271" = type <{ %"struct.WTF::KeyValuePair.273"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.273" = type { %"class.blink::WeakMember.274", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.276", i32, [4 x i8], %"class.std::__1::unique_ptr.412", %"class.std::__1::unique_ptr.412", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.422", %"class.std::__1::unique_ptr.428", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.446", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.453", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.285", %"class.std::__1::unique_ptr.291", %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.303", %"class.std::__1::unique_ptr.309", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.334", %"class.std::__1::unique_ptr.341", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.348", %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.392", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.312" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.312" = type { %"struct.std::__1::__atomic_base.313" }
%"struct.std::__1::__atomic_base.313" = type { %"struct.std::__1::__atomic_base.314" }
%"struct.std::__1::__atomic_base.314" = type { %"struct.std::__1::__cxx_atomic_impl.315" }
%"struct.std::__1::__cxx_atomic_impl.315" = type { %"struct.std::__1::__cxx_atomic_base_impl.316" }
%"struct.std::__1::__cxx_atomic_base_impl.316" = type { i64 }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.blink::Worklist.323"* }
%"class.blink::Worklist.323" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.312" }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::Worklist.330"* }
%"class.blink::Worklist.330" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.312" }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.blink::Worklist.337"* }
%"class.blink::Worklist.337" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.312" }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::Worklist.344"* }
%"class.blink::Worklist.344" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.312" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::Worklist.351"* }
%"class.blink::Worklist.351" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.312" }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::Worklist.358"* }
%"class.blink::Worklist.358" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.312" }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.blink::Worklist.365"* }
%"class.blink::Worklist.365" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.312" }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.372", %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.386", [4 x i8] }>
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374", %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { i64 }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { float }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.395", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.404" }
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406" }
%"class.WTF::VectorBufferBase.406" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.420" }
%"class.WTF::VectorBuffer.420" = type { %"class.WTF::VectorBufferBase.421" }
%"class.WTF::VectorBufferBase.421" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.434" }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.323"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.330"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.337"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.344"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.351"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1035" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.1036" }
%"struct.std::__1::__compressed_pair_elem.1036" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.453" = type { %"struct.std::__1::__atomic_base.454" }
%"struct.std::__1::__atomic_base.454" = type { %"struct.std::__1::__cxx_atomic_impl.455" }
%"struct.std::__1::__cxx_atomic_impl.455" = type { %"struct.std::__1::__cxx_atomic_base_impl.456" }
%"struct.std::__1::__cxx_atomic_base_impl.456" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.25", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.31", %"class.blink::Member.33", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.42", %"class.blink::Member.48", %"class.blink::Member.50", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.7" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.4" }
%"class.WTF::HashTable.4" = type <{ %"class.blink::WeakMember.6"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.6" = type opaque
%"class.blink::Supplementable.7" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.8" }
%"class.blink::HeapHashMap.8" = type { %"class.WTF::HashMap.11" }
%"class.WTF::HashMap.11" = type { %"class.WTF::HashTable.12" }
%"class.WTF::HashTable.12" = type <{ %"struct.WTF::KeyValuePair.14"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.14" = type { i8*, %"class.blink::Member.1049" }
%"class.blink::Member.1049" = type { %"class.blink::MemberBase.1050" }
%"class.blink::MemberBase.1050" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1051" }
%"class.blink::Member.1051" = type { %"class.blink::MemberBase.1052" }
%"class.blink::MemberBase.1052" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.16", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.22", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.WTF::HashSet.22" = type { %"class.WTF::HashTable.23" }
%"class.WTF::HashTable.23" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.29"*, i32, i32 }
%"class.blink::Member.29" = type opaque
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.35", i32, i32 }
%"class.blink::HeapHashMap.35" = type { %"class.WTF::HashMap.38" }
%"class.WTF::HashMap.38" = type { %"class.WTF::HashTable.39" }
%"class.WTF::HashTable.39" = type <{ %"struct.WTF::KeyValuePair.41"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.41" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.54", %"class.blink::HeapVector.58", i8, [7 x i8] }>
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.56" }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.58" = type { %"class.WTF::Vector.61" }
%"class.WTF::Vector.61" = type { %"class.WTF::VectorBuffer.62" }
%"class.WTF::VectorBuffer.62" = type { %"class.WTF::VectorBufferBase.63", [96 x i8] }
%"class.WTF::VectorBufferBase.63" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.66" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.64 }
%class.scoped_refptr.64 = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.blink::ImmutableCSSPropertyValueSet" = type { %"class.blink::CSSPropertyValueSet", [4 x i8] }
%"class.blink::CSSCustomPropertyDeclaration" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.72, i32, [4 x i8] }>
%class.scoped_refptr.72 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted", %"class.WTF::Vector.73", %"class.WTF::Vector.78", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.78" = type { %"class.WTF::VectorBuffer.79" }
%"class.WTF::VectorBuffer.79" = type { %"class.WTF::VectorBufferBase.80" }
%"class.WTF::VectorBufferBase.80" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.83" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.83" = type { %"class.v8::TracedReference.84" }
%"class.v8::TracedReference.84" = type { %"class.v8::BasicTracedReference.85" }
%"class.v8::BasicTracedReference.85" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::StyleAttributeMutationScope" = type { %"class.blink::MutationObserverInterestGroup"*, %"class.blink::MutationRecord"*, %"class.WTF::AtomicString" }
%"class.blink::MutationObserverInterestGroup" = type opaque
%"class.blink::MutationRecord" = type opaque
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.86", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.88, %"class.WTF::Vector.107", %"class.WTF::Vector.107", %"class.blink::Member.112", %"class.blink::Member.114", %"class.blink::HeapHashSet.118", %"class.blink::Member.125", %"class.WTF::HashSet.127", %"class.WTF::TextPosition", %"class.blink::Member.131", %"class.blink::HeapVector.135", %"class.blink::Member.142" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.88 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.89", %"class.WTF::Vector.91" }
%"class.WTF::RefCounted.89" = type { %"class.base::RefCounted.90" }
%"class.base::RefCounted.90" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.91" = type { %"class.WTF::VectorBuffer.92" }
%"class.WTF::VectorBuffer.92" = type { %"class.WTF::VectorBufferBase.93" }
%"class.WTF::VectorBufferBase.93" = type { %"class.std::__1::unique_ptr.94"*, i32, i32 }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.97", %"class.WTF::String" }
%"class.WTF::Vector.97" = type { %"class.WTF::VectorBuffer.98" }
%"class.WTF::VectorBuffer.98" = type { %"class.WTF::VectorBufferBase.99" }
%"class.WTF::VectorBufferBase.99" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.107" = type { %"class.WTF::VectorBuffer.108" }
%"class.WTF::VectorBuffer.108" = type { %"class.WTF::VectorBufferBase.109" }
%"class.WTF::VectorBufferBase.109" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.112", %"class.blink::Member.144", %"class.blink::Member.112", %"class.blink::Member.112", %"class.blink::Member.146" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.144" = type { %"class.blink::MemberBase.145" }
%"class.blink::MemberBase.145" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.150", %"class.blink::Member.125", %"class.blink::Member.144", %"class.blink::Member.152", %"class.blink::Member.152", %"class.blink::Member.195", %"class.blink::Member.197", %"class.blink::Member.199", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.204", %"class.blink::HeapVector.206" }
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.112", %"class.blink::Member.112" }
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.156" }
%"class.blink::HeapHashMap.156" = type { %"class.WTF::HashMap.159" }
%"class.WTF::HashMap.159" = type { %"class.WTF::HashTable.160" }
%"class.WTF::HashTable.160" = type <{ %"struct.WTF::KeyValuePair.162"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.162" = type { %"class.WTF::AtomicString", %"class.blink::Member.163" }
%"class.blink::Member.163" = type { %"class.blink::MemberBase.164" }
%"class.blink::MemberBase.164" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.167", i32, %"class.blink::HeapVector.188" }
%"class.blink::Member.167" = type { %"class.blink::MemberBase.168" }
%"class.blink::MemberBase.168" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.172" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.169 }
%class.scoped_refptr.169 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.170", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.170" = type { %"class.base::RefCounted.171" }
%"class.base::RefCounted.171" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.172" = type { %"class.blink::MemberBase.173" }
%"class.blink::MemberBase.173" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.176", %"class.blink::Member.178", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.176" = type { %"class.WTF::SingleThreadedBitField.177" }
%"class.WTF::SingleThreadedBitField.177" = type { i32 }
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.180 }
%class.scoped_refptr.180 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.181", %"class.WTF::AtomicString", %"class.WTF::Vector.183" }
%"class.WTF::RefCounted.181" = type { %"class.base::RefCounted.182" }
%"class.base::RefCounted.182" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.183" = type { %"class.WTF::VectorBuffer.184" }
%"class.WTF::VectorBuffer.184" = type { %"class.WTF::VectorBufferBase.185", [32 x i8] }
%"class.WTF::VectorBufferBase.185" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector.188" = type { %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.blink::Member.167"*, i32, i32 }
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.201" }
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::HeapHashMap.203"* }
%"class.blink::HeapHashMap.203" = type opaque
%"class.blink::Member.204" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.206" = type { %"class.WTF::Vector.209" }
%"class.WTF::Vector.209" = type { %"class.WTF::VectorBuffer.210" }
%"class.WTF::VectorBuffer.210" = type { %"class.WTF::VectorBufferBase.211" }
%"class.WTF::VectorBufferBase.211" = type { %"class.blink::Member.133"*, i32, i32 }
%"class.blink::Member.133" = type { %"class.blink::MemberBase.134" }
%"class.blink::MemberBase.134" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::Member.146" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.116" }
%"class.blink::Member.116" = type { %"class.blink::MemberBase.117" }
%"class.blink::MemberBase.117" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.118" = type { %"class.WTF::HashSet.121" }
%"class.WTF::HashSet.121" = type { %"class.WTF::HashTable.122" }
%"class.WTF::HashTable.122" = type <{ %"class.blink::WeakMember.124"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.124" = type { %"class.blink::MemberBase.145" }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.213", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.221", %"class.WTF::Vector.221", i8, i32, %"class.blink::Member.232", %"class.blink::Member", %"class.blink::Member.234", %"class.blink::Member.236", %"class.blink::Member.238", %"class.blink::Member.240", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.248", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.254", %"class.blink::Member.256", %"class.blink::Member.133", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.259", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.188", %"class.blink::Member.167", %"class.blink::Member.469", %"class.blink::Member.167", %"class.blink::Member.167", %"class.blink::Member.167", %"class.blink::UserActionElementSet", %"class.blink::Member.478", double, double, i64, i64, %"class.blink::HeapHashSet.480", %"class.blink::HeapHashSet.487", i16, i8, %"class.blink::Member.494", %"class.blink::Member.496", %"class.blink::Member.833", %"class.blink::Member.835", %"class.blink::TextLinkColors", %"class.blink::Member.837", i8, [7 x i8], %"class.blink::HeapHashMap.839", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.167", %"class.WTF::Vector.846", %"class.blink::Member.851", %"class.blink::Member.853", i8, %"class.blink::Member.167", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.855", %"class.blink::HeapVector.857", %"class.std::__1::unique_ptr.865", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.871", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.884", %"class.WTF::Vector.886", i8, i8, %"class.std::__1::unique_ptr.891", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.188", %"class.blink::HeapVector.897", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.905", i8, i32, %"class.blink::Member.907", %"class.blink::Member.909", %"class.blink::Member.911", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.913", %"class.WTF::HashMap.915", %"class.blink::Member.920", %"class.blink::Member.922", %"class.blink::Member.924", %"class.blink::Member.926", %"class.blink::Member.125", %"class.blink::Member.125", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.928", i8, i32, %"class.blink::Member.935", %"class.blink::Member.937", i32, %"class.blink::Member.939", %"class.blink::Member.941", %"class.blink::Member.943", %"class.std::__1::unique_ptr.945", i64, %"class.std::__1::unique_ptr.951", i32, i32, %"class.blink::Member.957", %"class.blink::Member.959", %"class.blink::Member.961", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.963", %"class.WTF::Vector.965", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.970", %"class.blink::Member.977", %"class.std::__1::unique_ptr.979", %"class.blink::Member.985", i8, i8, %"class.WTF::String", %"class.blink::Member.987", i8, [7 x i8], %"class.blink::HeapHashMap.989", %"class.blink::HeapObserverSet.996", %"class.blink::Member.1004", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1006", i32, i8, i8, %"class.blink::WeakMember.1008", %"class.blink::Member.1009" }
%"class.blink::Supplementable.213" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.214" }
%"class.blink::HeapHashMap.214" = type { %"class.WTF::HashMap.217" }
%"class.WTF::HashMap.217" = type { %"class.WTF::HashTable.218" }
%"class.WTF::HashTable.218" = type <{ %"struct.WTF::KeyValuePair.220"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.220" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.221" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.224 }
%class.scoped_refptr.224 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.225" }
%"struct.std::__1::atomic.225" = type { %"struct.std::__1::__atomic_base.226" }
%"struct.std::__1::__atomic_base.226" = type { %"struct.std::__1::__atomic_base.227" }
%"struct.std::__1::__atomic_base.227" = type { %"struct.std::__1::__cxx_atomic_impl.228" }
%"struct.std::__1::__cxx_atomic_impl.228" = type { %"struct.std::__1::__cxx_atomic_base_impl.229" }
%"struct.std::__1::__cxx_atomic_base_impl.229" = type { i32 }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.240" = type { %"class.blink::MemberBase.241" }
%"class.blink::MemberBase.241" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.242" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::KURL"* }
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.256" = type { %"class.blink::MemberBase.257" }
%"class.blink::MemberBase.257" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.258 }
%class.scoped_refptr.258 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.262 }
%class.scoped_refptr.262 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.471" }
%"class.blink::HeapHashMap.471" = type { %"class.WTF::HashMap.474" }
%"class.WTF::HashMap.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"struct.WTF::KeyValuePair.477"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.477" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.480" = type { %"class.WTF::HashSet.483" }
%"class.WTF::HashSet.483" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"class.blink::WeakMember.486"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.486" = type opaque
%"class.blink::HeapHashSet.487" = type { %"class.WTF::HashSet.490" }
%"class.WTF::HashSet.490" = type { %"class.WTF::HashTable.491" }
%"class.WTF::HashTable.491" = type <{ %"class.blink::WeakMember.493"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.493" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.125", i32, i32, i32, %"class.blink::Member.133", %"class.blink::Member.500", %"class.blink::Member.527", %"class.blink::HeapHashMap.529", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.536", %"class.blink::HeapHashSet.536", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.542", %"class.blink::Member.565", %"class.blink::Member.595", %"class.blink::Member.597", %"class.blink::Member.603", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.765", %"class.blink::Member.771", %"class.blink::HeapHashMap.773", %"class.blink::HeapHashMap.780", %"class.std::__1::unique_ptr.787", i32, %"class.blink::HeapVector.793", %"class.blink::HeapVector.793", %"class.blink::HeapVector.512", %"class.blink::HeapHashSet.801", %"class.blink::HeapHashMap.808", %"class.blink::Member.815", %"class.blink::HeapHashMap.817", %class.scoped_refptr.824, %class.scoped_refptr.825, %"class.blink::Member.66", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.826", %"class.blink::Member.167" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.144", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.504", %"class.blink::HeapVector.512", i8 }>
%"class.blink::HeapVector.504" = type { %"class.WTF::Vector.507" }
%"class.WTF::Vector.507" = type { %"class.WTF::VectorBuffer.508" }
%"class.WTF::VectorBuffer.508" = type { %"class.WTF::VectorBufferBase.509" }
%"class.WTF::VectorBufferBase.509" = type { %"class.blink::Member.510"*, i32, i32 }
%"class.blink::Member.510" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.523", %"class.blink::Member.525", %"class.blink::Member.525", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.523" = type <{ %"class.blink::Member.525"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.112", %"class.blink::Member.525", %"class.blink::Member.525" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.529" = type { %"class.WTF::HashMap.532" }
%"class.WTF::HashMap.532" = type { %"class.WTF::HashTable.533" }
%"class.WTF::HashTable.533" = type <{ %"struct.WTF::KeyValuePair.535"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.535" = type opaque
%"class.blink::HeapHashSet.536" = type { %"class.WTF::HashSet.539" }
%"class.WTF::HashSet.539" = type { %"class.WTF::HashTable.540" }
%"class.WTF::HashTable.540" = type <{ %"class.blink::Member.144"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.546", %"class.blink::Member.557" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.167", %"class.blink::HeapHashMap.550" }
%"class.blink::HeapHashMap.550" = type { %"class.WTF::HashMap.553" }
%"class.WTF::HashMap.553" = type { %"class.WTF::HashTable.554" }
%"class.WTF::HashTable.554" = type <{ %"struct.WTF::KeyValuePair.556"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.556" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.561", %"class.blink::Member.563" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1024", %"class.blink::Member.557", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1024" = type { %"class.WTF::Vector.1027" }
%"class.WTF::Vector.1027" = type { %"class.WTF::VectorBuffer.1028" }
%"class.WTF::VectorBuffer.1028" = type { %"class.WTF::VectorBufferBase.1029" }
%"class.WTF::VectorBufferBase.1029" = type { %"class.blink::Member.563"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1031, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.225" }>
%class.sk_sp.1031 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1032 }
%union.anon.1032 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.565" = type { %"class.blink::MemberBase.566" }
%"class.blink::MemberBase.566" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.125", %class.scoped_refptr.576, %"class.blink::SelectorFilter", %"class.blink::Member.527", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.569" }
%"class.blink::HeapHashMap.569" = type { %"class.WTF::HashMap.572" }
%"class.WTF::HashMap.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"struct.WTF::KeyValuePair.575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.575" = type opaque
%class.scoped_refptr.576 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.577", %"class.std::__1::unique_ptr.589" }
%"class.blink::HeapVector.577" = type { %"class.WTF::Vector.580" }
%"class.WTF::Vector.580" = type { %"class.WTF::VectorBuffer.581" }
%"class.WTF::VectorBuffer.581" = type { %"class.WTF::VectorBufferBase.582" }
%"class.WTF::VectorBufferBase.582" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.167", %"class.WTF::Vector.583" }
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585", [16 x i8] }
%"class.WTF::VectorBufferBase.585" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.601", i8, [7 x i8] }>
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.603" = type { %"class.blink::MemberBase.604" }
%"class.blink::MemberBase.604" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.625", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.607", %"class.WTF::HashMap.607", %"class.WTF::HashMap.607", %"class.WTF::HashMap.612", %class.scoped_refptr.617, %class.scoped_refptr.624, %class.scoped_refptr.623, %"class.WTF::Vector.107", %"class.WTF::Vector.107", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.607" = type { %"class.WTF::HashTable.608" }
%"class.WTF::HashTable.608" = type <{ %"struct.WTF::KeyValuePair.611"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.611" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1053 }
%class.scoped_refptr.1053 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.618", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.620", %"union.blink::InvalidationSet::Backing.621", %"union.blink::InvalidationSet::Backing.622", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.618" = type { %"class.base::RefCounted.619" }
%"class.base::RefCounted.619" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.620" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.621" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.622" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.612" = type { %"class.WTF::HashTable.613" }
%"class.WTF::HashTable.613" = type <{ %"struct.WTF::KeyValuePair.616"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.616" = type opaque
%class.scoped_refptr.617 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.623, %class.scoped_refptr.623 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.618", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.620", %"union.blink::InvalidationSet::Backing.621", %"union.blink::InvalidationSet::Backing.622", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.624 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.623 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.629", %"class.blink::HeapHashMap.629", %"class.blink::HeapHashMap.629", %"class.blink::HeapHashMap.629", %"class.blink::HeapVector.636", %"class.blink::HeapVector.636", %"class.blink::HeapVector.636", %"class.blink::HeapVector.636", %"class.blink::HeapVector.636", %"class.blink::HeapVector.636", %"class.blink::HeapVector.636", %"class.blink::HeapVector.636", %"class.blink::HeapVector.636", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.676", %"class.blink::HeapVector.684", %"class.blink::HeapVector.692", %"class.blink::HeapVector.709", %"class.blink::HeapVector.717", %"class.blink::HeapVector.725", %"class.blink::HeapVector.734", %"class.WTF::Vector.741", i32, %"class.blink::Member.747" }
%"class.blink::HeapHashMap.629" = type { %"class.WTF::HashMap.632" }
%"class.WTF::HashMap.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"struct.WTF::KeyValuePair.635"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.635" = type { %"class.WTF::AtomicString", %"class.blink::Member.1063" }
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::HeapVector.636"* }
%"class.blink::HeapVector.636" = type { %"class.WTF::Vector.639" }
%"class.WTF::Vector.639" = type { %"class.WTF::VectorBuffer.640" }
%"class.WTF::VectorBuffer.640" = type { %"class.WTF::VectorBufferBase.641" }
%"class.WTF::VectorBufferBase.641" = type { %"class.blink::Member.642"*, i32, i32 }
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.646", i64, [4 x i32] }
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.178", %"class.blink::Member.671" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.671" = type { %"class.blink::MemberBase.672" }
%"class.blink::MemberBase.672" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.676" = type { %"class.WTF::Vector.679" }
%"class.WTF::Vector.679" = type { %"class.WTF::VectorBuffer.680" }
%"class.WTF::VectorBuffer.680" = type { %"class.WTF::VectorBufferBase.681" }
%"class.WTF::VectorBufferBase.681" = type { %"class.blink::Member.682"*, i32, i32 }
%"class.blink::Member.682" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.178", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.684" = type { %"class.WTF::Vector.687" }
%"class.WTF::Vector.687" = type { %"class.WTF::VectorBuffer.688" }
%"class.WTF::VectorBuffer.688" = type { %"class.WTF::VectorBufferBase.689" }
%"class.WTF::VectorBufferBase.689" = type { %"class.blink::Member.690"*, i32, i32 }
%"class.blink::Member.690" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.178" }
%"class.blink::HeapVector.692" = type { %"class.WTF::Vector.695" }
%"class.WTF::Vector.695" = type { %"class.WTF::VectorBuffer.696" }
%"class.WTF::VectorBuffer.696" = type { %"class.WTF::VectorBufferBase.697" }
%"class.WTF::VectorBufferBase.697" = type { %"class.blink::Member.698"*, i32, i32 }
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.700", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.700" = type { %"class.WTF::Vector.703" }
%"class.WTF::Vector.703" = type { %"class.WTF::VectorBuffer.704" }
%"class.WTF::VectorBuffer.704" = type { %"class.WTF::VectorBufferBase.705" }
%"class.WTF::VectorBufferBase.705" = type { %"class.blink::Member.706"*, i32, i32 }
%"class.blink::Member.706" = type opaque
%"class.blink::HeapVector.709" = type { %"class.WTF::Vector.712" }
%"class.WTF::Vector.712" = type { %"class.WTF::VectorBuffer.713" }
%"class.WTF::VectorBuffer.713" = type { %"class.WTF::VectorBufferBase.714" }
%"class.WTF::VectorBufferBase.714" = type { %"class.blink::Member.715"*, i32, i32 }
%"class.blink::Member.715" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.178" }
%"class.blink::HeapVector.717" = type { %"class.WTF::Vector.720" }
%"class.WTF::Vector.720" = type { %"class.WTF::VectorBuffer.721" }
%"class.WTF::VectorBuffer.721" = type { %"class.WTF::VectorBufferBase.722" }
%"class.WTF::VectorBufferBase.722" = type { %"class.blink::Member.723"*, i32, i32 }
%"class.blink::Member.723" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", i32, [4 x i8] }>
%"class.blink::HeapVector.725" = type { %"class.WTF::Vector.728" }
%"class.WTF::Vector.728" = type { %"class.WTF::VectorBuffer.729" }
%"class.WTF::VectorBuffer.729" = type { %"class.WTF::VectorBufferBase.730" }
%"class.WTF::VectorBufferBase.730" = type { %"class.blink::Member.731"*, i32, i32 }
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66" }
%"class.blink::HeapVector.734" = type { %"class.WTF::Vector.737" }
%"class.WTF::Vector.737" = type { %"class.WTF::VectorBuffer.738" }
%"class.WTF::VectorBuffer.738" = type { %"class.WTF::VectorBufferBase.739" }
%"class.WTF::VectorBufferBase.739" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.646", i32, i32 }
%"class.WTF::Vector.741" = type { %"class.WTF::VectorBuffer.742" }
%"class.WTF::VectorBuffer.742" = type { %"class.WTF::VectorBufferBase.743" }
%"class.WTF::VectorBufferBase.743" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.744, i8, [7 x i8] }>
%class.scoped_refptr.744 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.747" = type { %"class.blink::MemberBase.748" }
%"class.blink::MemberBase.748" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.751", %"class.blink::HeapHashMap.751", %"class.blink::HeapHashMap.751", %"class.blink::HeapHashMap.751" }
%"class.blink::HeapHashMap.751" = type { %"class.WTF::HashMap.754" }
%"class.WTF::HashMap.754" = type { %"class.WTF::HashTable.755" }
%"class.WTF::HashTable.755" = type <{ %"struct.WTF::KeyValuePair.757"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.757" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.758" }
%"class.blink::HeapHashMap.758" = type { %"class.WTF::HashMap.761" }
%"class.WTF::HashMap.761" = type { %"class.WTF::HashTable.762" }
%"class.WTF::HashTable.762" = type <{ %"struct.WTF::KeyValuePair.764"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.764" = type { %"class.blink::Member.150", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1054", %"class.WTF::Vector.1054" }
%"class.WTF::Vector.1054" = type { %"class.WTF::VectorBuffer.1055" }
%"class.WTF::VectorBuffer.1055" = type { %"class.WTF::VectorBufferBase.1056" }
%"class.WTF::VectorBufferBase.1056" = type { %class.scoped_refptr.1053*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.112", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.765" = type { %"class.WTF::HashSet.768" }
%"class.WTF::HashSet.768" = type { %"class.WTF::HashTable.769" }
%"class.WTF::HashTable.769" = type <{ %"class.blink::Member.167"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.773" = type { %"class.WTF::HashMap.776" }
%"class.WTF::HashMap.776" = type { %"class.WTF::HashTable.777" }
%"class.WTF::HashTable.777" = type <{ %"struct.WTF::KeyValuePair.779"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.779" = type opaque
%"class.blink::HeapHashMap.780" = type { %"class.WTF::HashMap.783" }
%"class.WTF::HashMap.783" = type { %"class.WTF::HashTable.784" }
%"class.WTF::HashTable.784" = type <{ %"struct.WTF::KeyValuePair.786"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.786" = type opaque
%"class.std::__1::unique_ptr.787" = type { %"class.std::__1::__compressed_pair.788" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.793" = type { %"class.WTF::Vector.796" }
%"class.WTF::Vector.796" = type { %"class.WTF::VectorBuffer.797" }
%"class.WTF::VectorBuffer.797" = type { %"class.WTF::VectorBufferBase.798" }
%"class.WTF::VectorBufferBase.798" = type { %"struct.std::__1::pair.799"*, i32, i32 }
%"struct.std::__1::pair.799" = type opaque
%"class.blink::HeapVector.512" = type { %"class.WTF::Vector.515" }
%"class.WTF::Vector.515" = type { %"class.WTF::VectorBuffer.516" }
%"class.WTF::VectorBuffer.516" = type { %"class.WTF::VectorBufferBase.517" }
%"class.WTF::VectorBufferBase.517" = type { %"struct.std::__1::pair.518"*, i32, i32 }
%"struct.std::__1::pair.518" = type opaque
%"class.blink::HeapHashSet.801" = type { %"class.WTF::HashSet.804" }
%"class.WTF::HashSet.804" = type { %"class.WTF::HashTable.805" }
%"class.WTF::HashTable.805" = type <{ %"class.blink::WeakMember.807"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.807" = type { %"class.blink::MemberBase.134" }
%"class.blink::HeapHashMap.808" = type { %"class.WTF::HashMap.811" }
%"class.WTF::HashMap.811" = type { %"class.WTF::HashTable.812" }
%"class.WTF::HashTable.812" = type <{ %"struct.WTF::KeyValuePair.814"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.814" = type { %"class.WTF::AtomicString", %"class.blink::Member.698" }
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.817" = type { %"class.WTF::HashMap.820" }
%"class.WTF::HashMap.820" = type { %"class.WTF::HashTable.821" }
%"class.WTF::HashTable.821" = type <{ %"struct.WTF::KeyValuePair.823"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.823" = type opaque
%class.scoped_refptr.824 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.825 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.826" = type { %"class.WTF::HashSet.829" }
%"class.WTF::HashSet.829" = type { %"class.WTF::HashTable.830" }
%"class.WTF::HashTable.830" = type <{ %"class.blink::Member.832"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.832" = type opaque
%"class.blink::Member.833" = type { %"class.blink::MemberBase.834" }
%"class.blink::MemberBase.834" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.835" = type { %"class.blink::MemberBase.836" }
%"class.blink::MemberBase.836" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.839" = type { %"class.WTF::HashMap.842" }
%"class.WTF::HashMap.842" = type { %"class.WTF::HashTable.843" }
%"class.WTF::HashTable.843" = type <{ %"struct.WTF::KeyValuePair.845"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.845" = type opaque
%"class.WTF::Vector.846" = type { %"class.WTF::VectorBuffer.847" }
%"class.WTF::VectorBuffer.847" = type { %"class.WTF::VectorBufferBase.848" }
%"class.WTF::VectorBufferBase.848" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.853" = type { %"class.blink::MemberBase.854" }
%"class.blink::MemberBase.854" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.855" = type { %"class.blink::MemberBase.856" }
%"class.blink::MemberBase.856" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.857" = type { %"class.WTF::Vector.860" }
%"class.WTF::Vector.860" = type { %"class.WTF::VectorBuffer.861" }
%"class.WTF::VectorBuffer.861" = type { %"class.WTF::VectorBufferBase.862" }
%"class.WTF::VectorBufferBase.862" = type { %"class.blink::Member.863"*, i32, i32 }
%"class.blink::Member.863" = type opaque
%"class.std::__1::unique_ptr.865" = type { %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.871" = type { %"class.WTF::HashSet.874" }
%"class.WTF::HashSet.874" = type { %"class.WTF::HashTable.875" }
%"class.WTF::HashTable.875" = type <{ %"class.blink::WeakMember.877"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.877" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.878", i32, [4 x i8] }>
%"class.WTF::Vector.878" = type { %"class.WTF::VectorBuffer.879" }
%"class.WTF::VectorBuffer.879" = type { %"class.WTF::VectorBufferBase.880" }
%"class.WTF::VectorBufferBase.880" = type { %"struct.std::__1::pair.881"*, i32, i32 }
%"struct.std::__1::pair.881" = type opaque
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.886" = type { %"class.WTF::VectorBuffer.887" }
%"class.WTF::VectorBuffer.887" = type { %"class.WTF::VectorBufferBase.888" }
%"class.WTF::VectorBufferBase.888" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.897" = type { %"class.WTF::Vector.900" }
%"class.WTF::Vector.900" = type { %"class.WTF::VectorBuffer.901" }
%"class.WTF::VectorBuffer.901" = type { %"class.WTF::VectorBufferBase.902" }
%"class.WTF::VectorBufferBase.902" = type { %"class.blink::Member.903"*, i32, i32 }
%"class.blink::Member.903" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.125" }
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.915" = type { %"class.WTF::HashTable.916" }
%"class.WTF::HashTable.916" = type <{ %"struct.WTF::KeyValuePair.919"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.919" = type opaque
%"class.blink::Member.920" = type { %"class.blink::MemberBase.921" }
%"class.blink::MemberBase.921" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.922" = type { %"class.blink::MemberBase.923" }
%"class.blink::MemberBase.923" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.924" = type { %"class.blink::MemberBase.925" }
%"class.blink::MemberBase.925" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.468", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.459, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.459 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.460" }>
%"class.base::RefCountedThreadSafe.460" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.461 }
%class.scoped_refptr.461 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.462", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.462" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.463" }
%"struct.std::__1::atomic.463" = type { %"struct.std::__1::__atomic_base.464" }
%"struct.std::__1::__atomic_base.464" = type { %"struct.std::__1::__atomic_base.465" }
%"struct.std::__1::__atomic_base.465" = type { %"struct.std::__1::__cxx_atomic_impl.466" }
%"struct.std::__1::__cxx_atomic_impl.466" = type { %"struct.std::__1::__cxx_atomic_base_impl.467" }
%"struct.std::__1::__cxx_atomic_base_impl.467" = type { i8 }
%"class.blink::WeakMember.468" = type { %"class.blink::MemberBase.126" }
%"class.blink::HeapHashSet.928" = type { %"class.WTF::HashSet.931" }
%"class.WTF::HashSet.931" = type { %"class.WTF::HashTable.932" }
%"class.WTF::HashTable.932" = type <{ %"class.blink::Member.934"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.934" = type opaque
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.941" = type { %"class.blink::MemberBase.942" }
%"class.blink::MemberBase.942" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.943" = type { %"class.blink::MemberBase.944" }
%"class.blink::MemberBase.944" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.951" = type { %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.965" = type { %"class.WTF::VectorBuffer.966" }
%"class.WTF::VectorBuffer.966" = type { %"class.WTF::VectorBufferBase.967" }
%"class.WTF::VectorBufferBase.967" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.970" = type { %"class.WTF::HashMap.973" }
%"class.WTF::HashMap.973" = type { %"class.WTF::HashTable.974" }
%"class.WTF::HashTable.974" = type <{ %"struct.WTF::KeyValuePair.976"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.976" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.979" = type { %"class.std::__1::__compressed_pair.980" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.981" }
%"struct.std::__1::__compressed_pair_elem.981" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.985" = type { %"class.blink::MemberBase.986" }
%"class.blink::MemberBase.986" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.989" = type { %"class.WTF::HashMap.992" }
%"class.WTF::HashMap.992" = type { %"class.WTF::HashTable.993" }
%"class.WTF::HashTable.993" = type <{ %"struct.WTF::KeyValuePair.995"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.995" = type opaque
%"class.blink::HeapObserverSet.996" = type { i32, [4 x i8], %"class.blink::HeapHashSet.997" }
%"class.blink::HeapHashSet.997" = type { %"class.WTF::HashSet.1000" }
%"class.WTF::HashSet.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"class.blink::WeakMember.1003"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1003" = type opaque
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.125", %"class.blink::HeapHashSet.1013", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1020", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1013" = type { %"class.WTF::HashSet.1016" }
%"class.WTF::HashSet.1016" = type { %"class.WTF::HashTable.1017" }
%"class.WTF::HashTable.1017" = type <{ %"class.blink::Member.1019"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1019" = type opaque
%"class.blink::HeapTaskRunnerTimer.1020" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1021", { i64, i64 } }
%"class.blink::WeakMember.1021" = type { %"class.blink::MemberBase.1007" }
%"class.blink::WeakMember.1008" = type { %"class.blink::MemberBase.113" }
%"class.blink::Member.1009" = type { %"class.blink::MemberBase.1010" }
%"class.blink::MemberBase.1010" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::HashSet.127" = type { %"class.WTF::HashTable.128" }
%"class.WTF::HashTable.128" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.88, %"class.blink::Member.133", %"class.blink::Member.114" }
%"class.blink::HeapVector.135" = type { %"class.WTF::Vector.138" }
%"class.WTF::Vector.138" = type { %"class.WTF::VectorBuffer.139" }
%"class.WTF::VectorBuffer.139" = type { %"class.WTF::VectorBufferBase.140" }
%"class.WTF::VectorBufferBase.140" = type { %"class.blink::Member.114"*, i32, i32 }
%"class.blink::Member.142" = type { %"class.blink::MemberBase.143" }
%"class.blink::MemberBase.143" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1044, %"class.blink::Member.1045", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1044 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1047" }
%"class.blink::Persistent.1047" = type { %"class.blink::PersistentBase.1048" }
%"class.blink::PersistentBase.1048" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1068 }
%union.anon.1068 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink38AbstractPropertySetCSSStyleDeclarationD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink19CSSStyleDeclaration18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink38AbstractPropertySetCSSStyleDeclaration10parentRuleEv = comdat any

$_ZNK5blink19CSSStyleDeclaration16ParentStyleSheetEv = comdat any

$_ZNK5blink38AbstractPropertySetCSSStyleDeclaration13ParentElementEv = comdat any

$_ZN5blink38AbstractPropertySetCSSStyleDeclaration10WillMutateEv = comdat any

$_ZN5blink38AbstractPropertySetCSSStyleDeclaration9DidMutateENS0_12MutationTypeE = comdat any

$_ZNK5blink38AbstractPropertySetCSSStyleDeclaration15IsKeyframeStyleEv = comdat any

$_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"important\00", align 1
@_ZTVN5blink38AbstractPropertySetCSSStyleDeclarationE = hidden unnamed_addr constant { [33 x i8*], [3 x i8*] } { [33 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclarationD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*)* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSStyleDeclaration"*)* @_ZNK5blink19CSSStyleDeclaration18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.blink::CSSRule"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration10parentRuleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration7cssTextEv to i8*), i8* bitcast (void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration10setCSSTextEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (i32 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration6lengthEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration4itemEj to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::String"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration16getPropertyValueERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::String"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration19getPropertyPriorityERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::String"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration20GetPropertyShorthandERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::String"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration18IsPropertyImplicitERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration11setPropertyEPKNS_16ExecutionContextERKN3WTF6StringES7_S7_RNS_14ExceptionStateE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration14removePropertyERKN3WTF6StringERNS_14ExceptionStateE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration27GetPropertyCSSValueInternalENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::StringImpl"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration27GetPropertyCSSValueInternalEN3WTF12AtomicStringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration24GetPropertyValueInternalENS_13CSSPropertyIDE to i8*), i8* bitcast (void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32, %"class.WTF::String"*, %"class.WTF::String"*, i1, i32, %"class.blink::ExceptionState"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration19SetPropertyInternalENS_13CSSPropertyIDERKN3WTF6StringES5_bNS_17SecureContextModeERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32, %"class.blink::CSSValue"*)* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration18CssPropertyMatchesENS_13CSSPropertyIDERKNS_8CSSValueE to i8*), i8* bitcast (%"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)* @_ZNK5blink19CSSStyleDeclaration16ParentStyleSheetEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration13ParentElementEv to i8*), i8* bitcast (void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration10WillMutateEv to i8*), i8* bitcast (void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration9DidMutateENS0_12MutationTypeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration15IsKeyframeStyleEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink38AbstractPropertySetCSSStyleDeclaration5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink27StyleAttributeMutationScope15should_deliver_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink19CSSStyleDeclaration18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration6lengthEv(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %3 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %3, i64 29
  %5 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %5(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %7 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration4itemEj(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::CSSPropertyName", align 8
  %5 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %6 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %6, i64 29
  %8 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %7, align 8
  %9 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %8(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %10 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %9, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp ugt i32 %11, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i64 0) #7
  br label %163

14:                                               ; preds = %2
  %15 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %5, align 8
  %16 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %15, i64 29
  %17 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %16, align 8
  %18 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %17(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %19 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %18, i64 0, i32 0
  %20 = icmp eq %"class.blink::MutableCSSPropertyValueSet"* %18, null
  %21 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %18, i64 0, i32 0, i32 0
  br i1 %20, label %22, label %24

22:                                               ; preds = %14
  %23 = load i32, i32* %21, align 8
  br label %32

24:                                               ; preds = %14
  %25 = load i32, i32* %21, align 4
  %26 = icmp sgt i32 %25, -1
  br i1 %26, label %32, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %19, i64 4
  %29 = bitcast %"class.blink::CSSPropertyValueSet"* %28 to %"class.WTF::Vector.61"*
  %30 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.61"* %29, i32 %1) #7
  %31 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %30, i64 0, i32 0
  br label %42

32:                                               ; preds = %24, %22
  %33 = phi i32 [ %23, %22 ], [ %25, %24 ]
  %34 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %19, i64 2
  %35 = bitcast %"class.blink::CSSPropertyValueSet"* %34 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %36 = and i32 %33, 268435455
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %35, i64 %37
  %39 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %38 to %"struct.blink::CSSPropertyValueMetadata"*
  %40 = zext i32 %1 to i64
  %41 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %39, i64 %40
  br label %42

42:                                               ; preds = %27, %32
  %43 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %41, %32 ], [ %31, %27 ]
  %44 = tail call i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"* %43) #7
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %85

46:                                               ; preds = %42
  br i1 %20, label %55, label %47

47:                                               ; preds = %46
  %48 = load i32, i32* %21, align 4
  %49 = icmp sgt i32 %48, -1
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %19, i64 4
  %52 = bitcast %"class.blink::CSSPropertyValueSet"* %51 to %"class.WTF::Vector.61"*
  %53 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.61"* %52, i32 %1) #7
  %54 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %53, i64 0, i32 1, i32 0, i32 0
  br label %60

55:                                               ; preds = %47, %46
  %56 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %19, i64 2
  %57 = bitcast %"class.blink::CSSPropertyValueSet"* %56 to %"class.blink::Member.66"*
  %58 = zext i32 %1 to i64
  %59 = getelementptr inbounds %"class.blink::Member.66", %"class.blink::Member.66"* %57, i64 %58, i32 0, i32 0
  br label %60

60:                                               ; preds = %50, %55
  %61 = phi %"class.blink::CSSValue"** [ %59, %55 ], [ %54, %50 ]
  %62 = bitcast %"class.blink::CSSValue"** %61 to %"class.blink::CSSCustomPropertyDeclaration"**
  %63 = load %"class.blink::CSSCustomPropertyDeclaration"*, %"class.blink::CSSCustomPropertyDeclaration"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::CSSCustomPropertyDeclaration", %"class.blink::CSSCustomPropertyDeclaration"* %63, i64 0, i32 2, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"** %66, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %163, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %163

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #7
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %73
  tail call void @llvm.trap() #7
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %163

85:                                               ; preds = %42
  %86 = bitcast %"class.blink::CSSPropertyName"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #7
  br i1 %20, label %87, label %89

87:                                               ; preds = %85
  %88 = load i32, i32* %21, align 8
  br label %97

89:                                               ; preds = %85
  %90 = load i32, i32* %21, align 4
  %91 = icmp sgt i32 %90, -1
  br i1 %91, label %97, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %19, i64 4
  %94 = bitcast %"class.blink::CSSPropertyValueSet"* %93 to %"class.WTF::Vector.61"*
  %95 = tail call dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.61"* %94, i32 %1) #7
  %96 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %95, i64 0, i32 0
  br label %107

97:                                               ; preds = %89, %87
  %98 = phi i32 [ %88, %87 ], [ %90, %89 ]
  %99 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %19, i64 2
  %100 = bitcast %"class.blink::CSSPropertyValueSet"* %99 to %"class.blink::ImmutableCSSPropertyValueSet"*
  %101 = and i32 %98, 268435455
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds %"class.blink::ImmutableCSSPropertyValueSet", %"class.blink::ImmutableCSSPropertyValueSet"* %100, i64 %102
  %104 = bitcast %"class.blink::ImmutableCSSPropertyValueSet"* %103 to %"struct.blink::CSSPropertyValueMetadata"*
  %105 = zext i32 %1 to i64
  %106 = getelementptr inbounds %"struct.blink::CSSPropertyValueMetadata", %"struct.blink::CSSPropertyValueMetadata"* %104, i64 %105
  br label %107

107:                                              ; preds = %92, %97
  %108 = phi %"struct.blink::CSSPropertyValueMetadata"* [ %106, %97 ], [ %96, %92 ]
  %109 = tail call { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"* %108) #7
  %110 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 0
  %111 = extractvalue { i32, %"class.WTF::StringImpl"* } %109, 0
  store i32 %111, i32* %110, align 8
  %112 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %113 = extractvalue { i32, %"class.WTF::StringImpl"* } %109, 1
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %112, align 8
  %114 = call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* nonnull %4) #7
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %114, %"class.WTF::StringImpl"** %115, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %116, label %146, label %117

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %134

124:                                              ; preds = %117
  %125 = zext i32 %123 to i33
  %126 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %125, i33 1) #7
  %127 = extractvalue { i33, i1 } %126, 1
  %128 = extractvalue { i33, i1 } %126, 0
  %129 = icmp slt i33 %128, 0
  %130 = or i1 %127, %129
  br i1 %130, label %131, label %132, !prof !2

131:                                              ; preds = %124
  call void @llvm.trap() #7
  unreachable

132:                                              ; preds = %124
  %133 = trunc i33 %128 to i32
  store i32 %133, i32* %122, align 4
  br label %134

134:                                              ; preds = %117, %132
  %135 = phi i32 [ %133, %132 ], [ %123, %117 ]
  %136 = load atomic i32, i32* %118 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %141 = add i32 %135, -1
  store i32 %141, i32* %140, align 4
  br label %142

142:                                              ; preds = %139, %134
  %143 = phi i32 [ %141, %139 ], [ %135, %134 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #7
  br label %146

146:                                              ; preds = %107, %142, %145
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %112, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #7
  br label %162

162:                                              ; preds = %146, %158, %161
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #7
  br label %163

163:                                              ; preds = %162, %60, %68, %83, %13
  %164 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  ret %"class.WTF::StringImpl"* %165
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration7cssTextEv(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %3 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %3, i64 29
  %5 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %4, align 8
  %6 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %5(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %7 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %6, i64 0, i32 0
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %7) #7
  ret %"class.WTF::StringImpl"* %8
}

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink38AbstractPropertySetCSSStyleDeclaration10setCSSTextEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.blink::ExecutionContext"* readonly, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::StyleAttributeMutationScope", align 8
  %6 = bitcast %"class.blink::StyleAttributeMutationScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = bitcast %"class.blink::StyleAttributeMutationScope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZN5blink27StyleAttributeMutationScopeC1EPNS_38AbstractPropertySetCSSStyleDeclarationE(%"class.blink::StyleAttributeMutationScope"* nonnull %5, %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %8 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %9 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %9, i64 27
  %11 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %10, align 8
  call void %11(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %12 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 6, i32 11
  %15 = load i32, i32* %14, align 8
  br label %16

16:                                               ; preds = %4, %13
  %17 = phi i32 [ %15, %13 ], [ 0, %4 ]
  %18 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %19 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %19, i64 29
  %21 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %20, align 8
  %22 = call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %21(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %23 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 0, i32 0
  %24 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)***
  %25 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %25, i64 25
  %27 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %26, align 8
  %28 = call %"class.blink::CSSStyleSheet"* %27(%"class.blink::CSSStyleDeclaration"* %23) #7
  %29 = icmp eq %"class.blink::CSSStyleSheet"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %16
  %31 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %28, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %31, align 8
  br label %33

33:                                               ; preds = %16, %30
  %34 = phi %"class.blink::StyleSheetContents"* [ %32, %30 ], [ null, %16 ]
  call void @_ZN5blink26MutableCSSPropertyValueSet20ParseDeclarationListERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %22, %"class.WTF::String"* dereferenceable(8) %2, i32 %17, %"class.blink::StyleSheetContents"* %34) #7
  %35 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)***
  %36 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)**, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)** %36, i64 28
  %38 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)** %37, align 8
  call void %38(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i32 1) #7
  store i8 1, i8* @_ZN5blink27StyleAttributeMutationScope15should_deliver_E, align 1
  call void @_ZN5blink27StyleAttributeMutationScopeD1Ev(%"class.blink::StyleAttributeMutationScope"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret void
}

declare void @_ZN5blink27StyleAttributeMutationScopeC1EPNS_38AbstractPropertySetCSSStyleDeclarationE(%"class.blink::StyleAttributeMutationScope"*, %"class.blink::AbstractPropertySetCSSStyleDeclaration"*) unnamed_addr #2

declare void @_ZN5blink26MutableCSSPropertyValueSet20ParseDeclarationListERKN3WTF6StringENS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::String"* dereferenceable(8), i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StyleSheetContents"* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration17ContextStyleSheetEv(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 0, i32 0
  %3 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)***
  %4 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %4, i64 25
  %6 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %5, align 8
  %7 = tail call %"class.blink::CSSStyleSheet"* %6(%"class.blink::CSSStyleDeclaration"* %2) #7
  %8 = icmp eq %"class.blink::CSSStyleSheet"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %7, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %10, align 8
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi %"class.blink::StyleSheetContents"* [ %11, %9 ], [ null, %1 ]
  ret %"class.blink::StyleSheetContents"* %13
}

; Function Attrs: nounwind
declare void @_ZN5blink27StyleAttributeMutationScopeD1Ev(%"class.blink::StyleAttributeMutationScope"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration16getPropertyValueERKN3WTF6StringE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 0, i32 0, i32 1
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %3) #7
  %5 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %4, %"class.WTF::String"* dereferenceable(8) %1) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %49, label %7

7:                                                ; preds = %2
  %8 = icmp eq i32 %5, 1
  %9 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %10 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %10, i64 29
  %12 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %11, align 8
  %13 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %12(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %14 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %13, i64 0, i32 0
  br i1 %8, label %15, label %46

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %42, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 acquire, align 4
  %22 = and i32 %21, 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = load atomic i32, i32* %20 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #7
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %28
  tail call void @llvm.trap() #7
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %42

40:                                               ; preds = %19
  %41 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %17) #7
  br label %42

42:                                               ; preds = %15, %24, %38, %40
  %43 = phi %"class.WTF::StringImpl"* [ %41, %40 ], [ %17, %24 ], [ %17, %38 ], [ null, %15 ]
  %44 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueIN3WTF12AtomicStringEEENS2_6StringET_(%"class.blink::CSSPropertyValueSet"* %14, %"class.WTF::StringImpl"* %43) #7
  %45 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  br label %49

46:                                               ; preds = %7
  %47 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"* %14, i32 %5) #7
  %48 = ptrtoint %"class.WTF::StringImpl"* %47 to i64
  br label %49

49:                                               ; preds = %2, %46, %42
  %50 = phi i64 [ %45, %42 ], [ %48, %46 ], [ 0, %2 ]
  %51 = inttoptr i64 %50 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %51
}

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueIN3WTF12AtomicStringEEENS2_6StringET_(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration19getPropertyPriorityERKN3WTF6StringE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 0, i32 0, i32 1
  %5 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %4) #7
  %6 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %5, %"class.WTF::String"* dereferenceable(8) %1) #7
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  br label %56

10:                                               ; preds = %2
  %11 = icmp eq i32 %6, 1
  %12 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %13 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %13, i64 29
  %15 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %14, align 8
  %16 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %15(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %17 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %16, i64 0, i32 0
  br i1 %11, label %18, label %48

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = and i32 %24, 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %22
  %28 = load atomic i32, i32* %23 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %45

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #7
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #7
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %45

43:                                               ; preds = %22
  %44 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %20) #7
  br label %45

45:                                               ; preds = %18, %27, %41, %43
  %46 = phi %"class.WTF::StringImpl"* [ %44, %43 ], [ %20, %27 ], [ %20, %41 ], [ null, %18 ]
  %47 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantIN3WTF12AtomicStringEEEbT_(%"class.blink::CSSPropertyValueSet"* %17, %"class.WTF::StringImpl"* %46) #7
  br label %50

48:                                               ; preds = %10
  %49 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"* %17, i32 %6) #7
  br label %50

50:                                               ; preds = %48, %45
  %51 = phi i1 [ %47, %45 ], [ %49, %48 ]
  %52 = select i1 %51, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0)
  %53 = select i1 %51, i64 9, i64 0
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %52, i64 %53) #7
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  br label %56

56:                                               ; preds = %50, %8
  %57 = phi %"class.WTF::StringImpl"* [ %55, %50 ], [ null, %8 ]
  ret %"class.WTF::StringImpl"* %57
}

declare zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantIN3WTF12AtomicStringEEEbT_(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink19CSSPropertyValueSet19PropertyIsImportantINS_13CSSPropertyIDEEEbT_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration20GetPropertyShorthandERKN3WTF6StringE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 0, i32 0, i32 1
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %3) #7
  %5 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %4, %"class.WTF::String"* dereferenceable(8) %1) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %50, label %7

7:                                                ; preds = %2
  %8 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %5) #7
  %9 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %50, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %15 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %15, i64 29
  %17 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %16, align 8
  %18 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %17(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %19 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %18, i64 0, i32 0
  %20 = tail call i32 @_ZNK5blink19CSSPropertyValueSet20GetPropertyShorthandENS_13CSSPropertyIDE(%"class.blink::CSSPropertyValueSet"* %19, i32 %5) #7
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %50, label %22

22:                                               ; preds = %13
  %23 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %20) #7
  %24 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %23, i64 0, i32 0
  %25 = bitcast %"class.blink::CSSProperty"* %23 to %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)***
  %26 = load %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)**, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)** %26, i64 4
  %28 = load %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)** %27, align 8
  %29 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %28(%"class.blink::CSSUnresolvedProperty"* %24) #7
  %30 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %22
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #7
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #7
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %33, %22, %13, %7, %2
  %51 = phi %"class.WTF::StringImpl"* [ null, %7 ], [ null, %2 ], [ null, %13 ], [ null, %22 ], [ %31, %33 ], [ %31, %48 ]
  ret %"class.WTF::StringImpl"* %51
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #2

declare i32 @_ZNK5blink19CSSPropertyValueSet20GetPropertyShorthandENS_13CSSPropertyIDE(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink38AbstractPropertySetCSSStyleDeclaration18IsPropertyImplicitERKN3WTF6StringE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 0, i32 0, i32 1
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %3) #7
  %5 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %4, %"class.WTF::String"* dereferenceable(8) %1) #7
  %6 = icmp slt i32 %5, 2
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %9 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %9, i64 29
  %11 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %10, align 8
  %12 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %11(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %13 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %12, i64 0, i32 0
  %14 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet18IsPropertyImplicitENS_13CSSPropertyIDE(%"class.blink::CSSPropertyValueSet"* %13, i32 %5) #7
  br label %15

15:                                               ; preds = %2, %7
  %16 = phi i1 [ %14, %7 ], [ false, %2 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink19CSSPropertyValueSet18IsPropertyImplicitENS_13CSSPropertyIDE(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink38AbstractPropertySetCSSStyleDeclaration11setPropertyEPKNS_16ExecutionContextERKN3WTF6StringES7_S7_RNS_14ExceptionStateE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = tail call i32 @_ZN5blink23UnresolvedCSSPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %44, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %16, align 8
  %17 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %18 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %17, i64* %18, align 8
  br label %26

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %25, align 8
  br label %26

26:                                               ; preds = %15, %19
  %27 = phi i32 [ %22, %19 ], [ 0, %15 ]
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %27, i32* %28, align 8
  %29 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [10 x i8]* nonnull dereferenceable(10) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %30, %33, %26
  %38 = icmp eq %"class.blink::ExecutionContext"* %1, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 6, i32 11
  %41 = load i32, i32* %40, align 8
  br label %42

42:                                               ; preds = %37, %39
  %43 = phi i32 [ %41, %39 ], [ 0, %37 ]
  call void @_ZN5blink38AbstractPropertySetCSSStyleDeclaration19SetPropertyInternalENS_13CSSPropertyIDERKN3WTF6StringES5_bNS_17SecureContextModeERNS_14ExceptionStateE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i32 %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, i1 zeroext %29, i32 %43, %"class.blink::ExceptionState"* dereferenceable(72) undef)
  br label %44

44:                                               ; preds = %6, %42, %33
  ret void
}

declare i32 @_ZN5blink23UnresolvedCSSPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink38AbstractPropertySetCSSStyleDeclaration19SetPropertyInternalENS_13CSSPropertyIDERKN3WTF6StringES5_bNS_17SecureContextModeERNS_14ExceptionStateE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::StyleAttributeMutationScope", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = bitcast %"class.blink::StyleAttributeMutationScope"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7
  %11 = bitcast %"class.blink::StyleAttributeMutationScope"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN5blink27StyleAttributeMutationScopeC1EPNS_38AbstractPropertySetCSSStyleDeclarationE(%"class.blink::StyleAttributeMutationScope"* nonnull %8, %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %12 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %13 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %13, i64 27
  %15 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %14, align 8
  call void %15(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %16 = icmp eq i32 %1, 1
  br i1 %16, label %17, label %89

17:                                               ; preds = %7
  %18 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 acquire, align 4
  %26 = and i32 %25, 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %44, label %28

28:                                               ; preds = %23
  %29 = load atomic i32, i32* %24 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %46

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #7
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %32
  call void @llvm.trap() #7
  unreachable

42:                                               ; preds = %32
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %33, align 4
  br label %46

44:                                               ; preds = %23
  %45 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %21) #7
  br label %46

46:                                               ; preds = %17, %28, %42, %44
  %47 = phi %"class.WTF::StringImpl"* [ %45, %44 ], [ %21, %28 ], [ %21, %42 ], [ null, %17 ]
  %48 = ptrtoint %"class.WTF::StringImpl"* %47 to i64
  %49 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  store i64 %48, i64* %49, align 8
  %50 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to i1 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %51 = load i1 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, i1 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, i1 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %51, i64 30
  %53 = load i1 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, i1 (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %52, align 8
  %54 = call zeroext i1 %53(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %55 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %56 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %56, i64 29
  %58 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %57, align 8
  %59 = call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %58(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %60 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 0, i32 0
  %61 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)***
  %62 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %62, i64 25
  %64 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %63, align 8
  %65 = call %"class.blink::CSSStyleSheet"* %64(%"class.blink::CSSStyleDeclaration"* %60) #7
  %66 = icmp eq %"class.blink::CSSStyleSheet"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %46
  %68 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %65, i64 0, i32 1, i32 0, i32 0
  %69 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %68, align 8
  br label %70

70:                                               ; preds = %46, %67
  %71 = phi %"class.blink::StyleSheetContents"* [ %69, %67 ], [ null, %46 ]
  %72 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKN3WTF12AtomicStringERKNS1_6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsEb(%"class.blink::MutableCSSPropertyValueSet"* %59, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %3, i1 zeroext %4, i32 %5, %"class.blink::StyleSheetContents"* %71, i1 zeroext %54) #7
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #7
  br label %88

88:                                               ; preds = %70, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %108

89:                                               ; preds = %7
  %90 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %91 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %90, align 8
  %92 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %91, i64 29
  %93 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %92, align 8
  %94 = call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %93(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %95 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 0, i32 0
  %96 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)***
  %97 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*** %96, align 8
  %98 = getelementptr inbounds %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %97, i64 25
  %99 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %98, align 8
  %100 = call %"class.blink::CSSStyleSheet"* %99(%"class.blink::CSSStyleDeclaration"* %95) #7
  %101 = icmp eq %"class.blink::CSSStyleSheet"* %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %89
  %103 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %100, i64 0, i32 1, i32 0, i32 0
  %104 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %103, align 8
  br label %105

105:                                              ; preds = %89, %102
  %106 = phi %"class.blink::StyleSheetContents"* [ %104, %102 ], [ null, %89 ]
  %107 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %94, i32 %1, %"class.WTF::String"* dereferenceable(8) %3, i1 zeroext %4, i32 %5, %"class.blink::StyleSheetContents"* %106) #7
  br label %108

108:                                              ; preds = %105, %88
  %109 = phi i16 [ %72, %88 ], [ %107, %105 ]
  %110 = and i16 %109, 256
  %111 = icmp eq i16 %110, 0
  %112 = lshr exact i16 %110, 8
  %113 = zext i16 %112 to i32
  %114 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)***
  %115 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)**, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)** %115, i64 28
  %117 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)** %116, align 8
  call void %117(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i32 %113) #7
  br i1 %111, label %119, label %118

118:                                              ; preds = %108
  store i8 1, i8* @_ZN5blink27StyleAttributeMutationScope15should_deliver_E, align 1
  br label %119

119:                                              ; preds = %108, %118
  call void @_ZN5blink27StyleAttributeMutationScopeD1Ev(%"class.blink::StyleAttributeMutationScope"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration14removePropertyERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::StyleAttributeMutationScope", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 0, i32 0, i32 1
  %7 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink22ExecutionContextClient19GetExecutionContextEv(%"class.blink::ExecutionContextClient"* %6) #7
  %8 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %7, %"class.WTF::String"* dereferenceable(8) %1) #7
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %67, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::StyleAttributeMutationScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7
  %12 = bitcast %"class.blink::StyleAttributeMutationScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZN5blink27StyleAttributeMutationScopeC1EPNS_38AbstractPropertySetCSSStyleDeclarationE(%"class.blink::StyleAttributeMutationScope"* nonnull %4, %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %13 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %14 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %14, i64 27
  %16 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %15, align 8
  call void %16(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %17 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = icmp eq i32 %8, 1
  %20 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %21 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %21, i64 29
  %23 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %22, align 8
  %24 = call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %23(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  br i1 %19, label %25, label %55

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %52, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 acquire, align 4
  %32 = and i32 %31, 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %29
  %35 = load atomic i32, i32* %30 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %52

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #7
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  call void @llvm.trap() #7
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %52

50:                                               ; preds = %29
  %51 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %52

52:                                               ; preds = %25, %34, %48, %50
  %53 = phi %"class.WTF::StringImpl"* [ %51, %50 ], [ %27, %34 ], [ %27, %48 ], [ null, %25 ]
  %54 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyIN3WTF12AtomicStringEEEbT_PNS2_6StringE(%"class.blink::MutableCSSPropertyValueSet"* %24, %"class.WTF::StringImpl"* %53, %"class.WTF::String"* nonnull %5) #7
  br label %57

55:                                               ; preds = %10
  %56 = call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %24, i32 %8, %"class.WTF::String"* nonnull %5) #7
  br label %57

57:                                               ; preds = %55, %52
  %58 = phi i1 [ %54, %52 ], [ %56, %55 ]
  %59 = zext i1 %58 to i32
  %60 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)***
  %61 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)**, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)** %61, i64 28
  %63 = load void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)*, void (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32)** %62, align 8
  call void %63(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i32 %59) #7
  br i1 %58, label %64, label %65

64:                                               ; preds = %57
  store i8 1, i8* @_ZN5blink27StyleAttributeMutationScope15should_deliver_E, align 1
  br label %65

65:                                               ; preds = %57, %64
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN5blink27StyleAttributeMutationScopeD1Ev(%"class.blink::StyleAttributeMutationScope"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7
  br label %67

67:                                               ; preds = %3, %65
  %68 = phi %"class.WTF::StringImpl"* [ %66, %65 ], [ null, %3 ]
  ret %"class.WTF::StringImpl"* %68
}

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyIN3WTF12AtomicStringEEEbT_PNS2_6StringE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::StringImpl"*, %"class.WTF::String"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration27GetPropertyCSSValueInternalENS_13CSSPropertyIDE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %4 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %4, i64 29
  %6 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %5, align 8
  %7 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %6(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %8 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %7, i64 0, i32 0
  %9 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %8, i32 %1) #7
  ret %"class.blink::CSSValue"* %9
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration27GetPropertyCSSValueInternalEN3WTF12AtomicStringE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.WTF::StringImpl"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %4 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %4, i64 29
  %6 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %5, align 8
  %7 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %6(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %8 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %7, i64 0, i32 0
  %9 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %29

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #7
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #7
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %29

27:                                               ; preds = %2
  %28 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueIN3WTF12AtomicStringEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %8, %"class.WTF::StringImpl"* null) #7
  br label %42

29:                                               ; preds = %10, %25
  %30 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueIN3WTF12AtomicStringEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %8, %"class.WTF::StringImpl"* nonnull %1) #7
  %31 = load atomic i32, i32* %11 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #7
  br label %42

42:                                               ; preds = %27, %38, %41
  %43 = phi %"class.blink::CSSValue"* [ %28, %27 ], [ %30, %38 ], [ %30, %41 ]
  ret %"class.blink::CSSValue"* %43
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueIN3WTF12AtomicStringEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink38AbstractPropertySetCSSStyleDeclaration24GetPropertyValueInternalENS_13CSSPropertyIDE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %4 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %4, i64 29
  %6 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %5, align 8
  %7 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %6(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %8 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %7, i64 0, i32 0
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet16GetPropertyValueINS_13CSSPropertyIDEEEN3WTF6StringET_(%"class.blink::CSSPropertyValueSet"* %8, i32 %1) #7
  ret %"class.WTF::StringImpl"* %9
}

declare i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyERKN3WTF12AtomicStringERKNS1_6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsEb(%"class.blink::MutableCSSPropertyValueSet"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*, i1 zeroext) local_unnamed_addr #2

declare i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration18CssPropertyMatchesENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32, %"class.blink::CSSValue"* dereferenceable(3)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0 to %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)***
  %5 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)**, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %5, i64 29
  %7 = load %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)*, %"class.blink::MutableCSSPropertyValueSet"* (%"class.blink::AbstractPropertySetCSSStyleDeclaration"*)** %6, align 8
  %8 = tail call dereferenceable(136) %"class.blink::MutableCSSPropertyValueSet"* %7(%"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0) #7
  %9 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %8, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZNK5blink19CSSPropertyValueSet15PropertyMatchesENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::CSSPropertyValueSet"* %9, i32 %1, %"class.blink::CSSValue"* dereferenceable(3) %2) #7
  ret i1 %10
}

declare zeroext i1 @_ZNK5blink19CSSPropertyValueSet15PropertyMatchesENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::CSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration5TraceEPNS_7VisitorE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 0, i32 0
  tail call void @_ZNK5blink19CSSStyleDeclaration5TraceEPNS_7VisitorE(%"class.blink::CSSStyleDeclaration"* %3, %"class.blink::Visitor"* %1) #7
  ret void
}

declare void @_ZNK5blink19CSSStyleDeclaration5TraceEPNS_7VisitorE(%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink38AbstractPropertySetCSSStyleDeclaration5TraceEPNS_7VisitorE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::AbstractPropertySetCSSStyleDeclaration"* %0, i64 -1, i32 0, i32 1
  %4 = bitcast %"class.blink::ExecutionContextClient"* %3 to %"class.blink::CSSStyleDeclaration"*
  tail call void @_ZNK5blink19CSSStyleDeclaration5TraceEPNS_7VisitorE(%"class.blink::CSSStyleDeclaration"* %4, %"class.blink::Visitor"* %1) #7
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink38AbstractPropertySetCSSStyleDeclarationD0Ev(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink19CSSStyleDeclaration18GetWrapperTypeInfoEv(%"class.blink::CSSStyleDeclaration"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink19CSSStyleDeclaration18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSRule"* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration10parentRuleEv(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSRule"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSStyleSheet"* @_ZNK5blink19CSSStyleDeclaration16ParentStyleSheetEv(%"class.blink::CSSStyleDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSStyleSheet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration13ParentElementEv(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Element"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink38AbstractPropertySetCSSStyleDeclaration10WillMutateEv(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink38AbstractPropertySetCSSStyleDeclaration9DidMutateENS0_12MutationTypeE(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink38AbstractPropertySetCSSStyleDeclaration15IsKeyframeStyleEv(%"class.blink::AbstractPropertySetCSSStyleDeclaration"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare i32 @_ZNK5blink24CSSPropertyValueMetadata10PropertyIDEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::CSSPropertyValue"* @_ZNK3WTF6VectorIN5blink16CSSPropertyValueELj4ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.61"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector.61", %"class.WTF::Vector.61"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertyValue"*, %"class.blink::CSSPropertyValue"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertyValue", %"class.blink::CSSPropertyValue"* %24, i64 %25
  ret %"class.blink::CSSPropertyValue"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare { i32, %"class.WTF::StringImpl"* } @_ZNK5blink24CSSPropertyValueMetadata4NameEv(%"struct.blink::CSSPropertyValueMetadata"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
