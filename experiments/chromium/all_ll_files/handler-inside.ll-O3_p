; ModuleID = '../../v8/src/trap-handler/handler-inside.cc'
source_filename = "../../v8/src/trap-handler/handler-inside.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.v8::internal::trap_handler::CodeProtectionInfoListEntry" = type { %"struct.v8::internal::trap_handler::CodeProtectionInfo"*, i64 }
%"struct.v8::internal::trap_handler::CodeProtectionInfo" = type { i64, i64, i64, [1 x %"struct.v8::internal::trap_handler::ProtectedInstructionData"] }
%"struct.v8::internal::trap_handler::ProtectedInstructionData" = type { i32, i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::trap_handler::MetadataLock" = type { i8 }

@_ZN2v88internal12trap_handler15gNumCodeObjectsE = external local_unnamed_addr global i64, align 8
@_ZN2v88internal12trap_handler12gCodeObjectsE = external local_unnamed_addr global %"struct.v8::internal::trap_handler::CodeProtectionInfoListEntry"*, align 8
@_ZN2v88internal12trap_handler19gRecoveredTrapCountE = external local_unnamed_addr global %"struct.std::__1::atomic", align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal12trap_handler17TryFindLandingPadEmPm(i64, i64* nocapture) local_unnamed_addr #0 {
  %3 = alloca %"class.v8::internal::trap_handler::MetadataLock", align 1
  %4 = getelementptr inbounds %"class.v8::internal::trap_handler::MetadataLock", %"class.v8::internal::trap_handler::MetadataLock"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #4
  call void @_ZN2v88internal12trap_handler12MetadataLockC1Ev(%"class.v8::internal::trap_handler::MetadataLock"* nonnull %3) #4
  %5 = load i64, i64* @_ZN2v88internal12trap_handler15gNumCodeObjectsE, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %49, label %7

7:                                                ; preds = %2
  %8 = load %"struct.v8::internal::trap_handler::CodeProtectionInfoListEntry"*, %"struct.v8::internal::trap_handler::CodeProtectionInfoListEntry"** @_ZN2v88internal12trap_handler12gCodeObjectsE, align 8
  br label %9

9:                                                ; preds = %7, %46
  %10 = phi i64 [ 0, %7 ], [ %47, %46 ]
  %11 = getelementptr inbounds %"struct.v8::internal::trap_handler::CodeProtectionInfoListEntry", %"struct.v8::internal::trap_handler::CodeProtectionInfoListEntry"* %8, i64 %10, i32 0
  %12 = load %"struct.v8::internal::trap_handler::CodeProtectionInfo"*, %"struct.v8::internal::trap_handler::CodeProtectionInfo"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::trap_handler::CodeProtectionInfo"* %12, null
  br i1 %13, label %46, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.v8::internal::trap_handler::CodeProtectionInfo", %"struct.v8::internal::trap_handler::CodeProtectionInfo"* %12, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %16, %0
  br i1 %17, label %46, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.v8::internal::trap_handler::CodeProtectionInfo", %"struct.v8::internal::trap_handler::CodeProtectionInfo"* %12, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %16
  %22 = icmp ugt i64 %21, %0
  br i1 %22, label %23, label %46

23:                                               ; preds = %18
  %24 = sub i64 %0, %16
  %25 = trunc i64 %24 to i32
  %26 = getelementptr inbounds %"struct.v8::internal::trap_handler::CodeProtectionInfo", %"struct.v8::internal::trap_handler::CodeProtectionInfo"* %12, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %46, label %32

29:                                               ; preds = %32
  %30 = zext i32 %38 to i64
  %31 = icmp ugt i64 %27, %30
  br i1 %31, label %32, label %46

32:                                               ; preds = %23, %29
  %33 = phi i64 [ %30, %29 ], [ 0, %23 ]
  %34 = phi i32 [ %38, %29 ], [ 0, %23 ]
  %35 = getelementptr inbounds %"struct.v8::internal::trap_handler::CodeProtectionInfo", %"struct.v8::internal::trap_handler::CodeProtectionInfo"* %12, i64 0, i32 3, i64 %33, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, %25
  %38 = add i32 %34, 1
  br i1 %37, label %39, label %29

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.v8::internal::trap_handler::CodeProtectionInfo", %"struct.v8::internal::trap_handler::CodeProtectionInfo"* %12, i64 0, i32 3, i64 %33, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = add i64 %16, %42
  store i64 %43, i64* %1, align 8
  %44 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN2v88internal12trap_handler19gRecoveredTrapCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %45 = add i64 %44, 1
  store atomic i64 %45, i64* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN2v88internal12trap_handler19gRecoveredTrapCountE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  br label %49

46:                                               ; preds = %29, %23, %9, %14, %18
  %47 = add nuw i64 %10, 1
  %48 = icmp ult i64 %47, %5
  br i1 %48, label %9, label %49

49:                                               ; preds = %46, %2, %39
  %50 = phi i1 [ true, %39 ], [ false, %2 ], [ false, %46 ]
  call void @_ZN2v88internal12trap_handler12MetadataLockD1Ev(%"class.v8::internal::trap_handler::MetadataLock"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #4
  ret i1 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal12trap_handler12MetadataLockC1Ev(%"class.v8::internal::trap_handler::MetadataLock"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN2v88internal12trap_handler12MetadataLockD1Ev(%"class.v8::internal::trap_handler::MetadataLock"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
