; ModuleID = '../../ui/base/ime/linux/input_method_auralinux.cc'
source_filename = "../../ui/base/ime/linux/input_method_auralinux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.16" }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.18" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::pair"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.23" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.ui::EventTarget" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::flat_map.26"* }
%"class.base::flat_map.26" = type { %"class.base::internal::flat_tree.27" }
%"class.base::internal::flat_tree.27" = type { %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"struct.std::__1::pair.30"*, %"struct.std::__1::pair.30"*, %"class.std::__1::__compressed_pair.44" }
%"struct.std::__1::pair.30" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.37" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.33 }
%union.anon.33 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { i8*, i8*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i8* }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::pair.30"* }
%"class.ui::DomKey" = type { i32 }
%"class.ui::InputMethodAuraLinux" = type { %"class.ui::InputMethodBase", %"class.ui::LinuxInputMethodContextDelegate", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10", %"class.absl::optional", %"class.std::__1::basic_string.52", %"struct.ui::CompositionText", i32, i8, i8, %"class.base::TimeTicks", %"class.base::WeakPtrFactory" }
%"class.ui::InputMethodBase" = type { %"class.ui::InputMethod", %"class.base::SupportsWeakPtr", %"class.ui::internal::InputMethodDelegate"*, %"class.ui::TextInputClient"*, %"class.base::ObserverList", %"class.gfx::Rect", %"class.std::__1::unique_ptr" }
%"class.ui::InputMethod" = type { i32 (...)** }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.ui::TextInputClient" = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.ui::VirtualKeyboardController"* }
%"class.ui::VirtualKeyboardController" = type opaque
%"class.ui::LinuxInputMethodContextDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.ui::LinuxInputMethodContext"* }
%"class.ui::LinuxInputMethodContext" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"class.ui::KeyEvent" }
%"class.ui::KeyEvent" = type <{ %"class.ui::Event", i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>
%"class.std::__1::basic_string.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.55 }
%union.anon.55 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.ui::CompositionText" = type { %"class.std::__1::basic_string.52", %"class.std::__1::vector.61", %"class.gfx::Range" }
%"class.std::__1::vector.61" = type { %"class.std::__1::__vector_base.62" }
%"class.std::__1::__vector_base.62" = type { %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"*, %"class.std::__1::__compressed_pair.70" }
%"struct.ui::ImeTextSpan" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.ui::ImeTextSpan"* }
%"class.gfx::Range" = type { i32, i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::LinuxInputMethodContextFactory" = type { i32 (...)** }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.56 }
%struct.anon.56 = type { %"struct.std::__1::__padding.57", i8 }
%"struct.std::__1::__padding.57" = type { [1 x i8] }
%"class.ui::InputMethodObserver" = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2ui20InputMethodAuraLinux14OnPreeditStartEv = comdat any

$_ZThn112_N2ui20InputMethodAuraLinux14OnPreeditStartEv = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

@_ZTVN2ui20InputMethodAuraLinuxE = hidden unnamed_addr constant { [30 x i8*], [9 x i8*] } { [30 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*)* @_ZN2ui20InputMethodAuraLinuxD2Ev to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*)* @_ZN2ui20InputMethodAuraLinuxD0Ev to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::internal::InputMethodDelegate"*)* @_ZN2ui15InputMethodBase11SetDelegateEPNS_8internal19InputMethodDelegateE to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*)* @_ZN2ui15InputMethodBase7OnFocusEv to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*)* @_ZN2ui15InputMethodBase6OnBlurEv to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*)* @_ZN2ui15InputMethodBase25SetFocusedTextInputClientEPNS_15TextInputClientE to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*)* @_ZN2ui15InputMethodBase21DetachTextInputClientEPNS_15TextInputClientE to i8*), i8* bitcast (%"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)* @_ZNK2ui15InputMethodBase18GetTextInputClientEv to i8*), i8* bitcast (i24 (%"class.ui::InputMethodAuraLinux"*, %"class.ui::KeyEvent"*)* @_ZN2ui20InputMethodAuraLinux16DispatchKeyEventEPNS_8KeyEventE to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*)* @_ZN2ui20InputMethodAuraLinux22OnTextInputTypeChangedEPKNS_15TextInputClientE to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*)* @_ZN2ui20InputMethodAuraLinux20OnCaretBoundsChangedEPKNS_15TextInputClientE to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*)* @_ZN2ui20InputMethodAuraLinux17CancelCompositionEPKNS_15TextInputClientE to i8*), i8* bitcast (i32 (%"class.ui::InputMethodBase"*)* @_ZNK2ui15InputMethodBase16GetTextInputTypeEv to i8*), i8* bitcast (i32 (%"class.ui::InputMethodBase"*)* @_ZNK2ui15InputMethodBase16GetTextInputModeEv to i8*), i8* bitcast (i1 (%"class.ui::InputMethodAuraLinux"*)* @_ZNK2ui20InputMethodAuraLinux20IsCandidatePopupOpenEv to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*)* @_ZN2ui15InputMethodBase28ShowVirtualKeyboardIfEnabledEv to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::InputMethodObserver"*)* @_ZN2ui15InputMethodBase11AddObserverEPNS_19InputMethodObserverE to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.ui::InputMethodObserver"*)* @_ZN2ui15InputMethodBase14RemoveObserverEPNS_19InputMethodObserverE to i8*), i8* bitcast (void (%"class.ui::InputMethodBase"*, %"class.gfx::Rect"*)* @_ZN2ui15InputMethodBase25SetOnScreenKeyboardBoundsERKN3gfx4RectE to i8*), i8* bitcast (%"class.ui::VirtualKeyboardController"* (%"class.ui::InputMethodBase"*)* @_ZN2ui15InputMethodBase28GetVirtualKeyboardControllerEv to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*, %"class.ui::TextInputClient"*)* @_ZN2ui20InputMethodAuraLinux25OnWillChangeFocusedClientEPNS_15TextInputClientES2_ to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*, %"class.ui::TextInputClient"*)* @_ZN2ui20InputMethodAuraLinux24OnDidChangeFocusedClientEPNS_15TextInputClientES2_ to i8*), i8* bitcast (i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)* @_ZNK2ui15InputMethodBase23DispatchKeyEventPostIMEEPNS_8KeyEventE to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, %"class.std::__1::basic_string.52"*)* @_ZN2ui20InputMethodAuraLinux8OnCommitERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, i32, i32)* @_ZN2ui20InputMethodAuraLinux23OnDeleteSurroundingTextEij to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, %"struct.ui::CompositionText"*)* @_ZN2ui20InputMethodAuraLinux16OnPreeditChangedERKNS_15CompositionTextE to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*)* @_ZN2ui20InputMethodAuraLinux12OnPreeditEndEv to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*)* @_ZN2ui20InputMethodAuraLinux14OnPreeditStartEv to i8*)], [9 x i8*] [i8* inttoptr (i64 -112 to i8*), i8* null, i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*)* @_ZThn112_N2ui20InputMethodAuraLinuxD1Ev to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*)* @_ZThn112_N2ui20InputMethodAuraLinuxD0Ev to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, %"class.std::__1::basic_string.52"*)* @_ZThn112_N2ui20InputMethodAuraLinux8OnCommitERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, i32, i32)* @_ZThn112_N2ui20InputMethodAuraLinux23OnDeleteSurroundingTextEij to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*, %"struct.ui::CompositionText"*)* @_ZThn112_N2ui20InputMethodAuraLinux16OnPreeditChangedERKNS_15CompositionTextE to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*)* @_ZThn112_N2ui20InputMethodAuraLinux12OnPreeditEndEv to i8*), i8* bitcast (void (%"class.ui::InputMethodAuraLinux"*)* @_ZThn112_N2ui20InputMethodAuraLinux14OnPreeditStartEv to i8*)] }, align 8
@__const._ZNK2ui20InputMethodAuraLinux23SendFakeProcessKeyEventEPNS_8KeyEventE.key_event = private unnamed_addr constant <{ { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.23" }, i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }> <{ { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.23" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.base::TimeTicks" { %"class.base::time_internal::TimeBase" { i64 -6148914691236517206 } }, { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 } { %"class.base::flat_map" { %"class.base::internal::flat_tree" { %"class.std::__1::vector.16" { %"class.std::__1::__vector_base.17" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"class.std::__1::__compressed_pair.18" { %"struct.std::__1::__compressed_pair_elem.19" { %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*) } } } } } }, i64 -6148914691236517206, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i64 -6148914691236517206 }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.ui::Event"* inttoptr (i64 -6148914691236517206 to %"class.ui::Event"*), i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.ui::EventTarget"* inttoptr (i64 -6148914691236517206 to %"class.ui::EventTarget"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.23" { %"class.std::__1::__compressed_pair.24" { %"struct.std::__1::__compressed_pair_elem.25" { %"class.base::flat_map.26"* inttoptr (i64 -6148914691236517206 to %"class.base::flat_map.26"*) } } } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.ui::DomKey" { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZN2ui15kPropertyFromVKE = external constant [0 x i8], align 1

@_ZN2ui20InputMethodAuraLinuxC1EPNS_8internal19InputMethodDelegateE = hidden unnamed_addr alias void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::internal::InputMethodDelegate"*), void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::internal::InputMethodDelegate"*)* @_ZN2ui20InputMethodAuraLinuxC2EPNS_8internal19InputMethodDelegateE
@_ZN2ui20InputMethodAuraLinuxD1Ev = hidden unnamed_addr alias void (%"class.ui::InputMethodAuraLinux"*), void (%"class.ui::InputMethodAuraLinux"*)* @_ZN2ui20InputMethodAuraLinuxD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinuxC2EPNS_8internal19InputMethodDelegateE(%"class.ui::InputMethodAuraLinux"*, %"class.ui::internal::InputMethodDelegate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  tail call void @_ZN2ui15InputMethodBaseC2EPNS_8internal19InputMethodDelegateE(%"class.ui::InputMethodBase"* %3, %"class.ui::internal::InputMethodDelegate"* %1) #11
  %4 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.ui::LinuxInputMethodContextDelegate", %"class.ui::LinuxInputMethodContextDelegate"* %4, i64 0, i32 0
  %6 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [9 x i8*] }, { [30 x i8*], [9 x i8*] }* @_ZTVN2ui20InputMethodAuraLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [9 x i8*] }, { [30 x i8*], [9 x i8*] }* @_ZTVN2ui20InputMethodAuraLinuxE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::unique_ptr.10"* %7 to i64*
  %9 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr.10"* %9 to i64*
  %11 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6
  %13 = bitcast %"class.std::__1::unique_ptr.10"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 17, i1 false)
  %14 = bitcast %union.anon* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 192, i1 false)
  tail call void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"* %12) #11
  %15 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 7
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 8
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 9
  store i8 0, i8* %17, align 1
  %18 = tail call i64 @_ZN4base9TimeTicks9UnixEpochEv() #11
  %19 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 11, i32 0
  %21 = ptrtoint %"class.ui::InputMethodAuraLinux"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %20, i64 %21) #11
  %22 = tail call %"class.ui::LinuxInputMethodContextFactory"* @_ZN2ui30LinuxInputMethodContextFactory8instanceEv() #11
  %23 = bitcast %"class.ui::LinuxInputMethodContextFactory"* %22 to %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)***
  %24 = load %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)**, %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)*** %23, align 8
  %25 = getelementptr inbounds %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)*, %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)** %24, i64 2
  %26 = load %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)*, %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)** %25, align 8
  %27 = tail call %"class.ui::LinuxInputMethodContext"* %26(%"class.ui::LinuxInputMethodContextFactory"* %22, %"class.ui::LinuxInputMethodContextDelegate"* %4, i1 zeroext false) #11
  %28 = ptrtoint %"class.ui::LinuxInputMethodContext"* %27 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %7, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %29, align 8
  store i64 %28, i64* %8, align 8
  %31 = icmp eq %"class.ui::LinuxInputMethodContext"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %2
  %33 = bitcast %"class.ui::LinuxInputMethodContext"* %30 to void (%"class.ui::LinuxInputMethodContext"*)***
  %34 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %34, i64 1
  %36 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %35, align 8
  tail call void %36(%"class.ui::LinuxInputMethodContext"* nonnull %30) #11
  br label %37

37:                                               ; preds = %32, %2
  %38 = tail call %"class.ui::LinuxInputMethodContextFactory"* @_ZN2ui30LinuxInputMethodContextFactory8instanceEv() #11
  %39 = bitcast %"class.ui::LinuxInputMethodContextFactory"* %38 to %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)***
  %40 = load %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)**, %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)*** %39, align 8
  %41 = getelementptr inbounds %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)*, %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)** %40, i64 2
  %42 = load %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)*, %"class.ui::LinuxInputMethodContext"* (%"class.ui::LinuxInputMethodContextFactory"*, %"class.ui::LinuxInputMethodContextDelegate"*, i1)** %41, align 8
  %43 = tail call %"class.ui::LinuxInputMethodContext"* %42(%"class.ui::LinuxInputMethodContextFactory"* %38, %"class.ui::LinuxInputMethodContextDelegate"* %4, i1 zeroext true) #11
  %44 = ptrtoint %"class.ui::LinuxInputMethodContext"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.10"* %9, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %45, align 8
  store i64 %44, i64* %10, align 8
  %47 = icmp eq %"class.ui::LinuxInputMethodContext"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %37
  %49 = bitcast %"class.ui::LinuxInputMethodContext"* %46 to void (%"class.ui::LinuxInputMethodContext"*)***
  %50 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %50, i64 1
  %52 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %51, align 8
  tail call void %52(%"class.ui::LinuxInputMethodContext"* nonnull %46) #11
  br label %53

53:                                               ; preds = %48, %37
  ret void
}

declare void @_ZN2ui15InputMethodBaseC2EPNS_8internal19InputMethodDelegateE(%"class.ui::InputMethodBase"*, %"class.ui::internal::InputMethodDelegate"*) unnamed_addr #1

declare void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"*) unnamed_addr #1

declare i64 @_ZN4base9TimeTicks9UnixEpochEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.ui::LinuxInputMethodContextFactory"* @_ZN2ui30LinuxInputMethodContextFactory8instanceEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinuxD2Ev(%"class.ui::InputMethodAuraLinux"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [9 x i8*] }, { [30 x i8*], [9 x i8*] }* @_ZTVN2ui20InputMethodAuraLinuxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [30 x i8*], [9 x i8*] }, { [30 x i8*], [9 x i8*] }* @_ZTVN2ui20InputMethodAuraLinuxE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 11, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #11
  %5 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6
  tail call void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"* %5) #11
  %6 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5
  %7 = bitcast %"class.std::__1::basic_string.52"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::basic_string.52"* %6 to i8**
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %1, %11
  %15 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN2ui8KeyEventD1Ev(%"class.ui::KeyEvent"* %19) #11
  store i8 0, i8* %15, align 8
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %21, align 8
  store %"class.ui::LinuxInputMethodContext"* null, %"class.ui::LinuxInputMethodContext"** %21, align 8
  %23 = icmp eq %"class.ui::LinuxInputMethodContext"* %22, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.ui::LinuxInputMethodContext"* %22 to void (%"class.ui::LinuxInputMethodContext"*)***
  %26 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %26, i64 1
  %28 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %27, align 8
  tail call void %28(%"class.ui::LinuxInputMethodContext"* nonnull %22) #11
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %31 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %30, align 8
  store %"class.ui::LinuxInputMethodContext"* null, %"class.ui::LinuxInputMethodContext"** %30, align 8
  %32 = icmp eq %"class.ui::LinuxInputMethodContext"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.ui::LinuxInputMethodContext"* %31 to void (%"class.ui::LinuxInputMethodContext"*)***
  %35 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %35, i64 1
  %37 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %36, align 8
  tail call void %37(%"class.ui::LinuxInputMethodContext"* nonnull %31) #11
  br label %38

38:                                               ; preds = %29, %33
  %39 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  tail call void @_ZN2ui15InputMethodBaseD2Ev(%"class.ui::InputMethodBase"* %39) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2ui15InputMethodBaseD2Ev(%"class.ui::InputMethodBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn112_N2ui20InputMethodAuraLinuxD1Ev(%"class.ui::InputMethodAuraLinux"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 -1, i32 5
  %3 = bitcast %"class.std::__1::basic_string.52"* %2 to %"class.ui::InputMethodAuraLinux"*
  tail call void @_ZN2ui20InputMethodAuraLinuxD2Ev(%"class.ui::InputMethodAuraLinux"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinuxD0Ev(%"class.ui::InputMethodAuraLinux"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui20InputMethodAuraLinuxD2Ev(%"class.ui::InputMethodAuraLinux"* %0) #11
  %2 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn112_N2ui20InputMethodAuraLinuxD0Ev(%"class.ui::InputMethodAuraLinux"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 -1, i32 5
  %3 = bitcast %"class.std::__1::basic_string.52"* %2 to %"class.ui::InputMethodAuraLinux"*
  tail call void @_ZN2ui20InputMethodAuraLinuxD2Ev(%"class.ui::InputMethodAuraLinux"* %3) #11
  %4 = bitcast %"class.std::__1::basic_string.52"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.ui::LinuxInputMethodContext"* @_ZN2ui20InputMethodAuraLinux20GetContextForTestingEb(%"class.ui::InputMethodAuraLinux"* nocapture readonly, i1 zeroext) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = select i1 %1, %"class.ui::LinuxInputMethodContext"** %3, %"class.ui::LinuxInputMethodContext"** %4
  %6 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %5, align 8
  ret %"class.ui::LinuxInputMethodContext"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN2ui20InputMethodAuraLinux16DispatchKeyEventEPNS_8KeyEventE(%"class.ui::InputMethodAuraLinux"*, %"class.ui::KeyEvent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %37, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %9, %11
  br i1 %12, label %13, label %27

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %15, %17
  br i1 %18, label %19, label %27

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = xor i32 %23, %21
  %25 = and i32 %24, -65537
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %19, %13, %6
  %28 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %29 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)***
  %30 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)**, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*** %29, align 8
  %31 = getelementptr inbounds i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %30, i64 22
  %32 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %31, align 8
  %33 = tail call i24 %32(%"class.ui::InputMethodBase"* %28, %"class.ui::KeyEvent"* %7) #11
  %34 = load i8, i8* %3, align 8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %19, %27
  tail call void @_ZN2ui8KeyEventD1Ev(%"class.ui::KeyEvent"* %7) #11
  store i8 0, i8* %3, align 8
  br label %37

37:                                               ; preds = %2, %27, %36
  %38 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %39 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %40 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %40, i64 7
  %42 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %41, align 8
  %43 = tail call %"class.ui::TextInputClient"* %42(%"class.ui::InputMethodBase"* %38) #11
  %44 = icmp eq %"class.ui::TextInputClient"* %43, null
  br i1 %44, label %45, label %56

45:                                               ; preds = %37
  %46 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)***
  %47 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)**, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*** %46, align 8
  %48 = getelementptr inbounds i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %47, i64 22
  %49 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %48, align 8
  %50 = tail call i24 %49(%"class.ui::InputMethodBase"* %38, %"class.ui::KeyEvent"* %1) #11
  %51 = trunc i24 %50 to i8
  %52 = lshr i24 %50, 8
  %53 = trunc i24 %52 to i8
  %54 = lshr i24 %50, 16
  %55 = trunc i24 %54 to i8
  br label %289

56:                                               ; preds = %37
  %57 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0
  %58 = tail call zeroext i1 @_ZNK2ui5Event14HasNativeEventEv(%"class.ui::Event"* %57) #11
  br i1 %58, label %151, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 12, i32 0, i32 0, i32 0
  %61 = load %"class.base::flat_map.26"*, %"class.base::flat_map.26"** %60, align 8
  %62 = icmp eq %"class.base::flat_map.26"* %61, null
  br i1 %62, label %151, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.base::flat_map.26", %"class.base::flat_map.26"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::pair.30"*, %"struct.std::__1::pair.30"** %64, align 8
  %66 = getelementptr inbounds %"class.base::flat_map.26", %"class.base::flat_map.26"* %61, i64 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast %"struct.std::__1::pair.30"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = ptrtoint %"struct.std::__1::pair.30"* %65 to i64
  %70 = sub i64 %68, %69
  %71 = icmp eq i64 %70, 0
  %72 = inttoptr i64 %68 to %"struct.std::__1::pair.30"*
  br i1 %71, label %92, label %73

73:                                               ; preds = %63
  %74 = sdiv exact i64 %70, 48
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi %"struct.std::__1::pair.30"* [ %65, %73 ], [ %87, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %86, %75 ]
  %78 = lshr i64 %77, 1
  %79 = getelementptr inbounds %"struct.std::__1::pair.30", %"struct.std::__1::pair.30"* %76, i64 %78
  %80 = getelementptr inbounds %"struct.std::__1::pair.30", %"struct.std::__1::pair.30"* %79, i64 0, i32 0
  %81 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %80, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2ui15kPropertyFromVKE, i64 0, i64 0)) #11
  %82 = icmp slt i32 %81, 0
  %83 = getelementptr inbounds %"struct.std::__1::pair.30", %"struct.std::__1::pair.30"* %79, i64 1
  %84 = xor i64 %78, -1
  %85 = add i64 %77, %84
  %86 = select i1 %82, i64 %85, i64 %78
  %87 = select i1 %82, %"struct.std::__1::pair.30"* %83, %"struct.std::__1::pair.30"* %76
  %88 = icmp eq i64 %86, 0
  br i1 %88, label %89, label %75

89:                                               ; preds = %75
  %90 = load %"struct.std::__1::pair.30"*, %"struct.std::__1::pair.30"** %66, align 8
  %91 = ptrtoint %"struct.std::__1::pair.30"* %87 to i64
  br label %92

92:                                               ; preds = %89, %63
  %93 = phi i64 [ %91, %89 ], [ %69, %63 ]
  %94 = phi %"struct.std::__1::pair.30"* [ %90, %89 ], [ %72, %63 ]
  %95 = phi %"struct.std::__1::pair.30"* [ %87, %89 ], [ %65, %63 ]
  %96 = icmp eq %"struct.std::__1::pair.30"* %95, %94
  br i1 %96, label %104, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"struct.std::__1::pair.30", %"struct.std::__1::pair.30"* %95, i64 0, i32 0
  %99 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %98, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN2ui15kPropertyFromVKE, i64 0, i64 0)) #11
  %100 = icmp sgt i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.std::__1::pair.30", %"struct.std::__1::pair.30"* %95, i64 1
  %103 = ptrtoint %"struct.std::__1::pair.30"* %102 to i64
  br label %104

104:                                              ; preds = %92, %97, %101
  %105 = phi i64 [ %103, %101 ], [ %93, %92 ], [ %93, %97 ]
  %106 = inttoptr i64 %105 to %"struct.std::__1::pair.30"*
  %107 = icmp eq %"struct.std::__1::pair.30"* %95, %106
  %108 = load %"struct.std::__1::pair.30"*, %"struct.std::__1::pair.30"** %66, align 8
  %109 = select i1 %107, %"struct.std::__1::pair.30"* %108, %"struct.std::__1::pair.30"* %95
  %110 = icmp eq %"struct.std::__1::pair.30"* %109, %108
  br i1 %110, label %151, label %111

111:                                              ; preds = %104
  %112 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)***
  %113 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)**, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*** %112, align 8
  %114 = getelementptr inbounds i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %113, i64 22
  %115 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %114, align 8
  %116 = tail call i24 %115(%"class.ui::InputMethodBase"* %38, %"class.ui::KeyEvent"* %1) #11
  %117 = trunc i24 %116 to i8
  %118 = lshr i24 %116, 8
  %119 = trunc i24 %118 to i8
  %120 = lshr i24 %116, 16
  %121 = trunc i24 %120 to i8
  %122 = or i24 %118, %116
  %123 = trunc i24 %122 to i8
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %289

125:                                              ; preds = %111
  %126 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 10
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %289

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 4
  %132 = load i8, i8* %131, align 4, !range !2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %138

134:                                              ; preds = %130
  %135 = tail call i32 @_ZNK2ui8KeyEvent9GetDomKeyEv(%"class.ui::KeyEvent"* %1) #11
  %136 = and i32 %135, 6291456
  %137 = icmp eq i32 %136, 4194304
  br i1 %137, label %138, label %289

138:                                              ; preds = %130, %134
  %139 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 7
  br i1 %141, label %142, label %289

142:                                              ; preds = %138
  %143 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %39, align 8
  %144 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %143, i64 7
  %145 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %144, align 8
  %146 = tail call %"class.ui::TextInputClient"* %145(%"class.ui::InputMethodBase"* %38) #11
  %147 = bitcast %"class.ui::TextInputClient"* %146 to void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)***
  %148 = load void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)**, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)** %148, i64 6
  %150 = load void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)** %149, align 8
  tail call void %150(%"class.ui::TextInputClient"* %146, %"class.ui::KeyEvent"* dereferenceable(168) %1) #11
  br label %289

151:                                              ; preds = %104, %59, %56
  %152 = tail call i64 @_ZN4base9TimeTicks9UnixEpochEv() #11
  %153 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 9
  store i8 0, i8* %154, align 1
  %155 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5
  %156 = bitcast %"class.std::__1::basic_string.52"* %155 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %156, i64 0, i32 1, i32 1
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %151
  %161 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i16*, i16** %161, align 8
  store i16 0, i16* %162, align 2
  %163 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %163, align 8
  br label %166

164:                                              ; preds = %151
  %165 = bitcast %"class.std::__1::basic_string.52"* %155 to i16*
  store i16 0, i16* %165, align 2
  store i8 0, i8* %157, align 1
  br label %166

166:                                              ; preds = %160, %164
  %167 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 7
  %168 = load i32, i32* %167, align 8
  switch i32 %168, label %169 [
    i32 0, label %171
    i32 2, label %171
  ]

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  br label %173

171:                                              ; preds = %166, %166
  %172 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %173

173:                                              ; preds = %171, %169
  %174 = phi %"class.ui::LinuxInputMethodContext"** [ %170, %169 ], [ %172, %171 ]
  %175 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %174, align 8
  %176 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 8
  %177 = load i8, i8* %176, align 1, !range !2
  store i8 1, i8* %176, align 1
  %178 = bitcast %"class.ui::LinuxInputMethodContext"* %175 to i1 (%"class.ui::LinuxInputMethodContext"*, %"class.ui::KeyEvent"*)***
  %179 = load i1 (%"class.ui::LinuxInputMethodContext"*, %"class.ui::KeyEvent"*)**, i1 (%"class.ui::LinuxInputMethodContext"*, %"class.ui::KeyEvent"*)*** %178, align 8
  %180 = getelementptr inbounds i1 (%"class.ui::LinuxInputMethodContext"*, %"class.ui::KeyEvent"*)*, i1 (%"class.ui::LinuxInputMethodContext"*, %"class.ui::KeyEvent"*)** %179, i64 2
  %181 = load i1 (%"class.ui::LinuxInputMethodContext"*, %"class.ui::KeyEvent"*)*, i1 (%"class.ui::LinuxInputMethodContext"*, %"class.ui::KeyEvent"*)** %180, align 8
  %182 = tail call zeroext i1 %181(%"class.ui::LinuxInputMethodContext"* %175, %"class.ui::KeyEvent"* dereferenceable(168) %1) #11
  %183 = icmp eq i8* %176, null
  br i1 %183, label %185, label %184

184:                                              ; preds = %173
  store i8 %177, i8* %176, align 1
  br label %185

185:                                              ; preds = %173, %184
  br i1 %182, label %188, label %186

186:                                              ; preds = %185
  %187 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 1
  br label %230

188:                                              ; preds = %185
  %189 = load i8, i8* %157, align 1
  %190 = icmp slt i8 %189, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %193 = load i64, i64* %192, align 8
  br label %196

194:                                              ; preds = %188
  %195 = zext i8 %189 to i64
  br label %196

196:                                              ; preds = %194, %191
  %197 = phi i64 [ %193, %191 ], [ %195, %194 ]
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %196
  %200 = load i8, i8* %154, align 1, !range !2
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %202, label %211

202:                                              ; preds = %199
  %203 = tail call zeroext i1 @_ZNK2ui15InputMethodBase19IsTextInputTypeNoneEv(%"class.ui::InputMethodBase"* %38) #11
  br i1 %203, label %211, label %204

204:                                              ; preds = %202
  %205 = load i8, i8* %3, align 8, !range !2
  %206 = icmp eq i8 %205, 0
  %207 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  br i1 %206, label %210, label %208

208:                                              ; preds = %204
  %209 = tail call dereferenceable(168) %"class.ui::KeyEvent"* @_ZN2ui8KeyEventaSERKS0_(%"class.ui::KeyEvent"* %207, %"class.ui::KeyEvent"* dereferenceable(168) %1) #11
  br label %289

210:                                              ; preds = %204
  tail call void @_ZN2ui8KeyEventC1ERKS0_(%"class.ui::KeyEvent"* %207, %"class.ui::KeyEvent"* dereferenceable(168) %1) #11
  store i8 1, i8* %3, align 8
  br label %289

211:                                              ; preds = %199, %196, %202
  %212 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 1
  %213 = load i32, i32* %212, align 8
  %214 = icmp eq i32 %213, 7
  br i1 %214, label %215, label %230

215:                                              ; preds = %211
  %216 = tail call i24 @_ZN2ui20InputMethodAuraLinux32DispatchImeFilteredKeyPressEventEPNS_8KeyEventE(%"class.ui::InputMethodAuraLinux"* %0, %"class.ui::KeyEvent"* %1)
  %217 = trunc i24 %216 to i8
  %218 = lshr i24 %216, 8
  %219 = trunc i24 %218 to i8
  %220 = lshr i24 %216, 16
  %221 = trunc i24 %220 to i8
  %222 = or i24 %218, %216
  %223 = trunc i24 %222 to i8
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %225, label %289

225:                                              ; preds = %215
  %226 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 10
  %227 = load i32, i32* %226, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %289

230:                                              ; preds = %211, %225, %186
  %231 = phi i32* [ %212, %211 ], [ %212, %225 ], [ %187, %186 ]
  %232 = phi i8 [ 0, %211 ], [ %221, %225 ], [ 0, %186 ]
  %233 = tail call i32 @_ZN2ui20InputMethodAuraLinux17MaybeCommitResultEbRKNS_8KeyEventE(%"class.ui::InputMethodAuraLinux"* %0, i1 zeroext %182, %"class.ui::KeyEvent"* dereferenceable(168) %1)
  %234 = icmp eq i32 %233, 2
  br i1 %234, label %235, label %236

235:                                              ; preds = %230
  tail call void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"* %57) #11
  br label %289

236:                                              ; preds = %230
  %237 = icmp eq i32 %233, 0
  %238 = tail call zeroext i1 @_ZN2ui20InputMethodAuraLinux22MaybeUpdateCompositionEb(%"class.ui::InputMethodAuraLinux"* %0, i1 zeroext %237)
  %239 = or i1 %237, %238
  br i1 %182, label %283, label %240

240:                                              ; preds = %236
  %241 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)***
  %242 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)**, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*** %241, align 8
  %243 = getelementptr inbounds i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %242, i64 22
  %244 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %243, align 8
  %245 = tail call i24 %244(%"class.ui::InputMethodBase"* %38, %"class.ui::KeyEvent"* %1) #11
  %246 = trunc i24 %245 to i8
  %247 = lshr i24 %245, 8
  %248 = trunc i24 %247 to i8
  %249 = lshr i24 %245, 16
  %250 = trunc i24 %249 to i8
  %251 = icmp eq i8 %246, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %240
  br i1 %239, label %253, label %289

253:                                              ; preds = %252
  tail call void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"* %57) #11
  br label %289

254:                                              ; preds = %240
  %255 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 10
  %256 = load i32, i32* %255, align 4
  %257 = and i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = icmp eq i8 %248, 0
  %260 = and i1 %259, %258
  br i1 %260, label %262, label %261

261:                                              ; preds = %254
  tail call void @_ZN2ui20InputMethodAuraLinux12ResetContextEv(%"class.ui::InputMethodAuraLinux"* %0)
  br label %283

262:                                              ; preds = %254
  %263 = load i32, i32* %231, align 8
  %264 = icmp eq i32 %263, 7
  br i1 %264, label %265, label %283

265:                                              ; preds = %262
  %266 = tail call zeroext i16 @_ZNK2ui8KeyEvent12GetCharacterEv(%"class.ui::KeyEvent"* %1) #11
  %267 = icmp eq i16 %266, 0
  br i1 %267, label %286, label %268

268:                                              ; preds = %265
  %269 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %39, align 8
  %270 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %269, i64 7
  %271 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %270, align 8
  %272 = tail call %"class.ui::TextInputClient"* %271(%"class.ui::InputMethodBase"* %38) #11
  %273 = icmp eq %"class.ui::TextInputClient"* %272, null
  br i1 %273, label %286, label %274

274:                                              ; preds = %268
  %275 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %39, align 8
  %276 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %275, i64 7
  %277 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %276, align 8
  %278 = tail call %"class.ui::TextInputClient"* %277(%"class.ui::InputMethodBase"* %38) #11
  %279 = bitcast %"class.ui::TextInputClient"* %278 to void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)***
  %280 = load void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)**, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*** %279, align 8
  %281 = getelementptr inbounds void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)** %280, i64 6
  %282 = load void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)** %281, align 8
  tail call void %282(%"class.ui::TextInputClient"* %278, %"class.ui::KeyEvent"* dereferenceable(168) %1) #11
  br label %286

283:                                              ; preds = %261, %262, %236
  %284 = phi i8 [ %232, %236 ], [ %250, %262 ], [ %250, %261 ]
  %285 = phi i8 [ 0, %236 ], [ 0, %262 ], [ %248, %261 ]
  br i1 %239, label %286, label %289

286:                                              ; preds = %265, %268, %274, %283
  %287 = phi i8 [ %284, %283 ], [ %250, %265 ], [ %250, %268 ], [ %250, %274 ]
  %288 = phi i8 [ %285, %283 ], [ 0, %265 ], [ 0, %268 ], [ 0, %274 ]
  tail call void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"* %57) #11
  br label %289

289:                                              ; preds = %125, %225, %235, %215, %253, %252, %286, %283, %210, %208, %134, %111, %138, %142, %45
  %290 = phi i8 [ %55, %45 ], [ %121, %125 ], [ %121, %142 ], [ %121, %138 ], [ %121, %111 ], [ %121, %134 ], [ 0, %208 ], [ 0, %210 ], [ %232, %235 ], [ %221, %215 ], [ %221, %225 ], [ %250, %253 ], [ %250, %252 ], [ %287, %286 ], [ %284, %283 ]
  %291 = phi i8 [ %53, %45 ], [ 0, %125 ], [ 0, %142 ], [ 0, %138 ], [ %119, %111 ], [ 0, %134 ], [ 0, %208 ], [ 0, %210 ], [ 1, %235 ], [ %219, %215 ], [ 0, %225 ], [ %248, %253 ], [ %248, %252 ], [ %288, %286 ], [ %285, %283 ]
  %292 = phi i8 [ %51, %45 ], [ 0, %125 ], [ 0, %142 ], [ 0, %138 ], [ %117, %111 ], [ 0, %134 ], [ 0, %208 ], [ 0, %210 ], [ 0, %235 ], [ %217, %215 ], [ 0, %225 ], [ %246, %253 ], [ %246, %252 ], [ 0, %286 ], [ 0, %283 ]
  %293 = zext i8 %290 to i24
  %294 = shl nuw i24 %293, 16
  %295 = zext i8 %291 to i24
  %296 = shl nuw nsw i24 %295, 8
  %297 = or i24 %296, %294
  %298 = zext i8 %292 to i24
  %299 = or i24 %297, %298
  ret i24 %299
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZNK2ui8KeyEvent9GetDomKeyEv(%"class.ui::KeyEvent"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2ui20InputMethodAuraLinux20HasInputMethodResultEv(%"class.ui::InputMethodAuraLinux"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string.52"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 9
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp ne i8 %17, 0
  br label %19

19:                                               ; preds = %15, %12
  %20 = phi i1 [ true, %12 ], [ %18, %15 ]
  ret i1 %20
}

declare zeroext i1 @_ZNK2ui15InputMethodBase19IsTextInputTypeNoneEv(%"class.ui::InputMethodBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZN2ui20InputMethodAuraLinux32DispatchImeFilteredKeyPressEventEPNS_8KeyEventE(%"class.ui::InputMethodAuraLinux"*, %"class.ui::KeyEvent"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.ui::KeyEvent", align 8
  %4 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK2ui15InputMethodBase19IsTextInputTypeNoneEv(%"class.ui::InputMethodBase"* %5) #11
  br i1 %6, label %35, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 9
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %46

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 0
  %13 = bitcast %"class.std::__1::basic_string.52"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %22

20:                                               ; preds = %11
  %21 = zext i8 %15 to i64
  br label %22

22:                                               ; preds = %20, %17
  %23 = phi i64 [ %19, %17 ], [ %21, %20 ]
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %46

25:                                               ; preds = %22
  %26 = bitcast %"class.std::__1::basic_string.52"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp eq i64 %33, 1
  br i1 %34, label %35, label %46

35:                                               ; preds = %2, %25
  %36 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)***
  %37 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)**, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*** %36, align 8
  %38 = getelementptr inbounds i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %37, i64 22
  %39 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %38, align 8
  %40 = tail call i24 %39(%"class.ui::InputMethodBase"* %5, %"class.ui::KeyEvent"* %1) #11
  %41 = trunc i24 %40 to i8
  %42 = lshr i24 %40, 8
  %43 = trunc i24 %42 to i8
  %44 = lshr i24 %40, 16
  %45 = trunc i24 %44 to i8
  br label %67

46:                                               ; preds = %7, %22, %25
  %47 = bitcast %"class.ui::KeyEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %47) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %47, i8* align 8 bitcast (<{ { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.23" }, i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>* @__const._ZNK2ui20InputMethodAuraLinux23SendFakeProcessKeyEventEPNS_8KeyEventE.key_event to i8*), i64 168, i1 false) #11
  %48 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 4
  %49 = load i32, i32* %48, align 8
  call void @_ZN2ui8KeyEventC1ENS_9EventTypeENS_12KeyboardCodeEiN4base9TimeTicksE(%"class.ui::KeyEvent"* nonnull %3, i32 7, i32 229, i32 %49, i64 0) #11
  %50 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)***
  %51 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)**, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*** %50, align 8
  %52 = getelementptr inbounds i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %51, i64 22
  %53 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %52, align 8
  %54 = call i24 %53(%"class.ui::InputMethodBase"* %5, %"class.ui::KeyEvent"* nonnull %3) #11
  %55 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %3, i64 0, i32 0, i32 10
  %56 = load i32, i32* %55, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %46
  %60 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0
  call void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"* %60) #11
  br label %61

61:                                               ; preds = %46, %59
  call void @_ZN2ui8KeyEventD1Ev(%"class.ui::KeyEvent"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %47) #11
  %62 = trunc i24 %54 to i8
  %63 = lshr i24 %54, 8
  %64 = trunc i24 %63 to i8
  %65 = lshr i24 %54, 16
  %66 = trunc i24 %65 to i8
  br label %67

67:                                               ; preds = %61, %35
  %68 = phi i8 [ %62, %61 ], [ %41, %35 ]
  %69 = phi i8 [ %64, %61 ], [ %43, %35 ]
  %70 = phi i8 [ %66, %61 ], [ %45, %35 ]
  %71 = and i8 %68, 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %82

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 10
  %75 = load i32, i32* %74, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = and i8 %69, 1
  %79 = icmp eq i8 %78, 0
  %80 = and i1 %79, %77
  br i1 %80, label %82, label %81

81:                                               ; preds = %73
  call void @_ZN2ui20InputMethodAuraLinux12ResetContextEv(%"class.ui::InputMethodAuraLinux"* %0)
  br label %82

82:                                               ; preds = %73, %67, %81
  %83 = zext i8 %70 to i24
  %84 = shl nuw i24 %83, 16
  %85 = zext i8 %69 to i24
  %86 = shl nuw nsw i24 %85, 8
  %87 = zext i8 %68 to i24
  %88 = or i24 %86, %87
  %89 = or i24 %88, %84
  ret i24 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2ui20InputMethodAuraLinux17MaybeCommitResultEbRKNS_8KeyEventE(%"class.ui::InputMethodAuraLinux"*, i1 zeroext, %"class.ui::KeyEvent"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string.52", align 8
  %5 = alloca %"class.ui::KeyEvent", align 8
  %6 = bitcast %"class.std::__1::basic_string.52"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5
  %9 = bitcast %"class.std::__1::basic_string.52"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 %9, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = bitcast %"class.std::__1::basic_string.52"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = bitcast %"class.std::__1::basic_string.52"* %8 to i16*
  store i16 0, i16* %12, align 2
  store i8 0, i8* %11, align 1
  %13 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %14 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %14, i64 7
  %17 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %16, align 8
  %18 = tail call %"class.ui::TextInputClient"* %17(%"class.ui::InputMethodBase"* %15) #11
  %19 = icmp eq %"class.ui::TextInputClient"* %18, null
  %20 = bitcast %"class.std::__1::basic_string.52"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br i1 %19, label %88, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i64, i64* %22, align 8
  %27 = zext i8 %24 to i64
  %28 = select i1 %25, i64 %26, i64 %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %88, label %30

30:                                               ; preds = %21
  br i1 %1, label %31, label %77

31:                                               ; preds = %30
  %32 = tail call zeroext i1 @_ZNK2ui15InputMethodBase19IsTextInputTypeNoneEv(%"class.ui::InputMethodBase"* %15) #11
  br i1 %32, label %53, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 9
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %77

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 0
  %39 = bitcast %"class.std::__1::basic_string.52"* %38 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  br label %48

46:                                               ; preds = %37
  %47 = zext i8 %41 to i64
  br label %48

48:                                               ; preds = %46, %43
  %49 = phi i64 [ %45, %43 ], [ %47, %46 ]
  %50 = icmp eq i64 %49, 0
  %51 = icmp eq i64 %28, 1
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %77

53:                                               ; preds = %48, %31
  %54 = load i16*, i16** %7, align 8
  %55 = bitcast %"class.std::__1::basic_string.52"* %4 to i16*
  %56 = select i1 %25, i16* %54, i16* %55
  %57 = getelementptr inbounds i16, i16* %56, i64 %28
  %58 = bitcast %"class.ui::KeyEvent"* %5 to i8*
  %59 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %5, i64 0, i32 6, i32 0
  %60 = bitcast %"class.ui::TextInputClient"* %18 to void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)***
  br label %63

61:                                               ; preds = %63
  %62 = icmp eq i16* %76, %57
  br i1 %62, label %87, label %63

63:                                               ; preds = %53, %61
  %64 = phi i16* [ %56, %53 ], [ %76, %61 ]
  %65 = load i16, i16* %64, align 2
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %58) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* align 8 bitcast (<{ { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.23" }, i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>* @__const._ZNK2ui20InputMethodAuraLinux23SendFakeProcessKeyEventEPNS_8KeyEventE.key_event to i8*), i64 168, i1 false)
  call void @_ZN2ui8KeyEventC1ERKS0_(%"class.ui::KeyEvent"* nonnull %5, %"class.ui::KeyEvent"* dereferenceable(168) %2) #11
  %66 = zext i16 %65 to i32
  %67 = or i32 %66, 4194304
  store i32 %67, i32* %59, align 8
  %68 = load void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)**, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*** %60, align 8
  %69 = getelementptr inbounds void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)** %68, i64 6
  %70 = load void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)*, void (%"class.ui::TextInputClient"*, %"class.ui::KeyEvent"*)** %69, align 8
  call void %70(%"class.ui::TextInputClient"* nonnull %18, %"class.ui::KeyEvent"* nonnull dereferenceable(168) %5) #11
  %71 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %13, align 8
  %72 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %71, i64 7
  %73 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %72, align 8
  %74 = call %"class.ui::TextInputClient"* %73(%"class.ui::InputMethodBase"* %15) #11
  %75 = icmp eq %"class.ui::TextInputClient"* %18, %74
  call void @_ZN2ui8KeyEventD1Ev(%"class.ui::KeyEvent"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %58) #11
  %76 = getelementptr inbounds i16, i16* %64, i64 1
  br i1 %75, label %61, label %88

77:                                               ; preds = %33, %48, %30
  %78 = bitcast %"class.ui::TextInputClient"* %18 to void (%"class.ui::TextInputClient"*, %"class.std::__1::basic_string.52"*, i32)***
  %79 = load void (%"class.ui::TextInputClient"*, %"class.std::__1::basic_string.52"*, i32)**, void (%"class.ui::TextInputClient"*, %"class.std::__1::basic_string.52"*, i32)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.ui::TextInputClient"*, %"class.std::__1::basic_string.52"*, i32)*, void (%"class.ui::TextInputClient"*, %"class.std::__1::basic_string.52"*, i32)** %79, i64 5
  %81 = load void (%"class.ui::TextInputClient"*, %"class.std::__1::basic_string.52"*, i32)*, void (%"class.ui::TextInputClient"*, %"class.std::__1::basic_string.52"*, i32)** %80, align 8
  call void %81(%"class.ui::TextInputClient"* nonnull %18, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %4, i32 0) #11
  %82 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %13, align 8
  %83 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %82, i64 7
  %84 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %83, align 8
  %85 = call %"class.ui::TextInputClient"* %84(%"class.ui::InputMethodBase"* %15) #11
  %86 = icmp eq %"class.ui::TextInputClient"* %18, %85
  br i1 %86, label %87, label %88

87:                                               ; preds = %61, %77
  br label %88

88:                                               ; preds = %63, %3, %77, %21, %87
  %89 = phi i32 [ 2, %77 ], [ 1, %21 ], [ 0, %87 ], [ 1, %3 ], [ 2, %63 ]
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = bitcast %"class.std::__1::basic_string.52"* %4 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret i32 %89
}

declare void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ui20InputMethodAuraLinux22MaybeUpdateCompositionEb(%"class.ui::InputMethodAuraLinux"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.ui::CompositionText", align 8
  %4 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %5 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %6 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %6, i64 7
  %8 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %7, align 8
  %9 = tail call %"class.ui::TextInputClient"* %8(%"class.ui::InputMethodBase"* %4) #11
  %10 = icmp eq %"class.ui::TextInputClient"* %9, null
  br i1 %10, label %68, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 9
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %42, label %15

15:                                               ; preds = %11
  %16 = tail call zeroext i1 @_ZNK2ui15InputMethodBase19IsTextInputTypeNoneEv(%"class.ui::InputMethodBase"* %4) #11
  br i1 %16, label %42, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6
  %19 = bitcast %"struct.ui::CompositionText"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  br label %28

26:                                               ; preds = %17
  %27 = zext i8 %21 to i64
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i64 [ %25, %23 ], [ %27, %26 ]
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.ui::TextInputClient"* %9 to void (%"class.ui::TextInputClient"*, %"struct.ui::CompositionText"*)***
  %33 = load void (%"class.ui::TextInputClient"*, %"struct.ui::CompositionText"*)**, void (%"class.ui::TextInputClient"*, %"struct.ui::CompositionText"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.ui::TextInputClient"*, %"struct.ui::CompositionText"*)*, void (%"class.ui::TextInputClient"*, %"struct.ui::CompositionText"*)** %33, i64 2
  %35 = load void (%"class.ui::TextInputClient"*, %"struct.ui::CompositionText"*)*, void (%"class.ui::TextInputClient"*, %"struct.ui::CompositionText"*)** %34, align 8
  tail call void %35(%"class.ui::TextInputClient"* nonnull %9, %"struct.ui::CompositionText"* dereferenceable(56) %18) #11
  br label %42

36:                                               ; preds = %28
  br i1 %1, label %42, label %37

37:                                               ; preds = %36
  %38 = bitcast %"class.ui::TextInputClient"* %9 to void (%"class.ui::TextInputClient"*)***
  %39 = load void (%"class.ui::TextInputClient"*)**, void (%"class.ui::TextInputClient"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.ui::TextInputClient"*)*, void (%"class.ui::TextInputClient"*)** %39, i64 4
  %41 = load void (%"class.ui::TextInputClient"*)*, void (%"class.ui::TextInputClient"*)** %40, align 8
  tail call void %41(%"class.ui::TextInputClient"* nonnull %9) #11
  br label %42

42:                                               ; preds = %15, %36, %37, %31, %11
  %43 = phi i1 [ false, %11 ], [ true, %31 ], [ true, %37 ], [ true, %36 ], [ false, %15 ]
  %44 = bitcast %"class.ui::TextInputClient"* %9 to i1 (%"class.ui::TextInputClient"*)***
  %45 = load i1 (%"class.ui::TextInputClient"*)**, i1 (%"class.ui::TextInputClient"*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.ui::TextInputClient"*)*, i1 (%"class.ui::TextInputClient"*)** %45, i64 15
  %47 = load i1 (%"class.ui::TextInputClient"*)*, i1 (%"class.ui::TextInputClient"*)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.ui::TextInputClient"* nonnull %9) #11
  br i1 %48, label %68, label %49

49:                                               ; preds = %42
  %50 = bitcast %"struct.ui::CompositionText"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %50) #11
  call void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"* nonnull %3) #11
  %51 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6
  %52 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %51, i64 0, i32 0
  %53 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 0
  %54 = call dereferenceable(24) %"class.std::__1::basic_string.52"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.52"* %52, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %53) #11
  %55 = icmp eq %"struct.ui::CompositionText"* %51, %3
  br i1 %55, label %62, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 1
  %58 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1, i32 0, i32 0
  %59 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %58, align 8
  %60 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 1, i32 0, i32 1
  %61 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %60, align 8
  call void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.61"* %57, %"struct.ui::ImeTextSpan"* %59, %"struct.ui::ImeTextSpan"* %61) #11
  br label %62

62:                                               ; preds = %49, %56
  %63 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 2
  %64 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %3, i64 0, i32 2
  %65 = bitcast %"class.gfx::Range"* %64 to i64*
  %66 = bitcast %"class.gfx::Range"* %63 to i64*
  %67 = load i64, i64* %65, align 8
  store i64 %67, i64* %66, align 8
  call void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %50) #11
  br label %68

68:                                               ; preds = %2, %62, %42
  %69 = phi i1 [ %43, %62 ], [ %43, %42 ], [ false, %2 ]
  ret i1 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux12ResetContextEv(%"class.ui::InputMethodAuraLinux"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::CompositionText", align 8
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %4 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %5 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %5, i64 7
  %7 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %6, align 8
  %8 = tail call %"class.ui::TextInputClient"* %7(%"class.ui::InputMethodBase"* %3) #11
  %9 = icmp eq %"class.ui::TextInputClient"* %8, null
  br i1 %9, label %75, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 8
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %12, i64 0, i32 0
  %14 = bitcast %"struct.ui::CompositionText"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  br label %23

21:                                               ; preds = %10
  %22 = zext i8 %16 to i64
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i64 [ %20, %18 ], [ %22, %21 ]
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %33, label %26

26:                                               ; preds = %23
  %27 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %28 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %27, i64 100000) #11
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = extractvalue { i64, i1 } %28, 0
  %31 = select i1 %29, i64 9223372036854775807, i64 %30, !prof !3
  %32 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  br label %33

33:                                               ; preds = %26, %23
  %34 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %35 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %34, align 8
  %36 = bitcast %"class.ui::LinuxInputMethodContext"* %35 to void (%"class.ui::LinuxInputMethodContext"*)***
  %37 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %37, i64 5
  %39 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %38, align 8
  tail call void %39(%"class.ui::LinuxInputMethodContext"* %35) #11
  %40 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %40, align 8
  %42 = bitcast %"class.ui::LinuxInputMethodContext"* %41 to void (%"class.ui::LinuxInputMethodContext"*)***
  %43 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %43, i64 5
  %45 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %44, align 8
  tail call void %45(%"class.ui::LinuxInputMethodContext"* %41) #11
  %46 = bitcast %"struct.ui::CompositionText"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %46) #11
  call void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"* nonnull %2) #11
  %47 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %2, i64 0, i32 0
  %48 = call dereferenceable(24) %"class.std::__1::basic_string.52"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.52"* %13, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %47) #11
  %49 = icmp eq %"struct.ui::CompositionText"* %12, %2
  br i1 %49, label %56, label %50

50:                                               ; preds = %33
  %51 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 1
  %52 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %2, i64 0, i32 1, i32 0, i32 0
  %53 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %52, align 8
  %54 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %2, i64 0, i32 1, i32 0, i32 1
  %55 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %54, align 8
  call void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.61"* %51, %"struct.ui::ImeTextSpan"* %53, %"struct.ui::ImeTextSpan"* %55) #11
  br label %56

56:                                               ; preds = %33, %50
  %57 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 2
  %58 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %2, i64 0, i32 2
  %59 = bitcast %"class.gfx::Range"* %58 to i64*
  %60 = bitcast %"class.gfx::Range"* %57 to i64*
  %61 = load i64, i64* %59, align 8
  store i64 %61, i64* %60, align 8
  call void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %46) #11
  %62 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5
  %63 = bitcast %"class.std::__1::basic_string.52"* %62 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %63, i64 0, i32 1, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i16*, i16** %68, align 8
  store i16 0, i16* %69, align 2
  %70 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %70, align 8
  br label %73

71:                                               ; preds = %56
  %72 = bitcast %"class.std::__1::basic_string.52"* %62 to i16*
  store i16 0, i16* %72, align 2
  store i8 0, i8* %64, align 1
  br label %73

73:                                               ; preds = %67, %71
  store i8 0, i8* %11, align 4
  %74 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 9
  store i8 0, i8* %74, align 1
  br label %75

75:                                               ; preds = %1, %73
  ret void
}

declare zeroext i16 @_ZNK2ui8KeyEvent12GetCharacterEv(%"class.ui::KeyEvent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui20InputMethodAuraLinux14NeedInsertCharERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::InputMethodAuraLinux"*, %"class.std::__1::basic_string.52"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK2ui15InputMethodBase19IsTextInputTypeNoneEv(%"class.ui::InputMethodBase"* %3) #11
  br i1 %4, label %33, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 9
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 0
  %11 = bitcast %"class.std::__1::basic_string.52"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  br label %20

18:                                               ; preds = %9
  %19 = zext i8 %13 to i64
  br label %20

20:                                               ; preds = %15, %18
  %21 = phi i64 [ %17, %15 ], [ %19, %18 ]
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %20
  %24 = bitcast %"class.std::__1::basic_string.52"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp eq i64 %31, 1
  br label %33

33:                                               ; preds = %5, %20, %23, %2
  %34 = phi i1 [ true, %2 ], [ false, %20 ], [ false, %5 ], [ %32, %23 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i24 @_ZNK2ui20InputMethodAuraLinux23SendFakeProcessKeyEventEPNS_8KeyEventE(%"class.ui::InputMethodAuraLinux"*, %"class.ui::KeyEvent"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.ui::KeyEvent", align 8
  %4 = bitcast %"class.ui::KeyEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %4) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %4, i8* align 8 bitcast (<{ { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.23" }, i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>* @__const._ZNK2ui20InputMethodAuraLinux23SendFakeProcessKeyEventEPNS_8KeyEventE.key_event to i8*), i64 168, i1 false)
  %5 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0, i32 4
  %6 = load i32, i32* %5, align 8
  call void @_ZN2ui8KeyEventC1ENS_9EventTypeENS_12KeyboardCodeEiN4base9TimeTicksE(%"class.ui::KeyEvent"* nonnull %3, i32 7, i32 229, i32 %6, i64 0) #11
  %7 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %8 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)***
  %9 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)**, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*** %8, align 8
  %10 = getelementptr inbounds i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %9, i64 22
  %11 = load i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)*, i24 (%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*)** %10, align 8
  %12 = call i24 %11(%"class.ui::InputMethodBase"* %7, %"class.ui::KeyEvent"* nonnull %3) #11
  %13 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %3, i64 0, i32 0, i32 10
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %1, i64 0, i32 0
  call void @_ZN2ui5Event15StopPropagationEv(%"class.ui::Event"* %18) #11
  br label %19

19:                                               ; preds = %2, %17
  call void @_ZN2ui8KeyEventD1Ev(%"class.ui::KeyEvent"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %4) #11
  ret i24 %12
}

declare void @_ZN2ui8KeyEventC1ERKS0_(%"class.ui::KeyEvent"*, %"class.ui::KeyEvent"* dereferenceable(168)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui8KeyEventD1Ev(%"class.ui::KeyEvent"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux23UpdateContextFocusStateEv(%"class.ui::InputMethodAuraLinux"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  %4 = icmp ne i32 %3, 0
  %5 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %6 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i32 (%"class.ui::InputMethodBase"*)***
  %7 = load i32 (%"class.ui::InputMethodBase"*)**, i32 (%"class.ui::InputMethodBase"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.ui::InputMethodBase"*)*, i32 (%"class.ui::InputMethodBase"*)** %7, i64 12
  %9 = load i32 (%"class.ui::InputMethodBase"*)*, i32 (%"class.ui::InputMethodBase"*)** %8, align 8
  %10 = tail call i32 %9(%"class.ui::InputMethodBase"* %5) #11
  store i32 %10, i32* %2, align 8
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %4, %11
  br i1 %12, label %13, label %20

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %14, align 8
  %16 = bitcast %"class.ui::LinuxInputMethodContext"* %15 to void (%"class.ui::LinuxInputMethodContext"*)***
  %17 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %17, i64 7
  %19 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %18, align 8
  tail call void %19(%"class.ui::LinuxInputMethodContext"* %15) #11
  br label %29

20:                                               ; preds = %1
  %21 = or i1 %4, %11
  br i1 %21, label %29, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %23, align 8
  %25 = bitcast %"class.ui::LinuxInputMethodContext"* %24 to void (%"class.ui::LinuxInputMethodContext"*)***
  %26 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %26, i64 6
  %28 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %27, align 8
  tail call void %28(%"class.ui::LinuxInputMethodContext"* %24) #11
  br label %29

29:                                               ; preds = %20, %22, %13
  %30 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %31 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %31, i64 7
  %33 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %32, align 8
  %34 = tail call %"class.ui::TextInputClient"* %33(%"class.ui::InputMethodBase"* %5) #11
  %35 = icmp eq %"class.ui::TextInputClient"* %34, null
  %36 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %36, align 8
  %38 = bitcast %"class.ui::LinuxInputMethodContext"* %37 to void (%"class.ui::LinuxInputMethodContext"*)***
  %39 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %38, align 8
  br i1 %35, label %43, label %40

40:                                               ; preds = %29
  %41 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %39, i64 6
  %42 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %41, align 8
  tail call void %42(%"class.ui::LinuxInputMethodContext"* %37) #11
  br label %46

43:                                               ; preds = %29
  %44 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %39, i64 7
  %45 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %44, align 8
  tail call void %45(%"class.ui::LinuxInputMethodContext"* %37) #11
  br label %46

46:                                               ; preds = %43, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux22OnTextInputTypeChangedEPKNS_15TextInputClientE(%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = icmp ne i32 %4, 0
  %6 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %7 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i32 (%"class.ui::InputMethodBase"*)***
  %8 = load i32 (%"class.ui::InputMethodBase"*)**, i32 (%"class.ui::InputMethodBase"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.ui::InputMethodBase"*)*, i32 (%"class.ui::InputMethodBase"*)** %8, i64 12
  %10 = load i32 (%"class.ui::InputMethodBase"*)*, i32 (%"class.ui::InputMethodBase"*)** %9, align 8
  %11 = tail call i32 %10(%"class.ui::InputMethodBase"* %6) #11
  store i32 %11, i32* %3, align 8
  %12 = icmp eq i32 %11, 0
  %13 = and i1 %5, %12
  br i1 %13, label %14, label %21

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %15, align 8
  %17 = bitcast %"class.ui::LinuxInputMethodContext"* %16 to void (%"class.ui::LinuxInputMethodContext"*)***
  %18 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %18, i64 7
  %20 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %19, align 8
  tail call void %20(%"class.ui::LinuxInputMethodContext"* %16) #11
  br label %30

21:                                               ; preds = %2
  %22 = or i1 %5, %12
  br i1 %22, label %30, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %24, align 8
  %26 = bitcast %"class.ui::LinuxInputMethodContext"* %25 to void (%"class.ui::LinuxInputMethodContext"*)***
  %27 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %27, i64 6
  %29 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %28, align 8
  tail call void %29(%"class.ui::LinuxInputMethodContext"* %25) #11
  br label %30

30:                                               ; preds = %23, %21, %14
  %31 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %32 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %32, i64 7
  %34 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %33, align 8
  %35 = tail call %"class.ui::TextInputClient"* %34(%"class.ui::InputMethodBase"* %6) #11
  %36 = icmp eq %"class.ui::TextInputClient"* %35, null
  %37 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %37, align 8
  %39 = bitcast %"class.ui::LinuxInputMethodContext"* %38 to void (%"class.ui::LinuxInputMethodContext"*)***
  %40 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %39, align 8
  br i1 %36, label %44, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %40, i64 6
  %43 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %42, align 8
  tail call void %43(%"class.ui::LinuxInputMethodContext"* %38) #11
  br label %47

44:                                               ; preds = %30
  %45 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %40, i64 7
  %46 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %45, align 8
  tail call void %46(%"class.ui::LinuxInputMethodContext"* %38) #11
  br label %47

47:                                               ; preds = %41, %44
  tail call void @_ZN2ui15InputMethodBase22OnTextInputTypeChangedEPKNS_15TextInputClientE(%"class.ui::InputMethodBase"* %6, %"class.ui::TextInputClient"* %1) #11
  ret void
}

declare void @_ZN2ui15InputMethodBase22OnTextInputTypeChangedEPKNS_15TextInputClientE(%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux20OnCaretBoundsChangedEPKNS_15TextInputClientE(%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*) unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca %"class.gfx::Range", align 4
  %5 = alloca %"class.gfx::Range", align 4
  %6 = alloca %"class.std::__1::basic_string.52", align 8
  %7 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN2ui15InputMethodBase24IsTextInputClientFocusedEPKNS_15TextInputClientE(%"class.ui::InputMethodBase"* %7, %"class.ui::TextInputClient"* %1) #11
  br i1 %8, label %9, label %70

9:                                                ; preds = %2
  %10 = bitcast { i64, i64 }* %3 to %"class.gfx::Rect"*
  tail call void @_ZN2ui15InputMethodBase33NotifyTextInputCaretBoundsChangedEPKNS_15TextInputClientE(%"class.ui::InputMethodBase"* %7, %"class.ui::TextInputClient"* %1) #11
  %11 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %11, align 8
  %13 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %15 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %15, i64 7
  %17 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %16, align 8
  %18 = tail call %"class.ui::TextInputClient"* %17(%"class.ui::InputMethodBase"* %7) #11
  %19 = bitcast %"class.ui::TextInputClient"* %18 to { i64, i64 } (%"class.ui::TextInputClient"*)***
  %20 = load { i64, i64 } (%"class.ui::TextInputClient"*)**, { i64, i64 } (%"class.ui::TextInputClient"*)*** %19, align 8
  %21 = getelementptr inbounds { i64, i64 } (%"class.ui::TextInputClient"*)*, { i64, i64 } (%"class.ui::TextInputClient"*)** %20, i64 12
  %22 = load { i64, i64 } (%"class.ui::TextInputClient"*)*, { i64, i64 } (%"class.ui::TextInputClient"*)** %21, align 8
  %23 = tail call { i64, i64 } %22(%"class.ui::TextInputClient"* %18) #11
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %25 = extractvalue { i64, i64 } %23, 0
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %27 = extractvalue { i64, i64 } %23, 1
  store i64 %27, i64* %26, align 8
  %28 = bitcast %"class.ui::LinuxInputMethodContext"* %12 to void (%"class.ui::LinuxInputMethodContext"*, %"class.gfx::Rect"*)***
  %29 = load void (%"class.ui::LinuxInputMethodContext"*, %"class.gfx::Rect"*)**, void (%"class.ui::LinuxInputMethodContext"*, %"class.gfx::Rect"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*, %"class.gfx::Rect"*)*, void (%"class.ui::LinuxInputMethodContext"*, %"class.gfx::Rect"*)** %29, i64 3
  %31 = load void (%"class.ui::LinuxInputMethodContext"*, %"class.gfx::Rect"*)*, void (%"class.ui::LinuxInputMethodContext"*, %"class.gfx::Rect"*)** %30, align 8
  call void %31(%"class.ui::LinuxInputMethodContext"* %12, %"class.gfx::Rect"* nonnull dereferenceable(16) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  %32 = bitcast %"class.gfx::Range"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 0
  %34 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %4, i64 0, i32 1
  store i32 0, i32* %33, align 4
  store i32 0, i32* %34, align 4
  %35 = bitcast %"class.gfx::Range"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %5, i64 0, i32 0
  %37 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %5, i64 0, i32 1
  store i32 0, i32* %36, align 4
  store i32 0, i32* %37, align 4
  %38 = bitcast %"class.std::__1::basic_string.52"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = bitcast %"class.ui::TextInputClient"* %1 to i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)***
  %40 = load i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)**, i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)*, i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)** %40, i64 17
  %42 = load i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)*, i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)** %41, align 8
  %43 = call zeroext i1 %42(%"class.ui::TextInputClient"* %1, %"class.gfx::Range"* nonnull %4) #11
  br i1 %43, label %44, label %61

44:                                               ; preds = %9
  %45 = bitcast %"class.ui::TextInputClient"* %1 to i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*, %"class.std::__1::basic_string.52"*)***
  %46 = load i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*, %"class.std::__1::basic_string.52"*)**, i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*, %"class.std::__1::basic_string.52"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*, %"class.std::__1::basic_string.52"*)*, i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*, %"class.std::__1::basic_string.52"*)** %46, i64 22
  %48 = load i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*, %"class.std::__1::basic_string.52"*)*, i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*, %"class.std::__1::basic_string.52"*)** %47, align 8
  %49 = call zeroext i1 %48(%"class.ui::TextInputClient"* %1, %"class.gfx::Range"* nonnull dereferenceable(8) %4, %"class.std::__1::basic_string.52"* nonnull %6) #11
  br i1 %49, label %50, label %61

50:                                               ; preds = %44
  %51 = load i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)**, i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)*** %39, align 8
  %52 = getelementptr inbounds i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)*, i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)** %51, i64 19
  %53 = load i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)*, i1 (%"class.ui::TextInputClient"*, %"class.gfx::Range"*)** %52, align 8
  %54 = call zeroext i1 %53(%"class.ui::TextInputClient"* %1, %"class.gfx::Range"* nonnull %5) #11
  br i1 %54, label %55, label %61

55:                                               ; preds = %50
  %56 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %11, align 8
  %57 = bitcast %"class.ui::LinuxInputMethodContext"* %56 to void (%"class.ui::LinuxInputMethodContext"*, %"class.std::__1::basic_string.52"*, %"class.gfx::Range"*)***
  %58 = load void (%"class.ui::LinuxInputMethodContext"*, %"class.std::__1::basic_string.52"*, %"class.gfx::Range"*)**, void (%"class.ui::LinuxInputMethodContext"*, %"class.std::__1::basic_string.52"*, %"class.gfx::Range"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*, %"class.std::__1::basic_string.52"*, %"class.gfx::Range"*)*, void (%"class.ui::LinuxInputMethodContext"*, %"class.std::__1::basic_string.52"*, %"class.gfx::Range"*)** %58, i64 4
  %60 = load void (%"class.ui::LinuxInputMethodContext"*, %"class.std::__1::basic_string.52"*, %"class.gfx::Range"*)*, void (%"class.ui::LinuxInputMethodContext"*, %"class.std::__1::basic_string.52"*, %"class.gfx::Range"*)** %59, align 8
  call void %60(%"class.ui::LinuxInputMethodContext"* %56, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %6, %"class.gfx::Range"* nonnull dereferenceable(8) %5) #11
  br label %61

61:                                               ; preds = %55, %50, %44, %9
  %62 = bitcast %"class.std::__1::basic_string.52"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %62, i64 0, i32 1, i32 1
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %61
  %67 = bitcast %"class.std::__1::basic_string.52"* %6 to i8**
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %61, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %70

70:                                               ; preds = %2, %69
  ret void
}

declare zeroext i1 @_ZN2ui15InputMethodBase24IsTextInputClientFocusedEPKNS_15TextInputClientE(%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*) local_unnamed_addr #1

declare void @_ZN2ui15InputMethodBase33NotifyTextInputCaretBoundsChangedEPKNS_15TextInputClientE(%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux17CancelCompositionEPKNS_15TextInputClientE(%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZN2ui15InputMethodBase24IsTextInputClientFocusedEPKNS_15TextInputClientE(%"class.ui::InputMethodBase"* %3, %"class.ui::TextInputClient"* %1) #11
  br i1 %4, label %5, label %6

5:                                                ; preds = %2
  tail call void @_ZN2ui20InputMethodAuraLinux12ResetContextEv(%"class.ui::InputMethodAuraLinux"* %0)
  br label %6

6:                                                ; preds = %2, %5
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui20InputMethodAuraLinux19IgnoringNonKeyInputEv(%"class.ui::InputMethodAuraLinux"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %7 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 10, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp slt i64 %6, %8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2ui20InputMethodAuraLinux20IsCandidatePopupOpenEv(%"class.ui::InputMethodAuraLinux"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux8OnCommitERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::InputMethodAuraLinux"*, %"class.std::__1::basic_string.52"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.ui::KeyEvent", align 8
  %4 = alloca %"struct.ui::CompositionText", align 8
  %5 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 8
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %2
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %10 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 10, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %9, %11
  br i1 %12, label %273, label %13

13:                                               ; preds = %2, %8
  %14 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %15 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %16 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %16, i64 7
  %18 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %17, align 8
  %19 = tail call %"class.ui::TextInputClient"* %18(%"class.ui::InputMethodBase"* %14) #11
  %20 = icmp eq %"class.ui::TextInputClient"* %19, null
  br i1 %20, label %273, label %21

21:                                               ; preds = %13
  %22 = load i8, i8* %5, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = tail call zeroext i1 @_ZNK2ui15InputMethodBase19IsTextInputTypeNoneEv(%"class.ui::InputMethodBase"* %14) #11
  br i1 %25, label %225, label %26

26:                                               ; preds = %21, %24
  %27 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5
  %28 = bitcast %"class.std::__1::basic_string.52"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::basic_string.52"* %1 to i16*
  %37 = zext i8 %30 to i64
  %38 = select i1 %31, i16* %33, i16* %36
  %39 = select i1 %31, i64 %35, i64 %37
  %40 = bitcast %"class.std::__1::basic_string.52"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %26
  %45 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = load i64, i64* %45, align 8
  %47 = and i64 %46, 9223372036854775807
  %48 = add nsw i64 %47, -1
  %49 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  br label %53

51:                                               ; preds = %26
  %52 = zext i8 %42 to i64
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i64 [ %48, %44 ], [ 10, %51 ]
  %55 = phi i64 [ %50, %44 ], [ %52, %51 ]
  %56 = sub i64 %54, %55
  %57 = icmp ult i64 %56, %39
  br i1 %57, label %222, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %39, 0
  br i1 %59, label %225, label %60

60:                                               ; preds = %58
  br i1 %43, label %61, label %64

61:                                               ; preds = %60
  %62 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  br label %66

64:                                               ; preds = %60
  %65 = bitcast %"class.std::__1::basic_string.52"* %27 to i16*
  br label %66

66:                                               ; preds = %64, %61
  %67 = phi i16* [ %63, %61 ], [ %65, %64 ]
  %68 = getelementptr inbounds i16, i16* %67, i64 %55
  %69 = icmp ult i64 %39, 16
  br i1 %69, label %159, label %70

70:                                               ; preds = %66
  %71 = add i64 %39, %55
  %72 = getelementptr i16, i16* %67, i64 %71
  %73 = getelementptr i16, i16* %38, i64 %39
  %74 = icmp ult i16* %68, %73
  %75 = icmp ult i16* %38, %72
  %76 = and i1 %74, %75
  br i1 %76, label %159, label %77

77:                                               ; preds = %70
  %78 = and i64 %39, -16
  %79 = sub i64 %39, %78
  %80 = getelementptr i16, i16* %38, i64 %78
  %81 = getelementptr i16, i16* %68, i64 %78
  %82 = add i64 %78, -16
  %83 = lshr exact i64 %82, 4
  %84 = add nuw nsw i64 %83, 1
  %85 = and i64 %84, 3
  %86 = icmp ult i64 %82, 48
  br i1 %86, label %138, label %87

87:                                               ; preds = %77
  %88 = sub nsw i64 %84, %85
  br label %89

89:                                               ; preds = %89, %87
  %90 = phi i64 [ 0, %87 ], [ %135, %89 ]
  %91 = phi i64 [ %88, %87 ], [ %136, %89 ]
  %92 = getelementptr i16, i16* %38, i64 %90
  %93 = getelementptr i16, i16* %68, i64 %90
  %94 = bitcast i16* %92 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !4
  %96 = getelementptr i16, i16* %92, i64 8
  %97 = bitcast i16* %96 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !4
  %99 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %99, align 2, !alias.scope !7, !noalias !4
  %100 = getelementptr i16, i16* %93, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %101, align 2, !alias.scope !7, !noalias !4
  %102 = or i64 %90, 16
  %103 = getelementptr i16, i16* %38, i64 %102
  %104 = getelementptr i16, i16* %68, i64 %102
  %105 = bitcast i16* %103 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !4
  %107 = getelementptr i16, i16* %103, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !4
  %110 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %110, align 2, !alias.scope !7, !noalias !4
  %111 = getelementptr i16, i16* %104, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %112, align 2, !alias.scope !7, !noalias !4
  %113 = or i64 %90, 32
  %114 = getelementptr i16, i16* %38, i64 %113
  %115 = getelementptr i16, i16* %68, i64 %113
  %116 = bitcast i16* %114 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !4
  %118 = getelementptr i16, i16* %114, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !4
  %121 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %121, align 2, !alias.scope !7, !noalias !4
  %122 = getelementptr i16, i16* %115, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %123, align 2, !alias.scope !7, !noalias !4
  %124 = or i64 %90, 48
  %125 = getelementptr i16, i16* %38, i64 %124
  %126 = getelementptr i16, i16* %68, i64 %124
  %127 = bitcast i16* %125 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !4
  %129 = getelementptr i16, i16* %125, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !4
  %132 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !7, !noalias !4
  %133 = getelementptr i16, i16* %126, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !7, !noalias !4
  %135 = add i64 %90, 64
  %136 = add i64 %91, -4
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %89, !llvm.loop !9

138:                                              ; preds = %89, %77
  %139 = phi i64 [ 0, %77 ], [ %135, %89 ]
  %140 = icmp eq i64 %85, 0
  br i1 %140, label %157, label %141

141:                                              ; preds = %138, %141
  %142 = phi i64 [ %154, %141 ], [ %139, %138 ]
  %143 = phi i64 [ %155, %141 ], [ %85, %138 ]
  %144 = getelementptr i16, i16* %38, i64 %142
  %145 = getelementptr i16, i16* %68, i64 %142
  %146 = bitcast i16* %144 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !4
  %148 = getelementptr i16, i16* %144, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  %150 = load <8 x i16>, <8 x i16>* %149, align 2, !alias.scope !4
  %151 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %151, align 2, !alias.scope !7, !noalias !4
  %152 = getelementptr i16, i16* %145, i64 8
  %153 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %150, <8 x i16>* %153, align 2, !alias.scope !7, !noalias !4
  %154 = add i64 %142, 16
  %155 = add i64 %143, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %141, !llvm.loop !11

157:                                              ; preds = %141, %138
  %158 = icmp eq i64 %39, %78
  br i1 %158, label %212, label %159

159:                                              ; preds = %157, %70, %66
  %160 = phi i64 [ %39, %70 ], [ %39, %66 ], [ %79, %157 ]
  %161 = phi i16* [ %38, %70 ], [ %38, %66 ], [ %80, %157 ]
  %162 = phi i16* [ %68, %70 ], [ %68, %66 ], [ %81, %157 ]
  %163 = add i64 %160, -1
  %164 = and i64 %160, 7
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %177, label %166

166:                                              ; preds = %159, %166
  %167 = phi i64 [ %172, %166 ], [ %160, %159 ]
  %168 = phi i16* [ %174, %166 ], [ %161, %159 ]
  %169 = phi i16* [ %173, %166 ], [ %162, %159 ]
  %170 = phi i64 [ %175, %166 ], [ %164, %159 ]
  %171 = load i16, i16* %168, align 2
  store i16 %171, i16* %169, align 2
  %172 = add i64 %167, -1
  %173 = getelementptr inbounds i16, i16* %169, i64 1
  %174 = getelementptr inbounds i16, i16* %168, i64 1
  %175 = add i64 %170, -1
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %166, !llvm.loop !13

177:                                              ; preds = %166, %159
  %178 = phi i64 [ %160, %159 ], [ %172, %166 ]
  %179 = phi i16* [ %161, %159 ], [ %174, %166 ]
  %180 = phi i16* [ %162, %159 ], [ %173, %166 ]
  %181 = icmp ult i64 %163, 7
  br i1 %181, label %212, label %182

182:                                              ; preds = %177, %182
  %183 = phi i64 [ %208, %182 ], [ %178, %177 ]
  %184 = phi i16* [ %210, %182 ], [ %179, %177 ]
  %185 = phi i16* [ %209, %182 ], [ %180, %177 ]
  %186 = load i16, i16* %184, align 2
  store i16 %186, i16* %185, align 2
  %187 = getelementptr inbounds i16, i16* %185, i64 1
  %188 = getelementptr inbounds i16, i16* %184, i64 1
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %185, i64 2
  %191 = getelementptr inbounds i16, i16* %184, i64 2
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %185, i64 3
  %194 = getelementptr inbounds i16, i16* %184, i64 3
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %185, i64 4
  %197 = getelementptr inbounds i16, i16* %184, i64 4
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %185, i64 5
  %200 = getelementptr inbounds i16, i16* %184, i64 5
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %185, i64 6
  %203 = getelementptr inbounds i16, i16* %184, i64 6
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = getelementptr inbounds i16, i16* %185, i64 7
  %206 = getelementptr inbounds i16, i16* %184, i64 7
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = add i64 %183, -8
  %209 = getelementptr inbounds i16, i16* %185, i64 8
  %210 = getelementptr inbounds i16, i16* %184, i64 8
  %211 = icmp eq i64 %208, 0
  br i1 %211, label %212, label %182, !llvm.loop !14

212:                                              ; preds = %177, %182, %157
  %213 = add i64 %55, %39
  %214 = load i8, i8* %41, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %218

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %213, i64* %217, align 8
  br label %220

218:                                              ; preds = %212
  %219 = trunc i64 %213 to i8
  store i8 %219, i8* %41, align 1
  br label %220

220:                                              ; preds = %218, %216
  %221 = getelementptr inbounds i16, i16* %67, i64 %213
  store i16 0, i16* %221, align 2
  br label %225

222:                                              ; preds = %53
  %223 = add i64 %55, %39
  %224 = sub i64 %223, %54
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.52"* %27, i64 %54, i64 %224, i64 %55, i64 %55, i64 0, i64 %39, i16* %38) #11
  br label %225

225:                                              ; preds = %222, %220, %58, %24
  %226 = load i8, i8* %5, align 4, !range !2
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %273

228:                                              ; preds = %225
  %229 = tail call zeroext i1 @_ZNK2ui15InputMethodBase19IsTextInputTypeNoneEv(%"class.ui::InputMethodBase"* %14) #11
  br i1 %229, label %273, label %230

230:                                              ; preds = %228
  %231 = bitcast %"class.ui::KeyEvent"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %231) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %231, i8* align 8 bitcast (<{ { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.23" }, i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>* @__const._ZNK2ui20InputMethodAuraLinux23SendFakeProcessKeyEventEPNS_8KeyEventE.key_event to i8*), i64 168, i1 false)
  %232 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %233 = load i8, i8* %232, align 8, !range !2
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %237, label %235

235:                                              ; preds = %230
  %236 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2ui8KeyEventC1ERKS0_(%"class.ui::KeyEvent"* nonnull %3, %"class.ui::KeyEvent"* dereferenceable(168) %236) #11
  br label %238

237:                                              ; preds = %230
  call void @_ZN2ui8KeyEventC1ENS_9EventTypeENS_12KeyboardCodeEiN4base9TimeTicksE(%"class.ui::KeyEvent"* nonnull %3, i32 7, i32 229, i32 0, i64 0) #11
  br label %238

238:                                              ; preds = %237, %235
  %239 = load i8, i8* %232, align 8, !range !2
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %243, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2ui8KeyEventD1Ev(%"class.ui::KeyEvent"* %242) #11
  store i8 0, i8* %232, align 8
  br label %243

243:                                              ; preds = %238, %241
  %244 = call i24 @_ZN2ui20InputMethodAuraLinux32DispatchImeFilteredKeyPressEventEPNS_8KeyEventE(%"class.ui::InputMethodAuraLinux"* %0, %"class.ui::KeyEvent"* nonnull %3)
  %245 = and i24 %244, 257
  %246 = icmp eq i24 %245, 0
  br i1 %246, label %247, label %272

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %3, i64 0, i32 0, i32 10
  %249 = load i32, i32* %248, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %272

252:                                              ; preds = %247
  %253 = call i32 @_ZN2ui20InputMethodAuraLinux17MaybeCommitResultEbRKNS_8KeyEventE(%"class.ui::InputMethodAuraLinux"* %0, i1 zeroext true, %"class.ui::KeyEvent"* nonnull dereferenceable(168) %3)
  %254 = bitcast %"struct.ui::CompositionText"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %254) #11
  call void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"* nonnull %4) #11
  %255 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6
  %256 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %255, i64 0, i32 0
  %257 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %4, i64 0, i32 0
  %258 = call dereferenceable(24) %"class.std::__1::basic_string.52"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.52"* %256, %"class.std::__1::basic_string.52"* nonnull dereferenceable(24) %257) #11
  %259 = icmp eq %"struct.ui::CompositionText"* %255, %4
  br i1 %259, label %266, label %260

260:                                              ; preds = %252
  %261 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 1
  %262 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %4, i64 0, i32 1, i32 0, i32 0
  %263 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %262, align 8
  %264 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %4, i64 0, i32 1, i32 0, i32 1
  %265 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %264, align 8
  call void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.61"* %261, %"struct.ui::ImeTextSpan"* %263, %"struct.ui::ImeTextSpan"* %265) #11
  br label %266

266:                                              ; preds = %252, %260
  %267 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 2
  %268 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %4, i64 0, i32 2
  %269 = bitcast %"class.gfx::Range"* %268 to i64*
  %270 = bitcast %"class.gfx::Range"* %267 to i64*
  %271 = load i64, i64* %269, align 8
  store i64 %271, i64* %270, align 8
  call void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %254) #11
  br label %272

272:                                              ; preds = %247, %243, %266
  call void @_ZN2ui8KeyEventD1Ev(%"class.ui::KeyEvent"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %231) #11
  ret void

273:                                              ; preds = %225, %13, %8, %228
  ret void
}

declare void @_ZN2ui8KeyEventC1ENS_9EventTypeENS_12KeyboardCodeEiN4base9TimeTicksE(%"class.ui::KeyEvent"*, i32, i32, i32, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn112_N2ui20InputMethodAuraLinux8OnCommitERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::InputMethodAuraLinux"*, %"class.std::__1::basic_string.52"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 -1, i32 5
  %4 = bitcast %"class.std::__1::basic_string.52"* %3 to %"class.ui::InputMethodAuraLinux"*
  tail call void @_ZN2ui20InputMethodAuraLinux8OnCommitERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.ui::InputMethodAuraLinux"* %4, %"class.std::__1::basic_string.52"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux23OnDeleteSurroundingTextEij(%"class.ui::InputMethodAuraLinux"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %5 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %6 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %6, i64 7
  %8 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %7, align 8
  %9 = tail call %"class.ui::TextInputClient"* %8(%"class.ui::InputMethodBase"* %4) #11
  %10 = icmp eq %"class.ui::TextInputClient"* %9, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 0
  %13 = bitcast %"class.std::__1::basic_string.52"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  br label %22

20:                                               ; preds = %11
  %21 = zext i8 %15 to i64
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i64 [ %19, %17 ], [ %21, %20 ]
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %40

25:                                               ; preds = %22
  %26 = icmp sgt i32 %1, -1
  %27 = sub nsw i32 0, %1
  %28 = select i1 %26, i32 0, i32 %27
  %29 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %5, align 8
  %30 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %29, i64 7
  %31 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %30, align 8
  %32 = tail call %"class.ui::TextInputClient"* %31(%"class.ui::InputMethodBase"* %4) #11
  %33 = zext i32 %28 to i64
  %34 = sub i32 %2, %28
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.ui::TextInputClient"* %32 to void (%"class.ui::TextInputClient"*, i64, i64)***
  %37 = load void (%"class.ui::TextInputClient"*, i64, i64)**, void (%"class.ui::TextInputClient"*, i64, i64)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.ui::TextInputClient"*, i64, i64)*, void (%"class.ui::TextInputClient"*, i64, i64)** %37, i64 25
  %39 = load void (%"class.ui::TextInputClient"*, i64, i64)*, void (%"class.ui::TextInputClient"*, i64, i64)** %38, align 8
  tail call void %39(%"class.ui::TextInputClient"* %32, i64 %33, i64 %35) #11
  br label %40

40:                                               ; preds = %3, %25, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn112_N2ui20InputMethodAuraLinux23OnDeleteSurroundingTextEij(%"class.ui::InputMethodAuraLinux"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 -1, i32 5
  %5 = bitcast %"class.std::__1::basic_string.52"* %4 to %"class.ui::InputMethodBase"*
  %6 = bitcast %"class.std::__1::basic_string.52"* %4 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %7 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %7, i64 7
  %9 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %8, align 8
  %10 = tail call %"class.ui::TextInputClient"* %9(%"class.ui::InputMethodBase"* %5) #11
  %11 = icmp eq %"class.ui::TextInputClient"* %10, null
  br i1 %11, label %41, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %4, i64 14
  %14 = bitcast %"class.std::__1::basic_string.52"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %4, i64 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  br label %23

21:                                               ; preds = %12
  %22 = zext i8 %16 to i64
  br label %23

23:                                               ; preds = %21, %18
  %24 = phi i64 [ %20, %18 ], [ %22, %21 ]
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %41

26:                                               ; preds = %23
  %27 = icmp sgt i32 %1, -1
  %28 = sub nsw i32 0, %1
  %29 = select i1 %27, i32 0, i32 %28
  %30 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %6, align 8
  %31 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %30, i64 7
  %32 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %31, align 8
  %33 = tail call %"class.ui::TextInputClient"* %32(%"class.ui::InputMethodBase"* %5) #11
  %34 = zext i32 %29 to i64
  %35 = sub i32 %2, %29
  %36 = zext i32 %35 to i64
  %37 = bitcast %"class.ui::TextInputClient"* %33 to void (%"class.ui::TextInputClient"*, i64, i64)***
  %38 = load void (%"class.ui::TextInputClient"*, i64, i64)**, void (%"class.ui::TextInputClient"*, i64, i64)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.ui::TextInputClient"*, i64, i64)*, void (%"class.ui::TextInputClient"*, i64, i64)** %38, i64 25
  %40 = load void (%"class.ui::TextInputClient"*, i64, i64)*, void (%"class.ui::TextInputClient"*, i64, i64)** %39, align 8
  tail call void %40(%"class.ui::TextInputClient"* %33, i64 %34, i64 %36) #11
  br label %41

41:                                               ; preds = %3, %23, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux16OnPreeditChangedERKNS_15CompositionTextE(%"class.ui::InputMethodAuraLinux"*, %"struct.ui::CompositionText"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 8
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  tail call void @_ZN2ui20InputMethodAuraLinux15OnPreeditUpdateERKNS_15CompositionTextEb(%"class.ui::InputMethodAuraLinux"* %0, %"struct.ui::CompositionText"* dereferenceable(56) %1, i1 zeroext %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux15OnPreeditUpdateERKNS_15CompositionTextEb(%"class.ui::InputMethodAuraLinux"*, %"struct.ui::CompositionText"* dereferenceable(56), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.ui::KeyEvent", align 8
  %5 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 8
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %10 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 10, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp slt i64 %9, %11
  br i1 %12, label %64, label %13

13:                                               ; preds = %3, %8
  %14 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %15 = tail call zeroext i1 @_ZNK2ui15InputMethodBase19IsTextInputTypeNoneEv(%"class.ui::InputMethodBase"* %14) #11
  br i1 %15, label %64, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6
  %18 = tail call zeroext i1 @_ZNK2ui15CompositionTextneERKS0_(%"struct.ui::CompositionText"* %17, %"struct.ui::CompositionText"* dereferenceable(56) %1) #11
  %19 = zext i1 %18 to i8
  %20 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 9
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = or i8 %21, %19
  store i8 %22, i8* %20, align 1
  %23 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %17, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 0
  %25 = tail call dereferenceable(24) %"class.std::__1::basic_string.52"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.52"* %23, %"class.std::__1::basic_string.52"* dereferenceable(24) %24) #11
  %26 = icmp eq %"struct.ui::CompositionText"* %17, %1
  br i1 %26, label %33, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 1
  %29 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1, i32 0, i32 0
  %30 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %29, align 8
  %31 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1, i32 0, i32 1
  %32 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %31, align 8
  tail call void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.61"* %28, %"struct.ui::ImeTextSpan"* %30, %"struct.ui::ImeTextSpan"* %32) #11
  br label %33

33:                                               ; preds = %16, %27
  %34 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 6, i32 2
  %35 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 2
  %36 = bitcast %"class.gfx::Range"* %35 to i64*
  %37 = bitcast %"class.gfx::Range"* %34 to i64*
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  br i1 %2, label %39, label %64

39:                                               ; preds = %33
  %40 = bitcast %"class.ui::KeyEvent"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %40) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %40, i8* align 8 bitcast (<{ { i32 (...)**, i32, [4 x i8], %"class.base::TimeTicks", { %"class.base::flat_map", i64, i64, i8, i8, i8, [1 x i8], i32, float, float, i64 }, i32, [4 x i8], %"class.ui::Event"*, i8, i8, [6 x i8], %"class.ui::EventTarget"*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.23" }, i32, i32, i32, i8, [3 x i8], %"class.ui::DomKey", [4 x i8] }>* @__const._ZNK2ui20InputMethodAuraLinux23SendFakeProcessKeyEventEPNS_8KeyEventE.key_event to i8*), i64 168, i1 false)
  %41 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2ui8KeyEventC1ERKS0_(%"class.ui::KeyEvent"* nonnull %4, %"class.ui::KeyEvent"* dereferenceable(168) %45) #11
  br label %47

46:                                               ; preds = %39
  call void @_ZN2ui8KeyEventC1ENS_9EventTypeENS_12KeyboardCodeEiN4base9TimeTicksE(%"class.ui::KeyEvent"* nonnull %4, i32 7, i32 229, i32 0, i64 0) #11
  br label %47

47:                                               ; preds = %46, %44
  %48 = load i8, i8* %41, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN2ui8KeyEventD1Ev(%"class.ui::KeyEvent"* %51) #11
  store i8 0, i8* %41, align 8
  br label %52

52:                                               ; preds = %47, %50
  %53 = call i24 @_ZN2ui20InputMethodAuraLinux32DispatchImeFilteredKeyPressEventEPNS_8KeyEventE(%"class.ui::InputMethodAuraLinux"* %0, %"class.ui::KeyEvent"* nonnull %4)
  %54 = and i24 %53, 257
  %55 = icmp eq i24 %54, 0
  br i1 %55, label %56, label %63

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.ui::KeyEvent", %"class.ui::KeyEvent"* %4, i64 0, i32 0, i32 10
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = call zeroext i1 @_ZN2ui20InputMethodAuraLinux22MaybeUpdateCompositionEb(%"class.ui::InputMethodAuraLinux"* %0, i1 zeroext false)
  br label %63

63:                                               ; preds = %56, %52, %61
  call void @_ZN2ui8KeyEventD1Ev(%"class.ui::KeyEvent"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %40) #11
  br label %64

64:                                               ; preds = %33, %8, %13, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn112_N2ui20InputMethodAuraLinux16OnPreeditChangedERKNS_15CompositionTextE(%"class.ui::InputMethodAuraLinux"*, %"struct.ui::CompositionText"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 -1, i32 5
  %4 = bitcast %"class.std::__1::basic_string.52"* %3 to %"class.ui::InputMethodAuraLinux"*
  %5 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %4, i64 0, i32 8
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  tail call void @_ZN2ui20InputMethodAuraLinux15OnPreeditUpdateERKNS_15CompositionTextEb(%"class.ui::InputMethodAuraLinux"* %4, %"struct.ui::CompositionText"* dereferenceable(56) %1, i1 zeroext %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux12OnPreeditEndEv(%"class.ui::InputMethodAuraLinux"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::CompositionText", align 8
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %4 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %5 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %5, i64 7
  %7 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %6, align 8
  %8 = tail call %"class.ui::TextInputClient"* %7(%"class.ui::InputMethodBase"* %3) #11
  %9 = bitcast %"struct.ui::CompositionText"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #11
  call void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"* nonnull %2) #11
  %10 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 8
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = icmp ne %"class.ui::TextInputClient"* %8, null
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %21

15:                                               ; preds = %1
  %16 = bitcast %"class.ui::TextInputClient"* %8 to i1 (%"class.ui::TextInputClient"*)***
  %17 = load i1 (%"class.ui::TextInputClient"*)**, i1 (%"class.ui::TextInputClient"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.ui::TextInputClient"*)*, i1 (%"class.ui::TextInputClient"*)** %17, i64 15
  %19 = load i1 (%"class.ui::TextInputClient"*)*, i1 (%"class.ui::TextInputClient"*)** %18, align 8
  %20 = call zeroext i1 %19(%"class.ui::TextInputClient"* nonnull %8) #11
  br label %21

21:                                               ; preds = %1, %15
  %22 = phi i1 [ false, %1 ], [ %20, %15 ]
  call void @_ZN2ui20InputMethodAuraLinux15OnPreeditUpdateERKNS_15CompositionTextEb(%"class.ui::InputMethodAuraLinux"* %0, %"struct.ui::CompositionText"* nonnull dereferenceable(56) %2, i1 zeroext %22)
  call void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn112_N2ui20InputMethodAuraLinux12OnPreeditEndEv(%"class.ui::InputMethodAuraLinux"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.ui::CompositionText", align 8
  %3 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 -1, i32 5
  %4 = bitcast %"class.std::__1::basic_string.52"* %3 to %"class.ui::InputMethodAuraLinux"*
  %5 = bitcast %"class.std::__1::basic_string.52"* %3 to %"class.ui::InputMethodBase"*
  %6 = bitcast %"class.std::__1::basic_string.52"* %3 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %7 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %7, i64 7
  %9 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %8, align 8
  %10 = tail call %"class.ui::TextInputClient"* %9(%"class.ui::InputMethodBase"* %5) #11
  %11 = bitcast %"struct.ui::CompositionText"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #11
  call void @_ZN2ui15CompositionTextC1Ev(%"struct.ui::CompositionText"* nonnull %2) #11
  %12 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %4, i64 0, i32 8
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = icmp ne %"class.ui::TextInputClient"* %10, null
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %23

17:                                               ; preds = %1
  %18 = bitcast %"class.ui::TextInputClient"* %10 to i1 (%"class.ui::TextInputClient"*)***
  %19 = load i1 (%"class.ui::TextInputClient"*)**, i1 (%"class.ui::TextInputClient"*)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.ui::TextInputClient"*)*, i1 (%"class.ui::TextInputClient"*)** %19, i64 15
  %21 = load i1 (%"class.ui::TextInputClient"*)*, i1 (%"class.ui::TextInputClient"*)** %20, align 8
  %22 = call zeroext i1 %21(%"class.ui::TextInputClient"* nonnull %10) #11
  br label %23

23:                                               ; preds = %1, %17
  %24 = phi i1 [ false, %1 ], [ %22, %17 ]
  call void @_ZN2ui20InputMethodAuraLinux15OnPreeditUpdateERKNS_15CompositionTextEb(%"class.ui::InputMethodAuraLinux"* %4, %"struct.ui::CompositionText"* nonnull dereferenceable(56) %2, i1 zeroext %24) #11
  call void @_ZN2ui15CompositionTextD1Ev(%"struct.ui::CompositionText"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux25OnWillChangeFocusedClientEPNS_15TextInputClientES2_(%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"* nocapture readnone, %"class.ui::TextInputClient"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZN2ui20InputMethodAuraLinux12ResetContextEv(%"class.ui::InputMethodAuraLinux"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux22ConfirmCompositionTextEv(%"class.ui::InputMethodAuraLinux"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2ui20InputMethodAuraLinux12ResetContextEv(%"class.ui::InputMethodAuraLinux"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui20InputMethodAuraLinux24OnDidChangeFocusedClientEPNS_15TextInputClientES2_(%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"* nocapture readnone, %"class.ui::TextInputClient"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 8
  %6 = icmp ne i32 %5, 0
  %7 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 0
  %8 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to i32 (%"class.ui::InputMethodBase"*)***
  %9 = load i32 (%"class.ui::InputMethodBase"*)**, i32 (%"class.ui::InputMethodBase"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.ui::InputMethodBase"*)*, i32 (%"class.ui::InputMethodBase"*)** %9, i64 12
  %11 = load i32 (%"class.ui::InputMethodBase"*)*, i32 (%"class.ui::InputMethodBase"*)** %10, align 8
  %12 = tail call i32 %11(%"class.ui::InputMethodBase"* %7) #11
  store i32 %12, i32* %4, align 8
  %13 = icmp eq i32 %12, 0
  %14 = and i1 %6, %13
  br i1 %14, label %15, label %22

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %16, align 8
  %18 = bitcast %"class.ui::LinuxInputMethodContext"* %17 to void (%"class.ui::LinuxInputMethodContext"*)***
  %19 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %19, i64 7
  %21 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %20, align 8
  tail call void %21(%"class.ui::LinuxInputMethodContext"* %17) #11
  br label %31

22:                                               ; preds = %3
  %23 = or i1 %6, %13
  br i1 %23, label %31, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %25, align 8
  %27 = bitcast %"class.ui::LinuxInputMethodContext"* %26 to void (%"class.ui::LinuxInputMethodContext"*)***
  %28 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %28, i64 6
  %30 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %29, align 8
  tail call void %30(%"class.ui::LinuxInputMethodContext"* %26) #11
  br label %31

31:                                               ; preds = %24, %22, %15
  %32 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)***
  %33 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %33, i64 7
  %35 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %34, align 8
  %36 = tail call %"class.ui::TextInputClient"* %35(%"class.ui::InputMethodBase"* %7) #11
  %37 = icmp eq %"class.ui::TextInputClient"* %36, null
  %38 = getelementptr inbounds %"class.ui::InputMethodAuraLinux", %"class.ui::InputMethodAuraLinux"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.ui::LinuxInputMethodContext"*, %"class.ui::LinuxInputMethodContext"** %38, align 8
  %40 = bitcast %"class.ui::LinuxInputMethodContext"* %39 to void (%"class.ui::LinuxInputMethodContext"*)***
  %41 = load void (%"class.ui::LinuxInputMethodContext"*)**, void (%"class.ui::LinuxInputMethodContext"*)*** %40, align 8
  br i1 %37, label %45, label %42

42:                                               ; preds = %31
  %43 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %41, i64 6
  %44 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %43, align 8
  tail call void %44(%"class.ui::LinuxInputMethodContext"* %39) #11
  br label %48

45:                                               ; preds = %31
  %46 = getelementptr inbounds void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %41, i64 7
  %47 = load void (%"class.ui::LinuxInputMethodContext"*)*, void (%"class.ui::LinuxInputMethodContext"*)** %46, align 8
  tail call void %47(%"class.ui::LinuxInputMethodContext"* %39) #11
  br label %48

48:                                               ; preds = %42, %45
  %49 = load i32, i32* %4, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %48
  %52 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)**, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*** %32, align 8
  %53 = getelementptr inbounds %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %52, i64 7
  %54 = load %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)*, %"class.ui::TextInputClient"* (%"class.ui::InputMethodBase"*)** %53, align 8
  %55 = tail call %"class.ui::TextInputClient"* %54(%"class.ui::InputMethodBase"* %7) #11
  %56 = bitcast %"class.ui::InputMethodAuraLinux"* %0 to void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*)***
  %57 = load void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*)**, void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*)*, void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*)** %57, i64 10
  %59 = load void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*)*, void (%"class.ui::InputMethodAuraLinux"*, %"class.ui::TextInputClient"*)** %58, align 8
  tail call void %59(%"class.ui::InputMethodAuraLinux"* %0, %"class.ui::TextInputClient"* %55) #11
  br label %60

60:                                               ; preds = %48, %51
  ret void
}

declare zeroext i1 @_ZNK2ui15CompositionTextneERKS0_(%"struct.ui::CompositionText"*, %"struct.ui::CompositionText"* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN2ui15InputMethodBase11SetDelegateEPNS_8internal19InputMethodDelegateE(%"class.ui::InputMethodBase"*, %"class.ui::internal::InputMethodDelegate"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase7OnFocusEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase6OnBlurEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase25SetFocusedTextInputClientEPNS_15TextInputClientE(%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase21DetachTextInputClientEPNS_15TextInputClientE(%"class.ui::InputMethodBase"*, %"class.ui::TextInputClient"*) unnamed_addr #1

declare %"class.ui::TextInputClient"* @_ZNK2ui15InputMethodBase18GetTextInputClientEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare i32 @_ZNK2ui15InputMethodBase16GetTextInputTypeEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare i32 @_ZNK2ui15InputMethodBase16GetTextInputModeEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase28ShowVirtualKeyboardIfEnabledEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase11AddObserverEPNS_19InputMethodObserverE(%"class.ui::InputMethodBase"*, %"class.ui::InputMethodObserver"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase14RemoveObserverEPNS_19InputMethodObserverE(%"class.ui::InputMethodBase"*, %"class.ui::InputMethodObserver"*) unnamed_addr #1

declare void @_ZN2ui15InputMethodBase25SetOnScreenKeyboardBoundsERKN3gfx4RectE(%"class.ui::InputMethodBase"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare %"class.ui::VirtualKeyboardController"* @_ZN2ui15InputMethodBase28GetVirtualKeyboardControllerEv(%"class.ui::InputMethodBase"*) unnamed_addr #1

declare i24 @_ZNK2ui15InputMethodBase23DispatchKeyEventPostIMEEPNS_8KeyEventE(%"class.ui::InputMethodBase"*, %"class.ui::KeyEvent"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2ui20InputMethodAuraLinux14OnPreeditStartEv(%"class.ui::InputMethodAuraLinux"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn112_N2ui20InputMethodAuraLinux14OnPreeditStartEv(%"class.ui::InputMethodAuraLinux"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK2ui5Event14HasNativeEventEv(%"class.ui::Event"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.52"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.52"*, %"class.std::__1::basic_string.52"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.52"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.52"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.52"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.52"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.52"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.52"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.52"*
  %35 = icmp ugt %"class.std::__1::basic_string.52"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !15
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !15
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !18, !noalias !15
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !18, !noalias !15
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !15
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !15
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !18, !noalias !15
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !18, !noalias !15
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !15
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !15
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !18, !noalias !15
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !18, !noalias !15
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !15
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !15
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !18, !noalias !15
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !18, !noalias !15
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !20

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !15
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !15
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !18, !noalias !15
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !18, !noalias !15
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !21

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !22

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !23

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.52"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !24
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !24
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !27, !noalias !24
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !27, !noalias !24
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !24
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !24
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !27, !noalias !24
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !27, !noalias !24
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !24
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !24
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !27, !noalias !24
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !27, !noalias !24
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !24
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !24
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !27, !noalias !24
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !27, !noalias !24
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !29

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !24
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !24
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !27, !noalias !24
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !27, !noalias !24
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !30

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !31

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !32

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.52"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.52"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !33
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !33
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !36, !noalias !33
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !36, !noalias !33
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !33
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !33
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !36, !noalias !33
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !36, !noalias !33
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !33
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !33
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !36, !noalias !33
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !36, !noalias !33
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !33
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !33
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !36, !noalias !33
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !36, !noalias !33
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !38

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !33
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !33
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !36, !noalias !33
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !36, !noalias !33
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !39

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !40

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !41

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.52"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.52"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.52"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.52"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.52"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.52"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !42
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !42
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !45, !noalias !42
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !45, !noalias !42
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !42
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !42
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !45, !noalias !42
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !45, !noalias !42
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !42
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !42
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !45, !noalias !42
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !45, !noalias !42
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !42
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !42
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !45, !noalias !42
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !45, !noalias !42
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !47

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !42
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !42
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !45, !noalias !42
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !45, !noalias !42
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !48

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !49

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !50

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !51

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !52

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !53

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !55
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !55
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !58, !noalias !55
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !58, !noalias !55
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !55
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !55
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !58, !noalias !55
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !58, !noalias !55
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !55
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !55
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !58, !noalias !55
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !58, !noalias !55
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !55
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !55
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !58, !noalias !55
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !58, !noalias !55
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !60

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !55
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !55
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !58, !noalias !55
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !58, !noalias !55
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !61

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !62

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !63

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.52"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.52", %"class.std::__1::basic_string.52"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2ui11ImeTextSpanENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.61"*, %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.ui::ImeTextSpan"* %2 to i64
  %5 = ptrtoint %"struct.ui::ImeTextSpan"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 6
  %8 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.ui::ImeTextSpan"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.61"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 6
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.ui::ImeTextSpan"*
  br i1 %15, label %68, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.ui::ImeTextSpan"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 6
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 %22
  %25 = select i1 %23, %"struct.ui::ImeTextSpan"* %24, %"struct.ui::ImeTextSpan"* %2
  %26 = icmp eq %"struct.ui::ImeTextSpan"* %25, %1
  br i1 %26, label %43, label %27

27:                                               ; preds = %17, %39
  %28 = phi %"struct.ui::ImeTextSpan"* [ %41, %39 ], [ %16, %17 ]
  %29 = phi %"struct.ui::ImeTextSpan"* [ %40, %39 ], [ %1, %17 ]
  %30 = bitcast %"struct.ui::ImeTextSpan"* %28 to i8*
  %31 = bitcast %"struct.ui::ImeTextSpan"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 38, i1 false) #11
  %32 = icmp eq %"struct.ui::ImeTextSpan"* %28, %29
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %28, i64 0, i32 11
  %35 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %29, i64 0, i32 11, i32 0, i32 0
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %35, align 8
  %37 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %29, i64 0, i32 11, i32 0, i32 1
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.63"* %34, %"class.std::__1::basic_string"* %36, %"class.std::__1::basic_string"* %38) #11
  br label %39

39:                                               ; preds = %33, %27
  %40 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %29, i64 1
  %41 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %28, i64 1
  %42 = icmp eq %"struct.ui::ImeTextSpan"* %40, %25
  br i1 %42, label %43, label %27

43:                                               ; preds = %39, %17
  %44 = phi %"struct.ui::ImeTextSpan"* [ %16, %17 ], [ %41, %39 ]
  br i1 %23, label %45, label %60

45:                                               ; preds = %43
  %46 = load i64, i64* %19, align 8
  %47 = icmp eq %"struct.ui::ImeTextSpan"* %25, %2
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to %"struct.ui::ImeTextSpan"*
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi %"struct.ui::ImeTextSpan"* [ %54, %50 ], [ %49, %48 ]
  %52 = phi %"struct.ui::ImeTextSpan"* [ %53, %50 ], [ %24, %48 ]
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %51, %"struct.ui::ImeTextSpan"* dereferenceable(64) %52) #11
  %53 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %52, i64 1
  %54 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %51, i64 1
  %55 = icmp eq %"struct.ui::ImeTextSpan"* %53, %2
  br i1 %55, label %56, label %50

56:                                               ; preds = %50
  %57 = ptrtoint %"struct.ui::ImeTextSpan"* %54 to i64
  br label %58

58:                                               ; preds = %45, %56
  %59 = phi i64 [ %46, %45 ], [ %57, %56 ]
  store i64 %59, i64* %19, align 8
  br label %122

60:                                               ; preds = %43
  %61 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %18, align 8
  %62 = icmp eq %"struct.ui::ImeTextSpan"* %61, %44
  br i1 %62, label %67, label %63

63:                                               ; preds = %60, %63
  %64 = phi %"struct.ui::ImeTextSpan"* [ %65, %63 ], [ %61, %60 ]
  %65 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %64, i64 -1
  tail call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* %65) #11
  %66 = icmp eq %"struct.ui::ImeTextSpan"* %65, %44
  br i1 %66, label %67, label %63

67:                                               ; preds = %63, %60
  store %"struct.ui::ImeTextSpan"* %44, %"struct.ui::ImeTextSpan"** %18, align 8
  br label %122

68:                                               ; preds = %3
  %69 = icmp eq i64 %12, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %12 to i8*
  %72 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 1
  %73 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %72, align 8
  %74 = icmp eq %"struct.ui::ImeTextSpan"* %73, %16
  br i1 %74, label %82, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"struct.ui::ImeTextSpan"* [ %77, %75 ], [ %73, %70 ]
  %77 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %76, i64 -1
  tail call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* %77) #11
  %78 = icmp eq %"struct.ui::ImeTextSpan"* %77, %16
  br i1 %78, label %79, label %75

79:                                               ; preds = %75
  %80 = bitcast %"class.std::__1::vector.61"* %0 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %70
  %83 = phi i8* [ %81, %79 ], [ %71, %70 ]
  store %"struct.ui::ImeTextSpan"* %16, %"struct.ui::ImeTextSpan"** %72, align 8
  tail call void @_ZdlPv(i8* %83) #12
  %84 = bitcast %"class.std::__1::vector.61"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #11
  br label %85

85:                                               ; preds = %68, %82
  %86 = phi i64 [ %10, %68 ], [ 0, %82 ]
  %87 = icmp ugt i64 %7, 288230376151711743
  br i1 %87, label %88, label %90

88:                                               ; preds = %85
  %89 = bitcast %"class.std::__1::vector.61"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %89) #13
  unreachable

90:                                               ; preds = %85
  %91 = ashr exact i64 %86, 6
  %92 = icmp ult i64 %91, 144115188075855871
  br i1 %92, label %93, label %100

93:                                               ; preds = %90
  %94 = ashr exact i64 %86, 5
  %95 = icmp ult i64 %94, %7
  br i1 %95, label %100, label %96

96:                                               ; preds = %93
  %97 = icmp ugt i64 %94, 288230376151711743
  br i1 %97, label %98, label %100

98:                                               ; preds = %96
  %99 = bitcast %"class.std::__1::vector.61"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %99) #13
  unreachable

100:                                              ; preds = %93, %90, %96
  %101 = phi i64 [ %94, %96 ], [ 288230376151711743, %90 ], [ %7, %93 ]
  %102 = shl i64 %101, 6
  %103 = tail call i8* @_Znwm(i64 %102) #12
  %104 = bitcast i8* %103 to %"struct.ui::ImeTextSpan"*
  %105 = getelementptr inbounds %"class.std::__1::vector.61", %"class.std::__1::vector.61"* %0, i64 0, i32 0, i32 1
  %106 = bitcast %"struct.ui::ImeTextSpan"** %105 to i8**
  store i8* %103, i8** %106, align 8
  %107 = bitcast %"class.std::__1::vector.61"* %0 to i8**
  store i8* %103, i8** %107, align 8
  %108 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %104, i64 %101
  store %"struct.ui::ImeTextSpan"* %108, %"struct.ui::ImeTextSpan"** %8, align 8
  %109 = bitcast %"struct.ui::ImeTextSpan"** %105 to i64*
  %110 = ptrtoint i8* %103 to i64
  %111 = icmp eq %"struct.ui::ImeTextSpan"* %1, %2
  br i1 %111, label %120, label %112

112:                                              ; preds = %100, %112
  %113 = phi %"struct.ui::ImeTextSpan"* [ %116, %112 ], [ %104, %100 ]
  %114 = phi %"struct.ui::ImeTextSpan"* [ %115, %112 ], [ %1, %100 ]
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %113, %"struct.ui::ImeTextSpan"* dereferenceable(64) %114) #11
  %115 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %114, i64 1
  %116 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %113, i64 1
  %117 = icmp eq %"struct.ui::ImeTextSpan"* %115, %2
  br i1 %117, label %118, label %112

118:                                              ; preds = %112
  %119 = ptrtoint %"struct.ui::ImeTextSpan"* %116 to i64
  br label %120

120:                                              ; preds = %100, %118
  %121 = phi i64 [ %110, %100 ], [ %119, %118 ]
  store i64 %121, i64* %109, align 8
  br label %122

122:                                              ; preds = %58, %67, %120
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.63"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.63"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #11
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #11
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #11
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #11
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.63"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #12
  %134 = bitcast %"class.std::__1::vector.63"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #11
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector.63"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #13
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #12
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector.63"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #11
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #11
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #10

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare dereferenceable(168) %"class.ui::KeyEvent"* @_ZN2ui8KeyEventaSERKS0_(%"class.ui::KeyEvent"*, %"class.ui::KeyEvent"* dereferenceable(168)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !10}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !12}
!22 = distinct !{!22, !12}
!23 = distinct !{!23, !10}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !12}
!31 = distinct !{!31, !12}
!32 = distinct !{!32, !10}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !12}
!40 = distinct !{!40, !12}
!41 = distinct !{!41, !10}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !12}
!49 = distinct !{!49, !12}
!50 = distinct !{!50, !10}
!51 = distinct !{!51, !10}
!52 = distinct !{!52, !12}
!53 = distinct !{!53, !54, !10}
!54 = !{!"llvm.loop.unroll.runtime.disable"}
!55 = !{!56}
!56 = distinct !{!56, !57}
!57 = distinct !{!57, !"LVerDomain"}
!58 = !{!59}
!59 = distinct !{!59, !57}
!60 = distinct !{!60, !10}
!61 = distinct !{!61, !12}
!62 = distinct !{!62, !12}
!63 = distinct !{!63, !10}
