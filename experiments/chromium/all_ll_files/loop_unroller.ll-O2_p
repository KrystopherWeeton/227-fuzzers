; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_unroller.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_unroller.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl" = type { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*, %"class.std::__1::vector.38", %"class.std::__1::vector.976", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"class.std::__1::vector.983", %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.976", i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState" = type { %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.976", %"class.std::__1::vector.976", %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map" }
%"class.std::__1::vector.983" = type { %"class.std::__1::__vector_base.984" }
%"class.std::__1::__vector_base.984" = type { %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"**, %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::vector.976" = type { %"class.std::__1::__vector_base.977" }
%"class.std::__1::__vector_base.977" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.spvtools::opt::Instruction"** }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::LoopUtils" = type { %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::LoopDescriptor" = type { %"class.std::__1::vector.910", %"class.spvtools::opt::Loop", %"class.std::__1::unordered_map.939", %"class.std::__1::vector.963" }
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.spvtools::opt::Loop"** }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.910", %"class.std::__1::unordered_set.917", i8, [7 x i8] }>
%"class.std::__1::unordered_set.917" = type { %"class.std::__1::__hash_table.918" }
%"class.std::__1::__hash_table.918" = type <{ %"class.std::__1::unique_ptr.919", %"class.std::__1::__compressed_pair.929", %"class.std::__1::__compressed_pair.934", %"class.std::__1::__compressed_pair.936", [4 x i8] }>
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921", %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::__hash_node_base.922"** }
%"struct.std::__1::__hash_node_base.922" = type { %"struct.std::__1::__hash_node_base.922"* }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.std::__1::__bucket_list_deallocator.924" }
%"class.std::__1::__bucket_list_deallocator.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::__hash_node_base.922" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.939" = type { %"class.std::__1::__hash_table.940" }
%"class.std::__1::__hash_table.940" = type <{ %"class.std::__1::unique_ptr.941", %"class.std::__1::__compressed_pair.951", %"class.std::__1::__compressed_pair.956", %"class.std::__1::__compressed_pair.959", [4 x i8] }>
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943", %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::__hash_node_base.944"** }
%"struct.std::__1::__hash_node_base.944" = type { %"struct.std::__1::__hash_node_base.944"* }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.std::__1::__bucket_list_deallocator.946" }
%"class.std::__1::__bucket_list_deallocator.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::__hash_node_base.944" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.971" }
%"struct.std::__1::pair" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::unique_ptr.965" }
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::__hash_node.1155" = type <{ %"struct.std::__1::__hash_node_base.922", i64, i32, [4 x i8] }>
%"class.spvtools::opt::UptrVectorIterator.1162" = type { %"class.std::__1::vector.38"*, %"class.std::__1::__wrap_iter.1148" }
%"class.std::__1::__wrap_iter.1148" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::tuple.1084" = type { %"struct.std::__1::__tuple_impl.1085" }
%"struct.std::__1::__tuple_impl.1085" = type { %"class.std::__1::__tuple_leaf.1086" }
%"class.std::__1::__tuple_leaf.1086" = type { i32* }
%"class.std::__1::tuple.1074" = type { i8 }
%"class.std::__1::function.1116" = type { %"class.std::__1::__function::__policy_func.1120" }
%"class.std::__1::__function::__policy_func.1120" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1121", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1121" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.1110" = type { %"class.std::__1::__function::__policy_func.1114" }
%"class.std::__1::__function::__policy_func.1114" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1115", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1115" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template.1062" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template.1062" = type { %"class.spvtools::opt::Instruction"* }
%"class.std::__1::function.1164" = type { %"class.std::__1::__function::__policy_func.1168" }
%"class.std::__1::__function::__policy_func.1168" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1169", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1169" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.333", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1001" }
%"struct.std::__1::pair.1001" = type { i32, %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"struct.std::__1::default_delete.44" = type { i8 }
%"struct.std::__1::default_delete.120" = type { i8 }
%"struct.std::__1::pair.1014" = type { i32, i32 }
%"class.spvtools::opt::LoopUnroller" = type { %"class.spvtools::opt::Pass.base", i8, i32 }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.spvtools::opt::PostOrderTreeDFIterator" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.996" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"**, %"class.std::__1::__compressed_pair.991" }
%"struct.std::__1::pair.990" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::__wrap_iter.1000" }
%"class.std::__1::__wrap_iter.1000" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"struct.std::__1::pair.990"** }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::function.1026" = type { %"class.std::__1::__function::__policy_func.1030" }
%"class.std::__1::__function::__policy_func.1030" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1031", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1031" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.1020" = type { %"class.std::__1::__function::__policy_func.1024" }
%"class.std::__1::__function::__policy_func.1024" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1025", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1025" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::__hash_node_base.1043" = type { %"struct.std::__1::__hash_node_base.1043"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1066" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::pair.1066" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::tuple.1133" = type { %"struct.std::__1::__tuple_impl.1134" }
%"struct.std::__1::__tuple_impl.1134" = type { %"class.std::__1::__tuple_leaf.1135" }
%"class.std::__1::__tuple_leaf.1135" = type { %"class.spvtools::opt::Instruction"** }
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Matrix" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Image" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, i32, i32, i8, i8, i32, i32, i32 }
%"class.spvtools::opt::analysis::Sampler" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::SampledImage" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.spvtools::opt::analysis::RuntimeArray" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.1173", %"class.std::__1::map.1180" }
%"class.std::__1::vector.1173" = type { %"class.std::__1::__vector_base.1174" }
%"class.std::__1::__vector_base.1174" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.1180" = type { %"class.std::__1::__tree.1181" }
%"class.std::__1::__tree.1181" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1182", %"class.std::__1::__compressed_pair.1186" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1186" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::analysis::Opaque" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Function" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.1173" }
%"class.spvtools::opt::analysis::Event" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::DeviceEvent" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::ReserveId" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Queue" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Pipe" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::ForwardPointer" = type { %"class.spvtools::opt::analysis::Type.base", i32, i32, %"class.spvtools::opt::analysis::Pointer"* }
%"class.spvtools::opt::analysis::PipeStorage" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::NamedBarrier" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::AccelerationStructureNV" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::CooperativeMatrixNV" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, i32, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::RayQueryKHR" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::__tree_node.1201" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1202" }
%"struct.std::__1::pair.1202" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"struct.std::__1::__split_buffer.1212" = type { %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"**, %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.992", %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.std::__1::allocator.994"* }
%"class.std::__1::allocator.994" = type { i8 }

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt12LoopUnrollerD0Ev = comdat any

$_ZNK8spvtools3opt12LoopUnroller4nameEv = comdat any

$_ZN8spvtools3opt12LoopUnroller20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE13__move_assignERSH_NS_17integral_constantIbLb1EEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE13__move_assignERSD_NS_17integral_constantIbLb1EEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE13__move_assignERSH_NS_17integral_constantIbLb1EEE = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddBranchEj = comdat any

$_ZN8spvtools3opt11InstructionC2ERKS1_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZN8spvtools3opt18UptrVectorIteratorINS0_10BasicBlockELb0EE12InsertBeforeILb0EEENSt3__19enable_ifIXntT_ES3_E4typeEPNS5_6vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISD_EEEE = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm = comdat any

$_ZN8spvtools10MakeUniqueINS_3opt4LoopEJRS2_EEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEDpOT0_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIiEEPNS0_11InstructionET_b = comdat any

$_ZN8spvtools3opt8analysis4TypeD2Ev = comdat any

$_ZN8spvtools3opt8analysis4TypeD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZNK8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b = comdat any

$_ZNSt3__16vectorINS_4pairIPN8spvtools3opt4LoopENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_9allocatorISA_EEE24__emplace_back_slow_pathIJSA_EEEvDpOT_ = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_ = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt8analysis4TypeE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@__const._ZN8spvtools3opt9LoopUtils11FullyUnrollEv.unroller = private unnamed_addr constant %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl" { %"class.spvtools::opt::IRContext"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::IRContext"*), %"class.spvtools::opt::Function"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Function"*), %"class.std::__1::vector.38" { %"class.std::__1::__vector_base.39" { %"class.std::__1::unique_ptr.40"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.40"*), %"class.std::__1::unique_ptr.40"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.40"*), %"class.std::__1::__compressed_pair.46" { %"struct.std::__1::__compressed_pair_elem.47" { %"class.std::__1::unique_ptr.40"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.40"*) } } } }, %"class.std::__1::vector.976" { %"class.std::__1::__vector_base.977" { %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**), %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**), %"class.std::__1::__compressed_pair.978" { %"struct.std::__1::__compressed_pair_elem.979" { %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**) } } } }, %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState" { %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.std::__1::vector.976" { %"class.std::__1::__vector_base.977" { %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**), %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**), %"class.std::__1::__compressed_pair.978" { %"struct.std::__1::__compressed_pair_elem.979" { %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**) } } } }, %"class.std::__1::vector.976" { %"class.std::__1::__vector_base.977" { %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**), %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**), %"class.std::__1::__compressed_pair.978" { %"struct.std::__1::__compressed_pair_elem.979" { %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**) } } } }, %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.std::__1::unordered_map.328" { %"class.std::__1::__hash_table.329" <{ %"class.std::__1::unique_ptr.330" { %"class.std::__1::__compressed_pair.331" { %"struct.std::__1::__compressed_pair_elem.332" { %"struct.std::__1::__hash_node_base.333"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"**) }, %"struct.std::__1::__compressed_pair_elem.334" { %"class.std::__1::__bucket_list_deallocator.335" { %"class.std::__1::__compressed_pair.336" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.340" { %"struct.std::__1::__compressed_pair_elem.341" { %"struct.std::__1::__hash_node_base.333" { %"struct.std::__1::__hash_node_base.333"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.333"*) } } }, %"class.std::__1::__compressed_pair.345" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.348" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map.249" { %"class.std::__1::__hash_table.250" <{ %"class.std::__1::unique_ptr.251" { %"class.std::__1::__compressed_pair.252" { %"struct.std::__1::__compressed_pair_elem.253" { %"struct.std::__1::__hash_node_base.254"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.254"**) }, %"struct.std::__1::__compressed_pair_elem.255" { %"class.std::__1::__bucket_list_deallocator.256" { %"class.std::__1::__compressed_pair.257" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.261" { %"struct.std::__1::__compressed_pair_elem.262" { %"struct.std::__1::__hash_node_base.254" { %"struct.std::__1::__hash_node_base.254"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base.254"*) } } }, %"class.std::__1::__compressed_pair.266" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.269" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr.65" { %"class.std::__1::__compressed_pair.66" { %"struct.std::__1::__compressed_pair_elem.67" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.68" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.69" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.74" { %"struct.std::__1::__compressed_pair_elem.75" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.79" { %"struct.std::__1::__compressed_pair_elem.70" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.81" { %"struct.std::__1::__compressed_pair_elem.82" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> } }, %"class.std::__1::vector.983" { %"class.std::__1::__vector_base.984" { %"class.spvtools::opt::BasicBlock"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"**), %"class.spvtools::opt::BasicBlock"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"**), %"class.std::__1::__compressed_pair.985" { %"struct.std::__1::__compressed_pair_elem.986" { %"class.spvtools::opt::BasicBlock"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"**) } } } }, %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.std::__1::vector.976" { %"class.std::__1::__vector_base.977" { %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**), %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**), %"class.std::__1::__compressed_pair.978" { %"struct.std::__1::__compressed_pair_elem.979" { %"class.spvtools::opt::Instruction"** inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"**) } } } }, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, align 8
@_ZTVN8spvtools3opt12LoopUnrollerE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::LoopUnroller"*)* @_ZN8spvtools3opt12LoopUnrollerD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::LoopUnroller"*)* @_ZNK8spvtools3opt12LoopUnroller4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::LoopUnroller"*)* @_ZN8spvtools3opt12LoopUnroller20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::LoopUnroller"*)* @_ZN8spvtools3opt12LoopUnroller7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl17KillDebugDeclaresEPNS5_10BasicBlockEE3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@.str.2 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.3 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.4 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS5_11InstructionEE3$_2FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVN8spvtools3opt8analysis7IntegerE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt8analysis4TypeE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl29PartiallyUnrollResidualFactorEPNS5_4LoopEmE3$_0FvPNS5_11InstructionEjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.5 = private unnamed_addr constant [12 x i8] c"loop-unroll\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt9LoopUtils16CanPerformUnrollEv(%"class.spvtools::opt::LoopUtils"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.976", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 2
  %4 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %4, i64 0, i32 1
  %6 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %7 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* %6) #11
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  br i1 %8, label %399, label %9

9:                                                ; preds = %1
  %10 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  %11 = tail call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %10) #11
  %12 = icmp eq %"class.spvtools::opt::BasicBlock"* %11, null
  br i1 %12, label %399, label %13

13:                                               ; preds = %9
  %14 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  %15 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop21FindConditionVariableEPKNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %14, %"class.spvtools::opt::BasicBlock"* nonnull %11) #11
  %16 = icmp eq %"class.spvtools::opt::Instruction"* %15, null
  br i1 %16, label %399, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %15, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 245
  br i1 %20, label %21, label %399

21:                                               ; preds = %17
  %22 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %11, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %24 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8, !noalias !2
  %25 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop22FindNumberOfIterationsEPKNS0_11InstructionES4_PmPlS6_(%"class.spvtools::opt::Loop"* %22, %"class.spvtools::opt::Instruction"* nonnull %15, %"class.spvtools::opt::Instruction"* %24, i64* null, i64* null, i64* null) #11
  br i1 %25, label %26, label %399

26:                                               ; preds = %21
  %27 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %27, i64 0, i32 5
  %29 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %28, align 8
  %30 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %29, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %30, align 8, !noalias !5
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 249
  br i1 %34, label %35, label %399

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 3
  %37 = load i8, i8* %36, align 4, !range !8
  %38 = icmp eq i8 %37, 0
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 4
  %40 = load i8, i8* %39, align 1, !range !8
  %41 = icmp eq i8 %40, 0
  %42 = select i1 %41, i32 1, i32 2
  %43 = xor i1 %41, true
  %44 = zext i1 %43 to i32
  %45 = select i1 %38, i32 %44, i32 %42
  %46 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %31, i32 %45) #11
  %47 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %47, i64 0, i32 1
  %49 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %48, align 8
  %50 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %49, i64 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %51, i64 0, i32 4
  %53 = load i8, i8* %52, align 1, !range !8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %35
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %51, i64 0, i32 3
  %57 = load i8, i8* %56, align 4, !range !8
  %58 = zext i8 %57 to i32
  %59 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %51, i32 %58) #11
  br label %60

60:                                               ; preds = %35, %55
  %61 = phi i32 [ %59, %55 ], [ 0, %35 ]
  %62 = icmp eq i32 %46, %61
  br i1 %62, label %63, label %399

63:                                               ; preds = %60
  %64 = bitcast %"class.std::__1::vector.976"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %2, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #11
  %67 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %67, %"class.std::__1::vector.976"* nonnull dereferenceable(24) %2) #11
  %68 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 0
  %69 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %69, i64 0, i32 11
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 16
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %90

74:                                               ; preds = %63
  %75 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %69, i64 0, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %75, align 8
  %77 = call i8* @_Znwm(i64 400) #12
  %78 = bitcast i8* %77 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %78, %"class.spvtools::opt::Module"* %76) #11
  %79 = ptrtoint i8* %77 to i64
  %80 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %69, i64 0, i32 15
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %81, align 8
  %83 = bitcast %"class.std::__1::unique_ptr.273"* %80 to i64*
  store i64 %79, i64* %83, align 8
  %84 = icmp eq %"class.spvtools::opt::CFG"* %82, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %74
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %82) #11
  %86 = bitcast %"class.spvtools::opt::CFG"* %82 to i8*
  call void @_ZdlPv(i8* %86) #12
  br label %87

87:                                               ; preds = %85, %74
  %88 = load i32, i32* %70, align 8
  %89 = or i32 %88, 16
  store i32 %89, i32* %70, align 8
  br label %90

90:                                               ; preds = %63, %87
  %91 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %69, i64 0, i32 15, i32 0, i32 0, i32 0
  %92 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %91, align 8
  %93 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  %94 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %93, i64 0, i32 3
  %95 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %95, i64 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 4
  %99 = load i8, i8* %98, align 1, !range !8
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %90
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 3
  %103 = load i8, i8* %102, align 4, !range !8
  %104 = zext i8 %103 to i32
  %105 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %97, i32 %104) #11
  br label %106

106:                                              ; preds = %90, %101
  %107 = phi i32 [ %105, %101 ], [ 0, %90 ]
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %92, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %160, label %112

112:                                              ; preds = %106
  %113 = call i64 @llvm.ctpop.i64(i64 %110) #11, !range !9
  %114 = icmp ugt i64 %113, 1
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  %116 = add i64 %110, 4294967295
  %117 = and i64 %116, %108
  br label %122

118:                                              ; preds = %112
  %119 = icmp ugt i64 %110, %108
  br i1 %119, label %122, label %120

120:                                              ; preds = %118
  %121 = urem i64 %108, %110
  br label %122

122:                                              ; preds = %120, %118, %115
  %123 = phi i64 [ %117, %115 ], [ %121, %120 ], [ %108, %118 ]
  %124 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %92, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %125, i64 %123
  %127 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %126, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.309"* %127, null
  br i1 %128, label %160, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %127, i64 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.309"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = add i64 %110, -1
  br label %135

135:                                              ; preds = %156, %133
  %136 = phi %"struct.std::__1::__hash_node_base.309"* [ %131, %133 ], [ %158, %156 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %136, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base.309"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = icmp eq i64 %139, %108
  br i1 %140, label %151, label %141

141:                                              ; preds = %135
  br i1 %114, label %144, label %142

142:                                              ; preds = %141
  %143 = and i64 %139, %134
  br label %148

144:                                              ; preds = %141
  %145 = icmp ult i64 %139, %110
  br i1 %145, label %148, label %146

146:                                              ; preds = %144
  %147 = urem i64 %139, %110
  br label %148

148:                                              ; preds = %146, %144, %142
  %149 = phi i64 [ %143, %142 ], [ %147, %146 ], [ %139, %144 ]
  %150 = icmp eq i64 %149, %123
  br i1 %150, label %156, label %160

151:                                              ; preds = %135
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %136, i64 2
  %153 = bitcast %"struct.std::__1::__hash_node_base.309"* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, %107
  br i1 %155, label %161, label %156

156:                                              ; preds = %151, %148
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %136, i64 0, i32 0
  %158 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %157, align 8
  %159 = icmp eq %"struct.std::__1::__hash_node_base.309"* %158, null
  br i1 %159, label %160, label %135

160:                                              ; preds = %156, %148, %129, %122, %106
  call void @abort() #13
  unreachable

161:                                              ; preds = %151
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %136, i64 3
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %136, i64 4
  %164 = bitcast %"struct.std::__1::__hash_node_base.309"* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"struct.std::__1::__hash_node_base.309"* %162 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = sub i64 %165, %167
  %169 = icmp eq i64 %168, 4
  br i1 %169, label %170, label %390

170:                                              ; preds = %161
  %171 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %68, align 8
  %172 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 11
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, 16
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %192

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 4, i32 0, i32 0, i32 0
  %178 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %177, align 8
  %179 = call i8* @_Znwm(i64 400) #12
  %180 = bitcast i8* %179 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %180, %"class.spvtools::opt::Module"* %178) #11
  %181 = ptrtoint i8* %179 to i64
  %182 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 15
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %182, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %183, align 8
  %185 = bitcast %"class.std::__1::unique_ptr.273"* %182 to i64*
  store i64 %181, i64* %185, align 8
  %186 = icmp eq %"class.spvtools::opt::CFG"* %184, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %176
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %184) #11
  %188 = bitcast %"class.spvtools::opt::CFG"* %184 to i8*
  call void @_ZdlPv(i8* %188) #12
  br label %189

189:                                              ; preds = %187, %176
  %190 = load i32, i32* %172, align 8
  %191 = or i32 %190, 16
  store i32 %191, i32* %172, align 8
  br label %192

192:                                              ; preds = %170, %189
  %193 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 15, i32 0, i32 0, i32 0
  %194 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %193, align 8
  %195 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  %196 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %195, i64 0, i32 2
  %197 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %196, align 8
  %198 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %197, i64 0, i32 1, i32 0, i32 0, i32 0
  %199 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %198, align 8
  %200 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %199, i64 0, i32 4
  %201 = load i8, i8* %200, align 1, !range !8
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %208, label %203

203:                                              ; preds = %192
  %204 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %199, i64 0, i32 3
  %205 = load i8, i8* %204, align 4, !range !8
  %206 = zext i8 %205 to i32
  %207 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %199, i32 %206) #11
  br label %208

208:                                              ; preds = %192, %203
  %209 = phi i32 [ %207, %203 ], [ 0, %192 ]
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %194, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %212 = load i64, i64* %211, align 8
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %262, label %214

214:                                              ; preds = %208
  %215 = call i64 @llvm.ctpop.i64(i64 %212) #11, !range !9
  %216 = icmp ugt i64 %215, 1
  br i1 %216, label %220, label %217

217:                                              ; preds = %214
  %218 = add i64 %212, 4294967295
  %219 = and i64 %218, %210
  br label %224

220:                                              ; preds = %214
  %221 = icmp ugt i64 %212, %210
  br i1 %221, label %224, label %222

222:                                              ; preds = %220
  %223 = urem i64 %210, %212
  br label %224

224:                                              ; preds = %222, %220, %217
  %225 = phi i64 [ %219, %217 ], [ %223, %222 ], [ %210, %220 ]
  %226 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %194, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %226, align 8
  %228 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %227, i64 %225
  %229 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %228, align 8
  %230 = icmp eq %"struct.std::__1::__hash_node_base.309"* %229, null
  br i1 %230, label %262, label %231

231:                                              ; preds = %224
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %229, i64 0, i32 0
  %233 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %232, align 8
  %234 = icmp eq %"struct.std::__1::__hash_node_base.309"* %233, null
  br i1 %234, label %262, label %235

235:                                              ; preds = %231
  %236 = add i64 %212, -1
  br label %237

237:                                              ; preds = %258, %235
  %238 = phi %"struct.std::__1::__hash_node_base.309"* [ %233, %235 ], [ %260, %258 ]
  %239 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %238, i64 1
  %240 = bitcast %"struct.std::__1::__hash_node_base.309"* %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = icmp eq i64 %241, %210
  br i1 %242, label %253, label %243

243:                                              ; preds = %237
  br i1 %216, label %246, label %244

244:                                              ; preds = %243
  %245 = and i64 %241, %236
  br label %250

246:                                              ; preds = %243
  %247 = icmp ult i64 %241, %212
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = urem i64 %241, %212
  br label %250

250:                                              ; preds = %248, %246, %244
  %251 = phi i64 [ %245, %244 ], [ %249, %248 ], [ %241, %246 ]
  %252 = icmp eq i64 %251, %225
  br i1 %252, label %258, label %262

253:                                              ; preds = %237
  %254 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %238, i64 2
  %255 = bitcast %"struct.std::__1::__hash_node_base.309"* %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %256, %209
  br i1 %257, label %263, label %258

258:                                              ; preds = %253, %250
  %259 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %238, i64 0, i32 0
  %260 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %259, align 8
  %261 = icmp eq %"struct.std::__1::__hash_node_base.309"* %260, null
  br i1 %261, label %262, label %237

262:                                              ; preds = %258, %250, %231, %224, %208
  call void @abort() #13
  unreachable

263:                                              ; preds = %253
  %264 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %238, i64 3
  %265 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %238, i64 4
  %266 = bitcast %"struct.std::__1::__hash_node_base.309"* %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"struct.std::__1::__hash_node_base.309"* %264 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = sub i64 %267, %269
  %271 = icmp eq i64 %270, 4
  br i1 %271, label %272, label %390

272:                                              ; preds = %263
  %273 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  %274 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %273, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %275 = bitcast %"struct.std::__1::__hash_node_base.922"** %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %374, label %278

278:                                              ; preds = %272, %368
  %279 = phi i64 [ %370, %368 ], [ %276, %272 ]
  %280 = inttoptr i64 %279 to %"struct.std::__1::__hash_node.1155"*
  %281 = getelementptr inbounds %"struct.std::__1::__hash_node.1155", %"struct.std::__1::__hash_node.1155"* %280, i64 0, i32 2
  %282 = load i32, i32* %281, align 4
  %283 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %68, align 8
  %284 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %283, i64 0, i32 11
  %285 = load i32, i32* %284, align 8
  %286 = and i32 %285, 16
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %304

288:                                              ; preds = %278
  %289 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %283, i64 0, i32 4, i32 0, i32 0, i32 0
  %290 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %289, align 8
  %291 = call i8* @_Znwm(i64 400) #12
  %292 = bitcast i8* %291 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %292, %"class.spvtools::opt::Module"* %290) #11
  %293 = ptrtoint i8* %291 to i64
  %294 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %283, i64 0, i32 15
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %294, i64 0, i32 0, i32 0, i32 0
  %296 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %295, align 8
  %297 = bitcast %"class.std::__1::unique_ptr.273"* %294 to i64*
  store i64 %293, i64* %297, align 8
  %298 = icmp eq %"class.spvtools::opt::CFG"* %296, null
  br i1 %298, label %301, label %299

299:                                              ; preds = %288
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %296) #11
  %300 = bitcast %"class.spvtools::opt::CFG"* %296 to i8*
  call void @_ZdlPv(i8* %300) #12
  br label %301

301:                                              ; preds = %299, %288
  %302 = load i32, i32* %284, align 8
  %303 = or i32 %302, 16
  store i32 %303, i32* %284, align 8
  br label %304

304:                                              ; preds = %278, %301
  %305 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %283, i64 0, i32 15, i32 0, i32 0, i32 0
  %306 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %305, align 8
  %307 = zext i32 %282 to i64
  %308 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %306, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %309 = load i64, i64* %308, align 8
  %310 = icmp eq i64 %309, 0
  br i1 %310, label %359, label %311

311:                                              ; preds = %304
  %312 = call i64 @llvm.ctpop.i64(i64 %309) #11, !range !9
  %313 = icmp ugt i64 %312, 1
  br i1 %313, label %317, label %314

314:                                              ; preds = %311
  %315 = add i64 %309, 4294967295
  %316 = and i64 %315, %307
  br label %321

317:                                              ; preds = %311
  %318 = icmp ugt i64 %309, %307
  br i1 %318, label %321, label %319

319:                                              ; preds = %317
  %320 = urem i64 %307, %309
  br label %321

321:                                              ; preds = %319, %317, %314
  %322 = phi i64 [ %316, %314 ], [ %320, %319 ], [ %307, %317 ]
  %323 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %306, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %323, align 8
  %325 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %324, i64 %322
  %326 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %325, align 8
  %327 = icmp eq %"struct.std::__1::__hash_node_base.333"* %326, null
  br i1 %327, label %359, label %328

328:                                              ; preds = %321
  %329 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %326, i64 0, i32 0
  %330 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %329, align 8
  %331 = icmp eq %"struct.std::__1::__hash_node_base.333"* %330, null
  br i1 %331, label %359, label %332

332:                                              ; preds = %328
  %333 = add i64 %309, -1
  br label %334

334:                                              ; preds = %355, %332
  %335 = phi %"struct.std::__1::__hash_node_base.333"* [ %330, %332 ], [ %357, %355 ]
  %336 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %335, i64 1
  %337 = bitcast %"struct.std::__1::__hash_node_base.333"* %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = icmp eq i64 %338, %307
  br i1 %339, label %350, label %340

340:                                              ; preds = %334
  br i1 %313, label %343, label %341

341:                                              ; preds = %340
  %342 = and i64 %338, %333
  br label %347

343:                                              ; preds = %340
  %344 = icmp ult i64 %338, %309
  br i1 %344, label %347, label %345

345:                                              ; preds = %343
  %346 = urem i64 %338, %309
  br label %347

347:                                              ; preds = %345, %343, %341
  %348 = phi i64 [ %342, %341 ], [ %346, %345 ], [ %338, %343 ]
  %349 = icmp eq i64 %348, %322
  br i1 %349, label %355, label %359

350:                                              ; preds = %334
  %351 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %335, i64 2
  %352 = bitcast %"struct.std::__1::__hash_node_base.333"* %351 to i32*
  %353 = load i32, i32* %352, align 4
  %354 = icmp eq i32 %353, %282
  br i1 %354, label %360, label %355

355:                                              ; preds = %350, %347
  %356 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %335, i64 0, i32 0
  %357 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %356, align 8
  %358 = icmp eq %"struct.std::__1::__hash_node_base.333"* %357, null
  br i1 %358, label %359, label %334

359:                                              ; preds = %328, %321, %304, %355, %347
  call void @abort() #13
  unreachable

360:                                              ; preds = %350
  %361 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %335, i64 3
  %362 = bitcast %"struct.std::__1::__hash_node_base.333"* %361 to %"class.spvtools::opt::BasicBlock"**
  %363 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %362, align 8
  %364 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %363, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %365 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %364, align 8, !noalias !10
  %366 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %365, i64 0, i32 2
  %367 = load i32, i32* %366, align 8
  switch i32 %367, label %368 [
    i32 252, label %390
    i32 253, label %390
    i32 254, label %390
    i32 4416, label %390
  ]

368:                                              ; preds = %360
  %369 = inttoptr i64 %279 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %278

372:                                              ; preds = %368
  %373 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, align 8
  br label %374

374:                                              ; preds = %372, %272
  %375 = phi %"class.spvtools::opt::Loop"* [ %373, %372 ], [ %273, %272 ]
  %376 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %375, i64 0, i32 7, i32 0, i32 0
  %377 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %376, align 8
  %378 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %375, i64 0, i32 7, i32 0, i32 1
  %379 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %378, align 8
  %380 = icmp eq %"class.spvtools::opt::Loop"** %377, %379
  br i1 %380, label %390, label %383

381:                                              ; preds = %383
  %382 = icmp eq %"class.spvtools::opt::Loop"** %389, %379
  br i1 %382, label %390, label %383

383:                                              ; preds = %374, %381
  %384 = phi %"class.spvtools::opt::Loop"** [ %389, %381 ], [ %377, %374 ]
  %385 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %384, align 8
  %386 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %385, i64 0, i32 9
  %387 = load i8, i8* %386, align 8, !range !8
  %388 = icmp eq i8 %387, 0
  %389 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %384, i64 1
  br i1 %388, label %390, label %381

390:                                              ; preds = %360, %360, %360, %360, %383, %381, %374, %263, %161
  %391 = phi i1 [ false, %161 ], [ false, %263 ], [ true, %374 ], [ true, %381 ], [ false, %383 ], [ false, %360 ], [ false, %360 ], [ false, %360 ], [ false, %360 ]
  %392 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %65, align 8
  %393 = icmp eq %"class.spvtools::opt::Instruction"** %392, null
  br i1 %393, label %398, label %394

394:                                              ; preds = %390
  %395 = ptrtoint %"class.spvtools::opt::Instruction"** %392 to i64
  %396 = bitcast %"class.spvtools::opt::Instruction"*** %66 to i64*
  store i64 %395, i64* %396, align 8
  %397 = bitcast %"class.spvtools::opt::Instruction"** %392 to i8*
  call void @_ZdlPv(i8* %397) #12
  br label %398

398:                                              ; preds = %390, %394
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  br label %399

399:                                              ; preds = %26, %9, %398, %60, %21, %13, %17, %1
  %400 = phi i1 [ false, %1 ], [ false, %9 ], [ false, %17 ], [ false, %13 ], [ false, %21 ], [ %391, %398 ], [ false, %60 ], [ false, %26 ]
  ret i1 %400
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #1

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop21FindConditionVariableEPKNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8spvtools3opt4Loop22FindNumberOfIterationsEPKNS0_11InstructionES4_PmPlS6_(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i64*, i64*, i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"*, %"class.std::__1::vector.976"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt9LoopUtils15PartiallyUnrollEm(%"class.spvtools::opt::LoopUtils"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::pair", align 8
  %4 = alloca %"class.spvtools::opt::UptrVectorIterator.1162", align 8
  %5 = alloca %"class.spvtools::opt::UptrVectorIterator.1162", align 8
  %6 = alloca %"class.std::__1::tuple.1084", align 8
  %7 = alloca %"class.std::__1::tuple.1074", align 1
  %8 = alloca %"class.std::__1::function.1116", align 8
  %9 = alloca %"class.std::__1::function.1110", align 8
  %10 = alloca %"class.std::__1::vector.983", align 16
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca %"class.std::__1::unique_ptr.40", align 8
  %14 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %15 = alloca %"class.std::__1::unique_ptr.40", align 8
  %16 = alloca %"class.spvtools::utils::SmallVector", align 8
  %17 = alloca %"class.std::__1::vector.976", align 8
  %18 = alloca %"class.std::__1::vector.976", align 8
  %19 = alloca %"class.spvtools::utils::SmallVector", align 8
  %20 = alloca %"class.spvtools::utils::SmallVector", align 8
  %21 = alloca %"class.std::__1::function.1164", align 8
  %22 = alloca %"class.spvtools::opt::UptrVectorIterator.1162", align 8
  %23 = alloca %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", align 8
  %24 = icmp eq i64 %1, 1
  br i1 %24, label %1147, label %25

25:                                               ; preds = %2
  %26 = tail call zeroext i1 @_ZN8spvtools3opt9LoopUtils16CanPerformUnrollEv(%"class.spvtools::opt::LoopUtils"* %0)
  br i1 %26, label %27, label %1147

27:                                               ; preds = %25
  %28 = bitcast %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %28) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 bitcast (%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* @__const._ZN8spvtools3opt9LoopUtils11FullyUnrollEv.unroller to i8*), i64 384, i1 false)
  %29 = bitcast %"class.spvtools::opt::LoopUtils"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 2
  %32 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %32, i64 0, i32 1
  %34 = bitcast %"class.spvtools::opt::BasicBlock"** %33 to i64**
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 0
  %38 = bitcast %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23 to i64*
  store i64 %30, i64* %38, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 1
  %40 = bitcast %"class.spvtools::opt::Function"** %39 to i64*
  store i64 %36, i64* %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 2
  %42 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 10
  %43 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 10, i32 0, i32 3
  %44 = bitcast %"class.std::__1::__compressed_pair.348"* %43 to i32*
  %45 = bitcast %"class.std::__1::unordered_map.328"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 32, i1 false) #11
  %46 = bitcast %"class.std::__1::vector.38"* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 152, i1 false) #11
  store i32 1065353216, i32* %44, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 11
  %48 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 11, i32 0, i32 3
  %49 = bitcast %"class.std::__1::__compressed_pair.269"* %48 to i32*
  %50 = bitcast %"class.std::__1::unordered_map.249"* %47 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 12
  %52 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 12, i32 0, i32 3
  %53 = bitcast %"class.std::__1::__compressed_pair.81"* %52 to i32*
  %54 = bitcast %"class.std::__1::unordered_map"* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 5
  %56 = bitcast %"class.std::__1::vector.983"* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 88, i1 false) #11
  %57 = tail call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %32) #11
  %58 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 6
  store %"class.spvtools::opt::BasicBlock"* %57, %"class.spvtools::opt::BasicBlock"** %58, align 8
  %59 = icmp eq %"class.spvtools::opt::BasicBlock"* %57, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %27
  %61 = bitcast %"class.spvtools::opt::BasicBlock"** %58 to i64*
  store i64 0, i64* %61, align 8
  br label %62

62:                                               ; preds = %27, %60
  %63 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop21FindConditionVariableEPKNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %32, %"class.spvtools::opt::BasicBlock"* %57) #11
  %64 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 7
  store %"class.spvtools::opt::Instruction"* %63, %"class.spvtools::opt::Instruction"** %64, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %57, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %66 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8, !noalias !13
  %67 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 9
  %68 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 10
  %69 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 11
  %70 = call zeroext i1 @_ZNK8spvtools3opt4Loop22FindNumberOfIterationsEPKNS0_11InstructionES4_PmPlS6_(%"class.spvtools::opt::Loop"* %32, %"class.spvtools::opt::Instruction"* %63, %"class.spvtools::opt::Instruction"* %66, i64* %67, i64* %68, i64* %69) #11
  %71 = bitcast %"class.std::__1::vector.983"* %55 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 5, i32 0, i32 1
  %74 = bitcast %"class.spvtools::opt::BasicBlock"*** %73 to i64*
  store i64 %72, i64* %74, align 8
  call void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"* %32, %"class.std::__1::vector.983"* %55, i1 zeroext false, i1 zeroext false) #11
  %75 = load i64, i64* %67, align 8
  %76 = icmp ugt i64 %75, %1
  br i1 %76, label %79, label %77

77:                                               ; preds = %62
  %78 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %31, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl11FullyUnrollEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23, %"class.spvtools::opt::Loop"* %78)
  br label %1146

79:                                               ; preds = %62
  %80 = urem i64 %75, %1
  %81 = icmp eq i64 %80, 0
  %82 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %31, align 8
  br i1 %81, label %1078, label %83

83:                                               ; preds = %79
  %84 = call i8* @_Znwm(i64 112) #12
  %85 = bitcast i8* %84 to %"class.spvtools::opt::Instruction"*
  %86 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %86, i64 0, i32 4, i32 0, i32 0, i32 0
  %88 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %87, align 8
  %89 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %88) #11
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %86, i64 0, i32 5, i32 0, i32 2
  %93 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %93, i64 0, i32 2
  %95 = load i8, i8* %94, align 8, !range !8
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %103

97:                                               ; preds = %91
  %98 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %98, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #11
  %99 = getelementptr inbounds i8, i8* %98, i64 37
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %86, i64 0, i32 5, i32 0, i32 1, i32 0
  %101 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %100, align 8
  %102 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %86, i64 0, i32 5, i32 0, i32 0
  call void %101(%"union.std::__1::__function::__policy_storage"* %102, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.4, i8* nonnull %98) #11
  call void @_ZdlPv(i8* nonnull %98) #12
  br label %103

103:                                              ; preds = %97, %91, %83
  %104 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 24, i1 false) #11
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %85, %"class.spvtools::opt::IRContext"* %86, i32 248, i32 0, i32 %89, %"class.std::__1::vector"* nonnull dereferenceable(24) %12) #11
  %105 = ptrtoint i8* %84 to i64
  %106 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %107 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %106, align 8
  %108 = icmp eq %"struct.spvtools::opt::Operand"* %107, null
  br i1 %108, label %139, label %109

109:                                              ; preds = %103
  %110 = bitcast %"struct.spvtools::opt::Operand"* %107 to i8*
  %111 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %112 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %111, align 8
  %113 = icmp eq %"struct.spvtools::opt::Operand"* %112, %107
  br i1 %113, label %137, label %114

114:                                              ; preds = %109, %132
  %115 = phi %"struct.spvtools::opt::Operand"* [ %116, %132 ], [ %112, %109 ]
  %116 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 -1
  %117 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %118 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %119 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %118, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %118, align 8
  %120 = icmp eq %"class.std::__1::vector.3"* %119, null
  br i1 %120, label %132, label %121

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %119, i64 0, i32 0, i32 0
  %123 = load i32*, i32** %122, align 8
  %124 = icmp eq i32* %123, null
  br i1 %124, label %130, label %125

125:                                              ; preds = %121
  %126 = ptrtoint i32* %123 to i64
  %127 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %119, i64 0, i32 0, i32 1
  %128 = bitcast i32** %127 to i64*
  store i64 %126, i64* %128, align 8
  %129 = bitcast i32* %123 to i8*
  call void @_ZdlPv(i8* %129) #12
  br label %130

130:                                              ; preds = %125, %121
  %131 = bitcast %"class.std::__1::vector.3"* %119 to i8*
  call void @_ZdlPv(i8* %131) #12
  br label %132

132:                                              ; preds = %130, %114
  %133 = icmp eq %"struct.spvtools::opt::Operand"* %116, %107
  br i1 %133, label %134, label %114

134:                                              ; preds = %132
  %135 = bitcast %"class.std::__1::vector"* %12 to i8**
  %136 = load i8*, i8** %135, align 8
  br label %137

137:                                              ; preds = %134, %109
  %138 = phi i8* [ %136, %134 ], [ %110, %109 ]
  store %"struct.spvtools::opt::Operand"* %107, %"struct.spvtools::opt::Operand"** %111, align 8
  call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %137, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #11
  %140 = bitcast %"class.std::__1::unique_ptr.40"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #11
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 0, i32 0, i32 0, i32 0
  %142 = call i8* @_Znwm(i64 136) #12
  %143 = bitcast i8* %142 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %143, align 8
  %144 = getelementptr inbounds i8, i8* %142, i64 8
  %145 = bitcast i8* %144 to i64*
  store i64 %105, i64* %145, align 8
  %146 = getelementptr inbounds i8, i8* %142, i64 16
  %147 = bitcast i8* %146 to i32 (...)***
  %148 = getelementptr inbounds i8, i8* %142, i64 24
  %149 = bitcast i8* %148 to i32 (...)***
  %150 = getelementptr inbounds i8, i8* %142, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %149, align 8
  %151 = getelementptr inbounds i8, i8* %142, i64 56
  %152 = getelementptr inbounds i8, i8* %142, i64 72
  %153 = bitcast i8* %152 to i32*
  store i32 0, i32* %153, align 8
  %154 = getelementptr inbounds i8, i8* %142, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %151, i8 0, i64 14, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 56, i1 false) #11
  %155 = bitcast i8* %150 to i8**
  store i8* %148, i8** %155, align 8
  %156 = getelementptr inbounds i8, i8* %142, i64 40
  %157 = bitcast i8* %156 to i8**
  store i8* %148, i8** %157, align 8
  %158 = getelementptr inbounds i8, i8* %142, i64 48
  store i8 1, i8* %158, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %159 = ptrtoint i8* %142 to i64
  %160 = bitcast %"class.std::__1::unique_ptr.40"* %13 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds i8, i8* %84, i64 45
  %162 = load i8, i8* %161, align 1, !range !8
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %169, label %164

164:                                              ; preds = %139
  %165 = getelementptr inbounds i8, i8* %84, i64 44
  %166 = load i8, i8* %165, align 4, !range !8
  %167 = zext i8 %166 to i32
  %168 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %85, i32 %167) #11
  br label %169

169:                                              ; preds = %164, %139
  %170 = phi i32 [ %168, %164 ], [ 0, %139 ]
  %171 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 2, i32 0, i32 1
  %172 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %171, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %174 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %173, align 8
  %175 = icmp ult %"class.std::__1::unique_ptr.40"* %172, %174
  br i1 %175, label %176, label %182

176:                                              ; preds = %169
  %177 = load i64, i64* %160, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %141, align 8
  %178 = bitcast %"class.std::__1::unique_ptr.40"* %172 to i64*
  store i64 %177, i64* %178, align 8
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %172, i64 1
  %180 = ptrtoint %"class.std::__1::unique_ptr.40"* %179 to i64
  %181 = bitcast %"class.std::__1::unique_ptr.40"** %171 to i64*
  store i64 %180, i64* %181, align 8
  br label %183

182:                                              ; preds = %169
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %41, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %13) #11
  br label %183

183:                                              ; preds = %182, %176
  %184 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %41, i64 0, i32 0, i32 0
  %185 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %184, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %185, i64 0, i32 0, i32 0, i32 0
  %187 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %186, align 8
  %188 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %58, align 8
  %189 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %188, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %190 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %189, align 8, !noalias !16
  %191 = call %"class.spvtools::opt::Loop"* @_ZN8spvtools10MakeUniqueINS_3opt4LoopEJRS2_EEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEDpOT0_(%"class.spvtools::opt::Loop"* dereferenceable(128) %82) #11
  %192 = ptrtoint %"class.spvtools::opt::Loop"* %191 to i64
  %193 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %191, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %194 = load i64, i64* %193, align 8
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %246, label %196

196:                                              ; preds = %183
  %197 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %191, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %198 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %197, align 8
  %199 = icmp eq %"struct.std::__1::__hash_node_base.922"* %198, null
  br i1 %199, label %206, label %200

200:                                              ; preds = %196, %200
  %201 = phi %"struct.std::__1::__hash_node_base.922"* [ %203, %200 ], [ %198, %196 ]
  %202 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %201, i64 0, i32 0
  %203 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %202, align 8
  %204 = bitcast %"struct.std::__1::__hash_node_base.922"* %201 to i8*
  call void @_ZdlPv(i8* %204) #12
  %205 = icmp eq %"struct.std::__1::__hash_node_base.922"* %203, null
  br i1 %205, label %206, label %200

206:                                              ; preds = %200, %196
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %197, align 8
  %207 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %191, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %208 = load i64, i64* %207, align 8
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %228, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %191, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = add i64 %208, -1
  %213 = and i64 %208, 3
  %214 = icmp ult i64 %212, 3
  br i1 %214, label %217, label %215

215:                                              ; preds = %210
  %216 = sub i64 %208, %213
  br label %229

217:                                              ; preds = %229, %210
  %218 = phi i64 [ 0, %210 ], [ %243, %229 ]
  %219 = icmp eq i64 %213, 0
  br i1 %219, label %228, label %220

220:                                              ; preds = %217, %220
  %221 = phi i64 [ %225, %220 ], [ %218, %217 ]
  %222 = phi i64 [ %226, %220 ], [ %213, %217 ]
  %223 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %211, align 8
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %223, i64 %221
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %224, align 8
  %225 = add nuw i64 %221, 1
  %226 = add i64 %222, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %220, !llvm.loop !19

228:                                              ; preds = %217, %220, %206
  store i64 0, i64* %193, align 8
  br label %246

229:                                              ; preds = %229, %215
  %230 = phi i64 [ 0, %215 ], [ %243, %229 ]
  %231 = phi i64 [ %216, %215 ], [ %244, %229 ]
  %232 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %211, align 8
  %233 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %232, i64 %230
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %233, align 8
  %234 = or i64 %230, 1
  %235 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %211, align 8
  %236 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %235, i64 %234
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %236, align 8
  %237 = or i64 %230, 2
  %238 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %211, align 8
  %239 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %238, i64 %237
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %239, align 8
  %240 = or i64 %230, 3
  %241 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %211, align 8
  %242 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %241, i64 %240
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %242, align 8
  %243 = add nuw i64 %230, 4
  %244 = add i64 %231, -4
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %217, label %229

246:                                              ; preds = %228, %183
  %247 = bitcast %"class.std::__1::vector.983"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %247) #11
  %248 = getelementptr inbounds %"class.std::__1::vector.983", %"class.std::__1::vector.983"* %10, i64 0, i32 0, i32 0
  %249 = getelementptr inbounds %"class.std::__1::vector.983", %"class.std::__1::vector.983"* %10, i64 0, i32 0, i32 1
  %250 = getelementptr inbounds %"class.std::__1::vector.983", %"class.std::__1::vector.983"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %247, i8 0, i64 24, i1 false) #11
  %251 = getelementptr inbounds %"class.std::__1::vector.983", %"class.std::__1::vector.983"* %55, i64 0, i32 0, i32 0
  %252 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %251, align 8
  %253 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %73, align 8
  %254 = icmp eq %"class.spvtools::opt::BasicBlock"** %252, %253
  br i1 %254, label %259, label %255

255:                                              ; preds = %246
  %256 = bitcast %"class.spvtools::opt::BasicBlock"*** %249 to i64*
  %257 = bitcast %"class.std::__1::vector.983"* %10 to i64*
  %258 = bitcast %"class.spvtools::opt::BasicBlock"*** %250 to i64*
  br label %308

259:                                              ; preds = %372, %246
  %260 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %82, i64 0, i32 3
  %261 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %260, align 8
  %262 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %263 = call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt10BasicBlock5CloneEPNS0_9IRContextE(%"class.spvtools::opt::BasicBlock"* %261, %"class.spvtools::opt::IRContext"* %262) #11
  %264 = bitcast %"class.spvtools::opt::BasicBlock"** %260 to i64**
  %265 = load i64*, i64** %264, align 8
  %266 = load i64, i64* %265, align 8
  %267 = bitcast %"class.spvtools::opt::BasicBlock"* %263 to i64*
  store i64 %266, i64* %267, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl18AssignNewResultIdsEPNS0_10BasicBlockE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23, %"class.spvtools::opt::BasicBlock"* %263) #11
  %268 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %268) #11
  %269 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %260, align 8
  %270 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %269, i64 0, i32 1, i32 0, i32 0, i32 0
  %271 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %270, align 8
  %272 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %271, i64 0, i32 4
  %273 = load i8, i8* %272, align 1, !range !8
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %280, label %275

275:                                              ; preds = %259
  %276 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %271, i64 0, i32 3
  %277 = load i8, i8* %276, align 4, !range !8
  %278 = zext i8 %277 to i32
  %279 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %271, i32 %278) #11
  br label %280

280:                                              ; preds = %275, %259
  %281 = phi i32 [ %279, %275 ], [ 0, %259 ]
  store i32 %281, i32* %11, align 4
  %282 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 10, i32 0
  %283 = bitcast %"class.std::__1::tuple.1084"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %283) #11
  %284 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %284, align 8
  %285 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %285) #11
  %286 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %282, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1084"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %7) #11
  %287 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %286, 0
  %288 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %287, i64 3
  %289 = bitcast %"struct.std::__1::__hash_node_base.333"* %288 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %285) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %283) #11
  store %"class.spvtools::opt::BasicBlock"* %263, %"class.spvtools::opt::BasicBlock"** %289, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %268) #11
  %290 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %291 = bitcast %"struct.std::__1::__hash_node_base.333"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %379, label %294

294:                                              ; preds = %280
  %295 = bitcast %"class.std::__1::function.1110"* %9 to i8*
  %296 = ptrtoint %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23 to i64
  %297 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %9, i64 0, i32 0, i32 1, i32 0
  %298 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %9, i64 0, i32 0, i32 2
  %299 = bitcast %"class.std::__1::function.1110"* %9 to i64*
  %300 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %9, i64 0, i32 0, i32 0, i32 0
  %301 = bitcast %"class.std::__1::function.1116"* %8 to i8*
  %302 = ptrtoint %"class.std::__1::function.1110"* %9 to i64
  %303 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %8, i64 0, i32 0, i32 1, i32 0
  %304 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %8, i64 0, i32 0, i32 2
  %305 = bitcast %"class.std::__1::function.1116"* %8 to i64*
  %306 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %8, i64 0, i32 0, i32 0
  %307 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %8, i64 0, i32 0, i32 0, i32 0
  br label %408

308:                                              ; preds = %377, %255
  %309 = phi i64 [ 0, %255 ], [ %373, %377 ]
  %310 = phi %"class.spvtools::opt::BasicBlock"** [ null, %255 ], [ %378, %377 ]
  %311 = phi %"class.spvtools::opt::BasicBlock"** [ null, %255 ], [ %374, %377 ]
  %312 = phi %"class.spvtools::opt::BasicBlock"** [ %252, %255 ], [ %375, %377 ]
  %313 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %312, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl14CopyBasicBlockEPNS0_4LoopEPKNS0_10BasicBlockEb(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23, %"class.spvtools::opt::Loop"* %82, %"class.spvtools::opt::BasicBlock"* %313, i1 zeroext true) #11
  %314 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %171, align 8
  %315 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 -1, i32 0, i32 0, i32 0
  %316 = bitcast %"class.spvtools::opt::BasicBlock"** %315 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = icmp ult %"class.spvtools::opt::BasicBlock"** %311, %310
  %319 = ptrtoint %"class.spvtools::opt::BasicBlock"** %310 to i64
  br i1 %318, label %320, label %324

320:                                              ; preds = %308
  %321 = bitcast %"class.spvtools::opt::BasicBlock"** %311 to i64*
  store i64 %317, i64* %321, align 8
  %322 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %311, i64 1
  %323 = ptrtoint %"class.spvtools::opt::BasicBlock"** %322 to i64
  store i64 %323, i64* %256, align 8
  br label %372

324:                                              ; preds = %308
  %325 = ptrtoint %"class.spvtools::opt::BasicBlock"** %311 to i64
  %326 = load i64, i64* %257, align 16
  %327 = sub i64 %325, %326
  %328 = ashr exact i64 %327, 3
  %329 = add nsw i64 %328, 1
  %330 = icmp ugt i64 %329, 2305843009213693951
  br i1 %330, label %331, label %333

331:                                              ; preds = %324
  %332 = bitcast %"class.std::__1::vector.983"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %332) #13
  unreachable

333:                                              ; preds = %324
  %334 = sub i64 %319, %326
  %335 = ashr exact i64 %334, 3
  %336 = icmp ult i64 %335, 1152921504606846975
  br i1 %336, label %337, label %345

337:                                              ; preds = %333
  %338 = ashr exact i64 %334, 2
  %339 = icmp ult i64 %338, %329
  %340 = select i1 %339, i64 %329, i64 %338
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %350, label %342

342:                                              ; preds = %337
  %343 = icmp ugt i64 %340, 2305843009213693951
  br i1 %343, label %344, label %345

344:                                              ; preds = %342
  call void @abort() #13
  unreachable

345:                                              ; preds = %342, %333
  %346 = phi i64 [ %340, %342 ], [ 2305843009213693951, %333 ]
  %347 = shl i64 %346, 3
  %348 = call i8* @_Znwm(i64 %347) #12
  %349 = bitcast i8* %348 to %"class.spvtools::opt::BasicBlock"**
  br label %350

350:                                              ; preds = %345, %337
  %351 = phi i64 [ %346, %345 ], [ 0, %337 ]
  %352 = phi %"class.spvtools::opt::BasicBlock"** [ %349, %345 ], [ null, %337 ]
  %353 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %352, i64 %328
  %354 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %352, i64 %351
  %355 = ptrtoint %"class.spvtools::opt::BasicBlock"** %354 to i64
  %356 = bitcast %"class.spvtools::opt::BasicBlock"** %353 to i64*
  store i64 %317, i64* %356, align 8
  %357 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %353, i64 1
  %358 = ptrtoint %"class.spvtools::opt::BasicBlock"** %357 to i64
  %359 = sub i64 %309, %326
  %360 = ashr exact i64 %359, 3
  %361 = sub nsw i64 0, %360
  %362 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %353, i64 %361
  %363 = ptrtoint %"class.spvtools::opt::BasicBlock"** %362 to i64
  %364 = icmp sgt i64 %359, 0
  br i1 %364, label %365, label %368

365:                                              ; preds = %350
  %366 = bitcast %"class.spvtools::opt::BasicBlock"** %362 to i8*
  %367 = inttoptr i64 %326 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %366, i8* align 8 %367, i64 %359, i1 false) #11
  br label %368

368:                                              ; preds = %365, %350
  store i64 %363, i64* %257, align 16
  store i64 %358, i64* %256, align 8
  store i64 %355, i64* %258, align 16
  %369 = icmp eq i64 %326, 0
  br i1 %369, label %372, label %370

370:                                              ; preds = %368
  %371 = inttoptr i64 %326 to i8*
  call void @_ZdlPv(i8* %371) #12
  br label %372

372:                                              ; preds = %370, %368, %320
  %373 = phi i64 [ %323, %320 ], [ %358, %368 ], [ %358, %370 ]
  %374 = phi %"class.spvtools::opt::BasicBlock"** [ %322, %320 ], [ %357, %368 ], [ %357, %370 ]
  %375 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %312, i64 1
  %376 = icmp eq %"class.spvtools::opt::BasicBlock"** %375, %253
  br i1 %376, label %259, label %377

377:                                              ; preds = %372
  %378 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %250, align 16
  br label %308

379:                                              ; preds = %469, %280
  %380 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %251, align 8
  %381 = icmp eq %"class.spvtools::opt::BasicBlock"** %380, null
  br i1 %381, label %385, label %382

382:                                              ; preds = %379
  %383 = ptrtoint %"class.spvtools::opt::BasicBlock"** %380 to i64
  store i64 %383, i64* %74, align 8
  %384 = bitcast %"class.spvtools::opt::BasicBlock"** %380 to i8*
  call void @_ZdlPv(i8* %384) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #11
  br label %385

385:                                              ; preds = %379, %382
  %386 = bitcast %"class.std::__1::vector.983"* %10 to <2 x i64>*
  %387 = load <2 x i64>, <2 x i64>* %386, align 16
  %388 = bitcast %"class.std::__1::vector.983"* %55 to <2 x i64>*
  store <2 x i64> %387, <2 x i64>* %388, align 8
  %389 = bitcast %"class.spvtools::opt::BasicBlock"*** %250 to i64*
  %390 = load i64, i64* %389, align 16
  %391 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %392 = bitcast %"class.spvtools::opt::BasicBlock"*** %391 to i64*
  store i64 %390, i64* %392, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %247, i8 0, i64 24, i1 false) #11
  call fastcc void @_ZNK8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl15AddBlocksToLoopEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23, %"class.spvtools::opt::Loop"* %191) #11
  %393 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 8
  %394 = bitcast %"class.spvtools::opt::BasicBlock"** %393 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %191, i64 0, i32 1
  %397 = bitcast %"class.spvtools::opt::BasicBlock"** %396 to i64*
  store i64 %395, i64* %397, align 8
  %398 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 6
  %399 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %398, align 8
  call void @_ZN8spvtools3opt4Loop16SetContinueBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %191, %"class.spvtools::opt::BasicBlock"* %399) #11
  %400 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 9
  %401 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %400, align 8
  call void @_ZN8spvtools3opt4Loop13SetLatchBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %191, %"class.spvtools::opt::BasicBlock"* %401) #11
  call void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %191, %"class.spvtools::opt::BasicBlock"* %263) #11
  %402 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %248, align 16
  %403 = icmp eq %"class.spvtools::opt::BasicBlock"** %402, null
  br i1 %403, label %473, label %404

404:                                              ; preds = %385
  %405 = bitcast %"class.spvtools::opt::BasicBlock"*** %249 to i64*
  %406 = ptrtoint %"class.spvtools::opt::BasicBlock"** %402 to i64
  store i64 %406, i64* %405, align 8
  %407 = bitcast %"class.spvtools::opt::BasicBlock"** %402 to i8*
  call void @_ZdlPv(i8* %407) #12
  br label %473

408:                                              ; preds = %469, %294
  %409 = phi i64 [ %292, %294 ], [ %471, %469 ]
  %410 = inttoptr i64 %409 to %"struct.std::__1::__hash_node"*
  %411 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %410, i64 0, i32 2, i32 0, i32 1
  %412 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %411, align 8
  %413 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %412, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %414 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %412, i64 0, i32 2, i32 0, i32 1
  %415 = bitcast %"class.spvtools::opt::Instruction"** %413 to i64*
  %416 = load i64, i64* %415, align 8
  %417 = inttoptr i64 %416 to %"class.spvtools::opt::Instruction"*
  %418 = icmp eq %"class.spvtools::opt::Instruction"* %414, %417
  br i1 %418, label %469, label %419

419:                                              ; preds = %408, %461
  %420 = phi %"class.spvtools::opt::Instruction"* [ %467, %461 ], [ %417, %408 ]
  %421 = phi i64 [ %466, %461 ], [ %416, %408 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %295) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS8_11InstructionEE3$_2S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %297, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS5_11InstructionEE3$_2FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %298, align 8
  store i64 %296, i64* %299, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %301) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %303, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %304, align 8
  store i64 %302, i64* %305, align 8
  %422 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %420, i64 0, i32 6, i32 0, i32 0
  %423 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %422, align 8
  %424 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %420, i64 0, i32 6, i32 0, i32 1
  %425 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %424, align 8
  %426 = icmp eq %"struct.spvtools::opt::Operand"* %423, %425
  br i1 %426, label %447, label %427

427:                                              ; preds = %419, %442
  %428 = phi %"struct.spvtools::opt::Operand"* [ %443, %442 ], [ %423, %419 ]
  %429 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %428, i64 0, i32 0
  %430 = load i32, i32* %429, align 8
  %431 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %430) #11
  br i1 %431, label %432, label %442

432:                                              ; preds = %427
  %433 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %428, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %434 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %433, align 8
  %435 = icmp eq %"class.std::__1::vector.3"* %434, null
  %436 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %434, i64 0, i32 0, i32 0
  %437 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %428, i64 0, i32 1, i32 2
  %438 = select i1 %435, i32** %437, i32** %436
  %439 = load i32*, i32** %438, align 8
  %440 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %303, align 8
  %441 = call zeroext i1 %440(%"union.std::__1::__function::__policy_storage"* nonnull %306, i32* %439) #11
  br i1 %441, label %442, label %445

442:                                              ; preds = %432, %427
  %443 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %428, i64 1
  %444 = icmp eq %"struct.spvtools::opt::Operand"* %443, %425
  br i1 %444, label %445, label %427

445:                                              ; preds = %442, %432
  %446 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %304, align 8
  br label %447

447:                                              ; preds = %445, %419
  %448 = phi %"struct.std::__1::__function::__policy"* [ %446, %445 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %419 ]
  %449 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %448, i64 0, i32 1
  %450 = load void (i8*)*, void (i8*)** %449, align 8
  %451 = icmp eq void (i8*)* %450, null
  br i1 %451, label %454, label %452

452:                                              ; preds = %447
  %453 = load i8*, i8** %307, align 8
  call void %450(i8* %453) #11
  br label %454

454:                                              ; preds = %452, %447
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %301) #11
  %455 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %298, align 8
  %456 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %455, i64 0, i32 1
  %457 = load void (i8*)*, void (i8*)** %456, align 8
  %458 = icmp eq void (i8*)* %457, null
  br i1 %458, label %461, label %459

459:                                              ; preds = %454
  %460 = load i8*, i8** %300, align 8
  call void %457(i8* %460) #11
  br label %461

461:                                              ; preds = %459, %454
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %295) #11
  %462 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %462, %"class.spvtools::opt::Instruction"* %420) #11
  %463 = inttoptr i64 %421 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %464 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %463, i64 0, i32 1
  %465 = bitcast %"class.spvtools::opt::Instruction"** %464 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = inttoptr i64 %466 to %"class.spvtools::opt::Instruction"*
  %468 = icmp eq %"class.spvtools::opt::Instruction"* %414, %467
  br i1 %468, label %469, label %419

469:                                              ; preds = %461, %408
  %470 = inttoptr i64 %409 to i64*
  %471 = load i64, i64* %470, align 8
  %472 = icmp eq i64 %471, 0
  br i1 %472, label %379, label %408

473:                                              ; preds = %404, %385
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %247) #11
  %474 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %260, align 8
  %475 = bitcast %"class.spvtools::opt::UptrVectorIterator.1162"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %475) #11
  %476 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1162", %"class.spvtools::opt::UptrVectorIterator.1162"* %5, i64 0, i32 0
  %477 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1162", %"class.spvtools::opt::UptrVectorIterator.1162"* %5, i64 0, i32 1, i32 0
  %478 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %39, align 8
  %479 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %478, i64 0, i32 3
  %480 = bitcast %"class.std::__1::vector.38"* %479 to i64*
  %481 = load i64, i64* %480, align 8
  store %"class.std::__1::vector.38"* %479, %"class.std::__1::vector.38"** %476, align 8
  %482 = bitcast %"class.std::__1::unique_ptr.40"** %477 to i64*
  store i64 %481, i64* %482, align 8
  %483 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %478, i64 0, i32 3, i32 0, i32 1
  %484 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %483, align 8
  %485 = inttoptr i64 %481 to %"class.std::__1::unique_ptr.40"*
  %486 = icmp eq %"class.std::__1::unique_ptr.40"* %484, %485
  br i1 %486, label %527, label %487

487:                                              ; preds = %473
  %488 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %474, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %489

489:                                              ; preds = %519, %487
  %490 = phi %"class.std::__1::unique_ptr.40"* [ %485, %487 ], [ %520, %519 ]
  %491 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %490, i64 0, i32 0, i32 0, i32 0
  %492 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %491, align 8
  %493 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %492, i64 0, i32 1, i32 0, i32 0, i32 0
  %494 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %493, align 8
  %495 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %494, i64 0, i32 4
  %496 = load i8, i8* %495, align 1, !range !8
  %497 = icmp eq i8 %496, 0
  br i1 %497, label %503, label %498

498:                                              ; preds = %489
  %499 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %494, i64 0, i32 3
  %500 = load i8, i8* %499, align 4, !range !8
  %501 = zext i8 %500 to i32
  %502 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %494, i32 %501) #11
  br label %503

503:                                              ; preds = %498, %489
  %504 = phi i32 [ %502, %498 ], [ 0, %489 ]
  %505 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %488, align 8
  %506 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %505, i64 0, i32 4
  %507 = load i8, i8* %506, align 1, !range !8
  %508 = icmp eq i8 %507, 0
  br i1 %508, label %514, label %509

509:                                              ; preds = %503
  %510 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %505, i64 0, i32 3
  %511 = load i8, i8* %510, align 4, !range !8
  %512 = zext i8 %511 to i32
  %513 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %505, i32 %512) #11
  br label %514

514:                                              ; preds = %509, %503
  %515 = phi i32 [ %513, %509 ], [ 0, %503 ]
  %516 = icmp eq i32 %504, %515
  br i1 %516, label %517, label %519

517:                                              ; preds = %514
  %518 = call { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } @_ZN8spvtools3opt18UptrVectorIteratorINS0_10BasicBlockELb0EE12InsertBeforeILb0EEENSt3__19enable_ifIXntT_ES3_E4typeEPNS5_6vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISD_EEEE(%"class.spvtools::opt::UptrVectorIterator.1162"* nonnull %5, %"class.std::__1::vector.38"* %41) #11
  br label %527

519:                                              ; preds = %514
  %520 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %490, i64 1
  store %"class.std::__1::unique_ptr.40"* %520, %"class.std::__1::unique_ptr.40"** %477, align 8
  %521 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %39, align 8
  %522 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %521, i64 0, i32 3, i32 0, i32 1
  %523 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %522, align 8
  %524 = icmp ne %"class.spvtools::opt::Function"* %478, %521
  %525 = icmp ne %"class.std::__1::unique_ptr.40"* %520, %523
  %526 = or i1 %524, %525
  br i1 %526, label %489, label %527

527:                                              ; preds = %519, %517, %473
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %475) #11
  %528 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %184, align 8
  %529 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %171, align 8
  %530 = icmp eq %"class.std::__1::unique_ptr.40"* %529, %528
  br i1 %530, label %541, label %531

531:                                              ; preds = %527, %539
  %532 = phi %"class.std::__1::unique_ptr.40"* [ %533, %539 ], [ %529, %527 ]
  %533 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %532, i64 -1
  %534 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %533, i64 0, i32 0, i32 0, i32 0
  %535 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %534, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %534, align 8
  %536 = icmp eq %"class.spvtools::opt::BasicBlock"* %535, null
  br i1 %536, label %539, label %537

537:                                              ; preds = %531
  %538 = bitcast %"class.std::__1::unique_ptr.40"* %533 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %538, %"class.spvtools::opt::BasicBlock"* nonnull %535) #11
  br label %539

539:                                              ; preds = %537, %531
  %540 = icmp eq %"class.std::__1::unique_ptr.40"* %533, %528
  br i1 %540, label %541, label %531

541:                                              ; preds = %539, %527
  store %"class.std::__1::unique_ptr.40"* %528, %"class.std::__1::unique_ptr.40"** %171, align 8
  %542 = bitcast %"class.spvtools::opt::InstructionBuilder"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %542) #11
  %543 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %14, i64 0, i32 1
  %544 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %14, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %542, i8 -86, i64 32, i1 false) #11
  %545 = load i64, i64* %38, align 8
  %546 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %187, i64 0, i32 2, i32 0, i32 1
  %547 = ptrtoint %"class.spvtools::opt::Instruction"* %546 to i64
  %548 = bitcast %"class.spvtools::opt::InstructionBuilder"* %14 to i64*
  store i64 %545, i64* %548, align 8
  store %"class.spvtools::opt::BasicBlock"* %187, %"class.spvtools::opt::BasicBlock"** %543, align 8
  %549 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %14, i64 0, i32 2
  %550 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %549 to i64*
  store i64 %547, i64* %550, align 8
  store i32 0, i32* %544, align 8
  %551 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %396, align 8
  %552 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %551, i64 0, i32 1, i32 0, i32 0, i32 0
  %553 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %552, align 8
  %554 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %553, i64 0, i32 4
  %555 = load i8, i8* %554, align 1, !range !8
  %556 = icmp eq i8 %555, 0
  br i1 %556, label %562, label %557

557:                                              ; preds = %541
  %558 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %553, i64 0, i32 3
  %559 = load i8, i8* %558, align 4, !range !8
  %560 = zext i8 %559 to i32
  %561 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %553, i32 %560) #11
  br label %562

562:                                              ; preds = %557, %541
  %563 = phi i32 [ %561, %557 ], [ 0, %541 ]
  %564 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %14, i32 %563) #11
  %565 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 7
  %566 = bitcast %"class.spvtools::opt::BasicBlock"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.spvtools::opt::BasicBlock"** %58 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 4, i32 5
  %570 = bitcast %"class.spvtools::opt::Instruction"** %569 to i64*
  %571 = load i64, i64* %570, align 8
  %572 = bitcast %"class.spvtools::opt::Instruction"** %64 to i64*
  store i64 %571, i64* %572, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl6UnrollEPNS0_4LoopEm(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23, %"class.spvtools::opt::Loop"* %191, i64 %1) #11
  call fastcc void @_ZNK8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl19LinkLastPhisToStartEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23, %"class.spvtools::opt::Loop"* %191) #11
  call fastcc void @_ZNK8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl15AddBlocksToLoopEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23, %"class.spvtools::opt::Loop"* %191) #11
  %573 = bitcast %"class.std::__1::unique_ptr.40"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %573) #11
  %574 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %191, i64 0, i32 3
  %575 = bitcast %"class.spvtools::opt::BasicBlock"** %574 to i64*
  %576 = load i64, i64* %575, align 8
  %577 = bitcast %"class.std::__1::unique_ptr.40"* %15 to i64*
  store i64 %576, i64* %577, align 8
  %578 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %171, align 8
  %579 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %173, align 8
  %580 = icmp ult %"class.std::__1::unique_ptr.40"* %578, %579
  br i1 %580, label %581, label %587

581:                                              ; preds = %562
  %582 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %582, align 8
  %583 = bitcast %"class.std::__1::unique_ptr.40"* %578 to i64*
  store i64 %576, i64* %583, align 8
  %584 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %578, i64 1
  %585 = ptrtoint %"class.std::__1::unique_ptr.40"* %584 to i64
  %586 = bitcast %"class.std::__1::unique_ptr.40"** %171 to i64*
  store i64 %585, i64* %586, align 8
  br label %588

587:                                              ; preds = %562
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %41, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %15) #11
  br label %588

588:                                              ; preds = %587, %581
  %589 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %15, i64 0, i32 0, i32 0, i32 0
  %590 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %589, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %589, align 8
  %591 = icmp eq %"class.spvtools::opt::BasicBlock"* %590, null
  br i1 %591, label %594, label %592

592:                                              ; preds = %588
  %593 = bitcast %"class.std::__1::unique_ptr.40"* %15 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %593, %"class.spvtools::opt::BasicBlock"* nonnull %590) #11
  br label %594

594:                                              ; preds = %592, %588
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %573) #11
  %595 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %260, align 8
  %596 = bitcast %"class.spvtools::opt::UptrVectorIterator.1162"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %596) #11
  %597 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1162", %"class.spvtools::opt::UptrVectorIterator.1162"* %4, i64 0, i32 0
  %598 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1162", %"class.spvtools::opt::UptrVectorIterator.1162"* %4, i64 0, i32 1, i32 0
  %599 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %39, align 8
  %600 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %599, i64 0, i32 3
  %601 = bitcast %"class.std::__1::vector.38"* %600 to i64*
  %602 = load i64, i64* %601, align 8
  store %"class.std::__1::vector.38"* %600, %"class.std::__1::vector.38"** %597, align 8
  %603 = bitcast %"class.std::__1::unique_ptr.40"** %598 to i64*
  store i64 %602, i64* %603, align 8
  %604 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %599, i64 0, i32 3, i32 0, i32 1
  %605 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %604, align 8
  %606 = inttoptr i64 %602 to %"class.std::__1::unique_ptr.40"*
  %607 = icmp eq %"class.std::__1::unique_ptr.40"* %605, %606
  br i1 %607, label %648, label %608

608:                                              ; preds = %594
  %609 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %595, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %610

610:                                              ; preds = %640, %608
  %611 = phi %"class.std::__1::unique_ptr.40"* [ %606, %608 ], [ %641, %640 ]
  %612 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %611, i64 0, i32 0, i32 0, i32 0
  %613 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %612, align 8
  %614 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %613, i64 0, i32 1, i32 0, i32 0, i32 0
  %615 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %614, align 8
  %616 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %615, i64 0, i32 4
  %617 = load i8, i8* %616, align 1, !range !8
  %618 = icmp eq i8 %617, 0
  br i1 %618, label %624, label %619

619:                                              ; preds = %610
  %620 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %615, i64 0, i32 3
  %621 = load i8, i8* %620, align 4, !range !8
  %622 = zext i8 %621 to i32
  %623 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %615, i32 %622) #11
  br label %624

624:                                              ; preds = %619, %610
  %625 = phi i32 [ %623, %619 ], [ 0, %610 ]
  %626 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %609, align 8
  %627 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %626, i64 0, i32 4
  %628 = load i8, i8* %627, align 1, !range !8
  %629 = icmp eq i8 %628, 0
  br i1 %629, label %635, label %630

630:                                              ; preds = %624
  %631 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %626, i64 0, i32 3
  %632 = load i8, i8* %631, align 4, !range !8
  %633 = zext i8 %632 to i32
  %634 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %626, i32 %633) #11
  br label %635

635:                                              ; preds = %630, %624
  %636 = phi i32 [ %634, %630 ], [ 0, %624 ]
  %637 = icmp eq i32 %625, %636
  br i1 %637, label %638, label %640

638:                                              ; preds = %635
  %639 = call { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } @_ZN8spvtools3opt18UptrVectorIteratorINS0_10BasicBlockELb0EE12InsertBeforeILb0EEENSt3__19enable_ifIXntT_ES3_E4typeEPNS5_6vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISD_EEEE(%"class.spvtools::opt::UptrVectorIterator.1162"* nonnull %4, %"class.std::__1::vector.38"* %41) #11
  br label %648

640:                                              ; preds = %635
  %641 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %611, i64 1
  store %"class.std::__1::unique_ptr.40"* %641, %"class.std::__1::unique_ptr.40"** %598, align 8
  %642 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %39, align 8
  %643 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %642, i64 0, i32 3, i32 0, i32 1
  %644 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %643, align 8
  %645 = icmp ne %"class.spvtools::opt::Function"* %599, %642
  %646 = icmp ne %"class.std::__1::unique_ptr.40"* %641, %644
  %647 = or i1 %645, %646
  br i1 %647, label %610, label %648

648:                                              ; preds = %640, %638, %594
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %596) #11
  %649 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %649, i32 64) #11
  %650 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %651 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %650, i64 0, i32 11
  %652 = load i32, i32* %651, align 8
  %653 = and i32 %652, 1
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %655, label %679

655:                                              ; preds = %648
  %656 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %650, i64 0, i32 4, i32 0, i32 0, i32 0
  %657 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %656, align 8
  %658 = call i8* @_Znwm(i64 104) #12
  %659 = bitcast i8* %658 to %"class.spvtools::opt::analysis::DefUseManager"*
  %660 = getelementptr inbounds i8, i8* %658, i64 32
  %661 = bitcast i8* %660 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %658, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %661, align 4
  %662 = getelementptr inbounds i8, i8* %658, i64 48
  %663 = getelementptr inbounds i8, i8* %658, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %662, i8 0, i64 16, i1 false) #11
  %664 = bitcast i8* %663 to i8**
  store i8* %662, i8** %664, align 8
  %665 = getelementptr inbounds i8, i8* %658, i64 64
  %666 = getelementptr inbounds i8, i8* %658, i64 96
  %667 = bitcast i8* %666 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %665, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %667, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %659, %"class.spvtools::opt::Module"* %657) #11
  %668 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %650, i64 0, i32 6
  %669 = ptrtoint i8* %658 to i64
  %670 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %668, i64 0, i32 0, i32 0, i32 0
  %671 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %670, align 8
  %672 = bitcast %"class.std::__1::unique_ptr.62"* %668 to i64*
  store i64 %669, i64* %672, align 8
  %673 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %671, null
  br i1 %673, label %676, label %674

674:                                              ; preds = %655
  %675 = bitcast %"class.std::__1::unique_ptr.62"* %668 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %675, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %671) #11
  br label %676

676:                                              ; preds = %674, %655
  %677 = load i32, i32* %651, align 8
  %678 = or i32 %677, 1
  store i32 %678, i32* %651, align 8
  br label %679

679:                                              ; preds = %676, %648
  %680 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %650, i64 0, i32 6, i32 0, i32 0, i32 0
  %681 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %680, align 8
  %682 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %190, i32 0) #11
  %683 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %681, i32 %682) #11
  %684 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %683, i64 0, i32 2
  %685 = load i32, i32* %684, align 8
  %686 = load i64, i64* %69, align 8
  %687 = load i64, i64* %68, align 8
  %688 = load i64, i64* %67, align 8
  %689 = call i64 @_ZN8spvtools3opt4Loop25GetResidualConditionValueE6SpvOp_llmm(i32 %685, i64 %686, i64 %687, i64 %688, i64 %1) #11
  %690 = icmp slt i64 %689, 0
  %691 = trunc i64 %689 to i32
  br i1 %690, label %692, label %694

692:                                              ; preds = %679
  %693 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIiEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %14, i32 %691, i1 zeroext true) #11
  br label %696

694:                                              ; preds = %679
  %695 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %14, i32 %691, i1 zeroext false) #11
  br label %696

696:                                              ; preds = %694, %692
  %697 = phi %"class.spvtools::opt::Instruction"* [ %693, %692 ], [ %695, %694 ]
  %698 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %697, i64 0, i32 4
  %699 = load i8, i8* %698, align 1, !range !8
  %700 = icmp eq i8 %699, 0
  br i1 %700, label %706, label %701

701:                                              ; preds = %696
  %702 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %697, i64 0, i32 3
  %703 = load i8, i8* %702, align 4, !range !8
  %704 = zext i8 %703 to i32
  %705 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %697, i32 %704) #11
  br label %706

706:                                              ; preds = %701, %696
  %707 = phi i32 [ %705, %701 ], [ 0, %696 ]
  %708 = bitcast %"class.spvtools::utils::SmallVector"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %708) #11
  %709 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %709, align 8
  %710 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 1
  %711 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 2
  %712 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 3, i64 0
  %713 = bitcast i32** %711 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %712, %"struct.std::__1::aligned_storage<4, 4>::type"** %713, align 8
  %714 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 4
  %715 = bitcast %"class.std::__1::unique_ptr.0"* %714 to i64*
  store i64 0, i64* %715, align 8
  %716 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %712 to i32*
  store i64 1, i64* %710, align 8
  store i32 %707, i32* %716, align 8
  %717 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %683, i64 0, i32 3
  %718 = load i8, i8* %717, align 4, !range !8
  %719 = icmp eq i8 %718, 0
  %720 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %683, i64 0, i32 4
  %721 = load i8, i8* %720, align 1, !range !8
  %722 = icmp eq i8 %721, 0
  %723 = select i1 %722, i64 1, i64 2
  %724 = xor i1 %722, true
  %725 = zext i1 %724 to i64
  %726 = select i1 %719, i64 %725, i64 %723
  %727 = add nuw nsw i64 %726, 1
  %728 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %683, i64 0, i32 6, i32 0, i32 0
  %729 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %728, align 8
  %730 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %729, i64 %727, i32 1
  %731 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %730, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %16) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %709, align 8
  %732 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %733 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %732, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %732, align 8
  %734 = icmp eq %"class.std::__1::vector.3"* %733, null
  br i1 %734, label %746, label %735

735:                                              ; preds = %706
  %736 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %733, i64 0, i32 0, i32 0
  %737 = load i32*, i32** %736, align 8
  %738 = icmp eq i32* %737, null
  br i1 %738, label %744, label %739

739:                                              ; preds = %735
  %740 = ptrtoint i32* %737 to i64
  %741 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %733, i64 0, i32 0, i32 1
  %742 = bitcast i32** %741 to i64*
  store i64 %740, i64* %742, align 8
  %743 = bitcast i32* %737 to i8*
  call void @_ZdlPv(i8* %743) #12
  br label %744

744:                                              ; preds = %739, %735
  %745 = bitcast %"class.std::__1::vector.3"* %733 to i8*
  call void @_ZdlPv(i8* %745) #12
  br label %746

746:                                              ; preds = %744, %706
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %708) #11
  %747 = bitcast %"class.std::__1::vector.976"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %747) #11
  %748 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %17, i64 0, i32 0, i32 0
  %749 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %17, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %747, i8 0, i64 24, i1 false) #11
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %191, %"class.std::__1::vector.976"* nonnull dereferenceable(24) %17) #11
  %750 = bitcast %"class.std::__1::vector.976"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %750) #11
  %751 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %18, i64 0, i32 0, i32 0
  %752 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %18, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %750, i8 0, i64 24, i1 false) #11
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %82, %"class.std::__1::vector.976"* nonnull dereferenceable(24) %18) #11
  %753 = bitcast %"class.spvtools::opt::Instruction"*** %749 to i64*
  %754 = load i64, i64* %753, align 8
  %755 = bitcast %"class.std::__1::vector.976"* %17 to i64*
  %756 = load i64, i64* %755, align 8
  %757 = icmp eq i64 %754, %756
  br i1 %757, label %787, label %758

758:                                              ; preds = %746
  %759 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %191, i64 0, i32 4
  %760 = bitcast %"class.spvtools::utils::SmallVector"* %19 to i8*
  %761 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 0
  %762 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 1
  %763 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 2
  %764 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 3, i64 0
  %765 = bitcast i32** %763 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %766 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 4
  %767 = bitcast %"class.std::__1::unique_ptr.0"* %766 to i64*
  %768 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %764 to i32*
  %769 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %19, i64 0, i32 4, i32 0, i32 0, i32 0
  %770 = bitcast %"class.spvtools::utils::SmallVector"* %20 to i8*
  %771 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 0
  %772 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 1
  %773 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 2
  %774 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 3, i64 0
  %775 = bitcast i32** %773 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %776 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 4
  %777 = bitcast %"class.std::__1::unique_ptr.0"* %776 to i64*
  %778 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %774 to i32*
  %779 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 4, i32 0, i32 0, i32 0
  %780 = bitcast %"class.std::__1::function.1164"* %21 to i8*
  %781 = getelementptr inbounds %"class.std::__1::function.1164", %"class.std::__1::function.1164"* %21, i64 0, i32 0, i32 1, i32 0
  %782 = getelementptr inbounds %"class.std::__1::function.1164", %"class.std::__1::function.1164"* %21, i64 0, i32 0, i32 2
  %783 = bitcast %"class.std::__1::function.1164"* %21 to %"class.spvtools::opt::Loop"**
  %784 = getelementptr inbounds %"class.std::__1::function.1164", %"class.std::__1::function.1164"* %21, i64 0, i32 0, i32 0, i32 1
  %785 = bitcast [8 x i8]* %784 to i32*
  %786 = getelementptr inbounds %"class.std::__1::function.1164", %"class.std::__1::function.1164"* %21, i64 0, i32 0, i32 0, i32 0
  br label %893

787:                                              ; preds = %1070, %746
  %788 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %788, i32 64) #11
  %789 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %790 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %260, align 8
  %791 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %790, i64 0, i32 1, i32 0, i32 0, i32 0
  %792 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %791, align 8
  %793 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %792, i64 0, i32 4
  %794 = load i8, i8* %793, align 1, !range !8
  %795 = icmp eq i8 %794, 0
  br i1 %795, label %801, label %796

796:                                              ; preds = %787
  %797 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %792, i64 0, i32 3
  %798 = load i8, i8* %797, align 4, !range !8
  %799 = zext i8 %798 to i32
  %800 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %792, i32 %799) #11
  br label %801

801:                                              ; preds = %796, %787
  %802 = phi i32 [ %800, %796 ], [ 0, %787 ]
  %803 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %789, i32 %802, i32 %170) #11
  %804 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %805 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %39, align 8
  %806 = call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %804, %"class.spvtools::opt::Function"* %805) #11
  %807 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %82, i64 0, i32 6
  %808 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %807, align 8
  %809 = bitcast %"struct.std::__1::pair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %809) #11
  %810 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  store %"class.spvtools::opt::Loop"* %808, %"class.spvtools::opt::Loop"** %810, align 8
  %811 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %812 = bitcast %"class.spvtools::opt::Loop"** %811 to i64*
  store i64 %192, i64* %812, align 8
  %813 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %806, i64 0, i32 3, i32 0, i32 1
  %814 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %813, align 8
  %815 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %806, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %816 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %815, align 8
  %817 = icmp ult %"struct.std::__1::pair"* %814, %816
  br i1 %817, label %818, label %830

818:                                              ; preds = %801
  %819 = ptrtoint %"class.spvtools::opt::Loop"* %808 to i64
  %820 = bitcast %"struct.std::__1::pair"* %814 to i64*
  store i64 %819, i64* %820, align 8
  %821 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %814, i64 0, i32 1
  %822 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %823 = getelementptr inbounds %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.965"* %822, i64 0, i32 0, i32 0, i32 0
  %824 = bitcast %"class.std::__1::unique_ptr.965"* %822 to i64*
  %825 = load i64, i64* %824, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %823, align 8
  %826 = bitcast %"class.std::__1::unique_ptr.965"* %821 to i64*
  store i64 %825, i64* %826, align 8
  %827 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %814, i64 1
  %828 = ptrtoint %"struct.std::__1::pair"* %827 to i64
  %829 = bitcast %"struct.std::__1::pair"** %813 to i64*
  store i64 %828, i64* %829, align 8
  br label %832

830:                                              ; preds = %801
  %831 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %806, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_4pairIPN8spvtools3opt4LoopENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_9allocatorISA_EEE24__emplace_back_slow_pathIJSA_EEEvDpOT_(%"class.std::__1::vector.963"* %831, %"struct.std::__1::pair"* nonnull dereferenceable(16) %3) #11
  br label %832

832:                                              ; preds = %830, %818
  %833 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %811, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %811, align 8
  %834 = icmp eq %"class.spvtools::opt::Loop"* %833, null
  br i1 %834, label %862, label %835

835:                                              ; preds = %832
  %836 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %833, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %837 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %836, align 8
  %838 = icmp eq %"struct.std::__1::__hash_node_base.922"* %837, null
  br i1 %838, label %845, label %839

839:                                              ; preds = %835, %839
  %840 = phi %"struct.std::__1::__hash_node_base.922"* [ %842, %839 ], [ %837, %835 ]
  %841 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %840, i64 0, i32 0
  %842 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %841, align 8
  %843 = bitcast %"struct.std::__1::__hash_node_base.922"* %840 to i8*
  call void @_ZdlPv(i8* %843) #12
  %844 = icmp eq %"struct.std::__1::__hash_node_base.922"* %842, null
  br i1 %844, label %845, label %839

845:                                              ; preds = %839, %835
  %846 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %833, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %847 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %846, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %846, align 8
  %848 = icmp eq %"struct.std::__1::__hash_node_base.922"** %847, null
  br i1 %848, label %851, label %849

849:                                              ; preds = %845
  %850 = bitcast %"struct.std::__1::__hash_node_base.922"** %847 to i8*
  call void @_ZdlPv(i8* %850) #12
  br label %851

851:                                              ; preds = %849, %845
  %852 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %833, i64 0, i32 7, i32 0, i32 0
  %853 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %852, align 8
  %854 = icmp eq %"class.spvtools::opt::Loop"** %853, null
  br i1 %854, label %860, label %855

855:                                              ; preds = %851
  %856 = ptrtoint %"class.spvtools::opt::Loop"** %853 to i64
  %857 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %833, i64 0, i32 7, i32 0, i32 1
  %858 = bitcast %"class.spvtools::opt::Loop"*** %857 to i64*
  store i64 %856, i64* %858, align 8
  %859 = bitcast %"class.spvtools::opt::Loop"** %853 to i8*
  call void @_ZdlPv(i8* %859) #12
  br label %860

860:                                              ; preds = %855, %851
  %861 = bitcast %"class.spvtools::opt::Loop"* %833 to i8*
  call void @_ZdlPv(i8* %861) #12
  br label %862

862:                                              ; preds = %860, %832
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %809) #11
  %863 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 3, i32 0, i32 0
  %864 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %863, align 8
  %865 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 3, i32 0, i32 1
  %866 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %865, align 8
  %867 = icmp eq %"class.spvtools::opt::Instruction"** %864, %866
  br i1 %867, label %875, label %868

868:                                              ; preds = %862, %868
  %869 = phi %"class.spvtools::opt::Instruction"** [ %873, %868 ], [ %864, %862 ]
  %870 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %869, align 8
  %871 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %872 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %871, %"class.spvtools::opt::Instruction"* %870) #11
  %873 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %869, i64 1
  %874 = icmp eq %"class.spvtools::opt::Instruction"** %873, %866
  br i1 %874, label %875, label %868

875:                                              ; preds = %868, %862
  %876 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %751, align 8
  %877 = icmp eq %"class.spvtools::opt::Instruction"** %876, null
  br i1 %877, label %882, label %878

878:                                              ; preds = %875
  %879 = ptrtoint %"class.spvtools::opt::Instruction"** %876 to i64
  %880 = bitcast %"class.spvtools::opt::Instruction"*** %752 to i64*
  store i64 %879, i64* %880, align 8
  %881 = bitcast %"class.spvtools::opt::Instruction"** %876 to i8*
  call void @_ZdlPv(i8* %881) #12
  br label %882

882:                                              ; preds = %878, %875
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %750) #11
  %883 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %748, align 8
  %884 = icmp eq %"class.spvtools::opt::Instruction"** %883, null
  br i1 %884, label %888, label %885

885:                                              ; preds = %882
  %886 = ptrtoint %"class.spvtools::opt::Instruction"** %883 to i64
  store i64 %886, i64* %753, align 8
  %887 = bitcast %"class.spvtools::opt::Instruction"** %883 to i8*
  call void @_ZdlPv(i8* %887) #12
  br label %888

888:                                              ; preds = %885, %882
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %747) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %542) #11
  %889 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %141, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %141, align 8
  %890 = icmp eq %"class.spvtools::opt::BasicBlock"* %889, null
  br i1 %890, label %1077, label %891

891:                                              ; preds = %888
  %892 = bitcast %"class.std::__1::unique_ptr.40"* %13 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %892, %"class.spvtools::opt::BasicBlock"* nonnull %889) #11
  br label %1077

893:                                              ; preds = %1070, %758
  %894 = phi i64 [ %756, %758 ], [ %1073, %1070 ]
  %895 = phi i64 [ 0, %758 ], [ %1071, %1070 ]
  %896 = inttoptr i64 %894 to %"class.spvtools::opt::Instruction"**
  %897 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %896, i64 %895
  %898 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %897, align 8
  %899 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %751, align 8
  %900 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %899, i64 %895
  %901 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %900, align 8
  %902 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %759, align 8
  %903 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %901, i64 0, i32 6
  %904 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %901, i64 0, i32 6, i32 0, i32 1
  %905 = bitcast %"struct.spvtools::opt::Operand"** %904 to i64*
  %906 = bitcast %"class.std::__1::vector"* %903 to i64*
  %907 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %901, i64 0, i32 3
  %908 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %901, i64 0, i32 4
  %909 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %902, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %910

910:                                              ; preds = %954, %893
  %911 = phi i32 [ 1, %893 ], [ %955, %954 ]
  %912 = load i64, i64* %905, align 8
  %913 = load i64, i64* %906, align 8
  %914 = sub i64 %912, %913
  %915 = sdiv exact i64 %914, 48
  %916 = load i8, i8* %907, align 4, !range !8
  %917 = icmp eq i8 %916, 0
  %918 = load i8, i8* %908, align 1, !range !8
  %919 = icmp eq i8 %918, 0
  %920 = select i1 %919, i32 1, i32 2
  %921 = xor i1 %919, true
  %922 = zext i1 %921 to i32
  %923 = select i1 %917, i32 %922, i32 %920
  %924 = trunc i64 %915 to i32
  %925 = sub i32 %924, %923
  %926 = icmp ult i32 %911, %925
  br i1 %926, label %927, label %956

927:                                              ; preds = %910
  %928 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %909, align 8
  %929 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %928, i64 0, i32 4
  %930 = load i8, i8* %929, align 1, !range !8
  %931 = icmp eq i8 %930, 0
  br i1 %931, label %939, label %932

932:                                              ; preds = %927
  %933 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %928, i64 0, i32 3
  %934 = load i8, i8* %933, align 4, !range !8
  %935 = zext i8 %934 to i32
  %936 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %928, i32 %935) #11
  %937 = load i8, i8* %907, align 4, !range !8
  %938 = load i8, i8* %908, align 1, !range !8
  br label %939

939:                                              ; preds = %932, %927
  %940 = phi i8 [ %938, %932 ], [ %918, %927 ]
  %941 = phi i8 [ %937, %932 ], [ %916, %927 ]
  %942 = phi i32 [ %936, %932 ], [ 0, %927 ]
  %943 = icmp eq i8 %941, 0
  %944 = icmp eq i8 %940, 0
  %945 = select i1 %944, i32 1, i32 2
  %946 = xor i1 %944, true
  %947 = zext i1 %946 to i32
  %948 = select i1 %943, i32 %947, i32 %945
  %949 = add i32 %948, %911
  %950 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %901, i32 %949) #11
  %951 = icmp eq i32 %942, %950
  br i1 %951, label %952, label %954

952:                                              ; preds = %939
  %953 = load i8, i8* %908, align 1, !range !8
  br label %956

954:                                              ; preds = %939
  %955 = add i32 %911, 2
  br label %910

956:                                              ; preds = %910, %952
  %957 = phi i8 [ %953, %952 ], [ %918, %910 ]
  %958 = phi i32 [ %911, %952 ], [ 0, %910 ]
  %959 = add i32 %958, -1
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %760) #11
  %960 = icmp eq i8 %957, 0
  br i1 %960, label %965, label %961

961:                                              ; preds = %956
  %962 = load i8, i8* %907, align 4, !range !8
  %963 = zext i8 %962 to i32
  %964 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %901, i32 %963) #11
  br label %965

965:                                              ; preds = %961, %956
  %966 = phi i32 [ %964, %961 ], [ 0, %956 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %761, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %764, %"struct.std::__1::aligned_storage<4, 4>::type"** %765, align 8
  store i64 0, i64* %767, align 8
  store i64 1, i64* %762, align 8
  store i32 %966, i32* %768, align 8
  %967 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %898, i64 0, i32 3
  %968 = load i8, i8* %967, align 4, !range !8
  %969 = icmp eq i8 %968, 0
  %970 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %898, i64 0, i32 4
  %971 = load i8, i8* %970, align 1, !range !8
  %972 = icmp eq i8 %971, 0
  %973 = select i1 %972, i32 1, i32 2
  %974 = xor i1 %972, true
  %975 = zext i1 %974 to i32
  %976 = select i1 %969, i32 %975, i32 %973
  %977 = add i32 %959, %976
  %978 = zext i32 %977 to i64
  %979 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %898, i64 0, i32 6, i32 0, i32 0
  %980 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %979, align 8
  %981 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %980, i64 %978, i32 1
  %982 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %981, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %19) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %761, align 8
  %983 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %769, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %769, align 8
  %984 = icmp eq %"class.std::__1::vector.3"* %983, null
  br i1 %984, label %996, label %985

985:                                              ; preds = %965
  %986 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %983, i64 0, i32 0, i32 0
  %987 = load i32*, i32** %986, align 8
  %988 = icmp eq i32* %987, null
  br i1 %988, label %994, label %989

989:                                              ; preds = %985
  %990 = ptrtoint i32* %987 to i64
  %991 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %983, i64 0, i32 0, i32 1
  %992 = bitcast i32** %991 to i64*
  store i64 %990, i64* %992, align 8
  %993 = bitcast i32* %987 to i8*
  call void @_ZdlPv(i8* %993) #12
  br label %994

994:                                              ; preds = %989, %985
  %995 = bitcast %"class.std::__1::vector.3"* %983 to i8*
  call void @_ZdlPv(i8* %995) #12
  br label %996

996:                                              ; preds = %994, %965
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %760) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %770) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %771, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %774, %"struct.std::__1::aligned_storage<4, 4>::type"** %775, align 8
  store i64 0, i64* %777, align 8
  store i64 1, i64* %772, align 8
  store i32 %170, i32* %778, align 8
  %997 = load i8, i8* %967, align 4, !range !8
  %998 = icmp eq i8 %997, 0
  %999 = load i8, i8* %970, align 1, !range !8
  %1000 = icmp eq i8 %999, 0
  %1001 = select i1 %1000, i32 1, i32 2
  %1002 = xor i1 %1000, true
  %1003 = zext i1 %1002 to i32
  %1004 = select i1 %998, i32 %1003, i32 %1001
  %1005 = add i32 %1004, %958
  %1006 = zext i32 %1005 to i64
  %1007 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %979, align 8
  %1008 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1007, i64 %1006, i32 1
  %1009 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %1008, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %20) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %771, align 8
  %1010 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %779, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %779, align 8
  %1011 = icmp eq %"class.std::__1::vector.3"* %1010, null
  br i1 %1011, label %1023, label %1012

1012:                                             ; preds = %996
  %1013 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1010, i64 0, i32 0, i32 0
  %1014 = load i32*, i32** %1013, align 8
  %1015 = icmp eq i32* %1014, null
  br i1 %1015, label %1021, label %1016

1016:                                             ; preds = %1012
  %1017 = ptrtoint i32* %1014 to i64
  %1018 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %1010, i64 0, i32 0, i32 1
  %1019 = bitcast i32** %1018 to i64*
  store i64 %1017, i64* %1019, align 8
  %1020 = bitcast i32* %1014 to i8*
  call void @_ZdlPv(i8* %1020) #12
  br label %1021

1021:                                             ; preds = %1016, %1012
  %1022 = bitcast %"class.std::__1::vector.3"* %1010 to i8*
  call void @_ZdlPv(i8* %1022) #12
  br label %1023

1023:                                             ; preds = %1021, %996
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %770) #11
  %1024 = load i8, i8* %970, align 1, !range !8
  %1025 = icmp eq i8 %1024, 0
  br i1 %1025, label %1030, label %1026

1026:                                             ; preds = %1023
  %1027 = load i8, i8* %967, align 4, !range !8
  %1028 = zext i8 %1027 to i32
  %1029 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %898, i32 %1028) #11
  br label %1030

1030:                                             ; preds = %1026, %1023
  %1031 = phi i32 [ %1029, %1026 ], [ 0, %1023 ]
  %1032 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %1033 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1032, i64 0, i32 11
  %1034 = load i32, i32* %1033, align 8
  %1035 = and i32 %1034, 1
  %1036 = icmp eq i32 %1035, 0
  br i1 %1036, label %1037, label %1061

1037:                                             ; preds = %1030
  %1038 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1032, i64 0, i32 4, i32 0, i32 0, i32 0
  %1039 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %1038, align 8
  %1040 = call i8* @_Znwm(i64 104) #12
  %1041 = bitcast i8* %1040 to %"class.spvtools::opt::analysis::DefUseManager"*
  %1042 = getelementptr inbounds i8, i8* %1040, i64 32
  %1043 = bitcast i8* %1042 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1040, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %1043, align 4
  %1044 = getelementptr inbounds i8, i8* %1040, i64 48
  %1045 = getelementptr inbounds i8, i8* %1040, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1044, i8 0, i64 16, i1 false) #11
  %1046 = bitcast i8* %1045 to i8**
  store i8* %1044, i8** %1046, align 8
  %1047 = getelementptr inbounds i8, i8* %1040, i64 64
  %1048 = getelementptr inbounds i8, i8* %1040, i64 96
  %1049 = bitcast i8* %1048 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1047, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %1049, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %1041, %"class.spvtools::opt::Module"* %1039) #11
  %1050 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1032, i64 0, i32 6
  %1051 = ptrtoint i8* %1040 to i64
  %1052 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %1050, i64 0, i32 0, i32 0, i32 0
  %1053 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1052, align 8
  %1054 = bitcast %"class.std::__1::unique_ptr.62"* %1050 to i64*
  store i64 %1051, i64* %1054, align 8
  %1055 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1053, null
  br i1 %1055, label %1058, label %1056

1056:                                             ; preds = %1037
  %1057 = bitcast %"class.std::__1::unique_ptr.62"* %1050 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %1057, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %1053) #11
  br label %1058

1058:                                             ; preds = %1056, %1037
  %1059 = load i32, i32* %1033, align 8
  %1060 = or i32 %1059, 1
  store i32 %1060, i32* %1033, align 8
  br label %1061

1061:                                             ; preds = %1058, %1030
  %1062 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1032, i64 0, i32 6, i32 0, i32 0, i32 0
  %1063 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %1062, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %780) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_121LoopUnrollerUtilsImpl29PartiallyUnrollResidualFactorEPNS3_4LoopEmE3$_0S6_EEEEvPKNS0_16__policy_storageES5_j", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, i32)** %781, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl29PartiallyUnrollResidualFactorEPNS5_4LoopEmE3$_0FvPNS5_11InstructionEjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %782, align 8
  store %"class.spvtools::opt::Loop"* %82, %"class.spvtools::opt::Loop"** %783, align 8
  store i32 %1031, i32* %785, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEPKNS0_11InstructionERKNSt3__18functionIFvPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"* %1063, %"class.spvtools::opt::Instruction"* %901, %"class.std::__1::function.1164"* nonnull dereferenceable(32) %21) #11
  %1064 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %782, align 8
  %1065 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1064, i64 0, i32 1
  %1066 = load void (i8*)*, void (i8*)** %1065, align 8
  %1067 = icmp eq void (i8*)* %1066, null
  br i1 %1067, label %1070, label %1068

1068:                                             ; preds = %1061
  %1069 = load i8*, i8** %786, align 8
  call void %1066(i8* %1069) #11
  br label %1070

1070:                                             ; preds = %1068, %1061
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %780) #11
  %1071 = add nuw i64 %895, 1
  %1072 = load i64, i64* %753, align 8
  %1073 = load i64, i64* %755, align 8
  %1074 = sub i64 %1072, %1073
  %1075 = ashr exact i64 %1074, 3
  %1076 = icmp ult i64 %1071, %1075
  br i1 %1076, label %893, label %787

1077:                                             ; preds = %888, %891
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #11
  br label %1146

1078:                                             ; preds = %79
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl6UnrollEPNS0_4LoopEm(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23, %"class.spvtools::opt::Loop"* %82, i64 %1) #11
  call fastcc void @_ZNK8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl19LinkLastPhisToStartEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23, %"class.spvtools::opt::Loop"* %82) #11
  call fastcc void @_ZNK8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl15AddBlocksToLoopEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23, %"class.spvtools::opt::Loop"* %82) #11
  %1079 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %82, i64 0, i32 3
  %1080 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1079, align 8
  %1081 = bitcast %"class.spvtools::opt::UptrVectorIterator.1162"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1081) #11
  %1082 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1162", %"class.spvtools::opt::UptrVectorIterator.1162"* %22, i64 0, i32 0
  %1083 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1162", %"class.spvtools::opt::UptrVectorIterator.1162"* %22, i64 0, i32 1, i32 0
  %1084 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %39, align 8
  %1085 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1084, i64 0, i32 3
  %1086 = bitcast %"class.std::__1::vector.38"* %1085 to i64*
  %1087 = load i64, i64* %1086, align 8
  store %"class.std::__1::vector.38"* %1085, %"class.std::__1::vector.38"** %1082, align 8
  %1088 = bitcast %"class.std::__1::unique_ptr.40"** %1083 to i64*
  store i64 %1087, i64* %1088, align 8
  %1089 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1084, i64 0, i32 3, i32 0, i32 1
  %1090 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %1089, align 8
  %1091 = inttoptr i64 %1087 to %"class.std::__1::unique_ptr.40"*
  %1092 = icmp eq %"class.std::__1::unique_ptr.40"* %1090, %1091
  br i1 %1092, label %1133, label %1093

1093:                                             ; preds = %1078
  %1094 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1080, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %1095

1095:                                             ; preds = %1125, %1093
  %1096 = phi %"class.std::__1::unique_ptr.40"* [ %1091, %1093 ], [ %1126, %1125 ]
  %1097 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1096, i64 0, i32 0, i32 0, i32 0
  %1098 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1097, align 8
  %1099 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1098, i64 0, i32 1, i32 0, i32 0, i32 0
  %1100 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1099, align 8
  %1101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1100, i64 0, i32 4
  %1102 = load i8, i8* %1101, align 1, !range !8
  %1103 = icmp eq i8 %1102, 0
  br i1 %1103, label %1109, label %1104

1104:                                             ; preds = %1095
  %1105 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1100, i64 0, i32 3
  %1106 = load i8, i8* %1105, align 4, !range !8
  %1107 = zext i8 %1106 to i32
  %1108 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1100, i32 %1107) #11
  br label %1109

1109:                                             ; preds = %1104, %1095
  %1110 = phi i32 [ %1108, %1104 ], [ 0, %1095 ]
  %1111 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1094, align 8
  %1112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1111, i64 0, i32 4
  %1113 = load i8, i8* %1112, align 1, !range !8
  %1114 = icmp eq i8 %1113, 0
  br i1 %1114, label %1120, label %1115

1115:                                             ; preds = %1109
  %1116 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1111, i64 0, i32 3
  %1117 = load i8, i8* %1116, align 4, !range !8
  %1118 = zext i8 %1117 to i32
  %1119 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1111, i32 %1118) #11
  br label %1120

1120:                                             ; preds = %1115, %1109
  %1121 = phi i32 [ %1119, %1115 ], [ 0, %1109 ]
  %1122 = icmp eq i32 %1110, %1121
  br i1 %1122, label %1123, label %1125

1123:                                             ; preds = %1120
  %1124 = call { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } @_ZN8spvtools3opt18UptrVectorIteratorINS0_10BasicBlockELb0EE12InsertBeforeILb0EEENSt3__19enable_ifIXntT_ES3_E4typeEPNS5_6vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISD_EEEE(%"class.spvtools::opt::UptrVectorIterator.1162"* nonnull %22, %"class.std::__1::vector.38"* %41) #11
  br label %1133

1125:                                             ; preds = %1120
  %1126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1096, i64 1
  store %"class.std::__1::unique_ptr.40"* %1126, %"class.std::__1::unique_ptr.40"** %1083, align 8
  %1127 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %39, align 8
  %1128 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1127, i64 0, i32 3, i32 0, i32 1
  %1129 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %1128, align 8
  %1130 = icmp ne %"class.spvtools::opt::Function"* %1084, %1127
  %1131 = icmp ne %"class.std::__1::unique_ptr.40"* %1126, %1129
  %1132 = or i1 %1130, %1131
  br i1 %1132, label %1095, label %1133

1133:                                             ; preds = %1125, %1123, %1078
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1081) #11
  %1134 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 3, i32 0, i32 0
  %1135 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %1134, align 8
  %1136 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %23, i64 0, i32 3, i32 0, i32 1
  %1137 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %1136, align 8
  %1138 = icmp eq %"class.spvtools::opt::Instruction"** %1135, %1137
  br i1 %1138, label %1146, label %1139

1139:                                             ; preds = %1133, %1139
  %1140 = phi %"class.spvtools::opt::Instruction"** [ %1144, %1139 ], [ %1135, %1133 ]
  %1141 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1140, align 8
  %1142 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %37, align 8
  %1143 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1142, %"class.spvtools::opt::Instruction"* %1141) #11
  %1144 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1140, i64 1
  %1145 = icmp eq %"class.spvtools::opt::Instruction"** %1144, %1137
  br i1 %1145, label %1146, label %1139

1146:                                             ; preds = %1139, %1133, %1077, %77
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImplD2Ev(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %28) #11
  br label %1147

1147:                                             ; preds = %2, %25, %1146
  %1148 = phi i1 [ true, %1146 ], [ false, %25 ], [ false, %2 ]
  ret i1 %1148
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl11FullyUnrollEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"*, %"class.spvtools::opt::Loop"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.976", align 8
  %4 = alloca %"class.spvtools::opt::UptrVectorIterator.1162", align 8
  %5 = alloca %"class.std::__1::function.1116", align 8
  %6 = alloca %"class.std::__1::function.1110", align 8
  %7 = alloca %"class.std::__1::tuple.1084", align 8
  %8 = alloca %"class.std::__1::tuple.1074", align 1
  %9 = alloca %"class.std::__1::function.1116", align 8
  %10 = alloca %"class.std::__1::function.1110", align 8
  %11 = alloca %"class.std::__1::function.1116", align 8
  %12 = alloca %"class.std::__1::function.1110", align 8
  %13 = alloca %"class.spvtools::utils::SmallVector", align 8
  %14 = alloca %"class.std::__1::vector.976", align 8
  %15 = alloca i32, align 4
  %16 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 9
  %17 = load i64, i64* %16, align 8
  tail call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl6UnrollEPNS0_4LoopEm(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, %"class.spvtools::opt::Loop"* %1, i64 %17)
  %18 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 6
  %19 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %18, align 8
  tail call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl18FoldConditionBlockEPNS0_10BasicBlockEj(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, %"class.spvtools::opt::BasicBlock"* %19)
  %20 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 1
  %21 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %20, align 8
  %22 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %21) #11
  %23 = ptrtoint %"class.spvtools::opt::Instruction"* %22 to i64
  %24 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3
  %25 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %26 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %27, align 8
  %29 = icmp eq %"class.spvtools::opt::Instruction"** %26, %28
  %30 = ptrtoint %"class.spvtools::opt::Instruction"** %28 to i64
  br i1 %29, label %36, label %31

31:                                               ; preds = %2
  %32 = bitcast %"class.spvtools::opt::Instruction"** %26 to i64*
  store i64 %23, i64* %32, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %26, i64 1
  %34 = ptrtoint %"class.spvtools::opt::Instruction"** %33 to i64
  %35 = bitcast %"class.spvtools::opt::Instruction"*** %25 to i64*
  store i64 %34, i64* %35, align 8
  br label %93

36:                                               ; preds = %2
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %26 to i64
  %38 = bitcast %"class.spvtools::opt::Instruction"*** %25 to i64*
  %39 = bitcast %"class.std::__1::vector.976"* %24 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %37, %40
  %42 = ashr exact i64 %41, 3
  %43 = add nsw i64 %42, 1
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  %46 = bitcast %"class.std::__1::vector.976"* %24 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %46) #13
  unreachable

47:                                               ; preds = %36
  %48 = bitcast %"class.spvtools::opt::Instruction"*** %27 to i64*
  %49 = sub i64 %30, %40
  %50 = ashr exact i64 %49, 3
  %51 = icmp ult i64 %50, 1152921504606846975
  br i1 %51, label %52, label %60

52:                                               ; preds = %47
  %53 = ashr exact i64 %49, 2
  %54 = icmp ult i64 %53, %43
  %55 = select i1 %54, i64 %43, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %52
  %58 = icmp ugt i64 %55, 2305843009213693951
  br i1 %58, label %59, label %60

59:                                               ; preds = %57
  tail call void @abort() #13
  unreachable

60:                                               ; preds = %57, %47
  %61 = phi i64 [ %55, %57 ], [ 2305843009213693951, %47 ]
  %62 = shl i64 %61, 3
  %63 = tail call i8* @_Znwm(i64 %62) #12
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Instruction"**
  br label %65

65:                                               ; preds = %60, %52
  %66 = phi i64 [ %61, %60 ], [ 0, %52 ]
  %67 = phi %"class.spvtools::opt::Instruction"** [ %64, %60 ], [ null, %52 ]
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, i64 %42
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, i64 %66
  %70 = ptrtoint %"class.spvtools::opt::Instruction"** %69 to i64
  %71 = bitcast %"class.spvtools::opt::Instruction"** %68 to i64*
  store i64 %23, i64* %71, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %68, i64 1
  %73 = ptrtoint %"class.spvtools::opt::Instruction"** %72 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %24, i64 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %74, align 8
  %76 = load i64, i64* %38, align 8
  %77 = ptrtoint %"class.spvtools::opt::Instruction"** %75 to i64
  %78 = sub i64 %76, %77
  %79 = ashr exact i64 %78, 3
  %80 = sub nsw i64 0, %79
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %68, i64 %80
  %82 = ptrtoint %"class.spvtools::opt::Instruction"** %81 to i64
  %83 = icmp sgt i64 %78, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %65
  %85 = bitcast %"class.spvtools::opt::Instruction"** %81 to i8*
  %86 = bitcast %"class.spvtools::opt::Instruction"** %75 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 %78, i1 false) #11
  %87 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %74, align 8
  br label %88

88:                                               ; preds = %84, %65
  %89 = phi %"class.spvtools::opt::Instruction"** [ %75, %65 ], [ %87, %84 ]
  store i64 %82, i64* %39, align 8
  store i64 %73, i64* %38, align 8
  store i64 %70, i64* %48, align 8
  %90 = icmp eq %"class.spvtools::opt::Instruction"** %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = bitcast %"class.spvtools::opt::Instruction"** %89 to i8*
  tail call void @_ZdlPv(i8* %92) #12
  br label %93

93:                                               ; preds = %91, %88, %31
  %94 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 3
  %95 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %95, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %97 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %96, align 8, !noalias !21
  %98 = bitcast %"class.spvtools::utils::SmallVector"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %98) #11
  %99 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 3
  %100 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %99, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %100, i64 0, i32 1, i32 0, i32 0, i32 0
  %102 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %101, align 8
  %103 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %102, i64 0, i32 4
  %104 = load i8, i8* %103, align 1, !range !8
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %111, label %106

106:                                              ; preds = %93
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %102, i64 0, i32 3
  %108 = load i8, i8* %107, align 4, !range !8
  %109 = zext i8 %108 to i32
  %110 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %102, i32 %109) #11
  br label %111

111:                                              ; preds = %106, %93
  %112 = phi i32 [ %110, %106 ], [ 0, %93 ]
  %113 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %113, align 8
  %114 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 1
  %115 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 2
  %116 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 3, i64 0
  %117 = bitcast i32** %115 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %116, %"struct.std::__1::aligned_storage<4, 4>::type"** %117, align 8
  %118 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 4
  %119 = bitcast %"class.std::__1::unique_ptr.0"* %118 to i64*
  store i64 0, i64* %119, align 8
  %120 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %116 to i32*
  store i64 1, i64* %114, align 8
  store i32 %112, i32* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 3
  %122 = load i8, i8* %121, align 4, !range !8
  %123 = icmp eq i8 %122, 0
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 4
  %125 = load i8, i8* %124, align 1, !range !8
  %126 = icmp eq i8 %125, 0
  %127 = select i1 %126, i64 1, i64 2
  %128 = xor i1 %126, true
  %129 = zext i1 %128 to i64
  %130 = select i1 %123, i64 %129, i64 %127
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 6, i32 0, i32 0
  %132 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %131, align 8
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 %130, i32 1
  %134 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %133, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %13) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %113, align 8
  %135 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %136 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %135, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %135, align 8
  %137 = icmp eq %"class.std::__1::vector.3"* %136, null
  br i1 %137, label %149, label %138

138:                                              ; preds = %111
  %139 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 0, i32 0, i32 0
  %140 = load i32*, i32** %139, align 8
  %141 = icmp eq i32* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %138
  %143 = ptrtoint i32* %140 to i64
  %144 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 0, i32 0, i32 1
  %145 = bitcast i32** %144 to i64*
  store i64 %143, i64* %145, align 8
  %146 = bitcast i32* %140 to i8*
  call void @_ZdlPv(i8* %146) #12
  br label %147

147:                                              ; preds = %142, %138
  %148 = bitcast %"class.std::__1::vector.3"* %136 to i8*
  call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %147, %111
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %98) #11
  %150 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 0
  %151 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %150, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %151, i64 0, i32 11
  %153 = load i32, i32* %152, align 8
  %154 = and i32 %153, 1
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %159, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %151, i64 0, i32 6, i32 0, i32 0, i32 0
  %158 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %157, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %158, %"class.spvtools::opt::Instruction"* %97) #11
  br label %159

159:                                              ; preds = %156, %149
  %160 = bitcast %"class.std::__1::vector.976"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %160) #11
  %161 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %14, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %14, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 0, i64 24, i1 false) #11
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %1, %"class.std::__1::vector.976"* nonnull dereferenceable(24) %14) #11
  %163 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11
  %164 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0, i32 2, i32 0, i32 0
  %165 = load i64, i64* %164, align 8
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %217, label %167

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %168, align 8
  %170 = icmp eq %"struct.std::__1::__hash_node_base.254"* %169, null
  br i1 %170, label %177, label %171

171:                                              ; preds = %167, %171
  %172 = phi %"struct.std::__1::__hash_node_base.254"* [ %174, %171 ], [ %169, %167 ]
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %172, i64 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %173, align 8
  %175 = bitcast %"struct.std::__1::__hash_node_base.254"* %172 to i8*
  call void @_ZdlPv(i8* %175) #12
  %176 = icmp eq %"struct.std::__1::__hash_node_base.254"* %174, null
  br i1 %176, label %177, label %171

177:                                              ; preds = %171, %167
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %168, align 8
  %178 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %199, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %163, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = add i64 %179, -1
  %184 = and i64 %179, 3
  %185 = icmp ult i64 %183, 3
  br i1 %185, label %188, label %186

186:                                              ; preds = %181
  %187 = sub i64 %179, %184
  br label %200

188:                                              ; preds = %200, %181
  %189 = phi i64 [ 0, %181 ], [ %214, %200 ]
  %190 = icmp eq i64 %184, 0
  br i1 %190, label %199, label %191

191:                                              ; preds = %188, %191
  %192 = phi i64 [ %196, %191 ], [ %189, %188 ]
  %193 = phi i64 [ %197, %191 ], [ %184, %188 ]
  %194 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %182, align 8
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %194, i64 %192
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %195, align 8
  %196 = add nuw i64 %192, 1
  %197 = add i64 %193, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %191, !llvm.loop !24

199:                                              ; preds = %188, %191, %177
  store i64 0, i64* %164, align 8
  br label %217

200:                                              ; preds = %200, %186
  %201 = phi i64 [ 0, %186 ], [ %214, %200 ]
  %202 = phi i64 [ %187, %186 ], [ %215, %200 ]
  %203 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %182, align 8
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %203, i64 %201
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %204, align 8
  %205 = or i64 %201, 1
  %206 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %182, align 8
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %206, i64 %205
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %207, align 8
  %208 = or i64 %201, 2
  %209 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %182, align 8
  %210 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %209, i64 %208
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %210, align 8
  %211 = or i64 %201, 3
  %212 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %182, align 8
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %212, i64 %211
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %213, align 8
  %214 = add nuw i64 %201, 4
  %215 = add i64 %202, -4
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %188, label %200

217:                                              ; preds = %199, %159
  %218 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %161, align 8
  %219 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %162, align 8
  %220 = icmp eq %"class.spvtools::opt::Instruction"** %218, %219
  br i1 %220, label %228, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 4
  %223 = bitcast i32* %15 to i8*
  %224 = getelementptr inbounds %"class.std::__1::unordered_map.249", %"class.std::__1::unordered_map.249"* %163, i64 0, i32 0
  %225 = bitcast %"class.std::__1::tuple.1084"* %7 to i8*
  %226 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %7, i64 0, i32 0, i32 0, i32 0
  %227 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %8, i64 0, i32 0
  br label %248

228:                                              ; preds = %299, %217
  %229 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 5, i32 0, i32 0
  %230 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %229, align 8
  %231 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 5, i32 0, i32 1
  %232 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %231, align 8
  %233 = icmp eq %"class.spvtools::opt::BasicBlock"** %230, %232
  br i1 %233, label %308, label %234

234:                                              ; preds = %228
  %235 = bitcast %"class.std::__1::function.1110"* %6 to i8*
  %236 = ptrtoint %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0 to i64
  %237 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %6, i64 0, i32 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %6, i64 0, i32 0, i32 2
  %239 = bitcast %"class.std::__1::function.1110"* %6 to i64*
  %240 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %6, i64 0, i32 0, i32 0, i32 0
  %241 = bitcast %"class.std::__1::function.1116"* %5 to i8*
  %242 = ptrtoint %"class.std::__1::function.1110"* %6 to i64
  %243 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %5, i64 0, i32 0, i32 1, i32 0
  %244 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %5, i64 0, i32 0, i32 2
  %245 = bitcast %"class.std::__1::function.1116"* %5 to i64*
  %246 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %5, i64 0, i32 0, i32 0
  %247 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %5, i64 0, i32 0, i32 0, i32 0
  br label %328

248:                                              ; preds = %299, %221
  %249 = phi %"class.spvtools::opt::Instruction"** [ %218, %221 ], [ %306, %299 ]
  %250 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %249, align 8
  %251 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %222, align 8
  %252 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %251, i64 0, i32 1, i32 0, i32 0, i32 0
  %253 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %252, align 8
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %253, i64 0, i32 4
  %255 = load i8, i8* %254, align 1, !range !8
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %248
  %258 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %253, i64 0, i32 3
  %259 = load i8, i8* %258, align 4, !range !8
  %260 = zext i8 %259 to i32
  %261 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %253, i32 %260) #11
  br label %262

262:                                              ; preds = %257, %248
  %263 = phi i32 [ %261, %257 ], [ 0, %248 ]
  %264 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %250, i64 0, i32 6
  %265 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %250, i64 0, i32 6, i32 0, i32 1
  %266 = bitcast %"struct.spvtools::opt::Operand"** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast %"class.std::__1::vector"* %264 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = sub i64 %267, %269
  %271 = sdiv exact i64 %270, 48
  %272 = trunc i64 %271 to i32
  %273 = icmp ugt i32 %272, 3
  br i1 %273, label %274, label %289

274:                                              ; preds = %262, %278
  %275 = phi i32 [ %279, %278 ], [ 3, %262 ]
  %276 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %250, i32 %275) #11
  %277 = icmp eq i32 %276, %263
  br i1 %277, label %286, label %278

278:                                              ; preds = %274
  %279 = add i32 %275, 2
  %280 = load i64, i64* %266, align 8
  %281 = load i64, i64* %268, align 8
  %282 = sub i64 %280, %281
  %283 = sdiv exact i64 %282, 48
  %284 = trunc i64 %283 to i32
  %285 = icmp ult i32 %279, %284
  br i1 %285, label %274, label %289

286:                                              ; preds = %274
  %287 = add i32 %275, -1
  %288 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %250, i32 %287) #11
  br label %289

289:                                              ; preds = %278, %286, %262
  %290 = phi i32 [ %288, %286 ], [ 0, %262 ], [ 0, %278 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %223) #11
  %291 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %250, i64 0, i32 4
  %292 = load i8, i8* %291, align 1, !range !8
  %293 = icmp eq i8 %292, 0
  br i1 %293, label %299, label %294

294:                                              ; preds = %289
  %295 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %250, i64 0, i32 3
  %296 = load i8, i8* %295, align 4, !range !8
  %297 = zext i8 %296 to i32
  %298 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %250, i32 %297) #11
  br label %299

299:                                              ; preds = %294, %289
  %300 = phi i32 [ %298, %294 ], [ 0, %289 ]
  store i32 %300, i32* %15, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #11
  store i32* %15, i32** %226, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %227) #11
  %301 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %224, i32* nonnull dereferenceable(4) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1084"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %8) #11
  %302 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %301, 0
  %303 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %302, i64 2
  %304 = bitcast %"struct.std::__1::__hash_node_base.254"* %303 to %"struct.std::__1::pair.1014"*
  %305 = getelementptr inbounds %"struct.std::__1::pair.1014", %"struct.std::__1::pair.1014"* %304, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %227) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #11
  store i32 %290, i32* %305, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %223) #11
  %306 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %249, i64 1
  %307 = icmp eq %"class.spvtools::opt::Instruction"** %306, %219
  br i1 %307, label %228, label %248

308:                                              ; preds = %387, %228
  %309 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 2, i32 0, i32 0
  %310 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %309, align 8
  %311 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %312 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %311, align 8
  %313 = icmp eq %"class.std::__1::unique_ptr.40"* %310, %312
  br i1 %313, label %390, label %314

314:                                              ; preds = %308
  %315 = bitcast %"class.std::__1::function.1110"* %10 to i8*
  %316 = ptrtoint %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0 to i64
  %317 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %10, i64 0, i32 0, i32 1, i32 0
  %318 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %10, i64 0, i32 0, i32 2
  %319 = bitcast %"class.std::__1::function.1110"* %10 to i64*
  %320 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %10, i64 0, i32 0, i32 0, i32 0
  %321 = bitcast %"class.std::__1::function.1116"* %9 to i8*
  %322 = ptrtoint %"class.std::__1::function.1110"* %10 to i64
  %323 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %9, i64 0, i32 0, i32 1, i32 0
  %324 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %9, i64 0, i32 0, i32 2
  %325 = bitcast %"class.std::__1::function.1116"* %9 to i64*
  %326 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %9, i64 0, i32 0, i32 0
  %327 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %9, i64 0, i32 0, i32 0, i32 0
  br label %410

328:                                              ; preds = %387, %234
  %329 = phi %"class.spvtools::opt::BasicBlock"** [ %230, %234 ], [ %388, %387 ]
  %330 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %329, align 8
  %331 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %330, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %332 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %330, i64 0, i32 2, i32 0, i32 1
  %333 = bitcast %"class.spvtools::opt::Instruction"** %331 to i64*
  %334 = load i64, i64* %333, align 8
  %335 = inttoptr i64 %334 to %"class.spvtools::opt::Instruction"*
  %336 = icmp eq %"class.spvtools::opt::Instruction"* %332, %335
  br i1 %336, label %387, label %337

337:                                              ; preds = %328, %379
  %338 = phi %"class.spvtools::opt::Instruction"* [ %385, %379 ], [ %335, %328 ]
  %339 = phi i64 [ %384, %379 ], [ %334, %328 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %235) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS8_11InstructionEE3$_2S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %237, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS5_11InstructionEE3$_2FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %238, align 8
  store i64 %236, i64* %239, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %241) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %243, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %244, align 8
  store i64 %242, i64* %245, align 8
  %340 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %338, i64 0, i32 6, i32 0, i32 0
  %341 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %340, align 8
  %342 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %338, i64 0, i32 6, i32 0, i32 1
  %343 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %342, align 8
  %344 = icmp eq %"struct.spvtools::opt::Operand"* %341, %343
  br i1 %344, label %365, label %345

345:                                              ; preds = %337, %360
  %346 = phi %"struct.spvtools::opt::Operand"* [ %361, %360 ], [ %341, %337 ]
  %347 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %346, i64 0, i32 0
  %348 = load i32, i32* %347, align 8
  %349 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %348) #11
  br i1 %349, label %350, label %360

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %346, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %352 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %351, align 8
  %353 = icmp eq %"class.std::__1::vector.3"* %352, null
  %354 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %352, i64 0, i32 0, i32 0
  %355 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %346, i64 0, i32 1, i32 2
  %356 = select i1 %353, i32** %355, i32** %354
  %357 = load i32*, i32** %356, align 8
  %358 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %243, align 8
  %359 = call zeroext i1 %358(%"union.std::__1::__function::__policy_storage"* nonnull %246, i32* %357) #11
  br i1 %359, label %360, label %363

360:                                              ; preds = %350, %345
  %361 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %346, i64 1
  %362 = icmp eq %"struct.spvtools::opt::Operand"* %361, %343
  br i1 %362, label %363, label %345

363:                                              ; preds = %360, %350
  %364 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %244, align 8
  br label %365

365:                                              ; preds = %363, %337
  %366 = phi %"struct.std::__1::__function::__policy"* [ %364, %363 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %337 ]
  %367 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %366, i64 0, i32 1
  %368 = load void (i8*)*, void (i8*)** %367, align 8
  %369 = icmp eq void (i8*)* %368, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %365
  %371 = load i8*, i8** %247, align 8
  call void %368(i8* %371) #11
  br label %372

372:                                              ; preds = %370, %365
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %241) #11
  %373 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %238, align 8
  %374 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %373, i64 0, i32 1
  %375 = load void (i8*)*, void (i8*)** %374, align 8
  %376 = icmp eq void (i8*)* %375, null
  br i1 %376, label %379, label %377

377:                                              ; preds = %372
  %378 = load i8*, i8** %240, align 8
  call void %375(i8* %378) #11
  br label %379

379:                                              ; preds = %377, %372
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %235) #11
  %380 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %150, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %380, %"class.spvtools::opt::Instruction"* %338) #11
  %381 = inttoptr i64 %339 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %382 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %381, i64 0, i32 1
  %383 = bitcast %"class.spvtools::opt::Instruction"** %382 to i64*
  %384 = load i64, i64* %383, align 8
  %385 = inttoptr i64 %384 to %"class.spvtools::opt::Instruction"*
  %386 = icmp eq %"class.spvtools::opt::Instruction"* %332, %385
  br i1 %386, label %387, label %337

387:                                              ; preds = %379, %328
  %388 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %329, i64 1
  %389 = icmp eq %"class.spvtools::opt::BasicBlock"** %388, %232
  br i1 %389, label %308, label %328

390:                                              ; preds = %470, %308
  %391 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %392 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %391, align 8
  %393 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %394 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %393, align 8
  %395 = icmp eq %"class.spvtools::opt::Instruction"** %392, %394
  br i1 %395, label %473, label %396

396:                                              ; preds = %390
  %397 = bitcast %"class.std::__1::function.1110"* %12 to i8*
  %398 = ptrtoint %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0 to i64
  %399 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %12, i64 0, i32 0, i32 1, i32 0
  %400 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %12, i64 0, i32 0, i32 2
  %401 = bitcast %"class.std::__1::function.1110"* %12 to i64*
  %402 = bitcast %"class.std::__1::function.1116"* %11 to i8*
  %403 = ptrtoint %"class.std::__1::function.1110"* %12 to i64
  %404 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %11, i64 0, i32 0, i32 1, i32 0
  %405 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %11, i64 0, i32 0, i32 2
  %406 = bitcast %"class.std::__1::function.1116"* %11 to i64*
  %407 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %11, i64 0, i32 0, i32 0
  %408 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %11, i64 0, i32 0, i32 0, i32 0
  %409 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %12, i64 0, i32 0, i32 0, i32 0
  br label %480

410:                                              ; preds = %470, %314
  %411 = phi %"class.std::__1::unique_ptr.40"* [ %310, %314 ], [ %471, %470 ]
  %412 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %411, i64 0, i32 0, i32 0, i32 0
  %413 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %412, align 8
  %414 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %413, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %415 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %413, i64 0, i32 2, i32 0, i32 1
  %416 = bitcast %"class.spvtools::opt::Instruction"** %414 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = inttoptr i64 %417 to %"class.spvtools::opt::Instruction"*
  %419 = icmp eq %"class.spvtools::opt::Instruction"* %415, %418
  br i1 %419, label %470, label %420

420:                                              ; preds = %410, %462
  %421 = phi %"class.spvtools::opt::Instruction"* [ %468, %462 ], [ %418, %410 ]
  %422 = phi i64 [ %467, %462 ], [ %417, %410 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %315) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS8_11InstructionEE3$_2S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %317, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS5_11InstructionEE3$_2FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %318, align 8
  store i64 %316, i64* %319, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %321) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %323, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %324, align 8
  store i64 %322, i64* %325, align 8
  %423 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %421, i64 0, i32 6, i32 0, i32 0
  %424 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %423, align 8
  %425 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %421, i64 0, i32 6, i32 0, i32 1
  %426 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %425, align 8
  %427 = icmp eq %"struct.spvtools::opt::Operand"* %424, %426
  br i1 %427, label %448, label %428

428:                                              ; preds = %420, %443
  %429 = phi %"struct.spvtools::opt::Operand"* [ %444, %443 ], [ %424, %420 ]
  %430 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %429, i64 0, i32 0
  %431 = load i32, i32* %430, align 8
  %432 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %431) #11
  br i1 %432, label %433, label %443

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %429, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %435 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %434, align 8
  %436 = icmp eq %"class.std::__1::vector.3"* %435, null
  %437 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %435, i64 0, i32 0, i32 0
  %438 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %429, i64 0, i32 1, i32 2
  %439 = select i1 %436, i32** %438, i32** %437
  %440 = load i32*, i32** %439, align 8
  %441 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %323, align 8
  %442 = call zeroext i1 %441(%"union.std::__1::__function::__policy_storage"* nonnull %326, i32* %440) #11
  br i1 %442, label %443, label %446

443:                                              ; preds = %433, %428
  %444 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %429, i64 1
  %445 = icmp eq %"struct.spvtools::opt::Operand"* %444, %426
  br i1 %445, label %446, label %428

446:                                              ; preds = %443, %433
  %447 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %324, align 8
  br label %448

448:                                              ; preds = %446, %420
  %449 = phi %"struct.std::__1::__function::__policy"* [ %447, %446 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %420 ]
  %450 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %449, i64 0, i32 1
  %451 = load void (i8*)*, void (i8*)** %450, align 8
  %452 = icmp eq void (i8*)* %451, null
  br i1 %452, label %455, label %453

453:                                              ; preds = %448
  %454 = load i8*, i8** %327, align 8
  call void %451(i8* %454) #11
  br label %455

455:                                              ; preds = %453, %448
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %321) #11
  %456 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %318, align 8
  %457 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %456, i64 0, i32 1
  %458 = load void (i8*)*, void (i8*)** %457, align 8
  %459 = icmp eq void (i8*)* %458, null
  br i1 %459, label %462, label %460

460:                                              ; preds = %455
  %461 = load i8*, i8** %320, align 8
  call void %458(i8* %461) #11
  br label %462

462:                                              ; preds = %460, %455
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %315) #11
  %463 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %150, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %463, %"class.spvtools::opt::Instruction"* %421) #11
  %464 = inttoptr i64 %422 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %465 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %464, i64 0, i32 1
  %466 = bitcast %"class.spvtools::opt::Instruction"** %465 to i64*
  %467 = load i64, i64* %466, align 8
  %468 = inttoptr i64 %467 to %"class.spvtools::opt::Instruction"*
  %469 = icmp eq %"class.spvtools::opt::Instruction"* %415, %468
  br i1 %469, label %470, label %420

470:                                              ; preds = %462, %410
  %471 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %411, i64 1
  %472 = icmp eq %"class.std::__1::unique_ptr.40"* %471, %312
  br i1 %472, label %390, label %410

473:                                              ; preds = %522, %390
  %474 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %161, align 8
  %475 = icmp eq %"class.spvtools::opt::Instruction"** %474, null
  br i1 %475, label %526, label %476

476:                                              ; preds = %473
  %477 = ptrtoint %"class.spvtools::opt::Instruction"** %474 to i64
  %478 = bitcast %"class.spvtools::opt::Instruction"*** %162 to i64*
  store i64 %477, i64* %478, align 8
  %479 = bitcast %"class.spvtools::opt::Instruction"** %474 to i8*
  call void @_ZdlPv(i8* %479) #12
  br label %526

480:                                              ; preds = %522, %396
  %481 = phi %"class.spvtools::opt::Instruction"** [ %392, %396 ], [ %524, %522 ]
  %482 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %481, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %397) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS8_11InstructionEE3$_2S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %399, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS5_11InstructionEE3$_2FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %400, align 8
  store i64 %398, i64* %401, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %402) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %404, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %405, align 8
  store i64 %403, i64* %406, align 8
  %483 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %482, i64 0, i32 6, i32 0, i32 0
  %484 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %483, align 8
  %485 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %482, i64 0, i32 6, i32 0, i32 1
  %486 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %485, align 8
  %487 = icmp eq %"struct.spvtools::opt::Operand"* %484, %486
  br i1 %487, label %508, label %488

488:                                              ; preds = %480, %503
  %489 = phi %"struct.spvtools::opt::Operand"* [ %504, %503 ], [ %484, %480 ]
  %490 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %489, i64 0, i32 0
  %491 = load i32, i32* %490, align 8
  %492 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %491) #11
  br i1 %492, label %493, label %503

493:                                              ; preds = %488
  %494 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %489, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %495 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %494, align 8
  %496 = icmp eq %"class.std::__1::vector.3"* %495, null
  %497 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %495, i64 0, i32 0, i32 0
  %498 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %489, i64 0, i32 1, i32 2
  %499 = select i1 %496, i32** %498, i32** %497
  %500 = load i32*, i32** %499, align 8
  %501 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %404, align 8
  %502 = call zeroext i1 %501(%"union.std::__1::__function::__policy_storage"* nonnull %407, i32* %500) #11
  br i1 %502, label %503, label %506

503:                                              ; preds = %493, %488
  %504 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %489, i64 1
  %505 = icmp eq %"struct.spvtools::opt::Operand"* %504, %486
  br i1 %505, label %506, label %488

506:                                              ; preds = %503, %493
  %507 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %405, align 8
  br label %508

508:                                              ; preds = %506, %480
  %509 = phi %"struct.std::__1::__function::__policy"* [ %507, %506 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %480 ]
  %510 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %509, i64 0, i32 1
  %511 = load void (i8*)*, void (i8*)** %510, align 8
  %512 = icmp eq void (i8*)* %511, null
  br i1 %512, label %515, label %513

513:                                              ; preds = %508
  %514 = load i8*, i8** %408, align 8
  call void %511(i8* %514) #11
  br label %515

515:                                              ; preds = %513, %508
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %402) #11
  %516 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %400, align 8
  %517 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %516, i64 0, i32 1
  %518 = load void (i8*)*, void (i8*)** %517, align 8
  %519 = icmp eq void (i8*)* %518, null
  br i1 %519, label %522, label %520

520:                                              ; preds = %515
  %521 = load i8*, i8** %409, align 8
  call void %518(i8* %521) #11
  br label %522

522:                                              ; preds = %520, %515
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %397) #11
  %523 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %150, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %523, %"class.spvtools::opt::Instruction"* %482) #11
  %524 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %481, i64 1
  %525 = icmp eq %"class.spvtools::opt::Instruction"** %524, %394
  br i1 %525, label %473, label %480

526:                                              ; preds = %473, %476
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %160) #11
  %527 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 9
  store i8 1, i8* %527, align 8
  %528 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 6
  %529 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %528, align 8
  %530 = icmp eq %"class.spvtools::opt::Loop"* %529, null
  br i1 %530, label %532, label %531

531:                                              ; preds = %526
  call fastcc void @_ZNK8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl15AddBlocksToLoopEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, %"class.spvtools::opt::Loop"* nonnull %529)
  br label %532

532:                                              ; preds = %526, %531
  %533 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %99, align 8
  %534 = bitcast %"class.spvtools::opt::UptrVectorIterator.1162"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %534) #11
  %535 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1162", %"class.spvtools::opt::UptrVectorIterator.1162"* %4, i64 0, i32 0
  %536 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1162", %"class.spvtools::opt::UptrVectorIterator.1162"* %4, i64 0, i32 1, i32 0
  %537 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 1
  %538 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %537, align 8
  %539 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %538, i64 0, i32 3
  %540 = bitcast %"class.std::__1::vector.38"* %539 to i64*
  %541 = load i64, i64* %540, align 8
  store %"class.std::__1::vector.38"* %539, %"class.std::__1::vector.38"** %535, align 8
  %542 = bitcast %"class.std::__1::unique_ptr.40"** %536 to i64*
  store i64 %541, i64* %542, align 8
  %543 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %538, i64 0, i32 3, i32 0, i32 1
  %544 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %543, align 8
  %545 = inttoptr i64 %541 to %"class.std::__1::unique_ptr.40"*
  %546 = icmp eq %"class.std::__1::unique_ptr.40"* %544, %545
  br i1 %546, label %588, label %547

547:                                              ; preds = %532
  %548 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %533, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %549

549:                                              ; preds = %580, %547
  %550 = phi %"class.std::__1::unique_ptr.40"* [ %545, %547 ], [ %581, %580 ]
  %551 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %550, i64 0, i32 0, i32 0, i32 0
  %552 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %551, align 8
  %553 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %552, i64 0, i32 1, i32 0, i32 0, i32 0
  %554 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %553, align 8
  %555 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %554, i64 0, i32 4
  %556 = load i8, i8* %555, align 1, !range !8
  %557 = icmp eq i8 %556, 0
  br i1 %557, label %563, label %558

558:                                              ; preds = %549
  %559 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %554, i64 0, i32 3
  %560 = load i8, i8* %559, align 4, !range !8
  %561 = zext i8 %560 to i32
  %562 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %554, i32 %561) #11
  br label %563

563:                                              ; preds = %558, %549
  %564 = phi i32 [ %562, %558 ], [ 0, %549 ]
  %565 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %548, align 8
  %566 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %565, i64 0, i32 4
  %567 = load i8, i8* %566, align 1, !range !8
  %568 = icmp eq i8 %567, 0
  br i1 %568, label %574, label %569

569:                                              ; preds = %563
  %570 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %565, i64 0, i32 3
  %571 = load i8, i8* %570, align 4, !range !8
  %572 = zext i8 %571 to i32
  %573 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %565, i32 %572) #11
  br label %574

574:                                              ; preds = %569, %563
  %575 = phi i32 [ %573, %569 ], [ 0, %563 ]
  %576 = icmp eq i32 %564, %575
  br i1 %576, label %577, label %580

577:                                              ; preds = %574
  %578 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 2
  %579 = call { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } @_ZN8spvtools3opt18UptrVectorIteratorINS0_10BasicBlockELb0EE12InsertBeforeILb0EEENSt3__19enable_ifIXntT_ES3_E4typeEPNS5_6vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISD_EEEE(%"class.spvtools::opt::UptrVectorIterator.1162"* nonnull %4, %"class.std::__1::vector.38"* %578) #11
  br label %588

580:                                              ; preds = %574
  %581 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %550, i64 1
  store %"class.std::__1::unique_ptr.40"* %581, %"class.std::__1::unique_ptr.40"** %536, align 8
  %582 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %537, align 8
  %583 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %582, i64 0, i32 3, i32 0, i32 1
  %584 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %583, align 8
  %585 = icmp ne %"class.spvtools::opt::Function"* %538, %582
  %586 = icmp ne %"class.std::__1::unique_ptr.40"* %581, %584
  %587 = or i1 %585, %586
  br i1 %587, label %549, label %588

588:                                              ; preds = %580, %532, %577
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %534) #11
  %589 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %150, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %589, i32 67) #11
  %590 = bitcast %"class.std::__1::vector.976"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %590) #11
  %591 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %3, i64 0, i32 0, i32 0
  %592 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %590, i8 0, i64 24, i1 false) #11
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %1, %"class.std::__1::vector.976"* nonnull dereferenceable(24) %3) #11
  %593 = bitcast %"class.spvtools::opt::Instruction"*** %592 to i64*
  %594 = load i64, i64* %593, align 8
  %595 = bitcast %"class.std::__1::vector.976"* %3 to i64*
  %596 = load i64, i64* %595, align 8
  %597 = icmp eq i64 %594, %596
  br i1 %597, label %603, label %598

598:                                              ; preds = %588
  %599 = bitcast %"class.spvtools::opt::Instruction"*** %25 to i64*
  %600 = bitcast %"class.std::__1::vector.976"* %24 to i64*
  %601 = bitcast %"class.spvtools::opt::Instruction"*** %27 to i64*
  %602 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %24, i64 0, i32 0, i32 0
  br label %608

603:                                              ; preds = %735, %588
  %604 = phi i64 [ %594, %588 ], [ %738, %735 ]
  %605 = icmp eq i64 %604, 0
  br i1 %605, label %742, label %606

606:                                              ; preds = %603
  store i64 %604, i64* %593, align 8
  %607 = inttoptr i64 %604 to i8*
  call void @_ZdlPv(i8* %607) #12
  br label %742

608:                                              ; preds = %735, %598
  %609 = phi i64 [ 0, %598 ], [ %736, %735 ]
  %610 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %391, align 8
  %611 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %610, i64 %609
  %612 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %611, align 8
  %613 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %94, align 8
  %614 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %613, i64 0, i32 1, i32 0, i32 0, i32 0
  %615 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %614, align 8
  %616 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %615, i64 0, i32 4
  %617 = load i8, i8* %616, align 1, !range !8
  %618 = icmp eq i8 %617, 0
  br i1 %618, label %624, label %619

619:                                              ; preds = %608
  %620 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %615, i64 0, i32 3
  %621 = load i8, i8* %620, align 4, !range !8
  %622 = zext i8 %621 to i32
  %623 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %615, i32 %622) #11
  br label %624

624:                                              ; preds = %619, %608
  %625 = phi i32 [ %623, %619 ], [ 0, %608 ]
  %626 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %612, i64 0, i32 6
  %627 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %612, i64 0, i32 6, i32 0, i32 1
  %628 = bitcast %"struct.spvtools::opt::Operand"** %627 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = bitcast %"class.std::__1::vector"* %626 to i64*
  %631 = load i64, i64* %630, align 8
  %632 = sub i64 %629, %631
  %633 = sdiv exact i64 %632, 48
  %634 = trunc i64 %633 to i32
  %635 = icmp ugt i32 %634, 3
  br i1 %635, label %636, label %651

636:                                              ; preds = %624, %640
  %637 = phi i32 [ %641, %640 ], [ 3, %624 ]
  %638 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %612, i32 %637) #11
  %639 = icmp eq i32 %638, %625
  br i1 %639, label %648, label %640

640:                                              ; preds = %636
  %641 = add i32 %637, 2
  %642 = load i64, i64* %628, align 8
  %643 = load i64, i64* %630, align 8
  %644 = sub i64 %642, %643
  %645 = sdiv exact i64 %644, 48
  %646 = trunc i64 %645 to i32
  %647 = icmp ult i32 %641, %646
  br i1 %647, label %636, label %651

648:                                              ; preds = %636
  %649 = add i32 %637, -1
  %650 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %612, i32 %649) #11
  br label %651

651:                                              ; preds = %640, %648, %624
  %652 = phi i32 [ %650, %648 ], [ 0, %624 ], [ 0, %640 ]
  %653 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %150, align 8
  %654 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %591, align 8
  %655 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %654, i64 %609
  %656 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %655, align 8
  %657 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %656, i64 0, i32 4
  %658 = load i8, i8* %657, align 1, !range !8
  %659 = icmp eq i8 %658, 0
  br i1 %659, label %665, label %660

660:                                              ; preds = %651
  %661 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %656, i64 0, i32 3
  %662 = load i8, i8* %661, align 4, !range !8
  %663 = zext i8 %662 to i32
  %664 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %656, i32 %663) #11
  br label %665

665:                                              ; preds = %660, %651
  %666 = phi i32 [ %664, %660 ], [ 0, %651 ]
  %667 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %653, i32 %666, i32 %652) #11
  %668 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %591, align 8
  %669 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %668, i64 %609
  %670 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %25, align 8
  %671 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %27, align 8
  %672 = icmp eq %"class.spvtools::opt::Instruction"** %670, %671
  %673 = ptrtoint %"class.spvtools::opt::Instruction"** %671 to i64
  br i1 %672, label %680, label %674

674:                                              ; preds = %665
  %675 = bitcast %"class.spvtools::opt::Instruction"** %669 to i64*
  %676 = load i64, i64* %675, align 8
  %677 = bitcast %"class.spvtools::opt::Instruction"** %670 to i64*
  store i64 %676, i64* %677, align 8
  %678 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %670, i64 1
  %679 = ptrtoint %"class.spvtools::opt::Instruction"** %678 to i64
  store i64 %679, i64* %599, align 8
  br label %735

680:                                              ; preds = %665
  %681 = ptrtoint %"class.spvtools::opt::Instruction"** %670 to i64
  %682 = load i64, i64* %600, align 8
  %683 = sub i64 %681, %682
  %684 = ashr exact i64 %683, 3
  %685 = add nsw i64 %684, 1
  %686 = icmp ugt i64 %685, 2305843009213693951
  br i1 %686, label %687, label %689

687:                                              ; preds = %680
  %688 = bitcast %"class.std::__1::vector.976"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %688) #13
  unreachable

689:                                              ; preds = %680
  %690 = sub i64 %673, %682
  %691 = ashr exact i64 %690, 3
  %692 = icmp ult i64 %691, 1152921504606846975
  br i1 %692, label %693, label %701

693:                                              ; preds = %689
  %694 = ashr exact i64 %690, 2
  %695 = icmp ult i64 %694, %685
  %696 = select i1 %695, i64 %685, i64 %694
  %697 = icmp eq i64 %696, 0
  br i1 %697, label %706, label %698

698:                                              ; preds = %693
  %699 = icmp ugt i64 %696, 2305843009213693951
  br i1 %699, label %700, label %701

700:                                              ; preds = %698
  call void @abort() #13
  unreachable

701:                                              ; preds = %698, %689
  %702 = phi i64 [ %696, %698 ], [ 2305843009213693951, %689 ]
  %703 = shl i64 %702, 3
  %704 = call i8* @_Znwm(i64 %703) #12
  %705 = bitcast i8* %704 to %"class.spvtools::opt::Instruction"**
  br label %706

706:                                              ; preds = %701, %693
  %707 = phi i64 [ %702, %701 ], [ 0, %693 ]
  %708 = phi %"class.spvtools::opt::Instruction"** [ %705, %701 ], [ null, %693 ]
  %709 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %708, i64 %684
  %710 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %708, i64 %707
  %711 = ptrtoint %"class.spvtools::opt::Instruction"** %710 to i64
  %712 = bitcast %"class.spvtools::opt::Instruction"** %669 to i64*
  %713 = load i64, i64* %712, align 8
  %714 = bitcast %"class.spvtools::opt::Instruction"** %709 to i64*
  store i64 %713, i64* %714, align 8
  %715 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %709, i64 1
  %716 = ptrtoint %"class.spvtools::opt::Instruction"** %715 to i64
  %717 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %602, align 8
  %718 = load i64, i64* %599, align 8
  %719 = ptrtoint %"class.spvtools::opt::Instruction"** %717 to i64
  %720 = sub i64 %718, %719
  %721 = ashr exact i64 %720, 3
  %722 = sub nsw i64 0, %721
  %723 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %709, i64 %722
  %724 = ptrtoint %"class.spvtools::opt::Instruction"** %723 to i64
  %725 = icmp sgt i64 %720, 0
  br i1 %725, label %726, label %730

726:                                              ; preds = %706
  %727 = bitcast %"class.spvtools::opt::Instruction"** %723 to i8*
  %728 = bitcast %"class.spvtools::opt::Instruction"** %717 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %727, i8* align 8 %728, i64 %720, i1 false) #11
  %729 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %602, align 8
  br label %730

730:                                              ; preds = %726, %706
  %731 = phi %"class.spvtools::opt::Instruction"** [ %717, %706 ], [ %729, %726 ]
  store i64 %724, i64* %600, align 8
  store i64 %716, i64* %599, align 8
  store i64 %711, i64* %601, align 8
  %732 = icmp eq %"class.spvtools::opt::Instruction"** %731, null
  br i1 %732, label %735, label %733

733:                                              ; preds = %730
  %734 = bitcast %"class.spvtools::opt::Instruction"** %731 to i8*
  call void @_ZdlPv(i8* %734) #12
  br label %735

735:                                              ; preds = %733, %730, %674
  %736 = add nuw i64 %609, 1
  %737 = load i64, i64* %593, align 8
  %738 = load i64, i64* %595, align 8
  %739 = sub i64 %737, %738
  %740 = ashr exact i64 %739, 3
  %741 = icmp ult i64 %736, %740
  br i1 %741, label %608, label %603

742:                                              ; preds = %603, %606
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %590) #11
  %743 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %744 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %743, align 8
  %745 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %25, align 8
  %746 = icmp eq %"class.spvtools::opt::Instruction"** %744, %745
  br i1 %746, label %754, label %747

747:                                              ; preds = %742, %747
  %748 = phi %"class.spvtools::opt::Instruction"** [ %752, %747 ], [ %744, %742 ]
  %749 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %748, align 8
  %750 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %150, align 8
  %751 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %750, %"class.spvtools::opt::Instruction"* %749) #11
  %752 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %748, i64 1
  %753 = icmp eq %"class.spvtools::opt::Instruction"** %752, %745
  br i1 %753, label %754, label %747

754:                                              ; preds = %747, %742
  %755 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %150, align 8
  call void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %755, i32 65) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImplD2Ev(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::Instruction"** %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.spvtools::opt::Instruction"** %3 to i64
  %7 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 8, i32 0, i32 1
  %8 = bitcast %"class.spvtools::opt::Instruction"*** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.spvtools::opt::Instruction"** %3 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, align 8
  %13 = icmp eq %"class.spvtools::opt::BasicBlock"** %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"class.spvtools::opt::BasicBlock"** %12 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 5, i32 0, i32 1
  %17 = bitcast %"class.spvtools::opt::BasicBlock"*** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.spvtools::opt::BasicBlock"** %12 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"struct.std::__1::__hash_node_base"* [ %26, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %30, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %33, %29
  %36 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.254"* %37, null
  br i1 %38, label %45, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"struct.std::__1::__hash_node_base.254"* [ %42, %39 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %41, align 8
  %43 = bitcast %"struct.std::__1::__hash_node_base.254"* %40 to i8*
  tail call void @_ZdlPv(i8* %43) #12
  %44 = icmp eq %"struct.std::__1::__hash_node_base.254"* %42, null
  br i1 %44, label %45, label %39

45:                                               ; preds = %39, %35
  %46 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %46, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.254"** %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = bitcast %"struct.std::__1::__hash_node_base.254"** %47 to i8*
  tail call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %45, %49
  %52 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.333"* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %51, %55
  %56 = phi %"struct.std::__1::__hash_node_base.333"* [ %58, %55 ], [ %53, %51 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %56, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %57, align 8
  %59 = bitcast %"struct.std::__1::__hash_node_base.333"* %56 to i8*
  tail call void @_ZdlPv(i8* %59) #12
  %60 = icmp eq %"struct.std::__1::__hash_node_base.333"* %58, null
  br i1 %60, label %61, label %55

61:                                               ; preds = %55, %51
  %62 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %62, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.333"** %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = bitcast %"struct.std::__1::__hash_node_base.333"** %63 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %69 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %68, align 8
  %70 = icmp eq %"class.spvtools::opt::Instruction"** %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = ptrtoint %"class.spvtools::opt::Instruction"** %69 to i64
  %73 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %74 = bitcast %"class.spvtools::opt::Instruction"*** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast %"class.spvtools::opt::Instruction"** %69 to i8*
  tail call void @_ZdlPv(i8* %75) #12
  br label %76

76:                                               ; preds = %67, %71
  %77 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %78 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %77, align 8
  %79 = icmp eq %"class.spvtools::opt::Instruction"** %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = ptrtoint %"class.spvtools::opt::Instruction"** %78 to i64
  %82 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %83 = bitcast %"class.spvtools::opt::Instruction"*** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast %"class.spvtools::opt::Instruction"** %78 to i8*
  tail call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %76, %80
  %86 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %86, align 8
  %88 = icmp eq %"class.spvtools::opt::Instruction"** %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %85
  %90 = ptrtoint %"class.spvtools::opt::Instruction"** %87 to i64
  %91 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"*** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = bitcast %"class.spvtools::opt::Instruction"** %87 to i8*
  tail call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %85, %89
  %95 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 2
  %96 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = icmp eq %"class.std::__1::unique_ptr.40"* %97, null
  br i1 %98, label %119, label %99

99:                                               ; preds = %94
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %97 to i8*
  %101 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %102 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %101, align 8
  %103 = icmp eq %"class.std::__1::unique_ptr.40"* %102, %97
  br i1 %103, label %117, label %104

104:                                              ; preds = %99, %112
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %106, %112 ], [ %102, %99 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 -1
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %106, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %107, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %107, align 8
  %109 = icmp eq %"class.spvtools::opt::BasicBlock"* %108, null
  br i1 %109, label %112, label %110

110:                                              ; preds = %104
  %111 = bitcast %"class.std::__1::unique_ptr.40"* %106 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %111, %"class.spvtools::opt::BasicBlock"* nonnull %108) #11
  br label %112

112:                                              ; preds = %110, %104
  %113 = icmp eq %"class.std::__1::unique_ptr.40"* %106, %97
  br i1 %113, label %114, label %104

114:                                              ; preds = %112
  %115 = bitcast %"class.std::__1::vector.38"* %95 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %114, %99
  %118 = phi i8* [ %116, %114 ], [ %100, %99 ]
  store %"class.std::__1::unique_ptr.40"* %97, %"class.std::__1::unique_ptr.40"** %101, align 8
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %94, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt9LoopUtils11FullyUnrollEv(%"class.spvtools::opt::LoopUtils"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.976", align 8
  %3 = alloca %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", align 8
  %4 = tail call zeroext i1 @_ZN8spvtools3opt9LoopUtils16CanPerformUnrollEv(%"class.spvtools::opt::LoopUtils"* %0)
  br i1 %4, label %5, label %64

5:                                                ; preds = %1
  %6 = bitcast %"class.std::__1::vector.976"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %2, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 2
  %10 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %10, %"class.std::__1::vector.976"* nonnull dereferenceable(24) %2) #11
  %11 = bitcast %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %11) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 bitcast (%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* @__const._ZN8spvtools3opt9LoopUtils11FullyUnrollEv.unroller to i8*), i64 384, i1 false)
  %12 = bitcast %"class.spvtools::opt::LoopUtils"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %14, i64 0, i32 1
  %16 = bitcast %"class.spvtools::opt::BasicBlock"** %15 to i64**
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3 to i64*
  store i64 %13, i64* %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 1
  %21 = bitcast %"class.spvtools::opt::Function"** %20 to i64*
  store i64 %18, i64* %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 2
  %23 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 4, i32 10
  %24 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 4, i32 10, i32 0, i32 3
  %25 = bitcast %"class.std::__1::__compressed_pair.348"* %24 to i32*
  %26 = bitcast %"class.std::__1::unordered_map.328"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #11
  %27 = bitcast %"class.std::__1::vector.38"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 152, i1 false) #11
  store i32 1065353216, i32* %25, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 4, i32 11
  %29 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 4, i32 11, i32 0, i32 3
  %30 = bitcast %"class.std::__1::__compressed_pair.269"* %29 to i32*
  %31 = bitcast %"class.std::__1::unordered_map.249"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %30, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 4, i32 12
  %33 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 4, i32 12, i32 0, i32 3
  %34 = bitcast %"class.std::__1::__compressed_pair.81"* %33 to i32*
  %35 = bitcast %"class.std::__1::unordered_map"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 5
  %37 = bitcast %"class.std::__1::vector.983"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 88, i1 false) #11
  %38 = call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %14) #11
  %39 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 6
  store %"class.spvtools::opt::BasicBlock"* %38, %"class.spvtools::opt::BasicBlock"** %39, align 8
  %40 = icmp eq %"class.spvtools::opt::BasicBlock"* %38, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %5
  %42 = bitcast %"class.spvtools::opt::BasicBlock"** %39 to i64*
  store i64 0, i64* %42, align 8
  br label %43

43:                                               ; preds = %5, %41
  %44 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop21FindConditionVariableEPKNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* %14, %"class.spvtools::opt::BasicBlock"* %38) #11
  %45 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 7
  store %"class.spvtools::opt::Instruction"* %44, %"class.spvtools::opt::Instruction"** %45, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %38, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %47 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8, !noalias !25
  %48 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 9
  %49 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 10
  %50 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 11
  %51 = call zeroext i1 @_ZNK8spvtools3opt4Loop22FindNumberOfIterationsEPKNS0_11InstructionES4_PmPlS6_(%"class.spvtools::opt::Loop"* %14, %"class.spvtools::opt::Instruction"* %44, %"class.spvtools::opt::Instruction"* %47, i64* %48, i64* %49, i64* %50) #11
  %52 = bitcast %"class.std::__1::vector.983"* %36 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %3, i64 0, i32 5, i32 0, i32 1
  %55 = bitcast %"class.spvtools::opt::BasicBlock"*** %54 to i64*
  store i64 %53, i64* %55, align 8
  call void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"* %14, %"class.std::__1::vector.983"* %36, i1 zeroext false, i1 zeroext false) #11
  %56 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl11FullyUnrollEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %3, %"class.spvtools::opt::Loop"* %56)
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImplD2Ev(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %11) #11
  %57 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %58 = icmp eq %"class.spvtools::opt::Instruction"** %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %43
  %60 = ptrtoint %"class.spvtools::opt::Instruction"** %57 to i64
  %61 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  store i64 %60, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %43, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  br label %64

64:                                               ; preds = %1, %63
  %65 = phi i1 [ true, %63 ], [ false, %1 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt9LoopUtils8FinalizeEv(%"class.spvtools::opt::LoopUtils"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %0, i64 0, i32 3
  %5 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %4, align 8
  %6 = tail call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %3, %"class.spvtools::opt::Function"* %5) #11
  tail call void @_ZN8spvtools3opt14LoopDescriptor23PostModificationCleanupEv(%"class.spvtools::opt::LoopDescriptor"* %6) #11
  ret void
}

declare %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #1

declare void @_ZN8spvtools3opt14LoopDescriptor23PostModificationCleanupEv(%"class.spvtools::opt::LoopDescriptor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt12LoopUnroller7ProcessEv(%"class.spvtools::opt::LoopUnroller"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator", align 8
  %3 = alloca %"class.spvtools::opt::LoopUtils", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::LoopUnroller", %"class.spvtools::opt::LoopUnroller"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %7, i64 0, i32 15, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %7, i64 0, i32 15, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.28"* %9, %11
  br i1 %12, label %37, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %2 to i8*
  %15 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %2, i64 0, i32 0
  %16 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %2, i64 0, i32 1
  %17 = bitcast %"class.std::__1::stack"* %16 to i8*
  %18 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast %"struct.std::__1::pair.990"*** %18 to i64*
  %20 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::pair.990"*** %20 to i64*
  %22 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %2, i64 0, i32 1, i32 0
  %25 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %2 to i64*
  %26 = bitcast %"class.spvtools::opt::LoopUtils"* %3 to i8*
  %27 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %3, i64 0, i32 0
  %28 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %3, i64 0, i32 1
  %29 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %3, i64 0, i32 2
  %30 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %3, i64 0, i32 3
  %31 = bitcast %"class.spvtools::opt::Function"** %30 to i64*
  %32 = getelementptr inbounds %"class.spvtools::opt::LoopUnroller", %"class.spvtools::opt::LoopUnroller"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.spvtools::opt::LoopUnroller", %"class.spvtools::opt::LoopUnroller"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.spvtools::opt::LoopUtils", %"class.spvtools::opt::LoopUtils"* %3, i64 0, i32 1
  %36 = bitcast %"class.spvtools::opt::LoopDescriptor"** %35 to i8*
  br label %42

37:                                               ; preds = %204, %1
  %38 = phi i8 [ 0, %1 ], [ %116, %204 ]
  %39 = and i8 %38, 1
  %40 = icmp eq i8 %39, 0
  %41 = select i1 %40, i32 17, i32 16
  ret i32 %41

42:                                               ; preds = %207, %13
  %43 = phi %"class.spvtools::opt::IRContext"* [ %5, %13 ], [ %208, %207 ]
  %44 = phi i8 [ 0, %13 ], [ %116, %207 ]
  %45 = phi %"class.std::__1::unique_ptr.28"* [ %9, %13 ], [ %205, %207 ]
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %46, align 8
  %48 = call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %43, %"class.spvtools::opt::Function"* %47) #11
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #11
  %49 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %48, i64 0, i32 1
  store %"class.spvtools::opt::Loop"* %49, %"class.spvtools::opt::Loop"** %15, align 8, !alias.scope !28
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 48, i1 false) #11, !alias.scope !28
  %50 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %48, i64 0, i32 1, i32 7, i32 0, i32 0
  %51 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %50, align 8, !noalias !28
  %52 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %48, i64 0, i32 1, i32 7, i32 0, i32 1
  %53 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %52, align 8, !noalias !28
  %54 = icmp eq %"class.spvtools::opt::Loop"** %51, %53
  br i1 %54, label %115, label %55

55:                                               ; preds = %42, %108
  %56 = phi i64 [ %111, %108 ], [ 0, %42 ]
  %57 = phi i64 [ %110, %108 ], [ 0, %42 ]
  %58 = phi i64 [ %109, %108 ], [ 0, %42 ]
  %59 = phi i64 [ %96, %108 ], [ 0, %42 ]
  %60 = phi %"class.spvtools::opt::Loop"** [ %104, %108 ], [ %51, %42 ]
  %61 = phi %"class.spvtools::opt::Loop"* [ %102, %108 ], [ %49, %42 ]
  %62 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %60, i64 1
  %63 = sub i64 %58, %57
  %64 = icmp eq i64 %63, 0
  %65 = shl i64 %63, 5
  %66 = add i64 %65, -1
  %67 = select i1 %64, i64 0, i64 %66
  %68 = add i64 %59, %56
  %69 = icmp eq i64 %67, %68
  %70 = inttoptr i64 %57 to %"struct.std::__1::pair.990"**
  %71 = inttoptr i64 %58 to %"struct.std::__1::pair.990"**
  br i1 %69, label %72, label %78

72:                                               ; preds = %55
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %24) #11
  %73 = load i64, i64* %23, align 8, !alias.scope !28
  %74 = load i64, i64* %22, align 8, !alias.scope !28
  %75 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %20, align 8, !alias.scope !28
  %76 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %18, align 8, !alias.scope !28
  %77 = add i64 %74, %73
  br label %78

78:                                               ; preds = %72, %55
  %79 = phi i64 [ %77, %72 ], [ %68, %55 ]
  %80 = phi %"struct.std::__1::pair.990"** [ %76, %72 ], [ %71, %55 ]
  %81 = phi %"struct.std::__1::pair.990"** [ %75, %72 ], [ %70, %55 ]
  %82 = icmp eq %"struct.std::__1::pair.990"** %80, %81
  br i1 %82, label %90, label %83

83:                                               ; preds = %78
  %84 = lshr i64 %79, 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %81, i64 %84
  %86 = load %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %85, align 8
  %87 = and i64 %79, 255
  %88 = getelementptr inbounds %"struct.std::__1::pair.990", %"struct.std::__1::pair.990"* %86, i64 %87
  %89 = bitcast %"struct.std::__1::pair.990"* %88 to i8*
  br label %90

90:                                               ; preds = %83, %78
  %91 = phi i8* [ %89, %83 ], [ null, %78 ]
  %92 = bitcast i8* %91 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %61, %"class.spvtools::opt::Loop"** %92, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 8
  %94 = bitcast i8* %93 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %62, %"class.spvtools::opt::Loop"*** %94, align 8
  %95 = load i64, i64* %23, align 8, !alias.scope !28
  %96 = add i64 %95, 1
  store i64 %96, i64* %23, align 8, !alias.scope !28
  %97 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %15, align 8, !alias.scope !28
  %98 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %97, i64 0, i32 7, i32 0, i32 0
  %99 = bitcast %"class.spvtools::opt::Loop"*** %98 to i64**
  %100 = load i64*, i64** %99, align 8
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %25, align 8, !alias.scope !28
  %102 = inttoptr i64 %101 to %"class.spvtools::opt::Loop"*
  %103 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %102, i64 0, i32 7, i32 0, i32 0
  %104 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %103, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %102, i64 0, i32 7, i32 0, i32 1
  %106 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %105, align 8
  %107 = icmp eq %"class.spvtools::opt::Loop"** %104, %106
  br i1 %107, label %112, label %108

108:                                              ; preds = %90
  %109 = load i64, i64* %19, align 8, !alias.scope !28
  %110 = load i64, i64* %21, align 8, !alias.scope !28
  %111 = load i64, i64* %22, align 8, !alias.scope !28
  br label %55

112:                                              ; preds = %90
  %113 = inttoptr i64 %101 to %"class.spvtools::opt::Loop"*
  %114 = icmp eq %"class.spvtools::opt::Loop"* %49, %113
  br i1 %114, label %115, label %209

115:                                              ; preds = %240, %42, %112
  %116 = phi i8 [ %44, %112 ], [ %44, %42 ], [ %241, %240 ]
  %117 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %20, align 8
  %118 = load i64, i64* %22, align 8
  %119 = lshr i64 %118, 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %117, i64 %119
  %121 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %18, align 8
  %122 = icmp eq %"struct.std::__1::pair.990"** %121, %117
  %123 = ptrtoint %"struct.std::__1::pair.990"** %121 to i64
  %124 = ptrtoint %"struct.std::__1::pair.990"** %117 to i64
  br i1 %122, label %137, label %125

125:                                              ; preds = %115
  %126 = load %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %120, align 8
  %127 = and i64 %118, 255
  %128 = getelementptr inbounds %"struct.std::__1::pair.990", %"struct.std::__1::pair.990"* %126, i64 %127
  %129 = load i64, i64* %23, align 8
  %130 = add i64 %129, %118
  %131 = lshr i64 %130, 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %117, i64 %131
  %133 = load %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %132, align 8
  %134 = and i64 %130, 255
  %135 = getelementptr inbounds %"struct.std::__1::pair.990", %"struct.std::__1::pair.990"* %133, i64 %134
  %136 = icmp eq %"struct.std::__1::pair.990"* %135, %128
  br i1 %136, label %137, label %141

137:                                              ; preds = %154, %115, %125
  store i64 0, i64* %23, align 8
  %138 = sub i64 %123, %124
  %139 = ashr exact i64 %138, 3
  %140 = icmp ugt i64 %139, 2
  br i1 %140, label %159, label %172

141:                                              ; preds = %125, %154
  %142 = phi %"struct.std::__1::pair.990"* [ %157, %154 ], [ %128, %125 ]
  %143 = phi %"struct.std::__1::pair.990"** [ %156, %154 ], [ %120, %125 ]
  %144 = getelementptr inbounds %"struct.std::__1::pair.990", %"struct.std::__1::pair.990"* %142, i64 1
  %145 = ptrtoint %"struct.std::__1::pair.990"* %144 to i64
  %146 = bitcast %"struct.std::__1::pair.990"** %143 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = sub i64 %145, %147
  %149 = icmp eq i64 %148, 4096
  br i1 %149, label %150, label %154

150:                                              ; preds = %141
  %151 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %143, i64 1
  %152 = bitcast %"struct.std::__1::pair.990"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  br label %154

154:                                              ; preds = %150, %141
  %155 = phi i64 [ %153, %150 ], [ %145, %141 ]
  %156 = phi %"struct.std::__1::pair.990"** [ %151, %150 ], [ %143, %141 ]
  %157 = inttoptr i64 %155 to %"struct.std::__1::pair.990"*
  %158 = icmp eq %"struct.std::__1::pair.990"* %135, %157
  br i1 %158, label %137, label %141

159:                                              ; preds = %137, %159
  %160 = phi %"struct.std::__1::pair.990"** [ %164, %159 ], [ %117, %137 ]
  %161 = bitcast %"struct.std::__1::pair.990"** %160 to i8**
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #12
  %163 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %20, align 8
  %164 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %163, i64 1
  store %"struct.std::__1::pair.990"** %164, %"struct.std::__1::pair.990"*** %20, align 8
  %165 = load i64, i64* %19, align 8
  %166 = ptrtoint %"struct.std::__1::pair.990"** %164 to i64
  %167 = sub i64 %165, %166
  %168 = ashr exact i64 %167, 3
  %169 = icmp ugt i64 %168, 2
  br i1 %169, label %159, label %170

170:                                              ; preds = %159
  %171 = inttoptr i64 %165 to %"struct.std::__1::pair.990"**
  br label %172

172:                                              ; preds = %170, %137
  %173 = phi %"struct.std::__1::pair.990"** [ %121, %137 ], [ %171, %170 ]
  %174 = phi %"struct.std::__1::pair.990"** [ %117, %137 ], [ %164, %170 ]
  %175 = phi i64 [ %139, %137 ], [ %168, %170 ]
  switch i64 %175, label %179 [
    i64 1, label %177
    i64 2, label %176
  ]

176:                                              ; preds = %172
  br label %177

177:                                              ; preds = %172, %176
  %178 = phi i64 [ 256, %176 ], [ 128, %172 ]
  store i64 %178, i64* %22, align 8
  br label %179

179:                                              ; preds = %177, %172
  %180 = icmp eq %"struct.std::__1::pair.990"** %174, %173
  br i1 %180, label %199, label %181

181:                                              ; preds = %179, %181
  %182 = phi %"struct.std::__1::pair.990"** [ %185, %181 ], [ %174, %179 ]
  %183 = bitcast %"struct.std::__1::pair.990"** %182 to i8**
  %184 = load i8*, i8** %183, align 8
  call void @_ZdlPv(i8* %184) #12
  %185 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %182, i64 1
  %186 = icmp eq %"struct.std::__1::pair.990"** %185, %173
  br i1 %186, label %187, label %181

187:                                              ; preds = %181
  %188 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %20, align 8
  %189 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %18, align 8
  %190 = icmp eq %"struct.std::__1::pair.990"** %189, %188
  br i1 %190, label %199, label %191

191:                                              ; preds = %187
  %192 = ptrtoint %"struct.std::__1::pair.990"** %188 to i64
  %193 = getelementptr %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %189, i64 -1
  %194 = ptrtoint %"struct.std::__1::pair.990"** %193 to i64
  %195 = sub i64 %194, %192
  %196 = lshr i64 %195, 3
  %197 = xor i64 %196, -1
  %198 = getelementptr %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %189, i64 %197
  store %"struct.std::__1::pair.990"** %198, %"struct.std::__1::pair.990"*** %18, align 8
  br label %199

199:                                              ; preds = %191, %187, %179
  %200 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %34, align 8
  %201 = icmp eq %"struct.std::__1::pair.990"** %200, null
  br i1 %201, label %204, label %202

202:                                              ; preds = %199
  %203 = bitcast %"struct.std::__1::pair.990"** %200 to i8*
  call void @_ZdlPv(i8* %203) #12
  br label %204

204:                                              ; preds = %199, %202
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #11
  call void @_ZN8spvtools3opt14LoopDescriptor23PostModificationCleanupEv(%"class.spvtools::opt::LoopDescriptor"* %48) #11
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %45, i64 1
  %206 = icmp eq %"class.std::__1::unique_ptr.28"* %205, %11
  br i1 %206, label %37, label %207

207:                                              ; preds = %204
  %208 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  br label %42

209:                                              ; preds = %112, %240
  %210 = phi %"class.spvtools::opt::Loop"* [ %242, %240 ], [ %113, %112 ]
  %211 = phi i8 [ %241, %240 ], [ %44, %112 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %212 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  store %"class.spvtools::opt::IRContext"* %212, %"class.spvtools::opt::IRContext"** %27, align 8
  %213 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %210, i64 0, i32 1
  %214 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %213, align 8
  %215 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %214, i64 0, i32 0
  %216 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %215, align 8
  %217 = call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %212, %"class.spvtools::opt::Function"* %216) #11
  store %"class.spvtools::opt::LoopDescriptor"* %217, %"class.spvtools::opt::LoopDescriptor"** %28, align 8
  store %"class.spvtools::opt::Loop"* %210, %"class.spvtools::opt::Loop"** %29, align 8
  %218 = bitcast %"class.spvtools::opt::BasicBlock"** %213 to i64**
  %219 = load i64*, i64** %218, align 8
  %220 = load i64, i64* %219, align 8
  store i64 %220, i64* %31, align 8
  %221 = bitcast i64* %219 to %"class.spvtools::opt::BasicBlock"*
  %222 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %221) #11
  %223 = icmp eq %"class.spvtools::opt::Instruction"* %222, null
  br i1 %223, label %240, label %224

224:                                              ; preds = %209
  %225 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %213, align 8
  %226 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %225) #11
  %227 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %226, i32 2) #11
  %228 = icmp eq i32 %227, 1
  br i1 %228, label %229, label %240

229:                                              ; preds = %224
  %230 = call zeroext i1 @_ZN8spvtools3opt9LoopUtils16CanPerformUnrollEv(%"class.spvtools::opt::LoopUtils"* nonnull %3)
  br i1 %230, label %231, label %240

231:                                              ; preds = %229
  %232 = load i8, i8* %32, align 1, !range !8
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %231
  %235 = call zeroext i1 @_ZN8spvtools3opt9LoopUtils11FullyUnrollEv(%"class.spvtools::opt::LoopUtils"* nonnull %3)
  br label %240

236:                                              ; preds = %231
  %237 = load i32, i32* %33, align 4
  %238 = sext i32 %237 to i64
  %239 = call zeroext i1 @_ZN8spvtools3opt9LoopUtils15PartiallyUnrollEm(%"class.spvtools::opt::LoopUtils"* nonnull %3, i64 %238)
  br label %240

240:                                              ; preds = %209, %234, %236, %224, %229
  %241 = phi i8 [ %211, %229 ], [ %211, %224 ], [ 1, %236 ], [ 1, %234 ], [ %211, %209 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #11
  call void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator"* nonnull %2) #11
  %242 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %15, align 8
  %243 = icmp eq %"class.spvtools::opt::Loop"* %242, %49
  br i1 %243, label %115, label %209
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt12LoopUnrollerD0Ev(%"class.spvtools::opt::LoopUnroller"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopUnroller", %"class.spvtools::opt::LoopUnroller"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LoopUnroller", %"class.spvtools::opt::LoopUnroller"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopUnroller", %"class.spvtools::opt::LoopUnroller"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.spvtools::opt::LoopUnroller"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt12LoopUnroller4nameEv(%"class.spvtools::opt::LoopUnroller"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt12LoopUnroller20GetPreservedAnalysesEv(%"class.spvtools::opt::LoopUnroller"*) unnamed_addr #0 comdat align 2 {
  ret i32 49295
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !8
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #11
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !8
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !8
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #11
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !8
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #11
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #11
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !8
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #11
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #11
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !8
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !8
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #11
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !8
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #11
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #11
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #12
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !8
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !8
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !8
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !8
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !8
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !8
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #11
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !8
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !8
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !8
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #11
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

declare void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"*, %"class.std::__1::vector.983"*, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl6UnrollEPNS0_4LoopEm(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"*, %"class.spvtools::opt::Loop"*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.1084", align 8
  %5 = alloca %"class.std::__1::tuple.1074", align 1
  %6 = alloca %"class.std::__1::tuple.1084", align 8
  %7 = alloca %"class.std::__1::tuple.1074", align 1
  %8 = alloca %"class.std::__1::tuple.1084", align 8
  %9 = alloca %"class.std::__1::tuple.1074", align 1
  %10 = alloca %"class.std::__1::tuple", align 8
  %11 = alloca %"class.std::__1::tuple.1074", align 1
  %12 = alloca %"class.std::__1::tuple.1084", align 8
  %13 = alloca %"class.std::__1::tuple.1074", align 1
  %14 = alloca %"class.std::__1::function.1116", align 8
  %15 = alloca %"class.std::__1::function.1110", align 8
  %16 = alloca %"class.spvtools::utils::SmallVector", align 8
  %17 = alloca %"class.spvtools::utils::SmallVector", align 8
  %18 = alloca %"class.std::__1::vector.976", align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %"class.spvtools::utils::SmallVector", align 8
  %24 = alloca %"class.std::__1::vector.976", align 16
  %25 = alloca %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 1
  %27 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, align 8
  %28 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %27) #11
  %29 = bitcast %"class.spvtools::utils::SmallVector"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %23, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %23, i64 0, i32 1
  %32 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %23, i64 0, i32 2
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %23, i64 0, i32 3, i64 0
  %34 = bitcast i32** %32 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %33, %"struct.std::__1::aligned_storage<4, 4>::type"** %34, align 8
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %23, i64 0, i32 4
  %36 = bitcast %"class.std::__1::unique_ptr.0"* %35 to i64*
  store i64 0, i64* %36, align 8
  %37 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %33 to i32*
  store i64 1, i64* %31, align 8
  store i32 2, i32* %37, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 3
  %39 = load i8, i8* %38, align 4, !range !8
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 4
  %42 = load i8, i8* %41, align 1, !range !8
  %43 = icmp eq i8 %42, 0
  %44 = select i1 %43, i64 1, i64 2
  %45 = xor i1 %43, true
  %46 = zext i1 %45 to i64
  %47 = select i1 %40, i64 %46, i64 %44
  %48 = add nuw nsw i64 %47, 2
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 6, i32 0, i32 0
  %50 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %49, align 8
  %51 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %50, i64 %48, i32 1
  %52 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %51, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %23) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %53 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %23, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %53, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %53, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %54, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %3
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %54, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %54, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %54 to i8*
  call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %3, %65
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #11
  %68 = bitcast %"class.std::__1::vector.976"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #11
  %69 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %24, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %24, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %24, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 0, i64 24, i1 false) #11
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %1, %"class.std::__1::vector.976"* nonnull dereferenceable(24) %24) #11
  %72 = bitcast %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 7
  %74 = bitcast %"class.spvtools::opt::Instruction"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 5
  %77 = bitcast %"class.spvtools::opt::BasicBlock"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 6
  %80 = bitcast %"class.spvtools::opt::BasicBlock"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25 to i64*
  store i64 %75, i64* %82, align 8
  %83 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 1
  %84 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 3
  %85 = bitcast %"class.std::__1::vector.976"* %83 to i8*
  %86 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %83, i64 1
  %87 = bitcast %"class.std::__1::vector.976"* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #11
  %88 = bitcast %"class.spvtools::opt::BasicBlock"** %84 to i64*
  store i64 %78, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 4
  %90 = bitcast %"class.spvtools::opt::BasicBlock"** %89 to i64*
  store i64 %81, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 5
  %92 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 10
  %93 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 10, i32 0, i32 3
  %94 = bitcast %"class.std::__1::__compressed_pair.348"* %93 to i32*
  %95 = bitcast %"class.std::__1::unordered_map.328"* %92 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 32, i1 false) #11
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %94, align 8
  %97 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 11
  %98 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 11, i32 0, i32 3
  %99 = bitcast %"class.std::__1::__compressed_pair.269"* %98 to i32*
  %100 = bitcast %"class.std::__1::unordered_map.249"* %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %99, align 8
  %101 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 12
  %102 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 12, i32 0, i32 3
  %103 = bitcast %"class.std::__1::__compressed_pair.81"* %102 to i32*
  %104 = bitcast %"class.std::__1::unordered_map"* %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %103, align 8
  %105 = bitcast %"class.spvtools::opt::Instruction"*** %70 to i64*
  %106 = bitcast %"class.std::__1::vector.976"* %24 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 16
  %108 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 1, i32 0, i32 1
  %109 = bitcast %"class.spvtools::opt::Instruction"*** %108 to i64*
  %110 = bitcast %"class.std::__1::vector.976"* %83 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8
  %111 = bitcast %"class.spvtools::opt::Instruction"*** %71 to i64*
  %112 = load i64, i64* %111, align 16
  %113 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %114 = bitcast %"class.spvtools::opt::Instruction"*** %113 to i64*
  store i64 %112, i64* %114, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 0, i64 24, i1 false) #11
  %115 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4
  %116 = bitcast %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %115 to i64*
  store i64 %75, i64* %116, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 1
  %118 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %117, i64 0, i32 0, i32 0
  %119 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %118, align 8
  %120 = icmp eq %"class.spvtools::opt::Instruction"** %119, null
  br i1 %120, label %130, label %121

121:                                              ; preds = %67
  %122 = ptrtoint %"class.spvtools::opt::Instruction"** %119 to i64
  %123 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %124 = bitcast %"class.spvtools::opt::Instruction"*** %123 to i64*
  store i64 %122, i64* %124, align 8
  %125 = bitcast %"class.spvtools::opt::Instruction"** %119 to i8*
  call void @_ZdlPv(i8* %125) #12
  %126 = bitcast %"class.std::__1::vector.976"* %117 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #11
  %127 = bitcast %"class.std::__1::vector.976"* %83 to <2 x i64>*
  %128 = load <2 x i64>, <2 x i64>* %127, align 8
  %129 = load i64, i64* %114, align 8
  br label %130

130:                                              ; preds = %67, %121
  %131 = phi i64 [ %129, %121 ], [ %112, %67 ]
  %132 = phi <2 x i64> [ %128, %121 ], [ %107, %67 ]
  %133 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"*** %133 to i64*
  %135 = bitcast %"class.std::__1::vector.976"* %117 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %135, align 8
  %136 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %137 = bitcast %"class.spvtools::opt::Instruction"*** %136 to i64*
  store i64 %131, i64* %137, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #11
  %138 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 2
  %139 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 2
  %140 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %138, i64 0, i32 0, i32 0
  %141 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %140, align 8
  %142 = icmp eq %"class.spvtools::opt::Instruction"** %141, null
  br i1 %142, label %149, label %143

143:                                              ; preds = %130
  %144 = ptrtoint %"class.spvtools::opt::Instruction"** %141 to i64
  %145 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %146 = bitcast %"class.spvtools::opt::Instruction"*** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = bitcast %"class.spvtools::opt::Instruction"** %141 to i8*
  call void @_ZdlPv(i8* %147) #12
  %148 = bitcast %"class.std::__1::vector.976"* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 24, i1 false) #11
  br label %149

149:                                              ; preds = %130, %143
  %150 = bitcast %"class.std::__1::vector.976"* %138 to i64*
  %151 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 2, i32 0, i32 1
  %152 = bitcast %"class.spvtools::opt::Instruction"*** %151 to i64*
  %153 = bitcast %"class.std::__1::vector.976"* %139 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8
  %155 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %156 = bitcast %"class.spvtools::opt::Instruction"*** %155 to i64*
  %157 = bitcast %"class.std::__1::vector.976"* %138 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %157, align 8
  %158 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %159 = bitcast %"class.spvtools::opt::Instruction"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 2, i32 0, i32 0
  %162 = bitcast %"class.spvtools::opt::Instruction"*** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast %"class.std::__1::vector.976"* %139 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 24, i1 false) #11
  %164 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 3
  %165 = bitcast %"class.spvtools::opt::BasicBlock"** %164 to i8*
  %166 = bitcast %"class.spvtools::opt::BasicBlock"** %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 56, i1 false) #11
  %167 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 10, i32 0
  %168 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 10, i32 0
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE13__move_assignERSH_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.329"* %168, %"class.std::__1::__hash_table.329"* dereferenceable(40) %167) #11
  %169 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 11, i32 0
  %170 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE13__move_assignERSD_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.250"* %170, %"class.std::__1::__hash_table.250"* dereferenceable(40) %169) #11
  %171 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 12, i32 0
  %172 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 12, i32 0
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE13__move_assignERSH_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table"* %172, %"class.std::__1::__hash_table"* dereferenceable(40) %171) #11
  %173 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base"* %174, null
  br i1 %175, label %182, label %176

176:                                              ; preds = %149, %176
  %177 = phi %"struct.std::__1::__hash_node_base"* [ %179, %176 ], [ %174, %149 ]
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %177, i64 0, i32 0
  %179 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %178, align 8
  %180 = bitcast %"struct.std::__1::__hash_node_base"* %177 to i8*
  call void @_ZdlPv(i8* %180) #12
  %181 = icmp eq %"struct.std::__1::__hash_node_base"* %179, null
  br i1 %181, label %182, label %176

182:                                              ; preds = %176, %149
  %183 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %183, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base"** %184, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %182
  %187 = bitcast %"struct.std::__1::__hash_node_base"** %184 to i8*
  call void @_ZdlPv(i8* %187) #12
  br label %188

188:                                              ; preds = %186, %182
  %189 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %190 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %189, align 8
  %191 = icmp eq %"struct.std::__1::__hash_node_base.254"* %190, null
  br i1 %191, label %198, label %192

192:                                              ; preds = %188, %192
  %193 = phi %"struct.std::__1::__hash_node_base.254"* [ %195, %192 ], [ %190, %188 ]
  %194 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %193, i64 0, i32 0
  %195 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %194, align 8
  %196 = bitcast %"struct.std::__1::__hash_node_base.254"* %193 to i8*
  call void @_ZdlPv(i8* %196) #12
  %197 = icmp eq %"struct.std::__1::__hash_node_base.254"* %195, null
  br i1 %197, label %198, label %192

198:                                              ; preds = %192, %188
  %199 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %199, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %199, align 8
  %201 = icmp eq %"struct.std::__1::__hash_node_base.254"** %200, null
  br i1 %201, label %204, label %202

202:                                              ; preds = %198
  %203 = bitcast %"struct.std::__1::__hash_node_base.254"** %200 to i8*
  call void @_ZdlPv(i8* %203) #12
  br label %204

204:                                              ; preds = %198, %202
  %205 = getelementptr inbounds %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState", %"struct.spvtools::opt::(anonymous namespace)::LoopUnrollState"* %25, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %206 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %205, align 8
  %207 = icmp eq %"struct.std::__1::__hash_node_base.333"* %206, null
  br i1 %207, label %214, label %208

208:                                              ; preds = %204, %208
  %209 = phi %"struct.std::__1::__hash_node_base.333"* [ %211, %208 ], [ %206, %204 ]
  %210 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %209, i64 0, i32 0
  %211 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %210, align 8
  %212 = bitcast %"struct.std::__1::__hash_node_base.333"* %209 to i8*
  call void @_ZdlPv(i8* %212) #12
  %213 = icmp eq %"struct.std::__1::__hash_node_base.333"* %211, null
  br i1 %213, label %214, label %208

214:                                              ; preds = %208, %204
  %215 = getelementptr inbounds %"class.std::__1::unordered_map.328", %"class.std::__1::unordered_map.328"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %215, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %215, align 8
  %217 = icmp eq %"struct.std::__1::__hash_node_base.333"** %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  %219 = bitcast %"struct.std::__1::__hash_node_base.333"** %216 to i8*
  call void @_ZdlPv(i8* %219) #12
  br label %220

220:                                              ; preds = %214, %218
  %221 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %139, i64 0, i32 0, i32 0
  %222 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %221, align 8
  %223 = icmp eq %"class.spvtools::opt::Instruction"** %222, null
  br i1 %223, label %227, label %224

224:                                              ; preds = %220
  %225 = ptrtoint %"class.spvtools::opt::Instruction"** %222 to i64
  store i64 %225, i64* %152, align 8
  %226 = bitcast %"class.spvtools::opt::Instruction"** %222 to i8*
  call void @_ZdlPv(i8* %226) #12
  br label %227

227:                                              ; preds = %220, %224
  %228 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %83, i64 0, i32 0, i32 0
  %229 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %228, align 8
  %230 = icmp eq %"class.spvtools::opt::Instruction"** %229, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %227
  %232 = ptrtoint %"class.spvtools::opt::Instruction"** %229 to i64
  store i64 %232, i64* %109, align 8
  %233 = bitcast %"class.spvtools::opt::Instruction"** %229 to i8*
  call void @_ZdlPv(i8* %233) #12
  br label %234

234:                                              ; preds = %227, %231
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %72) #11
  %235 = add i64 %2, -1
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %335, label %237

237:                                              ; preds = %234
  %238 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 5, i32 0, i32 0
  %239 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 5, i32 0, i32 1
  %240 = bitcast %"class.spvtools::utils::SmallVector"* %16 to i8*
  %241 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 8
  %242 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 0
  %243 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 1
  %244 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 2
  %245 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 3, i64 0
  %246 = bitcast i32** %244 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %247 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 4
  %248 = bitcast %"class.std::__1::unique_ptr.0"* %247 to i64*
  %249 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %245 to i32*
  %250 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %251 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 0
  %252 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 9
  %253 = bitcast %"class.spvtools::utils::SmallVector"* %17 to i8*
  %254 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 0
  %255 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 1
  %256 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 2
  %257 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 3, i64 0
  %258 = bitcast i32** %256 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %259 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 4
  %260 = bitcast %"class.std::__1::unique_ptr.0"* %259 to i64*
  %261 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %257 to i32*
  %262 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 4, i32 0, i32 0, i32 0
  %263 = bitcast %"class.std::__1::vector.976"* %18 to i8*
  %264 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %18, i64 0, i32 0, i32 0
  %265 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %18, i64 0, i32 0, i32 1
  %266 = bitcast %"class.spvtools::opt::Instruction"*** %265 to i64*
  %267 = bitcast %"class.std::__1::vector.976"* %18 to i64*
  %268 = bitcast i32* %19 to i8*
  %269 = bitcast %"class.std::__1::tuple.1084"* %12 to i8*
  %270 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %12, i64 0, i32 0, i32 0, i32 0
  %271 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %13, i64 0, i32 0
  %272 = bitcast %"class.std::__1::tuple"* %10 to i8*
  %273 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0
  %274 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %11, i64 0, i32 0
  %275 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %276 = bitcast i32* %20 to i8*
  %277 = bitcast %"class.std::__1::tuple.1084"* %8 to i8*
  %278 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %8, i64 0, i32 0, i32 0, i32 0
  %279 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %9, i64 0, i32 0
  %280 = bitcast i32* %21 to i8*
  %281 = bitcast %"class.std::__1::tuple.1084"* %6 to i8*
  %282 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %6, i64 0, i32 0, i32 0, i32 0
  %283 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %7, i64 0, i32 0
  %284 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 7
  %285 = bitcast i32* %22 to i8*
  %286 = bitcast %"class.std::__1::tuple.1084"* %4 to i8*
  %287 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %4, i64 0, i32 0, i32 0, i32 0
  %288 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %5, i64 0, i32 0
  %289 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %290 = bitcast %"struct.std::__1::__hash_node_base.333"** %289 to i64*
  %291 = bitcast %"class.std::__1::function.1110"* %15 to i8*
  %292 = ptrtoint %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0 to i64
  %293 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %15, i64 0, i32 0, i32 1, i32 0
  %294 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %15, i64 0, i32 0, i32 2
  %295 = bitcast %"class.std::__1::function.1110"* %15 to i64*
  %296 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %15, i64 0, i32 0, i32 0, i32 0
  %297 = bitcast %"class.std::__1::function.1116"* %14 to i8*
  %298 = ptrtoint %"class.std::__1::function.1110"* %15 to i64
  %299 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %14, i64 0, i32 0, i32 1, i32 0
  %300 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %14, i64 0, i32 0, i32 2
  %301 = bitcast %"class.std::__1::function.1116"* %14 to i64*
  %302 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %14, i64 0, i32 0, i32 0
  %303 = getelementptr inbounds %"class.std::__1::function.1116", %"class.std::__1::function.1116"* %14, i64 0, i32 0, i32 0, i32 0
  %304 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %305 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3
  %306 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %307 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %308 = bitcast %"class.spvtools::opt::Instruction"*** %306 to i64*
  %309 = bitcast %"class.std::__1::vector.976"* %305 to i64*
  %310 = bitcast %"class.spvtools::opt::Instruction"*** %307 to i64*
  %311 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %305, i64 0, i32 0, i32 0
  %312 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 5
  %313 = bitcast %"class.spvtools::opt::Instruction"** %312 to i64*
  %314 = bitcast %"class.spvtools::opt::BasicBlock"** %252 to i64*
  %315 = bitcast %"class.spvtools::opt::BasicBlock"** %164 to i64*
  %316 = bitcast %"class.spvtools::opt::BasicBlock"** %284 to i64*
  %317 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 4
  %318 = bitcast %"class.spvtools::opt::BasicBlock"** %317 to i64*
  %319 = bitcast %"class.std::__1::vector.976"* %117 to i8*
  %320 = bitcast %"class.std::__1::vector.976"* %138 to i8*
  %321 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 10, i32 0, i32 2, i32 0, i32 0
  %322 = bitcast %"class.spvtools::opt::Instruction"** %312 to i8*
  %323 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %324 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0, i32 2, i32 0, i32 0
  %326 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %327 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %328 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 12, i32 0, i32 2, i32 0, i32 0
  %330 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %331 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %332 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = bitcast %"class.std::__1::vector.976"* %138 to <2 x i64>*
  %334 = bitcast %"class.std::__1::vector.976"* %117 to <2 x i64>*
  br label %342

335:                                              ; preds = %976, %234
  %336 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %69, align 16
  %337 = icmp eq %"class.spvtools::opt::Instruction"** %336, null
  br i1 %337, label %341, label %338

338:                                              ; preds = %335
  %339 = ptrtoint %"class.spvtools::opt::Instruction"** %336 to i64
  store i64 %339, i64* %105, align 8
  %340 = bitcast %"class.spvtools::opt::Instruction"** %336 to i8*
  call void @_ZdlPv(i8* %340) #12
  br label %341

341:                                              ; preds = %335, %338
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #11
  ret void

342:                                              ; preds = %976, %237
  %343 = phi i64 [ 0, %237 ], [ %977, %976 ]
  %344 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %238, align 8
  %345 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %239, align 8
  %346 = icmp eq %"class.spvtools::opt::BasicBlock"** %344, %345
  br i1 %346, label %347, label %449

347:                                              ; preds = %449, %342
  %348 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %164, align 8
  %349 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %348, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %350 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %349, align 8, !noalias !33
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %240) #11
  %351 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %241, align 8
  %352 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %351, i64 0, i32 1, i32 0, i32 0, i32 0
  %353 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %352, align 8
  %354 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %353, i64 0, i32 4
  %355 = load i8, i8* %354, align 1, !range !8
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %362, label %357

357:                                              ; preds = %347
  %358 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %353, i64 0, i32 3
  %359 = load i8, i8* %358, align 4, !range !8
  %360 = zext i8 %359 to i32
  %361 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %353, i32 %360) #11
  br label %362

362:                                              ; preds = %357, %347
  %363 = phi i32 [ %361, %357 ], [ 0, %347 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %242, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %245, %"struct.std::__1::aligned_storage<4, 4>::type"** %246, align 8
  store i64 0, i64* %248, align 8
  store i64 1, i64* %243, align 8
  store i32 %363, i32* %249, align 8
  %364 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %350, i64 0, i32 3
  %365 = load i8, i8* %364, align 4, !range !8
  %366 = icmp eq i8 %365, 0
  %367 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %350, i64 0, i32 4
  %368 = load i8, i8* %367, align 1, !range !8
  %369 = icmp eq i8 %368, 0
  %370 = select i1 %369, i64 1, i64 2
  %371 = xor i1 %369, true
  %372 = zext i1 %371 to i64
  %373 = select i1 %366, i64 %372, i64 %370
  %374 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %350, i64 0, i32 6, i32 0, i32 0
  %375 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %374, align 8
  %376 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %375, i64 %373, i32 1
  %377 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %376, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %16) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %242, align 8
  %378 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %250, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %250, align 8
  %379 = icmp eq %"class.std::__1::vector.3"* %378, null
  br i1 %379, label %391, label %380

380:                                              ; preds = %362
  %381 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %378, i64 0, i32 0, i32 0
  %382 = load i32*, i32** %381, align 8
  %383 = icmp eq i32* %382, null
  br i1 %383, label %389, label %384

384:                                              ; preds = %380
  %385 = ptrtoint i32* %382 to i64
  %386 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %378, i64 0, i32 0, i32 1
  %387 = bitcast i32** %386 to i64*
  store i64 %385, i64* %387, align 8
  %388 = bitcast i32* %382 to i8*
  call void @_ZdlPv(i8* %388) #12
  br label %389

389:                                              ; preds = %384, %380
  %390 = bitcast %"class.std::__1::vector.3"* %378 to i8*
  call void @_ZdlPv(i8* %390) #12
  br label %391

391:                                              ; preds = %389, %362
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %240) #11
  %392 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %251, align 8
  %393 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %392, i64 0, i32 11
  %394 = load i32, i32* %393, align 8
  %395 = and i32 %394, 1
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %400, label %397

397:                                              ; preds = %391
  %398 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %392, i64 0, i32 6, i32 0, i32 0, i32 0
  %399 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %398, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %399, %"class.spvtools::opt::Instruction"* %350) #11
  br label %400

400:                                              ; preds = %397, %391
  %401 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %252, align 8
  %402 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %401, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %403 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %402, align 8, !noalias !36
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %253) #11
  %404 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, align 8
  %405 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %404, i64 0, i32 1, i32 0, i32 0, i32 0
  %406 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %405, align 8
  %407 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %406, i64 0, i32 4
  %408 = load i8, i8* %407, align 1, !range !8
  %409 = icmp eq i8 %408, 0
  br i1 %409, label %415, label %410

410:                                              ; preds = %400
  %411 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %406, i64 0, i32 3
  %412 = load i8, i8* %411, align 4, !range !8
  %413 = zext i8 %412 to i32
  %414 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %406, i32 %413) #11
  br label %415

415:                                              ; preds = %410, %400
  %416 = phi i32 [ %414, %410 ], [ 0, %400 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %254, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %257, %"struct.std::__1::aligned_storage<4, 4>::type"** %258, align 8
  store i64 0, i64* %260, align 8
  store i64 1, i64* %255, align 8
  store i32 %416, i32* %261, align 8
  %417 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %403, i64 0, i32 3
  %418 = load i8, i8* %417, align 4, !range !8
  %419 = icmp eq i8 %418, 0
  %420 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %403, i64 0, i32 4
  %421 = load i8, i8* %420, align 1, !range !8
  %422 = icmp eq i8 %421, 0
  %423 = select i1 %422, i64 1, i64 2
  %424 = xor i1 %422, true
  %425 = zext i1 %424 to i64
  %426 = select i1 %419, i64 %425, i64 %423
  %427 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %403, i64 0, i32 6, i32 0, i32 0
  %428 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %427, align 8
  %429 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %428, i64 %426, i32 1
  %430 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %429, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %17) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %254, align 8
  %431 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %262, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %262, align 8
  %432 = icmp eq %"class.std::__1::vector.3"* %431, null
  br i1 %432, label %444, label %433

433:                                              ; preds = %415
  %434 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %431, i64 0, i32 0, i32 0
  %435 = load i32*, i32** %434, align 8
  %436 = icmp eq i32* %435, null
  br i1 %436, label %442, label %437

437:                                              ; preds = %433
  %438 = ptrtoint i32* %435 to i64
  %439 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %431, i64 0, i32 0, i32 1
  %440 = bitcast i32** %439 to i64*
  store i64 %438, i64* %440, align 8
  %441 = bitcast i32* %435 to i8*
  call void @_ZdlPv(i8* %441) #12
  br label %442

442:                                              ; preds = %437, %433
  %443 = bitcast %"class.std::__1::vector.3"* %431 to i8*
  call void @_ZdlPv(i8* %443) #12
  br label %444

444:                                              ; preds = %442, %415
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %253) #11
  %445 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %251, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %445, %"class.spvtools::opt::Instruction"* %403) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %263) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %263, i8 0, i64 24, i1 false) #11
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %1, %"class.std::__1::vector.976"* nonnull dereferenceable(24) %18) #11
  %446 = load i64, i64* %266, align 8
  %447 = load i64, i64* %267, align 8
  %448 = icmp eq i64 %446, %447
  br i1 %448, label %633, label %454

449:                                              ; preds = %342, %449
  %450 = phi %"class.spvtools::opt::BasicBlock"** [ %452, %449 ], [ %344, %342 ]
  %451 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %450, align 8
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl14CopyBasicBlockEPNS0_4LoopEPKNS0_10BasicBlockEb(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::BasicBlock"* %451, i1 zeroext false) #11
  %452 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %450, i64 1
  %453 = icmp eq %"class.spvtools::opt::BasicBlock"** %452, %345
  br i1 %453, label %347, label %449

454:                                              ; preds = %444, %617
  %455 = phi i64 [ %629, %617 ], [ %447, %444 ]
  %456 = phi i64 [ %627, %617 ], [ 0, %444 ]
  %457 = inttoptr i64 %455 to %"class.spvtools::opt::Instruction"**
  %458 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %457, i64 %456
  %459 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %458, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %268) #11
  %460 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %459, i64 0, i32 4
  %461 = load i8, i8* %460, align 1, !range !8
  %462 = icmp eq i8 %461, 0
  br i1 %462, label %468, label %463

463:                                              ; preds = %454
  %464 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %459, i64 0, i32 3
  %465 = load i8, i8* %464, align 4, !range !8
  %466 = zext i8 %465 to i32
  %467 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %459, i32 %466) #11
  br label %468

468:                                              ; preds = %463, %454
  %469 = phi i32 [ %467, %463 ], [ 0, %454 ]
  store i32 %469, i32* %19, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %269) #11
  store i32* %19, i32** %270, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %271) #11
  %470 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %170, i32* nonnull dereferenceable(4) %19, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1084"* nonnull dereferenceable(8) %12, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %13) #11
  %471 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %470, 0
  %472 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %471, i64 2
  %473 = bitcast %"struct.std::__1::__hash_node_base.254"* %472 to %"struct.std::__1::pair.1014"*
  %474 = getelementptr inbounds %"struct.std::__1::pair.1014", %"struct.std::__1::pair.1014"* %473, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %271) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %269) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %272) #11
  store i32* %474, i32** %273, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %274) #11
  %475 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %172, i32* dereferenceable(4) %474, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %11) #11
  %476 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %475, 0
  %477 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %476, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %274) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %272) #11
  %478 = bitcast %"struct.std::__1::__hash_node_base"* %477 to i64*
  %479 = load i64, i64* %478, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %268) #11
  %480 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %155, align 8
  %481 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %161, align 8
  %482 = icmp eq %"class.spvtools::opt::Instruction"** %480, %481
  %483 = ptrtoint %"class.spvtools::opt::Instruction"** %481 to i64
  br i1 %482, label %488, label %484

484:                                              ; preds = %468
  %485 = bitcast %"class.spvtools::opt::Instruction"** %480 to i64*
  store i64 %479, i64* %485, align 8
  %486 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %480, i64 1
  %487 = ptrtoint %"class.spvtools::opt::Instruction"** %486 to i64
  store i64 %487, i64* %156, align 8
  br label %541

488:                                              ; preds = %468
  %489 = ptrtoint %"class.spvtools::opt::Instruction"** %480 to i64
  %490 = load i64, i64* %150, align 8
  %491 = sub i64 %489, %490
  %492 = ashr exact i64 %491, 3
  %493 = add nsw i64 %492, 1
  %494 = icmp ugt i64 %493, 2305843009213693951
  br i1 %494, label %495, label %497

495:                                              ; preds = %488
  %496 = bitcast %"class.std::__1::vector.976"* %138 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %496) #13
  unreachable

497:                                              ; preds = %488
  %498 = sub i64 %483, %490
  %499 = ashr exact i64 %498, 3
  %500 = icmp ult i64 %499, 1152921504606846975
  br i1 %500, label %501, label %509

501:                                              ; preds = %497
  %502 = ashr exact i64 %498, 2
  %503 = icmp ult i64 %502, %493
  %504 = select i1 %503, i64 %493, i64 %502
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %514, label %506

506:                                              ; preds = %501
  %507 = icmp ugt i64 %504, 2305843009213693951
  br i1 %507, label %508, label %509

508:                                              ; preds = %506
  call void @abort() #13
  unreachable

509:                                              ; preds = %506, %497
  %510 = phi i64 [ %504, %506 ], [ 2305843009213693951, %497 ]
  %511 = shl i64 %510, 3
  %512 = call i8* @_Znwm(i64 %511) #12
  %513 = bitcast i8* %512 to %"class.spvtools::opt::Instruction"**
  br label %514

514:                                              ; preds = %509, %501
  %515 = phi i64 [ %510, %509 ], [ 0, %501 ]
  %516 = phi %"class.spvtools::opt::Instruction"** [ %513, %509 ], [ null, %501 ]
  %517 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %516, i64 %492
  %518 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %516, i64 %515
  %519 = ptrtoint %"class.spvtools::opt::Instruction"** %518 to i64
  %520 = bitcast %"class.spvtools::opt::Instruction"** %517 to i64*
  store i64 %479, i64* %520, align 8
  %521 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %517, i64 1
  %522 = ptrtoint %"class.spvtools::opt::Instruction"** %521 to i64
  %523 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %140, align 8
  %524 = load i64, i64* %156, align 8
  %525 = ptrtoint %"class.spvtools::opt::Instruction"** %523 to i64
  %526 = sub i64 %524, %525
  %527 = ashr exact i64 %526, 3
  %528 = sub nsw i64 0, %527
  %529 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %517, i64 %528
  %530 = ptrtoint %"class.spvtools::opt::Instruction"** %529 to i64
  %531 = icmp sgt i64 %526, 0
  br i1 %531, label %532, label %536

532:                                              ; preds = %514
  %533 = bitcast %"class.spvtools::opt::Instruction"** %529 to i8*
  %534 = bitcast %"class.spvtools::opt::Instruction"** %523 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %533, i8* align 8 %534, i64 %526, i1 false) #11
  %535 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %140, align 8
  br label %536

536:                                              ; preds = %532, %514
  %537 = phi %"class.spvtools::opt::Instruction"** [ %523, %514 ], [ %535, %532 ]
  store i64 %530, i64* %150, align 8
  store i64 %522, i64* %156, align 8
  store i64 %519, i64* %162, align 8
  %538 = icmp eq %"class.spvtools::opt::Instruction"** %537, null
  br i1 %538, label %541, label %539

539:                                              ; preds = %536
  %540 = bitcast %"class.spvtools::opt::Instruction"** %537 to i8*
  call void @_ZdlPv(i8* %540) #12
  br label %541

541:                                              ; preds = %539, %536, %484
  %542 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %275, align 8
  %543 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %133, align 8
  %544 = icmp eq %"class.spvtools::opt::Instruction"** %542, %543
  br i1 %544, label %598, label %545

545:                                              ; preds = %541
  %546 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %542, i64 %456
  %547 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %546, align 8
  %548 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %164, align 8
  %549 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %548, i64 0, i32 1, i32 0, i32 0, i32 0
  %550 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %549, align 8
  %551 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %550, i64 0, i32 4
  %552 = load i8, i8* %551, align 1, !range !8
  %553 = icmp eq i8 %552, 0
  br i1 %553, label %559, label %554

554:                                              ; preds = %545
  %555 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %550, i64 0, i32 3
  %556 = load i8, i8* %555, align 4, !range !8
  %557 = zext i8 %556 to i32
  %558 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %550, i32 %557) #11
  br label %559

559:                                              ; preds = %554, %545
  %560 = phi i32 [ %558, %554 ], [ 0, %545 ]
  %561 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %547, i64 0, i32 6
  %562 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %547, i64 0, i32 6, i32 0, i32 1
  %563 = bitcast %"struct.spvtools::opt::Operand"** %562 to i64*
  %564 = load i64, i64* %563, align 8
  %565 = bitcast %"class.std::__1::vector"* %561 to i64*
  %566 = load i64, i64* %565, align 8
  %567 = sub i64 %564, %566
  %568 = sdiv exact i64 %567, 48
  %569 = trunc i64 %568 to i32
  %570 = icmp ugt i32 %569, 3
  br i1 %570, label %571, label %586

571:                                              ; preds = %559, %575
  %572 = phi i32 [ %576, %575 ], [ 3, %559 ]
  %573 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %547, i32 %572) #11
  %574 = icmp eq i32 %573, %560
  br i1 %574, label %583, label %575

575:                                              ; preds = %571
  %576 = add i32 %572, 2
  %577 = load i64, i64* %563, align 8
  %578 = load i64, i64* %565, align 8
  %579 = sub i64 %577, %578
  %580 = sdiv exact i64 %579, 48
  %581 = trunc i64 %580 to i32
  %582 = icmp ult i32 %576, %581
  br i1 %582, label %571, label %586

583:                                              ; preds = %571
  %584 = add i32 %572, -1
  %585 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %547, i32 %584) #11
  br label %586

586:                                              ; preds = %575, %583, %559
  %587 = phi i32 [ %585, %583 ], [ 0, %559 ], [ 0, %575 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %276) #11
  %588 = load i8, i8* %460, align 1, !range !8
  %589 = icmp eq i8 %588, 0
  br i1 %589, label %595, label %590

590:                                              ; preds = %586
  %591 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %459, i64 0, i32 3
  %592 = load i8, i8* %591, align 4, !range !8
  %593 = zext i8 %592 to i32
  %594 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %459, i32 %593) #11
  br label %595

595:                                              ; preds = %590, %586
  %596 = phi i32 [ %594, %590 ], [ 0, %586 ]
  store i32 %596, i32* %20, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %277) #11
  store i32* %20, i32** %278, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %279) #11
  %597 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %170, i32* nonnull dereferenceable(4) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1084"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %9) #11
  br label %617

598:                                              ; preds = %541
  %599 = load i8, i8* %460, align 1, !range !8
  %600 = icmp eq i8 %599, 0
  br i1 %600, label %601, label %602

601:                                              ; preds = %598
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %280) #11
  br label %613

602:                                              ; preds = %598
  %603 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %459, i64 0, i32 3
  %604 = load i8, i8* %603, align 4, !range !8
  %605 = zext i8 %604 to i32
  %606 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %459, i32 %605) #11
  %607 = load i8, i8* %460, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %280) #11
  %608 = icmp eq i8 %607, 0
  br i1 %608, label %613, label %609

609:                                              ; preds = %602
  %610 = load i8, i8* %603, align 4, !range !8
  %611 = zext i8 %610 to i32
  %612 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %459, i32 %611) #11
  br label %613

613:                                              ; preds = %609, %602, %601
  %614 = phi i32 [ %606, %609 ], [ %606, %602 ], [ 0, %601 ]
  %615 = phi i32 [ %612, %609 ], [ 0, %602 ], [ 0, %601 ]
  store i32 %615, i32* %21, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %281) #11
  store i32* %21, i32** %282, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %283) #11
  %616 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %170, i32* nonnull dereferenceable(4) %21, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1084"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %7) #11
  br label %617

617:                                              ; preds = %613, %595
  %618 = phi { %"struct.std::__1::__hash_node_base.254"*, i8 } [ %616, %613 ], [ %597, %595 ]
  %619 = phi i8* [ %283, %613 ], [ %279, %595 ]
  %620 = phi i8* [ %281, %613 ], [ %277, %595 ]
  %621 = phi i32 [ %614, %613 ], [ %587, %595 ]
  %622 = phi i8* [ %280, %613 ], [ %276, %595 ]
  %623 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %618, 0
  %624 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %623, i64 2
  %625 = bitcast %"struct.std::__1::__hash_node_base.254"* %624 to %"struct.std::__1::pair.1014"*
  %626 = getelementptr inbounds %"struct.std::__1::pair.1014", %"struct.std::__1::pair.1014"* %625, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %619) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %620) #11
  store i32 %621, i32* %626, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %622) #11
  %627 = add nuw i64 %456, 1
  %628 = load i64, i64* %266, align 8
  %629 = load i64, i64* %267, align 8
  %630 = sub i64 %628, %629
  %631 = ashr exact i64 %630, 3
  %632 = icmp ult i64 %627, %631
  br i1 %632, label %454, label %633

633:                                              ; preds = %617, %444
  %634 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %284, align 8
  %635 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %79, align 8
  %636 = icmp eq %"class.spvtools::opt::BasicBlock"* %634, %635
  br i1 %636, label %638, label %637

637:                                              ; preds = %633
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl18FoldConditionBlockEPNS0_10BasicBlockEj(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, %"class.spvtools::opt::BasicBlock"* %634) #11
  br label %638

638:                                              ; preds = %637, %633
  %639 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, align 8
  %640 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %639, i64 0, i32 1, i32 0, i32 0, i32 0
  %641 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %640, align 8
  %642 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %641, i64 0, i32 4
  %643 = load i8, i8* %642, align 1, !range !8
  %644 = icmp eq i8 %643, 0
  br i1 %644, label %645, label %646

645:                                              ; preds = %638
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %285) #11
  br label %662

646:                                              ; preds = %638
  %647 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %641, i64 0, i32 3
  %648 = load i8, i8* %647, align 4, !range !8
  %649 = zext i8 %648 to i32
  %650 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %641, i32 %649) #11
  %651 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %26, align 8
  %652 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %651, i64 0, i32 1, i32 0, i32 0, i32 0
  %653 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %652, align 8
  %654 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %653, i64 0, i32 4
  %655 = load i8, i8* %654, align 1, !range !8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %285) #11
  %656 = icmp eq i8 %655, 0
  br i1 %656, label %662, label %657

657:                                              ; preds = %646
  %658 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %653, i64 0, i32 3
  %659 = load i8, i8* %658, align 4, !range !8
  %660 = zext i8 %659 to i32
  %661 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %653, i32 %660) #11
  br label %662

662:                                              ; preds = %657, %646, %645
  %663 = phi i32 [ %650, %657 ], [ %650, %646 ], [ 0, %645 ]
  %664 = phi i32 [ %661, %657 ], [ 0, %646 ], [ 0, %645 ]
  store i32 %664, i32* %22, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %286) #11
  store i32* %22, i32** %287, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %288) #11
  %665 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %170, i32* nonnull dereferenceable(4) %22, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1084"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %5) #11
  %666 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %665, 0
  %667 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %666, i64 2
  %668 = bitcast %"struct.std::__1::__hash_node_base.254"* %667 to %"struct.std::__1::pair.1014"*
  %669 = getelementptr inbounds %"struct.std::__1::pair.1014", %"struct.std::__1::pair.1014"* %668, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %288) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %286) #11
  store i32 %663, i32* %669, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %285) #11
  %670 = load i64, i64* %290, align 8
  %671 = icmp eq i64 %670, 0
  br i1 %671, label %672, label %676

672:                                              ; preds = %737, %662
  %673 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %304, align 8
  %674 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %155, align 8
  %675 = icmp eq %"class.spvtools::opt::Instruction"** %673, %674
  br i1 %675, label %741, label %908

676:                                              ; preds = %662, %737
  %677 = phi i64 [ %739, %737 ], [ %670, %662 ]
  %678 = inttoptr i64 %677 to %"struct.std::__1::__hash_node"*
  %679 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %678, i64 0, i32 2, i32 0, i32 1
  %680 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %679, align 8
  %681 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %680, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %682 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %680, i64 0, i32 2, i32 0, i32 1
  %683 = bitcast %"class.spvtools::opt::Instruction"** %681 to i64*
  %684 = load i64, i64* %683, align 8
  %685 = inttoptr i64 %684 to %"class.spvtools::opt::Instruction"*
  %686 = icmp eq %"class.spvtools::opt::Instruction"* %682, %685
  br i1 %686, label %737, label %687

687:                                              ; preds = %676, %729
  %688 = phi %"class.spvtools::opt::Instruction"* [ %735, %729 ], [ %685, %676 ]
  %689 = phi i64 [ %734, %729 ], [ %684, %676 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %291) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS8_11InstructionEE3$_2S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %293, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS5_11InstructionEE3$_2FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %294, align 8
  store i64 %292, i64* %295, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %297) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %299, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %300, align 8
  store i64 %298, i64* %301, align 8
  %690 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %688, i64 0, i32 6, i32 0, i32 0
  %691 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %690, align 8
  %692 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %688, i64 0, i32 6, i32 0, i32 1
  %693 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %692, align 8
  %694 = icmp eq %"struct.spvtools::opt::Operand"* %691, %693
  br i1 %694, label %715, label %695

695:                                              ; preds = %687, %710
  %696 = phi %"struct.spvtools::opt::Operand"* [ %711, %710 ], [ %691, %687 ]
  %697 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %696, i64 0, i32 0
  %698 = load i32, i32* %697, align 8
  %699 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %698) #11
  br i1 %699, label %700, label %710

700:                                              ; preds = %695
  %701 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %696, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %702 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %701, align 8
  %703 = icmp eq %"class.std::__1::vector.3"* %702, null
  %704 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %702, i64 0, i32 0, i32 0
  %705 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %696, i64 0, i32 1, i32 2
  %706 = select i1 %703, i32** %705, i32** %704
  %707 = load i32*, i32** %706, align 8
  %708 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %299, align 8
  %709 = call zeroext i1 %708(%"union.std::__1::__function::__policy_storage"* nonnull %302, i32* %707) #11
  br i1 %709, label %710, label %713

710:                                              ; preds = %700, %695
  %711 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %696, i64 1
  %712 = icmp eq %"struct.spvtools::opt::Operand"* %711, %693
  br i1 %712, label %713, label %695

713:                                              ; preds = %710, %700
  %714 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %300, align 8
  br label %715

715:                                              ; preds = %713, %687
  %716 = phi %"struct.std::__1::__function::__policy"* [ %714, %713 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %687 ]
  %717 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %716, i64 0, i32 1
  %718 = load void (i8*)*, void (i8*)** %717, align 8
  %719 = icmp eq void (i8*)* %718, null
  br i1 %719, label %722, label %720

720:                                              ; preds = %715
  %721 = load i8*, i8** %303, align 8
  call void %718(i8* %721) #11
  br label %722

722:                                              ; preds = %720, %715
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %297) #11
  %723 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %294, align 8
  %724 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %723, i64 0, i32 1
  %725 = load void (i8*)*, void (i8*)** %724, align 8
  %726 = icmp eq void (i8*)* %725, null
  br i1 %726, label %729, label %727

727:                                              ; preds = %722
  %728 = load i8*, i8** %296, align 8
  call void %725(i8* %728) #11
  br label %729

729:                                              ; preds = %727, %722
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %291) #11
  %730 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %251, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %730, %"class.spvtools::opt::Instruction"* %688) #11
  %731 = inttoptr i64 %689 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %732 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %731, i64 0, i32 1
  %733 = bitcast %"class.spvtools::opt::Instruction"** %732 to i64*
  %734 = load i64, i64* %733, align 8
  %735 = inttoptr i64 %734 to %"class.spvtools::opt::Instruction"*
  %736 = icmp eq %"class.spvtools::opt::Instruction"* %682, %735
  br i1 %736, label %737, label %687

737:                                              ; preds = %729, %676
  %738 = inttoptr i64 %677 to i64*
  %739 = load i64, i64* %738, align 8
  %740 = icmp eq i64 %739, 0
  br i1 %740, label %672, label %676

741:                                              ; preds = %973, %672
  %742 = load i64, i64* %313, align 8
  store i64 %742, i64* %116, align 8
  %743 = load i64, i64* %314, align 8
  store i64 %743, i64* %315, align 8
  %744 = load i64, i64* %316, align 8
  store i64 %744, i64* %318, align 8
  %745 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %118, align 8
  %746 = icmp eq %"class.spvtools::opt::Instruction"** %745, null
  br i1 %746, label %750, label %747

747:                                              ; preds = %741
  %748 = ptrtoint %"class.spvtools::opt::Instruction"** %745 to i64
  store i64 %748, i64* %134, align 8
  %749 = bitcast %"class.spvtools::opt::Instruction"** %745 to i8*
  call void @_ZdlPv(i8* %749) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %319, i8 0, i64 24, i1 false) #11
  br label %750

750:                                              ; preds = %747, %741
  %751 = load <2 x i64>, <2 x i64>* %333, align 8
  store <2 x i64> %751, <2 x i64>* %334, align 8
  %752 = load i64, i64* %162, align 8
  store i64 %752, i64* %137, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %320, i8 0, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %322, i8 0, i64 40, i1 false) #11
  %753 = load i64, i64* %321, align 8
  %754 = icmp eq i64 %753, 0
  br i1 %754, label %802, label %755

755:                                              ; preds = %750
  %756 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %289, align 8
  %757 = icmp eq %"struct.std::__1::__hash_node_base.333"* %756, null
  br i1 %757, label %764, label %758

758:                                              ; preds = %755, %758
  %759 = phi %"struct.std::__1::__hash_node_base.333"* [ %761, %758 ], [ %756, %755 ]
  %760 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %759, i64 0, i32 0
  %761 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %760, align 8
  %762 = bitcast %"struct.std::__1::__hash_node_base.333"* %759 to i8*
  call void @_ZdlPv(i8* %762) #12
  %763 = icmp eq %"struct.std::__1::__hash_node_base.333"* %761, null
  br i1 %763, label %764, label %758

764:                                              ; preds = %758, %755
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %289, align 8
  %765 = load i64, i64* %323, align 8
  %766 = icmp eq i64 %765, 0
  br i1 %766, label %784, label %767

767:                                              ; preds = %764
  %768 = add i64 %765, -1
  %769 = and i64 %765, 3
  %770 = icmp ult i64 %768, 3
  br i1 %770, label %773, label %771

771:                                              ; preds = %767
  %772 = sub i64 %765, %769
  br label %785

773:                                              ; preds = %785, %767
  %774 = phi i64 [ 0, %767 ], [ %799, %785 ]
  %775 = icmp eq i64 %769, 0
  br i1 %775, label %784, label %776

776:                                              ; preds = %773, %776
  %777 = phi i64 [ %781, %776 ], [ %774, %773 ]
  %778 = phi i64 [ %782, %776 ], [ %769, %773 ]
  %779 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %324, align 8
  %780 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %779, i64 %777
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %780, align 8
  %781 = add nuw i64 %777, 1
  %782 = add i64 %778, -1
  %783 = icmp eq i64 %782, 0
  br i1 %783, label %784, label %776, !llvm.loop !39

784:                                              ; preds = %773, %776, %764
  store i64 0, i64* %321, align 8
  br label %802

785:                                              ; preds = %785, %771
  %786 = phi i64 [ 0, %771 ], [ %799, %785 ]
  %787 = phi i64 [ %772, %771 ], [ %800, %785 ]
  %788 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %324, align 8
  %789 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %788, i64 %786
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %789, align 8
  %790 = or i64 %786, 1
  %791 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %324, align 8
  %792 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %791, i64 %790
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %792, align 8
  %793 = or i64 %786, 2
  %794 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %324, align 8
  %795 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %794, i64 %793
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %795, align 8
  %796 = or i64 %786, 3
  %797 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %324, align 8
  %798 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %797, i64 %796
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %798, align 8
  %799 = add nuw i64 %786, 4
  %800 = add i64 %787, -4
  %801 = icmp eq i64 %800, 0
  br i1 %801, label %773, label %785

802:                                              ; preds = %784, %750
  %803 = load i64, i64* %325, align 8
  %804 = icmp eq i64 %803, 0
  br i1 %804, label %852, label %805

805:                                              ; preds = %802
  %806 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %326, align 8
  %807 = icmp eq %"struct.std::__1::__hash_node_base.254"* %806, null
  br i1 %807, label %814, label %808

808:                                              ; preds = %805, %808
  %809 = phi %"struct.std::__1::__hash_node_base.254"* [ %811, %808 ], [ %806, %805 ]
  %810 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %809, i64 0, i32 0
  %811 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %810, align 8
  %812 = bitcast %"struct.std::__1::__hash_node_base.254"* %809 to i8*
  call void @_ZdlPv(i8* %812) #12
  %813 = icmp eq %"struct.std::__1::__hash_node_base.254"* %811, null
  br i1 %813, label %814, label %808

814:                                              ; preds = %808, %805
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %326, align 8
  %815 = load i64, i64* %327, align 8
  %816 = icmp eq i64 %815, 0
  br i1 %816, label %834, label %817

817:                                              ; preds = %814
  %818 = add i64 %815, -1
  %819 = and i64 %815, 3
  %820 = icmp ult i64 %818, 3
  br i1 %820, label %823, label %821

821:                                              ; preds = %817
  %822 = sub i64 %815, %819
  br label %835

823:                                              ; preds = %835, %817
  %824 = phi i64 [ 0, %817 ], [ %849, %835 ]
  %825 = icmp eq i64 %819, 0
  br i1 %825, label %834, label %826

826:                                              ; preds = %823, %826
  %827 = phi i64 [ %831, %826 ], [ %824, %823 ]
  %828 = phi i64 [ %832, %826 ], [ %819, %823 ]
  %829 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %328, align 8
  %830 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %829, i64 %827
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %830, align 8
  %831 = add nuw i64 %827, 1
  %832 = add i64 %828, -1
  %833 = icmp eq i64 %832, 0
  br i1 %833, label %834, label %826, !llvm.loop !40

834:                                              ; preds = %823, %826, %814
  store i64 0, i64* %325, align 8
  br label %852

835:                                              ; preds = %835, %821
  %836 = phi i64 [ 0, %821 ], [ %849, %835 ]
  %837 = phi i64 [ %822, %821 ], [ %850, %835 ]
  %838 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %328, align 8
  %839 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %838, i64 %836
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %839, align 8
  %840 = or i64 %836, 1
  %841 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %328, align 8
  %842 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %841, i64 %840
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %842, align 8
  %843 = or i64 %836, 2
  %844 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %328, align 8
  %845 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %844, i64 %843
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %845, align 8
  %846 = or i64 %836, 3
  %847 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %328, align 8
  %848 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %847, i64 %846
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %848, align 8
  %849 = add nuw i64 %836, 4
  %850 = add i64 %837, -4
  %851 = icmp eq i64 %850, 0
  br i1 %851, label %823, label %835

852:                                              ; preds = %834, %802
  %853 = load i64, i64* %329, align 8
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %902, label %855

855:                                              ; preds = %852
  %856 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %330, align 8
  %857 = icmp eq %"struct.std::__1::__hash_node_base"* %856, null
  br i1 %857, label %864, label %858

858:                                              ; preds = %855, %858
  %859 = phi %"struct.std::__1::__hash_node_base"* [ %861, %858 ], [ %856, %855 ]
  %860 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %859, i64 0, i32 0
  %861 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %860, align 8
  %862 = bitcast %"struct.std::__1::__hash_node_base"* %859 to i8*
  call void @_ZdlPv(i8* %862) #12
  %863 = icmp eq %"struct.std::__1::__hash_node_base"* %861, null
  br i1 %863, label %864, label %858

864:                                              ; preds = %858, %855
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %330, align 8
  %865 = load i64, i64* %331, align 8
  %866 = icmp eq i64 %865, 0
  br i1 %866, label %884, label %867

867:                                              ; preds = %864
  %868 = add i64 %865, -1
  %869 = and i64 %865, 3
  %870 = icmp ult i64 %868, 3
  br i1 %870, label %873, label %871

871:                                              ; preds = %867
  %872 = sub i64 %865, %869
  br label %885

873:                                              ; preds = %885, %867
  %874 = phi i64 [ 0, %867 ], [ %899, %885 ]
  %875 = icmp eq i64 %869, 0
  br i1 %875, label %884, label %876

876:                                              ; preds = %873, %876
  %877 = phi i64 [ %881, %876 ], [ %874, %873 ]
  %878 = phi i64 [ %882, %876 ], [ %869, %873 ]
  %879 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %332, align 8
  %880 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %879, i64 %877
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %880, align 8
  %881 = add nuw i64 %877, 1
  %882 = add i64 %878, -1
  %883 = icmp eq i64 %882, 0
  br i1 %883, label %884, label %876, !llvm.loop !41

884:                                              ; preds = %873, %876, %864
  store i64 0, i64* %329, align 8
  br label %902

885:                                              ; preds = %885, %871
  %886 = phi i64 [ 0, %871 ], [ %899, %885 ]
  %887 = phi i64 [ %872, %871 ], [ %900, %885 ]
  %888 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %332, align 8
  %889 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %888, i64 %886
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %889, align 8
  %890 = or i64 %886, 1
  %891 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %332, align 8
  %892 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %891, i64 %890
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %892, align 8
  %893 = or i64 %886, 2
  %894 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %332, align 8
  %895 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %894, i64 %893
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %895, align 8
  %896 = or i64 %886, 3
  %897 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %332, align 8
  %898 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %897, i64 %896
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %898, align 8
  %899 = add nuw i64 %886, 4
  %900 = add i64 %887, -4
  %901 = icmp eq i64 %900, 0
  br i1 %901, label %873, label %885

902:                                              ; preds = %884, %852
  %903 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %264, align 8
  %904 = icmp eq %"class.spvtools::opt::Instruction"** %903, null
  br i1 %904, label %976, label %905

905:                                              ; preds = %902
  %906 = ptrtoint %"class.spvtools::opt::Instruction"** %903 to i64
  store i64 %906, i64* %266, align 8
  %907 = bitcast %"class.spvtools::opt::Instruction"** %903 to i8*
  call void @_ZdlPv(i8* %907) #12
  br label %976

908:                                              ; preds = %672, %973
  %909 = phi %"class.spvtools::opt::Instruction"** [ %974, %973 ], [ %673, %672 ]
  %910 = bitcast %"class.spvtools::opt::Instruction"** %909 to i64*
  %911 = load i64, i64* %910, align 8
  %912 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %306, align 8
  %913 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %307, align 8
  %914 = icmp eq %"class.spvtools::opt::Instruction"** %912, %913
  %915 = ptrtoint %"class.spvtools::opt::Instruction"** %913 to i64
  br i1 %914, label %920, label %916

916:                                              ; preds = %908
  %917 = bitcast %"class.spvtools::opt::Instruction"** %912 to i64*
  store i64 %911, i64* %917, align 8
  %918 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %912, i64 1
  %919 = ptrtoint %"class.spvtools::opt::Instruction"** %918 to i64
  store i64 %919, i64* %308, align 8
  br label %973

920:                                              ; preds = %908
  %921 = ptrtoint %"class.spvtools::opt::Instruction"** %912 to i64
  %922 = load i64, i64* %309, align 8
  %923 = sub i64 %921, %922
  %924 = ashr exact i64 %923, 3
  %925 = add nsw i64 %924, 1
  %926 = icmp ugt i64 %925, 2305843009213693951
  br i1 %926, label %927, label %929

927:                                              ; preds = %920
  %928 = bitcast %"class.std::__1::vector.976"* %305 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %928) #13
  unreachable

929:                                              ; preds = %920
  %930 = sub i64 %915, %922
  %931 = ashr exact i64 %930, 3
  %932 = icmp ult i64 %931, 1152921504606846975
  br i1 %932, label %933, label %941

933:                                              ; preds = %929
  %934 = ashr exact i64 %930, 2
  %935 = icmp ult i64 %934, %925
  %936 = select i1 %935, i64 %925, i64 %934
  %937 = icmp eq i64 %936, 0
  br i1 %937, label %946, label %938

938:                                              ; preds = %933
  %939 = icmp ugt i64 %936, 2305843009213693951
  br i1 %939, label %940, label %941

940:                                              ; preds = %938
  call void @abort() #13
  unreachable

941:                                              ; preds = %938, %929
  %942 = phi i64 [ %936, %938 ], [ 2305843009213693951, %929 ]
  %943 = shl i64 %942, 3
  %944 = call i8* @_Znwm(i64 %943) #12
  %945 = bitcast i8* %944 to %"class.spvtools::opt::Instruction"**
  br label %946

946:                                              ; preds = %941, %933
  %947 = phi i64 [ %942, %941 ], [ 0, %933 ]
  %948 = phi %"class.spvtools::opt::Instruction"** [ %945, %941 ], [ null, %933 ]
  %949 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %948, i64 %924
  %950 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %948, i64 %947
  %951 = ptrtoint %"class.spvtools::opt::Instruction"** %950 to i64
  %952 = bitcast %"class.spvtools::opt::Instruction"** %949 to i64*
  store i64 %911, i64* %952, align 8
  %953 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %949, i64 1
  %954 = ptrtoint %"class.spvtools::opt::Instruction"** %953 to i64
  %955 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %311, align 8
  %956 = load i64, i64* %308, align 8
  %957 = ptrtoint %"class.spvtools::opt::Instruction"** %955 to i64
  %958 = sub i64 %956, %957
  %959 = ashr exact i64 %958, 3
  %960 = sub nsw i64 0, %959
  %961 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %949, i64 %960
  %962 = ptrtoint %"class.spvtools::opt::Instruction"** %961 to i64
  %963 = icmp sgt i64 %958, 0
  br i1 %963, label %964, label %968

964:                                              ; preds = %946
  %965 = bitcast %"class.spvtools::opt::Instruction"** %961 to i8*
  %966 = bitcast %"class.spvtools::opt::Instruction"** %955 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %965, i8* align 8 %966, i64 %958, i1 false) #11
  %967 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %311, align 8
  br label %968

968:                                              ; preds = %964, %946
  %969 = phi %"class.spvtools::opt::Instruction"** [ %955, %946 ], [ %967, %964 ]
  store i64 %962, i64* %309, align 8
  store i64 %954, i64* %308, align 8
  store i64 %951, i64* %310, align 8
  %970 = icmp eq %"class.spvtools::opt::Instruction"** %969, null
  br i1 %970, label %973, label %971

971:                                              ; preds = %968
  %972 = bitcast %"class.spvtools::opt::Instruction"** %969 to i8*
  call void @_ZdlPv(i8* %972) #12
  br label %973

973:                                              ; preds = %971, %968, %916
  %974 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %909, i64 1
  %975 = icmp eq %"class.spvtools::opt::Instruction"** %974, %674
  br i1 %975, label %741, label %908

976:                                              ; preds = %902, %905
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %263) #11
  %977 = add nuw i64 %343, 1
  %978 = icmp eq i64 %977, %235
  br i1 %978, label %335, label %342
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl18FoldConditionBlockEPNS0_10BasicBlockEj(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.14", align 8
  %4 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %6 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8, !noalias !42
  %7 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %6, i32 1) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 8
  %9 = bitcast %"class.spvtools::opt::DebugScope"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = bitcast %"class.std::__1::vector.14"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #11
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 7, i32 0, i32 1
  %17 = bitcast %"class.spvtools::opt::Instruction"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.14"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = sdiv exact i64 %21, 112
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %50, label %24

24:                                               ; preds = %2
  %25 = icmp ugt i64 %22, 164703072086692425
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"class.std::__1::vector.14"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %27) #13
  unreachable

28:                                               ; preds = %24
  %29 = tail call i8* @_Znwm(i64 %21) #12
  %30 = bitcast i8* %29 to %"class.spvtools::opt::Instruction"*
  %31 = bitcast %"class.spvtools::opt::Instruction"** %13 to i8**
  store i8* %29, i8** %31, align 8
  %32 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %30, i64 %22
  store %"class.spvtools::opt::Instruction"* %33, %"class.spvtools::opt::Instruction"** %14, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %15, i64 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  %36 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %16, align 8
  %37 = bitcast %"class.spvtools::opt::Instruction"** %13 to i64*
  %38 = ptrtoint i8* %29 to i64
  %39 = icmp eq %"class.spvtools::opt::Instruction"* %35, %36
  br i1 %39, label %48, label %40

40:                                               ; preds = %28, %40
  %41 = phi %"class.spvtools::opt::Instruction"* [ %43, %40 ], [ %35, %28 ]
  %42 = phi %"class.spvtools::opt::Instruction"* [ %44, %40 ], [ %30, %28 ]
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %42, %"class.spvtools::opt::Instruction"* dereferenceable(112) %41) #11
  %43 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 1
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 1
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %43, %36
  br i1 %45, label %46, label %40

46:                                               ; preds = %40
  %47 = ptrtoint %"class.spvtools::opt::Instruction"* %44 to i64
  br label %48

48:                                               ; preds = %46, %28
  %49 = phi i64 [ %47, %46 ], [ %38, %28 ]
  store i64 %49, i64* %37, align 8
  br label %50

50:                                               ; preds = %2, %48
  %51 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 0
  %52 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %51, align 8
  %53 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %52, %"class.spvtools::opt::Instruction"* %6) #11
  %54 = bitcast %"class.spvtools::opt::InstructionBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #11
  %55 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 1
  %56 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 3
  %57 = bitcast %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0 to i64*
  %58 = bitcast %"class.spvtools::opt::InstructionBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 32, i1 false)
  %59 = load i64, i64* %57, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  %61 = ptrtoint %"class.spvtools::opt::Instruction"* %60 to i64
  %62 = bitcast %"class.spvtools::opt::InstructionBuilder"* %4 to i64*
  store i64 %59, i64* %62, align 8
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %55, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %4, i64 0, i32 2
  %64 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %63 to i64*
  store i64 %61, i64* %64, align 8
  store i32 3, i32* %56, align 8
  %65 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %4, i32 %7)
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %65, i64 0, i32 7
  %67 = icmp eq %"class.std::__1::vector.14"* %66, %3
  br i1 %67, label %71, label %68

68:                                               ; preds = %50
  %69 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  %70 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %13, align 8
  call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.14"* %66, %"class.spvtools::opt::Instruction"* %69, %"class.spvtools::opt::Instruction"* %70) #11
  br label %71

71:                                               ; preds = %50, %68
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %65, i64 0, i32 8
  %73 = bitcast %"class.spvtools::opt::DebugScope"* %72 to i64*
  store i64 %10, i64* %73, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %65, i64 0, i32 7, i32 0, i32 0
  %75 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %74, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %65, i64 0, i32 7, i32 0, i32 1
  %77 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %76, align 8
  %78 = icmp eq %"class.spvtools::opt::Instruction"* %75, %77
  br i1 %78, label %85, label %79

79:                                               ; preds = %71, %79
  %80 = phi %"class.spvtools::opt::Instruction"* [ %83, %79 ], [ %75, %71 ]
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 8
  %82 = bitcast %"class.spvtools::opt::DebugScope"* %81 to i64*
  store i64 %10, i64* %82, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 1
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %83, %77
  br i1 %84, label %85, label %79

85:                                               ; preds = %79, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #11
  %86 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  %87 = icmp eq %"class.spvtools::opt::Instruction"* %86, null
  br i1 %87, label %104, label %88

88:                                               ; preds = %85
  %89 = bitcast %"class.spvtools::opt::Instruction"* %86 to i8*
  %90 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %13, align 8
  %91 = icmp eq %"class.spvtools::opt::Instruction"* %90, %86
  br i1 %91, label %102, label %92

92:                                               ; preds = %88, %92
  %93 = phi %"class.spvtools::opt::Instruction"* [ %94, %92 ], [ %90, %88 ]
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %93, i64 -1
  %95 = bitcast %"class.spvtools::opt::Instruction"* %94 to void (%"class.spvtools::opt::Instruction"*)***
  %96 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %95, align 8
  %97 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %96, align 8
  call void %97(%"class.spvtools::opt::Instruction"* %94) #11
  %98 = icmp eq %"class.spvtools::opt::Instruction"* %94, %86
  br i1 %98, label %99, label %92

99:                                               ; preds = %92
  %100 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %101 = load i8*, i8** %100, align 8
  br label %102

102:                                              ; preds = %99, %88
  %103 = phi i8* [ %101, %99 ], [ %89, %88 ]
  store %"class.spvtools::opt::Instruction"* %86, %"class.spvtools::opt::Instruction"** %13, align 8
  call void @_ZdlPv(i8* %103) #12
  br label %104

104:                                              ; preds = %85, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl15AddBlocksToLoopEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nocapture readonly, %"class.spvtools::opt::Loop"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.40"* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast i32* %3 to i8*
  %11 = icmp eq %"class.spvtools::opt::Loop"* %1, null
  br label %16

12:                                               ; preds = %39, %2
  %13 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 6
  %14 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Loop"* %14, null
  br i1 %15, label %43, label %42

16:                                               ; preds = %9, %39
  %17 = phi %"class.std::__1::unique_ptr.40"* [ %5, %9 ], [ %40, %39 ]
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %18, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %19, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %20, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 3
  %27 = load i8, i8* %26, align 4, !range !8
  %28 = zext i8 %27 to i32
  %29 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %21, i32 %28) #11
  br label %30

30:                                               ; preds = %25, %16
  %31 = phi i32 [ %29, %25 ], [ 0, %16 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 %31, i32* %3, align 4
  br i1 %11, label %39, label %32

32:                                               ; preds = %30, %32
  %33 = phi %"class.spvtools::opt::Loop"* [ %37, %32 ], [ %1, %30 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %33, i64 0, i32 8, i32 0
  %35 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %34, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #11
  %36 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %33, i64 0, i32 6
  %37 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %36, align 8
  %38 = icmp eq %"class.spvtools::opt::Loop"* %37, null
  br i1 %38, label %39, label %32

39:                                               ; preds = %32, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %17, i64 1
  %41 = icmp eq %"class.std::__1::unique_ptr.40"* %40, %7
  br i1 %41, label %12, label %16

42:                                               ; preds = %12
  call fastcc void @_ZNK8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl15AddBlocksToLoopEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, %"class.spvtools::opt::Loop"* nonnull %14)
  br label %43

43:                                               ; preds = %12, %42
  ret void
}

declare void @_ZN8spvtools3opt9IRContext27InvalidateAnalysesExceptForENS1_8AnalysisE(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #1

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE13__move_assignERSH_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.329"*, %"class.std::__1::__hash_table.329"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"struct.std::__1::__hash_node_base.333"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %11, i64 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %12, align 8
  %14 = bitcast %"struct.std::__1::__hash_node_base.333"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  %15 = icmp eq %"struct.std::__1::__hash_node_base.333"* %13, null
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %6
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = add i64 %18, -1
  %23 = and i64 %18, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = sub i64 %18, %23
  br label %39

27:                                               ; preds = %39, %20
  %28 = phi i64 [ 0, %20 ], [ %53, %39 ]
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %27, %30
  %31 = phi i64 [ %35, %30 ], [ %28, %27 ]
  %32 = phi i64 [ %36, %30 ], [ %23, %27 ]
  %33 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %21, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %33, i64 %31
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %34, align 8
  %35 = add nuw i64 %31, 1
  %36 = add i64 %32, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %30, !llvm.loop !45

38:                                               ; preds = %27, %30, %16
  store i64 0, i64* %3, align 8
  br label %56

39:                                               ; preds = %39, %25
  %40 = phi i64 [ 0, %25 ], [ %53, %39 ]
  %41 = phi i64 [ %26, %25 ], [ %54, %39 ]
  %42 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %21, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %42, i64 %40
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %43, align 8
  %44 = or i64 %40, 1
  %45 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %21, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %46, align 8
  %47 = or i64 %40, 2
  %48 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %21, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %48, i64 %47
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %49, align 8
  %50 = or i64 %40, 3
  %51 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %21, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %52, align 8
  %53 = add nuw i64 %40, 4
  %54 = add i64 %41, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %27, label %39

56:                                               ; preds = %2, %38
  %57 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__hash_table.329"* %1 to i64*
  %59 = load i64, i64* %58, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %57, align 8
  %60 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %60, align 8
  %62 = bitcast %"class.std::__1::__hash_table.329"* %0 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.333"** %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %56
  %65 = bitcast %"struct.std::__1::__hash_node_base.333"** %61 to i8*
  tail call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %56, %64
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %68, i64* %69, align 8
  store i64 0, i64* %67, align 8
  %70 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %1, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %3, align 8
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %1, i64 0, i32 3, i32 0, i32 0
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %76 = bitcast float* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %1, i64 0, i32 1, i32 0, i32 0
  %78 = bitcast %"struct.std::__1::__hash_node_base.333"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %81 = bitcast %"struct.std::__1::__hash_node_base.333"* %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = icmp eq i64 %71, 0
  br i1 %82, label %103, label %83

83:                                               ; preds = %66
  %84 = inttoptr i64 %79 to %"struct.std::__1::__hash_node_base.333"*
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %84, i64 1
  %86 = bitcast %"struct.std::__1::__hash_node_base.333"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i64, i64* %69, align 8
  %89 = tail call i64 @llvm.ctpop.i64(i64 %88) #11, !range !9
  %90 = icmp ugt i64 %89, 1
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = add i64 %88, -1
  %93 = and i64 %92, %87
  br label %98

94:                                               ; preds = %83
  %95 = icmp ult i64 %87, %88
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = urem i64 %87, %88
  br label %98

98:                                               ; preds = %91, %94, %96
  %99 = phi i64 [ %93, %91 ], [ %97, %96 ], [ %87, %94 ]
  %100 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %60, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %100, i64 %99
  store %"struct.std::__1::__hash_node_base.333"* %80, %"struct.std::__1::__hash_node_base.333"** %101, align 8
  %102 = bitcast %"struct.std::__1::__hash_node_base.333"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false)
  br label %103

103:                                              ; preds = %66, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE13__move_assignERSD_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table.250"*, %"class.std::__1::__hash_table.250"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node_base.254"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"struct.std::__1::__hash_node_base.254"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %11, i64 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %12, align 8
  %14 = bitcast %"struct.std::__1::__hash_node_base.254"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"* %13, null
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %6
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %7, align 8
  %17 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = add i64 %18, -1
  %23 = and i64 %18, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = sub i64 %18, %23
  br label %39

27:                                               ; preds = %39, %20
  %28 = phi i64 [ 0, %20 ], [ %53, %39 ]
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %27, %30
  %31 = phi i64 [ %35, %30 ], [ %28, %27 ]
  %32 = phi i64 [ %36, %30 ], [ %23, %27 ]
  %33 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %21, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %33, i64 %31
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %34, align 8
  %35 = add nuw i64 %31, 1
  %36 = add i64 %32, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %30, !llvm.loop !46

38:                                               ; preds = %27, %30, %16
  store i64 0, i64* %3, align 8
  br label %56

39:                                               ; preds = %39, %25
  %40 = phi i64 [ 0, %25 ], [ %53, %39 ]
  %41 = phi i64 [ %26, %25 ], [ %54, %39 ]
  %42 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %21, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %42, i64 %40
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %43, align 8
  %44 = or i64 %40, 1
  %45 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %21, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %46, align 8
  %47 = or i64 %40, 2
  %48 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %21, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %48, i64 %47
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %49, align 8
  %50 = or i64 %40, 3
  %51 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %21, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %52, align 8
  %53 = add nuw i64 %40, 4
  %54 = add i64 %41, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %27, label %39

56:                                               ; preds = %2, %38
  %57 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__hash_table.250"* %1 to i64*
  %59 = load i64, i64* %58, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %57, align 8
  %60 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %60, align 8
  %62 = bitcast %"class.std::__1::__hash_table.250"* %0 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.254"** %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %56
  %65 = bitcast %"struct.std::__1::__hash_node_base.254"** %61 to i8*
  tail call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %56, %64
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %68, i64* %69, align 8
  store i64 0, i64* %67, align 8
  %70 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %1, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %3, align 8
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %1, i64 0, i32 3, i32 0, i32 0
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %76 = bitcast float* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %1, i64 0, i32 1, i32 0, i32 0
  %78 = bitcast %"struct.std::__1::__hash_node_base.254"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %81 = bitcast %"struct.std::__1::__hash_node_base.254"* %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = icmp eq i64 %71, 0
  br i1 %82, label %103, label %83

83:                                               ; preds = %66
  %84 = inttoptr i64 %79 to %"struct.std::__1::__hash_node_base.254"*
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %84, i64 1
  %86 = bitcast %"struct.std::__1::__hash_node_base.254"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i64, i64* %69, align 8
  %89 = tail call i64 @llvm.ctpop.i64(i64 %88) #11, !range !9
  %90 = icmp ugt i64 %89, 1
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = add i64 %88, -1
  %93 = and i64 %92, %87
  br label %98

94:                                               ; preds = %83
  %95 = icmp ult i64 %87, %88
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = urem i64 %87, %88
  br label %98

98:                                               ; preds = %91, %94, %96
  %99 = phi i64 [ %93, %91 ], [ %97, %96 ], [ %87, %94 ]
  %100 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %60, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %100, i64 %99
  store %"struct.std::__1::__hash_node_base.254"* %80, %"struct.std::__1::__hash_node_base.254"** %101, align 8
  %102 = bitcast %"struct.std::__1::__hash_node_base.254"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false)
  br label %103

103:                                              ; preds = %66, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE13__move_assignERSH_NS_17integral_constantIbLb1EEE(%"class.std::__1::__hash_table"*, %"class.std::__1::__hash_table"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %7, align 8
  %9 = icmp eq %"struct.std::__1::__hash_node_base"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"struct.std::__1::__hash_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %11, i64 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %12, align 8
  %14 = bitcast %"struct.std::__1::__hash_node_base"* %11 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  %15 = icmp eq %"struct.std::__1::__hash_node_base"* %13, null
  br i1 %15, label %16, label %10

16:                                               ; preds = %10, %6
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %7, align 8
  %17 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %38, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = add i64 %18, -1
  %23 = and i64 %18, 3
  %24 = icmp ult i64 %22, 3
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = sub i64 %18, %23
  br label %39

27:                                               ; preds = %39, %20
  %28 = phi i64 [ 0, %20 ], [ %53, %39 ]
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %27, %30
  %31 = phi i64 [ %35, %30 ], [ %28, %27 ]
  %32 = phi i64 [ %36, %30 ], [ %23, %27 ]
  %33 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, i64 %31
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %34, align 8
  %35 = add nuw i64 %31, 1
  %36 = add i64 %32, -1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %30, !llvm.loop !47

38:                                               ; preds = %27, %30, %16
  store i64 0, i64* %3, align 8
  br label %56

39:                                               ; preds = %39, %25
  %40 = phi i64 [ 0, %25 ], [ %53, %39 ]
  %41 = phi i64 [ %26, %25 ], [ %54, %39 ]
  %42 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, i64 %40
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %43, align 8
  %44 = or i64 %40, 1
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %46, align 8
  %47 = or i64 %40, 2
  %48 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, i64 %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %49, align 8
  %50 = or i64 %40, 3
  %51 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %52, align 8
  %53 = add nuw i64 %40, 4
  %54 = add i64 %41, -4
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %27, label %39

56:                                               ; preds = %2, %38
  %57 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.std::__1::__hash_table"* %1 to i64*
  %59 = load i64, i64* %58, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %57, align 8
  %60 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %60, align 8
  %62 = bitcast %"class.std::__1::__hash_table"* %0 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base"** %61, null
  br i1 %63, label %66, label %64

64:                                               ; preds = %56
  %65 = bitcast %"struct.std::__1::__hash_node_base"** %61 to i8*
  tail call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %56, %64
  %67 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %68, i64* %69, align 8
  store i64 0, i64* %67, align 8
  %70 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %3, align 8
  %72 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 3, i32 0, i32 0
  %73 = bitcast float* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %76 = bitcast float* %75 to i32*
  store i32 %74, i32* %76, align 4
  %77 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1, i32 0, i32 0
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = icmp eq i64 %71, 0
  br i1 %82, label %103, label %83

83:                                               ; preds = %66
  %84 = inttoptr i64 %79 to %"struct.std::__1::__hash_node_base"*
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 1
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i64, i64* %69, align 8
  %89 = tail call i64 @llvm.ctpop.i64(i64 %88) #11, !range !9
  %90 = icmp ugt i64 %89, 1
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = add i64 %88, -1
  %93 = and i64 %92, %87
  br label %98

94:                                               ; preds = %83
  %95 = icmp ult i64 %87, %88
  br i1 %95, label %98, label %96

96:                                               ; preds = %94
  %97 = urem i64 %87, %88
  br label %98

98:                                               ; preds = %91, %94, %96
  %99 = phi i64 [ %93, %91 ], [ %97, %96 ], [ %87, %94 ]
  %100 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %60, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %100, i64 %99
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %101, align 8
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false)
  br label %103

103:                                              ; preds = %66, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl14CopyBasicBlockEPNS0_4LoopEPKNS0_10BasicBlockEb(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"*, %"class.spvtools::opt::Loop"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::function.1026", align 8
  %6 = alloca %"class.std::__1::vector.976", align 8
  %7 = alloca %"class.std::__1::function.1020", align 8
  %8 = alloca %"class.std::__1::tuple.1084", align 8
  %9 = alloca %"class.std::__1::tuple.1074", align 1
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.std::__1::unique_ptr.40", align 8
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %15 = tail call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt10BasicBlock5CloneEPNS0_9IRContextE(%"class.spvtools::opt::BasicBlock"* %2, %"class.spvtools::opt::IRContext"* %14) #11
  %16 = bitcast %"class.spvtools::opt::BasicBlock"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.spvtools::opt::BasicBlock"* %15 to i64*
  store i64 %17, i64* %18, align 8
  %19 = bitcast %"class.std::__1::vector.976"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %6, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %22 = bitcast %"class.std::__1::function.1020"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.std::__1::function.1020", %"class.std::__1::function.1020"* %7, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::function.1020", %"class.std::__1::function.1020"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_121LoopUnrollerUtilsImpl17KillDebugDeclaresEPNS3_10BasicBlockEE3$_1S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %23, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl17KillDebugDeclaresEPNS5_10BasicBlockEE3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %24, align 8
  %25 = bitcast %"class.std::__1::function.1020"* %7 to %"class.std::__1::vector.976"**
  store %"class.std::__1::vector.976"* %6, %"class.std::__1::vector.976"** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::function.1020", %"class.std::__1::function.1020"* %7, i64 0, i32 0, i32 0, i32 1
  %27 = bitcast [8 x i8]* %26 to %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"**
  store %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"** %27, align 8
  %28 = bitcast %"class.std::__1::function.1026"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #11
  %29 = ptrtoint %"class.std::__1::function.1020"* %7 to i64
  %30 = getelementptr inbounds %"class.std::__1::function.1026", %"class.std::__1::function.1026"* %5, i64 0, i32 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::function.1026", %"class.std::__1::function.1026"* %5, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %30, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %31, align 8
  %32 = bitcast %"class.std::__1::function.1026"* %5 to i64*
  store i64 %29, i64* %32, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  br i1 %35, label %263, label %36

36:                                               ; preds = %4
  %37 = ptrtoint %"class.spvtools::opt::Instruction"* %34 to i64
  %38 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 11
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 65536
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %189

43:                                               ; preds = %36
  %44 = call i8* @_Znwm(i64 232) #12
  %45 = bitcast i8* %44 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %45, %"class.spvtools::opt::IRContext"* %38) #11
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 21, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %46, align 8
  %48 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"** %46 to i8**
  store i8* %44, i8** %48, align 8
  %49 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %47, null
  br i1 %49, label %186, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %47, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.601"* %52, null
  br i1 %53, label %78, label %54

54:                                               ; preds = %50, %75
  %55 = phi %"struct.std::__1::__hash_node_base.601"* [ %57, %75 ], [ %52, %50 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %55, i64 0, i32 0
  %57 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %55, i64 3
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %55, i64 5
  %60 = bitcast %"struct.std::__1::__hash_node_base.601"* %59 to %"struct.std::__1::__hash_node_base.1043"**
  %61 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %54, %63
  %64 = phi %"struct.std::__1::__hash_node_base.1043"* [ %66, %63 ], [ %61, %54 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1043", %"struct.std::__1::__hash_node_base.1043"* %64, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %65, align 8
  %67 = bitcast %"struct.std::__1::__hash_node_base.1043"* %64 to i8*
  call void @_ZdlPv(i8* %67) #12
  %68 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %66, null
  br i1 %68, label %69, label %63

69:                                               ; preds = %63, %54
  %70 = bitcast %"struct.std::__1::__hash_node_base.601"* %58 to %"struct.std::__1::__hash_node_base.1043"***
  %71 = load %"struct.std::__1::__hash_node_base.1043"**, %"struct.std::__1::__hash_node_base.1043"*** %70, align 8
  store %"struct.std::__1::__hash_node_base.1043"** null, %"struct.std::__1::__hash_node_base.1043"*** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.1043"** %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = bitcast %"struct.std::__1::__hash_node_base.1043"** %71 to i8*
  call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %73, %69
  %76 = bitcast %"struct.std::__1::__hash_node_base.601"* %55 to i8*
  call void @_ZdlPv(i8* %76) #12
  %77 = icmp eq %"struct.std::__1::__hash_node_base.601"* %57, null
  br i1 %77, label %78, label %54

78:                                               ; preds = %75, %50
  %79 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %47, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %79, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %79, align 8
  %81 = icmp eq %"struct.std::__1::__hash_node_base.601"** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = bitcast %"struct.std::__1::__hash_node_base.601"** %80 to i8*
  call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %78
  %85 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %47, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.601"* %86, null
  br i1 %87, label %112, label %88

88:                                               ; preds = %84, %109
  %89 = phi %"struct.std::__1::__hash_node_base.601"* [ %91, %109 ], [ %86, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %89, i64 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %89, i64 3
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %89, i64 5
  %94 = bitcast %"struct.std::__1::__hash_node_base.601"* %93 to %"struct.std::__1::__hash_node_base.1043"**
  %95 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %95, null
  br i1 %96, label %103, label %97

97:                                               ; preds = %88, %97
  %98 = phi %"struct.std::__1::__hash_node_base.1043"* [ %100, %97 ], [ %95, %88 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1043", %"struct.std::__1::__hash_node_base.1043"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %99, align 8
  %101 = bitcast %"struct.std::__1::__hash_node_base.1043"* %98 to i8*
  call void @_ZdlPv(i8* %101) #12
  %102 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %100, null
  br i1 %102, label %103, label %97

103:                                              ; preds = %97, %88
  %104 = bitcast %"struct.std::__1::__hash_node_base.601"* %92 to %"struct.std::__1::__hash_node_base.1043"***
  %105 = load %"struct.std::__1::__hash_node_base.1043"**, %"struct.std::__1::__hash_node_base.1043"*** %104, align 8
  store %"struct.std::__1::__hash_node_base.1043"** null, %"struct.std::__1::__hash_node_base.1043"*** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.1043"** %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %103
  %108 = bitcast %"struct.std::__1::__hash_node_base.1043"** %105 to i8*
  call void @_ZdlPv(i8* %108) #12
  br label %109

109:                                              ; preds = %107, %103
  %110 = bitcast %"struct.std::__1::__hash_node_base.601"* %89 to i8*
  call void @_ZdlPv(i8* %110) #12
  %111 = icmp eq %"struct.std::__1::__hash_node_base.601"* %91, null
  br i1 %111, label %112, label %88

112:                                              ; preds = %109, %84
  %113 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %47, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %113, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %113, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.601"** %114, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %112
  %117 = bitcast %"struct.std::__1::__hash_node_base.601"** %114 to i8*
  call void @_ZdlPv(i8* %117) #12
  br label %118

118:                                              ; preds = %116, %112
  %119 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %47, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.601"* %120, null
  br i1 %121, label %146, label %122

122:                                              ; preds = %118, %143
  %123 = phi %"struct.std::__1::__hash_node_base.601"* [ %125, %143 ], [ %120, %118 ]
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %123, i64 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %123, i64 3
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %123, i64 5
  %128 = bitcast %"struct.std::__1::__hash_node_base.601"* %127 to %"struct.std::__1::__hash_node_base.1043"**
  %129 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %129, null
  br i1 %130, label %137, label %131

131:                                              ; preds = %122, %131
  %132 = phi %"struct.std::__1::__hash_node_base.1043"* [ %134, %131 ], [ %129, %122 ]
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1043", %"struct.std::__1::__hash_node_base.1043"* %132, i64 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %133, align 8
  %135 = bitcast %"struct.std::__1::__hash_node_base.1043"* %132 to i8*
  call void @_ZdlPv(i8* %135) #12
  %136 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %134, null
  br i1 %136, label %137, label %131

137:                                              ; preds = %131, %122
  %138 = bitcast %"struct.std::__1::__hash_node_base.601"* %126 to %"struct.std::__1::__hash_node_base.1043"***
  %139 = load %"struct.std::__1::__hash_node_base.1043"**, %"struct.std::__1::__hash_node_base.1043"*** %138, align 8
  store %"struct.std::__1::__hash_node_base.1043"** null, %"struct.std::__1::__hash_node_base.1043"*** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base.1043"** %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %137
  %142 = bitcast %"struct.std::__1::__hash_node_base.1043"** %139 to i8*
  call void @_ZdlPv(i8* %142) #12
  br label %143

143:                                              ; preds = %141, %137
  %144 = bitcast %"struct.std::__1::__hash_node_base.601"* %123 to i8*
  call void @_ZdlPv(i8* %144) #12
  %145 = icmp eq %"struct.std::__1::__hash_node_base.601"* %125, null
  br i1 %145, label %146, label %122

146:                                              ; preds = %143, %118
  %147 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %47, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %147, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %147, align 8
  %149 = icmp eq %"struct.std::__1::__hash_node_base.601"** %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  %151 = bitcast %"struct.std::__1::__hash_node_base.601"** %148 to i8*
  call void @_ZdlPv(i8* %151) #12
  br label %152

152:                                              ; preds = %150, %146
  %153 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %47, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %154 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base"* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %152, %156
  %157 = phi %"struct.std::__1::__hash_node_base"* [ %159, %156 ], [ %154, %152 ]
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %157, i64 0, i32 0
  %159 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %158, align 8
  %160 = bitcast %"struct.std::__1::__hash_node_base"* %157 to i8*
  call void @_ZdlPv(i8* %160) #12
  %161 = icmp eq %"struct.std::__1::__hash_node_base"* %159, null
  br i1 %161, label %162, label %156

162:                                              ; preds = %156, %152
  %163 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %163, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base"** %164, null
  br i1 %165, label %168, label %166

166:                                              ; preds = %162
  %167 = bitcast %"struct.std::__1::__hash_node_base"** %164 to i8*
  call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %166, %162
  %169 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %47, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %170 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base"* %170, null
  br i1 %171, label %178, label %172

172:                                              ; preds = %168, %172
  %173 = phi %"struct.std::__1::__hash_node_base"* [ %175, %172 ], [ %170, %168 ]
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %173, i64 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %174, align 8
  %176 = bitcast %"struct.std::__1::__hash_node_base"* %173 to i8*
  call void @_ZdlPv(i8* %176) #12
  %177 = icmp eq %"struct.std::__1::__hash_node_base"* %175, null
  br i1 %177, label %178, label %172

178:                                              ; preds = %172, %168
  %179 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %47, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %179, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %179, align 8
  %181 = icmp eq %"struct.std::__1::__hash_node_base"** %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %178
  %183 = bitcast %"struct.std::__1::__hash_node_base"** %180 to i8*
  call void @_ZdlPv(i8* %183) #12
  br label %184

184:                                              ; preds = %182, %178
  %185 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %47 to i8*
  call void @_ZdlPv(i8* %185) #12
  br label %186

186:                                              ; preds = %184, %43
  %187 = load i32, i32* %39, align 8
  %188 = or i32 %187, 65536
  store i32 %188, i32* %39, align 8
  br label %189

189:                                              ; preds = %186, %36
  %190 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 21, i32 0, i32 0, i32 0
  %191 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %190, align 8
  %192 = call zeroext i1 @_ZN8spvtools3opt8analysis16DebugInfoManager14IsDebugDeclareEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DebugInfoManager"* %191, %"class.spvtools::opt::Instruction"* nonnull %34) #11
  br i1 %192, label %193, label %263

193:                                              ; preds = %189
  %194 = load %"class.std::__1::vector.976"*, %"class.std::__1::vector.976"** %25, align 8
  %195 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %194, i64 0, i32 0, i32 1
  %196 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %195, align 8
  %197 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %194, i64 0, i32 0, i32 2, i32 0, i32 0
  %198 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %197, align 8
  %199 = icmp eq %"class.spvtools::opt::Instruction"** %196, %198
  %200 = ptrtoint %"class.spvtools::opt::Instruction"** %198 to i64
  br i1 %199, label %206, label %201

201:                                              ; preds = %193
  %202 = bitcast %"class.spvtools::opt::Instruction"** %196 to i64*
  store i64 %37, i64* %202, align 8
  %203 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %196, i64 1
  %204 = ptrtoint %"class.spvtools::opt::Instruction"** %203 to i64
  %205 = bitcast %"class.spvtools::opt::Instruction"*** %195 to i64*
  store i64 %204, i64* %205, align 8
  br label %263

206:                                              ; preds = %193
  %207 = ptrtoint %"class.spvtools::opt::Instruction"** %196 to i64
  %208 = bitcast %"class.spvtools::opt::Instruction"*** %195 to i64*
  %209 = bitcast %"class.std::__1::vector.976"* %194 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = sub i64 %207, %210
  %212 = ashr exact i64 %211, 3
  %213 = add nsw i64 %212, 1
  %214 = icmp ugt i64 %213, 2305843009213693951
  br i1 %214, label %215, label %217

215:                                              ; preds = %206
  %216 = bitcast %"class.std::__1::vector.976"* %194 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %216) #13
  unreachable

217:                                              ; preds = %206
  %218 = bitcast %"class.spvtools::opt::Instruction"*** %197 to i64*
  %219 = sub i64 %200, %210
  %220 = ashr exact i64 %219, 3
  %221 = icmp ult i64 %220, 1152921504606846975
  br i1 %221, label %222, label %230

222:                                              ; preds = %217
  %223 = ashr exact i64 %219, 2
  %224 = icmp ult i64 %223, %213
  %225 = select i1 %224, i64 %213, i64 %223
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %235, label %227

227:                                              ; preds = %222
  %228 = icmp ugt i64 %225, 2305843009213693951
  br i1 %228, label %229, label %230

229:                                              ; preds = %227
  call void @abort() #13
  unreachable

230:                                              ; preds = %217, %227
  %231 = phi i64 [ %225, %227 ], [ 2305843009213693951, %217 ]
  %232 = shl i64 %231, 3
  %233 = call i8* @_Znwm(i64 %232) #12
  %234 = bitcast i8* %233 to %"class.spvtools::opt::Instruction"**
  br label %235

235:                                              ; preds = %230, %222
  %236 = phi i64 [ %231, %230 ], [ 0, %222 ]
  %237 = phi %"class.spvtools::opt::Instruction"** [ %234, %230 ], [ null, %222 ]
  %238 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %237, i64 %212
  %239 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %237, i64 %236
  %240 = ptrtoint %"class.spvtools::opt::Instruction"** %239 to i64
  %241 = bitcast %"class.spvtools::opt::Instruction"** %238 to i64*
  store i64 %37, i64* %241, align 8
  %242 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %238, i64 1
  %243 = ptrtoint %"class.spvtools::opt::Instruction"** %242 to i64
  %244 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %194, i64 0, i32 0, i32 0
  %245 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %244, align 8
  %246 = load i64, i64* %208, align 8
  %247 = ptrtoint %"class.spvtools::opt::Instruction"** %245 to i64
  %248 = sub i64 %246, %247
  %249 = ashr exact i64 %248, 3
  %250 = sub nsw i64 0, %249
  %251 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %238, i64 %250
  %252 = ptrtoint %"class.spvtools::opt::Instruction"** %251 to i64
  %253 = icmp sgt i64 %248, 0
  br i1 %253, label %254, label %258

254:                                              ; preds = %235
  %255 = bitcast %"class.spvtools::opt::Instruction"** %251 to i8*
  %256 = bitcast %"class.spvtools::opt::Instruction"** %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %255, i8* align 8 %256, i64 %248, i1 false) #11
  %257 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %244, align 8
  br label %258

258:                                              ; preds = %235, %254
  %259 = phi %"class.spvtools::opt::Instruction"** [ %245, %235 ], [ %257, %254 ]
  store i64 %252, i64* %209, align 8
  store i64 %243, i64* %208, align 8
  store i64 %240, i64* %218, align 8
  %260 = icmp eq %"class.spvtools::opt::Instruction"** %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %258
  %262 = bitcast %"class.spvtools::opt::Instruction"** %259 to i8*
  call void @_ZdlPv(i8* %262) #12
  br label %263

263:                                              ; preds = %258, %261, %201, %189, %4
  %264 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %15, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %265 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %264, align 8
  %266 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %265, i64 0, i32 0, i32 3
  %267 = load i8, i8* %266, align 8, !range !8
  %268 = icmp ne i8 %267, 0
  %269 = icmp eq %"class.spvtools::opt::Instruction"* %265, null
  %270 = or i1 %269, %268
  br i1 %270, label %285, label %271

271:                                              ; preds = %263
  %272 = getelementptr inbounds %"class.std::__1::function.1026", %"class.std::__1::function.1026"* %5, i64 0, i32 0, i32 0
  br label %273

273:                                              ; preds = %276, %271
  %274 = phi %"class.spvtools::opt::Instruction"* [ %282, %276 ], [ %265, %271 ]
  %275 = icmp eq %"class.spvtools::opt::Instruction"* %274, null
  br i1 %275, label %285, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %274, i64 0, i32 0, i32 1
  %278 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %277, align 8
  %279 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %278, i64 0, i32 0, i32 3
  %280 = load i8, i8* %279, align 8, !range !8
  %281 = icmp eq i8 %280, 0
  %282 = select i1 %281, %"class.spvtools::opt::Instruction"* %278, %"class.spvtools::opt::Instruction"* null
  %283 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %30, align 8
  %284 = call zeroext i1 %283(%"union.std::__1::__function::__policy_storage"* nonnull %272, %"class.spvtools::opt::Instruction"* nonnull %274) #11
  br i1 %284, label %273, label %285

285:                                              ; preds = %276, %273, %263
  %286 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %31, align 8
  %287 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %286, i64 0, i32 1
  %288 = load void (i8*)*, void (i8*)** %287, align 8
  %289 = icmp eq void (i8*)* %288, null
  br i1 %289, label %293, label %290

290:                                              ; preds = %285
  %291 = getelementptr inbounds %"class.std::__1::function.1026", %"class.std::__1::function.1026"* %5, i64 0, i32 0, i32 0, i32 0
  %292 = load i8*, i8** %291, align 8
  call void %288(i8* %292) #11
  br label %293

293:                                              ; preds = %290, %285
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #11
  %294 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %24, align 8
  %295 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %294, i64 0, i32 1
  %296 = load void (i8*)*, void (i8*)** %295, align 8
  %297 = icmp eq void (i8*)* %296, null
  br i1 %297, label %301, label %298

298:                                              ; preds = %293
  %299 = getelementptr inbounds %"class.std::__1::function.1020", %"class.std::__1::function.1020"* %7, i64 0, i32 0, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  call void %296(i8* %300) #11
  br label %301

301:                                              ; preds = %298, %293
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #11
  %302 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %20, align 8
  %303 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %21, align 8
  %304 = icmp eq %"class.spvtools::opt::Instruction"** %302, %303
  br i1 %304, label %307, label %314

305:                                              ; preds = %314
  %306 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %20, align 8
  br label %307

307:                                              ; preds = %305, %301
  %308 = phi %"class.spvtools::opt::Instruction"** [ %306, %305 ], [ %302, %301 ]
  %309 = icmp eq %"class.spvtools::opt::Instruction"** %308, null
  br i1 %309, label %321, label %310

310:                                              ; preds = %307
  %311 = ptrtoint %"class.spvtools::opt::Instruction"** %308 to i64
  %312 = bitcast %"class.spvtools::opt::Instruction"*** %21 to i64*
  store i64 %311, i64* %312, align 8
  %313 = bitcast %"class.spvtools::opt::Instruction"** %308 to i8*
  call void @_ZdlPv(i8* %313) #12
  br label %321

314:                                              ; preds = %301, %314
  %315 = phi %"class.spvtools::opt::Instruction"** [ %319, %314 ], [ %302, %301 ]
  %316 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %315, align 8
  %317 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %318 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %317, %"class.spvtools::opt::Instruction"* %316) #11
  %319 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %315, i64 1
  %320 = icmp eq %"class.spvtools::opt::Instruction"** %319, %303
  br i1 %320, label %305, label %314

321:                                              ; preds = %307, %310
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  call fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl18AssignNewResultIdsEPNS0_10BasicBlockE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, %"class.spvtools::opt::BasicBlock"* %15)
  %322 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 2
  %323 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %322, align 8
  %324 = icmp eq %"class.spvtools::opt::BasicBlock"* %323, %2
  br i1 %324, label %325, label %390

325:                                              ; preds = %321
  br i1 %3, label %388, label %326

326:                                              ; preds = %325
  %327 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 1
  %328 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %327, align 8
  %329 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %328) #11
  %330 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %330) #11
  %331 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %33, align 8
  %332 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %331, i64 0, i32 4
  %333 = load i8, i8* %332, align 1, !range !8
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %340, label %335

335:                                              ; preds = %326
  %336 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %331, i64 0, i32 3
  %337 = load i8, i8* %336, align 4, !range !8
  %338 = zext i8 %337 to i32
  %339 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %331, i32 %338) #11
  br label %340

340:                                              ; preds = %326, %335
  %341 = phi i32 [ %339, %335 ], [ 0, %326 ]
  %342 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %342, align 8
  %343 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %344 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %345 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %346 = bitcast i32** %344 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %345, %"struct.std::__1::aligned_storage<4, 4>::type"** %346, align 8
  %347 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %348 = bitcast %"class.std::__1::unique_ptr.0"* %347 to i64*
  store i64 0, i64* %348, align 8
  %349 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %345 to i32*
  store i64 1, i64* %343, align 8
  store i32 %341, i32* %349, align 8
  %350 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %329, i64 0, i32 3
  %351 = load i8, i8* %350, align 4, !range !8
  %352 = icmp eq i8 %351, 0
  %353 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %329, i64 0, i32 4
  %354 = load i8, i8* %353, align 1, !range !8
  %355 = icmp eq i8 %354, 0
  %356 = select i1 %355, i64 1, i64 2
  %357 = xor i1 %355, true
  %358 = zext i1 %357 to i64
  %359 = select i1 %352, i64 %358, i64 %356
  %360 = add nuw nsw i64 %359, 1
  %361 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %329, i64 0, i32 6, i32 0, i32 0
  %362 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %361, align 8
  %363 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %362, i64 %360, i32 1
  %364 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %363, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %342, align 8
  %365 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %366 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %365, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %365, align 8
  %367 = icmp eq %"class.std::__1::vector.3"* %366, null
  br i1 %367, label %379, label %368

368:                                              ; preds = %340
  %369 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %366, i64 0, i32 0, i32 0
  %370 = load i32*, i32** %369, align 8
  %371 = icmp eq i32* %370, null
  br i1 %371, label %377, label %372

372:                                              ; preds = %368
  %373 = ptrtoint i32* %370 to i64
  %374 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %366, i64 0, i32 0, i32 1
  %375 = bitcast i32** %374 to i64*
  store i64 %373, i64* %375, align 8
  %376 = bitcast i32* %370 to i8*
  call void @_ZdlPv(i8* %376) #12
  br label %377

377:                                              ; preds = %372, %368
  %378 = bitcast %"class.std::__1::vector.3"* %366 to i8*
  call void @_ZdlPv(i8* %378) #12
  br label %379

379:                                              ; preds = %340, %377
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %330) #11
  %380 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %381 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %380, i64 0, i32 11
  %382 = load i32, i32* %381, align 8
  %383 = and i32 %382, 1
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %388, label %385

385:                                              ; preds = %379
  %386 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %380, i64 0, i32 6, i32 0, i32 0, i32 0
  %387 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %386, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %387, %"class.spvtools::opt::Instruction"* %329) #11
  br label %388

388:                                              ; preds = %385, %379, %325
  %389 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 6
  store %"class.spvtools::opt::BasicBlock"* %15, %"class.spvtools::opt::BasicBlock"** %389, align 8
  br label %390

390:                                              ; preds = %388, %321
  %391 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 1
  %392 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %391, align 8
  %393 = icmp eq %"class.spvtools::opt::BasicBlock"* %392, %2
  br i1 %393, label %394, label %470

394:                                              ; preds = %390
  %395 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 8
  store %"class.spvtools::opt::BasicBlock"* %15, %"class.spvtools::opt::BasicBlock"** %395, align 8
  br i1 %3, label %470, label %396

396:                                              ; preds = %394
  %397 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %15) #11
  %398 = ptrtoint %"class.spvtools::opt::Instruction"* %397 to i64
  %399 = icmp eq %"class.spvtools::opt::Instruction"* %397, null
  br i1 %399, label %470, label %400

400:                                              ; preds = %396
  %401 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3
  %402 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %403 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %402, align 8
  %404 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %405 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %404, align 8
  %406 = icmp eq %"class.spvtools::opt::Instruction"** %403, %405
  %407 = ptrtoint %"class.spvtools::opt::Instruction"** %405 to i64
  br i1 %406, label %413, label %408

408:                                              ; preds = %400
  %409 = bitcast %"class.spvtools::opt::Instruction"** %403 to i64*
  store i64 %398, i64* %409, align 8
  %410 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %403, i64 1
  %411 = ptrtoint %"class.spvtools::opt::Instruction"** %410 to i64
  %412 = bitcast %"class.spvtools::opt::Instruction"*** %402 to i64*
  store i64 %411, i64* %412, align 8
  br label %470

413:                                              ; preds = %400
  %414 = ptrtoint %"class.spvtools::opt::Instruction"** %403 to i64
  %415 = bitcast %"class.spvtools::opt::Instruction"*** %402 to i64*
  %416 = bitcast %"class.std::__1::vector.976"* %401 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = sub i64 %414, %417
  %419 = ashr exact i64 %418, 3
  %420 = add nsw i64 %419, 1
  %421 = icmp ugt i64 %420, 2305843009213693951
  br i1 %421, label %422, label %424

422:                                              ; preds = %413
  %423 = bitcast %"class.std::__1::vector.976"* %401 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %423) #13
  unreachable

424:                                              ; preds = %413
  %425 = bitcast %"class.spvtools::opt::Instruction"*** %404 to i64*
  %426 = sub i64 %407, %417
  %427 = ashr exact i64 %426, 3
  %428 = icmp ult i64 %427, 1152921504606846975
  br i1 %428, label %429, label %437

429:                                              ; preds = %424
  %430 = ashr exact i64 %426, 2
  %431 = icmp ult i64 %430, %420
  %432 = select i1 %431, i64 %420, i64 %430
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %442, label %434

434:                                              ; preds = %429
  %435 = icmp ugt i64 %432, 2305843009213693951
  br i1 %435, label %436, label %437

436:                                              ; preds = %434
  call void @abort() #13
  unreachable

437:                                              ; preds = %434, %424
  %438 = phi i64 [ %432, %434 ], [ 2305843009213693951, %424 ]
  %439 = shl i64 %438, 3
  %440 = call i8* @_Znwm(i64 %439) #12
  %441 = bitcast i8* %440 to %"class.spvtools::opt::Instruction"**
  br label %442

442:                                              ; preds = %437, %429
  %443 = phi i64 [ %438, %437 ], [ 0, %429 ]
  %444 = phi %"class.spvtools::opt::Instruction"** [ %441, %437 ], [ null, %429 ]
  %445 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %444, i64 %419
  %446 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %444, i64 %443
  %447 = ptrtoint %"class.spvtools::opt::Instruction"** %446 to i64
  %448 = bitcast %"class.spvtools::opt::Instruction"** %445 to i64*
  store i64 %398, i64* %448, align 8
  %449 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %445, i64 1
  %450 = ptrtoint %"class.spvtools::opt::Instruction"** %449 to i64
  %451 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %401, i64 0, i32 0, i32 0
  %452 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %451, align 8
  %453 = load i64, i64* %415, align 8
  %454 = ptrtoint %"class.spvtools::opt::Instruction"** %452 to i64
  %455 = sub i64 %453, %454
  %456 = ashr exact i64 %455, 3
  %457 = sub nsw i64 0, %456
  %458 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %445, i64 %457
  %459 = ptrtoint %"class.spvtools::opt::Instruction"** %458 to i64
  %460 = icmp sgt i64 %455, 0
  br i1 %460, label %461, label %465

461:                                              ; preds = %442
  %462 = bitcast %"class.spvtools::opt::Instruction"** %458 to i8*
  %463 = bitcast %"class.spvtools::opt::Instruction"** %452 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %462, i8* align 8 %463, i64 %455, i1 false) #11
  %464 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %451, align 8
  br label %465

465:                                              ; preds = %461, %442
  %466 = phi %"class.spvtools::opt::Instruction"** [ %452, %442 ], [ %464, %461 ]
  store i64 %459, i64* %416, align 8
  store i64 %450, i64* %415, align 8
  store i64 %447, i64* %425, align 8
  %467 = icmp eq %"class.spvtools::opt::Instruction"** %466, null
  br i1 %467, label %470, label %468

468:                                              ; preds = %465
  %469 = bitcast %"class.spvtools::opt::Instruction"** %466 to i8*
  call void @_ZdlPv(i8* %469) #12
  br label %470

470:                                              ; preds = %396, %408, %465, %468, %394, %390
  %471 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 5
  %472 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %471, align 8
  %473 = icmp eq %"class.spvtools::opt::BasicBlock"* %472, %2
  br i1 %473, label %474, label %476

474:                                              ; preds = %470
  %475 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 9
  store %"class.spvtools::opt::BasicBlock"* %15, %"class.spvtools::opt::BasicBlock"** %475, align 8
  br label %476

476:                                              ; preds = %474, %470
  %477 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 6
  %478 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %477, align 8
  %479 = icmp eq %"class.spvtools::opt::BasicBlock"* %478, %2
  br i1 %479, label %480, label %482

480:                                              ; preds = %476
  %481 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 7
  store %"class.spvtools::opt::BasicBlock"* %15, %"class.spvtools::opt::BasicBlock"** %481, align 8
  br label %482

482:                                              ; preds = %480, %476
  %483 = bitcast %"class.std::__1::unique_ptr.40"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %483) #11
  %484 = ptrtoint %"class.spvtools::opt::BasicBlock"* %15 to i64
  %485 = bitcast %"class.std::__1::unique_ptr.40"* %11 to i64*
  store i64 %484, i64* %485, align 8
  %486 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %487 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %486, align 8
  %488 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %489 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %488, align 8
  %490 = icmp ult %"class.std::__1::unique_ptr.40"* %487, %489
  br i1 %490, label %491, label %497

491:                                              ; preds = %482
  %492 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %492, align 8
  %493 = bitcast %"class.std::__1::unique_ptr.40"* %487 to i64*
  store i64 %484, i64* %493, align 8
  %494 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %487, i64 1
  %495 = ptrtoint %"class.std::__1::unique_ptr.40"* %494 to i64
  %496 = bitcast %"class.std::__1::unique_ptr.40"** %486 to i64*
  store i64 %495, i64* %496, align 8
  br label %499

497:                                              ; preds = %482
  %498 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 2
  call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"* %498, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %11) #11
  br label %499

499:                                              ; preds = %491, %497
  %500 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 0, i32 0, i32 0, i32 0
  %501 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %500, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %500, align 8
  %502 = icmp eq %"class.spvtools::opt::BasicBlock"* %501, null
  br i1 %502, label %505, label %503

503:                                              ; preds = %499
  %504 = bitcast %"class.std::__1::unique_ptr.40"* %11 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %504, %"class.spvtools::opt::BasicBlock"* nonnull %501) #11
  br label %505

505:                                              ; preds = %499, %503
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %483) #11
  %506 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %506) #11
  %507 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %508 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %507, align 8
  %509 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %508, i64 0, i32 4
  %510 = load i8, i8* %509, align 1, !range !8
  %511 = icmp eq i8 %510, 0
  br i1 %511, label %517, label %512

512:                                              ; preds = %505
  %513 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %508, i64 0, i32 3
  %514 = load i8, i8* %513, align 4, !range !8
  %515 = zext i8 %514 to i32
  %516 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %508, i32 %515) #11
  br label %517

517:                                              ; preds = %505, %512
  %518 = phi i32 [ %516, %512 ], [ 0, %505 ]
  store i32 %518, i32* %12, align 4
  %519 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 10, i32 0
  %520 = bitcast %"class.std::__1::tuple.1084"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %520) #11
  %521 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %12, i32** %521, align 8
  %522 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %522) #11
  %523 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %519, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1084"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %9) #11
  %524 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %523, 0
  %525 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %524, i64 3
  %526 = bitcast %"struct.std::__1::__hash_node_base.333"* %525 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %522) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %520) #11
  store %"class.spvtools::opt::BasicBlock"* %15, %"class.spvtools::opt::BasicBlock"** %526, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %506) #11
  ret void
}

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

declare %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt10BasicBlock5CloneEPNS0_9IRContextE(%"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::IRContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl18AssignNewResultIdsEPNS0_10BasicBlockE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"*, %"class.spvtools::opt::BasicBlock"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1084", align 8
  %4 = alloca %"class.std::__1::tuple.1074", align 1
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.1074", align 1
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::tuple.1084", align 8
  %10 = alloca %"class.std::__1::tuple.1074", align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %45

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %21, align 8
  %23 = tail call i8* @_Znwm(i64 104) #12
  %24 = bitcast i8* %23 to %"class.spvtools::opt::analysis::DefUseManager"*
  %25 = getelementptr inbounds i8, i8* %23, i64 32
  %26 = bitcast i8* %25 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %23, i64 48
  %28 = getelementptr inbounds i8, i8* %23, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #11
  %29 = bitcast i8* %28 to i8**
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 64
  %31 = getelementptr inbounds i8, i8* %23, i64 96
  %32 = bitcast i8* %31 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %32, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %24, %"class.spvtools::opt::Module"* %22) #11
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 6
  %34 = ptrtoint i8* %23 to i64
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.62"* %33 to i64*
  store i64 %34, i64* %37, align 8
  %38 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %20
  %40 = bitcast %"class.std::__1::unique_ptr.62"* %33 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %40, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %36) #11
  br label %41

41:                                               ; preds = %39, %20
  %42 = load i32, i32* %16, align 8
  %43 = or i32 %42, 1
  store i32 %43, i32* %16, align 8
  %44 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  br label %45

45:                                               ; preds = %2, %41
  %46 = phi %"class.spvtools::opt::IRContext"* [ %15, %2 ], [ %44, %41 ]
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 6, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %49, align 8
  %51 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %50) #11
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 5, i32 0, i32 2
  %55 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %55, i64 0, i32 2
  %57 = load i8, i8* %56, align 8, !range !8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %65

59:                                               ; preds = %53
  %60 = tail call i8* @_Znwm(i64 48) #12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #11
  %61 = getelementptr inbounds i8, i8* %60, i64 37
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 5, i32 0, i32 1, i32 0
  %63 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %62, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 5, i32 0, i32 0
  tail call void %63(%"union.std::__1::__function::__policy_storage"* %64, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.4, i8* nonnull %60) #11
  tail call void @_ZdlPv(i8* nonnull %60) #12
  br label %65

65:                                               ; preds = %45, %53, %59
  %66 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %68, i64 0, i32 4
  %70 = load i8, i8* %69, align 1, !range !8
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %68, i64 0, i32 3
  %74 = load i8, i8* %73, align 4, !range !8
  %75 = zext i8 %74 to i32
  %76 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %68, i32 %75) #11
  br label %77

77:                                               ; preds = %65, %72
  %78 = phi i32 [ %76, %72 ], [ 0, %65 ]
  store i32 %78, i32* %11, align 4
  %79 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 11, i32 0
  %80 = bitcast %"class.std::__1::tuple.1084"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #11
  %81 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %9, i64 0, i32 0, i32 0, i32 0
  store i32* %11, i32** %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %82) #11
  %83 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %79, i32* nonnull dereferenceable(4) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1084"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %10) #11
  %84 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %83, 0
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %84, i64 2
  %86 = bitcast %"struct.std::__1::__hash_node_base.254"* %85 to %"struct.std::__1::pair.1014"*
  %87 = getelementptr inbounds %"struct.std::__1::pair.1014", %"struct.std::__1::pair.1014"* %86, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #11
  store i32 %51, i32* %87, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %66) #11
  %88 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %88, i64 0, i32 3
  %90 = load i8, i8* %89, align 4, !range !8
  %91 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %91) #11
  %92 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %95 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %96 = bitcast i32** %94 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %95, %"struct.std::__1::aligned_storage<4, 4>::type"** %96, align 8
  %97 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %98 = bitcast %"class.std::__1::unique_ptr.0"* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %95 to i32*
  store i64 1, i64* %93, align 8
  store i32 %51, i32* %99, align 8
  %100 = zext i8 %90 to i64
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %88, i64 0, i32 6, i32 0, i32 0
  %102 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %101, align 8
  %103 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %102, i64 %100, i32 1
  %104 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %103, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %105 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %106 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %105, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %105, align 8
  %107 = icmp eq %"class.std::__1::vector.3"* %106, null
  br i1 %107, label %119, label %108

108:                                              ; preds = %77
  %109 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %106, i64 0, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8
  %111 = icmp eq i32* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %108
  %113 = ptrtoint i32* %110 to i64
  %114 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %106, i64 0, i32 0, i32 1
  %115 = bitcast i32** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = bitcast i32* %110 to i8*
  call void @_ZdlPv(i8* %116) #12
  br label %117

117:                                              ; preds = %112, %108
  %118 = bitcast %"class.std::__1::vector.3"* %106 to i8*
  call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %77, %117
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %91) #11
  %120 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %48, %"class.spvtools::opt::Instruction"* %120) #11
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  %123 = bitcast %"class.spvtools::opt::Instruction"** %121 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %124 to %"class.spvtools::opt::Instruction"*
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, %125
  br i1 %126, label %149, label %127

127:                                              ; preds = %119
  %128 = bitcast i32* %12 to i8*
  %129 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  %130 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  %131 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %132 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %133 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %134 = bitcast i32** %132 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %135 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %136 = bitcast %"class.std::__1::unique_ptr.0"* %135 to i64*
  %137 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %133 to i32*
  %138 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::tuple"* %5 to i8*
  %140 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %6, i64 0, i32 0
  %142 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 7
  %143 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 5
  %144 = bitcast i32* %13 to i8*
  %145 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 12, i32 0
  %146 = bitcast %"class.std::__1::tuple.1084"* %3 to i8*
  %147 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %3, i64 0, i32 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %4, i64 0, i32 0
  br label %150

149:                                              ; preds = %242, %119
  ret void

150:                                              ; preds = %127, %242
  %151 = phi %"class.spvtools::opt::Instruction"* [ %125, %127 ], [ %247, %242 ]
  %152 = phi i64 [ %124, %127 ], [ %246, %242 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #11
  store i32 -1431655766, i32* %12, align 4
  %153 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %151, i64 0, i32 4
  %154 = load i8, i8* %153, align 1, !range !8
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %150
  store i32 0, i32* %12, align 4
  br label %242

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %151, i64 0, i32 3
  %159 = load i8, i8* %158, align 4, !range !8
  %160 = zext i8 %159 to i32
  %161 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %151, i32 %160) #11
  store i32 %161, i32* %12, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %242, label %163

163:                                              ; preds = %157
  %164 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %165 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 4, i32 0, i32 0, i32 0
  %166 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %165, align 8
  %167 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %166) #11
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %181

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 5, i32 0, i32 2
  %171 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %171, i64 0, i32 2
  %173 = load i8, i8* %172, align 8, !range !8
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %175, label %181

175:                                              ; preds = %169
  %176 = call i8* @_Znwm(i64 48) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %176, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i64 37, i1 false) #11
  %177 = getelementptr inbounds i8, i8* %176, i64 37
  store i8 0, i8* %177, align 1
  %178 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 5, i32 0, i32 1, i32 0
  %179 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %178, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %164, i64 0, i32 5, i32 0, i32 0
  call void %179(%"union.std::__1::__function::__policy_storage"* %180, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.3, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.4, i8* nonnull %176) #11
  call void @_ZdlPv(i8* nonnull %176) #12
  br label %181

181:                                              ; preds = %163, %169, %175
  %182 = load i8, i8* %158, align 4, !range !8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %129) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %133, %"struct.std::__1::aligned_storage<4, 4>::type"** %134, align 8
  store i64 0, i64* %136, align 8
  store i64 1, i64* %131, align 8
  store i32 %167, i32* %137, align 8
  %183 = zext i8 %182 to i64
  %184 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %151, i64 0, i32 6, i32 0, i32 0
  %185 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %184, align 8
  %186 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %185, i64 %183, i32 1
  %187 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %186, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %188 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %138, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %138, align 8
  %189 = icmp eq %"class.std::__1::vector.3"* %188, null
  br i1 %189, label %201, label %190

190:                                              ; preds = %181
  %191 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %188, i64 0, i32 0, i32 0
  %192 = load i32*, i32** %191, align 8
  %193 = icmp eq i32* %192, null
  br i1 %193, label %199, label %194

194:                                              ; preds = %190
  %195 = ptrtoint i32* %192 to i64
  %196 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %188, i64 0, i32 0, i32 1
  %197 = bitcast i32** %196 to i64*
  store i64 %195, i64* %197, align 8
  %198 = bitcast i32* %192 to i8*
  call void @_ZdlPv(i8* %198) #12
  br label %199

199:                                              ; preds = %194, %190
  %200 = bitcast %"class.std::__1::vector.3"* %188 to i8*
  call void @_ZdlPv(i8* %200) #12
  br label %201

201:                                              ; preds = %181, %199
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %129) #11
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %48, %"class.spvtools::opt::Instruction"* %151) #11
  %202 = load i8, i8* %153, align 1, !range !8
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %208, label %204

204:                                              ; preds = %201
  %205 = load i8, i8* %158, align 4, !range !8
  %206 = zext i8 %205 to i32
  %207 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %151, i32 %206) #11
  br label %208

208:                                              ; preds = %201, %204
  %209 = phi i32 [ %207, %204 ], [ 0, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139) #11
  store i32* %12, i32** %140, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %141) #11
  %210 = call { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"* %79, i32* nonnull dereferenceable(4) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %6) #11
  %211 = extractvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %210, 0
  %212 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %211, i64 2
  %213 = bitcast %"struct.std::__1::__hash_node_base.254"* %212 to %"struct.std::__1::pair.1014"*
  %214 = getelementptr inbounds %"struct.std::__1::pair.1014", %"struct.std::__1::pair.1014"* %213, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %141) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139) #11
  store i32 %209, i32* %214, align 4
  %215 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %142, align 8
  %216 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %215, i64 0, i32 4
  %217 = load i8, i8* %216, align 1, !range !8
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %224, label %219

219:                                              ; preds = %208
  %220 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %215, i64 0, i32 3
  %221 = load i8, i8* %220, align 4, !range !8
  %222 = zext i8 %221 to i32
  %223 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %215, i32 %222) #11
  br label %224

224:                                              ; preds = %208, %219
  %225 = phi i32 [ %223, %219 ], [ 0, %208 ]
  %226 = load i32, i32* %12, align 4
  %227 = icmp eq i32 %225, %226
  br i1 %227, label %228, label %229

228:                                              ; preds = %224
  store %"class.spvtools::opt::Instruction"* %151, %"class.spvtools::opt::Instruction"** %143, align 8
  br label %229

229:                                              ; preds = %228, %224
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %144) #11
  %230 = load i8, i8* %153, align 1, !range !8
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %236, label %232

232:                                              ; preds = %229
  %233 = load i8, i8* %158, align 4, !range !8
  %234 = zext i8 %233 to i32
  %235 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %151, i32 %234) #11
  br label %236

236:                                              ; preds = %229, %232
  %237 = phi i32 [ %235, %232 ], [ 0, %229 ]
  store i32 %237, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #11
  store i32* %13, i32** %147, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %148) #11
  %238 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %145, i32* nonnull dereferenceable(4) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1084"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %4) #11
  %239 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %238, 0
  %240 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %239, i64 3
  %241 = bitcast %"struct.std::__1::__hash_node_base"* %240 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %148) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #11
  store %"class.spvtools::opt::Instruction"* %151, %"class.spvtools::opt::Instruction"** %241, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %144) #11
  br label %242

242:                                              ; preds = %157, %156, %236
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #11
  %243 = inttoptr i64 %152 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %244 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %243, i64 0, i32 1
  %245 = bitcast %"class.spvtools::opt::Instruction"** %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = inttoptr i64 %246 to %"class.spvtools::opt::Instruction"*
  %248 = icmp eq %"class.spvtools::opt::Instruction"* %122, %247
  br i1 %248, label %149, label %150
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt9IRContext8KillInstEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1020"**
  %4 = load %"class.std::__1::function.1020"*, %"class.std::__1::function.1020"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1020", %"class.std::__1::function.1020"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1020", %"class.std::__1::function.1020"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_121LoopUnrollerUtilsImpl17KillDebugDeclaresEPNS3_10BasicBlockEE3$_1S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"**
  %6 = load %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"*, %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %6, i64 0, i32 0
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 65536
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %2
  %14 = tail call i8* @_Znwm(i64 232) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DebugInfoManager"*
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %15, %"class.spvtools::opt::IRContext"* %8) #11
  %16 = ptrtoint i8* %14 to i64
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 21
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.593"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.593"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.spvtools::opt::analysis::DebugInfoManager"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %13
  tail call void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"* nonnull %19) #11
  %23 = bitcast %"class.spvtools::opt::analysis::DebugInfoManager"* %19 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %22, %13
  %25 = load i32, i32* %9, align 8
  %26 = or i32 %25, 65536
  store i32 %26, i32* %9, align 8
  br label %27

27:                                               ; preds = %24, %2
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 21, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::analysis::DebugInfoManager"** %28, align 8
  %30 = tail call zeroext i1 @_ZN8spvtools3opt8analysis16DebugInfoManager14IsDebugDeclareEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DebugInfoManager"* %29, %"class.spvtools::opt::Instruction"* %1) #11
  br i1 %30, label %31, label %102

31:                                               ; preds = %27
  %32 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::vector.976"**
  %33 = load %"class.std::__1::vector.976"*, %"class.std::__1::vector.976"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %33, i64 0, i32 0, i32 1
  %35 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %34, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %33, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %36, align 8
  %38 = icmp eq %"class.spvtools::opt::Instruction"** %35, %37
  %39 = ptrtoint %"class.spvtools::opt::Instruction"** %37 to i64
  br i1 %38, label %45, label %40

40:                                               ; preds = %31
  %41 = bitcast %"class.spvtools::opt::Instruction"** %35 to i64*
  store i64 %3, i64* %41, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %35, i64 1
  %43 = ptrtoint %"class.spvtools::opt::Instruction"** %42 to i64
  %44 = bitcast %"class.spvtools::opt::Instruction"*** %34 to i64*
  store i64 %43, i64* %44, align 8
  br label %102

45:                                               ; preds = %31
  %46 = ptrtoint %"class.spvtools::opt::Instruction"** %35 to i64
  %47 = bitcast %"class.spvtools::opt::Instruction"*** %34 to i64*
  %48 = bitcast %"class.std::__1::vector.976"* %33 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %46, %49
  %51 = ashr exact i64 %50, 3
  %52 = add nsw i64 %51, 1
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %56

54:                                               ; preds = %45
  %55 = bitcast %"class.std::__1::vector.976"* %33 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %55) #13
  unreachable

56:                                               ; preds = %45
  %57 = bitcast %"class.spvtools::opt::Instruction"*** %36 to i64*
  %58 = sub i64 %39, %49
  %59 = ashr exact i64 %58, 3
  %60 = icmp ult i64 %59, 1152921504606846975
  br i1 %60, label %61, label %69

61:                                               ; preds = %56
  %62 = ashr exact i64 %58, 2
  %63 = icmp ult i64 %62, %52
  %64 = select i1 %63, i64 %52, i64 %62
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %61
  %67 = icmp ugt i64 %64, 2305843009213693951
  br i1 %67, label %68, label %69

68:                                               ; preds = %66
  tail call void @abort() #13
  unreachable

69:                                               ; preds = %66, %56
  %70 = phi i64 [ %64, %66 ], [ 2305843009213693951, %56 ]
  %71 = shl i64 %70, 3
  %72 = tail call i8* @_Znwm(i64 %71) #12
  %73 = bitcast i8* %72 to %"class.spvtools::opt::Instruction"**
  br label %74

74:                                               ; preds = %69, %61
  %75 = phi i64 [ %70, %69 ], [ 0, %61 ]
  %76 = phi %"class.spvtools::opt::Instruction"** [ %73, %69 ], [ null, %61 ]
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %76, i64 %51
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %76, i64 %75
  %79 = ptrtoint %"class.spvtools::opt::Instruction"** %78 to i64
  %80 = bitcast %"class.spvtools::opt::Instruction"** %77 to i64*
  store i64 %3, i64* %80, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %77, i64 1
  %82 = ptrtoint %"class.spvtools::opt::Instruction"** %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %33, i64 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %83, align 8
  %85 = load i64, i64* %47, align 8
  %86 = ptrtoint %"class.spvtools::opt::Instruction"** %84 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = sub nsw i64 0, %88
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %77, i64 %89
  %91 = ptrtoint %"class.spvtools::opt::Instruction"** %90 to i64
  %92 = icmp sgt i64 %87, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %74
  %94 = bitcast %"class.spvtools::opt::Instruction"** %90 to i8*
  %95 = bitcast %"class.spvtools::opt::Instruction"** %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 %87, i1 false) #11
  %96 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %83, align 8
  br label %97

97:                                               ; preds = %93, %74
  %98 = phi %"class.spvtools::opt::Instruction"** [ %84, %74 ], [ %96, %93 ]
  store i64 %91, i64* %48, align 8
  store i64 %82, i64* %47, align 8
  store i64 %79, i64* %57, align 8
  %99 = icmp eq %"class.spvtools::opt::Instruction"** %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %97
  %101 = bitcast %"class.spvtools::opt::Instruction"** %98 to i8*
  tail call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %27, %40, %97, %100
  ret void
}

declare zeroext i1 @_ZN8spvtools3opt8analysis16DebugInfoManager14IsDebugDeclareEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

declare void @_ZN8spvtools3opt8analysis16DebugInfoManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::DebugInfoManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis16DebugInfoManagerD2Ev(%"class.spvtools::opt::analysis::DebugInfoManager"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.601"* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1, %26
  %6 = phi %"struct.std::__1::__hash_node_base.601"* [ %8, %26 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 5
  %10 = bitcast %"struct.std::__1::__hash_node_base.601"* %9 to %"struct.std::__1::__hash_node_base.1043"**
  %11 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %10, align 8
  %12 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %5, %13
  %14 = phi %"struct.std::__1::__hash_node_base.1043"* [ %16, %13 ], [ %11, %5 ]
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1043", %"struct.std::__1::__hash_node_base.1043"* %14, i64 0, i32 0
  %16 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %15, align 8
  %17 = bitcast %"struct.std::__1::__hash_node_base.1043"* %14 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  %18 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %16, null
  br i1 %18, label %19, label %13

19:                                               ; preds = %13, %5
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %6, i64 3
  %21 = bitcast %"struct.std::__1::__hash_node_base.601"* %20 to %"struct.std::__1::__hash_node_base.1043"***
  %22 = load %"struct.std::__1::__hash_node_base.1043"**, %"struct.std::__1::__hash_node_base.1043"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.1043"** null, %"struct.std::__1::__hash_node_base.1043"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.1043"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = bitcast %"struct.std::__1::__hash_node_base.1043"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %24, %19
  %27 = bitcast %"struct.std::__1::__hash_node_base.601"* %6 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  %28 = icmp eq %"struct.std::__1::__hash_node_base.601"* %8, null
  br i1 %28, label %29, label %5

29:                                               ; preds = %26, %1
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.601"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.601"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.601"* %37, null
  br i1 %38, label %63, label %39

39:                                               ; preds = %35, %60
  %40 = phi %"struct.std::__1::__hash_node_base.601"* [ %42, %60 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 5
  %44 = bitcast %"struct.std::__1::__hash_node_base.601"* %43 to %"struct.std::__1::__hash_node_base.1043"**
  %45 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %39, %47
  %48 = phi %"struct.std::__1::__hash_node_base.1043"* [ %50, %47 ], [ %45, %39 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1043", %"struct.std::__1::__hash_node_base.1043"* %48, i64 0, i32 0
  %50 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %49, align 8
  %51 = bitcast %"struct.std::__1::__hash_node_base.1043"* %48 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  %52 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %50, null
  br i1 %52, label %53, label %47

53:                                               ; preds = %47, %39
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %40, i64 3
  %55 = bitcast %"struct.std::__1::__hash_node_base.601"* %54 to %"struct.std::__1::__hash_node_base.1043"***
  %56 = load %"struct.std::__1::__hash_node_base.1043"**, %"struct.std::__1::__hash_node_base.1043"*** %55, align 8
  store %"struct.std::__1::__hash_node_base.1043"** null, %"struct.std::__1::__hash_node_base.1043"*** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1043"** %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = bitcast %"struct.std::__1::__hash_node_base.1043"** %56 to i8*
  tail call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %58, %53
  %61 = bitcast %"struct.std::__1::__hash_node_base.601"* %40 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  %62 = icmp eq %"struct.std::__1::__hash_node_base.601"* %42, null
  br i1 %62, label %63, label %39

63:                                               ; preds = %60, %35
  %64 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.601"** %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  %68 = bitcast %"struct.std::__1::__hash_node_base.601"** %65 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %63, %67
  %70 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base.601"* %71, null
  br i1 %72, label %97, label %73

73:                                               ; preds = %69, %94
  %74 = phi %"struct.std::__1::__hash_node_base.601"* [ %76, %94 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.601"*, %"struct.std::__1::__hash_node_base.601"** %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 5
  %78 = bitcast %"struct.std::__1::__hash_node_base.601"* %77 to %"struct.std::__1::__hash_node_base.1043"**
  %79 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %79, null
  br i1 %80, label %87, label %81

81:                                               ; preds = %73, %81
  %82 = phi %"struct.std::__1::__hash_node_base.1043"* [ %84, %81 ], [ %79, %73 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1043", %"struct.std::__1::__hash_node_base.1043"* %82, i64 0, i32 0
  %84 = load %"struct.std::__1::__hash_node_base.1043"*, %"struct.std::__1::__hash_node_base.1043"** %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base.1043"* %82 to i8*
  tail call void @_ZdlPv(i8* %85) #12
  %86 = icmp eq %"struct.std::__1::__hash_node_base.1043"* %84, null
  br i1 %86, label %87, label %81

87:                                               ; preds = %81, %73
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.601", %"struct.std::__1::__hash_node_base.601"* %74, i64 3
  %89 = bitcast %"struct.std::__1::__hash_node_base.601"* %88 to %"struct.std::__1::__hash_node_base.1043"***
  %90 = load %"struct.std::__1::__hash_node_base.1043"**, %"struct.std::__1::__hash_node_base.1043"*** %89, align 8
  store %"struct.std::__1::__hash_node_base.1043"** null, %"struct.std::__1::__hash_node_base.1043"*** %89, align 8
  %91 = icmp eq %"struct.std::__1::__hash_node_base.1043"** %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %87
  %93 = bitcast %"struct.std::__1::__hash_node_base.1043"** %90 to i8*
  tail call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %92, %87
  %95 = bitcast %"struct.std::__1::__hash_node_base.601"* %74 to i8*
  tail call void @_ZdlPv(i8* %95) #12
  %96 = icmp eq %"struct.std::__1::__hash_node_base.601"* %76, null
  br i1 %96, label %97, label %73

97:                                               ; preds = %94, %69
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.601"**, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.601"** null, %"struct.std::__1::__hash_node_base.601"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.601"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.601"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #12
  %112 = icmp eq %"struct.std::__1::__hash_node_base"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %114, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %113, %117
  %120 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %119, %123
  %124 = phi %"struct.std::__1::__hash_node_base"* [ %126, %123 ], [ %121, %119 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %124, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %124 to i8*
  tail call void @_ZdlPv(i8* %127) #12
  %128 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %128, label %129, label %123

129:                                              ; preds = %123, %119
  %130 = getelementptr inbounds %"class.spvtools::opt::analysis::DebugInfoManager", %"class.spvtools::opt::analysis::DebugInfoManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %130, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base"** %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %129
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %131 to i8*
  tail call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %129, %133
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1074"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !9
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #12, !noalias !48
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !48
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !48
  store i32 %62, i32* %61, align 4, !noalias !48
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !48
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !48
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !48
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !9
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !9
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !9
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE8__rehashEm(%"class.std::__1::__hash_table.250"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.250"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.254"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.254"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !51

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.254"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.254"* %36, %"struct.std::__1::__hash_node_base.254"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.254"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.254"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.254"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.254"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.254"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.254"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.254"* %82, %"struct.std::__1::__hash_node_base.254"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.254"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.254"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.254"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.254"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.254"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.254"* %80, %"struct.std::__1::__hash_node_base.254"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.254"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.254"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.254"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.256", %"class.std::__1::__bucket_list_deallocator.256"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1084"* dereferenceable(8), %"class.std::__1::tuple.1074"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !9
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !52
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !52
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !52
  store i32 %62, i32* %61, align 8, !noalias !52
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %64, align 8, !noalias !52
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !52
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !52
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !9
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !9
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !9
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !55

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.40"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.40"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.40"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.40"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.40"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.40"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.40"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.40"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.spvtools::opt::BasicBlock"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.40"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.40"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.40"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !56

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.40"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.40"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.40"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.40"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.40"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.40"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.40"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.40"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.40"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.40"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.40"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.40"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.40"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.40"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.40"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.40"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.40"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.40"*
  %138 = icmp eq %"class.std::__1::unique_ptr.40"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.40"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %142, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %144 = icmp eq %"class.spvtools::opt::BasicBlock"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.std::__1::unique_ptr.40"* %141 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %146, %"class.spvtools::opt::BasicBlock"* nonnull %143) #11
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.40"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !8
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #11
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !8
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !8
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #11
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !8
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #11
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #11
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1084"* dereferenceable(8), %"class.std::__1::tuple.1074"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !9
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.333"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.333"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !57
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !57
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !57
  store i32 %62, i32* %61, align 8, !noalias !57
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !57
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !57
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"**
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8, !noalias !57
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !9
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !9
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.333"* %110, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.333"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !9
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.333"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.333"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } undef, %"struct.std::__1::__hash_node_base.333"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.333"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.329"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !60

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.333"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.333"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.333"* %36, %"struct.std::__1::__hash_node_base.333"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.333"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.333"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.333"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.333"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.333"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.333"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.333"* %82, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.333"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.333"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.333"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.333"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.333"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.333"* %80, %"struct.std::__1::__hash_node_base.333"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.333"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.333"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.333"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1074"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !9
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !61
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !61
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !61
  store i32 %62, i32* %61, align 8, !noalias !61
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %64, align 8, !noalias !61
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !61
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !61
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !9
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !9
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !9
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.254"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSI_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.250"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1084"* dereferenceable(8), %"class.std::__1::tuple.1074"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !9
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.254"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.254"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.254"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.254"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.254"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 24) #12, !noalias !64
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1084", %"class.std::__1::tuple.1084"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !64
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !64
  store i32 %62, i32* %61, align 4, !noalias !64
  %63 = getelementptr inbounds i8, i8* %57, i64 20
  %64 = bitcast i8* %63 to i32*
  store i32 0, i32* %64, align 4, !noalias !64
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !64
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"**
  store %"struct.std::__1::__hash_node_base.254"* null, %"struct.std::__1::__hash_node_base.254"** %67, align 8, !noalias !64
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !9
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE6rehashEm(%"class.std::__1::__hash_table.250"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !9
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.254"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.250", %"class.std::__1::__hash_table.250"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.254"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.254"* %110, %"struct.std::__1::__hash_node_base.254"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.254"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.254"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !9
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.254"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.254"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.254"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.254"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } undef, %"struct.std::__1::__hash_node_base.254"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.254"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.254"*, i8 } %150
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1110"**
  %4 = load %"class.std::__1::function.1110"*, %"class.std::__1::function.1110"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1110", %"class.std::__1::function.1110"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #11
  ret i1 true
}

; Function Attrs: nofree nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl13RemapOperandsEPNS8_11InstructionEE3$_2S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #9 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"**
  %4 = load %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"*, %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"** %3, align 8
  %5 = load i32, i32* %1, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %4, i64 0, i32 4, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %62, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #11, !range !9
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %4, i64 0, i32 4, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.254"* %25, null
  br i1 %26, label %62, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.254"* %29, null
  br i1 %30, label %62, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base.254"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base.254"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %62

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.254"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %5
  br i1 %53, label %58, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.254"* %56, null
  br i1 %57, label %62, label %33

58:                                               ; preds = %49
  %59 = bitcast %"struct.std::__1::__hash_node_base.254"* %50 to %"struct.std::__1::pair.1014"*
  %60 = getelementptr inbounds %"struct.std::__1::pair.1014", %"struct.std::__1::pair.1014"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  store i32 %61, i32* %1, align 4
  br label %62

62:                                               ; preds = %46, %54, %2, %20, %27, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.14"*, %"class.std::__1::vector.14"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.14"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.14"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 112
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 164703072086692425
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #13
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #12
  %18 = bitcast i8* %17 to %"class.spvtools::opt::Instruction"*
  %19 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.spvtools::opt::Instruction"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.14"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* %22, %"class.spvtools::opt::Instruction"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %27 = bitcast %"class.spvtools::opt::Instruction"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.spvtools::opt::Instruction"* %25, %26
  br i1 %29, label %40, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.spvtools::opt::Instruction"*
  br label %32

32:                                               ; preds = %30, %32
  %33 = phi %"class.spvtools::opt::Instruction"* [ %35, %32 ], [ %25, %30 ]
  %34 = phi %"class.spvtools::opt::Instruction"* [ %36, %32 ], [ %31, %30 ]
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %34, %"class.spvtools::opt::Instruction"* dereferenceable(112) %33) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 1
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 1
  %37 = icmp eq %"class.spvtools::opt::Instruction"* %35, %26
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = ptrtoint %"class.spvtools::opt::Instruction"* %36 to i64
  br label %40

40:                                               ; preds = %38, %16
  %41 = phi i64 [ %39, %38 ], [ %28, %16 ]
  store i64 %41, i64* %27, align 8
  br label %42

42:                                               ; preds = %2, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.21", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 112) #12
  %10 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  %14 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %19 = bitcast i32** %17 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %18, %"struct.std::__1::aligned_storage<4, 4>::type"** %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.0"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %18 to i32*
  store i64 1, i64* %16, align 8
  store i32 %1, i32* %22, align 8
  %23 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %24, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %24, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %33 = call i8* @_Znwm(i64 48) #12
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 48
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.spvtools::opt::Operand"** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = bitcast i8* %33 to i32*
  %40 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 8
  %43 = bitcast i8* %42 to %"class.spvtools::utils::SmallVector"*
  %44 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %45 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %33, i64 24
  %49 = getelementptr inbounds i8, i8* %33, i64 32
  %50 = bitcast i8* %48 to i8**
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %33, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %43, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %44) #11
  %54 = getelementptr inbounds i8, i8* %33, i64 48
  %55 = bitcast i8* %9 to %"class.spvtools::opt::Instruction"*
  %56 = bitcast %"struct.spvtools::opt::Operand"** %34 to i64*
  %57 = ptrtoint i8* %54 to i64
  store i64 %57, i64* %56, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %55, %"class.spvtools::opt::IRContext"* %11, i32 249, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #11
  %58 = ptrtoint i8* %9 to i64
  %59 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %61 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %60, align 8
  %62 = icmp eq %"struct.spvtools::opt::Operand"* %61, null
  br i1 %62, label %91, label %63

63:                                               ; preds = %2
  %64 = bitcast %"struct.spvtools::opt::Operand"* %61 to i8*
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %34, align 8
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %65, %61
  br i1 %66, label %89, label %67

67:                                               ; preds = %63, %85
  %68 = phi %"struct.spvtools::opt::Operand"* [ %69, %85 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %71, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %71, align 8
  %73 = icmp eq %"class.std::__1::vector.3"* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i32* %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast i32* %76 to i8*
  call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %78, %74
  %84 = bitcast %"class.std::__1::vector.3"* %72 to i8*
  call void @_ZdlPv(i8* %84) #12
  br label %85

85:                                               ; preds = %83, %67
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %69, %61
  br i1 %86, label %87, label %67

87:                                               ; preds = %85
  %88 = load i8*, i8** %35, align 8
  br label %89

89:                                               ; preds = %87, %63
  %90 = phi i8* [ %88, %87 ], [ %64, %63 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %34, align 8
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %2, %89
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %93, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %93, align 8
  %95 = icmp eq %"class.std::__1::vector.3"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i32* %98 to i64
  %102 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 1
  %103 = bitcast i32** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %100, %96
  %106 = bitcast %"class.std::__1::vector.3"* %94 to i8*
  call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %91, %105
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %108 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %107, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %123 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %3)
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %8, align 8
  %125 = icmp eq %"class.spvtools::opt::Instruction"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.spvtools::opt::Instruction"* %124 to void (%"class.spvtools::opt::Instruction"*)***
  %128 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %128, i64 1
  %130 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %129, align 8
  call void %130(%"class.spvtools::opt::Instruction"* nonnull %124) #11
  br label %131

131:                                              ; preds = %122, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret %"class.spvtools::opt::Instruction"* %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 17, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 1
  %8 = bitcast %"class.spvtools::opt::IRContext"** %6 to i8*
  %9 = bitcast %"class.spvtools::opt::IRContext"** %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 20, i1 false)
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %12 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 48
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %62, label %21

21:                                               ; preds = %2
  %22 = icmp ugt i64 %19, 384307168202282325
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #13
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #12
  %27 = bitcast i8* %26 to %"struct.spvtools::opt::Operand"*
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %29 = bitcast %"struct.spvtools::opt::Operand"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %27, i64 %19
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %31, %"struct.spvtools::opt::Operand"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %34 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %33, align 8
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %36 = bitcast %"struct.spvtools::opt::Operand"** %28 to i64*
  %37 = ptrtoint i8* %26 to i64
  %38 = icmp eq %"struct.spvtools::opt::Operand"* %34, %35
  br i1 %38, label %60, label %39

39:                                               ; preds = %25, %39
  %40 = phi %"struct.spvtools::opt::Operand"* [ %56, %39 ], [ %27, %25 ]
  %41 = phi %"struct.spvtools::opt::Operand"* [ %55, %39 ], [ %34, %25 ]
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 1
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 2
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 3, i64 0
  %51 = bitcast i32** %49 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %50, %"struct.std::__1::aligned_storage<4, 4>::type"** %51, align 8
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 4
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %46) #11
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 1
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 1
  %57 = icmp eq %"struct.spvtools::opt::Operand"* %55, %35
  br i1 %57, label %58, label %39

58:                                               ; preds = %39
  %59 = ptrtoint %"struct.spvtools::opt::Operand"* %56 to i64
  br label %60

60:                                               ; preds = %58, %25
  %61 = phi i64 [ %37, %25 ], [ %59, %58 ]
  store i64 %61, i64* %36, align 8
  br label %62

62:                                               ; preds = %2, %60
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 7
  tail call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.14"* %63, %"class.std::__1::vector.14"* dereferenceable(24) %64)
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 8
  %67 = bitcast %"class.spvtools::opt::DebugScope"* %66 to i64*
  %68 = bitcast %"class.spvtools::opt::DebugScope"* %65 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #11
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #13
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #12
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #11
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1133", align 8
  %4 = alloca %"class.std::__1::tuple.1074", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple.1133"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::tuple.1133", %"class.std::__1::tuple.1133"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1074", %"class.std::__1::tuple.1074"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1133"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1074"* nonnull dereferenceable(1) %4) #11
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #11
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1133"* dereferenceable(8), %"class.std::__1::tuple.1074"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !9
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !67
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1133"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !67
  %75 = load i64, i64* %74, align 8, !noalias !67
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !67
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !67
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !67
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !67
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !9
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !9
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !9
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !70

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.14"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.spvtools::opt::Instruction"* %2 to i64
  %5 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 112
  %8 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.spvtools::opt::Instruction"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.14"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 112
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.spvtools::opt::Instruction"*
  br i1 %15, label %100, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 112
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 %22
  %25 = select i1 %23, %"class.spvtools::opt::Instruction"* %24, %"class.spvtools::opt::Instruction"* %2
  %26 = icmp eq %"class.spvtools::opt::Instruction"* %25, %1
  br i1 %26, label %72, label %27

27:                                               ; preds = %17, %63
  %28 = phi %"class.spvtools::opt::Instruction"* [ %70, %63 ], [ %16, %17 ]
  %29 = phi %"class.spvtools::opt::Instruction"* [ %69, %63 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 0, i32 1
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %30, align 8
  %32 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 0, i32 2
  %35 = bitcast %"class.spvtools::opt::Instruction"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 2
  %38 = bitcast %"class.spvtools::opt::Instruction"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"class.spvtools::opt::Instruction"** %30 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.spvtools::opt::Instruction"** %34 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %42 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %41, align 8
  %43 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %42, i64 0, i32 1
  %44 = bitcast %"class.spvtools::opt::Instruction"** %43 to i64*
  store i64 %40, i64* %44, align 8
  %45 = bitcast %"class.spvtools::opt::Instruction"** %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #11
  br label %46

46:                                               ; preds = %33, %27
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 1
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 1
  %49 = bitcast %"class.spvtools::opt::IRContext"** %47 to i8*
  %50 = bitcast %"class.spvtools::opt::IRContext"** %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 20, i1 false) #11
  %51 = icmp eq %"class.spvtools::opt::Instruction"* %28, %29
  br i1 %51, label %63, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 6
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 6, i32 0, i32 0
  %55 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %54, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 6, i32 0, i32 1
  %57 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %56, align 8
  tail call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"* %53, %"struct.spvtools::opt::Operand"* %55, %"struct.spvtools::opt::Operand"* %57) #11
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 7
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 7, i32 0, i32 0
  %60 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 7, i32 0, i32 1
  %62 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %61, align 8
  tail call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector.14"* %58, %"class.spvtools::opt::Instruction"* %60, %"class.spvtools::opt::Instruction"* %62) #11
  br label %63

63:                                               ; preds = %46, %52
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 0, i32 8
  %66 = bitcast %"class.spvtools::opt::DebugScope"* %65 to i64*
  %67 = bitcast %"class.spvtools::opt::DebugScope"* %64 to i64*
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %29, i64 1
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 1
  %71 = icmp eq %"class.spvtools::opt::Instruction"* %69, %25
  br i1 %71, label %72, label %27

72:                                               ; preds = %63, %17
  %73 = phi %"class.spvtools::opt::Instruction"* [ %16, %17 ], [ %70, %63 ]
  br i1 %23, label %74, label %89

74:                                               ; preds = %72
  %75 = load i64, i64* %19, align 8
  %76 = icmp eq %"class.spvtools::opt::Instruction"* %25, %2
  br i1 %76, label %87, label %77

77:                                               ; preds = %74, %77
  %78 = phi %"class.spvtools::opt::Instruction"* [ %81, %77 ], [ %24, %74 ]
  %79 = phi i64 [ %83, %77 ], [ %75, %74 ]
  %80 = inttoptr i64 %79 to %"class.spvtools::opt::Instruction"*
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %80, %"class.spvtools::opt::Instruction"* dereferenceable(112) %78) #11
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %78, i64 1
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 1
  %83 = ptrtoint %"class.spvtools::opt::Instruction"* %82 to i64
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %81, %2
  br i1 %84, label %85, label %77

85:                                               ; preds = %77
  %86 = ptrtoint %"class.spvtools::opt::Instruction"* %82 to i64
  br label %87

87:                                               ; preds = %85, %74
  %88 = phi i64 [ %75, %74 ], [ %86, %85 ]
  store i64 %88, i64* %19, align 8
  br label %154

89:                                               ; preds = %72
  %90 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  %91 = icmp eq %"class.spvtools::opt::Instruction"* %90, %73
  br i1 %91, label %99, label %92

92:                                               ; preds = %89, %92
  %93 = phi %"class.spvtools::opt::Instruction"* [ %94, %92 ], [ %90, %89 ]
  %94 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %93, i64 -1
  %95 = bitcast %"class.spvtools::opt::Instruction"* %94 to void (%"class.spvtools::opt::Instruction"*)***
  %96 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %95, align 8
  %97 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %96, align 8
  tail call void %97(%"class.spvtools::opt::Instruction"* %94) #11
  %98 = icmp eq %"class.spvtools::opt::Instruction"* %94, %73
  br i1 %98, label %99, label %92

99:                                               ; preds = %92, %89
  store %"class.spvtools::opt::Instruction"* %73, %"class.spvtools::opt::Instruction"** %18, align 8
  br label %154

100:                                              ; preds = %3
  %101 = icmp eq i64 %12, 0
  br i1 %101, label %120, label %102

102:                                              ; preds = %100
  %103 = inttoptr i64 %12 to i8*
  %104 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %105 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %104, align 8
  %106 = icmp eq %"class.spvtools::opt::Instruction"* %105, %16
  br i1 %106, label %117, label %107

107:                                              ; preds = %102, %107
  %108 = phi %"class.spvtools::opt::Instruction"* [ %109, %107 ], [ %105, %102 ]
  %109 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %108, i64 -1
  %110 = bitcast %"class.spvtools::opt::Instruction"* %109 to void (%"class.spvtools::opt::Instruction"*)***
  %111 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %110, align 8
  %112 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %111, align 8
  tail call void %112(%"class.spvtools::opt::Instruction"* %109) #11
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %109, %16
  br i1 %113, label %114, label %107

114:                                              ; preds = %107
  %115 = bitcast %"class.std::__1::vector.14"* %0 to i8**
  %116 = load i8*, i8** %115, align 8
  br label %117

117:                                              ; preds = %114, %102
  %118 = phi i8* [ %116, %114 ], [ %103, %102 ]
  store %"class.spvtools::opt::Instruction"* %16, %"class.spvtools::opt::Instruction"** %104, align 8
  tail call void @_ZdlPv(i8* %118) #12
  %119 = bitcast %"class.std::__1::vector.14"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #11
  br label %120

120:                                              ; preds = %100, %117
  %121 = phi i64 [ %10, %100 ], [ 0, %117 ]
  %122 = icmp ugt i64 %7, 164703072086692425
  br i1 %122, label %123, label %125

123:                                              ; preds = %120
  %124 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #13
  unreachable

125:                                              ; preds = %120
  %126 = sdiv exact i64 %121, 112
  %127 = icmp ult i64 %126, 82351536043346212
  br i1 %127, label %128, label %132

128:                                              ; preds = %125
  %129 = shl nsw i64 %126, 1
  %130 = icmp ult i64 %129, %7
  %131 = select i1 %130, i64 %7, i64 %129
  br label %132

132:                                              ; preds = %128, %125
  %133 = phi i64 [ %131, %128 ], [ 164703072086692425, %125 ]
  %134 = mul i64 %133, 112
  %135 = tail call i8* @_Znwm(i64 %134) #12
  %136 = bitcast i8* %135 to %"class.spvtools::opt::Instruction"*
  %137 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %138 = bitcast %"class.spvtools::opt::Instruction"** %137 to i8**
  store i8* %135, i8** %138, align 8
  %139 = bitcast %"class.std::__1::vector.14"* %0 to i8**
  store i8* %135, i8** %139, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %136, i64 %133
  store %"class.spvtools::opt::Instruction"* %140, %"class.spvtools::opt::Instruction"** %8, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"** %137 to i64*
  %142 = ptrtoint i8* %135 to i64
  %143 = icmp eq %"class.spvtools::opt::Instruction"* %1, %2
  br i1 %143, label %152, label %144

144:                                              ; preds = %132, %144
  %145 = phi %"class.spvtools::opt::Instruction"* [ %147, %144 ], [ %1, %132 ]
  %146 = phi %"class.spvtools::opt::Instruction"* [ %148, %144 ], [ %136, %132 ]
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %146, %"class.spvtools::opt::Instruction"* dereferenceable(112) %145) #11
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %145, i64 1
  %148 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %146, i64 1
  %149 = icmp eq %"class.spvtools::opt::Instruction"* %147, %2
  br i1 %149, label %150, label %144

150:                                              ; preds = %144
  %151 = ptrtoint %"class.spvtools::opt::Instruction"* %148 to i64
  br label %152

152:                                              ; preds = %150, %132
  %153 = phi i64 [ %142, %132 ], [ %151, %150 ]
  store i64 %153, i64* %141, align 8
  br label %154

154:                                              ; preds = %87, %99, %152
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.spvtools::opt::Operand"* %2 to i64
  %5 = ptrtoint %"struct.spvtools::opt::Operand"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 48
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.spvtools::opt::Operand"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 48
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.spvtools::opt::Operand"*
  br i1 %15, label %93, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.spvtools::opt::Operand"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 48
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %22
  %25 = select i1 %23, %"struct.spvtools::opt::Operand"* %24, %"struct.spvtools::opt::Operand"* %2
  %26 = icmp eq %"struct.spvtools::opt::Operand"* %25, %1
  br i1 %26, label %39, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.spvtools::opt::Operand"* [ %37, %27 ], [ %16, %17 ]
  %29 = phi %"struct.spvtools::opt::Operand"* [ %36, %27 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 0, i32 0
  store i32 %31, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %29, i64 0, i32 1
  %35 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %33, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %34) #11
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %29, i64 1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %28, i64 1
  %38 = icmp eq %"struct.spvtools::opt::Operand"* %36, %25
  br i1 %38, label %39, label %27

39:                                               ; preds = %27, %17
  %40 = phi %"struct.spvtools::opt::Operand"* [ %16, %17 ], [ %37, %27 ]
  br i1 %23, label %41, label %69

41:                                               ; preds = %39
  %42 = load i64, i64* %19, align 8
  %43 = icmp eq %"struct.spvtools::opt::Operand"* %25, %2
  br i1 %43, label %67, label %44

44:                                               ; preds = %41
  %45 = inttoptr i64 %42 to %"struct.spvtools::opt::Operand"*
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi %"struct.spvtools::opt::Operand"* [ %63, %46 ], [ %45, %44 ]
  %48 = phi %"struct.spvtools::opt::Operand"* [ %62, %46 ], [ %24, %44 ]
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %47, i64 0, i32 0
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %48, i64 0, i32 0
  %51 = load i32, i32* %50, align 8
  store i32 %51, i32* %49, align 8
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %47, i64 0, i32 1
  %53 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %48, i64 0, i32 1
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %52, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %47, i64 0, i32 1, i32 1
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %47, i64 0, i32 1, i32 2
  %57 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %47, i64 0, i32 1, i32 3, i64 0
  %58 = bitcast i32** %56 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %57, %"struct.std::__1::aligned_storage<4, 4>::type"** %58, align 8
  %59 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %47, i64 0, i32 1, i32 4
  %60 = bitcast %"class.std::__1::unique_ptr.0"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %52, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %53) #11
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %48, i64 1
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %47, i64 1
  %64 = icmp eq %"struct.spvtools::opt::Operand"* %62, %2
  br i1 %64, label %65, label %46

65:                                               ; preds = %46
  %66 = ptrtoint %"struct.spvtools::opt::Operand"* %63 to i64
  br label %67

67:                                               ; preds = %41, %65
  %68 = phi i64 [ %42, %41 ], [ %66, %65 ]
  store i64 %68, i64* %19, align 8
  br label %173

69:                                               ; preds = %39
  %70 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %18, align 8
  %71 = icmp eq %"struct.spvtools::opt::Operand"* %70, %40
  br i1 %71, label %92, label %72

72:                                               ; preds = %69, %90
  %73 = phi %"struct.spvtools::opt::Operand"* [ %74, %90 ], [ %70, %69 ]
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %77 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %76, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %76, align 8
  %78 = icmp eq %"class.std::__1::vector.3"* %77, null
  br i1 %78, label %90, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %77, i64 0, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = icmp eq i32* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = ptrtoint i32* %81 to i64
  %85 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %77, i64 0, i32 0, i32 1
  %86 = bitcast i32** %85 to i64*
  store i64 %84, i64* %86, align 8
  %87 = bitcast i32* %81 to i8*
  tail call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %83, %79
  %89 = bitcast %"class.std::__1::vector.3"* %77 to i8*
  tail call void @_ZdlPv(i8* %89) #12
  br label %90

90:                                               ; preds = %88, %72
  %91 = icmp eq %"struct.spvtools::opt::Operand"* %74, %40
  br i1 %91, label %92, label %72

92:                                               ; preds = %90, %69
  store %"struct.spvtools::opt::Operand"* %40, %"struct.spvtools::opt::Operand"** %18, align 8
  br label %173

93:                                               ; preds = %3
  %94 = icmp eq i64 %12, 0
  br i1 %94, label %126, label %95

95:                                               ; preds = %93
  %96 = inttoptr i64 %12 to i8*
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %98 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %97, align 8
  %99 = icmp eq %"struct.spvtools::opt::Operand"* %98, %16
  br i1 %99, label %123, label %100

100:                                              ; preds = %95, %118
  %101 = phi %"struct.spvtools::opt::Operand"* [ %102, %118 ], [ %98, %95 ]
  %102 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %101, i64 -1
  %103 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %101, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %103, align 8
  %104 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %101, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %104, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %104, align 8
  %106 = icmp eq %"class.std::__1::vector.3"* %105, null
  br i1 %106, label %118, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %105, i64 0, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = icmp eq i32* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = ptrtoint i32* %109 to i64
  %113 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %105, i64 0, i32 0, i32 1
  %114 = bitcast i32** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = bitcast i32* %109 to i8*
  tail call void @_ZdlPv(i8* %115) #12
  br label %116

116:                                              ; preds = %111, %107
  %117 = bitcast %"class.std::__1::vector.3"* %105 to i8*
  tail call void @_ZdlPv(i8* %117) #12
  br label %118

118:                                              ; preds = %116, %100
  %119 = icmp eq %"struct.spvtools::opt::Operand"* %102, %16
  br i1 %119, label %120, label %100

120:                                              ; preds = %118
  %121 = bitcast %"class.std::__1::vector"* %0 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %95
  %124 = phi i8* [ %122, %120 ], [ %96, %95 ]
  store %"struct.spvtools::opt::Operand"* %16, %"struct.spvtools::opt::Operand"** %97, align 8
  tail call void @_ZdlPv(i8* %124) #12
  %125 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 24, i1 false) #11
  br label %126

126:                                              ; preds = %93, %123
  %127 = phi i64 [ %10, %93 ], [ 0, %123 ]
  %128 = icmp ugt i64 %7, 384307168202282325
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  %130 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %130) #13
  unreachable

131:                                              ; preds = %126
  %132 = sdiv exact i64 %127, 48
  %133 = icmp ult i64 %132, 192153584101141162
  br i1 %133, label %134, label %138

134:                                              ; preds = %131
  %135 = shl nsw i64 %132, 1
  %136 = icmp ult i64 %135, %7
  %137 = select i1 %136, i64 %7, i64 %135
  br label %138

138:                                              ; preds = %134, %131
  %139 = phi i64 [ %137, %134 ], [ 384307168202282325, %131 ]
  %140 = mul i64 %139, 48
  %141 = tail call i8* @_Znwm(i64 %140) #12
  %142 = bitcast i8* %141 to %"struct.spvtools::opt::Operand"*
  %143 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %144 = bitcast %"struct.spvtools::opt::Operand"** %143 to i8**
  store i8* %141, i8** %144, align 8
  %145 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %141, i8** %145, align 8
  %146 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %142, i64 %139
  store %"struct.spvtools::opt::Operand"* %146, %"struct.spvtools::opt::Operand"** %8, align 8
  %147 = bitcast %"struct.spvtools::opt::Operand"** %143 to i64*
  %148 = ptrtoint i8* %141 to i64
  %149 = icmp eq %"struct.spvtools::opt::Operand"* %1, %2
  br i1 %149, label %171, label %150

150:                                              ; preds = %138, %150
  %151 = phi %"struct.spvtools::opt::Operand"* [ %167, %150 ], [ %142, %138 ]
  %152 = phi %"struct.spvtools::opt::Operand"* [ %166, %150 ], [ %1, %138 ]
  %153 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %151, i64 0, i32 0
  %154 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %152, i64 0, i32 0
  %155 = load i32, i32* %154, align 8
  store i32 %155, i32* %153, align 8
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %151, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %152, i64 0, i32 1
  %158 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %156, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %158, align 8
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %151, i64 0, i32 1, i32 1
  store i64 0, i64* %159, align 8
  %160 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %151, i64 0, i32 1, i32 2
  %161 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %151, i64 0, i32 1, i32 3, i64 0
  %162 = bitcast i32** %160 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %161, %"struct.std::__1::aligned_storage<4, 4>::type"** %162, align 8
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %151, i64 0, i32 1, i32 4
  %164 = bitcast %"class.std::__1::unique_ptr.0"* %163 to i64*
  store i64 0, i64* %164, align 8
  %165 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %156, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %157) #11
  %166 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %152, i64 1
  %167 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %151, i64 1
  %168 = icmp eq %"struct.spvtools::opt::Operand"* %166, %2
  br i1 %168, label %169, label %150

169:                                              ; preds = %150
  %170 = ptrtoint %"struct.spvtools::opt::Operand"* %167 to i64
  br label %171

171:                                              ; preds = %138, %169
  %172 = phi i64 [ %148, %138 ], [ %170, %169 ]
  store i64 %172, i64* %147, align 8
  br label %173

173:                                              ; preds = %67, %92, %171
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !9
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.922"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.922"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #12, !noalias !71
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !71
  store i32 %58, i32* %57, align 4, !noalias !71
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !71
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"**
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %61, align 8, !noalias !71
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !9
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #11
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #11, !range !9
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.922"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.922"* %104, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.922"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.922"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #11, !range !9
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.922"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.922"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } undef, %"struct.std::__1::__hash_node_base.922"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.922"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.918"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.922"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.922"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !74

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.922"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.922"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.922"* %36, %"struct.std::__1::__hash_node_base.922"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.922"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.922"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.922"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.922"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.922"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.922"* %82, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.922"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.922"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.922"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.922"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.922"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.922"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.922"* %80, %"struct.std::__1::__hash_node_base.922"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.922"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.922"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.922"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.922"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } @_ZN8spvtools3opt18UptrVectorIteratorINS0_10BasicBlockELb0EE12InsertBeforeILb0EEENSt3__19enable_ifIXntT_ES3_E4typeEPNS5_6vectorINS5_10unique_ptrIS2_NS5_14default_deleteIS2_EEEENS5_9allocatorISD_EEEE(%"class.spvtools::opt::UptrVectorIterator.1162"*, %"class.std::__1::vector.38"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1162", %"class.spvtools::opt::UptrVectorIterator.1162"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.spvtools::opt::UptrVectorIterator.1162", %"class.spvtools::opt::UptrVectorIterator.1162"* %0, i64 0, i32 0
  %5 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %4, align 8
  %6 = bitcast %"class.std::__1::vector.38"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::__wrap_iter.1148"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %7
  %11 = ashr exact i64 %10, 3
  %12 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %5, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.40"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %7
  %16 = ashr exact i64 %15, 3
  %17 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::unique_ptr.40"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.38"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = add nsw i64 %23, %16
  %25 = icmp ult i64 %16, %24
  %26 = inttoptr i64 %7 to %"class.std::__1::unique_ptr.40"*
  %27 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.40"*
  br i1 %25, label %28, label %29

28:                                               ; preds = %2
  tail call void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector.38"* %5, i64 %23) #11
  br label %45

29:                                               ; preds = %2
  %30 = icmp ugt i64 %16, %24
  br i1 %30, label %31, label %45

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 %24
  %33 = icmp eq %"class.std::__1::unique_ptr.40"* %32, %27
  br i1 %33, label %44, label %34

34:                                               ; preds = %31, %42
  %35 = phi %"class.std::__1::unique_ptr.40"* [ %36, %42 ], [ %27, %31 ]
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %35, i64 -1
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %37, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %37, align 8
  %39 = icmp eq %"class.spvtools::opt::BasicBlock"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.std::__1::unique_ptr.40"* %36 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %41, %"class.spvtools::opt::BasicBlock"* nonnull %38) #11
  br label %42

42:                                               ; preds = %40, %34
  %43 = icmp eq %"class.std::__1::unique_ptr.40"* %36, %32
  br i1 %43, label %44, label %34

44:                                               ; preds = %42, %31
  store %"class.std::__1::unique_ptr.40"* %32, %"class.std::__1::unique_ptr.40"** %12, align 8
  br label %45

45:                                               ; preds = %28, %29, %44
  %46 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %4, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %48, i64 %11
  %50 = icmp eq i64 %16, %11
  br i1 %50, label %75, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %46, i64 0, i32 0, i32 1
  %53 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %48, i64 %16
  br label %55

55:                                               ; preds = %51, %69
  %56 = phi %"class.std::__1::unique_ptr.40"* [ %59, %69 ], [ %53, %51 ]
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %58, %69 ], [ %54, %51 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 -1
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %56, i64 -1
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.std::__1::unique_ptr.40"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %60, align 8
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = bitcast %"class.std::__1::unique_ptr.40"* %59 to i64*
  store i64 %62, i64* %65, align 8
  %66 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %55
  %68 = bitcast %"class.std::__1::unique_ptr.40"* %59 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %68, %"class.spvtools::opt::BasicBlock"* nonnull %64) #11
  br label %69

69:                                               ; preds = %67, %55
  %70 = icmp eq %"class.std::__1::unique_ptr.40"* %58, %49
  br i1 %70, label %71, label %55

71:                                               ; preds = %69
  %72 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %4, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %73, align 8
  br label %75

75:                                               ; preds = %71, %45
  %76 = phi %"class.std::__1::unique_ptr.40"* [ %74, %71 ], [ %48, %45 ]
  %77 = phi %"class.std::__1::vector.38"* [ %72, %71 ], [ %46, %45 ]
  %78 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %1, i64 0, i32 0, i32 0
  %79 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %78, align 8
  %80 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %17, align 8
  %81 = icmp eq %"class.std::__1::unique_ptr.40"* %79, %80
  br i1 %81, label %104, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %76, i64 %11
  br label %84

84:                                               ; preds = %82, %96
  %85 = phi %"class.std::__1::unique_ptr.40"* [ %98, %96 ], [ %83, %82 ]
  %86 = phi %"class.std::__1::unique_ptr.40"* [ %97, %96 ], [ %79, %82 ]
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %87, align 8
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %85, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %90, align 8
  %92 = bitcast %"class.std::__1::unique_ptr.40"* %85 to i64*
  store i64 %89, i64* %92, align 8
  %93 = icmp eq %"class.spvtools::opt::BasicBlock"* %91, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %84
  %95 = bitcast %"class.std::__1::unique_ptr.40"* %85 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %95, %"class.spvtools::opt::BasicBlock"* nonnull %91) #11
  br label %96

96:                                               ; preds = %94, %84
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %86, i64 1
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %85, i64 1
  %99 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %80
  br i1 %99, label %100, label %84

100:                                              ; preds = %96
  %101 = load %"class.std::__1::vector.38"*, %"class.std::__1::vector.38"** %4, align 8
  %102 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %102, align 8
  br label %104

104:                                              ; preds = %100, %75
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %103, %100 ], [ %76, %75 ]
  %106 = phi %"class.std::__1::vector.38"* [ %101, %100 ], [ %77, %75 ]
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 %11
  %108 = insertvalue { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } undef, %"class.std::__1::vector.38"* %106, 0
  %109 = insertvalue { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } %108, %"class.std::__1::unique_ptr.40"* %107, 1
  ret { %"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"* } %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE8__appendEm(%"class.std::__1::vector.38"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.40"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.40"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %13, i64 %18, i32 0, i32 0, i32 0
  %20 = bitcast %"class.spvtools::opt::BasicBlock"** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint %"class.std::__1::unique_ptr.40"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %214

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #12
  %54 = bitcast i8* %53 to %"class.std::__1::unique_ptr.40"*
  br label %55

55:                                               ; preds = %42, %50
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 %33
  %59 = ptrtoint %"class.std::__1::unique_ptr.40"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %57, i64 %56
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %58, i64 %1
  %62 = shl nsw i64 %1, 3
  %63 = add i64 %62, -8
  %64 = lshr exact i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %55, %68
  %69 = phi %"class.std::__1::unique_ptr.40"* [ %73, %68 ], [ %58, %55 ]
  %70 = phi i64 [ %74, %68 ], [ %59, %55 ]
  %71 = phi i64 [ %75, %68 ], [ %66, %55 ]
  %72 = inttoptr i64 %70 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 1
  %74 = ptrtoint %"class.std::__1::unique_ptr.40"* %73 to i64
  %75 = add i64 %71, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !75

77:                                               ; preds = %68
  %78 = ptrtoint %"class.std::__1::unique_ptr.40"* %73 to i64
  br label %79

79:                                               ; preds = %55, %77
  %80 = phi %"class.std::__1::unique_ptr.40"* [ %58, %55 ], [ %73, %77 ]
  %81 = phi i64 [ %59, %55 ], [ %78, %77 ]
  %82 = icmp ult i64 %63, 56
  br i1 %82, label %104, label %83

83:                                               ; preds = %79, %83
  %84 = phi %"class.std::__1::unique_ptr.40"* [ %101, %83 ], [ %80, %79 ]
  %85 = phi i64 [ %102, %83 ], [ %81, %79 ]
  %86 = inttoptr i64 %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 1
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 2
  %90 = bitcast %"class.std::__1::unique_ptr.40"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 3
  %92 = bitcast %"class.std::__1::unique_ptr.40"* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 4
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %93 to i64*
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 5
  %96 = bitcast %"class.std::__1::unique_ptr.40"* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 6
  %98 = bitcast %"class.std::__1::unique_ptr.40"* %97 to i64*
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 7
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 8
  %102 = ptrtoint %"class.std::__1::unique_ptr.40"* %101 to i64
  %103 = icmp eq %"class.std::__1::unique_ptr.40"* %61, %101
  br i1 %103, label %104, label %83

104:                                              ; preds = %83, %79
  %105 = ptrtoint %"class.std::__1::unique_ptr.40"* %60 to i64
  %106 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  %107 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %108 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %107, align 8
  %109 = ptrtoint %"class.std::__1::unique_ptr.40"* %108 to i64
  %110 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %111 = icmp eq %"class.std::__1::unique_ptr.40"* %110, %108
  br i1 %111, label %194, label %112

112:                                              ; preds = %104
  %113 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %110, i64 -1, i32 0, i32 0, i32 0
  %114 = ptrtoint %"class.spvtools::opt::BasicBlock"** %113 to i64
  %115 = sub i64 %114, %109
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 7
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %132, label %120

120:                                              ; preds = %112, %120
  %121 = phi %"class.std::__1::unique_ptr.40"* [ %124, %120 ], [ %58, %112 ]
  %122 = phi %"class.std::__1::unique_ptr.40"* [ %125, %120 ], [ %110, %112 ]
  %123 = phi i64 [ %130, %120 ], [ %118, %112 ]
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %121, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %122, i64 -1
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.40"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = add i64 %123, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !76

132:                                              ; preds = %120, %112
  %133 = phi %"class.std::__1::unique_ptr.40"* [ undef, %112 ], [ %124, %120 ]
  %134 = phi %"class.std::__1::unique_ptr.40"* [ %58, %112 ], [ %124, %120 ]
  %135 = phi %"class.std::__1::unique_ptr.40"* [ %110, %112 ], [ %125, %120 ]
  %136 = icmp ult i64 %115, 56
  br i1 %136, label %189, label %137

137:                                              ; preds = %132, %137
  %138 = phi %"class.std::__1::unique_ptr.40"* [ %182, %137 ], [ %134, %132 ]
  %139 = phi %"class.std::__1::unique_ptr.40"* [ %183, %137 ], [ %135, %132 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = bitcast %"class.std::__1::unique_ptr.40"* %141 to i64*
  %144 = load i64, i64* %143, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %145 = bitcast %"class.std::__1::unique_ptr.40"* %140 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -2
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -2
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = bitcast %"class.std::__1::unique_ptr.40"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %148, align 8
  %151 = bitcast %"class.std::__1::unique_ptr.40"* %146 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -3
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -3
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr.40"* %153 to i64*
  %156 = load i64, i64* %155, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %154, align 8
  %157 = bitcast %"class.std::__1::unique_ptr.40"* %152 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -4
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -4
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %159, i64 0, i32 0, i32 0, i32 0
  %161 = bitcast %"class.std::__1::unique_ptr.40"* %159 to i64*
  %162 = load i64, i64* %161, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %160, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.40"* %158 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -5
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -5
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = bitcast %"class.std::__1::unique_ptr.40"* %165 to i64*
  %168 = load i64, i64* %167, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %166, align 8
  %169 = bitcast %"class.std::__1::unique_ptr.40"* %164 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -6
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -6
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = bitcast %"class.std::__1::unique_ptr.40"* %171 to i64*
  %174 = load i64, i64* %173, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %172, align 8
  %175 = bitcast %"class.std::__1::unique_ptr.40"* %170 to i64*
  store i64 %174, i64* %175, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -7
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -7
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %177, i64 0, i32 0, i32 0, i32 0
  %179 = bitcast %"class.std::__1::unique_ptr.40"* %177 to i64*
  %180 = load i64, i64* %179, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %178, align 8
  %181 = bitcast %"class.std::__1::unique_ptr.40"* %176 to i64*
  store i64 %180, i64* %181, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %138, i64 -8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %139, i64 -8
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = bitcast %"class.std::__1::unique_ptr.40"* %183 to i64*
  %186 = load i64, i64* %185, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %184, align 8
  %187 = bitcast %"class.std::__1::unique_ptr.40"* %182 to i64*
  store i64 %186, i64* %187, align 8
  %188 = icmp eq %"class.std::__1::unique_ptr.40"* %183, %108
  br i1 %188, label %189, label %137

189:                                              ; preds = %137, %132
  %190 = phi %"class.std::__1::unique_ptr.40"* [ %133, %132 ], [ %182, %137 ]
  %191 = ptrtoint %"class.std::__1::unique_ptr.40"* %190 to i64
  %192 = load i64, i64* %30, align 8
  %193 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  br label %194

194:                                              ; preds = %104, %189
  %195 = phi %"class.std::__1::unique_ptr.40"* [ %193, %189 ], [ %108, %104 ]
  %196 = phi i64 [ %191, %189 ], [ %59, %104 ]
  %197 = phi i64 [ %192, %189 ], [ %109, %104 ]
  store i64 %196, i64* %30, align 8
  store i64 %106, i64* %7, align 8
  store i64 %105, i64* %4, align 8
  %198 = inttoptr i64 %197 to %"class.std::__1::unique_ptr.40"*
  %199 = icmp eq %"class.std::__1::unique_ptr.40"* %195, %198
  br i1 %199, label %210, label %200

200:                                              ; preds = %194, %208
  %201 = phi %"class.std::__1::unique_ptr.40"* [ %202, %208 ], [ %195, %194 ]
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %201, i64 -1
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %202, i64 0, i32 0, i32 0, i32 0
  %204 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %203, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %203, align 8
  %205 = icmp eq %"class.spvtools::opt::BasicBlock"* %204, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %200
  %207 = bitcast %"class.std::__1::unique_ptr.40"* %202 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %207, %"class.spvtools::opt::BasicBlock"* nonnull %204) #11
  br label %208

208:                                              ; preds = %206, %200
  %209 = icmp eq %"class.std::__1::unique_ptr.40"* %202, %198
  br i1 %209, label %210, label %200

210:                                              ; preds = %208, %194
  %211 = icmp eq i64 %197, 0
  br i1 %211, label %214, label %212

212:                                              ; preds = %210
  %213 = inttoptr i64 %197 to i8*
  tail call void @_ZdlPv(i8* %213) #12
  br label %214

214:                                              ; preds = %212, %210, %27
  ret void
}

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Loop"* @_ZN8spvtools10MakeUniqueINS_3opt4LoopEJRS2_EEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEDpOT0_(%"class.spvtools::opt::Loop"* dereferenceable(128)) local_unnamed_addr #0 comdat {
  %2 = tail call i8* @_Znwm(i64 128) #12
  %3 = bitcast i8* %2 to %"class.spvtools::opt::Loop"*
  %4 = bitcast %"class.spvtools::opt::Loop"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %4, i64 56, i1 false) #11
  %5 = getelementptr inbounds i8, i8* %2, i64 56
  %6 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %7 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 7, i32 0, i32 1
  %8 = bitcast %"class.spvtools::opt::Loop"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.910"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %1
  %16 = icmp ugt i64 %13, 2305843009213693951
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast i8* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #13
  unreachable

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 %12) #12
  %21 = bitcast i8* %20 to %"class.spvtools::opt::Loop"**
  %22 = getelementptr inbounds i8, i8* %2, i64 64
  %23 = bitcast i8* %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = bitcast i8* %5 to i8**
  store i8* %20, i8** %24, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, i64 %13
  %26 = getelementptr inbounds i8, i8* %2, i64 72
  %27 = bitcast i8* %26 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %25, %"class.spvtools::opt::Loop"*** %27, align 8
  %28 = bitcast i8* %22 to i64*
  %29 = ptrtoint i8* %20 to i64
  %30 = icmp sgt i64 %12, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %19
  %32 = lshr exact i64 %12, 3
  %33 = inttoptr i64 %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %33, i64 %12, i1 false) #11
  %34 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, i64 %32
  %35 = ptrtoint %"class.spvtools::opt::Loop"** %34 to i64
  br label %36

36:                                               ; preds = %31, %19
  %37 = phi i64 [ %35, %31 ], [ %29, %19 ]
  store i64 %37, i64* %28, align 8
  br label %38

38:                                               ; preds = %36, %1
  %39 = getelementptr inbounds i8, i8* %2, i64 80
  %40 = bitcast i8* %39 to %"class.std::__1::__hash_table.918"*
  %41 = getelementptr inbounds i8, i8* %2, i64 112
  %42 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 3
  %43 = bitcast %"class.std::__1::__compressed_pair.936"* %42 to i32*
  %44 = bitcast i8* %41 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 32, i1 false) #11
  %45 = load i32, i32* %43, align 8
  store i32 %45, i32* %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"* %40, i64 %47) #11
  %48 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.922"* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %38
  %52 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %49 to i64
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ %52, %51 ], [ %59, %53 ]
  %55 = inttoptr i64 %54 to %"struct.std::__1::__hash_node.1155"*
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node.1155", %"struct.std::__1::__hash_node.1155"* %55, i64 0, i32 2
  %57 = tail call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %40, i32* dereferenceable(4) %56, i32* dereferenceable(4) %56) #11
  %58 = inttoptr i64 %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %53

61:                                               ; preds = %53, %38
  %62 = getelementptr inbounds i8, i8* %2, i64 120
  %63 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 9
  %64 = load i8, i8* %63, align 8, !range !8
  store i8 %64, i8* %62, align 8
  ret %"class.spvtools::opt::Loop"* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK8spvtools3opt12_GLOBAL__N_121LoopUnrollerUtilsImpl19LinkLastPhisToStartEPNS0_4LoopE(%"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* nocapture readonly, %"class.spvtools::opt::Loop"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.976", align 8
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = bitcast %"class.std::__1::vector.976"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %3, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.976", %"class.std::__1::vector.976"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #11
  call void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* %1, %"class.std::__1::vector.976"* nonnull dereferenceable(24) %3) #11
  %9 = bitcast %"class.spvtools::opt::Instruction"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.976"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %37, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl", %"class.spvtools::opt::(anonymous namespace)::LoopUnrollerUtilsImpl"* %0, i64 0, i32 4, i32 3
  %17 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %21 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %22 = bitcast i32** %20 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %24 = bitcast %"class.std::__1::unique_ptr.0"* %23 to i64*
  %25 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %21 to i32*
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %31 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %32 = bitcast i32** %30 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %34 = bitcast %"class.std::__1::unique_ptr.0"* %33 to i64*
  %35 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %31 to i32*
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %43

37:                                               ; preds = %185, %2
  %38 = phi i64 [ %12, %2 ], [ %188, %185 ]
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  store i64 %38, i64* %9, align 8
  %41 = inttoptr i64 %38 to i8*
  call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %37, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret void

43:                                               ; preds = %14, %185
  %44 = phi i64 [ 0, %14 ], [ %186, %185 ]
  %45 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %15, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, i64 %44
  %47 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  %48 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 6
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 6, i32 0, i32 1
  %51 = bitcast %"struct.spvtools::opt::Operand"** %50 to i64*
  %52 = bitcast %"class.std::__1::vector"* %49 to i64*
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 3
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 4
  %55 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %48, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %56

56:                                               ; preds = %101, %43
  %57 = phi i32 [ 1, %43 ], [ %102, %101 ]
  %58 = load i64, i64* %51, align 8
  %59 = load i64, i64* %52, align 8
  %60 = sub i64 %58, %59
  %61 = sdiv exact i64 %60, 48
  %62 = load i8, i8* %53, align 4, !range !8
  %63 = icmp eq i8 %62, 0
  %64 = load i8, i8* %54, align 1, !range !8
  %65 = icmp eq i8 %64, 0
  %66 = select i1 %65, i32 1, i32 2
  %67 = xor i1 %65, true
  %68 = zext i1 %67 to i32
  %69 = select i1 %63, i32 %68, i32 %66
  %70 = trunc i64 %61 to i32
  %71 = sub i32 %70, %69
  %72 = icmp ult i32 %57, %71
  br i1 %72, label %73, label %103

73:                                               ; preds = %56
  %74 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %55, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %74, i64 0, i32 4
  %76 = load i8, i8* %75, align 1, !range !8
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %74, i64 0, i32 3
  %80 = load i8, i8* %79, align 4, !range !8
  %81 = zext i8 %80 to i32
  %82 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %74, i32 %81) #11
  %83 = load i8, i8* %53, align 4, !range !8
  %84 = load i8, i8* %54, align 1, !range !8
  br label %85

85:                                               ; preds = %78, %73
  %86 = phi i8 [ %84, %78 ], [ %64, %73 ]
  %87 = phi i8 [ %83, %78 ], [ %62, %73 ]
  %88 = phi i32 [ %82, %78 ], [ 0, %73 ]
  %89 = icmp eq i8 %87, 0
  %90 = icmp eq i8 %86, 0
  %91 = select i1 %90, i32 1, i32 2
  %92 = xor i1 %90, true
  %93 = zext i1 %92 to i32
  %94 = select i1 %89, i32 %93, i32 %91
  %95 = add i32 %94, %57
  %96 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %47, i32 %95) #11
  %97 = icmp eq i32 %88, %96
  br i1 %97, label %98, label %101

98:                                               ; preds = %85
  %99 = load i8, i8* %53, align 4, !range !8
  %100 = load i8, i8* %54, align 1, !range !8
  br label %103

101:                                              ; preds = %85
  %102 = add i32 %57, 2
  br label %56

103:                                              ; preds = %56, %98
  %104 = phi i8 [ %100, %98 ], [ %64, %56 ]
  %105 = phi i8 [ %99, %98 ], [ %62, %56 ]
  %106 = phi i32 [ %57, %98 ], [ 0, %56 ]
  %107 = add i32 %106, -1
  %108 = icmp eq i8 %105, 0
  %109 = icmp eq i8 %104, 0
  %110 = select i1 %109, i32 1, i32 2
  %111 = xor i1 %109, true
  %112 = zext i1 %111 to i32
  %113 = select i1 %108, i32 %112, i32 %110
  %114 = add i32 %113, %107
  %115 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %47, i32 %114) #11
  %116 = load i8, i8* %53, align 4, !range !8
  %117 = icmp eq i8 %116, 0
  %118 = load i8, i8* %54, align 1, !range !8
  %119 = icmp eq i8 %118, 0
  %120 = select i1 %119, i32 1, i32 2
  %121 = xor i1 %119, true
  %122 = zext i1 %121 to i32
  %123 = select i1 %117, i32 %122, i32 %120
  %124 = add i32 %123, %106
  %125 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %47, i32 %124) #11
  %126 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %7, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %126, i64 %44
  %128 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %127, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %21, %"struct.std::__1::aligned_storage<4, 4>::type"** %22, align 8
  store i64 0, i64* %24, align 8
  store i64 1, i64* %19, align 8
  store i32 %115, i32* %25, align 8
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %128, i64 0, i32 3
  %130 = load i8, i8* %129, align 4, !range !8
  %131 = icmp eq i8 %130, 0
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %128, i64 0, i32 4
  %133 = load i8, i8* %132, align 1, !range !8
  %134 = icmp eq i8 %133, 0
  %135 = select i1 %134, i32 1, i32 2
  %136 = xor i1 %134, true
  %137 = zext i1 %136 to i32
  %138 = select i1 %131, i32 %137, i32 %135
  %139 = add i32 %138, %107
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %128, i64 0, i32 6, i32 0, i32 0
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %143 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %142, i64 %140, i32 1
  %144 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %143, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %145 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %26, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %26, align 8
  %146 = icmp eq %"class.std::__1::vector.3"* %145, null
  br i1 %146, label %158, label %147

147:                                              ; preds = %103
  %148 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %145, i64 0, i32 0, i32 0
  %149 = load i32*, i32** %148, align 8
  %150 = icmp eq i32* %149, null
  br i1 %150, label %156, label %151

151:                                              ; preds = %147
  %152 = ptrtoint i32* %149 to i64
  %153 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %145, i64 0, i32 0, i32 1
  %154 = bitcast i32** %153 to i64*
  store i64 %152, i64* %154, align 8
  %155 = bitcast i32* %149 to i8*
  call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %151, %147
  %157 = bitcast %"class.std::__1::vector.3"* %145 to i8*
  call void @_ZdlPv(i8* %157) #12
  br label %158

158:                                              ; preds = %103, %156
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %31, %"struct.std::__1::aligned_storage<4, 4>::type"** %32, align 8
  store i64 0, i64* %34, align 8
  store i64 1, i64* %29, align 8
  store i32 %125, i32* %35, align 8
  %159 = load i8, i8* %129, align 4, !range !8
  %160 = icmp eq i8 %159, 0
  %161 = load i8, i8* %132, align 1, !range !8
  %162 = icmp eq i8 %161, 0
  %163 = select i1 %162, i32 1, i32 2
  %164 = xor i1 %162, true
  %165 = zext i1 %164 to i32
  %166 = select i1 %160, i32 %165, i32 %163
  %167 = add i32 %166, %106
  %168 = zext i32 %167 to i64
  %169 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %169, i64 %168, i32 1
  %171 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %170, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %172 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %36, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %36, align 8
  %173 = icmp eq %"class.std::__1::vector.3"* %172, null
  br i1 %173, label %185, label %174

174:                                              ; preds = %158
  %175 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %172, i64 0, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = icmp eq i32* %176, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %174
  %179 = ptrtoint i32* %176 to i64
  %180 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %172, i64 0, i32 0, i32 1
  %181 = bitcast i32** %180 to i64*
  store i64 %179, i64* %181, align 8
  %182 = bitcast i32* %176 to i8*
  call void @_ZdlPv(i8* %182) #12
  br label %183

183:                                              ; preds = %178, %174
  %184 = bitcast %"class.std::__1::vector.3"* %172 to i8*
  call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %158, %183
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #11
  %186 = add nuw i64 %44, 1
  %187 = load i64, i64* %9, align 8
  %188 = load i64, i64* %11, align 8
  %189 = sub i64 %187, %188
  %190 = ashr exact i64 %189, 3
  %191 = icmp ult i64 %186, %190
  br i1 %191, label %43, label %37
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #1

declare i64 @_ZN8spvtools3opt4Loop25GetResidualConditionValueE6SpvOp_llmm(i32, i64, i64, i64, i64) local_unnamed_addr #1

declare void @_ZNK8spvtools3opt8analysis13DefUseManager10ForEachUseEPKNS0_11InstructionERKNSt3__18functionIFvPS3_jEEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.1164"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN8spvtools3opt4Loop16SetContinueBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #1

declare void @_ZN8spvtools3opt4Loop13SetLatchBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #1

declare void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIiEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = zext i1 %2 to i8
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.463"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 1
  store i32 32, i32* %12, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 2
  store i8 %7, i8* %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = trunc i32 %17 to i16
  %19 = icmp slt i16 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5
  %22 = tail call i8* @_Znwm(i64 240) #12
  %23 = bitcast i8* %22 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %23, %"class.std::__1::function"* dereferenceable(32) %21, %"class.spvtools::opt::IRContext"* %15) #11
  %24 = ptrtoint i8* %22 to i64
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.480"* %25 to i64*
  store i64 %24, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %27) #11
  %31 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %27 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %30, %20
  %33 = load i32, i32* %16, align 8
  %34 = or i32 %33, 32768
  store i32 %34, i32* %16, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %36, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to %"class.spvtools::opt::analysis::Type"*
  %39 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %37, %"class.spvtools::opt::analysis::Type"* nonnull %38) #11
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = trunc i32 %42 to i16
  %44 = icmp slt i16 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 5
  %47 = call i8* @_Znwm(i64 240) #12
  %48 = bitcast i8* %47 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %48, %"class.std::__1::function"* dereferenceable(32) %46, %"class.spvtools::opt::IRContext"* %40) #11
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.480"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %52) #11
  %56 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %52 to i8*
  call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %55, %45
  %58 = load i32, i32* %41, align 8
  %59 = or i32 %58, 32768
  store i32 %59, i32* %41, align 8
  br label %60

60:                                               ; preds = %35, %57
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %62, i32 %39) #11
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 11
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 16384
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %60
  %70 = call i8* @_Znwm(i64 136) #12
  %71 = bitcast i8* %70 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %71, %"class.spvtools::opt::IRContext"* %64) #11
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.400"* %73 to i64*
  store i64 %72, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %75) #11
  %79 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %75 to i8*
  call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %78, %69
  %81 = load i32, i32* %65, align 8
  %82 = or i32 %81, 16384
  store i32 %82, i32* %65, align 8
  br label %83

83:                                               ; preds = %60, %80
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %84, align 8
  %86 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = call i8* @_Znwm(i64 4) #12
  %88 = bitcast i8* %87 to i32*
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  store i8* %87, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %87, i64 4
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8
  %94 = bitcast i32** %89 to i64*
  store i32 %1, i32* %88, align 4
  %95 = ptrtoint i8* %91 to i64
  store i64 %95, i64* %94, align 8
  %96 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %85, %"class.spvtools::opt::analysis::Type"* %63, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #11
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %83
  %101 = ptrtoint i32* %98 to i64
  store i64 %101, i64* %94, align 8
  %102 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %83, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %104 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 11
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 16384
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %123

109:                                              ; preds = %103
  %110 = call i8* @_Znwm(i64 136) #12
  %111 = bitcast i8* %110 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %111, %"class.spvtools::opt::IRContext"* %104) #11
  %112 = ptrtoint i8* %110 to i64
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.400"* %113 to i64*
  store i64 %112, i64* %116, align 8
  %117 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %115, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %109
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %115) #11
  %119 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %115 to i8*
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %118, %109
  %121 = load i32, i32* %105, align 8
  %122 = or i32 %121, 16384
  store i32 %122, i32* %105, align 8
  br label %123

123:                                              ; preds = %103, %120
  %124 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19, i32 0, i32 0, i32 0
  %125 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %124, align 8
  %126 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %125, %"class.spvtools::opt::analysis::Constant"* %96, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %9, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %127, align 8
  %129 = icmp eq %"class.std::__1::vector.3"* %128, null
  br i1 %129, label %153, label %130

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::vector.3"* %128 to i8*
  %132 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, %128
  br i1 %134, label %151, label %135

135:                                              ; preds = %130, %146
  %136 = phi %"class.std::__1::vector.3"* [ %137, %146 ], [ %133, %130 ]
  %137 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %135
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %141, %135
  %147 = icmp eq %"class.std::__1::vector.3"* %137, %128
  br i1 %147, label %148, label %135

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector.463"* %9 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %148, %130
  %152 = phi i8* [ %150, %148 ], [ %131, %130 ]
  store %"class.std::__1::vector.3"* %128, %"class.std::__1::vector.3"** %132, align 8
  call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %123, %151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret %"class.spvtools::opt::Instruction"* %126
}

declare i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #1

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #1

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD2Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD0Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZN8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZN8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZN8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZNK8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZN8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZN8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZNK8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZN8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZN8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZNK8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZN8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZN8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.3"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.3"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.3"* %3, %"class.std::__1::vector.3"** %4, align 8
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #11
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #11
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #12
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #12
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #12
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #12
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #12
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.1201"**
  %49 = load %"class.std::__1::__tree_node.1201"*, %"class.std::__1::__tree_node.1201"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node.1201"* %49) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node.1201"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1201"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1201"* %1 to %"class.std::__1::__tree_node.1201"**
  %6 = load %"class.std::__1::__tree_node.1201"*, %"class.std::__1::__tree_node.1201"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1201"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1201", %"class.std::__1::__tree_node.1201"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1201"**
  %9 = load %"class.std::__1::__tree_node.1201"*, %"class.std::__1::__tree_node.1201"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1201"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1201"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = zext i1 %2 to i8
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.463"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 1
  store i32 32, i32* %12, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 2
  store i8 %7, i8* %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = trunc i32 %17 to i16
  %19 = icmp slt i16 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5
  %22 = tail call i8* @_Znwm(i64 240) #12
  %23 = bitcast i8* %22 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %23, %"class.std::__1::function"* dereferenceable(32) %21, %"class.spvtools::opt::IRContext"* %15) #11
  %24 = ptrtoint i8* %22 to i64
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.480"* %25 to i64*
  store i64 %24, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %27) #11
  %31 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %27 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %30, %20
  %33 = load i32, i32* %16, align 8
  %34 = or i32 %33, 32768
  store i32 %34, i32* %16, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %36, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to %"class.spvtools::opt::analysis::Type"*
  %39 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %37, %"class.spvtools::opt::analysis::Type"* nonnull %38) #11
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = trunc i32 %42 to i16
  %44 = icmp slt i16 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 5
  %47 = call i8* @_Znwm(i64 240) #12
  %48 = bitcast i8* %47 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %48, %"class.std::__1::function"* dereferenceable(32) %46, %"class.spvtools::opt::IRContext"* %40) #11
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.480"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %52) #11
  %56 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %52 to i8*
  call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %55, %45
  %58 = load i32, i32* %41, align 8
  %59 = or i32 %58, 32768
  store i32 %59, i32* %41, align 8
  br label %60

60:                                               ; preds = %35, %57
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %62, i32 %39) #11
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 11
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 16384
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %60
  %70 = call i8* @_Znwm(i64 136) #12
  %71 = bitcast i8* %70 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %71, %"class.spvtools::opt::IRContext"* %64) #11
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.400"* %73 to i64*
  store i64 %72, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %75) #11
  %79 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %75 to i8*
  call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %78, %69
  %81 = load i32, i32* %65, align 8
  %82 = or i32 %81, 16384
  store i32 %82, i32* %65, align 8
  br label %83

83:                                               ; preds = %60, %80
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %84, align 8
  %86 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = call i8* @_Znwm(i64 4) #12
  %88 = bitcast i8* %87 to i32*
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  store i8* %87, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %87, i64 4
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8
  %94 = bitcast i32** %89 to i64*
  store i32 %1, i32* %88, align 4
  %95 = ptrtoint i8* %91 to i64
  store i64 %95, i64* %94, align 8
  %96 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %85, %"class.spvtools::opt::analysis::Type"* %63, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #11
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %83
  %101 = ptrtoint i32* %98 to i64
  store i64 %101, i64* %94, align 8
  %102 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %83, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %104 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 11
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 16384
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %123

109:                                              ; preds = %103
  %110 = call i8* @_Znwm(i64 136) #12
  %111 = bitcast i8* %110 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %111, %"class.spvtools::opt::IRContext"* %104) #11
  %112 = ptrtoint i8* %110 to i64
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.400"* %113 to i64*
  store i64 %112, i64* %116, align 8
  %117 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %115, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %109
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %115) #11
  %119 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %115 to i8*
  call void @_ZdlPv(i8* %119) #12
  br label %120

120:                                              ; preds = %118, %109
  %121 = load i32, i32* %105, align 8
  %122 = or i32 %121, 16384
  store i32 %122, i32* %105, align 8
  br label %123

123:                                              ; preds = %103, %120
  %124 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19, i32 0, i32 0, i32 0
  %125 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %124, align 8
  %126 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %125, %"class.spvtools::opt::analysis::Constant"* %96, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %9, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %127, align 8
  %129 = icmp eq %"class.std::__1::vector.3"* %128, null
  br i1 %129, label %153, label %130

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::vector.3"* %128 to i8*
  %132 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, %128
  br i1 %134, label %151, label %135

135:                                              ; preds = %130, %146
  %136 = phi %"class.std::__1::vector.3"* [ %137, %146 ], [ %133, %130 ]
  %137 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %135
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %141, %135
  %147 = icmp eq %"class.std::__1::vector.3"* %137, %128
  br i1 %147, label %148, label %135

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector.463"* %9 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %148, %130
  %152 = phi i8* [ %150, %148 ], [ %131, %130 ]
  store %"class.std::__1::vector.3"* %128, %"class.std::__1::vector.3"** %132, align 8
  call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %123, %151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret %"class.spvtools::opt::Instruction"* %126
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEjEE11__call_implINS0_20__default_alloc_funcIZNS3_12_GLOBAL__N_121LoopUnrollerUtilsImpl29PartiallyUnrollResidualFactorEPNS3_4LoopEmE3$_0S6_EEEEvPKNS0_16__policy_storageES5_j"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32) #0 align 2 {
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Loop"**
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* %6, %"class.spvtools::opt::Instruction"* %1) #11
  br i1 %7, label %41, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %11 = bitcast [8 x i8]* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %17 = bitcast i32** %15 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %16, %"struct.std::__1::aligned_storage<4, 4>::type"** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %19 = bitcast %"class.std::__1::unique_ptr.0"* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %16 to i32*
  store i64 1, i64* %14, align 8
  store i32 %12, i32* %20, align 8
  %21 = zext i32 %2 to i64
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %23 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %24 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %23, i64 %21, i32 1
  %25 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %24, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %26, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %26, align 8
  %28 = icmp eq %"class.std::__1::vector.3"* %27, null
  br i1 %28, label %40, label %29

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %27, i64 0, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = icmp eq i32* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint i32* %31 to i64
  %35 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %27, i64 0, i32 0, i32 1
  %36 = bitcast i32** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast i32* %31 to i8*
  call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %33, %29
  %39 = bitcast %"class.std::__1::vector.3"* %27 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %38, %8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #11
  br label %41

41:                                               ; preds = %3, %40
  ret void
}

declare zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairIPN8spvtools3opt4LoopENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_9allocatorISA_EEE24__emplace_back_slow_pathIJSA_EEEvDpOT_(%"class.std::__1::vector.963"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.963"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.963"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"struct.std::__1::pair"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.std::__1::pair"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %35
  %39 = ptrtoint %"struct.std::__1::pair"* %38 to i64
  %40 = bitcast %"struct.std::__1::pair"* %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"struct.std::__1::pair"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %9, i32 1
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.965"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::unique_ptr.965"* %44 to i64*
  %47 = load i64, i64* %46, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %45, align 8
  %48 = bitcast %"class.std::__1::unique_ptr.965"* %43 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %50 = ptrtoint %"struct.std::__1::pair"* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector.963", %"class.std::__1::vector.963"* %0, i64 0, i32 0, i32 0
  %52 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %51, align 8
  %53 = ptrtoint %"struct.std::__1::pair"* %52 to i64
  %54 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %55 = icmp eq %"struct.std::__1::pair"* %54, %52
  br i1 %55, label %138, label %56

56:                                               ; preds = %34
  %57 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 -1, i32 0
  %58 = ptrtoint %"class.spvtools::opt::Loop"** %57 to i64
  %59 = sub i64 %58, %53
  %60 = lshr i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %56, %64
  %65 = phi %"struct.std::__1::pair"* [ %68, %64 ], [ %37, %56 ]
  %66 = phi %"struct.std::__1::pair"* [ %69, %64 ], [ %54, %56 ]
  %67 = phi i64 [ %79, %64 ], [ %62, %56 ]
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 -1
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 -1
  %70 = bitcast %"struct.std::__1::pair"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"struct.std::__1::pair"* %68 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %65, i64 -1, i32 1
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %66, i64 -1, i32 1
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.965"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr.965"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %75, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.965"* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = add i64 %67, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %64, !llvm.loop !77

81:                                               ; preds = %64, %56
  %82 = phi %"struct.std::__1::pair"* [ undef, %56 ], [ %68, %64 ]
  %83 = phi %"struct.std::__1::pair"* [ %37, %56 ], [ %68, %64 ]
  %84 = phi %"struct.std::__1::pair"* [ %54, %56 ], [ %69, %64 ]
  %85 = icmp ult i64 %59, 48
  br i1 %85, label %134, label %86

86:                                               ; preds = %81, %86
  %87 = phi %"struct.std::__1::pair"* [ %122, %86 ], [ %83, %81 ]
  %88 = phi %"struct.std::__1::pair"* [ %123, %86 ], [ %84, %81 ]
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -1
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -1
  %91 = bitcast %"struct.std::__1::pair"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"struct.std::__1::pair"* %89 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -1, i32 1
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -1, i32 1
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.965"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr.965"* %95 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %96, align 8
  %99 = bitcast %"class.std::__1::unique_ptr.965"* %94 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -2
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -2
  %102 = bitcast %"struct.std::__1::pair"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair"* %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -2, i32 1
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -2, i32 1
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.965"* %106, i64 0, i32 0, i32 0, i32 0
  %108 = bitcast %"class.std::__1::unique_ptr.965"* %106 to i64*
  %109 = load i64, i64* %108, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %107, align 8
  %110 = bitcast %"class.std::__1::unique_ptr.965"* %105 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -3
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -3
  %113 = bitcast %"struct.std::__1::pair"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair"* %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -3, i32 1
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -3, i32 1
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.965"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr.965"* %117 to i64*
  %120 = load i64, i64* %119, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %118, align 8
  %121 = bitcast %"class.std::__1::unique_ptr.965"* %116 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -4
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -4
  %124 = bitcast %"struct.std::__1::pair"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"struct.std::__1::pair"* %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 -4, i32 1
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %88, i64 -4, i32 1
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.965"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = bitcast %"class.std::__1::unique_ptr.965"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %129, align 8
  %132 = bitcast %"class.std::__1::unique_ptr.965"* %127 to i64*
  store i64 %131, i64* %132, align 8
  %133 = icmp eq %"struct.std::__1::pair"* %123, %52
  br i1 %133, label %134, label %86

134:                                              ; preds = %86, %81
  %135 = phi %"struct.std::__1::pair"* [ %82, %81 ], [ %122, %86 ]
  %136 = load i64, i64* %6, align 8
  %137 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  br label %138

138:                                              ; preds = %34, %134
  %139 = phi %"struct.std::__1::pair"* [ %137, %134 ], [ %52, %34 ]
  %140 = phi %"struct.std::__1::pair"* [ %135, %134 ], [ %37, %34 ]
  %141 = phi i64 [ %136, %134 ], [ %53, %34 ]
  %142 = ptrtoint %"struct.std::__1::pair"* %140 to i64
  store i64 %142, i64* %6, align 8
  store i64 %50, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %143 = inttoptr i64 %141 to %"struct.std::__1::pair"*
  %144 = icmp eq %"struct.std::__1::pair"* %139, %143
  br i1 %144, label %180, label %145

145:                                              ; preds = %138, %178
  %146 = phi %"struct.std::__1::pair"* [ %147, %178 ], [ %139, %138 ]
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %146, i64 -1
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %146, i64 -1, i32 1, i32 0, i32 0, i32 0
  %149 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %148, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %148, align 8
  %150 = icmp eq %"class.spvtools::opt::Loop"* %149, null
  br i1 %150, label %178, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %149, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base.922"* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %151, %155
  %156 = phi %"struct.std::__1::__hash_node_base.922"* [ %158, %155 ], [ %153, %151 ]
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %156, i64 0, i32 0
  %158 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %157, align 8
  %159 = bitcast %"struct.std::__1::__hash_node_base.922"* %156 to i8*
  tail call void @_ZdlPv(i8* %159) #12
  %160 = icmp eq %"struct.std::__1::__hash_node_base.922"* %158, null
  br i1 %160, label %161, label %155

161:                                              ; preds = %155, %151
  %162 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %149, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %162, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %162, align 8
  %164 = icmp eq %"struct.std::__1::__hash_node_base.922"** %163, null
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = bitcast %"struct.std::__1::__hash_node_base.922"** %163 to i8*
  tail call void @_ZdlPv(i8* %166) #12
  br label %167

167:                                              ; preds = %165, %161
  %168 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %149, i64 0, i32 7, i32 0, i32 0
  %169 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %168, align 8
  %170 = icmp eq %"class.spvtools::opt::Loop"** %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %167
  %172 = ptrtoint %"class.spvtools::opt::Loop"** %169 to i64
  %173 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %149, i64 0, i32 7, i32 0, i32 1
  %174 = bitcast %"class.spvtools::opt::Loop"*** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = bitcast %"class.spvtools::opt::Loop"** %169 to i8*
  tail call void @_ZdlPv(i8* %175) #12
  br label %176

176:                                              ; preds = %171, %167
  %177 = bitcast %"class.spvtools::opt::Loop"* %149 to i8*
  tail call void @_ZdlPv(i8* %177) #12
  br label %178

178:                                              ; preds = %176, %145
  %179 = icmp eq %"struct.std::__1::pair"* %147, %143
  br i1 %179, label %180, label %145

180:                                              ; preds = %178, %138
  %181 = icmp eq i64 %141, 0
  br i1 %181, label %184, label %182

182:                                              ; preds = %180
  %183 = inttoptr i64 %141 to i8*
  tail call void @_ZdlPv(i8* %183) #12
  br label %184

184:                                              ; preds = %180, %182
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::pair.990"*, align 8
  %3 = alloca %"struct.std::__1::pair.990"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1212", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.990"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %11, i64 1
  store %"struct.std::__1::pair.990"** %14, %"struct.std::__1::pair.990"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.990"** %16, %18
  %20 = ptrtoint %"struct.std::__1::pair.990"** %18 to i64
  %21 = bitcast %"struct.std::__1::pair.990"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %23, align 8
  %25 = icmp ugt %"struct.std::__1::pair.990"** %14, %24
  %26 = ptrtoint %"struct.std::__1::pair.990"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.std::__1::pair.990"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %14, i64 %32
  %34 = ptrtoint %"struct.std::__1::pair.990"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.std::__1::pair.990"** %33 to i8*
  %40 = bitcast %"struct.std::__1::pair.990"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #11
  %41 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.std::__1::pair.990"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %33, i64 %36
  store %"struct.std::__1::pair.990"** %44, %"struct.std::__1::pair.990"*** %15, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %43, i64 %32
  store %"struct.std::__1::pair.990"** %45, %"struct.std::__1::pair.990"*** %10, align 8
  %46 = bitcast %"struct.std::__1::pair.990"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.std::__1::pair.990"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #13
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"struct.std::__1::pair.990"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %60, i64 %57
  %63 = ptrtoint %"struct.std::__1::pair.990"** %62 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %60, i64 %53
  %65 = ptrtoint %"struct.std::__1::pair.990"** %64 to i64
  %66 = ptrtoint %"struct.std::__1::pair.990"** %14 to i64
  %67 = ptrtoint %"struct.std::__1::pair.990"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.std::__1::pair.990"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.std::__1::pair.990"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.std::__1::pair.990"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %79, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.990"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !78

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.std::__1::pair.990"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.std::__1::pair.990"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.std::__1::pair.990"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.std::__1::pair.990"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.std::__1::pair.990"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.std::__1::pair.990"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %99, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %101, i64 1
  %107 = bitcast %"struct.std::__1::pair.990"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.990"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %99, i64 2
  %111 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %101, i64 2
  %112 = bitcast %"struct.std::__1::pair.990"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.990"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %99, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %101, i64 3
  %117 = bitcast %"struct.std::__1::pair.990"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.990"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %99, i64 4
  %121 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %101, i64 4
  %122 = bitcast %"struct.std::__1::pair.990"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.990"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %99, i64 5
  %126 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %101, i64 5
  %127 = bitcast %"struct.std::__1::pair.990"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.990"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %99, i64 6
  %131 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %101, i64 6
  %132 = bitcast %"struct.std::__1::pair.990"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair.990"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %99, i64 7
  %136 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %101, i64 7
  %137 = bitcast %"struct.std::__1::pair.990"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair.990"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %99, i64 8
  %141 = ptrtoint %"struct.std::__1::pair.990"** %140 to i64
  %142 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %101, i64 8
  %143 = icmp eq %"struct.std::__1::pair.990"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.std::__1::pair.990"** %70 to i64
  %146 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.std::__1::pair.990"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.std::__1::pair.990"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair.990"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.std::__1::pair.990"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.std::__1::pair.990"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast %"struct.std::__1::pair.990"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %15, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %160, i64 1
  store %"struct.std::__1::pair.990"** %161, %"struct.std::__1::pair.990"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::pair.990"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.990"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.990"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.std::__1::pair.990"**
  %181 = inttoptr i64 %169 to %"struct.std::__1::pair.990"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.std::__1::pair.990"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #11
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast %"struct.std::__1::pair.990"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.990"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #11
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.std::__1::pair.990"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #11
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast %"struct.std::__1::pair.990"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.990"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #11
  %192 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %167, align 8
  %193 = bitcast %"struct.std::__1::pair.990"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %192, i64 1
  store %"struct.std::__1::pair.990"** %195, %"struct.std::__1::pair.990"*** %167, align 8
  %196 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %164, align 8
  %197 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %172, align 8
  %198 = icmp eq %"struct.std::__1::pair.990"** %196, %197
  %199 = ptrtoint %"struct.std::__1::pair.990"** %197 to i64
  %200 = bitcast %"struct.std::__1::pair.990"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %202, align 8
  %204 = icmp ugt %"struct.std::__1::pair.990"** %195, %203
  %205 = ptrtoint %"struct.std::__1::pair.990"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.std::__1::pair.990"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %195, i64 %211
  %213 = ptrtoint %"struct.std::__1::pair.990"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.std::__1::pair.990"** %212 to i8*
  %219 = bitcast %"struct.std::__1::pair.990"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #11
  %220 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.std::__1::pair.990"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %212, i64 %215
  store %"struct.std::__1::pair.990"** %223, %"struct.std::__1::pair.990"*** %164, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %222, i64 %211
  store %"struct.std::__1::pair.990"** %224, %"struct.std::__1::pair.990"*** %167, align 8
  %225 = bitcast %"struct.std::__1::pair.990"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #13
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to %"struct.std::__1::pair.990"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %237, i64 %234
  %240 = ptrtoint %"struct.std::__1::pair.990"** %239 to i64
  %241 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %237, i64 %230
  %242 = ptrtoint %"struct.std::__1::pair.990"** %241 to i64
  %243 = ptrtoint %"struct.std::__1::pair.990"** %195 to i64
  %244 = ptrtoint %"struct.std::__1::pair.990"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.std::__1::pair.990"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.std::__1::pair.990"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.std::__1::pair.990"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %256, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.990"** %263 to i64
  %265 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !79

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.std::__1::pair.990"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.std::__1::pair.990"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.std::__1::pair.990"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.std::__1::pair.990"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.std::__1::pair.990"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.std::__1::pair.990"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %276, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %278, i64 1
  %284 = bitcast %"struct.std::__1::pair.990"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::pair.990"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %276, i64 2
  %288 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %278, i64 2
  %289 = bitcast %"struct.std::__1::pair.990"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.std::__1::pair.990"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %276, i64 3
  %293 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %278, i64 3
  %294 = bitcast %"struct.std::__1::pair.990"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.std::__1::pair.990"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %276, i64 4
  %298 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %278, i64 4
  %299 = bitcast %"struct.std::__1::pair.990"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.std::__1::pair.990"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %276, i64 5
  %303 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %278, i64 5
  %304 = bitcast %"struct.std::__1::pair.990"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.std::__1::pair.990"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %276, i64 6
  %308 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %278, i64 6
  %309 = bitcast %"struct.std::__1::pair.990"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.std::__1::pair.990"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %276, i64 7
  %313 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %278, i64 7
  %314 = bitcast %"struct.std::__1::pair.990"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.std::__1::pair.990"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %276, i64 8
  %318 = ptrtoint %"struct.std::__1::pair.990"** %317 to i64
  %319 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %278, i64 8
  %320 = icmp eq %"struct.std::__1::pair.990"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.std::__1::pair.990"** %247 to i64
  %323 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.std::__1::pair.990"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.std::__1::pair.990"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.std::__1::pair.990"** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast %"struct.std::__1::pair.990"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %164, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %335, i64 1
  store %"struct.std::__1::pair.990"** %336, %"struct.std::__1::pair.990"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1212"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #11
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1212", %"struct.std::__1::__split_buffer.1212"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1212", %"struct.std::__1::__split_buffer.1212"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1212", %"struct.std::__1::__split_buffer.1212"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1212", %"struct.std::__1::__split_buffer.1212"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1212"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.990"** null, %"struct.std::__1::pair.990"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.994"** %342 to %"class.std::__1::__compressed_pair.991"**
  store %"class.std::__1::__compressed_pair.991"* %346, %"class.std::__1::__compressed_pair.991"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #13
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to %"struct.std::__1::pair.990"**
  %355 = bitcast %"struct.std::__1::__split_buffer.1212"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %354, i64 %171
  store %"struct.std::__1::pair.990"** %356, %"struct.std::__1::pair.990"*** %340, align 8
  store %"struct.std::__1::pair.990"** %356, %"struct.std::__1::pair.990"*** %339, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %354, i64 %345
  store %"struct.std::__1::pair.990"** %357, %"struct.std::__1::pair.990"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.std::__1::pair.990"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.std::__1::pair.990"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.std::__1::pair.990"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %356, i64 %370
  store %"struct.std::__1::pair.990"** %371, %"struct.std::__1::pair.990"*** %340, align 8
  store %"struct.std::__1::pair.990"** %371, %"struct.std::__1::pair.990"*** %339, align 8
  %372 = ptrtoint %"struct.std::__1::pair.990"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #13
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1212"* %4 to i64*
  %382 = bitcast %"struct.std::__1::pair.990"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"struct.std::__1::pair.990"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %386, i64 %383
  %389 = ptrtoint %"struct.std::__1::pair.990"** %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %386, i64 %377
  %391 = ptrtoint %"struct.std::__1::pair.990"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.std::__1::pair.990"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.std::__1::pair.990"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %164, align 8
  %395 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %167, align 8
  %396 = ptrtoint %"struct.std::__1::pair.990"** %395 to i64
  %397 = ptrtoint %"struct.std::__1::pair.990"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.std::__1::pair.990"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.std::__1::pair.990"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.std::__1::pair.990"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.std::__1::pair.990"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %406, i64 1
  store %"struct.std::__1::pair.990"** %408, %"struct.std::__1::pair.990"*** %340, align 8
  %409 = icmp eq %"struct.std::__1::pair.990"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.std::__1::pair.990"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1212"* %4 to i64*
  %413 = bitcast %"struct.std::__1::pair.990"*** %339 to i64*
  %414 = bitcast %"struct.std::__1::pair.990"*** %340 to i64*
  %415 = bitcast %"struct.std::__1::pair.990"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.std::__1::pair.990"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1212"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.std::__1::pair.990"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.std::__1::pair.990"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.std::__1::pair.990"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.std::__1::pair.990"**
  %441 = inttoptr i64 %434 to %"struct.std::__1::pair.990"**
  %442 = icmp eq %"struct.std::__1::pair.990"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %441, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.990"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %441, i64 %448
  store %"struct.std::__1::pair.990"** %449, %"struct.std::__1::pair.990"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #11
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.std::__1::pair.990"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1212"* nonnull %4, %"struct.std::__1::pair.990"** dereferenceable(8) %457)
  %458 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %167, align 8
  %459 = icmp eq %"struct.std::__1::pair.990"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.990"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.990"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.990"** %6 to i64
  %9 = bitcast %"struct.std::__1::pair.990"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.990"** %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.990"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.990"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %12, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.990"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.std::__1::pair.990"** %23 to i8*
  %30 = bitcast %"struct.std::__1::pair.990"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.std::__1::pair.990"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %23, i64 %26
  store %"struct.std::__1::pair.990"** %34, %"struct.std::__1::pair.990"*** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %33, i64 %22
  store %"struct.std::__1::pair.990"** %35, %"struct.std::__1::pair.990"*** %11, align 8
  %36 = bitcast %"struct.std::__1::pair.990"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.std::__1::pair.990"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.990"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %50, i64 %47
  %53 = ptrtoint %"struct.std::__1::pair.990"** %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %50, i64 %43
  %55 = ptrtoint %"struct.std::__1::pair.990"** %54 to i64
  %56 = ptrtoint %"struct.std::__1::pair.990"** %12 to i64
  %57 = ptrtoint %"struct.std::__1::pair.990"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.990"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.std::__1::pair.990"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.std::__1::pair.990"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %69, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.990"** %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !80

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.std::__1::pair.990"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.std::__1::pair.990"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.std::__1::pair.990"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.std::__1::pair.990"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.std::__1::pair.990"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.std::__1::pair.990"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %89, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %91, i64 1
  %97 = bitcast %"struct.std::__1::pair.990"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.std::__1::pair.990"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %89, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %91, i64 2
  %102 = bitcast %"struct.std::__1::pair.990"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.990"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %89, i64 3
  %106 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %91, i64 3
  %107 = bitcast %"struct.std::__1::pair.990"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.990"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %89, i64 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %91, i64 4
  %112 = bitcast %"struct.std::__1::pair.990"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.990"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %89, i64 5
  %116 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %91, i64 5
  %117 = bitcast %"struct.std::__1::pair.990"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.990"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %89, i64 6
  %121 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %91, i64 6
  %122 = bitcast %"struct.std::__1::pair.990"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.990"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %89, i64 7
  %126 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %91, i64 7
  %127 = bitcast %"struct.std::__1::pair.990"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.990"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %89, i64 8
  %131 = ptrtoint %"struct.std::__1::pair.990"** %130 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %91, i64 8
  %133 = icmp eq %"struct.std::__1::pair.990"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.std::__1::pair.990"** %60 to i64
  %136 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.std::__1::pair.990"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.std::__1::pair.990"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.std::__1::pair.990"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.std::__1::pair.990"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.std::__1::pair.990"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"struct.std::__1::pair.990"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.std::__1::pair.990"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %3, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %152, i64 1
  store %"struct.std::__1::pair.990"** %153, %"struct.std::__1::pair.990"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.990"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.990"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.990"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.990"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.990"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.990"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.990"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.990"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.990"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.990"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.990"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.990"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.990"** %36, %"struct.std::__1::pair.990"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %35, i64 %22
  store %"struct.std::__1::pair.990"** %37, %"struct.std::__1::pair.990"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.990"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.990"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.990"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.990"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.990"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.990"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.990"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.990"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.990"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !81

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.990"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.990"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.990"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.990"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.990"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.990"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.990"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.990"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.990"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.990"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.990"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.990"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.990"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.990"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.990"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.990"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.990"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.990"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.990"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.990"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.990"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.990"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.990"** %61 to i64
  %137 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.990"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.990"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.990"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.990"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.990"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.990"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.990"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.990"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %153, i64 -1
  store %"struct.std::__1::pair.990"** %154, %"struct.std::__1::pair.990"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1212"*, %"struct.std::__1::pair.990"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1212", %"struct.std::__1::__split_buffer.1212"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1212", %"struct.std::__1::__split_buffer.1212"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.990"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.990"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1212", %"struct.std::__1::__split_buffer.1212"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1212", %"struct.std::__1::__split_buffer.1212"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.990"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.990"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.990"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.990"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.990"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.990"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.990"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.990"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.990"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.990"** %36, %"struct.std::__1::pair.990"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %35, i64 %22
  store %"struct.std::__1::pair.990"** %37, %"struct.std::__1::pair.990"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1212"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #13
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.990"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.990"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.990"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.990"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.990"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.990"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.990"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.990"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.990"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !82

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.990"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.990"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.990"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.990"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.990"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.990"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.990"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.990"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.990"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.990"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.990"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.990"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.990"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.990"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.990"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.990"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.990"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.990"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.990"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.990"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.990"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.990"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.990"** %61 to i64
  %137 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.990"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.990"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.990"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.990"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.990"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.990"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.990"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.990"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %153, i64 -1
  store %"struct.std::__1::pair.990"** %154, %"struct.std::__1::pair.990"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::Loop"* %3, null
  br i1 %4, label %122, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %2, align 8
  br label %122

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %7, -1
  %14 = add i64 %12, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %16, i64 %17
  %19 = load %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.std::__1::pair.990", %"struct.std::__1::pair.990"* %19, i64 %20, i32 0
  %22 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %22, i64 0, i32 7, i32 0, i32 1
  %24 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.990", %"struct.std::__1::pair.990"* %19, i64 %20, i32 1, i32 0
  %26 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %25, align 8
  %27 = icmp eq %"class.spvtools::opt::Loop"** %26, %24
  br i1 %27, label %28, label %51

28:                                               ; preds = %10
  %29 = ptrtoint %"struct.std::__1::pair.990"** %16 to i64
  %30 = ptrtoint %"class.spvtools::opt::Loop"* %22 to i64
  %31 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %0 to i64*
  store i64 %30, i64* %31, align 8
  store i64 %13, i64* %6, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %33 = bitcast %"struct.std::__1::pair.990"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %29
  %36 = icmp eq i64 %35, 0
  %37 = shl i64 %35, 5
  %38 = add i64 %37, -1
  %39 = select i1 %36, i64 0, i64 %38
  %40 = sub i64 1, %7
  %41 = sub i64 %40, %12
  %42 = add i64 %41, %39
  %43 = icmp ult i64 %42, 512
  br i1 %43, label %122, label %44

44:                                               ; preds = %28
  %45 = inttoptr i64 %34 to %"struct.std::__1::pair.990"**
  %46 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %45, i64 -1
  %47 = bitcast %"struct.std::__1::pair.990"** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #12
  %49 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %32, align 8
  %50 = getelementptr %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %49, i64 -1
  store %"struct.std::__1::pair.990"** %50, %"struct.std::__1::pair.990"*** %32, align 8
  br label %122

51:                                               ; preds = %10
  %52 = bitcast %"class.spvtools::opt::Loop"** %26 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %0 to i64*
  store i64 %53, i64* %54, align 8
  %55 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %25, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %55, i64 1
  store %"class.spvtools::opt::Loop"** %56, %"class.spvtools::opt::Loop"*** %25, align 8
  %57 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %57, i64 0, i32 7, i32 0, i32 0
  %59 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %57, i64 0, i32 7, i32 0, i32 1
  %61 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %60, align 8
  %62 = icmp eq %"class.spvtools::opt::Loop"** %59, %61
  br i1 %62, label %122, label %63

63:                                               ; preds = %51
  %64 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %65 = bitcast %"struct.std::__1::pair.990"*** %64 to i64*
  %66 = bitcast %"struct.std::__1::pair.990"*** %15 to i64*
  %67 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0
  %68 = load i64, i64* %6, align 8
  br label %69

69:                                               ; preds = %104, %63
  %70 = phi i64 [ %68, %63 ], [ %110, %104 ]
  %71 = phi %"class.spvtools::opt::Loop"** [ %59, %63 ], [ %118, %104 ]
  %72 = phi %"class.spvtools::opt::Loop"* [ %57, %63 ], [ %116, %104 ]
  %73 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %71, i64 1
  %74 = load i64, i64* %65, align 8
  %75 = load i64, i64* %66, align 8
  %76 = sub i64 %74, %75
  %77 = icmp eq i64 %76, 0
  %78 = shl i64 %76, 5
  %79 = add i64 %78, -1
  %80 = select i1 %77, i64 0, i64 %79
  %81 = load i64, i64* %11, align 8
  %82 = add i64 %81, %70
  %83 = icmp eq i64 %80, %82
  %84 = inttoptr i64 %75 to %"struct.std::__1::pair.990"**
  %85 = inttoptr i64 %74 to %"struct.std::__1::pair.990"**
  br i1 %83, label %86, label %92

86:                                               ; preds = %69
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %67) #11
  %87 = load i64, i64* %6, align 8
  %88 = load i64, i64* %11, align 8
  %89 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %15, align 8
  %90 = load %"struct.std::__1::pair.990"**, %"struct.std::__1::pair.990"*** %64, align 8
  %91 = add i64 %88, %87
  br label %92

92:                                               ; preds = %86, %69
  %93 = phi i64 [ %91, %86 ], [ %82, %69 ]
  %94 = phi %"struct.std::__1::pair.990"** [ %90, %86 ], [ %85, %69 ]
  %95 = phi %"struct.std::__1::pair.990"** [ %89, %86 ], [ %84, %69 ]
  %96 = icmp eq %"struct.std::__1::pair.990"** %94, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %92
  %98 = lshr i64 %93, 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %95, i64 %98
  %100 = load %"struct.std::__1::pair.990"*, %"struct.std::__1::pair.990"** %99, align 8
  %101 = and i64 %93, 255
  %102 = getelementptr inbounds %"struct.std::__1::pair.990", %"struct.std::__1::pair.990"* %100, i64 %101
  %103 = bitcast %"struct.std::__1::pair.990"* %102 to i8*
  br label %104

104:                                              ; preds = %97, %92
  %105 = phi i8* [ %103, %97 ], [ null, %92 ]
  %106 = bitcast i8* %105 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %72, %"class.spvtools::opt::Loop"** %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  %108 = bitcast i8* %107 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %73, %"class.spvtools::opt::Loop"*** %108, align 8
  %109 = load i64, i64* %6, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %6, align 8
  %111 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %111, i64 0, i32 7, i32 0, i32 0
  %113 = bitcast %"class.spvtools::opt::Loop"*** %112 to i64**
  %114 = load i64*, i64** %113, align 8
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %54, align 8
  %116 = inttoptr i64 %115 to %"class.spvtools::opt::Loop"*
  %117 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 0
  %118 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 1
  %120 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %119, align 8
  %121 = icmp eq %"class.spvtools::opt::Loop"** %118, %120
  br i1 %121, label %122, label %69

122:                                              ; preds = %104, %51, %44, %28, %1, %9
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK8spvtools3opt10BasicBlock5ctailEv: argument 0"}
!4 = distinct !{!4, !"_ZNK8spvtools3opt10BasicBlock5ctailEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK8spvtools3opt10BasicBlock5ctailEv: argument 0"}
!7 = distinct !{!7, !"_ZNK8spvtools3opt10BasicBlock5ctailEv"}
!8 = !{i8 0, i8 2}
!9 = !{i64 0, i64 65}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK8spvtools3opt10BasicBlock5ctailEv: argument 0"}
!12 = distinct !{!12, !"_ZNK8spvtools3opt10BasicBlock5ctailEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK8spvtools3opt10BasicBlock5ctailEv: argument 0"}
!15 = distinct !{!15, !"_ZNK8spvtools3opt10BasicBlock5ctailEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!18 = distinct !{!18, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!23 = distinct !{!23, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!24 = distinct !{!24, !20}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK8spvtools3opt10BasicBlock5ctailEv: argument 0"}
!27 = distinct !{!27, !"_ZNK8spvtools3opt10BasicBlock5ctailEv"}
!28 = !{!29, !31}
!29 = distinct !{!29, !30, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_: argument 0"}
!30 = distinct !{!30, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_"}
!31 = distinct !{!31, !32, !"_ZN8spvtools3opt14LoopDescriptor5beginEv: argument 0"}
!32 = distinct !{!32, !"_ZN8spvtools3opt14LoopDescriptor5beginEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!35 = distinct !{!35, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!38 = distinct !{!38, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!39 = distinct !{!39, !20}
!40 = distinct !{!40, !20}
!41 = distinct !{!41, !20}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!44 = distinct !{!44, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!45 = distinct !{!45, !20}
!46 = distinct !{!46, !20}
!47 = distinct !{!47, !20}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISQ_EEEEEEmOT_DpOT0_"}
!51 = distinct !{!51, !20}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!55 = distinct !{!55, !20}
!56 = distinct !{!56, !20}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_IST_EEEEEEmOT_DpOT0_"}
!60 = distinct !{!60, !20}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt11InstructionEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS2_S7_S5_Lb1EEENS_9allocatorIS2_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSI_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISP_EEEEEEmOT_DpOT0_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!69 = distinct !{!69, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!70 = distinct !{!70, !20}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!73 = distinct !{!73, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!74 = distinct !{!74, !20}
!75 = distinct !{!75, !20}
!76 = distinct !{!76, !20}
!77 = distinct !{!77, !20}
!78 = distinct !{!78, !20}
!79 = distinct !{!79, !20}
!80 = distinct !{!80, !20}
!81 = distinct !{!81, !20}
!82 = distinct !{!82, !20}
